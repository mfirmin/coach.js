(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.coach = factory());
}(this, (function () { 'use strict';

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
}

function unwrapExports (x) {
	return x && x.__esModule ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var classCallCheck = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
});

var _classCallCheck = unwrapExports(classCallCheck);

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
});

var _aFunction = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function(fn, that, length){
  _aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};

var _isObject = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function(it){
  if(!_isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});

var document$1 = _global.document;
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function(it){
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function(){
  return Object.defineProperty(_domCreate('div'), 'a', {get: function(){ return 7; }}).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function(it, S){
  if(!_isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP             = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes){
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if(_ie8DomDefine)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};

var _hide = _descriptors ? function(object, key, value){
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};

var PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? _core : _core[name] || (_core[name] = {})
    , expProto  = exports[PROTOTYPE]
    , target    = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? _ctx(out, _global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(a, b, c){
        if(this instanceof C){
          switch(arguments.length){
            case 0: return new C;
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if(IS_PROTO){
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if(type & $export.R && expProto && !expProto[key])_hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
var _export = $export;

// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
_export(_export.S + _export.F * !_descriptors, 'Object', {defineProperty: _objectDp.f});

var $Object = _core.Object;
var defineProperty$2 = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};

var defineProperty = createCommonjsModule(function (module) {
module.exports = { "default": defineProperty$2, __esModule: true };
});

var createClass = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _defineProperty2 = _interopRequireDefault(defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
});

var _createClass = unwrapExports(createClass);

var KP = 300;
var KD = 30;

var PDController = function () {
    function PDController(joint, goal) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        _classCallCheck(this, PDController);

        this.goal = goal;
        this.joint = joint;

        this.kp = options.kp === undefined ? KP : options.kp;
        this.kd = options.kd === undefined ? KD : options.kd;
        this.goalVelocity = options.goalVelocity === undefined ? 0 : options.goalVelocity;
    }

    _createClass(PDController, [{
        key: "evaluate",
        value: function evaluate() {
            var currentAngle = this.joint.angle;
            var currentAngularVelocity = this.joint.angularVelocity;

            var angErr = this.goal - currentAngle;
            var angVelErr = 0.0 - currentAngularVelocity;

            var ret = this.kp * angErr + this.kd * angVelErr;

            return ret;
        }
    }]);

    return PDController;
}();

// 20.1.2.4 Number.isNaN(number)


_export(_export.S, 'Number', {
  isNaN: function isNaN(number){
    return number != number;
  }
});

var isNan$1 = _core.Number.isNaN;

var isNan = createCommonjsModule(function (module) {
module.exports = { "default": isNan$1, __esModule: true };
});

var _Number$isNaN = unwrapExports(isNan);

var utils = {};

utils.multiplyQuaternions = function multiplyQuaternions(q, r) {
    /* eslint-disable no-mixed-operators */
    var t0 = q[0] * r[0] - q[1] * r[1] - q[2] * r[2] - q[3] * r[3];
    var t1 = q[0] * r[1] + q[1] * r[0] + q[2] * r[3] - q[3] * r[2];
    var t2 = q[0] * r[2] - q[1] * r[3] + q[2] * r[0] + q[3] * r[1];
    var t3 = q[0] * r[3] + q[1] * r[2] - q[2] * r[1] + q[3] * r[0];
    /* eslint-enable */

    return utils.normalizeQuaternion([t0, t1, t2, t3]);
};

utils.normalizeQuaternion = function normalizeQuaternion(q) {
    var magInv = 1.0 / Math.sqrt(q[0] * q[0] + q[1] * q[1] + q[2] * q[2] + q[3] * q[3]);

    return [q[0] * magInv, q[1] * magInv, q[2] * magInv, q[3] * magInv];
};

// q[0] = qw
utils.getQuaternionInverse = function getQuaternionInverse(q) {
    return [q[0], -q[1], -q[2], -q[3]];
};

utils.axisAngleFromQuaternion = function axisAngleFromQuaternion(q) {
    var qw = q[0];
    var qx = q[1];
    var qy = q[2];
    var qz = q[3];

    var angle = 2 * Math.acos(qw);

    if (_Number$isNaN(angle) || Math.abs(angle) < 1e-6) {
        angle = 0;
    }

    var axis = void 0;
    if (angle === 0) {
        axis = [1, 0, 0];
    } else {
        var den = 1.0 * Math.sqrt(1 - qw * qw);
        axis = [qx / den, qy / den, qz / den];
    }

    if (axis[0] === 0 && axis[1] === 0 && axis[2] === 0) {
        axis = [1, 0, 0];
    }

    return { axis: axis, angle: angle };
};

utils.quaternionFromEulerAngles = function quaternionFromEulerAngles(e) {
    var halfPhi = e[0] * 0.5;
    var halfTheta = e[1] * 0.5;
    var halfPsi = e[2] * 0.5;

    var cPhi = Math.cos(halfPhi);
    var cTheta = Math.cos(halfTheta);
    var cPsi = Math.cos(halfPsi);

    var sPhi = Math.sin(halfPhi);
    var sTheta = Math.sin(halfTheta);
    var sPsi = Math.sin(halfPsi);

    var q = [cPhi * cTheta * cPsi + sPhi * sTheta * sPsi, sPhi * cTheta * cPsi - cPhi * sTheta * sPsi, cPhi * sTheta * cPsi + sPhi * cTheta * sPsi, cPhi * cTheta * sPsi - sPhi * sTheta * cPsi];

    return utils.normalizeQuaternion(q);
};

utils.eulerAnglesFromQuaternion = function eulerAnglesFromQuaternion(q) {
    var qw = q[0];
    var qx = q[1];
    var qy = q[2];
    var qz = q[3];

    var qxqx = qx * qx;
    var qyqy = qy * qy;
    var qzqz = qz * qz;

    var qxqy = qx * qy;
    var qxqz = qx * qz;
    var qyqz = qy * qz;

    var qwqx = qw * qx;
    var qwqy = qw * qy;
    var qwqz = qw * qz;

    return [Math.atan2(2 * (qwqx + qyqz), 1 - 2 * (qxqx + qyqy)), Math.asin(2 * (qwqy - qxqz)), Math.atan2(2 * (qwqz + qxqy), 1 - 2 * (qyqy + qzqz))];
};

// Q = [q.x, q.y, q.z, q.w]
utils.RFromQuaternion = function RFromQuaternion(q) {
    var qw = q[0];
    var qx = q[1];
    var qy = q[2];
    var qz = q[3];

    var qxqx = qx * qx;
    var qyqy = qy * qy;
    var qzqz = qz * qz;

    var qxqy = qx * qy;
    var qxqz = qx * qz;
    var qyqz = qy * qz;

    var qwqx = qw * qx;
    var qwqy = qw * qy;
    var qwqz = qw * qz;

    /*
    return [a*a+b*b - c*c - d*d,    2*b*c - 2*a*d,         2*b*d + 2*a*c,
            2*b*c + 2*a*d,          a*a - b*b + c*c - d*d, 2*c*d - 2*a*b,
            2*b*d - 2*a*c,          2*c*d+2*a*b,           a*a-b*b-c*c+d*d];
            */

    /* eslint-disable no-multi-spaces */
    return [1 - 2 * qyqy - 2 * qzqz, 2 * qxqy - 2 * qwqz, 2 * qxqz + 2 * qwqy, 2 * qxqy + 2 * qwqz, 1 - 2 * qxqx - 2 * qzqz, 2 * qyqz - 2 * qwqx, 2 * qxqz - 2 * qwqy, 2 * qyqz + 2 * qwqx, 1 - 2 * qxqx - 2 * qyqy];
    /* eslint-enable */
};

// v = [x, y, z]
// R = flat Rotation matrix
utils.rotateVector = function rotateVector(v, R) {
    if (R.length === 9) {
        return [R[0] * v[0] + R[1] * v[1] + R[2] * v[2], R[3] * v[0] + R[4] * v[1] + R[5] * v[2], R[6] * v[0] + R[7] * v[1] + R[8] * v[2]];
    } else if (R.length === 16) {
        return [R[0] * v[0] + R[1] * v[1] + R[2] * v[2], R[4] * v[0] + R[5] * v[1] + R[6] * v[2], R[8] * v[0] + R[9] * v[1] + R[10] * v[2]];
    }
    throw new Error("Cannot have rotation matrix with length " + R.length);
};

var KP$1 = 300;
var KD$1 = 30;

var PDController3D = function () {
    function PDController3D(joint, goal) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        _classCallCheck(this, PDController3D);

        var goalEuler = [goal.X === undefined ? 0 : goal.X, goal.Y === undefined ? 0 : goal.Y, goal.Z === undefined ? 0 : goal.Z];

        this.goal = utils.quaternionFromEulerAngles(goalEuler);
        this.joint = joint;

        this.kp = options.kp === undefined ? KP$1 : options.kp;
        this.kd = options.kd === undefined ? KD$1 : options.kd;
        this.goalVelocity = options.goalVelocity === undefined ? 0 : options.goalVelocity;
    }

    _createClass(PDController3D, [{
        key: 'evaluate',
        value: function evaluate() {
            var torque = [0, 0, 0];

            var qRel = this.joint.angle;

            var cInverse = [qRel[0], -qRel[1], -qRel[2], -qRel[3]];

            // extra needed on top of qRel to rotate into goal!
            var qErr = utils.multiplyQuaternions(cInverse, this.goal);

            var sinTheta = Math.sqrt(qErr[1] * qErr[1] + qErr[2] * qErr[2] + qErr[3] * qErr[3]);
            if (sinTheta > 1) {
                sinTheta = 1;
            }

            if (Math.abs(sinTheta) >= 1e-8) {
                var absAngle = 2 * Math.asin(sinTheta);
                var stInv = 1.0 / sinTheta;

                var multiplier = stInv * absAngle * -this.kp * Math.abs(qErr[0]) / qErr[0];

                torque = [qErr[1] * multiplier, qErr[2] * multiplier, qErr[3] * multiplier];
            }

            // torque in parent coords
            torque = utils.rotateVector(torque, utils.RFromQuaternion(qRel));
            // wRel in parent coords
            var wRel = this.joint.angularVelocity;
            torque[0] += -wRel[0] * -this.kd;
            torque[1] += -wRel[1] * -this.kd;
            torque[2] += -wRel[2] * -this.kd;

            // torque in parent coords
            return torque;

            // TODO: Remove this?
            /*
            const axisAngle = utils.axisAngleFromQuaternion(rotQ);
             const axLen = Math.sqrt(
                (axisAngle.axis[0] * axisAngle.axis[0]) +
                (axisAngle.axis[1] * axisAngle.axis[1]) +
                (axisAngle.axis[2]*axisAngle.axis[2])
            );
             const vq = [
                (axisAngle.axis[0] / axLen) * axisAngle.angle,
                (axisAngle.axis[1] / axLen) * axisAngle.angle,
                (axisAngle.axis[2] / axLen) * axisAngle.angle
            ];
             const signW = rotQ[0]/Math.abs(rotQ[0]);
             vq = [vq[0]*signW, vq[1]*signW, vq[2]*signW];
              const w = this.joint.angularVelocity;
             const ret = [
                 this.kp*(vq[0]) - this.kd*w[0],
                 this.kp*(vq[1]) - this.kd*w[1],
                 this.kp*(vq[2]) - this.kd*w[2]
            ];
             ret = utils.rotateVector(ret, utils.RFromQuaternion(this.joint.parent.getOrientation()));
             return [-ret[0], -ret[1], -ret[2]];
            */
        }
    }, {
        key: 'setGoal',
        value: function setGoal(g) {
            var goalEuler = [g.X === undefined ? 0 : g.X, g.Y === undefined ? 0 : g.Y, g.Z === undefined ? 0 : g.Z];
            this.goal = utils.normalizeQuaternion(utils.quaternionFromEulerAngles(goalEuler));
        }
    }]);

    return PDController3D;
}();

var KP$2 = 300;
var KD$2 = 30;

var VPDController = function () {
    function VPDController(joint, part, goal) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        _classCallCheck(this, VPDController);

        this.joint = joint;
        this.part = part;
        this.goal = goal;

        this.kp = options.kp === undefined ? KP$2 : options.kp;
        this.kd = options.kd === undefined ? KD$2 : options.kd;
        this.goalVelocity = options.goalVelocity === undefined ? 0 : options.goalVelocity;

        this.lastAngle = NaN;
    }

    _createClass(VPDController, [{
        key: "evaluate",
        value: function evaluate(dt) {
            var rot = this.part.orientation;
            var currentAngle = Math.atan2(2 * (rot[0] * rot[3] + rot[1] * rot[2]), 1 - 2 * (rot[2] * rot[2] + rot[3] * rot[3]));

            if (_Number$isNaN(this.lastAngle)) {
                this.lastAngle = currentAngle;
            }

            var currentAngularVelocity = (currentAngle - this.lastAngle) / dt;

            var goal = -this.goal;

            var angErr = goal - currentAngle;
            var angVelErr = 0 - currentAngularVelocity;

            var ret = this.kp * angErr + this.kd * angVelErr;

            this.lastAngle = currentAngle;

            return ret;
        }
    }]);

    return VPDController;
}();

var KP$3 = 300;
var KD$3 = 30;

var VPDController3D = function () {
    function VPDController3D(joint, part, goal) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        _classCallCheck(this, VPDController3D);

        var goalEuler = [goal.X === undefined ? 0 : goal.X, goal.Y === undefined ? 0 : goal.Y, goal.Z === undefined ? 0 : goal.Z];

        this.goal = utils.quaternionFromEulerAngles(goalEuler);
        this.joint = joint;
        this.part = part;

        this.kp = options.kp === undefined ? KP$3 : options.kp;
        this.kd = options.kd === undefined ? KD$3 : options.kd;
        this.goalVelocity = options.goalVelocity === undefined ? 0 : options.goalVelocity;
    }

    _createClass(VPDController3D, [{
        key: 'evaluate',
        value: function evaluate(dt) {
            var torque = [0, 0, 0];

            var qRel = this.part.orientation;

            var cInverse = [qRel[0], -qRel[1], -qRel[2], -qRel[3]];

            // qErr in world coordinates
            var qErr = utils.multiplyQuaternions(cInverse, this.goal);

            // rotate torque into parent coords
            // torque = utils.rotateVector(torque,
            // utils.RFromQuaternion(utils.getQuaternionInverse(this.joint.parent.getOrientation())));
            var sinTheta = Math.sqrt(qErr[1] * qErr[1] + qErr[2] * qErr[2] + qErr[3] * qErr[3]);

            if (sinTheta > 1) {
                sinTheta = 1;
            }
            if (Math.abs(sinTheta) >= 1e-8) {
                var absAngle = 2 * Math.asin(sinTheta);
                var stInv = 1.0 / sinTheta;
                var multiplier = stInv * absAngle * -this.kp * Math.abs(qErr[0]) / qErr[0];

                torque = [qErr[1] * multiplier, qErr[2] * multiplier, qErr[3] * multiplier];
            }

            torque = utils.rotateVector(torque, utils.RFromQuaternion(qRel));
            // wRel in world coords
            var wRel = this.part.angularVelocity;
            torque[0] += -wRel[0] * -this.kd;
            torque[1] += -wRel[1] * -this.kd;
            torque[2] += -wRel[2] * -this.kd;

            // rotate torque into parent coords
            torque = utils.rotateVector(torque, utils.RFromQuaternion(utils.getQuaternionInverse(this.joint.parent.orientation)));

            return torque;
        }
    }, {
        key: 'setGoal',
        value: function setGoal(g) {
            var goalEuler = [g.X === undefined ? 0 : g.X, g.Y === undefined ? 0 : g.Y, g.Z === undefined ? 0 : g.Z];
            this.goal = utils.normalizeQuaternion(utils.quaternionFromEulerAngles(goalEuler));
        }
    }]);

    return VPDController3D;
}();

var controllers = {
    PDController: PDController,
    PDController3D: PDController3D,
    VPDController: VPDController,
    VPDController3D: VPDController3D
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function(it, key){
  return hasOwnProperty.call(it, key);
};

var toString = {}.toString;

var _cof = function(it){
  return toString.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings

var _toIobject = function(it){
  return _iobject(_defined(it));
};

// 7.1.4 ToInteger
var ceil  = Math.ceil;
var floor = Math.floor;
var _toInteger = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength
var min       = Math.min;
var _toLength = function(it){
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max       = Math.max;
var min$1       = Math.min;
var _toIndex = function(index, length){
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes

var _arrayIncludes = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = _toIobject($this)
      , length = _toLength(O.length)
      , index  = _toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var SHARED = '__core-js_shared__';
var store  = _global[SHARED] || (_global[SHARED] = {});
var _shared = function(key){
  return store[key] || (store[key] = {});
};

var id = 0;
var px = Math.random();
var _uid = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var shared = _shared('keys');
var _sharedKey = function(key){
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO     = _sharedKey('IE_PROTO');

var _objectKeysInternal = function(object, names){
  var O      = _toIobject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)_has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(_has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)


var _objectKeys = Object.keys || function keys(O){
  return _objectKeysInternal(O, _enumBugKeys);
};

var f$1 = {}.propertyIsEnumerable;

var _objectPie = {
	f: f$1
};

var isEnum    = _objectPie.f;
var _objectToArray = function(isEntries){
  return function(it){
    var O      = _toIobject(it)
      , keys   = _objectKeys(O)
      , length = keys.length
      , i      = 0
      , result = []
      , key;
    while(length > i)if(isEnum.call(O, key = keys[i++])){
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

// https://github.com/tc39/proposal-object-values-entries
var $values = _objectToArray(false);

_export(_export.S, 'Object', {
  values: function values(it){
    return $values(it);
  }
});

var values$1 = _core.Object.values;

var values = createCommonjsModule(function (module) {
module.exports = { "default": values$1, __esModule: true };
});

var _Object$values = unwrapExports(values);

var _addToUnscopables = function(){ /* empty */ };

var _iterStep = function(done, value){
  return {value: value, done: !!done};
};

var _iterators = {};

var _library = true;

var _redefine = _hide;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties){
  _anObject(O);
  var keys   = _objectKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)_objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var _html = _global.document && document.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var IE_PROTO$1    = _sharedKey('IE_PROTO');
var Empty       = function(){ /* empty */ };
var PROTOTYPE$1   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe')
    , i      = _enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty;
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

var _wks = createCommonjsModule(function (module) {
var store      = _shared('wks')
  , Symbol     = _global.Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

var def = _objectDp.f;
var TAG = _wks('toStringTag');

var _setToStringTag = function(it, tag, stat){
  if(it && !_has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};

var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function(){ return this; });

var _iterCreate = function(Constructor, NAME, next){
  Constructor.prototype = _objectCreate(IteratorPrototype, {next: _propertyDesc(1, next)});
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 7.1.13 ToObject(argument)

var _toObject = function(it){
  return Object(_defined(it));
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var IE_PROTO$2    = _sharedKey('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function(O){
  O = _toObject(O);
  if(_has(O, IE_PROTO$2))return O[IE_PROTO$2];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

var ITERATOR       = _wks('iterator');
var BUGGY          = !([].keys && 'next' in [].keys());
var FF_ITERATOR    = '@@iterator';
var KEYS           = 'keys';
var VALUES         = 'values';

var returnThis = function(){ return this; };

var _iterDefine = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  _iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = _objectGpo($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!_library && !_has(IteratorPrototype, ITERATOR))_hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    _hide(proto, ITERATOR, $default);
  }
  // Plug for library
  _iterators[NAME] = $default;
  _iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))_redefine(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(Array, 'Array', function(iterated, kind){
  this._t = _toIobject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return _iterStep(1);
  }
  if(kind == 'keys'  )return _iterStep(0, index);
  if(kind == 'values')return _iterStep(0, O[index]);
  return _iterStep(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
_iterators.Arguments = _iterators.Array;

_addToUnscopables('keys');
_addToUnscopables('values');
_addToUnscopables('entries');

var TO_STRING_TAG = _wks('toStringTag');

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = _global[NAME]
    , proto      = Collection && Collection.prototype;
  if(proto && !proto[TO_STRING_TAG])_hide(proto, TO_STRING_TAG, NAME);
  _iterators[NAME] = _iterators.Array;
}

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function(TO_STRING){
  return function(that, pos){
    var s = String(_defined(that))
      , i = _toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var $at  = _stringAt(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});

// getting tag from 19.1.3.6 Object.prototype.toString()
var TAG$1 = _wks('toStringTag');
var ARG = _cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

var _classof = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T
    // builtinTag case
    : ARG ? _cof(O)
    // ES3 arguments fallback
    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

var ITERATOR$1  = _wks('iterator');
var core_getIteratorMethod = _core.getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR$1]
    || it['@@iterator']
    || _iterators[_classof(it)];
};

var core_getIterator = _core.getIterator = function(it){
  var iterFn = core_getIteratorMethod(it);
  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
  return _anObject(iterFn.call(it));
};

var getIterator$1 = core_getIterator;

var getIterator = createCommonjsModule(function (module) {
module.exports = { "default": getIterator$1, __esModule: true };
});

var _getIterator = unwrapExports(getIterator);

// most Object methods by ES6 should accept primitives

var _objectSap = function(KEY, exec){
  var fn  = (_core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  _export(_export.S + _export.F * _fails(function(){ fn(1); }), 'Object', exp);
};

// 19.1.2.9 Object.getPrototypeOf(O)


_objectSap('getPrototypeOf', function(){
  return function getPrototypeOf(it){
    return _objectGpo(_toObject(it));
  };
});

var getPrototypeOf$1 = _core.Object.getPrototypeOf;

var getPrototypeOf = createCommonjsModule(function (module) {
module.exports = { "default": getPrototypeOf$1, __esModule: true };
});

var _Object$getPrototypeOf = unwrapExports(getPrototypeOf);

var f$2 = _wks;

var _wksExt = {
	f: f$2
};

var iterator$2 = _wksExt.f('iterator');

var iterator = createCommonjsModule(function (module) {
module.exports = { "default": iterator$2, __esModule: true };
});

var _meta = createCommonjsModule(function (module) {
var META     = _uid('meta')
  , setDesc  = _objectDp.f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !_fails(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!_isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!_has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!_has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !_has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};
});

var defineProperty$4 = _objectDp.f;
var _wksDefine = function(name){
  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty$4($Symbol, name, {value: _wksExt.f(name)});
};

var _keyof = function(object, el){
  var O      = _toIobject(object)
    , keys   = _objectKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

var f$3 = Object.getOwnPropertySymbols;

var _objectGops = {
	f: f$3
};

// all enumerable object keys, includes symbols

var _enumKeys = function(it){
  var result     = _objectKeys(it)
    , getSymbols = _objectGops.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = _objectPie.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

// 7.2.2 IsArray(argument)

var _isArray = Array.isArray || function isArray(arg){
  return _cof(arg) == 'Array';
};

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

var f$5 = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return _objectKeysInternal(O, hiddenKeys);
};

var _objectGopn = {
	f: f$5
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var gOPN$1      = _objectGopn.f;
var toString$1  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN$1(it);
  } catch(e){
    return windowNames.slice();
  }
};

var f$4 = function getOwnPropertyNames(it){
  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN$1(_toIobject(it));
};

var _objectGopnExt = {
	f: f$4
};

var gOPD$1           = Object.getOwnPropertyDescriptor;

var f$6 = _descriptors ? gOPD$1 : function getOwnPropertyDescriptor(O, P){
  O = _toIobject(O);
  P = _toPrimitive(P, true);
  if(_ie8DomDefine)try {
    return gOPD$1(O, P);
  } catch(e){ /* empty */ }
  if(_has(O, P))return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
};

var _objectGopd = {
	f: f$6
};

// ECMAScript 6 symbols shim
var META           = _meta.KEY;
var gOPD           = _objectGopd.f;
var dP$2             = _objectDp.f;
var gOPN           = _objectGopnExt.f;
var $Symbol        = _global.Symbol;
var $JSON          = _global.JSON;
var _stringify     = $JSON && $JSON.stringify;
var PROTOTYPE$2      = 'prototype';
var HIDDEN         = _wks('_hidden');
var TO_PRIMITIVE   = _wks('toPrimitive');
var isEnum$1         = {}.propertyIsEnumerable;
var SymbolRegistry = _shared('symbol-registry');
var AllSymbols     = _shared('symbols');
var OPSymbols      = _shared('op-symbols');
var ObjectProto$1    = Object[PROTOTYPE$2];
var USE_NATIVE     = typeof $Symbol == 'function';
var QObject        = _global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = _descriptors && _fails(function(){
  return _objectCreate(dP$2({}, 'a', {
    get: function(){ return dP$2(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto$1, key);
  if(protoDesc)delete ObjectProto$1[key];
  dP$2(it, key, D);
  if(protoDesc && it !== ObjectProto$1)dP$2(ObjectProto$1, key, protoDesc);
} : dP$2;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto$1)$defineProperty(OPSymbols, key, D);
  _anObject(it);
  key = _toPrimitive(key, true);
  _anObject(D);
  if(_has(AllSymbols, key)){
    if(!D.enumerable){
      if(!_has(it, HIDDEN))dP$2(it, HIDDEN, _propertyDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(_has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _objectCreate(D, {enumerable: _propertyDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP$2(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  _anObject(it);
  var keys = _enumKeys(P = _toIobject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum$1.call(this, key = _toPrimitive(key, true));
  if(this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))return false;
  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = _toIobject(it);
  key = _toPrimitive(key, true);
  if(it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(_toIobject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto$1
    , names  = gOPN(IS_OP ? OPSymbols : _toIobject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto$1)$set.call(OPSymbols, value);
      if(_has(this, HIDDEN) && _has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, _propertyDesc(1, value));
    };
    if(_descriptors && setter)setSymbolDesc(ObjectProto$1, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString(){
    return this._k;
  });

  _objectGopd.f = $getOwnPropertyDescriptor;
  _objectDp.f   = $defineProperty;
  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
  _objectPie.f  = $propertyIsEnumerable;
  _objectGops.f = $getOwnPropertySymbols;

  if(_descriptors && !_library){
    _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  _wksExt.f = function(name){
    return wrap(_wks(name));
  };
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i$1 = 0; symbols.length > i$1; )_wks(symbols[i$1++]);

for(var symbols = _objectKeys(_wks.store), i$1 = 0; symbols.length > i$1; )_wksDefine(symbols[i$1++]);

_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return _has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return _keyof(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

_export(_export.S + _export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !_isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
_setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
_setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
_setToStringTag(_global.JSON, 'JSON', true);

_wksDefine('asyncIterator');

_wksDefine('observable');

var index = _core.Symbol;

var symbol = createCommonjsModule(function (module) {
module.exports = { "default": index, __esModule: true };
});

var _typeof_1 = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _iterator2 = _interopRequireDefault(iterator);



var _symbol2 = _interopRequireDefault(symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
});

var possibleConstructorReturn = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};
});

var _possibleConstructorReturn = unwrapExports(possibleConstructorReturn);

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var $getOwnPropertyDescriptor$1 = _objectGopd.f;

_objectSap('getOwnPropertyDescriptor', function(){
  return function getOwnPropertyDescriptor(it, key){
    return $getOwnPropertyDescriptor$1(_toIobject(it), key);
  };
});

var $Object$1 = _core.Object;
var getOwnPropertyDescriptor$2 = function getOwnPropertyDescriptor(it, key){
  return $Object$1.getOwnPropertyDescriptor(it, key);
};

var getOwnPropertyDescriptor = createCommonjsModule(function (module) {
module.exports = { "default": getOwnPropertyDescriptor$2, __esModule: true };
});

var get = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _getPrototypeOf2 = _interopRequireDefault(getPrototypeOf);



var _getOwnPropertyDescriptor2 = _interopRequireDefault(getOwnPropertyDescriptor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

  if (desc === undefined) {
    var parent = (0, _getPrototypeOf2.default)(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};
});

var _get = unwrapExports(get);

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */

var check = function(O, proto){
  _anObject(O);
  if(!_isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

// 19.1.3.19 Object.setPrototypeOf(O, proto)

_export(_export.S, 'Object', {setPrototypeOf: _setProto.set});

var setPrototypeOf$2 = _core.Object.setPrototypeOf;

var setPrototypeOf = createCommonjsModule(function (module) {
module.exports = { "default": setPrototypeOf$2, __esModule: true };
});

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
_export(_export.S, 'Object', {create: _objectCreate});

var $Object$2 = _core.Object;
var create$1 = function create(P, D){
  return $Object$2.create(P, D);
};

var create = createCommonjsModule(function (module) {
module.exports = { "default": create$1, __esModule: true };
});

var _Object$create = unwrapExports(create);

var inherits = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf);



var _create2 = _interopRequireDefault(create);



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};
});

var _inherits = unwrapExports(inherits);

var Entity = function () {
    function Entity() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Entity);

        this.id = opts.id === undefined ? Entity.newID() : opts.id;

        this._position = opts.position === undefined ? [0, 0, 0] : opts.position;
        this._orientation = opts.orientation === undefined ? [1, 0, 0, 0] : opts.orientation; // q.w, q.v
        this._angularVelocity = opts.angularVelocity === undefined ? [0, 0, 0] : opts.angularVelocity;

        this._mass = opts.mass === undefined ? 0 : opts.mass;
        this._color = opts.color === undefined ? [130, 130, 130] : opts.color;

        // Reference to the character this entity belongs to.
        this._character = opts.character === undefined ? null : opts.character;

        this._world = null;

        this.initialize();
    }

    // eslint-disable-next-line class-methods-use-this


    _createClass(Entity, [{
        key: "initialize",
        value: function initialize() {}
    }, {
        key: "position",
        set: function set(xyz) {
            this._position[0] = xyz[0];
            this._position[1] = xyz[1];
            this._position[2] = xyz[2];
        },
        get: function get() {
            return this._position;
        }
    }, {
        key: "orientation",
        set: function set(q) {
            this._orientation[0] = q[0];
            this._orientation[1] = q[1];
            this._orientation[2] = q[2];
            this._orientation[3] = q[3];
        },
        get: function get() {
            return this._orientation;
        }
    }, {
        key: "angularVelocity",
        set: function set(a) {
            // Angular Velocity expressed in WORLD COORDINATES!

            this._angularVelocity[0] = a[0];
            this._angularVelocity[1] = a[1];
            this._angularVelocity[2] = a[2];

            // DO NOT INCLUDE THIS LINE 7 FEB 2016
            // this.angularVelocity = utils.rotateVector(
            //     this.angularVelocity,
            //     utils.RFromQuaternion(this.orientation),
            // );
        },
        get: function get() {
            return this._angularVelocity;
        }
    }, {
        key: "mass",
        get: function get() {
            return this._mass;
        }
    }, {
        key: "color",
        get: function get() {
            return this._color;
        },
        set: function set(c) {
            this._color[0] = c[0];
            this._color[1] = c[1];
            this._color[2] = c[2];
        }
    }, {
        key: "character",
        get: function get() {
            return this._character;
        },
        set: function set(c) {
            this._character = c;
            if (this._world !== null) {
                this._world.updateEntity(this.id);
            }
        }
    }, {
        key: "world",
        get: function get() {
            return this._world;
        },
        set: function set(w) {
            this._world = w;
        }
    }], [{
        key: "newID",
        value: function newID() {
            return Entity._idCount++;
        }
    }]);

    return Entity;
}();

Entity._idCount = 0;

var Sphere = function (_Entity) {
    _inherits(Sphere, _Entity);

    function Sphere(radius, opts) {
        _classCallCheck(this, Sphere);

        var _this = _possibleConstructorReturn(this, (Sphere.__proto__ || _Object$getPrototypeOf(Sphere)).call(this, opts));

        _this._radius = radius;
        _this._type = 'SPHERE';
        return _this;
    }

    _createClass(Sphere, [{
        key: 'initialize',
        value: function initialize() {
            _get(Sphere.prototype.__proto__ || _Object$getPrototypeOf(Sphere.prototype), 'initialize', this).call(this);
        }
    }, {
        key: 'radius',
        get: function get() {
            return this._radius;
        },
        set: function set(r) {
            this._radius = r;
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Sphere;
}(Entity);

var Box = function (_Entity) {
    _inherits(Box, _Entity);

    function Box(sides, opts) {
        _classCallCheck(this, Box);

        var _this = _possibleConstructorReturn(this, (Box.__proto__ || _Object$getPrototypeOf(Box)).call(this, opts));

        _this._sides = sides;
        _this._type = 'BOX';
        return _this;
    }

    _createClass(Box, [{
        key: 'initialize',
        value: function initialize() {
            _get(Box.prototype.__proto__ || _Object$getPrototypeOf(Box.prototype), 'initialize', this).call(this);
        }
    }, {
        key: 'sides',
        get: function get() {
            return this._sides;
        },
        set: function set(s) {
            this._sides = s;
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Box;
}(Entity);

var Capsule = function (_Entity) {
    _inherits(Capsule, _Entity);

    function Capsule(radius, height, opts) {
        _classCallCheck(this, Capsule);

        var _this = _possibleConstructorReturn(this, (Capsule.__proto__ || _Object$getPrototypeOf(Capsule)).call(this, opts));

        _this._radius = radius;
        _this._height = height;
        _this._type = 'CAPSULE';
        return _this;
    }

    _createClass(Capsule, [{
        key: 'initialize',
        value: function initialize() {
            _get(Capsule.prototype.__proto__ || _Object$getPrototypeOf(Capsule.prototype), 'initialize', this).call(this);
        }
    }, {
        key: 'radius',
        get: function get() {
            return this._radius;
        },
        set: function set(r) {
            this._radius = r;
        }
    }, {
        key: 'height',
        get: function get() {
            return this._height;
        },
        set: function set(h) {
            this._height = h;
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Capsule;
}(Entity);

var Joint = function () {
    function Joint(parent, child) {
        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        _classCallCheck(this, Joint);

        this.id = opts.id === undefined ? Joint.newID() : opts.id;

        this._parent = parent;
        this._child = child;

        this._world = null;

        this.initialize();
    }

    _createClass(Joint, [{
        key: "initialize",


        // eslint-disable-next-line class-methods-use-this
        value: function initialize() {}
    }, {
        key: "parent",
        get: function get() {
            return this._parent;
        },
        set: function set(p) {
            this._parent = p;
        }
    }, {
        key: "child",
        get: function get() {
            return this._child;
        },
        set: function set(p) {
            this._child = p;
        }
    }, {
        key: "world",
        get: function get() {
            return this._world;
        },
        set: function set(w) {
            this._world = w;
        }
    }, {
        key: "character",
        get: function get() {
            return this._character;
        },
        set: function set(c) {
            this._character = c;
        }
    }], [{
        key: "newID",
        value: function newID() {
            return Joint._idCount++;
        }
    }]);

    return Joint;
}();

Joint._idCount = 0;

var Hinge = function (_Joint) {
    _inherits(Hinge, _Joint);

    function Hinge(parent, child, pos, axis) {
        var opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        _classCallCheck(this, Hinge);

        var _this = _possibleConstructorReturn(this, (Hinge.__proto__ || _Object$getPrototypeOf(Hinge)).call(this, parent, child));

        _this._position = pos;
        _this._axis = axis;

        _this._angle = opts.angle === undefined ? 0 : opts.angle;
        _this._angularVelocity = opts.angularVelocity === undefined ? 0 : opts.angularVelocity;
        _this._angularVelocityPrev = _this.angularVelocity;
        _this._torque = [0, 0, 0];

        var limits = opts.limits === undefined ? {} : opts.limits;

        _this._lo = limits.lo;
        _this._hi = limits.hi;

        _this._torqueLimit = opts.torqueLimit === undefined ? 370 : opts.torqueLimit;

        _this._type = 'HINGE';
        return _this;
    }

    _createClass(Hinge, [{
        key: 'initialize',
        value: function initialize() {
            _get(Hinge.prototype.__proto__ || _Object$getPrototypeOf(Hinge.prototype), 'initialize', this).call(this);
        }
    }, {
        key: 'resetTorque',
        value: function resetTorque() {
            this.torque = [0, 0, 0];
        }
    }, {
        key: 'updateAngle',
        value: function updateAngle(ang, dt) {
            var angleLast = this.angle;
            this._angle = ang;
            if (dt !== undefined) {
                this._angularVelocityPrev = this._angularVelocity;
                this._angularVelocity = (this._angle - angleLast) / dt;
            }
        }
    }, {
        key: 'addTorque',


        // TODO: Make this not 2D...
        value: function addTorque(t) {
            this._torque[2] += t;
        }
    }, {
        key: 'getLimitedTorque',
        value: function getLimitedTorque() {
            var ret = [this._torque[0], this._torque[1], this._torque[2]];
            if (Math.abs(ret[2]) > this.torqueLimit) {
                ret[2] = this._torqueLimit * ret[2] / Math.abs(ret[2]);
            }

            return ret;
        }
    }, {
        key: 'axis',
        get: function get() {
            return this._axis;
        },
        set: function set(a) {
            this._axis = a;
        }
    }, {
        key: 'angle',
        get: function get() {
            return this._angle;
        }

        /**
         * set angle
         * @description
         * Directly sets the angle
         * NOTE - Do not use this during simulation, as it will not update the angular velocity properly
         *
         */
        ,
        set: function set(ang) {
            this._angle = ang;
        }
    }, {
        key: 'position',
        get: function get() {
            return this._position;
        },
        set: function set(xyz) {
            this._position[0] = xyz[0];
            this._position[1] = xyz[1];
            this._position[2] = xyz[2];
        }
    }, {
        key: 'angularVelocity',
        get: function get() {
            //    // average angVel over 2 timesteps.
            //    return (this.angularVelocityPrev + this.angularVelocity)/2.;
            //    return 0;
            return this._angularVelocity;
        },
        set: function set(angVel) {
            this._angularVelocity = angVel;
        }
    }, {
        key: 'torque',
        set: function set(t) {
            this._torque[0] = t[0];
            this._torque[1] = t[1];
            this._torque[2] = t[2];
        },
        get: function get() {
            return this._torque;
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Hinge;
}(Joint);

var Ball = function (_Joint) {
    _inherits(Ball, _Joint);

    function Ball(parent, child, pos) {
        var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        _classCallCheck(this, Ball);

        var _this = _possibleConstructorReturn(this, (Ball.__proto__ || _Object$getPrototypeOf(Ball)).call(this, parent, child));

        _this._position = pos;

        _this._angleLast = [1, 0, 0, 0];
        _this._angle = [1, 0, 0, 0];

        _this._angularVelocity = [0, 0, 0];
        _this._angularVelocityPrev = [_this._angularVelocity[0], _this._angularVelocity[1], _this._angularVelocity[2]];

        _this._torque = [0, 0, 0];

        _this._limits = opts.limits === undefined ? {} : opts.limits;
        _this._torqueScale = opts.torqueScale === undefined ? [1, 1, 1] : opts.torqueScale;
        _this._torqueLimit = opts.torqueLimit === undefined ? 10000 : opts.torqueLimit;

        _this._type = 'BALL';
        return _this;
    }

    _createClass(Ball, [{
        key: 'initialize',
        value: function initialize() {
            _get(Ball.prototype.__proto__ || _Object$getPrototypeOf(Ball.prototype), 'initialize', this).call(this);
        }

        // Calculates joint's orientation in terms of Parent coordinates
        // (ie, quaternion to rotate parent to child.)

    }, {
        key: 'calculateOrientation',
        value: function calculateOrientation() {
            var pOrientation = this.parent.orientation;
            var cOrientation = this.child.orientation;

            this._angle = utils.multiplyQuaternions(utils.getQuaternionInverse(pOrientation), cOrientation);
        }

        // Calculates joint's angular velocity in Parent coordinate frame

    }, {
        key: 'calculateAngularVelocity',
        value: function calculateAngularVelocity() {
            var pAngVel = this.parent.angularVelocity;
            var cAngVel = this.child.angularVelocity;

            var wRel = [cAngVel[0] - pAngVel[0], cAngVel[1] - pAngVel[1], cAngVel[2] - pAngVel[2]];

            // angVel is in world coords, rotate it by parent's orientation to get parent coords
            this._angularVelocity = utils.rotateVector(wRel, utils.RFromQuaternion(utils.getQuaternionInverse(this.parent.orientation)));
            //    this._angularVelocity = wRel;
        }
    }, {
        key: 'updateAngle',
        value: function updateAngle(angs, dt) {
            this._angle = angs;
        }
    }, {
        key: 'getLimitedTorque',
        value: function getLimitedTorque() {
            // get the torque in child coordinates...
            var qToChild = this.angle;
            var qInverse = [qToChild[0], -qToChild[1], -qToChild[2], -qToChild[3]];
            var cTorque = utils.rotateVector(this._torque, utils.RFromQuaternion(qInverse));

            cTorque = [cTorque[0] * this._torqueScale[0], cTorque[1] * this._torqueScale[1], cTorque[2] * this._torqueScale[2]];

            if (cTorque[0] > this._torqueLimit * this._torqueScale[0]) {
                cTorque[0] = this._torqueLimit * this._torqueScale[0];
            }
            if (cTorque[1] > this._torqueLimit * this._torqueScale[1]) {
                cTorque[1] = this._torqueLimit * this._torqueScale[1];
            }
            if (cTorque[2] > this._torqueLimit * this._torqueScale[2]) {
                cTorque[2] = this._torqueLimit * this._torqueScale[2];
            }

            if (cTorque[0] < -this._torqueLimit * this._torqueScale[0]) {
                cTorque[0] = -this._torqueLimit * this._torqueScale[0];
            }
            if (cTorque[1] < -this._torqueLimit * this._torqueScale[1]) {
                cTorque[1] = -this._torqueLimit * this._torqueScale[1];
            }
            if (cTorque[2] < -this._torqueLimit * this._torqueScale[2]) {
                cTorque[2] = -this._torqueLimit * this._torqueScale[2];
            }

            // Back to parent coordinates
            cTorque = utils.rotateVector(cTorque, utils.RFromQuaternion(qToChild));

            // to World coordinates.
            return utils.rotateVector(cTorque, utils.RFromQuaternion(this.parent.orientation));
        }
    }, {
        key: 'addTorqueX',
        value: function addTorqueX(t) {
            this._torque[0] += t;
        }
    }, {
        key: 'addTorqueY',
        value: function addTorqueY(t) {
            this._torque[1] += t;
        }
    }, {
        key: 'addTorqueZ',
        value: function addTorqueZ(t) {
            this._torque[2] += t;
        }
    }, {
        key: 'addTorque',
        value: function addTorque(t) {
            // torque in parent coords
            this._torque[0] += t[0];
            this._torque[1] += t[1];
            this._torque[2] += t[2];
        }
    }, {
        key: 'resetTorque',
        value: function resetTorque() {
            this.torque = [0, 0, 0];
        }
    }, {
        key: 'position',
        get: function get() {
            return this._position;
        },
        set: function set(xyz) {
            this._position[0] = xyz[0];
            this._position[1] = xyz[1];
            this._position[2] = xyz[2];
        }
    }, {
        key: 'angle',
        get: function get() {
            return this._angle;
        },
        set: function set(angs) {
            this._angle = angs;
        }
    }, {
        key: 'angularVelocity',
        get: function get() {
            return this._angularVelocity;
        }
    }, {
        key: 'torque',
        get: function get() {
            return this._torque;
        },
        set: function set(t) {
            this._torque[0] = t[0];
            this._torque[1] = t[1];
            this._torque[2] = t[2];
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Ball;
}(Joint);

var Character = function () {
    function Character() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Character);

        this.id = opts.id === undefined ? Character.newID() : opts.id;

        if (Character._cGroupCount > 15) {
            throw new Error('Reached maximum number of Characters: 16');
        }
        this._collisionGroup = 1 << Character._cGroupCount;
        Character._cGroupCount++;

        this.entities = {};
        this.joints = {};

        this._world = null;
    }

    _createClass(Character, [{
        key: 'addEntity',
        value: function addEntity(e) {
            this.entities[e.id] = e;
            e.character = this;
            if (this.world && !this.world.hasEntity(e)) {
                this.world.addEntity(e);
            }
        }
    }, {
        key: 'addJoint',
        value: function addJoint(j) {
            this.joints[j.id] = j;
            j.character = this; // eslint-disable-line no-param-reassign
            if (this.world && !this.world.hasJoint(j)) {
                this.world.addJoint(j);
            }
        }
    }, {
        key: 'setFromJSON',
        value: function setFromJSON(data, overlayMesh) {
            if (overlayMesh !== undefined) {
                this._overlayMesh = overlayMesh;
            }

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _getIterator(_Object$values(data.parts)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var eInfo = _step.value;

                    var entity = void 0;
                    switch (eInfo.type) {
                        case 'SPHERE':
                            entity = new Sphere(eInfo.radius, { mass: eInfo.mass });
                            break;
                        case 'CAPSULE':
                            entity = new Capsule((eInfo.radiusTop + eInfo.radiusBottom) / 2.0, eInfo.height, { mass: eInfo.mass });
                            break;
                        case 'BOX':
                            entity = new Box(eInfo.sides, { mass: eInfo.mass });
                            break;
                        default:
                            throw new Error('Unknown Entity type: ' + eInfo.type);
                    }
                    entity.setPosition(eInfo.position);
                    this.addEntity(entity);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = _getIterator(_Object$values(data.joints)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var jInfo = _step2.value;

                    var joint = void 0;
                    switch (jInfo.type) {
                        case 'HINGE':
                            joint = new Hinge(this.entities[this.id + '.' + jInfo.A], this.entities[this.id + '.' + jInfo.B], jInfo.position, jInfo.axis, {
                                limits: {
                                    lo: jInfo.min[2],
                                    hi: jInfo.max[2]
                                }
                            });
                            break;
                        case 'BALL':
                            joint = new Ball(this.entities[this.id + '.' + jInfo.A], this.entities[this.id + '.' + jInfo.B], jInfo.position, {
                                limits: {
                                    X: [jInfo.min[0], jInfo.max[0]],
                                    Y: [jInfo.min[1], jInfo.max[1]],
                                    Z: [jInfo.min[2], jInfo.max[2]]
                                },
                                torqueScale: [jInfo.torqueScale[0], jInfo.torqueScale[1], jInfo.torqueScale[2]]
                            });
                            break;
                        default:
                            throw new Error('Unknown Joint type: ' + jInfo.type);
                    }
                    this.addJoint(joint);
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }
    }, {
        key: 'collisionGroup',
        get: function get() {
            return this._collisionGroup;
        }
    }, {
        key: 'world',
        get: function get() {
            return this._world;
        },
        set: function set(w) {
            this._world = w;
        }
    }], [{
        key: 'newID',
        value: function newID() {
            return Character._idCount++;
        }
    }]);

    return Character;
}();

Character._cGroupCount = 0;
Character._idCount = 0;

var Cylinder = function (_Entity) {
    _inherits(Cylinder, _Entity);

    function Cylinder(radius, height, opts) {
        _classCallCheck(this, Cylinder);

        var _this = _possibleConstructorReturn(this, (Cylinder.__proto__ || _Object$getPrototypeOf(Cylinder)).call(this, opts));

        _this._radius = radius;
        _this._height = height;
        _this._type = 'CYLINDER';
        return _this;
    }

    _createClass(Cylinder, [{
        key: 'initialize',
        value: function initialize() {
            _get(Cylinder.prototype.__proto__ || _Object$getPrototypeOf(Cylinder.prototype), 'initialize', this).call(this);
        }
    }, {
        key: 'radius',
        get: function get() {
            return this._radius;
        },
        set: function set(r) {
            this._radius = r;
        }
    }, {
        key: 'height',
        get: function get() {
            return this._height;
        },
        set: function set(h) {
            this._height = h;
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        }
    }]);

    return Cylinder;
}(Entity);

var entities = {
    Entity: Entity,
    Box: Box,
    Capsule: Capsule,
    Cylinder: Cylinder,
    Sphere: Sphere
};

var joints = {
    Joint: Joint,
    Ball: Ball,
    Hinge: Hinge
};

// Polyfills

if ( Number.EPSILON === undefined ) {

	Number.EPSILON = Math.pow( 2, - 52 );

}

if ( Number.isInteger === undefined ) {

	// Missing in IE
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger

	Number.isInteger = function ( value ) {

		return typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;

	};

}

//

if ( Math.sign === undefined ) {

	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign

	Math.sign = function ( x ) {

		return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;

	};

}

if ( Function.prototype.name === undefined ) {

	// Missing in IE
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name

	Object.defineProperty( Function.prototype, 'name', {

		get: function () {

			return this.toString().match( /^\s*function\s*([^\(\s]*)/ )[ 1 ];

		}

	} );

}

if ( Object.assign === undefined ) {

	// Missing in IE
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign

	( function () {

		Object.assign = function ( target ) {

			'use strict';

			if ( target === undefined || target === null ) {

				throw new TypeError( 'Cannot convert undefined or null to object' );

			}

			var output = Object( target );

			for ( var index = 1; index < arguments.length; index ++ ) {

				var source = arguments[ index ];

				if ( source !== undefined && source !== null ) {

					for ( var nextKey in source ) {

						if ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {

							output[ nextKey ] = source[ nextKey ];

						}

					}

				}

			}

			return output;

		};

	} )();

}

/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */

function EventDispatcher() {}

Object.assign( EventDispatcher.prototype, {

	addEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) this._listeners = {};

		var listeners = this._listeners;

		if ( listeners[ type ] === undefined ) {

			listeners[ type ] = [];

		}

		if ( listeners[ type ].indexOf( listener ) === - 1 ) {

			listeners[ type ].push( listener );

		}

	},

	hasEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) return false;

		var listeners = this._listeners;

		return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;

	},

	removeEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) return;

		var listeners = this._listeners;
		var listenerArray = listeners[ type ];

		if ( listenerArray !== undefined ) {

			var index = listenerArray.indexOf( listener );

			if ( index !== - 1 ) {

				listenerArray.splice( index, 1 );

			}

		}

	},

	dispatchEvent: function ( event ) {

		if ( this._listeners === undefined ) return;

		var listeners = this._listeners;
		var listenerArray = listeners[ event.type ];

		if ( listenerArray !== undefined ) {

			event.target = this;

			var array = [], i = 0;
			var length = listenerArray.length;

			for ( i = 0; i < length; i ++ ) {

				array[ i ] = listenerArray[ i ];

			}

			for ( i = 0; i < length; i ++ ) {

				array[ i ].call( this, event );

			}

		}

	}

} );

var REVISION = '85dev';
var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };
var CullFaceNone = 0;
var CullFaceBack = 1;
var CullFaceFront = 2;
var CullFaceFrontBack = 3;
var FrontFaceDirectionCW = 0;
var FrontFaceDirectionCCW = 1;
var BasicShadowMap = 0;
var PCFShadowMap = 1;
var PCFSoftShadowMap = 2;
var FrontSide = 0;
var BackSide = 1;
var DoubleSide = 2;
var FlatShading = 1;
var SmoothShading = 2;
var NoColors = 0;
var FaceColors = 1;
var VertexColors = 2;
var NoBlending = 0;
var NormalBlending = 1;
var AdditiveBlending = 2;
var SubtractiveBlending = 3;
var MultiplyBlending = 4;
var CustomBlending = 5;
var AddEquation = 100;
var SubtractEquation = 101;
var ReverseSubtractEquation = 102;
var MinEquation = 103;
var MaxEquation = 104;
var ZeroFactor = 200;
var OneFactor = 201;
var SrcColorFactor = 202;
var OneMinusSrcColorFactor = 203;
var SrcAlphaFactor = 204;
var OneMinusSrcAlphaFactor = 205;
var DstAlphaFactor = 206;
var OneMinusDstAlphaFactor = 207;
var DstColorFactor = 208;
var OneMinusDstColorFactor = 209;
var SrcAlphaSaturateFactor = 210;
var NeverDepth = 0;
var AlwaysDepth = 1;
var LessDepth = 2;
var LessEqualDepth = 3;
var EqualDepth = 4;
var GreaterEqualDepth = 5;
var GreaterDepth = 6;
var NotEqualDepth = 7;
var MultiplyOperation = 0;
var MixOperation = 1;
var AddOperation = 2;
var NoToneMapping = 0;
var LinearToneMapping = 1;
var ReinhardToneMapping = 2;
var Uncharted2ToneMapping = 3;
var CineonToneMapping = 4;
var UVMapping = 300;
var CubeReflectionMapping = 301;
var CubeRefractionMapping = 302;
var EquirectangularReflectionMapping = 303;
var EquirectangularRefractionMapping = 304;
var SphericalReflectionMapping = 305;
var CubeUVReflectionMapping = 306;
var CubeUVRefractionMapping = 307;
var RepeatWrapping = 1000;
var ClampToEdgeWrapping = 1001;
var MirroredRepeatWrapping = 1002;
var NearestFilter = 1003;
var NearestMipMapNearestFilter = 1004;
var NearestMipMapLinearFilter = 1005;
var LinearFilter = 1006;
var LinearMipMapNearestFilter = 1007;
var LinearMipMapLinearFilter = 1008;
var UnsignedByteType = 1009;
var ByteType = 1010;
var ShortType = 1011;
var UnsignedShortType = 1012;
var IntType = 1013;
var UnsignedIntType = 1014;
var FloatType = 1015;
var HalfFloatType = 1016;
var UnsignedShort4444Type = 1017;
var UnsignedShort5551Type = 1018;
var UnsignedShort565Type = 1019;
var UnsignedInt248Type = 1020;
var AlphaFormat = 1021;
var RGBFormat = 1022;
var RGBAFormat = 1023;
var LuminanceFormat = 1024;
var LuminanceAlphaFormat = 1025;
var RGBEFormat = RGBAFormat;
var DepthFormat = 1026;
var DepthStencilFormat = 1027;
var RGB_S3TC_DXT1_Format = 2001;
var RGBA_S3TC_DXT1_Format = 2002;
var RGBA_S3TC_DXT3_Format = 2003;
var RGBA_S3TC_DXT5_Format = 2004;
var RGB_PVRTC_4BPPV1_Format = 2100;
var RGB_PVRTC_2BPPV1_Format = 2101;
var RGBA_PVRTC_4BPPV1_Format = 2102;
var RGBA_PVRTC_2BPPV1_Format = 2103;
var RGB_ETC1_Format = 2151;
var LoopOnce = 2200;
var LoopRepeat = 2201;
var LoopPingPong = 2202;
var InterpolateDiscrete = 2300;
var InterpolateLinear = 2301;
var InterpolateSmooth = 2302;
var ZeroCurvatureEnding = 2400;
var ZeroSlopeEnding = 2401;
var WrapAroundEnding = 2402;
var TrianglesDrawMode = 0;
var TriangleStripDrawMode = 1;
var TriangleFanDrawMode = 2;
var LinearEncoding = 3000;
var sRGBEncoding = 3001;
var GammaEncoding = 3007;
var RGBEEncoding = 3002;
var LogLuvEncoding = 3003;
var RGBM7Encoding = 3004;
var RGBM16Encoding = 3005;
var RGBDEncoding = 3006;
var BasicDepthPacking = 3200;
var RGBADepthPacking = 3201;

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

var _Math = {

	DEG2RAD: Math.PI / 180,
	RAD2DEG: 180 / Math.PI,

	generateUUID: function () {

		// http://www.broofa.com/Tools/Math.uuid.htm

		var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );
		var uuid = new Array( 36 );
		var rnd = 0, r;

		return function generateUUID() {

			for ( var i = 0; i < 36; i ++ ) {

				if ( i === 8 || i === 13 || i === 18 || i === 23 ) {

					uuid[ i ] = '-';

				} else if ( i === 14 ) {

					uuid[ i ] = '4';

				} else {

					if ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;
					r = rnd & 0xf;
					rnd = rnd >> 4;
					uuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];

				}

			}

			return uuid.join( '' );

		};

	}(),

	clamp: function ( value, min, max ) {

		return Math.max( min, Math.min( max, value ) );

	},

	// compute euclidian modulo of m % n
	// https://en.wikipedia.org/wiki/Modulo_operation

	euclideanModulo: function ( n, m ) {

		return ( ( n % m ) + m ) % m;

	},

	// Linear mapping from range <a1, a2> to range <b1, b2>

	mapLinear: function ( x, a1, a2, b1, b2 ) {

		return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );

	},

	// https://en.wikipedia.org/wiki/Linear_interpolation

	lerp: function ( x, y, t ) {

		return ( 1 - t ) * x + t * y;

	},

	// http://en.wikipedia.org/wiki/Smoothstep

	smoothstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min ) / ( max - min );

		return x * x * ( 3 - 2 * x );

	},

	smootherstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min ) / ( max - min );

		return x * x * x * ( x * ( x * 6 - 15 ) + 10 );

	},

	// Random integer from <low, high> interval

	randInt: function ( low, high ) {

		return low + Math.floor( Math.random() * ( high - low + 1 ) );

	},

	// Random float from <low, high> interval

	randFloat: function ( low, high ) {

		return low + Math.random() * ( high - low );

	},

	// Random float from <-range/2, range/2> interval

	randFloatSpread: function ( range ) {

		return range * ( 0.5 - Math.random() );

	},

	degToRad: function ( degrees ) {

		return degrees * _Math.DEG2RAD;

	},

	radToDeg: function ( radians ) {

		return radians * _Math.RAD2DEG;

	},

	isPowerOfTwo: function ( value ) {

		return ( value & ( value - 1 ) ) === 0 && value !== 0;

	},

	nearestPowerOfTwo: function ( value ) {

		return Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );

	},

	nextPowerOfTwo: function ( value ) {

		value --;
		value |= value >> 1;
		value |= value >> 2;
		value |= value >> 4;
		value |= value >> 8;
		value |= value >> 16;
		value ++;

		return value;

	}

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author philogb / http://blog.thejit.org/
 * @author egraether / http://egraether.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */

function Vector2( x, y ) {

	this.x = x || 0;
	this.y = y || 0;

}

Object.defineProperties( Vector2.prototype, {

	"width" : {

		get: function () {

			return this.x;

		},

		set: function ( value ) {

			this.x = value;

		}

	},

	"height" : {

		get: function () {

			return this.y;

		},

		set: function ( value ) {

			this.y = value;

		}

	}

} );

Object.assign( Vector2.prototype, {

	isVector2: true,

	set: function ( x, y ) {

		this.x = x;
		this.y = y;

		return this;

	},

	setScalar: function ( scalar ) {

		this.x = scalar;
		this.y = scalar;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},

	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			default: throw new Error( 'index is out of range: ' + index );

		}

	},

	clone: function () {

		return new this.constructor( this.x, this.y );

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;

		return this;

	},

	addScaledVector: function ( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;

		return this;

	},

	subScalar: function ( s ) {

		this.x -= s;
		this.y -= s;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;

		return this;

	},

	multiply: function ( v ) {

		this.x *= v.x;
		this.y *= v.y;

		return this;

	},

	multiplyScalar: function ( scalar ) {

		this.x *= scalar;
		this.y *= scalar;

		return this;

	},

	divide: function ( v ) {

		this.x /= v.x;
		this.y /= v.y;

		return this;

	},

	divideScalar: function ( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	},

	min: function ( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );

		return this;

	},

	max: function ( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );

		return this;

	},

	clampScalar: function () {

		var min = new Vector2();
		var max = new Vector2();

		return function clampScalar( minVal, maxVal ) {

			min.set( minVal, minVal );
			max.set( maxVal, maxVal );

			return this.clamp( min, max );

		};

	}(),

	clampLength: function ( min, max ) {

		var length = this.length();

		return this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );

	},

	floor: function () {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );

		return this;

	},

	ceil: function () {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );

		return this;

	},

	round: function () {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );

		return this;

	},

	roundToZero: function () {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );

		return this;

	},

	negate: function () {

		this.x = - this.x;
		this.y = - this.y;

		return this;

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y );

	},

	lengthManhattan: function() {

		return Math.abs( this.x ) + Math.abs( this.y );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	angle: function () {

		// computes the angle in radians with respect to the positive x-axis

		var angle = Math.atan2( this.y, this.x );

		if ( angle < 0 ) angle += 2 * Math.PI;

		return angle;

	},

	distanceTo: function ( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	},

	distanceToSquared: function ( v ) {

		var dx = this.x - v.x, dy = this.y - v.y;
		return dx * dx + dy * dy;

	},

	distanceToManhattan: function ( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );

	},

	setLength: function ( length ) {

		return this.multiplyScalar( length / this.length() );

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;

		return this;

	},

	lerpVectors: function ( v1, v2, alpha ) {

		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) );

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;

		return array;

	},

	fromBufferAttribute: function ( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );

		return this;

	},

	rotateAround: function ( center, angle ) {

		var c = Math.cos( angle ), s = Math.sin( angle );

		var x = this.x - center.x;
		var y = this.y - center.y;

		this.x = x * c - y * s + center.x;
		this.y = x * s + y * c + center.y;

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */

var textureId = 0;

function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

	Object.defineProperty( this, 'id', { value: textureId ++ } );

	this.uuid = _Math.generateUUID();

	this.name = '';

	this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;
	this.mipmaps = [];

	this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;

	this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;
	this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;

	this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;
	this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;

	this.anisotropy = anisotropy !== undefined ? anisotropy : 1;

	this.format = format !== undefined ? format : RGBAFormat;
	this.type = type !== undefined ? type : UnsignedByteType;

	this.offset = new Vector2( 0, 0 );
	this.repeat = new Vector2( 1, 1 );

	this.generateMipmaps = true;
	this.premultiplyAlpha = false;
	this.flipY = true;
	this.unpackAlignment = 4;	// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)

	// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
	//
	// Also changing the encoding after already used by a Material will not automatically make the Material
	// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.
	this.encoding = encoding !== undefined ? encoding : LinearEncoding;

	this.version = 0;
	this.onUpdate = null;

}

Texture.DEFAULT_IMAGE = undefined;
Texture.DEFAULT_MAPPING = UVMapping;

Object.defineProperty( Texture.prototype, "needsUpdate", {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( Texture.prototype, EventDispatcher.prototype, {

	constructor: Texture,

	isTexture: true,

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.name = source.name;

		this.image = source.image;
		this.mipmaps = source.mipmaps.slice( 0 );

		this.mapping = source.mapping;

		this.wrapS = source.wrapS;
		this.wrapT = source.wrapT;

		this.magFilter = source.magFilter;
		this.minFilter = source.minFilter;

		this.anisotropy = source.anisotropy;

		this.format = source.format;
		this.type = source.type;

		this.offset.copy( source.offset );
		this.repeat.copy( source.repeat );

		this.generateMipmaps = source.generateMipmaps;
		this.premultiplyAlpha = source.premultiplyAlpha;
		this.flipY = source.flipY;
		this.unpackAlignment = source.unpackAlignment;
		this.encoding = source.encoding;

		return this;

	},

	toJSON: function ( meta ) {

		if ( meta.textures[ this.uuid ] !== undefined ) {

			return meta.textures[ this.uuid ];

		}

		function getDataURL( image ) {

			var canvas;

			if ( image.toDataURL !== undefined ) {

				canvas = image;

			} else {

				canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
				canvas.width = image.width;
				canvas.height = image.height;

				canvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );

			}

			if ( canvas.width > 2048 || canvas.height > 2048 ) {

				return canvas.toDataURL( 'image/jpeg', 0.6 );

			} else {

				return canvas.toDataURL( 'image/png' );

			}

		}

		var output = {
			metadata: {
				version: 4.4,
				type: 'Texture',
				generator: 'Texture.toJSON'
			},

			uuid: this.uuid,
			name: this.name,

			mapping: this.mapping,

			repeat: [ this.repeat.x, this.repeat.y ],
			offset: [ this.offset.x, this.offset.y ],
			wrap: [ this.wrapS, this.wrapT ],

			minFilter: this.minFilter,
			magFilter: this.magFilter,
			anisotropy: this.anisotropy,

			flipY: this.flipY
		};

		if ( this.image !== undefined ) {

			// TODO: Move to THREE.Image

			var image = this.image;

			if ( image.uuid === undefined ) {

				image.uuid = _Math.generateUUID(); // UGH

			}

			if ( meta.images[ image.uuid ] === undefined ) {

				meta.images[ image.uuid ] = {
					uuid: image.uuid,
					url: getDataURL( image )
				};

			}

			output.image = image.uuid;

		}

		meta.textures[ this.uuid ] = output;

		return output;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	},

	transformUv: function ( uv ) {

		if ( this.mapping !== UVMapping ) return;

		uv.multiply( this.repeat );
		uv.add( this.offset );

		if ( uv.x < 0 || uv.x > 1 ) {

			switch ( this.wrapS ) {

				case RepeatWrapping:

					uv.x = uv.x - Math.floor( uv.x );
					break;

				case ClampToEdgeWrapping:

					uv.x = uv.x < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {

						uv.x = Math.ceil( uv.x ) - uv.x;

					} else {

						uv.x = uv.x - Math.floor( uv.x );

					}
					break;

			}

		}

		if ( uv.y < 0 || uv.y > 1 ) {

			switch ( this.wrapT ) {

				case RepeatWrapping:

					uv.y = uv.y - Math.floor( uv.y );
					break;

				case ClampToEdgeWrapping:

					uv.y = uv.y < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {

						uv.y = Math.ceil( uv.y ) - uv.y;

					} else {

						uv.y = uv.y - Math.floor( uv.y );

					}
					break;

			}

		}

		if ( this.flipY ) {

			uv.y = 1 - uv.y;

		}

	}

} );

/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */

function Vector4( x, y, z, w ) {

	this.x = x || 0;
	this.y = y || 0;
	this.z = z || 0;
	this.w = ( w !== undefined ) ? w : 1;

}

Object.assign( Vector4.prototype, {

	isVector4: true,

	set: function ( x, y, z, w ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

		return this;

	},

	setScalar: function ( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;
		this.w = scalar;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},

	setZ: function ( z ) {

		this.z = z;

		return this;

	},

	setW: function ( w ) {

		this.w = w;

		return this;

	},

	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			case 3: this.w = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			case 3: return this.w;
			default: throw new Error( 'index is out of range: ' + index );

		}

	},

	clone: function () {

		return new this.constructor( this.x, this.y, this.z, this.w );

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = ( v.w !== undefined ) ? v.w : 1;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		this.w += v.w;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;
		this.z += s;
		this.w += s;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		this.w = a.w + b.w;

		return this;

	},

	addScaledVector: function ( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;
		this.w += v.w * s;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		this.w -= v.w;

		return this;

	},

	subScalar: function ( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;
		this.w -= s;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		this.w = a.w - b.w;

		return this;

	},

	multiplyScalar: function ( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;
		this.w *= scalar;

		return this;

	},

	applyMatrix4: function ( m ) {

		var x = this.x, y = this.y, z = this.z, w = this.w;
		var e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;
		this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;

		return this;

	},

	divideScalar: function ( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	},

	setAxisAngleFromQuaternion: function ( q ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm

		// q is assumed to be normalized

		this.w = 2 * Math.acos( q.w );

		var s = Math.sqrt( 1 - q.w * q.w );

		if ( s < 0.0001 ) {

			 this.x = 1;
			 this.y = 0;
			 this.z = 0;

		} else {

			 this.x = q.x / s;
			 this.y = q.y / s;
			 this.z = q.z / s;

		}

		return this;

	},

	setAxisAngleFromRotationMatrix: function ( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		var angle, x, y, z,		// variables for result
			epsilon = 0.01,		// margin to allow for rounding errors
			epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees

			te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		if ( ( Math.abs( m12 - m21 ) < epsilon ) &&
		     ( Math.abs( m13 - m31 ) < epsilon ) &&
		     ( Math.abs( m23 - m32 ) < epsilon ) ) {

			// singularity found
			// first check for identity matrix which must have +1 for all terms
			// in leading diagonal and zero in other terms

			if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&
			     ( Math.abs( m13 + m31 ) < epsilon2 ) &&
			     ( Math.abs( m23 + m32 ) < epsilon2 ) &&
			     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {

				// this singularity is identity matrix so angle = 0

				this.set( 1, 0, 0, 0 );

				return this; // zero angle, arbitrary axis

			}

			// otherwise this singularity is angle = 180

			angle = Math.PI;

			var xx = ( m11 + 1 ) / 2;
			var yy = ( m22 + 1 ) / 2;
			var zz = ( m33 + 1 ) / 2;
			var xy = ( m12 + m21 ) / 4;
			var xz = ( m13 + m31 ) / 4;
			var yz = ( m23 + m32 ) / 4;

			if ( ( xx > yy ) && ( xx > zz ) ) {

				// m11 is the largest diagonal term

				if ( xx < epsilon ) {

					x = 0;
					y = 0.707106781;
					z = 0.707106781;

				} else {

					x = Math.sqrt( xx );
					y = xy / x;
					z = xz / x;

				}

			} else if ( yy > zz ) {

				// m22 is the largest diagonal term

				if ( yy < epsilon ) {

					x = 0.707106781;
					y = 0;
					z = 0.707106781;

				} else {

					y = Math.sqrt( yy );
					x = xy / y;
					z = yz / y;

				}

			} else {

				// m33 is the largest diagonal term so base result on this

				if ( zz < epsilon ) {

					x = 0.707106781;
					y = 0.707106781;
					z = 0;

				} else {

					z = Math.sqrt( zz );
					x = xz / z;
					y = yz / z;

				}

			}

			this.set( x, y, z, angle );

			return this; // return 180 deg rotation

		}

		// as we have reached here there are no singularities so we can handle normally

		var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +
		                   ( m13 - m31 ) * ( m13 - m31 ) +
		                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize

		if ( Math.abs( s ) < 0.001 ) s = 1;

		// prevent divide by zero, should not happen if matrix is orthogonal and should be
		// caught by singularity test above, but I've left it in just in case

		this.x = ( m32 - m23 ) / s;
		this.y = ( m13 - m31 ) / s;
		this.z = ( m21 - m12 ) / s;
		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );

		return this;

	},

	min: function ( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );
		this.w = Math.min( this.w, v.w );

		return this;

	},

	max: function ( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );
		this.w = Math.max( this.w, v.w );

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );
		this.w = Math.max( min.w, Math.min( max.w, this.w ) );

		return this;

	},

	clampScalar: function () {

		var min = new Vector4();
		var max = new Vector4();

		return function clampScalar( minVal, maxVal ) {

			min.set( minVal, minVal, minVal, minVal );
			max.set( maxVal, maxVal, maxVal, maxVal );

			return this.clamp( min, max );

		};

	}(),

	floor: function () {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );
		this.w = Math.floor( this.w );

		return this;

	},

	ceil: function () {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );
		this.w = Math.ceil( this.w );

		return this;

	},

	round: function () {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );
		this.w = Math.round( this.w );

		return this;

	},

	roundToZero: function () {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
		this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );

		return this;

	},

	negate: function () {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;
		this.w = - this.w;

		return this;

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

	},

	lengthManhattan: function () {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	setLength: function ( length ) {

		return this.multiplyScalar( length / this.length() );

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;
		this.w += ( v.w - this.w ) * alpha;

		return this;

	},

	lerpVectors: function ( v1, v2, alpha ) {

		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];
		this.w = array[ offset + 3 ];

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;
		array[ offset + 3 ] = this.w;

		return array;

	},

	fromBufferAttribute: function ( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );
		this.w = attribute.getW( index );

		return this;

	}

} );

/**
 * @author szimek / https://github.com/szimek/
 * @author alteredq / http://alteredqualia.com/
 * @author Marius Kintel / https://github.com/kintel
 */

/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/
function WebGLRenderTarget( width, height, options ) {

	this.uuid = _Math.generateUUID();

	this.width = width;
	this.height = height;

	this.scissor = new Vector4( 0, 0, width, height );
	this.scissorTest = false;

	this.viewport = new Vector4( 0, 0, width, height );

	options = options || {};

	if ( options.minFilter === undefined ) options.minFilter = LinearFilter;

	this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );

	this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
	this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;
	this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;

}

Object.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {

	isWebGLRenderTarget: true,

	setSize: function ( width, height ) {

		if ( this.width !== width || this.height !== height ) {

			this.width = width;
			this.height = height;

			this.dispose();

		}

		this.viewport.set( 0, 0, width, height );
		this.scissor.set( 0, 0, width, height );

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.width = source.width;
		this.height = source.height;

		this.viewport.copy( source.viewport );

		this.texture = source.texture.clone();

		this.depthBuffer = source.depthBuffer;
		this.stencilBuffer = source.stencilBuffer;
		this.depthTexture = source.depthTexture;

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

/**
 * @author alteredq / http://alteredqualia.com
 */

function WebGLRenderTargetCube( width, height, options ) {

	WebGLRenderTarget.call( this, width, height, options );

	this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5
	this.activeMipMapLevel = 0;

}

WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );
WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;

WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */

function Quaternion( x, y, z, w ) {

	this._x = x || 0;
	this._y = y || 0;
	this._z = z || 0;
	this._w = ( w !== undefined ) ? w : 1;

}

Object.assign( Quaternion, {

	slerp: function ( qa, qb, qm, t ) {

		return qm.copy( qa ).slerp( qb, t );

	},

	slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {

		// fuzz-free, array-based Quaternion SLERP operation

		var x0 = src0[ srcOffset0 + 0 ],
			y0 = src0[ srcOffset0 + 1 ],
			z0 = src0[ srcOffset0 + 2 ],
			w0 = src0[ srcOffset0 + 3 ],

			x1 = src1[ srcOffset1 + 0 ],
			y1 = src1[ srcOffset1 + 1 ],
			z1 = src1[ srcOffset1 + 2 ],
			w1 = src1[ srcOffset1 + 3 ];

		if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {

			var s = 1 - t,

				cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,

				dir = ( cos >= 0 ? 1 : - 1 ),
				sqrSin = 1 - cos * cos;

			// Skip the Slerp for tiny steps to avoid numeric problems:
			if ( sqrSin > Number.EPSILON ) {

				var sin = Math.sqrt( sqrSin ),
					len = Math.atan2( sin, cos * dir );

				s = Math.sin( s * len ) / sin;
				t = Math.sin( t * len ) / sin;

			}

			var tDir = t * dir;

			x0 = x0 * s + x1 * tDir;
			y0 = y0 * s + y1 * tDir;
			z0 = z0 * s + z1 * tDir;
			w0 = w0 * s + w1 * tDir;

			// Normalize in case we just did a lerp:
			if ( s === 1 - t ) {

				var f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );

				x0 *= f;
				y0 *= f;
				z0 *= f;
				w0 *= f;

			}

		}

		dst[ dstOffset ] = x0;
		dst[ dstOffset + 1 ] = y0;
		dst[ dstOffset + 2 ] = z0;
		dst[ dstOffset + 3 ] = w0;

	}

} );

Object.defineProperties( Quaternion.prototype, {

	x: {

		get: function () {

			return this._x;

		},

		set: function ( value ) {

			this._x = value;
			this.onChangeCallback();

		}

	},

	y: {

		get: function () {

			return this._y;

		},

		set: function ( value ) {

			this._y = value;
			this.onChangeCallback();

		}

	},

	z: {

		get: function () {

			return this._z;

		},

		set: function ( value ) {

			this._z = value;
			this.onChangeCallback();

		}

	},

	w: {

		get: function () {

			return this._w;

		},

		set: function ( value ) {

			this._w = value;
			this.onChangeCallback();

		}

	}

} );

Object.assign( Quaternion.prototype, {

	set: function ( x, y, z, w ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._w = w;

		this.onChangeCallback();

		return this;

	},

	clone: function () {

		return new this.constructor( this._x, this._y, this._z, this._w );

	},

	copy: function ( quaternion ) {

		this._x = quaternion.x;
		this._y = quaternion.y;
		this._z = quaternion.z;
		this._w = quaternion.w;

		this.onChangeCallback();

		return this;

	},

	setFromEuler: function ( euler, update ) {

		if ( ( euler && euler.isEuler ) === false ) {

			throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );

		}

		var x = euler._x, y = euler._y, z = euler._z, order = euler.order;

		// http://www.mathworks.com/matlabcentral/fileexchange/
		// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
		//	content/SpinCalc.m

		var cos = Math.cos;
		var sin = Math.sin;

		var c1 = cos( x / 2 );
		var c2 = cos( y / 2 );
		var c3 = cos( z / 2 );

		var s1 = sin( x / 2 );
		var s2 = sin( y / 2 );
		var s3 = sin( z / 2 );

		if ( order === 'XYZ' ) {

			this._x = s1 * c2 * c3 + c1 * s2 * s3;
			this._y = c1 * s2 * c3 - s1 * c2 * s3;
			this._z = c1 * c2 * s3 + s1 * s2 * c3;
			this._w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'YXZ' ) {

			this._x = s1 * c2 * c3 + c1 * s2 * s3;
			this._y = c1 * s2 * c3 - s1 * c2 * s3;
			this._z = c1 * c2 * s3 - s1 * s2 * c3;
			this._w = c1 * c2 * c3 + s1 * s2 * s3;

		} else if ( order === 'ZXY' ) {

			this._x = s1 * c2 * c3 - c1 * s2 * s3;
			this._y = c1 * s2 * c3 + s1 * c2 * s3;
			this._z = c1 * c2 * s3 + s1 * s2 * c3;
			this._w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'ZYX' ) {

			this._x = s1 * c2 * c3 - c1 * s2 * s3;
			this._y = c1 * s2 * c3 + s1 * c2 * s3;
			this._z = c1 * c2 * s3 - s1 * s2 * c3;
			this._w = c1 * c2 * c3 + s1 * s2 * s3;

		} else if ( order === 'YZX' ) {

			this._x = s1 * c2 * c3 + c1 * s2 * s3;
			this._y = c1 * s2 * c3 + s1 * c2 * s3;
			this._z = c1 * c2 * s3 - s1 * s2 * c3;
			this._w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'XZY' ) {

			this._x = s1 * c2 * c3 - c1 * s2 * s3;
			this._y = c1 * s2 * c3 - s1 * c2 * s3;
			this._z = c1 * c2 * s3 + s1 * s2 * c3;
			this._w = c1 * c2 * c3 + s1 * s2 * s3;

		}

		if ( update !== false ) this.onChangeCallback();

		return this;

	},

	setFromAxisAngle: function ( axis, angle ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm

		// assumes axis is normalized

		var halfAngle = angle / 2, s = Math.sin( halfAngle );

		this._x = axis.x * s;
		this._y = axis.y * s;
		this._z = axis.z * s;
		this._w = Math.cos( halfAngle );

		this.onChangeCallback();

		return this;

	},

	setFromRotationMatrix: function ( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		var te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],

			trace = m11 + m22 + m33,
			s;

		if ( trace > 0 ) {

			s = 0.5 / Math.sqrt( trace + 1.0 );

			this._w = 0.25 / s;
			this._x = ( m32 - m23 ) * s;
			this._y = ( m13 - m31 ) * s;
			this._z = ( m21 - m12 ) * s;

		} else if ( m11 > m22 && m11 > m33 ) {

			s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );

			this._w = ( m32 - m23 ) / s;
			this._x = 0.25 * s;
			this._y = ( m12 + m21 ) / s;
			this._z = ( m13 + m31 ) / s;

		} else if ( m22 > m33 ) {

			s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );

			this._w = ( m13 - m31 ) / s;
			this._x = ( m12 + m21 ) / s;
			this._y = 0.25 * s;
			this._z = ( m23 + m32 ) / s;

		} else {

			s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );

			this._w = ( m21 - m12 ) / s;
			this._x = ( m13 + m31 ) / s;
			this._y = ( m23 + m32 ) / s;
			this._z = 0.25 * s;

		}

		this.onChangeCallback();

		return this;

	},

	setFromUnitVectors: function () {

		// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final

		// assumes direction vectors vFrom and vTo are normalized

		var v1 = new Vector3();
		var r;

		var EPS = 0.000001;

		return function setFromUnitVectors( vFrom, vTo ) {

			if ( v1 === undefined ) v1 = new Vector3();

			r = vFrom.dot( vTo ) + 1;

			if ( r < EPS ) {

				r = 0;

				if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {

					v1.set( - vFrom.y, vFrom.x, 0 );

				} else {

					v1.set( 0, - vFrom.z, vFrom.y );

				}

			} else {

				v1.crossVectors( vFrom, vTo );

			}

			this._x = v1.x;
			this._y = v1.y;
			this._z = v1.z;
			this._w = r;

			return this.normalize();

		};

	}(),

	inverse: function () {

		return this.conjugate().normalize();

	},

	conjugate: function () {

		this._x *= - 1;
		this._y *= - 1;
		this._z *= - 1;

		this.onChangeCallback();

		return this;

	},

	dot: function ( v ) {

		return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;

	},

	lengthSq: function () {

		return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;

	},

	length: function () {

		return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );

	},

	normalize: function () {

		var l = this.length();

		if ( l === 0 ) {

			this._x = 0;
			this._y = 0;
			this._z = 0;
			this._w = 1;

		} else {

			l = 1 / l;

			this._x = this._x * l;
			this._y = this._y * l;
			this._z = this._z * l;
			this._w = this._w * l;

		}

		this.onChangeCallback();

		return this;

	},

	multiply: function ( q, p ) {

		if ( p !== undefined ) {

			console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
			return this.multiplyQuaternions( q, p );

		}

		return this.multiplyQuaternions( this, q );

	},

	premultiply: function ( q ) {

		return this.multiplyQuaternions( q, this );

	},

	multiplyQuaternions: function ( a, b ) {

		// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm

		var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
		var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;

		this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;

		this.onChangeCallback();

		return this;

	},

	slerp: function ( qb, t ) {

		if ( t === 0 ) return this;
		if ( t === 1 ) return this.copy( qb );

		var x = this._x, y = this._y, z = this._z, w = this._w;

		// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/

		var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;

		if ( cosHalfTheta < 0 ) {

			this._w = - qb._w;
			this._x = - qb._x;
			this._y = - qb._y;
			this._z = - qb._z;

			cosHalfTheta = - cosHalfTheta;

		} else {

			this.copy( qb );

		}

		if ( cosHalfTheta >= 1.0 ) {

			this._w = w;
			this._x = x;
			this._y = y;
			this._z = z;

			return this;

		}

		var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );

		if ( Math.abs( sinHalfTheta ) < 0.001 ) {

			this._w = 0.5 * ( w + this._w );
			this._x = 0.5 * ( x + this._x );
			this._y = 0.5 * ( y + this._y );
			this._z = 0.5 * ( z + this._z );

			return this;

		}

		var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );
		var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
			ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;

		this._w = ( w * ratioA + this._w * ratioB );
		this._x = ( x * ratioA + this._x * ratioB );
		this._y = ( y * ratioA + this._y * ratioB );
		this._z = ( z * ratioA + this._z * ratioB );

		this.onChangeCallback();

		return this;

	},

	equals: function ( quaternion ) {

		return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		this._x = array[ offset ];
		this._y = array[ offset + 1 ];
		this._z = array[ offset + 2 ];
		this._w = array[ offset + 3 ];

		this.onChangeCallback();

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._w;

		return array;

	},

	onChange: function ( callback ) {

		this.onChangeCallback = callback;

		return this;

	},

	onChangeCallback: function () {}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author *kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */

function Vector3( x, y, z ) {

	this.x = x || 0;
	this.y = y || 0;
	this.z = z || 0;

}

Object.assign( Vector3.prototype, {

	isVector3: true,

	set: function ( x, y, z ) {

		this.x = x;
		this.y = y;
		this.z = z;

		return this;

	},

	setScalar: function ( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},

	setZ: function ( z ) {

		this.z = z;

		return this;

	},

	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			default: throw new Error( 'index is out of range: ' + index );

		}

	},

	clone: function () {

		return new this.constructor( this.x, this.y, this.z );

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;
		this.z += s;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;

		return this;

	},

	addScaledVector: function ( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;

		return this;

	},

	subScalar: function ( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;

		return this;

	},

	multiply: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
			return this.multiplyVectors( v, w );

		}

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;

		return this;

	},

	multiplyScalar: function ( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;

		return this;

	},

	multiplyVectors: function ( a, b ) {

		this.x = a.x * b.x;
		this.y = a.y * b.y;
		this.z = a.z * b.z;

		return this;

	},

	applyEuler: function () {

		var quaternion = new Quaternion();

		return function applyEuler( euler ) {

			if ( ( euler && euler.isEuler ) === false ) {

				console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );

			}

			return this.applyQuaternion( quaternion.setFromEuler( euler ) );

		};

	}(),

	applyAxisAngle: function () {

		var quaternion = new Quaternion();

		return function applyAxisAngle( axis, angle ) {

			return this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );

		};

	}(),

	applyMatrix3: function ( m ) {

		var x = this.x, y = this.y, z = this.z;
		var e = m.elements;

		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;
		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;
		this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;

		return this;

	},

	applyMatrix4: function ( m ) {

		var x = this.x, y = this.y, z = this.z;
		var e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];
		var w =  e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ];

		return this.divideScalar( w );

	},

	applyQuaternion: function ( q ) {

		var x = this.x, y = this.y, z = this.z;
		var qx = q.x, qy = q.y, qz = q.z, qw = q.w;

		// calculate quat * vector

		var ix =  qw * x + qy * z - qz * y;
		var iy =  qw * y + qz * x - qx * z;
		var iz =  qw * z + qx * y - qy * x;
		var iw = - qx * x - qy * y - qz * z;

		// calculate result * inverse quat

		this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
		this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
		this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;

		return this;

	},

	project: function () {

		var matrix = new Matrix4();

		return function project( camera ) {

			matrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );
			return this.applyMatrix4( matrix );

		};

	}(),

	unproject: function () {

		var matrix = new Matrix4();

		return function unproject( camera ) {

			matrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );
			return this.applyMatrix4( matrix );

		};

	}(),

	transformDirection: function ( m ) {

		// input: THREE.Matrix4 affine matrix
		// vector interpreted as a direction

		var x = this.x, y = this.y, z = this.z;
		var e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;

		return this.normalize();

	},

	divide: function ( v ) {

		this.x /= v.x;
		this.y /= v.y;
		this.z /= v.z;

		return this;

	},

	divideScalar: function ( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	},

	min: function ( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );

		return this;

	},

	max: function ( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );

		return this;

	},

	clampScalar: function () {

		var min = new Vector3();
		var max = new Vector3();

		return function clampScalar( minVal, maxVal ) {

			min.set( minVal, minVal, minVal );
			max.set( maxVal, maxVal, maxVal );

			return this.clamp( min, max );

		};

	}(),

	clampLength: function ( min, max ) {

		var length = this.length();

		return this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );

	},

	floor: function () {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );

		return this;

	},

	ceil: function () {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );

		return this;

	},

	round: function () {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );

		return this;

	},

	roundToZero: function () {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );

		return this;

	},

	negate: function () {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;

		return this;

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z;

	},

	// TODO lengthSquared?

	lengthSq: function () {

		return this.x * this.x + this.y * this.y + this.z * this.z;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );

	},

	lengthManhattan: function () {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	setLength: function ( length ) {

		return this.multiplyScalar( length / this.length() );

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;

		return this;

	},

	lerpVectors: function ( v1, v2, alpha ) {

		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

	},

	cross: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
			return this.crossVectors( v, w );

		}

		var x = this.x, y = this.y, z = this.z;

		this.x = y * v.z - z * v.y;
		this.y = z * v.x - x * v.z;
		this.z = x * v.y - y * v.x;

		return this;

	},

	crossVectors: function ( a, b ) {

		var ax = a.x, ay = a.y, az = a.z;
		var bx = b.x, by = b.y, bz = b.z;

		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;

		return this;

	},

	projectOnVector: function ( vector ) {

		var scalar = vector.dot( this ) / vector.lengthSq();

		return this.copy( vector ).multiplyScalar( scalar );

	},

	projectOnPlane: function () {

		var v1 = new Vector3();

		return function projectOnPlane( planeNormal ) {

			v1.copy( this ).projectOnVector( planeNormal );

			return this.sub( v1 );

		};

	}(),

	reflect: function () {

		// reflect incident vector off plane orthogonal to normal
		// normal is assumed to have unit length

		var v1 = new Vector3();

		return function reflect( normal ) {

			return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );

		};

	}(),

	angleTo: function ( v ) {

		var theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );

		// clamp, to handle numerical problems

		return Math.acos( _Math.clamp( theta, - 1, 1 ) );

	},

	distanceTo: function ( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	},

	distanceToSquared: function ( v ) {

		var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;

		return dx * dx + dy * dy + dz * dz;

	},

	distanceToManhattan: function ( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );

	},

	setFromSpherical: function ( s ) {

		var sinPhiRadius = Math.sin( s.phi ) * s.radius;

		this.x = sinPhiRadius * Math.sin( s.theta );
		this.y = Math.cos( s.phi ) * s.radius;
		this.z = sinPhiRadius * Math.cos( s.theta );

		return this;

	},

	setFromCylindrical: function ( c ) {

		this.x = c.radius * Math.sin( c.theta );
		this.y = c.y;
		this.z = c.radius * Math.cos( c.theta );

		return this;

	},

	setFromMatrixPosition: function ( m ) {

		return this.setFromMatrixColumn( m, 3 );

	},

	setFromMatrixScale: function ( m ) {

		var sx = this.setFromMatrixColumn( m, 0 ).length();
		var sy = this.setFromMatrixColumn( m, 1 ).length();
		var sz = this.setFromMatrixColumn( m, 2 ).length();

		this.x = sx;
		this.y = sy;
		this.z = sz;

		return this;

	},

	setFromMatrixColumn: function ( m, index ) {


		return this.fromArray( m.elements, index * 4 );

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;

		return array;

	},

	fromBufferAttribute: function ( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */

function Matrix4() {

	this.elements = [

		1, 0, 0, 0,
		0, 1, 0, 0,
		0, 0, 1, 0,
		0, 0, 0, 1

	];

	if ( arguments.length > 0 ) {

		console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );

	}

}

Object.assign( Matrix4.prototype, {

	isMatrix4: true,

	set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

		var te = this.elements;

		te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;
		te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;
		te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;
		te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;

		return this;

	},

	identity: function () {

		this.set(

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	},

	clone: function () {

		return new Matrix4().fromArray( this.elements );

	},

	copy: function ( m ) {

		var te = this.elements;
		var me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];
		te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];
		te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];
		te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];

		return this;

	},

	copyPosition: function ( m ) {

		var te = this.elements, me = m.elements;

		te[ 12 ] = me[ 12 ];
		te[ 13 ] = me[ 13 ];
		te[ 14 ] = me[ 14 ];

		return this;

	},

	extractBasis: function ( xAxis, yAxis, zAxis ) {

		xAxis.setFromMatrixColumn( this, 0 );
		yAxis.setFromMatrixColumn( this, 1 );
		zAxis.setFromMatrixColumn( this, 2 );

		return this;

	},

	makeBasis: function ( xAxis, yAxis, zAxis ) {

		this.set(
			xAxis.x, yAxis.x, zAxis.x, 0,
			xAxis.y, yAxis.y, zAxis.y, 0,
			xAxis.z, yAxis.z, zAxis.z, 0,
			0,       0,       0,       1
		);

		return this;

	},

	extractRotation: function () {

		var v1 = new Vector3();

		return function extractRotation( m ) {

			var te = this.elements;
			var me = m.elements;

			var scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();
			var scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();
			var scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();

			te[ 0 ] = me[ 0 ] * scaleX;
			te[ 1 ] = me[ 1 ] * scaleX;
			te[ 2 ] = me[ 2 ] * scaleX;

			te[ 4 ] = me[ 4 ] * scaleY;
			te[ 5 ] = me[ 5 ] * scaleY;
			te[ 6 ] = me[ 6 ] * scaleY;

			te[ 8 ] = me[ 8 ] * scaleZ;
			te[ 9 ] = me[ 9 ] * scaleZ;
			te[ 10 ] = me[ 10 ] * scaleZ;

			return this;

		};

	}(),

	makeRotationFromEuler: function ( euler ) {

		if ( ( euler && euler.isEuler ) === false ) {

			console.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );

		}

		var te = this.elements;

		var x = euler.x, y = euler.y, z = euler.z;
		var a = Math.cos( x ), b = Math.sin( x );
		var c = Math.cos( y ), d = Math.sin( y );
		var e = Math.cos( z ), f = Math.sin( z );

		if ( euler.order === 'XYZ' ) {

			var ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = - c * f;
			te[ 8 ] = d;

			te[ 1 ] = af + be * d;
			te[ 5 ] = ae - bf * d;
			te[ 9 ] = - b * c;

			te[ 2 ] = bf - ae * d;
			te[ 6 ] = be + af * d;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YXZ' ) {

			var ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce + df * b;
			te[ 4 ] = de * b - cf;
			te[ 8 ] = a * d;

			te[ 1 ] = a * f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b;

			te[ 2 ] = cf * b - de;
			te[ 6 ] = df + ce * b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZXY' ) {

			var ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce - df * b;
			te[ 4 ] = - a * f;
			te[ 8 ] = de + cf * b;

			te[ 1 ] = cf + de * b;
			te[ 5 ] = a * e;
			te[ 9 ] = df - ce * b;

			te[ 2 ] = - a * d;
			te[ 6 ] = b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZYX' ) {

			var ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = be * d - af;
			te[ 8 ] = ae * d + bf;

			te[ 1 ] = c * f;
			te[ 5 ] = bf * d + ae;
			te[ 9 ] = af * d - be;

			te[ 2 ] = - d;
			te[ 6 ] = b * c;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YZX' ) {

			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = bd - ac * f;
			te[ 8 ] = bc * f + ad;

			te[ 1 ] = f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b * e;

			te[ 2 ] = - d * e;
			te[ 6 ] = ad * f + bc;
			te[ 10 ] = ac - bd * f;

		} else if ( euler.order === 'XZY' ) {

			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = - f;
			te[ 8 ] = d * e;

			te[ 1 ] = ac * f + bd;
			te[ 5 ] = a * e;
			te[ 9 ] = ad * f - bc;

			te[ 2 ] = bc * f - ad;
			te[ 6 ] = b * e;
			te[ 10 ] = bd * f + ac;

		}

		// last column
		te[ 3 ] = 0;
		te[ 7 ] = 0;
		te[ 11 ] = 0;

		// bottom row
		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	},

	makeRotationFromQuaternion: function ( q ) {

		var te = this.elements;

		var x = q._x, y = q._y, z = q._z, w = q._w;
		var x2 = x + x, y2 = y + y, z2 = z + z;
		var xx = x * x2, xy = x * y2, xz = x * z2;
		var yy = y * y2, yz = y * z2, zz = z * z2;
		var wx = w * x2, wy = w * y2, wz = w * z2;

		te[ 0 ] = 1 - ( yy + zz );
		te[ 4 ] = xy - wz;
		te[ 8 ] = xz + wy;

		te[ 1 ] = xy + wz;
		te[ 5 ] = 1 - ( xx + zz );
		te[ 9 ] = yz - wx;

		te[ 2 ] = xz - wy;
		te[ 6 ] = yz + wx;
		te[ 10 ] = 1 - ( xx + yy );

		// last column
		te[ 3 ] = 0;
		te[ 7 ] = 0;
		te[ 11 ] = 0;

		// bottom row
		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	},

	lookAt: function () {

		var x = new Vector3();
		var y = new Vector3();
		var z = new Vector3();

		return function lookAt( eye, target, up ) {

			var te = this.elements;

			z.subVectors( eye, target );

			if ( z.lengthSq() === 0 ) {

				// eye and target are in the same position

				z.z = 1;

			}

			z.normalize();
			x.crossVectors( up, z );

			if ( x.lengthSq() === 0 ) {

				// eye and target are in the same vertical

				z.z += 0.0001;
				x.crossVectors( up, z );

			}

			x.normalize();
			y.crossVectors( z, x );

			te[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;
			te[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;
			te[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;

			return this;

		};

	}(),

	multiply: function ( m, n ) {

		if ( n !== undefined ) {

			console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
			return this.multiplyMatrices( m, n );

		}

		return this.multiplyMatrices( this, m );

	},

	premultiply: function ( m ) {

		return this.multiplyMatrices( m, this );

	},

	multiplyMatrices: function ( a, b ) {

		var ae = a.elements;
		var be = b.elements;
		var te = this.elements;

		var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];
		var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];
		var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];
		var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];

		var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];
		var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];
		var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];
		var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];

		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

		te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

		return this;

	},

	multiplyScalar: function ( s ) {

		var te = this.elements;

		te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;
		te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;
		te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;
		te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;

		return this;

	},

	applyToBufferAttribute: function () {

		var v1 = new Vector3();

		return function applyToBufferAttribute( attribute ) {

			for ( var i = 0, l = attribute.count; i < l; i ++ ) {

				v1.x = attribute.getX( i );
				v1.y = attribute.getY( i );
				v1.z = attribute.getZ( i );

				v1.applyMatrix4( this );

				attribute.setXYZ( i, v1.x, v1.y, v1.z );

			}

			return attribute;

		};

	}(),

	determinant: function () {

		var te = this.elements;

		var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];
		var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];
		var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];
		var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];

		//TODO: make this more efficient
		//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )

		return (
			n41 * (
				+ n14 * n23 * n32
				 - n13 * n24 * n32
				 - n14 * n22 * n33
				 + n12 * n24 * n33
				 + n13 * n22 * n34
				 - n12 * n23 * n34
			) +
			n42 * (
				+ n11 * n23 * n34
				 - n11 * n24 * n33
				 + n14 * n21 * n33
				 - n13 * n21 * n34
				 + n13 * n24 * n31
				 - n14 * n23 * n31
			) +
			n43 * (
				+ n11 * n24 * n32
				 - n11 * n22 * n34
				 - n14 * n21 * n32
				 + n12 * n21 * n34
				 + n14 * n22 * n31
				 - n12 * n24 * n31
			) +
			n44 * (
				- n13 * n22 * n31
				 - n11 * n23 * n32
				 + n11 * n22 * n33
				 + n13 * n21 * n32
				 - n12 * n21 * n33
				 + n12 * n23 * n31
			)

		);

	},

	transpose: function () {

		var te = this.elements;
		var tmp;

		tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;
		tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;
		tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;

		tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;
		tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;
		tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;

		return this;

	},

	setPosition: function ( v ) {

		var te = this.elements;

		te[ 12 ] = v.x;
		te[ 13 ] = v.y;
		te[ 14 ] = v.z;

		return this;

	},

	getInverse: function ( m, throwOnDegenerate ) {

		// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
		var te = this.elements,
			me = m.elements,

			n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],
			n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],
			n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],
			n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],

			t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,
			t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,
			t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,
			t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;

		var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;

		if ( det === 0 ) {

			var msg = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";

			if ( throwOnDegenerate === true ) {

				throw new Error( msg );

			} else {

				console.warn( msg );

			}

			return this.identity();

		}

		var detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;
		te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;
		te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;

		te[ 4 ] = t12 * detInv;
		te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;
		te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;
		te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;

		te[ 8 ] = t13 * detInv;
		te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;
		te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;
		te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;

		te[ 12 ] = t14 * detInv;
		te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;
		te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;
		te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;

		return this;

	},

	scale: function ( v ) {

		var te = this.elements;
		var x = v.x, y = v.y, z = v.z;

		te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;
		te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;
		te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;
		te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;

		return this;

	},

	getMaxScaleOnAxis: function () {

		var te = this.elements;

		var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];
		var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];
		var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];

		return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );

	},

	makeTranslation: function ( x, y, z ) {

		this.set(

			1, 0, 0, x,
			0, 1, 0, y,
			0, 0, 1, z,
			0, 0, 0, 1

		);

		return this;

	},

	makeRotationX: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			1, 0,  0, 0,
			0, c, - s, 0,
			0, s,  c, 0,
			0, 0,  0, 1

		);

		return this;

	},

	makeRotationY: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			 c, 0, s, 0,
			 0, 1, 0, 0,
			- s, 0, c, 0,
			 0, 0, 0, 1

		);

		return this;

	},

	makeRotationZ: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			c, - s, 0, 0,
			s,  c, 0, 0,
			0,  0, 1, 0,
			0,  0, 0, 1

		);

		return this;

	},

	makeRotationAxis: function ( axis, angle ) {

		// Based on http://www.gamedev.net/reference/articles/article1199.asp

		var c = Math.cos( angle );
		var s = Math.sin( angle );
		var t = 1 - c;
		var x = axis.x, y = axis.y, z = axis.z;
		var tx = t * x, ty = t * y;

		this.set(

			tx * x + c, tx * y - s * z, tx * z + s * y, 0,
			tx * y + s * z, ty * y + c, ty * z - s * x, 0,
			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
			0, 0, 0, 1

		);

		 return this;

	},

	makeScale: function ( x, y, z ) {

		this.set(

			x, 0, 0, 0,
			0, y, 0, 0,
			0, 0, z, 0,
			0, 0, 0, 1

		);

		return this;

	},

	makeShear: function ( x, y, z ) {

		this.set(

			1, y, z, 0,
			x, 1, z, 0,
			x, y, 1, 0,
			0, 0, 0, 1

		);

		return this;

	},

	compose: function ( position, quaternion, scale ) {

		this.makeRotationFromQuaternion( quaternion );
		this.scale( scale );
		this.setPosition( position );

		return this;

	},

	decompose: function () {

		var vector = new Vector3();
		var matrix = new Matrix4();

		return function decompose( position, quaternion, scale ) {

			var te = this.elements;

			var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();
			var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();
			var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();

			// if determine is negative, we need to invert one scale
			var det = this.determinant();
			if ( det < 0 ) sx = - sx;

			position.x = te[ 12 ];
			position.y = te[ 13 ];
			position.z = te[ 14 ];

			// scale the rotation part
			matrix.copy( this );

			var invSX = 1 / sx;
			var invSY = 1 / sy;
			var invSZ = 1 / sz;

			matrix.elements[ 0 ] *= invSX;
			matrix.elements[ 1 ] *= invSX;
			matrix.elements[ 2 ] *= invSX;

			matrix.elements[ 4 ] *= invSY;
			matrix.elements[ 5 ] *= invSY;
			matrix.elements[ 6 ] *= invSY;

			matrix.elements[ 8 ] *= invSZ;
			matrix.elements[ 9 ] *= invSZ;
			matrix.elements[ 10 ] *= invSZ;

			quaternion.setFromRotationMatrix( matrix );

			scale.x = sx;
			scale.y = sy;
			scale.z = sz;

			return this;

		};

	}(),

	makePerspective: function ( left, right, top, bottom, near, far ) {

		if ( far === undefined ) {

			console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );

		}

		var te = this.elements;
		var x = 2 * near / ( right - left );
		var y = 2 * near / ( top - bottom );

		var a = ( right + left ) / ( right - left );
		var b = ( top + bottom ) / ( top - bottom );
		var c = - ( far + near ) / ( far - near );
		var d = - 2 * far * near / ( far - near );

		te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;
		te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;

		return this;

	},

	makeOrthographic: function ( left, right, top, bottom, near, far ) {

		var te = this.elements;
		var w = 1.0 / ( right - left );
		var h = 1.0 / ( top - bottom );
		var p = 1.0 / ( far - near );

		var x = ( right + left ) * w;
		var y = ( top + bottom ) * h;
		var z = ( far + near ) * p;

		te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;
		te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;

		return this;

	},

	equals: function ( matrix ) {

		var te = this.elements;
		var me = matrix.elements;

		for ( var i = 0; i < 16; i ++ ) {

			if ( te[ i ] !== me[ i ] ) return false;

		}

		return true;

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		for ( var i = 0; i < 16; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		var te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];
		array[ offset + 3 ] = te[ 3 ];

		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];
		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];

		array[ offset + 8 ] = te[ 8 ];
		array[ offset + 9 ] = te[ 9 ];
		array[ offset + 10 ] = te[ 10 ];
		array[ offset + 11 ] = te[ 11 ];

		array[ offset + 12 ] = te[ 12 ];
		array[ offset + 13 ] = te[ 13 ];
		array[ offset + 14 ] = te[ 14 ];
		array[ offset + 15 ] = te[ 15 ];

		return array;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

	this.image = { data: data, width: width, height: height };

	this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
	this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

	this.generateMipmaps = false;
	this.flipY = false;
	this.unpackAlignment = 1;

}

DataTexture.prototype = Object.create( Texture.prototype );
DataTexture.prototype.constructor = DataTexture;

DataTexture.prototype.isDataTexture = true;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

	images = images !== undefined ? images : [];
	mapping = mapping !== undefined ? mapping : CubeReflectionMapping;

	Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

	this.flipY = false;

}

CubeTexture.prototype = Object.create( Texture.prototype );
CubeTexture.prototype.constructor = CubeTexture;

CubeTexture.prototype.isCubeTexture = true;

Object.defineProperty( CubeTexture.prototype, 'images', {

	get: function () {

		return this.image;

	},

	set: function ( value ) {

		this.image = value;

	}

} );

/**
 * @author tschw
 *
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [renderer] )
 *
 * 		uploads a uniform value(s)
 *  	the 'renderer' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (renderer factorizations):
 *
 * .upload( gl, seq, values, renderer )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (renderer factorizations):
 *
 * .setValue( gl, name, value )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .set( gl, obj, prop )
 *
 * 		sets uniform from object and property with same name than uniform
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */

var emptyTexture = new Texture();
var emptyCubeTexture = new CubeTexture();

// --- Base for inner nodes (including the root) ---

function UniformContainer() {

	this.seq = [];
	this.map = {};

}

// --- Utilities ---

// Array Caches (provide typed arrays for temporary by size)

var arrayCacheF32 = [];
var arrayCacheI32 = [];

// Float32Array caches used for uploading Matrix uniforms

var mat4array = new Float32Array( 16 );
var mat3array = new Float32Array( 9 );

// Flattening for arrays of vectors and matrices

function flatten( array, nBlocks, blockSize ) {

	var firstElem = array[ 0 ];

	if ( firstElem <= 0 || firstElem > 0 ) return array;
	// unoptimized: ! isNaN( firstElem )
	// see http://jacksondunstan.com/articles/983

	var n = nBlocks * blockSize,
		r = arrayCacheF32[ n ];

	if ( r === undefined ) {

		r = new Float32Array( n );
		arrayCacheF32[ n ] = r;

	}

	if ( nBlocks !== 0 ) {

		firstElem.toArray( r, 0 );

		for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {

			offset += blockSize;
			array[ i ].toArray( r, offset );

		}

	}

	return r;

}

// Texture unit allocation

function allocTexUnits( renderer, n ) {

	var r = arrayCacheI32[ n ];

	if ( r === undefined ) {

		r = new Int32Array( n );
		arrayCacheI32[ n ] = r;

	}

	for ( var i = 0; i !== n; ++ i )
		r[ i ] = renderer.allocTextureUnit();

	return r;

}

// --- Setters ---

// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.

// Single scalar

function setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }
function setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }

// Single float vector (from flat array or THREE.VectorN)

function setValue2fv( gl, v ) {

	if ( v.x === undefined ) gl.uniform2fv( this.addr, v );
	else gl.uniform2f( this.addr, v.x, v.y );

}

function setValue3fv( gl, v ) {

	if ( v.x !== undefined )
		gl.uniform3f( this.addr, v.x, v.y, v.z );
	else if ( v.r !== undefined )
		gl.uniform3f( this.addr, v.r, v.g, v.b );
	else
		gl.uniform3fv( this.addr, v );

}

function setValue4fv( gl, v ) {

	if ( v.x === undefined ) gl.uniform4fv( this.addr, v );
	else gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );

}

// Single matrix (from flat array or MatrixN)

function setValue2fm( gl, v ) {

	gl.uniformMatrix2fv( this.addr, false, v.elements || v );

}

function setValue3fm( gl, v ) {

	if ( v.elements === undefined ) {

		gl.uniformMatrix3fv( this.addr, false, v );

	} else {

		mat3array.set( v.elements );
		gl.uniformMatrix3fv( this.addr, false, mat3array );

	}

}

function setValue4fm( gl, v ) {

	if ( v.elements === undefined ) {

		gl.uniformMatrix4fv( this.addr, false, v );

	} else {

		mat4array.set( v.elements );
		gl.uniformMatrix4fv( this.addr, false, mat4array );

	}

}

// Single texture (2D / Cube)

function setValueT1( gl, v, renderer ) {

	var unit = renderer.allocTextureUnit();
	gl.uniform1i( this.addr, unit );
	renderer.setTexture2D( v || emptyTexture, unit );

}

function setValueT6( gl, v, renderer ) {

	var unit = renderer.allocTextureUnit();
	gl.uniform1i( this.addr, unit );
	renderer.setTextureCube( v || emptyCubeTexture, unit );

}

// Integer / Boolean vectors or arrays thereof (always flat arrays)

function setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }
function setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }
function setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }

// Helper to pick the right setter for the singular case

function getSingularSetter( type ) {

	switch ( type ) {

		case 0x1406: return setValue1f; // FLOAT
		case 0x8b50: return setValue2fv; // _VEC2
		case 0x8b51: return setValue3fv; // _VEC3
		case 0x8b52: return setValue4fv; // _VEC4

		case 0x8b5a: return setValue2fm; // _MAT2
		case 0x8b5b: return setValue3fm; // _MAT3
		case 0x8b5c: return setValue4fm; // _MAT4

		case 0x8b5e: return setValueT1; // SAMPLER_2D
		case 0x8b60: return setValueT6; // SAMPLER_CUBE

		case 0x1404: case 0x8b56: return setValue1i; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2
		case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3
		case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4

	}

}

// Array of scalars

function setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }
function setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }

// Array of vectors (flat or from THREE classes)

function setValueV2a( gl, v ) {

	gl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );

}

function setValueV3a( gl, v ) {

	gl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );

}

function setValueV4a( gl, v ) {

	gl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );

}

// Array of matrices (flat or from THREE clases)

function setValueM2a( gl, v ) {

	gl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );

}

function setValueM3a( gl, v ) {

	gl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );

}

function setValueM4a( gl, v ) {

	gl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );

}

// Array of textures (2D / Cube)

function setValueT1a( gl, v, renderer ) {

	var n = v.length,
		units = allocTexUnits( renderer, n );

	gl.uniform1iv( this.addr, units );

	for ( var i = 0; i !== n; ++ i ) {

		renderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );

	}

}

function setValueT6a( gl, v, renderer ) {

	var n = v.length,
		units = allocTexUnits( renderer, n );

	gl.uniform1iv( this.addr, units );

	for ( var i = 0; i !== n; ++ i ) {

		renderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );

	}

}

// Helper to pick the right setter for a pure (bottom-level) array

function getPureArraySetter( type ) {

	switch ( type ) {

		case 0x1406: return setValue1fv; // FLOAT
		case 0x8b50: return setValueV2a; // _VEC2
		case 0x8b51: return setValueV3a; // _VEC3
		case 0x8b52: return setValueV4a; // _VEC4

		case 0x8b5a: return setValueM2a; // _MAT2
		case 0x8b5b: return setValueM3a; // _MAT3
		case 0x8b5c: return setValueM4a; // _MAT4

		case 0x8b5e: return setValueT1a; // SAMPLER_2D
		case 0x8b60: return setValueT6a; // SAMPLER_CUBE

		case 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2
		case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3
		case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4

	}

}

// --- Uniform Classes ---

function SingleUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.setValue = getSingularSetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

function PureArrayUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.size = activeInfo.size;
	this.setValue = getPureArraySetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

function StructuredUniform( id ) {

	this.id = id;

	UniformContainer.call( this ); // mix-in

}

StructuredUniform.prototype.setValue = function ( gl, value ) {

	// Note: Don't need an extra 'renderer' parameter, since samplers
	// are not allowed in structured uniforms.

	var seq = this.seq;

	for ( var i = 0, n = seq.length; i !== n; ++ i ) {

		var u = seq[ i ];
		u.setValue( gl, value[ u.id ] );

	}

};

// --- Top-level ---

// Parser - builds up the property tree from the path strings

var RePathPart = /([\w\d_]+)(\])?(\[|\.)?/g;

// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.

function addUniform( container, uniformObject ) {

	container.seq.push( uniformObject );
	container.map[ uniformObject.id ] = uniformObject;

}

function parseUniform( activeInfo, addr, container ) {

	var path = activeInfo.name,
		pathLength = path.length;

	// reset RegExp object, because of the early exit of a previous run
	RePathPart.lastIndex = 0;

	for ( ; ; ) {

		var match = RePathPart.exec( path ),
			matchEnd = RePathPart.lastIndex,

			id = match[ 1 ],
			idIsIndex = match[ 2 ] === ']',
			subscript = match[ 3 ];

		if ( idIsIndex ) id = id | 0; // convert to integer

		if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {

			// bare name or "pure" bottom-level array "[0]" suffix

			addUniform( container, subscript === undefined ?
					new SingleUniform( id, activeInfo, addr ) :
					new PureArrayUniform( id, activeInfo, addr ) );

			break;

		} else {

			// step into inner node / create it in case it doesn't exist

			var map = container.map, next = map[ id ];

			if ( next === undefined ) {

				next = new StructuredUniform( id );
				addUniform( container, next );

			}

			container = next;

		}

	}

}

// Root Container

function WebGLUniforms( gl, program, renderer ) {

	UniformContainer.call( this );

	this.renderer = renderer;

	var n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );

	for ( var i = 0; i < n; ++ i ) {

		var info = gl.getActiveUniform( program, i ),
			path = info.name,
			addr = gl.getUniformLocation( program, path );

		parseUniform( info, addr, this );

	}

}

WebGLUniforms.prototype.setValue = function ( gl, name, value ) {

	var u = this.map[ name ];

	if ( u !== undefined ) u.setValue( gl, value, this.renderer );

};

WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {

	var v = object[ name ];

	if ( v !== undefined ) this.setValue( gl, name, v );

};


// Static interface

WebGLUniforms.upload = function ( gl, seq, values, renderer ) {

	for ( var i = 0, n = seq.length; i !== n; ++ i ) {

		var u = seq[ i ],
			v = values[ u.id ];

		if ( v.needsUpdate !== false ) {

			// note: always updating when .needsUpdate is undefined
			u.setValue( gl, v.value, renderer );

		}

	}

};

WebGLUniforms.seqWithValue = function ( seq, values ) {

	var r = [];

	for ( var i = 0, n = seq.length; i !== n; ++ i ) {

		var u = seq[ i ];
		if ( u.id in values ) r.push( u );

	}

	return r;

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

var ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,
	'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,
	'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,
	'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,
	'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,
	'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,
	'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,
	'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,
	'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,
	'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,
	'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,
	'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,
	'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,
	'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,
	'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,
	'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,
	'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,
	'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,
	'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,
	'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,
	'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,
	'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,
	'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,
	'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };

function Color( r, g, b ) {

	if ( g === undefined && b === undefined ) {

		// r is THREE.Color, hex or string
		return this.set( r );

	}

	return this.setRGB( r, g, b );

}

Object.assign( Color.prototype, {

	isColor: true,

	r: 1, g: 1, b: 1,

	set: function ( value ) {

		if ( value && value.isColor ) {

			this.copy( value );

		} else if ( typeof value === 'number' ) {

			this.setHex( value );

		} else if ( typeof value === 'string' ) {

			this.setStyle( value );

		}

		return this;

	},

	setScalar: function ( scalar ) {

		this.r = scalar;
		this.g = scalar;
		this.b = scalar;

		return this;

	},

	setHex: function ( hex ) {

		hex = Math.floor( hex );

		this.r = ( hex >> 16 & 255 ) / 255;
		this.g = ( hex >> 8 & 255 ) / 255;
		this.b = ( hex & 255 ) / 255;

		return this;

	},

	setRGB: function ( r, g, b ) {

		this.r = r;
		this.g = g;
		this.b = b;

		return this;

	},

	setHSL: function () {

		function hue2rgb( p, q, t ) {

			if ( t < 0 ) t += 1;
			if ( t > 1 ) t -= 1;
			if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;
			if ( t < 1 / 2 ) return q;
			if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );
			return p;

		}

		return function setHSL( h, s, l ) {

			// h,s,l ranges are in 0.0 - 1.0
			h = _Math.euclideanModulo( h, 1 );
			s = _Math.clamp( s, 0, 1 );
			l = _Math.clamp( l, 0, 1 );

			if ( s === 0 ) {

				this.r = this.g = this.b = l;

			} else {

				var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
				var q = ( 2 * l ) - p;

				this.r = hue2rgb( q, p, h + 1 / 3 );
				this.g = hue2rgb( q, p, h );
				this.b = hue2rgb( q, p, h - 1 / 3 );

			}

			return this;

		};

	}(),

	setStyle: function ( style ) {

		function handleAlpha( string ) {

			if ( string === undefined ) return;

			if ( parseFloat( string ) < 1 ) {

				console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );

			}

		}


		var m;

		if ( m = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec( style ) ) {

			// rgb / hsl

			var color;
			var name = m[ 1 ];
			var components = m[ 2 ];

			switch ( name ) {

				case 'rgb':
				case 'rgba':

					if ( color = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

						// rgb(255,0,0) rgba(255,0,0,0.5)
						this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
						this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
						this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;

						handleAlpha( color[ 5 ] );

						return this;

					}

					if ( color = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

						// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
						this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
						this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
						this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;

						handleAlpha( color[ 5 ] );

						return this;

					}

					break;

				case 'hsl':
				case 'hsla':

					if ( color = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

						// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
						var h = parseFloat( color[ 1 ] ) / 360;
						var s = parseInt( color[ 2 ], 10 ) / 100;
						var l = parseInt( color[ 3 ], 10 ) / 100;

						handleAlpha( color[ 5 ] );

						return this.setHSL( h, s, l );

					}

					break;

			}

		} else if ( m = /^\#([A-Fa-f0-9]+)$/.exec( style ) ) {

			// hex color

			var hex = m[ 1 ];
			var size = hex.length;

			if ( size === 3 ) {

				// #ff0
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;

				return this;

			} else if ( size === 6 ) {

				// #ff0000
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;

				return this;

			}

		}

		if ( style && style.length > 0 ) {

			// color keywords
			var hex = ColorKeywords[ style ];

			if ( hex !== undefined ) {

				// red
				this.setHex( hex );

			} else {

				// unknown color
				console.warn( 'THREE.Color: Unknown color ' + style );

			}

		}

		return this;

	},

	clone: function () {

		return new this.constructor( this.r, this.g, this.b );

	},

	copy: function ( color ) {

		this.r = color.r;
		this.g = color.g;
		this.b = color.b;

		return this;

	},

	copyGammaToLinear: function ( color, gammaFactor ) {

		if ( gammaFactor === undefined ) gammaFactor = 2.0;

		this.r = Math.pow( color.r, gammaFactor );
		this.g = Math.pow( color.g, gammaFactor );
		this.b = Math.pow( color.b, gammaFactor );

		return this;

	},

	copyLinearToGamma: function ( color, gammaFactor ) {

		if ( gammaFactor === undefined ) gammaFactor = 2.0;

		var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;

		this.r = Math.pow( color.r, safeInverse );
		this.g = Math.pow( color.g, safeInverse );
		this.b = Math.pow( color.b, safeInverse );

		return this;

	},

	convertGammaToLinear: function () {

		var r = this.r, g = this.g, b = this.b;

		this.r = r * r;
		this.g = g * g;
		this.b = b * b;

		return this;

	},

	convertLinearToGamma: function () {

		this.r = Math.sqrt( this.r );
		this.g = Math.sqrt( this.g );
		this.b = Math.sqrt( this.b );

		return this;

	},

	getHex: function () {

		return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;

	},

	getHexString: function () {

		return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );

	},

	getHSL: function ( optionalTarget ) {

		// h,s,l ranges are in 0.0 - 1.0

		var hsl = optionalTarget || { h: 0, s: 0, l: 0 };

		var r = this.r, g = this.g, b = this.b;

		var max = Math.max( r, g, b );
		var min = Math.min( r, g, b );

		var hue, saturation;
		var lightness = ( min + max ) / 2.0;

		if ( min === max ) {

			hue = 0;
			saturation = 0;

		} else {

			var delta = max - min;

			saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );

			switch ( max ) {

				case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
				case g: hue = ( b - r ) / delta + 2; break;
				case b: hue = ( r - g ) / delta + 4; break;

			}

			hue /= 6;

		}

		hsl.h = hue;
		hsl.s = saturation;
		hsl.l = lightness;

		return hsl;

	},

	getStyle: function () {

		return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';

	},

	offsetHSL: function ( h, s, l ) {

		var hsl = this.getHSL();

		hsl.h += h; hsl.s += s; hsl.l += l;

		this.setHSL( hsl.h, hsl.s, hsl.l );

		return this;

	},

	add: function ( color ) {

		this.r += color.r;
		this.g += color.g;
		this.b += color.b;

		return this;

	},

	addColors: function ( color1, color2 ) {

		this.r = color1.r + color2.r;
		this.g = color1.g + color2.g;
		this.b = color1.b + color2.b;

		return this;

	},

	addScalar: function ( s ) {

		this.r += s;
		this.g += s;
		this.b += s;

		return this;

	},

	sub: function( color ) {

		this.r = Math.max( 0, this.r - color.r );
		this.g = Math.max( 0, this.g - color.g );
		this.b = Math.max( 0, this.b - color.b );

		return this;

	},

	multiply: function ( color ) {

		this.r *= color.r;
		this.g *= color.g;
		this.b *= color.b;

		return this;

	},

	multiplyScalar: function ( s ) {

		this.r *= s;
		this.g *= s;
		this.b *= s;

		return this;

	},

	lerp: function ( color, alpha ) {

		this.r += ( color.r - this.r ) * alpha;
		this.g += ( color.g - this.g ) * alpha;
		this.b += ( color.b - this.b ) * alpha;

		return this;

	},

	equals: function ( c ) {

		return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		this.r = array[ offset ];
		this.g = array[ offset + 1 ];
		this.b = array[ offset + 2 ];

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this.r;
		array[ offset + 1 ] = this.g;
		array[ offset + 2 ] = this.b;

		return array;

	},

	toJSON: function () {

		return this.getHex();

	}

} );

/**
 * Uniforms library for shared webgl shaders
 */

var UniformsLib = {

	common: {

		diffuse: { value: new Color( 0xeeeeee ) },
		opacity: { value: 1.0 },

		map: { value: null },
		offsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },

		specularMap: { value: null },
		alphaMap: { value: null },

		envMap: { value: null },
		flipEnvMap: { value: - 1 },
		reflectivity: { value: 1.0 },
		refractionRatio: { value: 0.98 }

	},

	aomap: {

		aoMap: { value: null },
		aoMapIntensity: { value: 1 }

	},

	lightmap: {

		lightMap: { value: null },
		lightMapIntensity: { value: 1 }

	},

	emissivemap: {

		emissiveMap: { value: null }

	},

	bumpmap: {

		bumpMap: { value: null },
		bumpScale: { value: 1 }

	},

	normalmap: {

		normalMap: { value: null },
		normalScale: { value: new Vector2( 1, 1 ) }

	},

	displacementmap: {

		displacementMap: { value: null },
		displacementScale: { value: 1 },
		displacementBias: { value: 0 }

	},

	roughnessmap: {

		roughnessMap: { value: null }

	},

	metalnessmap: {

		metalnessMap: { value: null }

	},

	gradientmap: {

		gradientMap: { value: null }

	},

	fog: {

		fogDensity: { value: 0.00025 },
		fogNear: { value: 1 },
		fogFar: { value: 2000 },
		fogColor: { value: new Color( 0xffffff ) }

	},

	lights: {

		ambientLightColor: { value: [] },

		directionalLights: { value: [], properties: {
			direction: {},
			color: {},

			shadow: {},
			shadowBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		directionalShadowMap: { value: [] },
		directionalShadowMatrix: { value: [] },

		spotLights: { value: [], properties: {
			color: {},
			position: {},
			direction: {},
			distance: {},
			coneCos: {},
			penumbraCos: {},
			decay: {},

			shadow: {},
			shadowBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		spotShadowMap: { value: [] },
		spotShadowMatrix: { value: [] },

		pointLights: { value: [], properties: {
			color: {},
			position: {},
			decay: {},
			distance: {},

			shadow: {},
			shadowBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		pointShadowMap: { value: [] },
		pointShadowMatrix: { value: [] },

		hemisphereLights: { value: [], properties: {
			direction: {},
			skyColor: {},
			groundColor: {}
		} },

		// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
		rectAreaLights: { value: [], properties: {
			color: {},
			position: {},
			width: {},
			height: {}
		} }

	},

	points: {

		diffuse: { value: new Color( 0xeeeeee ) },
		opacity: { value: 1.0 },
		size: { value: 1.0 },
		scale: { value: 1.0 },
		map: { value: null },
		offsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }

	}

};

/**
 * Uniform Utilities
 */

var UniformsUtils = {

	merge: function ( uniforms ) {

		var merged = {};

		for ( var u = 0; u < uniforms.length; u ++ ) {

			var tmp = this.clone( uniforms[ u ] );

			for ( var p in tmp ) {

				merged[ p ] = tmp[ p ];

			}

		}

		return merged;

	},

	clone: function ( uniforms_src ) {

		var uniforms_dst = {};

		for ( var u in uniforms_src ) {

			uniforms_dst[ u ] = {};

			for ( var p in uniforms_src[ u ] ) {

				var parameter_src = uniforms_src[ u ][ p ];

				if ( parameter_src && ( parameter_src.isColor ||
					parameter_src.isMatrix3 || parameter_src.isMatrix4 ||
					parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||
					parameter_src.isTexture ) ) {

					uniforms_dst[ u ][ p ] = parameter_src.clone();

				} else if ( Array.isArray( parameter_src ) ) {

					uniforms_dst[ u ][ p ] = parameter_src.slice();

				} else {

					uniforms_dst[ u ][ p ] = parameter_src;

				}

			}

		}

		return uniforms_dst;

	}

};

var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n";

var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n";

var alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n";

var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n";

var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";

var begin_vertex = "\nvec3 transformed = vec3( position );\n";

var beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n";

var bsdfs = "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\n\tint config = 0;\n\tif ( L[0].z > 0.0 ) config += 1;\n\tif ( L[1].z > 0.0 ) config += 2;\n\tif ( L[2].z > 0.0 ) config += 4;\n\tif ( L[3].z > 0.0 ) config += 8;\n\tn = 0;\n\tif ( config == 0 ) {\n\t} else if ( config == 1 ) {\n\t\tn = 3;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 2 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 3 ) {\n\t\tn = 4;\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 4 ) {\n\t\tn = 3;\n\t\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t} else if ( config == 5 ) {\n\t\tn = 0;\n\t} else if ( config == 6 ) {\n\t\tn = 4;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 7 ) {\n\t\tn = 5;\n\t\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 8 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] =  L[3];\n\t} else if ( config == 9 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\n\t} else if ( config == 10 ) {\n\t\tn = 0;\n\t} else if ( config == 11 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 12 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t} else if ( config == 13 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = L[2];\n\t\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t} else if ( config == 14 ) {\n\t\tn = 5;\n\t\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t} else if ( config == 15 ) {\n\t\tn = 4;\n\t}\n\tif ( n == 3 )\n\t\tL[3] = L[0];\n\tif ( n == 4 )\n\t\tL[4] = L[0];\n}\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\n\tfloat cosTheta = dot( v1, v2 );\n\tfloat theta = acos( cosTheta );\n\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\n\treturn res;\n}\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\n\trectPoints[0] = pos - halfWidth - halfHeight;\n\trectPoints[1] = pos + halfWidth - halfHeight;\n\trectPoints[2] = pos + halfWidth + halfHeight;\n\trectPoints[3] = pos - halfWidth + halfHeight;\n}\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tvec3 T1, T2;\n\tT1 = normalize(V - N * dot( V, N ));\n\tT2 = - cross( N, T1 );\n\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\n\tvec3 clippedRect[5];\n\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\n\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\n\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\n\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\n\tint n;\n\tclipQuadToHorizon(clippedRect, n);\n\tif ( n == 0 )\n\t\treturn vec3( 0, 0, 0 );\n\tclippedRect[0] = normalize( clippedRect[0] );\n\tclippedRect[1] = normalize( clippedRect[1] );\n\tclippedRect[2] = normalize( clippedRect[2] );\n\tclippedRect[3] = normalize( clippedRect[3] );\n\tclippedRect[4] = normalize( clippedRect[4] );\n\tfloat sum = 0.0;\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\n\tif (n >= 4)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\n\tif (n == 5)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\n\tsum = max( 0.0, sum );\n\tvec3 Lo_i = vec3( sum, sum, sum );\n\treturn Lo_i;\n}\nvec3 Rect_Area_Light_Specular_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\n\t\tconst in float roughness,\n\t\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tvec2 uv = ltcTextureCoords( geometry, roughness );\n\tvec4 brdfLtcApproxParams, t;\n\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\n\tt = texture2D( ltcMat, uv );\n\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\n\tmat3 brdfLtcApproxMat = mat3(\n\t\tvec3(   1,   0, t.y ),\n\t\tvec3(   0, t.z,   0 ),\n\t\tvec3( t.w,   0, t.x )\n\t);\n\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\n\tspecularReflectance *= brdfLtcScalar;\n\treturn specularReflectance;\n}\nvec3 Rect_Area_Light_Diffuse_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tmat3 diffuseBrdfMat = mat3(1);\n\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\n\treturn diffuseReflectance;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n";

var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n";

var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n";

var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n";

var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n";

var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n";

var color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";

var color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n";

var color_pars_vertex = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";

var color_vertex = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";

var common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n";

var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n";

var defaultnormal_vertex = "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n";

var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n";

var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n";

var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n";

var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n";

var encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n";

var encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n";

var envmap_fragment = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n";

var envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n";

var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n";

var envmap_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n";

var fog_vertex = "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif";

var fog_pars_vertex = "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n";

var fog_fragment = "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n";

var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n";

var gradientmap_pars_fragment = "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n";

var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n";

var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";

var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n";

var lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n";

var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";

var lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n";

var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n";

var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n";

var lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n";

var logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif";

var logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n";

var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif";

var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n";

var map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n";

var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n";

var map_particle_fragment = "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n";

var map_particle_pars_fragment = "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n";

var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n";

var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";

var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n";

var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";

var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n";

var normal_flip = "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n";

var normal_fragment = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n";

var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n";

var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n";

var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n";

var project_vertex = "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n";

var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n";

var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";

var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n";

var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n";

var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n";

var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n";

var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";

var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n";

var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n";

var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n";

var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";

var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";

var tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n";

var tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n";

var uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif";

var uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n";

var uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif";

var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";

var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif";

var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif";

var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n";

var cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n";

var cube_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";

var depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n";

var depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";

var distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n";

var distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n";

var equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n";

var equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";

var linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n";

var meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n";

var meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";

var meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";

var meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";

var normal_frag = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n";

var normal_vert = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n";

var points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";

var points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n";

var shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n";

var shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";

var ShaderChunk = {
	alphamap_fragment: alphamap_fragment,
	alphamap_pars_fragment: alphamap_pars_fragment,
	alphatest_fragment: alphatest_fragment,
	aomap_fragment: aomap_fragment,
	aomap_pars_fragment: aomap_pars_fragment,
	begin_vertex: begin_vertex,
	beginnormal_vertex: beginnormal_vertex,
	bsdfs: bsdfs,
	bumpmap_pars_fragment: bumpmap_pars_fragment,
	clipping_planes_fragment: clipping_planes_fragment,
	clipping_planes_pars_fragment: clipping_planes_pars_fragment,
	clipping_planes_pars_vertex: clipping_planes_pars_vertex,
	clipping_planes_vertex: clipping_planes_vertex,
	color_fragment: color_fragment,
	color_pars_fragment: color_pars_fragment,
	color_pars_vertex: color_pars_vertex,
	color_vertex: color_vertex,
	common: common,
	cube_uv_reflection_fragment: cube_uv_reflection_fragment,
	defaultnormal_vertex: defaultnormal_vertex,
	displacementmap_pars_vertex: displacementmap_pars_vertex,
	displacementmap_vertex: displacementmap_vertex,
	emissivemap_fragment: emissivemap_fragment,
	emissivemap_pars_fragment: emissivemap_pars_fragment,
	encodings_fragment: encodings_fragment,
	encodings_pars_fragment: encodings_pars_fragment,
	envmap_fragment: envmap_fragment,
	envmap_pars_fragment: envmap_pars_fragment,
	envmap_pars_vertex: envmap_pars_vertex,
	envmap_vertex: envmap_vertex,
	fog_vertex: fog_vertex,
	fog_pars_vertex: fog_pars_vertex,
	fog_fragment: fog_fragment,
	fog_pars_fragment: fog_pars_fragment,
	gradientmap_pars_fragment: gradientmap_pars_fragment,
	lightmap_fragment: lightmap_fragment,
	lightmap_pars_fragment: lightmap_pars_fragment,
	lights_lambert_vertex: lights_lambert_vertex,
	lights_pars: lights_pars,
	lights_phong_fragment: lights_phong_fragment,
	lights_phong_pars_fragment: lights_phong_pars_fragment,
	lights_physical_fragment: lights_physical_fragment,
	lights_physical_pars_fragment: lights_physical_pars_fragment,
	lights_template: lights_template,
	logdepthbuf_fragment: logdepthbuf_fragment,
	logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,
	logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,
	logdepthbuf_vertex: logdepthbuf_vertex,
	map_fragment: map_fragment,
	map_pars_fragment: map_pars_fragment,
	map_particle_fragment: map_particle_fragment,
	map_particle_pars_fragment: map_particle_pars_fragment,
	metalnessmap_fragment: metalnessmap_fragment,
	metalnessmap_pars_fragment: metalnessmap_pars_fragment,
	morphnormal_vertex: morphnormal_vertex,
	morphtarget_pars_vertex: morphtarget_pars_vertex,
	morphtarget_vertex: morphtarget_vertex,
	normal_flip: normal_flip,
	normal_fragment: normal_fragment,
	normalmap_pars_fragment: normalmap_pars_fragment,
	packing: packing,
	premultiplied_alpha_fragment: premultiplied_alpha_fragment,
	project_vertex: project_vertex,
	roughnessmap_fragment: roughnessmap_fragment,
	roughnessmap_pars_fragment: roughnessmap_pars_fragment,
	shadowmap_pars_fragment: shadowmap_pars_fragment,
	shadowmap_pars_vertex: shadowmap_pars_vertex,
	shadowmap_vertex: shadowmap_vertex,
	shadowmask_pars_fragment: shadowmask_pars_fragment,
	skinbase_vertex: skinbase_vertex,
	skinning_pars_vertex: skinning_pars_vertex,
	skinning_vertex: skinning_vertex,
	skinnormal_vertex: skinnormal_vertex,
	specularmap_fragment: specularmap_fragment,
	specularmap_pars_fragment: specularmap_pars_fragment,
	tonemapping_fragment: tonemapping_fragment,
	tonemapping_pars_fragment: tonemapping_pars_fragment,
	uv_pars_fragment: uv_pars_fragment,
	uv_pars_vertex: uv_pars_vertex,
	uv_vertex: uv_vertex,
	uv2_pars_fragment: uv2_pars_fragment,
	uv2_pars_vertex: uv2_pars_vertex,
	uv2_vertex: uv2_vertex,
	worldpos_vertex: worldpos_vertex,

	cube_frag: cube_frag,
	cube_vert: cube_vert,
	depth_frag: depth_frag,
	depth_vert: depth_vert,
	distanceRGBA_frag: distanceRGBA_frag,
	distanceRGBA_vert: distanceRGBA_vert,
	equirect_frag: equirect_frag,
	equirect_vert: equirect_vert,
	linedashed_frag: linedashed_frag,
	linedashed_vert: linedashed_vert,
	meshbasic_frag: meshbasic_frag,
	meshbasic_vert: meshbasic_vert,
	meshlambert_frag: meshlambert_frag,
	meshlambert_vert: meshlambert_vert,
	meshphong_frag: meshphong_frag,
	meshphong_vert: meshphong_vert,
	meshphysical_frag: meshphysical_frag,
	meshphysical_vert: meshphysical_vert,
	normal_frag: normal_frag,
	normal_vert: normal_vert,
	points_frag: points_frag,
	points_vert: points_vert,
	shadow_frag: shadow_frag,
	shadow_vert: shadow_vert
};

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 */

var ShaderLib = {

	basic: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.meshbasic_vert,
		fragmentShader: ShaderChunk.meshbasic_frag

	},

	lambert: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) }
			}
		] ),

		vertexShader: ShaderChunk.meshlambert_vert,
		fragmentShader: ShaderChunk.meshlambert_frag

	},

	phong: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.gradientmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				specular: { value: new Color( 0x111111 ) },
				shininess: { value: 30 }
			}
		] ),

		vertexShader: ShaderChunk.meshphong_vert,
		fragmentShader: ShaderChunk.meshphong_frag

	},

	standard: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.roughnessmap,
			UniformsLib.metalnessmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				roughness: { value: 0.5 },
				metalness: { value: 0.5 },
				envMapIntensity: { value: 1 } // temporary
			}
		] ),

		vertexShader: ShaderChunk.meshphysical_vert,
		fragmentShader: ShaderChunk.meshphysical_frag

	},

	points: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.points,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.points_vert,
		fragmentShader: ShaderChunk.points_frag

	},

	dashed: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.fog,
			{
				scale: { value: 1 },
				dashSize: { value: 1 },
				totalSize: { value: 2 }
			}
		] ),

		vertexShader: ShaderChunk.linedashed_vert,
		fragmentShader: ShaderChunk.linedashed_frag

	},

	depth: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.displacementmap
		] ),

		vertexShader: ShaderChunk.depth_vert,
		fragmentShader: ShaderChunk.depth_frag

	},

	normal: {

		uniforms: UniformsUtils.merge( [
			UniformsLib.common,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			{
				opacity: { value: 1.0 }
			}
		] ),

		vertexShader: ShaderChunk.normal_vert,
		fragmentShader: ShaderChunk.normal_frag

	},

	/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */

	cube: {

		uniforms: {
			tCube: { value: null },
			tFlip: { value: - 1 },
			opacity: { value: 1.0 }
		},

		vertexShader: ShaderChunk.cube_vert,
		fragmentShader: ShaderChunk.cube_frag

	},

	/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */

	equirect: {

		uniforms: {
			tEquirect: { value: null },
			tFlip: { value: - 1 }
		},

		vertexShader: ShaderChunk.equirect_vert,
		fragmentShader: ShaderChunk.equirect_frag

	},

	distanceRGBA: {

		uniforms: {
			lightPos: { value: new Vector3() }
		},

		vertexShader: ShaderChunk.distanceRGBA_vert,
		fragmentShader: ShaderChunk.distanceRGBA_frag

	}

};

ShaderLib.physical = {

	uniforms: UniformsUtils.merge( [
		ShaderLib.standard.uniforms,
		{
			clearCoat: { value: 0 },
			clearCoatRoughness: { value: 0 }
		}
	] ),

	vertexShader: ShaderChunk.meshphysical_vert,
	fragmentShader: ShaderChunk.meshphysical_frag

};

/**
 * @author bhouston / http://clara.io
 */

function Box2( min, max ) {

	this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );
	this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );

}

Object.assign( Box2.prototype, {

	set: function ( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	},

	setFromPoints: function ( points ) {

		this.makeEmpty();

		for ( var i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	},

	setFromCenterAndSize: function () {

		var v1 = new Vector2();

		return function setFromCenterAndSize( center, size ) {

			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );
			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		};

	}(),

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	},

	makeEmpty: function () {

		this.min.x = this.min.y = + Infinity;
		this.max.x = this.max.y = - Infinity;

		return this;

	},

	isEmpty: function () {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );

	},

	getCenter: function ( optionalTarget ) {

		var result = optionalTarget || new Vector2();
		return this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	},

	getSize: function ( optionalTarget ) {

		var result = optionalTarget || new Vector2();
		return this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );

	},

	expandByPoint: function ( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	},

	expandByVector: function ( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	},

	expandByScalar: function ( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	},

	containsPoint: function ( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ? false : true;

	},

	containsBox: function ( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y;

	},

	getParameter: function ( point, optionalTarget ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		var result = optionalTarget || new Vector2();

		return result.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y )
		);

	},

	intersectsBox: function ( box ) {

		// using 4 splitting planes to rule out intersections

		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ? false : true;

	},

	clampPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new Vector2();
		return result.copy( point ).clamp( this.min, this.max );

	},

	distanceToPoint: function () {

		var v1 = new Vector2();

		return function distanceToPoint( point ) {

			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
			return clampedPoint.sub( point ).length();

		};

	}(),

	intersect: function ( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		return this;

	},

	union: function ( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	},

	translate: function ( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	},

	equals: function ( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

function LensFlarePlugin( renderer, flares ) {

	var gl = renderer.context;
	var state = renderer.state;

	var vertexBuffer, elementBuffer;
	var shader, program, attributes, uniforms;

	var tempTexture, occlusionTexture;

	function init() {

		var vertices = new Float32Array( [
			- 1, - 1,  0, 0,
			 1, - 1,  1, 0,
			 1,  1,  1, 1,
			- 1,  1,  0, 1
		] );

		var faces = new Uint16Array( [
			0, 1, 2,
			0, 2, 3
		] );

		// buffers

		vertexBuffer     = gl.createBuffer();
		elementBuffer    = gl.createBuffer();

		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
		gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );

		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
		gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );

		// textures

		tempTexture      = gl.createTexture();
		occlusionTexture = gl.createTexture();

		state.bindTexture( gl.TEXTURE_2D, tempTexture );
		gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );

		state.bindTexture( gl.TEXTURE_2D, occlusionTexture );
		gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );
		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );

		shader = {

			vertexShader: [

				"uniform lowp int renderType;",

				"uniform vec3 screenPosition;",
				"uniform vec2 scale;",
				"uniform float rotation;",

				"uniform sampler2D occlusionMap;",

				"attribute vec2 position;",
				"attribute vec2 uv;",

				"varying vec2 vUV;",
				"varying float vVisibility;",

				"void main() {",

					"vUV = uv;",

					"vec2 pos = position;",

					"if ( renderType == 2 ) {",

						"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );",
						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",

						"vVisibility =        visibility.r / 9.0;",
						"vVisibility *= 1.0 - visibility.g / 9.0;",
						"vVisibility *=       visibility.b / 9.0;",
						"vVisibility *= 1.0 - visibility.a / 9.0;",

						"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
						"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",

					"}",

					"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",

				"}"

			].join( "\n" ),

			fragmentShader: [

				"uniform lowp int renderType;",

				"uniform sampler2D map;",
				"uniform float opacity;",
				"uniform vec3 color;",

				"varying vec2 vUV;",
				"varying float vVisibility;",

				"void main() {",

					// pink square

					"if ( renderType == 0 ) {",

						"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",

					// restore

					"} else if ( renderType == 1 ) {",

						"gl_FragColor = texture2D( map, vUV );",

					// flare

					"} else {",

						"vec4 texture = texture2D( map, vUV );",
						"texture.a *= opacity * vVisibility;",
						"gl_FragColor = texture;",
						"gl_FragColor.rgb *= color;",

					"}",

				"}"

			].join( "\n" )

		};

		program = createProgram( shader );

		attributes = {
			vertex: gl.getAttribLocation ( program, "position" ),
			uv:     gl.getAttribLocation ( program, "uv" )
		};

		uniforms = {
			renderType:     gl.getUniformLocation( program, "renderType" ),
			map:            gl.getUniformLocation( program, "map" ),
			occlusionMap:   gl.getUniformLocation( program, "occlusionMap" ),
			opacity:        gl.getUniformLocation( program, "opacity" ),
			color:          gl.getUniformLocation( program, "color" ),
			scale:          gl.getUniformLocation( program, "scale" ),
			rotation:       gl.getUniformLocation( program, "rotation" ),
			screenPosition: gl.getUniformLocation( program, "screenPosition" )
		};

	}

	/*
	 * Render lens flares
	 * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,
	 *         reads these back and calculates occlusion.
	 */

	this.render = function ( scene, camera, viewport ) {

		if ( flares.length === 0 ) return;

		var tempPosition = new Vector3();

		var invAspect = viewport.w / viewport.z,
			halfViewportWidth = viewport.z * 0.5,
			halfViewportHeight = viewport.w * 0.5;

		var size = 16 / viewport.w,
			scale = new Vector2( size * invAspect, size );

		var screenPosition = new Vector3( 1, 1, 0 ),
			screenPositionPixels = new Vector2( 1, 1 );

		var validArea = new Box2();

		validArea.min.set( viewport.x, viewport.y );
		validArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );

		if ( program === undefined ) {

			init();

		}

		gl.useProgram( program );

		state.initAttributes();
		state.enableAttribute( attributes.vertex );
		state.enableAttribute( attributes.uv );
		state.disableUnusedAttributes();

		// loop through all lens flares to update their occlusion and positions
		// setup gl and common used attribs/uniforms

		gl.uniform1i( uniforms.occlusionMap, 0 );
		gl.uniform1i( uniforms.map, 1 );

		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
		gl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );
		gl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );

		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );

		state.disable( gl.CULL_FACE );
		state.buffers.depth.setMask( false );

		for ( var i = 0, l = flares.length; i < l; i ++ ) {

			size = 16 / viewport.w;
			scale.set( size * invAspect, size );

			// calc object screen position

			var flare = flares[ i ];

			tempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );

			tempPosition.applyMatrix4( camera.matrixWorldInverse );
			tempPosition.applyMatrix4( camera.projectionMatrix );

			// setup arrays for gl programs

			screenPosition.copy( tempPosition );

			// horizontal and vertical coordinate of the lower left corner of the pixels to copy

			screenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;
			screenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;

			// screen cull

			if ( validArea.containsPoint( screenPositionPixels ) === true ) {

				// save current RGB to temp texture

				state.activeTexture( gl.TEXTURE0 );
				state.bindTexture( gl.TEXTURE_2D, null );
				state.activeTexture( gl.TEXTURE1 );
				state.bindTexture( gl.TEXTURE_2D, tempTexture );
				gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );


				// render pink quad

				gl.uniform1i( uniforms.renderType, 0 );
				gl.uniform2f( uniforms.scale, scale.x, scale.y );
				gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );

				state.disable( gl.BLEND );
				state.enable( gl.DEPTH_TEST );

				gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );


				// copy result to occlusionMap

				state.activeTexture( gl.TEXTURE0 );
				state.bindTexture( gl.TEXTURE_2D, occlusionTexture );
				gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );


				// restore graphics

				gl.uniform1i( uniforms.renderType, 1 );
				state.disable( gl.DEPTH_TEST );

				state.activeTexture( gl.TEXTURE1 );
				state.bindTexture( gl.TEXTURE_2D, tempTexture );
				gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );


				// update object positions

				flare.positionScreen.copy( screenPosition );

				if ( flare.customUpdateCallback ) {

					flare.customUpdateCallback( flare );

				} else {

					flare.updateLensFlares();

				}

				// render flares

				gl.uniform1i( uniforms.renderType, 2 );
				state.enable( gl.BLEND );

				for ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {

					var sprite = flare.lensFlares[ j ];

					if ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {

						screenPosition.x = sprite.x;
						screenPosition.y = sprite.y;
						screenPosition.z = sprite.z;

						size = sprite.size * sprite.scale / viewport.w;

						scale.x = size * invAspect;
						scale.y = size;

						gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );
						gl.uniform2f( uniforms.scale, scale.x, scale.y );
						gl.uniform1f( uniforms.rotation, sprite.rotation );

						gl.uniform1f( uniforms.opacity, sprite.opacity );
						gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );

						state.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );
						renderer.setTexture2D( sprite.texture, 1 );

						gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );

					}

				}

			}

		}

		// restore gl

		state.enable( gl.CULL_FACE );
		state.enable( gl.DEPTH_TEST );
		state.buffers.depth.setMask( true );

		renderer.resetGLState();

	};

	function createProgram( shader ) {

		var program = gl.createProgram();

		var fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );
		var vertexShader = gl.createShader( gl.VERTEX_SHADER );

		var prefix = "precision " + renderer.getPrecision() + " float;\n";

		gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );
		gl.shaderSource( vertexShader, prefix + shader.vertexShader );

		gl.compileShader( fragmentShader );
		gl.compileShader( vertexShader );

		gl.attachShader( program, fragmentShader );
		gl.attachShader( program, vertexShader );

		gl.linkProgram( program );

		return program;

	}

}

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

function SpritePlugin( renderer, sprites ) {

	var gl = renderer.context;
	var state = renderer.state;

	var vertexBuffer, elementBuffer;
	var program, attributes, uniforms;

	var texture;

	// decompose matrixWorld

	var spritePosition = new Vector3();
	var spriteRotation = new Quaternion();
	var spriteScale = new Vector3();

	function init() {

		var vertices = new Float32Array( [
			- 0.5, - 0.5,  0, 0,
			  0.5, - 0.5,  1, 0,
			  0.5,   0.5,  1, 1,
			- 0.5,   0.5,  0, 1
		] );

		var faces = new Uint16Array( [
			0, 1, 2,
			0, 2, 3
		] );

		vertexBuffer  = gl.createBuffer();
		elementBuffer = gl.createBuffer();

		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
		gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );

		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
		gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );

		program = createProgram();

		attributes = {
			position:			gl.getAttribLocation ( program, 'position' ),
			uv:					gl.getAttribLocation ( program, 'uv' )
		};

		uniforms = {
			uvOffset:			gl.getUniformLocation( program, 'uvOffset' ),
			uvScale:			gl.getUniformLocation( program, 'uvScale' ),

			rotation:			gl.getUniformLocation( program, 'rotation' ),
			scale:				gl.getUniformLocation( program, 'scale' ),

			color:				gl.getUniformLocation( program, 'color' ),
			map:				gl.getUniformLocation( program, 'map' ),
			opacity:			gl.getUniformLocation( program, 'opacity' ),

			modelViewMatrix: 	gl.getUniformLocation( program, 'modelViewMatrix' ),
			projectionMatrix:	gl.getUniformLocation( program, 'projectionMatrix' ),

			fogType:			gl.getUniformLocation( program, 'fogType' ),
			fogDensity:			gl.getUniformLocation( program, 'fogDensity' ),
			fogNear:			gl.getUniformLocation( program, 'fogNear' ),
			fogFar:				gl.getUniformLocation( program, 'fogFar' ),
			fogColor:			gl.getUniformLocation( program, 'fogColor' ),

			alphaTest:			gl.getUniformLocation( program, 'alphaTest' )
		};

		var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
		canvas.width = 8;
		canvas.height = 8;

		var context = canvas.getContext( '2d' );
		context.fillStyle = 'white';
		context.fillRect( 0, 0, 8, 8 );

		texture = new Texture( canvas );
		texture.needsUpdate = true;

	}

	this.render = function ( scene, camera ) {

		if ( sprites.length === 0 ) return;

		// setup gl

		if ( program === undefined ) {

			init();

		}

		gl.useProgram( program );

		state.initAttributes();
		state.enableAttribute( attributes.position );
		state.enableAttribute( attributes.uv );
		state.disableUnusedAttributes();

		state.disable( gl.CULL_FACE );
		state.enable( gl.BLEND );

		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
		gl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );
		gl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );

		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );

		gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );

		state.activeTexture( gl.TEXTURE0 );
		gl.uniform1i( uniforms.map, 0 );

		var oldFogType = 0;
		var sceneFogType = 0;
		var fog = scene.fog;

		if ( fog ) {

			gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );

			if ( fog.isFog ) {

				gl.uniform1f( uniforms.fogNear, fog.near );
				gl.uniform1f( uniforms.fogFar, fog.far );

				gl.uniform1i( uniforms.fogType, 1 );
				oldFogType = 1;
				sceneFogType = 1;

			} else if ( fog.isFogExp2 ) {

				gl.uniform1f( uniforms.fogDensity, fog.density );

				gl.uniform1i( uniforms.fogType, 2 );
				oldFogType = 2;
				sceneFogType = 2;

			}

		} else {

			gl.uniform1i( uniforms.fogType, 0 );
			oldFogType = 0;
			sceneFogType = 0;

		}


		// update positions and sort

		for ( var i = 0, l = sprites.length; i < l; i ++ ) {

			var sprite = sprites[ i ];

			sprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );
			sprite.z = - sprite.modelViewMatrix.elements[ 14 ];

		}

		sprites.sort( painterSortStable );

		// render all sprites

		var scale = [];

		for ( var i = 0, l = sprites.length; i < l; i ++ ) {

			var sprite = sprites[ i ];
			var material = sprite.material;

			if ( material.visible === false ) continue;

			gl.uniform1f( uniforms.alphaTest, material.alphaTest );
			gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );

			sprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );

			scale[ 0 ] = spriteScale.x;
			scale[ 1 ] = spriteScale.y;

			var fogType = 0;

			if ( scene.fog && material.fog ) {

				fogType = sceneFogType;

			}

			if ( oldFogType !== fogType ) {

				gl.uniform1i( uniforms.fogType, fogType );
				oldFogType = fogType;

			}

			if ( material.map !== null ) {

				gl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );
				gl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );

			} else {

				gl.uniform2f( uniforms.uvOffset, 0, 0 );
				gl.uniform2f( uniforms.uvScale, 1, 1 );

			}

			gl.uniform1f( uniforms.opacity, material.opacity );
			gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );

			gl.uniform1f( uniforms.rotation, material.rotation );
			gl.uniform2fv( uniforms.scale, scale );

			state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );
			state.buffers.depth.setTest( material.depthTest );
			state.buffers.depth.setMask( material.depthWrite );

			if ( material.map ) {

				renderer.setTexture2D( material.map, 0 );

			} else {

				renderer.setTexture2D( texture, 0 );

			}

			gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );

		}

		// restore gl

		state.enable( gl.CULL_FACE );

		renderer.resetGLState();

	};

	function createProgram() {

		var program = gl.createProgram();

		var vertexShader = gl.createShader( gl.VERTEX_SHADER );
		var fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );

		gl.shaderSource( vertexShader, [

			'precision ' + renderer.getPrecision() + ' float;',

			'uniform mat4 modelViewMatrix;',
			'uniform mat4 projectionMatrix;',
			'uniform float rotation;',
			'uniform vec2 scale;',
			'uniform vec2 uvOffset;',
			'uniform vec2 uvScale;',

			'attribute vec2 position;',
			'attribute vec2 uv;',

			'varying vec2 vUV;',

			'void main() {',

				'vUV = uvOffset + uv * uvScale;',

				'vec2 alignedPosition = position * scale;',

				'vec2 rotatedPosition;',
				'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',
				'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',

				'vec4 finalPosition;',

				'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',
				'finalPosition.xy += rotatedPosition;',
				'finalPosition = projectionMatrix * finalPosition;',

				'gl_Position = finalPosition;',

			'}'

		].join( '\n' ) );

		gl.shaderSource( fragmentShader, [

			'precision ' + renderer.getPrecision() + ' float;',

			'uniform vec3 color;',
			'uniform sampler2D map;',
			'uniform float opacity;',

			'uniform int fogType;',
			'uniform vec3 fogColor;',
			'uniform float fogDensity;',
			'uniform float fogNear;',
			'uniform float fogFar;',
			'uniform float alphaTest;',

			'varying vec2 vUV;',

			'void main() {',

				'vec4 texture = texture2D( map, vUV );',

				'if ( texture.a < alphaTest ) discard;',

				'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',

				'if ( fogType > 0 ) {',

					'float depth = gl_FragCoord.z / gl_FragCoord.w;',
					'float fogFactor = 0.0;',

					'if ( fogType == 1 ) {',

						'fogFactor = smoothstep( fogNear, fogFar, depth );',

					'} else {',

						'const float LOG2 = 1.442695;',
						'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',
						'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',

					'}',

					'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',

				'}',

			'}'

		].join( '\n' ) );

		gl.compileShader( vertexShader );
		gl.compileShader( fragmentShader );

		gl.attachShader( program, vertexShader );
		gl.attachShader( program, fragmentShader );

		gl.linkProgram( program );

		return program;

	}

	function painterSortStable( a, b ) {

		if ( a.renderOrder !== b.renderOrder ) {

			return a.renderOrder - b.renderOrder;

		} else if ( a.z !== b.z ) {

			return b.z - a.z;

		} else {

			return b.id - a.id;

		}

	}

}

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

var materialId = 0;

function Material() {

	Object.defineProperty( this, 'id', { value: materialId ++ } );

	this.uuid = _Math.generateUUID();

	this.name = '';
	this.type = 'Material';

	this.fog = true;
	this.lights = true;

	this.blending = NormalBlending;
	this.side = FrontSide;
	this.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading
	this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors

	this.opacity = 1;
	this.transparent = false;

	this.blendSrc = SrcAlphaFactor;
	this.blendDst = OneMinusSrcAlphaFactor;
	this.blendEquation = AddEquation;
	this.blendSrcAlpha = null;
	this.blendDstAlpha = null;
	this.blendEquationAlpha = null;

	this.depthFunc = LessEqualDepth;
	this.depthTest = true;
	this.depthWrite = true;

	this.clippingPlanes = null;
	this.clipIntersection = false;
	this.clipShadows = false;

	this.colorWrite = true;

	this.precision = null; // override the renderer's default precision for this material

	this.polygonOffset = false;
	this.polygonOffsetFactor = 0;
	this.polygonOffsetUnits = 0;

	this.alphaTest = 0;
	this.premultipliedAlpha = false;

	this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer

	this.visible = true;

	this.needsUpdate = true;

}

Object.assign( Material.prototype, EventDispatcher.prototype, {

	isMaterial: true,

	setValues: function ( values ) {

		if ( values === undefined ) return;

		for ( var key in values ) {

			var newValue = values[ key ];

			if ( newValue === undefined ) {

				console.warn( "THREE.Material: '" + key + "' parameter is undefined." );
				continue;

			}

			var currentValue = this[ key ];

			if ( currentValue === undefined ) {

				console.warn( "THREE." + this.type + ": '" + key + "' is not a property of this material." );
				continue;

			}

			if ( currentValue && currentValue.isColor ) {

				currentValue.set( newValue );

			} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {

				currentValue.copy( newValue );

			} else if ( key === 'overdraw' ) {

				// ensure overdraw is backwards-compatible with legacy boolean type
				this[ key ] = Number( newValue );

			} else {

				this[ key ] = newValue;

			}

		}

	},

	toJSON: function ( meta ) {

		var isRoot = meta === undefined;

		if ( isRoot ) {

			meta = {
				textures: {},
				images: {}
			};

		}

		var data = {
			metadata: {
				version: 4.4,
				type: 'Material',
				generator: 'Material.toJSON'
			}
		};

		// standard Material serialization
		data.uuid = this.uuid;
		data.type = this.type;

		if ( this.name !== '' ) data.name = this.name;

		if ( this.color && this.color.isColor ) data.color = this.color.getHex();

		if ( this.roughness !== undefined ) data.roughness = this.roughness;
		if ( this.metalness !== undefined ) data.metalness = this.metalness;

		if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();
		if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();
		if ( this.shininess !== undefined ) data.shininess = this.shininess;
		if ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;
		if ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;

		if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;
		if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;
		if ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;
		if ( this.bumpMap && this.bumpMap.isTexture ) {

			data.bumpMap = this.bumpMap.toJSON( meta ).uuid;
			data.bumpScale = this.bumpScale;

		}
		if ( this.normalMap && this.normalMap.isTexture ) {

			data.normalMap = this.normalMap.toJSON( meta ).uuid;
			data.normalScale = this.normalScale.toArray();

		}
		if ( this.displacementMap && this.displacementMap.isTexture ) {

			data.displacementMap = this.displacementMap.toJSON( meta ).uuid;
			data.displacementScale = this.displacementScale;
			data.displacementBias = this.displacementBias;

		}
		if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;
		if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;

		if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;
		if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;

		if ( this.envMap && this.envMap.isTexture ) {

			data.envMap = this.envMap.toJSON( meta ).uuid;
			data.reflectivity = this.reflectivity; // Scale behind envMap

		}

		if ( this.gradientMap && this.gradientMap.isTexture ) {

			data.gradientMap = this.gradientMap.toJSON( meta ).uuid;

		}

		if ( this.size !== undefined ) data.size = this.size;
		if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;

		if ( this.blending !== NormalBlending ) data.blending = this.blending;
		if ( this.shading !== SmoothShading ) data.shading = this.shading;
		if ( this.side !== FrontSide ) data.side = this.side;
		if ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;

		if ( this.opacity < 1 ) data.opacity = this.opacity;
		if ( this.transparent === true ) data.transparent = this.transparent;

		data.depthFunc = this.depthFunc;
		data.depthTest = this.depthTest;
		data.depthWrite = this.depthWrite;

		if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;
		if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;
		if ( this.wireframe === true ) data.wireframe = this.wireframe;
		if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;
		if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;
		if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;

		data.skinning = this.skinning;
		data.morphTargets = this.morphTargets;

		// TODO: Copied from Object3D.toJSON

		function extractFromCache( cache ) {

			var values = [];

			for ( var key in cache ) {

				var data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}

			return values;

		}

		if ( isRoot ) {

			var textures = extractFromCache( meta.textures );
			var images = extractFromCache( meta.images );

			if ( textures.length > 0 ) data.textures = textures;
			if ( images.length > 0 ) data.images = images;

		}

		return data;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.name = source.name;

		this.fog = source.fog;
		this.lights = source.lights;

		this.blending = source.blending;
		this.side = source.side;
		this.shading = source.shading;
		this.vertexColors = source.vertexColors;

		this.opacity = source.opacity;
		this.transparent = source.transparent;

		this.blendSrc = source.blendSrc;
		this.blendDst = source.blendDst;
		this.blendEquation = source.blendEquation;
		this.blendSrcAlpha = source.blendSrcAlpha;
		this.blendDstAlpha = source.blendDstAlpha;
		this.blendEquationAlpha = source.blendEquationAlpha;

		this.depthFunc = source.depthFunc;
		this.depthTest = source.depthTest;
		this.depthWrite = source.depthWrite;

		this.colorWrite = source.colorWrite;

		this.precision = source.precision;

		this.polygonOffset = source.polygonOffset;
		this.polygonOffsetFactor = source.polygonOffsetFactor;
		this.polygonOffsetUnits = source.polygonOffsetUnits;

		this.alphaTest = source.alphaTest;

		this.premultipliedAlpha = source.premultipliedAlpha;

		this.overdraw = source.overdraw;

		this.visible = source.visible;
		this.clipShadows = source.clipShadows;
		this.clipIntersection = source.clipIntersection;

		var srcPlanes = source.clippingPlanes,
			dstPlanes = null;

		if ( srcPlanes !== null ) {

			var n = srcPlanes.length;
			dstPlanes = new Array( n );

			for ( var i = 0; i !== n; ++ i )
				dstPlanes[ i ] = srcPlanes[ i ].clone();

		}

		this.clippingPlanes = dstPlanes;

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function ShaderMaterial( parameters ) {

	Material.call( this );

	this.type = 'ShaderMaterial';

	this.defines = {};
	this.uniforms = {};

	this.vertexShader = 'void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}';
	this.fragmentShader = 'void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}';

	this.linewidth = 1;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.fog = false; // set to use scene fog
	this.lights = false; // set to use scene lights
	this.clipping = false; // set to use user-defined clipping planes

	this.skinning = false; // set to use skinning attribute streams
	this.morphTargets = false; // set to use morph targets
	this.morphNormals = false; // set to use morph normals

	this.extensions = {
		derivatives: false, // set to use derivatives
		fragDepth: false, // set to use fragment depth values
		drawBuffers: false, // set to use draw buffers
		shaderTextureLOD: false // set to use shader texture LOD
	};

	// When rendered geometry doesn't include these attributes but the material does,
	// use these default values in WebGL. This avoids errors when buffer data is missing.
	this.defaultAttributeValues = {
		'color': [ 1, 1, 1 ],
		'uv': [ 0, 0 ],
		'uv2': [ 0, 0 ]
	};

	this.index0AttributeName = undefined;

	if ( parameters !== undefined ) {

		if ( parameters.attributes !== undefined ) {

			console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );

		}

		this.setValues( parameters );

	}

}

ShaderMaterial.prototype = Object.create( Material.prototype );
ShaderMaterial.prototype.constructor = ShaderMaterial;

ShaderMaterial.prototype.isShaderMaterial = true;

ShaderMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.fragmentShader = source.fragmentShader;
	this.vertexShader = source.vertexShader;

	this.uniforms = UniformsUtils.clone( source.uniforms );

	this.defines = source.defines;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;

	this.lights = source.lights;
	this.clipping = source.clipping;

	this.skinning = source.skinning;

	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	this.extensions = source.extensions;

	return this;

};

ShaderMaterial.prototype.toJSON = function ( meta ) {

	var data = Material.prototype.toJSON.call( this, meta );

	data.uniforms = this.uniforms;
	data.vertexShader = this.vertexShader;
	data.fragmentShader = this.fragmentShader;

	return data;

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / https://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */

function MeshDepthMaterial( parameters ) {

	Material.call( this );

	this.type = 'MeshDepthMaterial';

	this.depthPacking = BasicDepthPacking;

	this.skinning = false;
	this.morphTargets = false;

	this.map = null;

	this.alphaMap = null;

	this.displacementMap = null;
	this.displacementScale = 1;
	this.displacementBias = 0;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.fog = false;
	this.lights = false;

	this.setValues( parameters );

}

MeshDepthMaterial.prototype = Object.create( Material.prototype );
MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;

MeshDepthMaterial.prototype.isMeshDepthMaterial = true;

MeshDepthMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.depthPacking = source.depthPacking;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;

	this.map = source.map;

	this.alphaMap = source.alphaMap;

	this.displacementMap = source.displacementMap;
	this.displacementScale = source.displacementScale;
	this.displacementBias = source.displacementBias;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;

	return this;

};

/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */

function Box3( min, max ) {

	this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );
	this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );

}

Object.assign( Box3.prototype, {

	isBox3: true,

	set: function ( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	},

	setFromArray: function ( array ) {

		var minX = + Infinity;
		var minY = + Infinity;
		var minZ = + Infinity;

		var maxX = - Infinity;
		var maxY = - Infinity;
		var maxZ = - Infinity;

		for ( var i = 0, l = array.length; i < l; i += 3 ) {

			var x = array[ i ];
			var y = array[ i + 1 ];
			var z = array[ i + 2 ];

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	},

	setFromBufferAttribute: function ( attribute ) {

		var minX = + Infinity;
		var minY = + Infinity;
		var minZ = + Infinity;

		var maxX = - Infinity;
		var maxY = - Infinity;
		var maxZ = - Infinity;

		for ( var i = 0, l = attribute.count; i < l; i ++ ) {

			var x = attribute.getX( i );
			var y = attribute.getY( i );
			var z = attribute.getZ( i );

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	},

	setFromPoints: function ( points ) {

		this.makeEmpty();

		for ( var i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	},

	setFromCenterAndSize: function () {

		var v1 = new Vector3();

		return function setFromCenterAndSize( center, size ) {

			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );

			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		};

	}(),

	setFromObject: function ( object ) {

		this.makeEmpty();

		return this.expandByObject( object );

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	},

	makeEmpty: function () {

		this.min.x = this.min.y = this.min.z = + Infinity;
		this.max.x = this.max.y = this.max.z = - Infinity;

		return this;

	},

	isEmpty: function () {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );

	},

	getCenter: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	},

	getSize: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );

	},

	expandByPoint: function ( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	},

	expandByVector: function ( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	},

	expandByScalar: function ( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	},

	expandByObject: function () {

		// Computes the world-axis-aligned bounding box of an object (including its children),
		// accounting for both the object's, and children's, world transforms

		var v1 = new Vector3();

		return function expandByObject( object ) {

			var scope = this;

			object.updateMatrixWorld( true );

			object.traverse( function ( node ) {

				var i, l;

				var geometry = node.geometry;

				if ( geometry !== undefined ) {

					if ( geometry.isGeometry ) {

						var vertices = geometry.vertices;

						for ( i = 0, l = vertices.length; i < l; i ++ ) {

							v1.copy( vertices[ i ] );
							v1.applyMatrix4( node.matrixWorld );

							scope.expandByPoint( v1 );

						}

					} else if ( geometry.isBufferGeometry ) {

						var attribute = geometry.attributes.position;

						if ( attribute !== undefined ) {

							for ( i = 0, l = attribute.count; i < l; i ++ ) {

								v1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );

								scope.expandByPoint( v1 );

							}

						}

					}

				}

			} );

			return this;

		};

	}(),

	containsPoint: function ( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ||
			point.z < this.min.z || point.z > this.max.z ? false : true;

	},

	containsBox: function ( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y &&
			this.min.z <= box.min.z && box.max.z <= this.max.z;

	},

	getParameter: function ( point, optionalTarget ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		var result = optionalTarget || new Vector3();

		return result.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y ),
			( point.z - this.min.z ) / ( this.max.z - this.min.z )
		);

	},

	intersectsBox: function ( box ) {

		// using 6 splitting planes to rule out intersections.
		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ||
			box.max.z < this.min.z || box.min.z > this.max.z ? false : true;

	},

	intersectsSphere: ( function () {

		var closestPoint = new Vector3();

		return function intersectsSphere( sphere ) {

			// Find the point on the AABB closest to the sphere center.
			this.clampPoint( sphere.center, closestPoint );

			// If that point is inside the sphere, the AABB and sphere intersect.
			return closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );

		};

	} )(),

	intersectsPlane: function ( plane ) {

		// We compute the minimum and maximum dot product values. If those values
		// are on the same side (back or front) of the plane, then there is no intersection.

		var min, max;

		if ( plane.normal.x > 0 ) {

			min = plane.normal.x * this.min.x;
			max = plane.normal.x * this.max.x;

		} else {

			min = plane.normal.x * this.max.x;
			max = plane.normal.x * this.min.x;

		}

		if ( plane.normal.y > 0 ) {

			min += plane.normal.y * this.min.y;
			max += plane.normal.y * this.max.y;

		} else {

			min += plane.normal.y * this.max.y;
			max += plane.normal.y * this.min.y;

		}

		if ( plane.normal.z > 0 ) {

			min += plane.normal.z * this.min.z;
			max += plane.normal.z * this.max.z;

		} else {

			min += plane.normal.z * this.max.z;
			max += plane.normal.z * this.min.z;

		}

		return ( min <= plane.constant && max >= plane.constant );

	},

	clampPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return result.copy( point ).clamp( this.min, this.max );

	},

	distanceToPoint: function () {

		var v1 = new Vector3();

		return function distanceToPoint( point ) {

			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
			return clampedPoint.sub( point ).length();

		};

	}(),

	getBoundingSphere: function () {

		var v1 = new Vector3();

		return function getBoundingSphere( optionalTarget ) {

			var result = optionalTarget || new Sphere$2();

			this.getCenter( result.center );

			result.radius = this.getSize( v1 ).length() * 0.5;

			return result;

		};

	}(),

	intersect: function ( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
		if( this.isEmpty() ) this.makeEmpty();

		return this;

	},

	union: function ( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	},

	applyMatrix4: function () {

		var points = [
			new Vector3(),
			new Vector3(),
			new Vector3(),
			new Vector3(),
			new Vector3(),
			new Vector3(),
			new Vector3(),
			new Vector3()
		];

		return function applyMatrix4( matrix ) {

			// transform of empty box is an empty box.
			if( this.isEmpty() ) return this;

			// NOTE: I am using a binary pattern to specify all 2^3 combinations below
			points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
			points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
			points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
			points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
			points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
			points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
			points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
			points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );	// 111

			this.setFromPoints( points );

			return this;

		};

	}(),

	translate: function ( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	},

	equals: function ( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

} );

/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */

function Sphere$2( center, radius ) {

	this.center = ( center !== undefined ) ? center : new Vector3();
	this.radius = ( radius !== undefined ) ? radius : 0;

}

Object.assign( Sphere$2.prototype, {

	set: function ( center, radius ) {

		this.center.copy( center );
		this.radius = radius;

		return this;

	},

	setFromPoints: function () {

		var box = new Box3();

		return function setFromPoints( points, optionalCenter ) {

			var center = this.center;

			if ( optionalCenter !== undefined ) {

				center.copy( optionalCenter );

			} else {

				box.setFromPoints( points ).getCenter( center );

			}

			var maxRadiusSq = 0;

			for ( var i = 0, il = points.length; i < il; i ++ ) {

				maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );

			}

			this.radius = Math.sqrt( maxRadiusSq );

			return this;

		};

	}(),

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( sphere ) {

		this.center.copy( sphere.center );
		this.radius = sphere.radius;

		return this;

	},

	empty: function () {

		return ( this.radius <= 0 );

	},

	containsPoint: function ( point ) {

		return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );

	},

	distanceToPoint: function ( point ) {

		return ( point.distanceTo( this.center ) - this.radius );

	},

	intersectsSphere: function ( sphere ) {

		var radiusSum = this.radius + sphere.radius;

		return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );

	},

	intersectsBox: function ( box ) {

		return box.intersectsSphere( this );

	},

	intersectsPlane: function ( plane ) {

		// We use the following equation to compute the signed distance from
		// the center of the sphere to the plane.
		//
		// distance = q * n - d
		//
		// If this distance is greater than the radius of the sphere,
		// then there is no intersection.

		return Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;

	},

	clampPoint: function ( point, optionalTarget ) {

		var deltaLengthSq = this.center.distanceToSquared( point );

		var result = optionalTarget || new Vector3();

		result.copy( point );

		if ( deltaLengthSq > ( this.radius * this.radius ) ) {

			result.sub( this.center ).normalize();
			result.multiplyScalar( this.radius ).add( this.center );

		}

		return result;

	},

	getBoundingBox: function ( optionalTarget ) {

		var box = optionalTarget || new Box3();

		box.set( this.center, this.center );
		box.expandByScalar( this.radius );

		return box;

	},

	applyMatrix4: function ( matrix ) {

		this.center.applyMatrix4( matrix );
		this.radius = this.radius * matrix.getMaxScaleOnAxis();

		return this;

	},

	translate: function ( offset ) {

		this.center.add( offset );

		return this;

	},

	equals: function ( sphere ) {

		return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 * @author tschw
 */

function Matrix3() {

	this.elements = [

		1, 0, 0,
		0, 1, 0,
		0, 0, 1

	];

	if ( arguments.length > 0 ) {

		console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );

	}

}

Object.assign( Matrix3.prototype, {

	isMatrix3: true,

	set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

		var te = this.elements;

		te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;
		te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;
		te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;

		return this;

	},

	identity: function () {

		this.set(

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		);

		return this;

	},

	clone: function () {

		return new this.constructor().fromArray( this.elements );

	},

	copy: function ( m ) {

		var te = this.elements;
		var me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];
		te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];
		te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];

		return this;

	},

	setFromMatrix4: function ( m ) {

		var me = m.elements;

		this.set(

			me[ 0 ], me[ 4 ], me[  8 ],
			me[ 1 ], me[ 5 ], me[  9 ],
			me[ 2 ], me[ 6 ], me[ 10 ]

		);

		return this;

	},

	applyToBufferAttribute: function () {

		var v1 = new Vector3();

		return function applyToBufferAttribute( attribute ) {

			for ( var i = 0, l = attribute.count; i < l; i ++ ) {

				v1.x = attribute.getX( i );
				v1.y = attribute.getY( i );
				v1.z = attribute.getZ( i );

				v1.applyMatrix3( this );

				attribute.setXYZ( i, v1.x, v1.y, v1.z );

			}

			return attribute;

		};

	}(),

	multiplyScalar: function ( s ) {

		var te = this.elements;

		te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;
		te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;
		te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;

		return this;

	},

	determinant: function () {

		var te = this.elements;

		var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],
			d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],
			g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];

		return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;

	},

	getInverse: function ( matrix, throwOnDegenerate ) {

		if ( matrix && matrix.isMatrix4 ) {

			console.error( "THREE.Matrix3.getInverse no longer takes a Matrix4 argument." );

		}

		var me = matrix.elements,
			te = this.elements,

			n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],
			n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],
			n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],

			t11 = n33 * n22 - n32 * n23,
			t12 = n32 * n13 - n33 * n12,
			t13 = n23 * n12 - n22 * n13,

			det = n11 * t11 + n21 * t12 + n31 * t13;

		if ( det === 0 ) {

			var msg = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";

			if ( throwOnDegenerate === true ) {

				throw new Error( msg );

			} else {

				console.warn( msg );

			}

			return this.identity();

		}

		var detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;
		te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;

		te[ 3 ] = t12 * detInv;
		te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;
		te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;

		te[ 6 ] = t13 * detInv;
		te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;
		te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;

		return this;

	},

	transpose: function () {

		var tmp, m = this.elements;

		tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;
		tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;
		tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;

		return this;

	},

	getNormalMatrix: function ( matrix4 ) {

		return this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();

	},

	transposeIntoArray: function ( r ) {

		var m = this.elements;

		r[ 0 ] = m[ 0 ];
		r[ 1 ] = m[ 3 ];
		r[ 2 ] = m[ 6 ];
		r[ 3 ] = m[ 1 ];
		r[ 4 ] = m[ 4 ];
		r[ 5 ] = m[ 7 ];
		r[ 6 ] = m[ 2 ];
		r[ 7 ] = m[ 5 ];
		r[ 8 ] = m[ 8 ];

		return this;

	},

	fromArray: function ( array, offset ) {

		if ( offset === undefined ) offset = 0;

		for ( var i = 0; i < 9; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		var te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];

		array[ offset + 3 ] = te[ 3 ];
		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];

		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];
		array[ offset + 8 ] = te[ 8 ];

		return array;

	}

} );

/**
 * @author bhouston / http://clara.io
 */

function Plane( normal, constant ) {

	this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );
	this.constant = ( constant !== undefined ) ? constant : 0;

}

Object.assign( Plane.prototype, {

	set: function ( normal, constant ) {

		this.normal.copy( normal );
		this.constant = constant;

		return this;

	},

	setComponents: function ( x, y, z, w ) {

		this.normal.set( x, y, z );
		this.constant = w;

		return this;

	},

	setFromNormalAndCoplanarPoint: function ( normal, point ) {

		this.normal.copy( normal );
		this.constant = - point.dot( this.normal );	// must be this.normal, not normal, as this.normal is normalized

		return this;

	},

	setFromCoplanarPoints: function () {

		var v1 = new Vector3();
		var v2 = new Vector3();

		return function setFromCoplanarPoints( a, b, c ) {

			var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();

			// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?

			this.setFromNormalAndCoplanarPoint( normal, a );

			return this;

		};

	}(),

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( plane ) {

		this.normal.copy( plane.normal );
		this.constant = plane.constant;

		return this;

	},

	normalize: function () {

		// Note: will lead to a divide by zero if the plane is invalid.

		var inverseNormalLength = 1.0 / this.normal.length();
		this.normal.multiplyScalar( inverseNormalLength );
		this.constant *= inverseNormalLength;

		return this;

	},

	negate: function () {

		this.constant *= - 1;
		this.normal.negate();

		return this;

	},

	distanceToPoint: function ( point ) {

		return this.normal.dot( point ) + this.constant;

	},

	distanceToSphere: function ( sphere ) {

		return this.distanceToPoint( sphere.center ) - sphere.radius;

	},

	projectPoint: function ( point, optionalTarget ) {

		return this.orthoPoint( point, optionalTarget ).sub( point ).negate();

	},

	orthoPoint: function ( point, optionalTarget ) {

		var perpendicularMagnitude = this.distanceToPoint( point );

		var result = optionalTarget || new Vector3();
		return result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );

	},

	intersectLine: function () {

		var v1 = new Vector3();

		return function intersectLine( line, optionalTarget ) {

			var result = optionalTarget || new Vector3();

			var direction = line.delta( v1 );

			var denominator = this.normal.dot( direction );

			if ( denominator === 0 ) {

				// line is coplanar, return origin
				if ( this.distanceToPoint( line.start ) === 0 ) {

					return result.copy( line.start );

				}

				// Unsure if this is the correct method to handle this case.
				return undefined;

			}

			var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;

			if ( t < 0 || t > 1 ) {

				return undefined;

			}

			return result.copy( direction ).multiplyScalar( t ).add( line.start );

		};

	}(),

	intersectsLine: function ( line ) {

		// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.

		var startSign = this.distanceToPoint( line.start );
		var endSign = this.distanceToPoint( line.end );

		return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );

	},

	intersectsBox: function ( box ) {

		return box.intersectsPlane( this );

	},

	intersectsSphere: function ( sphere ) {

		return sphere.intersectsPlane( this );

	},

	coplanarPoint: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return result.copy( this.normal ).multiplyScalar( - this.constant );

	},

	applyMatrix4: function () {

		var v1 = new Vector3();
		var m1 = new Matrix3();

		return function applyMatrix4( matrix, optionalNormalMatrix ) {

			var referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );

			// transform normal based on theory here:
			// http://www.songho.ca/opengl/gl_normaltransform.html
			var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );
			var normal = this.normal.applyMatrix3( normalMatrix ).normalize();

			// recalculate constant (like in setFromNormalAndCoplanarPoint)
			this.constant = - referencePoint.dot( normal );

			return this;

		};

	}(),

	translate: function ( offset ) {

		this.constant = this.constant - offset.dot( this.normal );

		return this;

	},

	equals: function ( plane ) {

		return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / http://clara.io
 */

function Frustum( p0, p1, p2, p3, p4, p5 ) {

	this.planes = [

		( p0 !== undefined ) ? p0 : new Plane(),
		( p1 !== undefined ) ? p1 : new Plane(),
		( p2 !== undefined ) ? p2 : new Plane(),
		( p3 !== undefined ) ? p3 : new Plane(),
		( p4 !== undefined ) ? p4 : new Plane(),
		( p5 !== undefined ) ? p5 : new Plane()

	];

}

Object.assign( Frustum.prototype, {

	set: function ( p0, p1, p2, p3, p4, p5 ) {

		var planes = this.planes;

		planes[ 0 ].copy( p0 );
		planes[ 1 ].copy( p1 );
		planes[ 2 ].copy( p2 );
		planes[ 3 ].copy( p3 );
		planes[ 4 ].copy( p4 );
		planes[ 5 ].copy( p5 );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( frustum ) {

		var planes = this.planes;

		for ( var i = 0; i < 6; i ++ ) {

			planes[ i ].copy( frustum.planes[ i ] );

		}

		return this;

	},

	setFromMatrix: function ( m ) {

		var planes = this.planes;
		var me = m.elements;
		var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];
		var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];
		var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];
		var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];

		planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
		planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
		planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
		planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
		planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
		planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();

		return this;

	},

	intersectsObject: function () {

		var sphere = new Sphere$2();

		return function intersectsObject( object ) {

			var geometry = object.geometry;

			if ( geometry.boundingSphere === null )
				geometry.computeBoundingSphere();

			sphere.copy( geometry.boundingSphere )
				.applyMatrix4( object.matrixWorld );

			return this.intersectsSphere( sphere );

		};

	}(),

	intersectsSprite: function () {

		var sphere = new Sphere$2();

		return function intersectsSprite( sprite ) {

			sphere.center.set( 0, 0, 0 );
			sphere.radius = 0.7071067811865476;
			sphere.applyMatrix4( sprite.matrixWorld );

			return this.intersectsSphere( sphere );

		};

	}(),

	intersectsSphere: function ( sphere ) {

		var planes = this.planes;
		var center = sphere.center;
		var negRadius = - sphere.radius;

		for ( var i = 0; i < 6; i ++ ) {

			var distance = planes[ i ].distanceToPoint( center );

			if ( distance < negRadius ) {

				return false;

			}

		}

		return true;

	},

	intersectsBox: function () {

		var p1 = new Vector3(),
			p2 = new Vector3();

		return function intersectsBox( box ) {

			var planes = this.planes;

			for ( var i = 0; i < 6; i ++ ) {

				var plane = planes[ i ];

				p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;
				p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;
				p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;
				p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;
				p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;
				p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;

				var d1 = plane.distanceToPoint( p1 );
				var d2 = plane.distanceToPoint( p2 );

				// if both outside plane, no intersection

				if ( d1 < 0 && d2 < 0 ) {

					return false;

				}

			}

			return true;

		};

	}(),

	containsPoint: function ( point ) {

		var planes = this.planes;

		for ( var i = 0; i < 6; i ++ ) {

			if ( planes[ i ].distanceToPoint( point ) < 0 ) {

				return false;

			}

		}

		return true;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {

	var _gl = _renderer.context,
		_state = _renderer.state,
		_frustum = new Frustum(),
		_projScreenMatrix = new Matrix4(),

		_lightShadows = _lights.shadows,

		_shadowMapSize = new Vector2(),
		_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),

		_lookTarget = new Vector3(),
		_lightPositionWorld = new Vector3(),

		_MorphingFlag = 1,
		_SkinningFlag = 2,

		_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,

		_depthMaterials = new Array( _NumberOfMaterialVariants ),
		_distanceMaterials = new Array( _NumberOfMaterialVariants ),

		_materialCache = {};

	var cubeDirections = [
		new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),
		new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )
	];

	var cubeUps = [
		new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),
		new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )
	];

	var cube2DViewPorts = [
		new Vector4(), new Vector4(), new Vector4(),
		new Vector4(), new Vector4(), new Vector4()
	];

	// init

	var depthMaterialTemplate = new MeshDepthMaterial();
	depthMaterialTemplate.depthPacking = RGBADepthPacking;
	depthMaterialTemplate.clipping = true;

	var distanceShader = ShaderLib[ "distanceRGBA" ];
	var distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );

	for ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {

		var useMorphing = ( i & _MorphingFlag ) !== 0;
		var useSkinning = ( i & _SkinningFlag ) !== 0;

		var depthMaterial = depthMaterialTemplate.clone();
		depthMaterial.morphTargets = useMorphing;
		depthMaterial.skinning = useSkinning;

		_depthMaterials[ i ] = depthMaterial;

		var distanceMaterial = new ShaderMaterial( {
			defines: {
				'USE_SHADOWMAP': ''
			},
			uniforms: distanceUniforms,
			vertexShader: distanceShader.vertexShader,
			fragmentShader: distanceShader.fragmentShader,
			morphTargets: useMorphing,
			skinning: useSkinning,
			clipping: true
		} );

		_distanceMaterials[ i ] = distanceMaterial;

	}

	//

	var scope = this;

	this.enabled = false;

	this.autoUpdate = true;
	this.needsUpdate = false;

	this.type = PCFShadowMap;

	this.renderReverseSided = true;
	this.renderSingleSided = true;

	this.render = function ( scene, camera ) {

		if ( scope.enabled === false ) return;
		if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;

		if ( _lightShadows.length === 0 ) return;

		// Set GL state for depth map.
		_state.disable( _gl.BLEND );
		_state.buffers.color.setClear( 1, 1, 1, 1 );
		_state.buffers.depth.setTest( true );
		_state.setScissorTest( false );

		// render depth map

		var faceCount, isPointLight;

		for ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {

			var light = _lightShadows[ i ];
			var shadow = light.shadow;

			if ( shadow === undefined ) {

				console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );
				continue;

			}

			var shadowCamera = shadow.camera;

			_shadowMapSize.copy( shadow.mapSize );
			_shadowMapSize.min( _maxShadowMapSize );

			if ( light && light.isPointLight ) {

				faceCount = 6;
				isPointLight = true;

				var vpWidth = _shadowMapSize.x;
				var vpHeight = _shadowMapSize.y;

				// These viewports map a cube-map onto a 2D texture with the
				// following orientation:
				//
				//  xzXZ
				//   y Y
				//
				// X - Positive x direction
				// x - Negative x direction
				// Y - Positive y direction
				// y - Negative y direction
				// Z - Positive z direction
				// z - Negative z direction

				// positive X
				cube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );
				// negative X
				cube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );
				// positive Z
				cube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );
				// negative Z
				cube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );
				// positive Y
				cube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );
				// negative Y
				cube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );

				_shadowMapSize.x *= 4.0;
				_shadowMapSize.y *= 2.0;

			} else {

				faceCount = 1;
				isPointLight = false;

			}

			if ( shadow.map === null ) {

				var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };

				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
				shadow.map.texture.name = light.name + ".shadowMap";

				shadowCamera.updateProjectionMatrix();

			}

			if ( shadow.isSpotLightShadow ) {

				shadow.update( light );

			}

			var shadowMap = shadow.map;
			var shadowMatrix = shadow.matrix;

			_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
			shadowCamera.position.copy( _lightPositionWorld );

			_renderer.setRenderTarget( shadowMap );
			_renderer.clear();

			// render shadow map for each cube face (if omni-directional) or
			// run a single pass if not

			for ( var face = 0; face < faceCount; face ++ ) {

				if ( isPointLight ) {

					_lookTarget.copy( shadowCamera.position );
					_lookTarget.add( cubeDirections[ face ] );
					shadowCamera.up.copy( cubeUps[ face ] );
					shadowCamera.lookAt( _lookTarget );

					var vpDimensions = cube2DViewPorts[ face ];
					_state.viewport( vpDimensions );

				} else {

					_lookTarget.setFromMatrixPosition( light.target.matrixWorld );
					shadowCamera.lookAt( _lookTarget );

				}

				shadowCamera.updateMatrixWorld();
				shadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );

				// compute shadow matrix

				shadowMatrix.set(
					0.5, 0.0, 0.0, 0.5,
					0.0, 0.5, 0.0, 0.5,
					0.0, 0.0, 0.5, 0.5,
					0.0, 0.0, 0.0, 1.0
				);

				shadowMatrix.multiply( shadowCamera.projectionMatrix );
				shadowMatrix.multiply( shadowCamera.matrixWorldInverse );

				// update camera matrices and frustum

				_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
				_frustum.setFromMatrix( _projScreenMatrix );

				// set object matrices & frustum culling

				renderObject( scene, camera, shadowCamera, isPointLight );

			}

		}

		// Restore GL state.
		var clearColor = _renderer.getClearColor();
		var clearAlpha = _renderer.getClearAlpha();
		_renderer.setClearColor( clearColor, clearAlpha );

		scope.needsUpdate = false;

	};

	function getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {

		var geometry = object.geometry;

		var result = null;

		var materialVariants = _depthMaterials;
		var customMaterial = object.customDepthMaterial;

		if ( isPointLight ) {

			materialVariants = _distanceMaterials;
			customMaterial = object.customDistanceMaterial;

		}

		if ( ! customMaterial ) {

			var useMorphing = false;

			if ( material.morphTargets ) {

				if ( geometry && geometry.isBufferGeometry ) {

					useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;

				} else if ( geometry && geometry.isGeometry ) {

					useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;

				}

			}

			if ( object.isSkinnedMesh && material.skinning === false ) {

				console.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );

			}

			var useSkinning = object.isSkinnedMesh && material.skinning;

			var variantIndex = 0;

			if ( useMorphing ) variantIndex |= _MorphingFlag;
			if ( useSkinning ) variantIndex |= _SkinningFlag;

			result = materialVariants[ variantIndex ];

		} else {

			result = customMaterial;

		}

		if ( _renderer.localClippingEnabled &&
				material.clipShadows === true &&
				material.clippingPlanes.length !== 0 ) {

			// in this case we need a unique material instance reflecting the
			// appropriate state

			var keyA = result.uuid, keyB = material.uuid;

			var materialsForVariant = _materialCache[ keyA ];

			if ( materialsForVariant === undefined ) {

				materialsForVariant = {};
				_materialCache[ keyA ] = materialsForVariant;

			}

			var cachedMaterial = materialsForVariant[ keyB ];

			if ( cachedMaterial === undefined ) {

				cachedMaterial = result.clone();
				materialsForVariant[ keyB ] = cachedMaterial;

			}

			result = cachedMaterial;

		}

		result.visible = material.visible;
		result.wireframe = material.wireframe;

		var side = material.side;

		if ( scope.renderSingleSided && side == DoubleSide ) {

			side = FrontSide;

		}

		if ( scope.renderReverseSided ) {

			if ( side === FrontSide ) side = BackSide;
			else if ( side === BackSide ) side = FrontSide;

		}

		result.side = side;

		result.clipShadows = material.clipShadows;
		result.clippingPlanes = material.clippingPlanes;

		result.wireframeLinewidth = material.wireframeLinewidth;
		result.linewidth = material.linewidth;

		if ( isPointLight && result.uniforms.lightPos !== undefined ) {

			result.uniforms.lightPos.value.copy( lightPositionWorld );

		}

		return result;

	}

	function renderObject( object, camera, shadowCamera, isPointLight ) {

		if ( object.visible === false ) return;

		var visible = object.layers.test( camera.layers );

		if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {

			if ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {

				object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

				var geometry = _objects.update( object );
				var material = object.material;

				if ( Array.isArray( material ) ) {

					var groups = geometry.groups;

					for ( var k = 0, kl = groups.length; k < kl; k ++ ) {

						var group = groups[ k ];
						var groupMaterial = material[ group.materialIndex ];

						if ( groupMaterial && groupMaterial.visible ) {

							var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );
							_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );

						}

					}

				} else if ( material.visible ) {

					var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );
					_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );

				}

			}

		}

		var children = object.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			renderObject( children[ i ], camera, shadowCamera, isPointLight );

		}

	}

}

/**
 * @author bhouston / http://clara.io
 */

function Ray( origin, direction ) {

	this.origin = ( origin !== undefined ) ? origin : new Vector3();
	this.direction = ( direction !== undefined ) ? direction : new Vector3();

}

Object.assign( Ray.prototype, {

	set: function ( origin, direction ) {

		this.origin.copy( origin );
		this.direction.copy( direction );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( ray ) {

		this.origin.copy( ray.origin );
		this.direction.copy( ray.direction );

		return this;

	},

	at: function ( t, optionalTarget ) {

		var result = optionalTarget || new Vector3();

		return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );

	},

	lookAt: function ( v ) {

		this.direction.copy( v ).sub( this.origin ).normalize();

		return this;

	},

	recast: function () {

		var v1 = new Vector3();

		return function recast( t ) {

			this.origin.copy( this.at( t, v1 ) );

			return this;

		};

	}(),

	closestPointToPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new Vector3();
		result.subVectors( point, this.origin );
		var directionDistance = result.dot( this.direction );

		if ( directionDistance < 0 ) {

			return result.copy( this.origin );

		}

		return result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

	},

	distanceToPoint: function ( point ) {

		return Math.sqrt( this.distanceSqToPoint( point ) );

	},

	distanceSqToPoint: function () {

		var v1 = new Vector3();

		return function distanceSqToPoint( point ) {

			var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );

			// point behind the ray

			if ( directionDistance < 0 ) {

				return this.origin.distanceToSquared( point );

			}

			v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

			return v1.distanceToSquared( point );

		};

	}(),

	distanceSqToSegment: function () {

		var segCenter = new Vector3();
		var segDir = new Vector3();
		var diff = new Vector3();

		return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {

			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
			// It returns the min distance between the ray and the segment
			// defined by v0 and v1
			// It can also set two optional targets :
			// - The closest point on the ray
			// - The closest point on the segment

			segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );
			segDir.copy( v1 ).sub( v0 ).normalize();
			diff.copy( this.origin ).sub( segCenter );

			var segExtent = v0.distanceTo( v1 ) * 0.5;
			var a01 = - this.direction.dot( segDir );
			var b0 = diff.dot( this.direction );
			var b1 = - diff.dot( segDir );
			var c = diff.lengthSq();
			var det = Math.abs( 1 - a01 * a01 );
			var s0, s1, sqrDist, extDet;

			if ( det > 0 ) {

				// The ray and segment are not parallel.

				s0 = a01 * b1 - b0;
				s1 = a01 * b0 - b1;
				extDet = segExtent * det;

				if ( s0 >= 0 ) {

					if ( s1 >= - extDet ) {

						if ( s1 <= extDet ) {

							// region 0
							// Minimum at interior points of ray and segment.

							var invDet = 1 / det;
							s0 *= invDet;
							s1 *= invDet;
							sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;

						} else {

							// region 1

							s1 = segExtent;
							s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
							sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

						}

					} else {

						// region 5

						s1 = - segExtent;
						s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				} else {

					if ( s1 <= - extDet ) {

						// region 4

						s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );
						s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					} else if ( s1 <= extDet ) {

						// region 3

						s0 = 0;
						s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = s1 * ( s1 + 2 * b1 ) + c;

					} else {

						// region 2

						s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );
						s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				}

			} else {

				// Ray and segment are parallel.

				s1 = ( a01 > 0 ) ? - segExtent : segExtent;
				s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
				sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

			}

			if ( optionalPointOnRay ) {

				optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );

			}

			if ( optionalPointOnSegment ) {

				optionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );

			}

			return sqrDist;

		};

	}(),

	intersectSphere: function () {

		var v1 = new Vector3();

		return function intersectSphere( sphere, optionalTarget ) {

			v1.subVectors( sphere.center, this.origin );
			var tca = v1.dot( this.direction );
			var d2 = v1.dot( v1 ) - tca * tca;
			var radius2 = sphere.radius * sphere.radius;

			if ( d2 > radius2 ) return null;

			var thc = Math.sqrt( radius2 - d2 );

			// t0 = first intersect point - entrance on front of sphere
			var t0 = tca - thc;

			// t1 = second intersect point - exit point on back of sphere
			var t1 = tca + thc;

			// test to see if both t0 and t1 are behind the ray - if so, return null
			if ( t0 < 0 && t1 < 0 ) return null;

			// test to see if t0 is behind the ray:
			// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
			// in order to always return an intersect point that is in front of the ray.
			if ( t0 < 0 ) return this.at( t1, optionalTarget );

			// else t0 is in front of the ray, so return the first collision point scaled by t0
			return this.at( t0, optionalTarget );

		};

	}(),

	intersectsSphere: function ( sphere ) {

		return this.distanceToPoint( sphere.center ) <= sphere.radius;

	},

	distanceToPlane: function ( plane ) {

		var denominator = plane.normal.dot( this.direction );

		if ( denominator === 0 ) {

			// line is coplanar, return origin
			if ( plane.distanceToPoint( this.origin ) === 0 ) {

				return 0;

			}

			// Null is preferable to undefined since undefined means.... it is undefined

			return null;

		}

		var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;

		// Return if the ray never intersects the plane

		return t >= 0 ? t :  null;

	},

	intersectPlane: function ( plane, optionalTarget ) {

		var t = this.distanceToPlane( plane );

		if ( t === null ) {

			return null;

		}

		return this.at( t, optionalTarget );

	},

	intersectsPlane: function ( plane ) {

		// check if the ray lies on the plane first

		var distToPoint = plane.distanceToPoint( this.origin );

		if ( distToPoint === 0 ) {

			return true;

		}

		var denominator = plane.normal.dot( this.direction );

		if ( denominator * distToPoint < 0 ) {

			return true;

		}

		// ray origin is behind the plane (and is pointing behind it)

		return false;

	},

	intersectBox: function ( box, optionalTarget ) {

		var tmin, tmax, tymin, tymax, tzmin, tzmax;

		var invdirx = 1 / this.direction.x,
			invdiry = 1 / this.direction.y,
			invdirz = 1 / this.direction.z;

		var origin = this.origin;

		if ( invdirx >= 0 ) {

			tmin = ( box.min.x - origin.x ) * invdirx;
			tmax = ( box.max.x - origin.x ) * invdirx;

		} else {

			tmin = ( box.max.x - origin.x ) * invdirx;
			tmax = ( box.min.x - origin.x ) * invdirx;

		}

		if ( invdiry >= 0 ) {

			tymin = ( box.min.y - origin.y ) * invdiry;
			tymax = ( box.max.y - origin.y ) * invdiry;

		} else {

			tymin = ( box.max.y - origin.y ) * invdiry;
			tymax = ( box.min.y - origin.y ) * invdiry;

		}

		if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;

		// These lines also handle the case where tmin or tmax is NaN
		// (result of 0 * Infinity). x !== x returns true if x is NaN

		if ( tymin > tmin || tmin !== tmin ) tmin = tymin;

		if ( tymax < tmax || tmax !== tmax ) tmax = tymax;

		if ( invdirz >= 0 ) {

			tzmin = ( box.min.z - origin.z ) * invdirz;
			tzmax = ( box.max.z - origin.z ) * invdirz;

		} else {

			tzmin = ( box.max.z - origin.z ) * invdirz;
			tzmax = ( box.min.z - origin.z ) * invdirz;

		}

		if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;

		if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;

		if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;

		//return point closest to the ray (positive side)

		if ( tmax < 0 ) return null;

		return this.at( tmin >= 0 ? tmin : tmax, optionalTarget );

	},

	intersectsBox: ( function () {

		var v = new Vector3();

		return function intersectsBox( box ) {

			return this.intersectBox( box, v ) !== null;

		};

	} )(),

	intersectTriangle: function () {

		// Compute the offset origin, edges, and normal.
		var diff = new Vector3();
		var edge1 = new Vector3();
		var edge2 = new Vector3();
		var normal = new Vector3();

		return function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {

			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h

			edge1.subVectors( b, a );
			edge2.subVectors( c, a );
			normal.crossVectors( edge1, edge2 );

			// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
			// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
			//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
			//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
			//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
			var DdN = this.direction.dot( normal );
			var sign;

			if ( DdN > 0 ) {

				if ( backfaceCulling ) return null;
				sign = 1;

			} else if ( DdN < 0 ) {

				sign = - 1;
				DdN = - DdN;

			} else {

				return null;

			}

			diff.subVectors( this.origin, a );
			var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );

			// b1 < 0, no intersection
			if ( DdQxE2 < 0 ) {

				return null;

			}

			var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );

			// b2 < 0, no intersection
			if ( DdE1xQ < 0 ) {

				return null;

			}

			// b1+b2 > 1, no intersection
			if ( DdQxE2 + DdE1xQ > DdN ) {

				return null;

			}

			// Line intersects triangle, check if ray does.
			var QdN = - sign * diff.dot( normal );

			// t < 0, no intersection
			if ( QdN < 0 ) {

				return null;

			}

			// Ray intersects triangle.
			return this.at( QdN / DdN, optionalTarget );

		};

	}(),

	applyMatrix4: function ( matrix4 ) {

		this.direction.add( this.origin ).applyMatrix4( matrix4 );
		this.origin.applyMatrix4( matrix4 );
		this.direction.sub( this.origin );
		this.direction.normalize();

		return this;

	},

	equals: function ( ray ) {

		return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */

function Euler( x, y, z, order ) {

	this._x = x || 0;
	this._y = y || 0;
	this._z = z || 0;
	this._order = order || Euler.DefaultOrder;

}

Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];

Euler.DefaultOrder = 'XYZ';

Object.defineProperties( Euler.prototype, {

	x: {

		get: function () {

			return this._x;

		},

		set: function ( value ) {

			this._x = value;
			this.onChangeCallback();

		}

	},

	y: {

		get: function () {

			return this._y;

		},

		set: function ( value ) {

			this._y = value;
			this.onChangeCallback();

		}

	},

	z: {

		get: function () {

			return this._z;

		},

		set: function ( value ) {

			this._z = value;
			this.onChangeCallback();

		}

	},

	order: {

		get: function () {

			return this._order;

		},

		set: function ( value ) {

			this._order = value;
			this.onChangeCallback();

		}

	}

} );

Object.assign( Euler.prototype, {

	isEuler: true,

	set: function ( x, y, z, order ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._order = order || this._order;

		this.onChangeCallback();

		return this;

	},

	clone: function () {

		return new this.constructor( this._x, this._y, this._z, this._order );

	},

	copy: function ( euler ) {

		this._x = euler._x;
		this._y = euler._y;
		this._z = euler._z;
		this._order = euler._order;

		this.onChangeCallback();

		return this;

	},

	setFromRotationMatrix: function ( m, order, update ) {

		var clamp = _Math.clamp;

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		var te = m.elements;
		var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];
		var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];
		var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		order = order || this._order;

		if ( order === 'XYZ' ) {

			this._y = Math.asin( clamp( m13, - 1, 1 ) );

			if ( Math.abs( m13 ) < 0.99999 ) {

				this._x = Math.atan2( - m23, m33 );
				this._z = Math.atan2( - m12, m11 );

			} else {

				this._x = Math.atan2( m32, m22 );
				this._z = 0;

			}

		} else if ( order === 'YXZ' ) {

			this._x = Math.asin( - clamp( m23, - 1, 1 ) );

			if ( Math.abs( m23 ) < 0.99999 ) {

				this._y = Math.atan2( m13, m33 );
				this._z = Math.atan2( m21, m22 );

			} else {

				this._y = Math.atan2( - m31, m11 );
				this._z = 0;

			}

		} else if ( order === 'ZXY' ) {

			this._x = Math.asin( clamp( m32, - 1, 1 ) );

			if ( Math.abs( m32 ) < 0.99999 ) {

				this._y = Math.atan2( - m31, m33 );
				this._z = Math.atan2( - m12, m22 );

			} else {

				this._y = 0;
				this._z = Math.atan2( m21, m11 );

			}

		} else if ( order === 'ZYX' ) {

			this._y = Math.asin( - clamp( m31, - 1, 1 ) );

			if ( Math.abs( m31 ) < 0.99999 ) {

				this._x = Math.atan2( m32, m33 );
				this._z = Math.atan2( m21, m11 );

			} else {

				this._x = 0;
				this._z = Math.atan2( - m12, m22 );

			}

		} else if ( order === 'YZX' ) {

			this._z = Math.asin( clamp( m21, - 1, 1 ) );

			if ( Math.abs( m21 ) < 0.99999 ) {

				this._x = Math.atan2( - m23, m22 );
				this._y = Math.atan2( - m31, m11 );

			} else {

				this._x = 0;
				this._y = Math.atan2( m13, m33 );

			}

		} else if ( order === 'XZY' ) {

			this._z = Math.asin( - clamp( m12, - 1, 1 ) );

			if ( Math.abs( m12 ) < 0.99999 ) {

				this._x = Math.atan2( m32, m22 );
				this._y = Math.atan2( m13, m11 );

			} else {

				this._x = Math.atan2( - m23, m33 );
				this._y = 0;

			}

		} else {

			console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );

		}

		this._order = order;

		if ( update !== false ) this.onChangeCallback();

		return this;

	},

	setFromQuaternion: function () {

		var matrix = new Matrix4();

		return function setFromQuaternion( q, order, update ) {

			matrix.makeRotationFromQuaternion( q );

			return this.setFromRotationMatrix( matrix, order, update );

		};

	}(),

	setFromVector3: function ( v, order ) {

		return this.set( v.x, v.y, v.z, order || this._order );

	},

	reorder: function () {

		// WARNING: this discards revolution information -bhouston

		var q = new Quaternion();

		return function reorder( newOrder ) {

			q.setFromEuler( this );

			return this.setFromQuaternion( q, newOrder );

		};

	}(),

	equals: function ( euler ) {

		return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );

	},

	fromArray: function ( array ) {

		this._x = array[ 0 ];
		this._y = array[ 1 ];
		this._z = array[ 2 ];
		if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];

		this.onChangeCallback();

		return this;

	},

	toArray: function ( array, offset ) {

		if ( array === undefined ) array = [];
		if ( offset === undefined ) offset = 0;

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._order;

		return array;

	},

	toVector3: function ( optionalResult ) {

		if ( optionalResult ) {

			return optionalResult.set( this._x, this._y, this._z );

		} else {

			return new Vector3( this._x, this._y, this._z );

		}

	},

	onChange: function ( callback ) {

		this.onChangeCallback = callback;

		return this;

	},

	onChangeCallback: function () {}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Layers() {

	this.mask = 1 | 0;

}

Object.assign( Layers.prototype, {

	set: function ( channel ) {

		this.mask = 1 << channel | 0;

	},

	enable: function ( channel ) {

		this.mask |= 1 << channel | 0;

	},

	toggle: function ( channel ) {

		this.mask ^= 1 << channel | 0;

	},

	disable: function ( channel ) {

		this.mask &= ~ ( 1 << channel | 0 );

	},

	test: function ( layers ) {

		return ( this.mask & layers.mask ) !== 0;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author elephantatwork / www.elephantatwork.ch
 */

var object3DId = 0;

function Object3D() {

	Object.defineProperty( this, 'id', { value: object3DId ++ } );

	this.uuid = _Math.generateUUID();

	this.name = '';
	this.type = 'Object3D';

	this.parent = null;
	this.children = [];

	this.up = Object3D.DefaultUp.clone();

	var position = new Vector3();
	var rotation = new Euler();
	var quaternion = new Quaternion();
	var scale = new Vector3( 1, 1, 1 );

	function onRotationChange() {

		quaternion.setFromEuler( rotation, false );

	}

	function onQuaternionChange() {

		rotation.setFromQuaternion( quaternion, undefined, false );

	}

	rotation.onChange( onRotationChange );
	quaternion.onChange( onQuaternionChange );

	Object.defineProperties( this, {
		position: {
			enumerable: true,
			value: position
		},
		rotation: {
			enumerable: true,
			value: rotation
		},
		quaternion: {
			enumerable: true,
			value: quaternion
		},
		scale: {
			enumerable: true,
			value: scale
		},
		modelViewMatrix: {
			value: new Matrix4()
		},
		normalMatrix: {
			value: new Matrix3()
		}
	} );

	this.matrix = new Matrix4();
	this.matrixWorld = new Matrix4();

	this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;
	this.matrixWorldNeedsUpdate = false;

	this.layers = new Layers();
	this.visible = true;

	this.castShadow = false;
	this.receiveShadow = false;

	this.frustumCulled = true;
	this.renderOrder = 0;

	this.userData = {};

	this.onBeforeRender = function () {};
	this.onAfterRender = function () {};

}

Object3D.DefaultUp = new Vector3( 0, 1, 0 );
Object3D.DefaultMatrixAutoUpdate = true;

Object.assign( Object3D.prototype, EventDispatcher.prototype, {

	isObject3D: true,

	applyMatrix: function ( matrix ) {

		this.matrix.multiplyMatrices( matrix, this.matrix );

		this.matrix.decompose( this.position, this.quaternion, this.scale );

	},

	setRotationFromAxisAngle: function ( axis, angle ) {

		// assumes axis is normalized

		this.quaternion.setFromAxisAngle( axis, angle );

	},

	setRotationFromEuler: function ( euler ) {

		this.quaternion.setFromEuler( euler, true );

	},

	setRotationFromMatrix: function ( m ) {

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		this.quaternion.setFromRotationMatrix( m );

	},

	setRotationFromQuaternion: function ( q ) {

		// assumes q is normalized

		this.quaternion.copy( q );

	},

	rotateOnAxis: function () {

		// rotate object on axis in object space
		// axis is assumed to be normalized

		var q1 = new Quaternion();

		return function rotateOnAxis( axis, angle ) {

			q1.setFromAxisAngle( axis, angle );

			this.quaternion.multiply( q1 );

			return this;

		};

	}(),

	rotateX: function () {

		var v1 = new Vector3( 1, 0, 0 );

		return function rotateX( angle ) {

			return this.rotateOnAxis( v1, angle );

		};

	}(),

	rotateY: function () {

		var v1 = new Vector3( 0, 1, 0 );

		return function rotateY( angle ) {

			return this.rotateOnAxis( v1, angle );

		};

	}(),

	rotateZ: function () {

		var v1 = new Vector3( 0, 0, 1 );

		return function rotateZ( angle ) {

			return this.rotateOnAxis( v1, angle );

		};

	}(),

	translateOnAxis: function () {

		// translate object by distance along axis in object space
		// axis is assumed to be normalized

		var v1 = new Vector3();

		return function translateOnAxis( axis, distance ) {

			v1.copy( axis ).applyQuaternion( this.quaternion );

			this.position.add( v1.multiplyScalar( distance ) );

			return this;

		};

	}(),

	translateX: function () {

		var v1 = new Vector3( 1, 0, 0 );

		return function translateX( distance ) {

			return this.translateOnAxis( v1, distance );

		};

	}(),

	translateY: function () {

		var v1 = new Vector3( 0, 1, 0 );

		return function translateY( distance ) {

			return this.translateOnAxis( v1, distance );

		};

	}(),

	translateZ: function () {

		var v1 = new Vector3( 0, 0, 1 );

		return function translateZ( distance ) {

			return this.translateOnAxis( v1, distance );

		};

	}(),

	localToWorld: function ( vector ) {

		return vector.applyMatrix4( this.matrixWorld );

	},

	worldToLocal: function () {

		var m1 = new Matrix4();

		return function worldToLocal( vector ) {

			return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );

		};

	}(),

	lookAt: function () {

		// This routine does not support objects with rotated and/or translated parent(s)

		var m1 = new Matrix4();

		return function lookAt( vector ) {

			if ( this.isCamera ) {

				m1.lookAt( this.position, vector, this.up );

			} else {

				m1.lookAt( vector, this.position, this.up );

			}

			this.quaternion.setFromRotationMatrix( m1 );

		};

	}(),

	add: function ( object ) {

		if ( arguments.length > 1 ) {

			for ( var i = 0; i < arguments.length; i ++ ) {

				this.add( arguments[ i ] );

			}

			return this;

		}

		if ( object === this ) {

			console.error( "THREE.Object3D.add: object can't be added as a child of itself.", object );
			return this;

		}

		if ( ( object && object.isObject3D ) ) {

			if ( object.parent !== null ) {

				object.parent.remove( object );

			}

			object.parent = this;
			object.dispatchEvent( { type: 'added' } );

			this.children.push( object );

		} else {

			console.error( "THREE.Object3D.add: object not an instance of THREE.Object3D.", object );

		}

		return this;

	},

	remove: function ( object ) {

		if ( arguments.length > 1 ) {

			for ( var i = 0; i < arguments.length; i ++ ) {

				this.remove( arguments[ i ] );

			}

		}

		var index = this.children.indexOf( object );

		if ( index !== - 1 ) {

			object.parent = null;

			object.dispatchEvent( { type: 'removed' } );

			this.children.splice( index, 1 );

		}

	},

	getObjectById: function ( id ) {

		return this.getObjectByProperty( 'id', id );

	},

	getObjectByName: function ( name ) {

		return this.getObjectByProperty( 'name', name );

	},

	getObjectByProperty: function ( name, value ) {

		if ( this[ name ] === value ) return this;

		for ( var i = 0, l = this.children.length; i < l; i ++ ) {

			var child = this.children[ i ];
			var object = child.getObjectByProperty( name, value );

			if ( object !== undefined ) {

				return object;

			}

		}

		return undefined;

	},

	getWorldPosition: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();

		this.updateMatrixWorld( true );

		return result.setFromMatrixPosition( this.matrixWorld );

	},

	getWorldQuaternion: function () {

		var position = new Vector3();
		var scale = new Vector3();

		return function getWorldQuaternion( optionalTarget ) {

			var result = optionalTarget || new Quaternion();

			this.updateMatrixWorld( true );

			this.matrixWorld.decompose( position, result, scale );

			return result;

		};

	}(),

	getWorldRotation: function () {

		var quaternion = new Quaternion();

		return function getWorldRotation( optionalTarget ) {

			var result = optionalTarget || new Euler();

			this.getWorldQuaternion( quaternion );

			return result.setFromQuaternion( quaternion, this.rotation.order, false );

		};

	}(),

	getWorldScale: function () {

		var position = new Vector3();
		var quaternion = new Quaternion();

		return function getWorldScale( optionalTarget ) {

			var result = optionalTarget || new Vector3();

			this.updateMatrixWorld( true );

			this.matrixWorld.decompose( position, quaternion, result );

			return result;

		};

	}(),

	getWorldDirection: function () {

		var quaternion = new Quaternion();

		return function getWorldDirection( optionalTarget ) {

			var result = optionalTarget || new Vector3();

			this.getWorldQuaternion( quaternion );

			return result.set( 0, 0, 1 ).applyQuaternion( quaternion );

		};

	}(),

	raycast: function () {},

	traverse: function ( callback ) {

		callback( this );

		var children = this.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverse( callback );

		}

	},

	traverseVisible: function ( callback ) {

		if ( this.visible === false ) return;

		callback( this );

		var children = this.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverseVisible( callback );

		}

	},

	traverseAncestors: function ( callback ) {

		var parent = this.parent;

		if ( parent !== null ) {

			callback( parent );

			parent.traverseAncestors( callback );

		}

	},

	updateMatrix: function () {

		this.matrix.compose( this.position, this.quaternion, this.scale );

		this.matrixWorldNeedsUpdate = true;

	},

	updateMatrixWorld: function ( force ) {

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		if ( this.matrixWorldNeedsUpdate || force ) {

			if ( this.parent === null ) {

				this.matrixWorld.copy( this.matrix );

			} else {

				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			}

			this.matrixWorldNeedsUpdate = false;

			force = true;

		}

		// update children

		var children = this.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].updateMatrixWorld( force );

		}

	},

	toJSON: function ( meta ) {

		// meta is '' when called from JSON.stringify
		var isRootObject = ( meta === undefined || meta === '' );

		var output = {};

		// meta is a hash used to collect geometries, materials.
		// not providing it implies that this is the root object
		// being serialized.
		if ( isRootObject ) {

			// initialize meta obj
			meta = {
				geometries: {},
				materials: {},
				textures: {},
				images: {}
			};

			output.metadata = {
				version: 4.4,
				type: 'Object',
				generator: 'Object3D.toJSON'
			};

		}

		// standard Object3D serialization

		var object = {};

		object.uuid = this.uuid;
		object.type = this.type;

		if ( this.name !== '' ) object.name = this.name;
		if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;
		if ( this.castShadow === true ) object.castShadow = true;
		if ( this.receiveShadow === true ) object.receiveShadow = true;
		if ( this.visible === false ) object.visible = false;

		object.matrix = this.matrix.toArray();

		//

		if ( this.geometry !== undefined ) {

			if ( meta.geometries[ this.geometry.uuid ] === undefined ) {

				meta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );

			}

			object.geometry = this.geometry.uuid;

		}

		if ( this.material !== undefined ) {

			if ( meta.materials[ this.material.uuid ] === undefined ) {

				meta.materials[ this.material.uuid ] = this.material.toJSON( meta );

			}

			object.material = this.material.uuid;

		}

		//

		if ( this.children.length > 0 ) {

			object.children = [];

			for ( var i = 0; i < this.children.length; i ++ ) {

				object.children.push( this.children[ i ].toJSON( meta ).object );

			}

		}

		if ( isRootObject ) {

			var geometries = extractFromCache( meta.geometries );
			var materials = extractFromCache( meta.materials );
			var textures = extractFromCache( meta.textures );
			var images = extractFromCache( meta.images );

			if ( geometries.length > 0 ) output.geometries = geometries;
			if ( materials.length > 0 ) output.materials = materials;
			if ( textures.length > 0 ) output.textures = textures;
			if ( images.length > 0 ) output.images = images;

		}

		output.object = object;

		return output;

		// extract data from the cache hash
		// remove metadata on each item
		// and return as array
		function extractFromCache( cache ) {

			var values = [];
			for ( var key in cache ) {

				var data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}
			return values;

		}

	},

	clone: function ( recursive ) {

		return new this.constructor().copy( this, recursive );

	},

	copy: function ( source, recursive ) {

		if ( recursive === undefined ) recursive = true;

		this.name = source.name;

		this.up.copy( source.up );

		this.position.copy( source.position );
		this.quaternion.copy( source.quaternion );
		this.scale.copy( source.scale );

		this.matrix.copy( source.matrix );
		this.matrixWorld.copy( source.matrixWorld );

		this.matrixAutoUpdate = source.matrixAutoUpdate;
		this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;

		this.layers.mask = source.layers.mask;
		this.visible = source.visible;

		this.castShadow = source.castShadow;
		this.receiveShadow = source.receiveShadow;

		this.frustumCulled = source.frustumCulled;
		this.renderOrder = source.renderOrder;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		if ( recursive === true ) {

			for ( var i = 0; i < source.children.length; i ++ ) {

				var child = source.children[ i ];
				this.add( child.clone() );

			}

		}

		return this;

	}

} );

/**
 * @author bhouston / http://clara.io
 */

function Line3( start, end ) {

	this.start = ( start !== undefined ) ? start : new Vector3();
	this.end = ( end !== undefined ) ? end : new Vector3();

}

Object.assign( Line3.prototype, {

	set: function ( start, end ) {

		this.start.copy( start );
		this.end.copy( end );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( line ) {

		this.start.copy( line.start );
		this.end.copy( line.end );

		return this;

	},

	getCenter: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );

	},

	delta: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return result.subVectors( this.end, this.start );

	},

	distanceSq: function () {

		return this.start.distanceToSquared( this.end );

	},

	distance: function () {

		return this.start.distanceTo( this.end );

	},

	at: function ( t, optionalTarget ) {

		var result = optionalTarget || new Vector3();

		return this.delta( result ).multiplyScalar( t ).add( this.start );

	},

	closestPointToPointParameter: function () {

		var startP = new Vector3();
		var startEnd = new Vector3();

		return function closestPointToPointParameter( point, clampToLine ) {

			startP.subVectors( point, this.start );
			startEnd.subVectors( this.end, this.start );

			var startEnd2 = startEnd.dot( startEnd );
			var startEnd_startP = startEnd.dot( startP );

			var t = startEnd_startP / startEnd2;

			if ( clampToLine ) {

				t = _Math.clamp( t, 0, 1 );

			}

			return t;

		};

	}(),

	closestPointToPoint: function ( point, clampToLine, optionalTarget ) {

		var t = this.closestPointToPointParameter( point, clampToLine );

		var result = optionalTarget || new Vector3();

		return this.delta( result ).multiplyScalar( t ).add( this.start );

	},

	applyMatrix4: function ( matrix ) {

		this.start.applyMatrix4( matrix );
		this.end.applyMatrix4( matrix );

		return this;

	},

	equals: function ( line ) {

		return line.start.equals( this.start ) && line.end.equals( this.end );

	}

} );

/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */

function Triangle( a, b, c ) {

	this.a = ( a !== undefined ) ? a : new Vector3();
	this.b = ( b !== undefined ) ? b : new Vector3();
	this.c = ( c !== undefined ) ? c : new Vector3();

}

Object.assign( Triangle, {

	normal: function () {

		var v0 = new Vector3();

		return function normal( a, b, c, optionalTarget ) {

			var result = optionalTarget || new Vector3();

			result.subVectors( c, b );
			v0.subVectors( a, b );
			result.cross( v0 );

			var resultLengthSq = result.lengthSq();
			if ( resultLengthSq > 0 ) {

				return result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );

			}

			return result.set( 0, 0, 0 );

		};

	}(),

	// static/instance method to calculate barycentric coordinates
	// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
	barycoordFromPoint: function () {

		var v0 = new Vector3();
		var v1 = new Vector3();
		var v2 = new Vector3();

		return function barycoordFromPoint( point, a, b, c, optionalTarget ) {

			v0.subVectors( c, a );
			v1.subVectors( b, a );
			v2.subVectors( point, a );

			var dot00 = v0.dot( v0 );
			var dot01 = v0.dot( v1 );
			var dot02 = v0.dot( v2 );
			var dot11 = v1.dot( v1 );
			var dot12 = v1.dot( v2 );

			var denom = ( dot00 * dot11 - dot01 * dot01 );

			var result = optionalTarget || new Vector3();

			// collinear or singular triangle
			if ( denom === 0 ) {

				// arbitrary location outside of triangle?
				// not sure if this is the best idea, maybe should be returning undefined
				return result.set( - 2, - 1, - 1 );

			}

			var invDenom = 1 / denom;
			var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
			var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;

			// barycentric coordinates must always sum to 1
			return result.set( 1 - u - v, v, u );

		};

	}(),

	containsPoint: function () {

		var v1 = new Vector3();

		return function containsPoint( point, a, b, c ) {

			var result = Triangle.barycoordFromPoint( point, a, b, c, v1 );

			return ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );

		};

	}()

} );

Object.assign( Triangle.prototype, {

	set: function ( a, b, c ) {

		this.a.copy( a );
		this.b.copy( b );
		this.c.copy( c );

		return this;

	},

	setFromPointsAndIndices: function ( points, i0, i1, i2 ) {

		this.a.copy( points[ i0 ] );
		this.b.copy( points[ i1 ] );
		this.c.copy( points[ i2 ] );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( triangle ) {

		this.a.copy( triangle.a );
		this.b.copy( triangle.b );
		this.c.copy( triangle.c );

		return this;

	},

	area: function () {

		var v0 = new Vector3();
		var v1 = new Vector3();

		return function area() {

			v0.subVectors( this.c, this.b );
			v1.subVectors( this.a, this.b );

			return v0.cross( v1 ).length() * 0.5;

		};

	}(),

	midpoint: function ( optionalTarget ) {

		var result = optionalTarget || new Vector3();
		return result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );

	},

	normal: function ( optionalTarget ) {

		return Triangle.normal( this.a, this.b, this.c, optionalTarget );

	},

	plane: function ( optionalTarget ) {

		var result = optionalTarget || new Plane();

		return result.setFromCoplanarPoints( this.a, this.b, this.c );

	},

	barycoordFromPoint: function ( point, optionalTarget ) {

		return Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );

	},

	containsPoint: function ( point ) {

		return Triangle.containsPoint( point, this.a, this.b, this.c );

	},

	closestPointToPoint: function () {

		var plane = new Plane();
		var edgeList = [ new Line3(), new Line3(), new Line3() ];
		var projectedPoint = new Vector3();
		var closestPoint = new Vector3();

		return function closestPointToPoint( point, optionalTarget ) {

			var result = optionalTarget || new Vector3();
			var minDistance = Infinity;

			// project the point onto the plane of the triangle

			plane.setFromCoplanarPoints( this.a, this.b, this.c );
			plane.projectPoint( point, projectedPoint );

			// check if the projection lies within the triangle

			if( this.containsPoint( projectedPoint ) === true ) {

				// if so, this is the closest point

				result.copy( projectedPoint );

			} else {

				// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices

				edgeList[ 0 ].set( this.a, this.b );
				edgeList[ 1 ].set( this.b, this.c );
				edgeList[ 2 ].set( this.c, this.a );

				for( var i = 0; i < edgeList.length; i ++ ) {

					edgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );

					var distance = projectedPoint.distanceToSquared( closestPoint );

					if( distance < minDistance ) {

						minDistance = distance;

						result.copy( closestPoint );

					}

				}

			}

			return result;

		};

	}(),

	equals: function ( triangle ) {

		return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function Face3( a, b, c, normal, color, materialIndex ) {

	this.a = a;
	this.b = b;
	this.c = c;

	this.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();
	this.vertexNormals = Array.isArray( normal ) ? normal : [];

	this.color = ( color && color.isColor ) ? color : new Color();
	this.vertexColors = Array.isArray( color ) ? color : [];

	this.materialIndex = materialIndex !== undefined ? materialIndex : 0;

}

Object.assign( Face3.prototype, {

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.a = source.a;
		this.b = source.b;
		this.c = source.c;

		this.normal.copy( source.normal );
		this.color.copy( source.color );

		this.materialIndex = source.materialIndex;

		for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {

			this.vertexNormals[ i ] = source.vertexNormals[ i ].clone();

		}

		for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {

			this.vertexColors[ i ] = source.vertexColors[ i ].clone();

		}

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  shading: THREE.SmoothShading,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>
 * }
 */

function MeshBasicMaterial( parameters ) {

	Material.call( this );

	this.type = 'MeshBasicMaterial';

	this.color = new Color( 0xffffff ); // emissive

	this.map = null;

	this.lightMap = null;
	this.lightMapIntensity = 1.0;

	this.aoMap = null;
	this.aoMapIntensity = 1.0;

	this.specularMap = null;

	this.alphaMap = null;

	this.envMap = null;
	this.combine = MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.skinning = false;
	this.morphTargets = false;

	this.lights = false;

	this.setValues( parameters );

}

MeshBasicMaterial.prototype = Object.create( Material.prototype );
MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;

MeshBasicMaterial.prototype.isMeshBasicMaterial = true;

MeshBasicMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );

	this.map = source.map;

	this.lightMap = source.lightMap;
	this.lightMapIntensity = source.lightMapIntensity;

	this.aoMap = source.aoMap;
	this.aoMapIntensity = source.aoMapIntensity;

	this.specularMap = source.specularMap;

	this.alphaMap = source.alphaMap;

	this.envMap = source.envMap;
	this.combine = source.combine;
	this.reflectivity = source.reflectivity;
	this.refractionRatio = source.refractionRatio;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;
	this.wireframeLinecap = source.wireframeLinecap;
	this.wireframeLinejoin = source.wireframeLinejoin;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;

	return this;

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

function BufferAttribute( array, itemSize, normalized ) {

	if ( Array.isArray( array ) ) {

		throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

	}

	this.uuid = _Math.generateUUID();

	this.array = array;
	this.itemSize = itemSize;
	this.count = array !== undefined ? array.length / itemSize : 0;
	this.normalized = normalized === true;

	this.dynamic = false;
	this.updateRange = { offset: 0, count: - 1 };

	this.onUploadCallback = function () {};

	this.version = 0;

}

Object.defineProperty( BufferAttribute.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( BufferAttribute.prototype, {

	isBufferAttribute: true,

	setArray: function ( array ) {

		if ( Array.isArray( array ) ) {

			throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

		}

		this.count = array !== undefined ? array.length / this.itemSize : 0;
		this.array = array;

	},

	setDynamic: function ( value ) {

		this.dynamic = value;

		return this;

	},

	copy: function ( source ) {

		this.array = new source.array.constructor( source.array );
		this.itemSize = source.itemSize;
		this.count = source.count;
		this.normalized = source.normalized;

		this.dynamic = source.dynamic;

		return this;

	},

	copyAt: function ( index1, attribute, index2 ) {

		index1 *= this.itemSize;
		index2 *= attribute.itemSize;

		for ( var i = 0, l = this.itemSize; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	},

	copyArray: function ( array ) {

		this.array.set( array );

		return this;

	},

	copyColorsArray: function ( colors ) {

		var array = this.array, offset = 0;

		for ( var i = 0, l = colors.length; i < l; i ++ ) {

			var color = colors[ i ];

			if ( color === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );
				color = new Color();

			}

			array[ offset ++ ] = color.r;
			array[ offset ++ ] = color.g;
			array[ offset ++ ] = color.b;

		}

		return this;

	},

	copyIndicesArray: function ( indices ) {

		var array = this.array, offset = 0;

		for ( var i = 0, l = indices.length; i < l; i ++ ) {

			var index = indices[ i ];

			array[ offset ++ ] = index.a;
			array[ offset ++ ] = index.b;
			array[ offset ++ ] = index.c;

		}

		return this;

	},

	copyVector2sArray: function ( vectors ) {

		var array = this.array, offset = 0;

		for ( var i = 0, l = vectors.length; i < l; i ++ ) {

			var vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );
				vector = new Vector2();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;

		}

		return this;

	},

	copyVector3sArray: function ( vectors ) {

		var array = this.array, offset = 0;

		for ( var i = 0, l = vectors.length; i < l; i ++ ) {

			var vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );
				vector = new Vector3();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;

		}

		return this;

	},

	copyVector4sArray: function ( vectors ) {

		var array = this.array, offset = 0;

		for ( var i = 0, l = vectors.length; i < l; i ++ ) {

			var vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );
				vector = new Vector4();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;
			array[ offset ++ ] = vector.w;

		}

		return this;

	},

	set: function ( value, offset ) {

		if ( offset === undefined ) offset = 0;

		this.array.set( value, offset );

		return this;

	},

	getX: function ( index ) {

		return this.array[ index * this.itemSize ];

	},

	setX: function ( index, x ) {

		this.array[ index * this.itemSize ] = x;

		return this;

	},

	getY: function ( index ) {

		return this.array[ index * this.itemSize + 1 ];

	},

	setY: function ( index, y ) {

		this.array[ index * this.itemSize + 1 ] = y;

		return this;

	},

	getZ: function ( index ) {

		return this.array[ index * this.itemSize + 2 ];

	},

	setZ: function ( index, z ) {

		this.array[ index * this.itemSize + 2 ] = z;

		return this;

	},

	getW: function ( index ) {

		return this.array[ index * this.itemSize + 3 ];

	},

	setW: function ( index, w ) {

		this.array[ index * this.itemSize + 3 ] = w;

		return this;

	},

	setXY: function ( index, x, y ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;

		return this;

	},

	setXYZ: function ( index, x, y, z ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;

		return this;

	},

	setXYZW: function ( index, x, y, z, w ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;
		this.array[ index + 3 ] = w;

		return this;

	},

	onUpload: function ( callback ) {

		this.onUploadCallback = callback;

		return this;

	},

	clone: function () {

		return new this.constructor( this.array, this.itemSize ).copy( this );

	}

} );

//

function Int8BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Int8Array( array ), itemSize );

}

Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;


function Uint8BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Uint8Array( array ), itemSize );

}

Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;


function Uint8ClampedBufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );

}

Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;


function Int16BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Int16Array( array ), itemSize );

}

Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;


function Uint16BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Uint16Array( array ), itemSize );

}

Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;


function Int32BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Int32Array( array ), itemSize );

}

Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;


function Uint32BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Uint32Array( array ), itemSize );

}

Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;


function Float32BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Float32Array( array ), itemSize );

}

Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;


function Float64BufferAttribute( array, itemSize ) {

	BufferAttribute.call( this, new Float64Array( array ), itemSize );

}

Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function DirectGeometry() {

	this.indices = [];
	this.vertices = [];
	this.normals = [];
	this.colors = [];
	this.uvs = [];
	this.uvs2 = [];

	this.groups = [];

	this.morphTargets = {};

	this.skinWeights = [];
	this.skinIndices = [];

	// this.lineDistances = [];

	this.boundingBox = null;
	this.boundingSphere = null;

	// update flags

	this.verticesNeedUpdate = false;
	this.normalsNeedUpdate = false;
	this.colorsNeedUpdate = false;
	this.uvsNeedUpdate = false;
	this.groupsNeedUpdate = false;

}

Object.assign( DirectGeometry.prototype, {

	computeGroups: function ( geometry ) {

		var group;
		var groups = [];
		var materialIndex = undefined;

		var faces = geometry.faces;

		for ( var i = 0; i < faces.length; i ++ ) {

			var face = faces[ i ];

			// materials

			if ( face.materialIndex !== materialIndex ) {

				materialIndex = face.materialIndex;

				if ( group !== undefined ) {

					group.count = ( i * 3 ) - group.start;
					groups.push( group );

				}

				group = {
					start: i * 3,
					materialIndex: materialIndex
				};

			}

		}

		if ( group !== undefined ) {

			group.count = ( i * 3 ) - group.start;
			groups.push( group );

		}

		this.groups = groups;

	},

	fromGeometry: function ( geometry ) {

		var faces = geometry.faces;
		var vertices = geometry.vertices;
		var faceVertexUvs = geometry.faceVertexUvs;

		var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;
		var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;

		// morphs

		var morphTargets = geometry.morphTargets;
		var morphTargetsLength = morphTargets.length;

		var morphTargetsPosition;

		if ( morphTargetsLength > 0 ) {

			morphTargetsPosition = [];

			for ( var i = 0; i < morphTargetsLength; i ++ ) {

				morphTargetsPosition[ i ] = [];

			}

			this.morphTargets.position = morphTargetsPosition;

		}

		var morphNormals = geometry.morphNormals;
		var morphNormalsLength = morphNormals.length;

		var morphTargetsNormal;

		if ( morphNormalsLength > 0 ) {

			morphTargetsNormal = [];

			for ( var i = 0; i < morphNormalsLength; i ++ ) {

				morphTargetsNormal[ i ] = [];

			}

			this.morphTargets.normal = morphTargetsNormal;

		}

		// skins

		var skinIndices = geometry.skinIndices;
		var skinWeights = geometry.skinWeights;

		var hasSkinIndices = skinIndices.length === vertices.length;
		var hasSkinWeights = skinWeights.length === vertices.length;

		//

		for ( var i = 0; i < faces.length; i ++ ) {

			var face = faces[ i ];

			this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );

			var vertexNormals = face.vertexNormals;

			if ( vertexNormals.length === 3 ) {

				this.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );

			} else {

				var normal = face.normal;

				this.normals.push( normal, normal, normal );

			}

			var vertexColors = face.vertexColors;

			if ( vertexColors.length === 3 ) {

				this.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );

			} else {

				var color = face.color;

				this.colors.push( color, color, color );

			}

			if ( hasFaceVertexUv === true ) {

				var vertexUvs = faceVertexUvs[ 0 ][ i ];

				if ( vertexUvs !== undefined ) {

					this.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );

				} else {

					console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );

					this.uvs.push( new Vector2(), new Vector2(), new Vector2() );

				}

			}

			if ( hasFaceVertexUv2 === true ) {

				var vertexUvs = faceVertexUvs[ 1 ][ i ];

				if ( vertexUvs !== undefined ) {

					this.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );

				} else {

					console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );

					this.uvs2.push( new Vector2(), new Vector2(), new Vector2() );

				}

			}

			// morphs

			for ( var j = 0; j < morphTargetsLength; j ++ ) {

				var morphTarget = morphTargets[ j ].vertices;

				morphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );

			}

			for ( var j = 0; j < morphNormalsLength; j ++ ) {

				var morphNormal = morphNormals[ j ].vertexNormals[ i ];

				morphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );

			}

			// skins

			if ( hasSkinIndices ) {

				this.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );

			}

			if ( hasSkinWeights ) {

				this.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );

			}

		}

		this.computeGroups( geometry );

		this.verticesNeedUpdate = geometry.verticesNeedUpdate;
		this.normalsNeedUpdate = geometry.normalsNeedUpdate;
		this.colorsNeedUpdate = geometry.colorsNeedUpdate;
		this.uvsNeedUpdate = geometry.uvsNeedUpdate;
		this.groupsNeedUpdate = geometry.groupsNeedUpdate;

		return this;

	}

} );

function arrayMax( array ) {

	if ( array.length === 0 ) return - Infinity;

	var max = array[ 0 ];

	for ( var i = 1, l = array.length; i < l; ++ i ) {

		if ( array[ i ] > max ) max = array[ i ];

	}

	return max;

}

/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author bhouston / http://clara.io
 */

var count = 0;
function GeometryIdCount() { return count++; }

function Geometry() {

	Object.defineProperty( this, 'id', { value: GeometryIdCount() } );

	this.uuid = _Math.generateUUID();

	this.name = '';
	this.type = 'Geometry';

	this.vertices = [];
	this.colors = [];
	this.faces = [];
	this.faceVertexUvs = [[]];

	this.morphTargets = [];
	this.morphNormals = [];

	this.skinWeights = [];
	this.skinIndices = [];

	this.lineDistances = [];

	this.boundingBox = null;
	this.boundingSphere = null;

	// update flags

	this.elementsNeedUpdate = false;
	this.verticesNeedUpdate = false;
	this.uvsNeedUpdate = false;
	this.normalsNeedUpdate = false;
	this.colorsNeedUpdate = false;
	this.lineDistancesNeedUpdate = false;
	this.groupsNeedUpdate = false;

}

Object.assign( Geometry.prototype, EventDispatcher.prototype, {

	isGeometry: true,

	applyMatrix: function ( matrix ) {

		var normalMatrix = new Matrix3().getNormalMatrix( matrix );

		for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {

			var vertex = this.vertices[ i ];
			vertex.applyMatrix4( matrix );

		}

		for ( var i = 0, il = this.faces.length; i < il; i ++ ) {

			var face = this.faces[ i ];
			face.normal.applyMatrix3( normalMatrix ).normalize();

			for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {

				face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();

			}

		}

		if ( this.boundingBox !== null ) {

			this.computeBoundingBox();

		}

		if ( this.boundingSphere !== null ) {

			this.computeBoundingSphere();

		}

		this.verticesNeedUpdate = true;
		this.normalsNeedUpdate = true;

		return this;

	},

	rotateX: function () {

		// rotate geometry around world x-axis

		var m1 = new Matrix4();

		return function rotateX( angle ) {

			m1.makeRotationX( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	rotateY: function () {

		// rotate geometry around world y-axis

		var m1 = new Matrix4();

		return function rotateY( angle ) {

			m1.makeRotationY( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	rotateZ: function () {

		// rotate geometry around world z-axis

		var m1 = new Matrix4();

		return function rotateZ( angle ) {

			m1.makeRotationZ( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	translate: function () {

		// translate geometry

		var m1 = new Matrix4();

		return function translate( x, y, z ) {

			m1.makeTranslation( x, y, z );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	scale: function () {

		// scale geometry

		var m1 = new Matrix4();

		return function scale( x, y, z ) {

			m1.makeScale( x, y, z );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	lookAt: function () {

		var obj = new Object3D();

		return function lookAt( vector ) {

			obj.lookAt( vector );

			obj.updateMatrix();

			this.applyMatrix( obj.matrix );

		};

	}(),

	fromBufferGeometry: function ( geometry ) {

		var scope = this;

		var indices = geometry.index !== null ? geometry.index.array : undefined;
		var attributes = geometry.attributes;

		var positions = attributes.position.array;
		var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;
		var colors = attributes.color !== undefined ? attributes.color.array : undefined;
		var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;
		var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;

		if ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];

		var tempNormals = [];
		var tempUVs = [];
		var tempUVs2 = [];

		for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {

			scope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );

			if ( normals !== undefined ) {

				tempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );

			}

			if ( colors !== undefined ) {

				scope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );

			}

			if ( uvs !== undefined ) {

				tempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );

			}

			if ( uvs2 !== undefined ) {

				tempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );

			}

		}

		function addFace( a, b, c, materialIndex ) {

			var vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];
			var vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];

			var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );

			scope.faces.push( face );

			if ( uvs !== undefined ) {

				scope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );

			}

			if ( uvs2 !== undefined ) {

				scope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );

			}

		}

		if ( indices !== undefined ) {

			var groups = geometry.groups;

			if ( groups.length > 0 ) {

				for ( var i = 0; i < groups.length; i ++ ) {

					var group = groups[ i ];

					var start = group.start;
					var count = group.count;

					for ( var j = start, jl = start + count; j < jl; j += 3 ) {

						addFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );

					}

				}

			} else {

				for ( var i = 0; i < indices.length; i += 3 ) {

					addFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );

				}

			}

		} else {

			for ( var i = 0; i < positions.length / 3; i += 3 ) {

				addFace( i, i + 1, i + 2 );

			}

		}

		this.computeFaceNormals();

		if ( geometry.boundingBox !== null ) {

			this.boundingBox = geometry.boundingBox.clone();

		}

		if ( geometry.boundingSphere !== null ) {

			this.boundingSphere = geometry.boundingSphere.clone();

		}

		return this;

	},

	center: function () {

		this.computeBoundingBox();

		var offset = this.boundingBox.getCenter().negate();

		this.translate( offset.x, offset.y, offset.z );

		return offset;

	},

	normalize: function () {

		this.computeBoundingSphere();

		var center = this.boundingSphere.center;
		var radius = this.boundingSphere.radius;

		var s = radius === 0 ? 1 : 1.0 / radius;

		var matrix = new Matrix4();
		matrix.set(
			s, 0, 0, - s * center.x,
			0, s, 0, - s * center.y,
			0, 0, s, - s * center.z,
			0, 0, 0, 1
		);

		this.applyMatrix( matrix );

		return this;

	},

	computeFaceNormals: function () {

		var cb = new Vector3(), ab = new Vector3();

		for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {

			var face = this.faces[ f ];

			var vA = this.vertices[ face.a ];
			var vB = this.vertices[ face.b ];
			var vC = this.vertices[ face.c ];

			cb.subVectors( vC, vB );
			ab.subVectors( vA, vB );
			cb.cross( ab );

			cb.normalize();

			face.normal.copy( cb );

		}

	},

	computeVertexNormals: function ( areaWeighted ) {

		if ( areaWeighted === undefined ) areaWeighted = true;

		var v, vl, f, fl, face, vertices;

		vertices = new Array( this.vertices.length );

		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

			vertices[ v ] = new Vector3();

		}

		if ( areaWeighted ) {

			// vertex normals weighted by triangle areas
			// http://www.iquilezles.org/www/articles/normals/normals.htm

			var vA, vB, vC;
			var cb = new Vector3(), ab = new Vector3();

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				vA = this.vertices[ face.a ];
				vB = this.vertices[ face.b ];
				vC = this.vertices[ face.c ];

				cb.subVectors( vC, vB );
				ab.subVectors( vA, vB );
				cb.cross( ab );

				vertices[ face.a ].add( cb );
				vertices[ face.b ].add( cb );
				vertices[ face.c ].add( cb );

			}

		} else {

			this.computeFaceNormals();

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				vertices[ face.a ].add( face.normal );
				vertices[ face.b ].add( face.normal );
				vertices[ face.c ].add( face.normal );

			}

		}

		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

			vertices[ v ].normalize();

		}

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			var vertexNormals = face.vertexNormals;

			if ( vertexNormals.length === 3 ) {

				vertexNormals[ 0 ].copy( vertices[ face.a ] );
				vertexNormals[ 1 ].copy( vertices[ face.b ] );
				vertexNormals[ 2 ].copy( vertices[ face.c ] );

			} else {

				vertexNormals[ 0 ] = vertices[ face.a ].clone();
				vertexNormals[ 1 ] = vertices[ face.b ].clone();
				vertexNormals[ 2 ] = vertices[ face.c ].clone();

			}

		}

		if ( this.faces.length > 0 ) {

			this.normalsNeedUpdate = true;

		}

	},

	computeFlatVertexNormals: function () {

		var f, fl, face;

		this.computeFaceNormals();

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			var vertexNormals = face.vertexNormals;

			if ( vertexNormals.length === 3 ) {

				vertexNormals[ 0 ].copy( face.normal );
				vertexNormals[ 1 ].copy( face.normal );
				vertexNormals[ 2 ].copy( face.normal );

			} else {

				vertexNormals[ 0 ] = face.normal.clone();
				vertexNormals[ 1 ] = face.normal.clone();
				vertexNormals[ 2 ] = face.normal.clone();

			}

		}

		if ( this.faces.length > 0 ) {

			this.normalsNeedUpdate = true;

		}

	},

	computeMorphNormals: function () {

		var i, il, f, fl, face;

		// save original normals
		// - create temp variables on first access
		//   otherwise just copy (for faster repeated calls)

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			if ( ! face.__originalFaceNormal ) {

				face.__originalFaceNormal = face.normal.clone();

			} else {

				face.__originalFaceNormal.copy( face.normal );

			}

			if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];

			for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {

				if ( ! face.__originalVertexNormals[ i ] ) {

					face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();

				} else {

					face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );

				}

			}

		}

		// use temp geometry to compute face and vertex normals for each morph

		var tmpGeo = new Geometry();
		tmpGeo.faces = this.faces;

		for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {

			// create on first access

			if ( ! this.morphNormals[ i ] ) {

				this.morphNormals[ i ] = {};
				this.morphNormals[ i ].faceNormals = [];
				this.morphNormals[ i ].vertexNormals = [];

				var dstNormalsFace = this.morphNormals[ i ].faceNormals;
				var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;

				var faceNormal, vertexNormals;

				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

					faceNormal = new Vector3();
					vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };

					dstNormalsFace.push( faceNormal );
					dstNormalsVertex.push( vertexNormals );

				}

			}

			var morphNormals = this.morphNormals[ i ];

			// set vertices to morph target

			tmpGeo.vertices = this.morphTargets[ i ].vertices;

			// compute morph normals

			tmpGeo.computeFaceNormals();
			tmpGeo.computeVertexNormals();

			// store morph normals

			var faceNormal, vertexNormals;

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				faceNormal = morphNormals.faceNormals[ f ];
				vertexNormals = morphNormals.vertexNormals[ f ];

				faceNormal.copy( face.normal );

				vertexNormals.a.copy( face.vertexNormals[ 0 ] );
				vertexNormals.b.copy( face.vertexNormals[ 1 ] );
				vertexNormals.c.copy( face.vertexNormals[ 2 ] );

			}

		}

		// restore original normals

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			face.normal = face.__originalFaceNormal;
			face.vertexNormals = face.__originalVertexNormals;

		}

	},

	computeLineDistances: function () {

		var d = 0;
		var vertices = this.vertices;

		for ( var i = 0, il = vertices.length; i < il; i ++ ) {

			if ( i > 0 ) {

				d += vertices[ i ].distanceTo( vertices[ i - 1 ] );

			}

			this.lineDistances[ i ] = d;

		}

	},

	computeBoundingBox: function () {

		if ( this.boundingBox === null ) {

			this.boundingBox = new Box3();

		}

		this.boundingBox.setFromPoints( this.vertices );

	},

	computeBoundingSphere: function () {

		if ( this.boundingSphere === null ) {

			this.boundingSphere = new Sphere$2();

		}

		this.boundingSphere.setFromPoints( this.vertices );

	},

	merge: function ( geometry, matrix, materialIndexOffset ) {

		if ( ( geometry && geometry.isGeometry ) === false ) {

			console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );
			return;

		}

		var normalMatrix,
			vertexOffset = this.vertices.length,
			vertices1 = this.vertices,
			vertices2 = geometry.vertices,
			faces1 = this.faces,
			faces2 = geometry.faces,
			uvs1 = this.faceVertexUvs[ 0 ],
			uvs2 = geometry.faceVertexUvs[ 0 ],
			colors1 = this.colors,
			colors2 = geometry.colors;

		if ( materialIndexOffset === undefined ) materialIndexOffset = 0;

		if ( matrix !== undefined ) {

			normalMatrix = new Matrix3().getNormalMatrix( matrix );

		}

		// vertices

		for ( var i = 0, il = vertices2.length; i < il; i ++ ) {

			var vertex = vertices2[ i ];

			var vertexCopy = vertex.clone();

			if ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );

			vertices1.push( vertexCopy );

		}

		// colors

		for ( var i = 0, il = colors2.length; i < il; i ++ ) {

			colors1.push( colors2[ i ].clone() );

		}

		// faces

		for ( i = 0, il = faces2.length; i < il; i ++ ) {

			var face = faces2[ i ], faceCopy, normal, color,
				faceVertexNormals = face.vertexNormals,
				faceVertexColors = face.vertexColors;

			faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );
			faceCopy.normal.copy( face.normal );

			if ( normalMatrix !== undefined ) {

				faceCopy.normal.applyMatrix3( normalMatrix ).normalize();

			}

			for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {

				normal = faceVertexNormals[ j ].clone();

				if ( normalMatrix !== undefined ) {

					normal.applyMatrix3( normalMatrix ).normalize();

				}

				faceCopy.vertexNormals.push( normal );

			}

			faceCopy.color.copy( face.color );

			for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {

				color = faceVertexColors[ j ];
				faceCopy.vertexColors.push( color.clone() );

			}

			faceCopy.materialIndex = face.materialIndex + materialIndexOffset;

			faces1.push( faceCopy );

		}

		// uvs

		for ( i = 0, il = uvs2.length; i < il; i ++ ) {

			var uv = uvs2[ i ], uvCopy = [];

			if ( uv === undefined ) {

				continue;

			}

			for ( var j = 0, jl = uv.length; j < jl; j ++ ) {

				uvCopy.push( uv[ j ].clone() );

			}

			uvs1.push( uvCopy );

		}

	},

	mergeMesh: function ( mesh ) {

		if ( ( mesh && mesh.isMesh ) === false ) {

			console.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );
			return;

		}

		mesh.matrixAutoUpdate && mesh.updateMatrix();

		this.merge( mesh.geometry, mesh.matrix );

	},

	/*
	 * Checks for duplicate vertices with hashmap.
	 * Duplicated vertices are removed
	 * and faces' vertices are updated.
	 */

	mergeVertices: function () {

		var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)
		var unique = [], changes = [];

		var v, key;
		var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001
		var precision = Math.pow( 10, precisionPoints );
		var i, il, face;
		var indices, j, jl;

		for ( i = 0, il = this.vertices.length; i < il; i ++ ) {

			v = this.vertices[ i ];
			key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );

			if ( verticesMap[ key ] === undefined ) {

				verticesMap[ key ] = i;
				unique.push( this.vertices[ i ] );
				changes[ i ] = unique.length - 1;

			} else {

				//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
				changes[ i ] = changes[ verticesMap[ key ] ];

			}

		}


		// if faces are completely degenerate after merging vertices, we
		// have to remove them from the geometry.
		var faceIndicesToRemove = [];

		for ( i = 0, il = this.faces.length; i < il; i ++ ) {

			face = this.faces[ i ];

			face.a = changes[ face.a ];
			face.b = changes[ face.b ];
			face.c = changes[ face.c ];

			indices = [ face.a, face.b, face.c ];

			// if any duplicate vertices are found in a Face3
			// we have to remove the face as nothing can be saved
			for ( var n = 0; n < 3; n ++ ) {

				if ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {

					faceIndicesToRemove.push( i );
					break;

				}

			}

		}

		for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {

			var idx = faceIndicesToRemove[ i ];

			this.faces.splice( idx, 1 );

			for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {

				this.faceVertexUvs[ j ].splice( idx, 1 );

			}

		}

		// Use unique set of vertices

		var diff = this.vertices.length - unique.length;
		this.vertices = unique;
		return diff;

	},

	sortFacesByMaterialIndex: function () {

		var faces = this.faces;
		var length = faces.length;

		// tag faces

		for ( var i = 0; i < length; i ++ ) {

			faces[ i ]._id = i;

		}

		// sort faces

		function materialIndexSort( a, b ) {

			return a.materialIndex - b.materialIndex;

		}

		faces.sort( materialIndexSort );

		// sort uvs

		var uvs1 = this.faceVertexUvs[ 0 ];
		var uvs2 = this.faceVertexUvs[ 1 ];

		var newUvs1, newUvs2;

		if ( uvs1 && uvs1.length === length ) newUvs1 = [];
		if ( uvs2 && uvs2.length === length ) newUvs2 = [];

		for ( var i = 0; i < length; i ++ ) {

			var id = faces[ i ]._id;

			if ( newUvs1 ) newUvs1.push( uvs1[ id ] );
			if ( newUvs2 ) newUvs2.push( uvs2[ id ] );

		}

		if ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;
		if ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;

	},

	toJSON: function () {

		var data = {
			metadata: {
				version: 4.4,
				type: 'Geometry',
				generator: 'Geometry.toJSON'
			}
		};

		// standard Geometry serialization

		data.uuid = this.uuid;
		data.type = this.type;
		if ( this.name !== '' ) data.name = this.name;

		if ( this.parameters !== undefined ) {

			var parameters = this.parameters;

			for ( var key in parameters ) {

				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];

			}

			return data;

		}

		var vertices = [];

		for ( var i = 0; i < this.vertices.length; i ++ ) {

			var vertex = this.vertices[ i ];
			vertices.push( vertex.x, vertex.y, vertex.z );

		}

		var faces = [];
		var normals = [];
		var normalsHash = {};
		var colors = [];
		var colorsHash = {};
		var uvs = [];
		var uvsHash = {};

		for ( var i = 0; i < this.faces.length; i ++ ) {

			var face = this.faces[ i ];

			var hasMaterial = true;
			var hasFaceUv = false; // deprecated
			var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;
			var hasFaceNormal = face.normal.length() > 0;
			var hasFaceVertexNormal = face.vertexNormals.length > 0;
			var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;
			var hasFaceVertexColor = face.vertexColors.length > 0;

			var faceType = 0;

			faceType = setBit( faceType, 0, 0 ); // isQuad
			faceType = setBit( faceType, 1, hasMaterial );
			faceType = setBit( faceType, 2, hasFaceUv );
			faceType = setBit( faceType, 3, hasFaceVertexUv );
			faceType = setBit( faceType, 4, hasFaceNormal );
			faceType = setBit( faceType, 5, hasFaceVertexNormal );
			faceType = setBit( faceType, 6, hasFaceColor );
			faceType = setBit( faceType, 7, hasFaceVertexColor );

			faces.push( faceType );
			faces.push( face.a, face.b, face.c );
			faces.push( face.materialIndex );

			if ( hasFaceVertexUv ) {

				var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];

				faces.push(
					getUvIndex( faceVertexUvs[ 0 ] ),
					getUvIndex( faceVertexUvs[ 1 ] ),
					getUvIndex( faceVertexUvs[ 2 ] )
				);

			}

			if ( hasFaceNormal ) {

				faces.push( getNormalIndex( face.normal ) );

			}

			if ( hasFaceVertexNormal ) {

				var vertexNormals = face.vertexNormals;

				faces.push(
					getNormalIndex( vertexNormals[ 0 ] ),
					getNormalIndex( vertexNormals[ 1 ] ),
					getNormalIndex( vertexNormals[ 2 ] )
				);

			}

			if ( hasFaceColor ) {

				faces.push( getColorIndex( face.color ) );

			}

			if ( hasFaceVertexColor ) {

				var vertexColors = face.vertexColors;

				faces.push(
					getColorIndex( vertexColors[ 0 ] ),
					getColorIndex( vertexColors[ 1 ] ),
					getColorIndex( vertexColors[ 2 ] )
				);

			}

		}

		function setBit( value, position, enabled ) {

			return enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );

		}

		function getNormalIndex( normal ) {

			var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();

			if ( normalsHash[ hash ] !== undefined ) {

				return normalsHash[ hash ];

			}

			normalsHash[ hash ] = normals.length / 3;
			normals.push( normal.x, normal.y, normal.z );

			return normalsHash[ hash ];

		}

		function getColorIndex( color ) {

			var hash = color.r.toString() + color.g.toString() + color.b.toString();

			if ( colorsHash[ hash ] !== undefined ) {

				return colorsHash[ hash ];

			}

			colorsHash[ hash ] = colors.length;
			colors.push( color.getHex() );

			return colorsHash[ hash ];

		}

		function getUvIndex( uv ) {

			var hash = uv.x.toString() + uv.y.toString();

			if ( uvsHash[ hash ] !== undefined ) {

				return uvsHash[ hash ];

			}

			uvsHash[ hash ] = uvs.length / 2;
			uvs.push( uv.x, uv.y );

			return uvsHash[ hash ];

		}

		data.data = {};

		data.data.vertices = vertices;
		data.data.normals = normals;
		if ( colors.length > 0 ) data.data.colors = colors;
		if ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility
		data.data.faces = faces;

		return data;

	},

	clone: function () {

		/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */

		return new Geometry().copy( this );

	},

	copy: function ( source ) {

		var i, il, j, jl, k, kl;

		// reset

		this.vertices = [];
		this.colors = [];
		this.faces = [];
		this.faceVertexUvs = [[]];
		this.morphTargets = [];
		this.morphNormals = [];
		this.skinWeights = [];
		this.skinIndices = [];
		this.lineDistances = [];
		this.boundingBox = null;
		this.boundingSphere = null;

		// name

		this.name = source.name;

		// vertices

		var vertices = source.vertices;

		for ( i = 0, il = vertices.length; i < il; i ++ ) {

			this.vertices.push( vertices[ i ].clone() );

		}

		// colors

		var colors = source.colors;

		for ( i = 0, il = colors.length; i < il; i ++ ) {

			this.colors.push( colors[ i ].clone() );

		}

		// faces

		var faces = source.faces;

		for ( i = 0, il = faces.length; i < il; i ++ ) {

			this.faces.push( faces[ i ].clone() );

		}

		// face vertex uvs

		for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {

			var faceVertexUvs = source.faceVertexUvs[ i ];

			if ( this.faceVertexUvs[ i ] === undefined ) {

				this.faceVertexUvs[ i ] = [];

			}

			for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {

				var uvs = faceVertexUvs[ j ], uvsCopy = [];

				for ( k = 0, kl = uvs.length; k < kl; k ++ ) {

					var uv = uvs[ k ];

					uvsCopy.push( uv.clone() );

				}

				this.faceVertexUvs[ i ].push( uvsCopy );

			}

		}

		// morph targets

		var morphTargets = source.morphTargets;

		for ( i = 0, il = morphTargets.length; i < il; i ++ ) {

			var morphTarget = {};
			morphTarget.name = morphTargets[ i ].name;

			// vertices

			if ( morphTargets[ i ].vertices !== undefined ) {

				morphTarget.vertices = [];

				for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {

					morphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );

				}

			}

			// normals

			if ( morphTargets[ i ].normals !== undefined ) {

				morphTarget.normals = [];

				for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {

					morphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );

				}

			}

			this.morphTargets.push( morphTarget );

		}

		// morph normals

		var morphNormals = source.morphNormals;

		for ( i = 0, il = morphNormals.length; i < il; i ++ ) {

			var morphNormal = {};

			// vertex normals

			if ( morphNormals[ i ].vertexNormals !== undefined ) {

				morphNormal.vertexNormals = [];

				for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {

					var srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];
					var destVertexNormal = {};

					destVertexNormal.a = srcVertexNormal.a.clone();
					destVertexNormal.b = srcVertexNormal.b.clone();
					destVertexNormal.c = srcVertexNormal.c.clone();

					morphNormal.vertexNormals.push( destVertexNormal );

				}

			}

			// face normals

			if ( morphNormals[ i ].faceNormals !== undefined ) {

				morphNormal.faceNormals = [];

				for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {

					morphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );

				}

			}

			this.morphNormals.push( morphNormal );

		}

		// skin weights

		var skinWeights = source.skinWeights;

		for ( i = 0, il = skinWeights.length; i < il; i ++ ) {

			this.skinWeights.push( skinWeights[ i ].clone() );

		}

		// skin indices

		var skinIndices = source.skinIndices;

		for ( i = 0, il = skinIndices.length; i < il; i ++ ) {

			this.skinIndices.push( skinIndices[ i ].clone() );

		}

		// line distances

		var lineDistances = source.lineDistances;

		for ( i = 0, il = lineDistances.length; i < il; i ++ ) {

			this.lineDistances.push( lineDistances[ i ] );

		}

		// bounding box

		var boundingBox = source.boundingBox;

		if ( boundingBox !== null ) {

			this.boundingBox = boundingBox.clone();

		}

		// bounding sphere

		var boundingSphere = source.boundingSphere;

		if ( boundingSphere !== null ) {

			this.boundingSphere = boundingSphere.clone();

		}

		// update flags

		this.elementsNeedUpdate = source.elementsNeedUpdate;
		this.verticesNeedUpdate = source.verticesNeedUpdate;
		this.uvsNeedUpdate = source.uvsNeedUpdate;
		this.normalsNeedUpdate = source.normalsNeedUpdate;
		this.colorsNeedUpdate = source.colorsNeedUpdate;
		this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;
		this.groupsNeedUpdate = source.groupsNeedUpdate;

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

function BufferGeometry() {

	Object.defineProperty( this, 'id', { value: GeometryIdCount() } );

	this.uuid = _Math.generateUUID();

	this.name = '';
	this.type = 'BufferGeometry';

	this.index = null;
	this.attributes = {};

	this.morphAttributes = {};

	this.groups = [];

	this.boundingBox = null;
	this.boundingSphere = null;

	this.drawRange = { start: 0, count: Infinity };

}

BufferGeometry.MaxIndex = 65535;

Object.assign( BufferGeometry.prototype, EventDispatcher.prototype, {

	isBufferGeometry: true,

	getIndex: function () {

		return this.index;

	},

	setIndex: function ( index ) {

		if ( Array.isArray( index ) ) {

			this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );

		} else {

			this.index = index;

		}

	},

	addAttribute: function ( name, attribute ) {

		if ( ( attribute && attribute.isBufferAttribute ) === false && ( attribute && attribute.isInterleavedBufferAttribute ) === false ) {

			console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );

			this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );

			return;

		}

		if ( name === 'index' ) {

			console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );
			this.setIndex( attribute );

			return;

		}

		this.attributes[ name ] = attribute;

		return this;

	},

	getAttribute: function ( name ) {

		return this.attributes[ name ];

	},

	removeAttribute: function ( name ) {

		delete this.attributes[ name ];

		return this;

	},

	addGroup: function ( start, count, materialIndex ) {

		this.groups.push( {

			start: start,
			count: count,
			materialIndex: materialIndex !== undefined ? materialIndex : 0

		} );

	},

	clearGroups: function () {

		this.groups = [];

	},

	setDrawRange: function ( start, count ) {

		this.drawRange.start = start;
		this.drawRange.count = count;

	},

	applyMatrix: function ( matrix ) {

		var position = this.attributes.position;

		if ( position !== undefined ) {

			matrix.applyToBufferAttribute( position );
			position.needsUpdate = true;

		}

		var normal = this.attributes.normal;

		if ( normal !== undefined ) {

			var normalMatrix = new Matrix3().getNormalMatrix( matrix );

			normalMatrix.applyToBufferAttribute( normal );
			normal.needsUpdate = true;

		}

		if ( this.boundingBox !== null ) {

			this.computeBoundingBox();

		}

		if ( this.boundingSphere !== null ) {

			this.computeBoundingSphere();

		}

		return this;

	},

	rotateX: function () {

		// rotate geometry around world x-axis

		var m1 = new Matrix4();

		return function rotateX( angle ) {

			m1.makeRotationX( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	rotateY: function () {

		// rotate geometry around world y-axis

		var m1 = new Matrix4();

		return function rotateY( angle ) {

			m1.makeRotationY( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	rotateZ: function () {

		// rotate geometry around world z-axis

		var m1 = new Matrix4();

		return function rotateZ( angle ) {

			m1.makeRotationZ( angle );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	translate: function () {

		// translate geometry

		var m1 = new Matrix4();

		return function translate( x, y, z ) {

			m1.makeTranslation( x, y, z );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	scale: function () {

		// scale geometry

		var m1 = new Matrix4();

		return function scale( x, y, z ) {

			m1.makeScale( x, y, z );

			this.applyMatrix( m1 );

			return this;

		};

	}(),

	lookAt: function () {

		var obj = new Object3D();

		return function lookAt( vector ) {

			obj.lookAt( vector );

			obj.updateMatrix();

			this.applyMatrix( obj.matrix );

		};

	}(),

	center: function () {

		this.computeBoundingBox();

		var offset = this.boundingBox.getCenter().negate();

		this.translate( offset.x, offset.y, offset.z );

		return offset;

	},

	setFromObject: function ( object ) {

		// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );

		var geometry = object.geometry;

		if ( object.isPoints || object.isLine ) {

			var positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );
			var colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );

			this.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );
			this.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );

			if ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {

				var lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );

				this.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );

			}

			if ( geometry.boundingSphere !== null ) {

				this.boundingSphere = geometry.boundingSphere.clone();

			}

			if ( geometry.boundingBox !== null ) {

				this.boundingBox = geometry.boundingBox.clone();

			}

		} else if ( object.isMesh ) {

			if ( geometry && geometry.isGeometry ) {

				this.fromGeometry( geometry );

			}

		}

		return this;

	},

	updateFromObject: function ( object ) {

		var geometry = object.geometry;

		if ( object.isMesh ) {

			var direct = geometry.__directGeometry;

			if ( geometry.elementsNeedUpdate === true ) {

				direct = undefined;
				geometry.elementsNeedUpdate = false;

			}

			if ( direct === undefined ) {

				return this.fromGeometry( geometry );

			}

			direct.verticesNeedUpdate = geometry.verticesNeedUpdate;
			direct.normalsNeedUpdate = geometry.normalsNeedUpdate;
			direct.colorsNeedUpdate = geometry.colorsNeedUpdate;
			direct.uvsNeedUpdate = geometry.uvsNeedUpdate;
			direct.groupsNeedUpdate = geometry.groupsNeedUpdate;

			geometry.verticesNeedUpdate = false;
			geometry.normalsNeedUpdate = false;
			geometry.colorsNeedUpdate = false;
			geometry.uvsNeedUpdate = false;
			geometry.groupsNeedUpdate = false;

			geometry = direct;

		}

		var attribute;

		if ( geometry.verticesNeedUpdate === true ) {

			attribute = this.attributes.position;

			if ( attribute !== undefined ) {

				attribute.copyVector3sArray( geometry.vertices );
				attribute.needsUpdate = true;

			}

			geometry.verticesNeedUpdate = false;

		}

		if ( geometry.normalsNeedUpdate === true ) {

			attribute = this.attributes.normal;

			if ( attribute !== undefined ) {

				attribute.copyVector3sArray( geometry.normals );
				attribute.needsUpdate = true;

			}

			geometry.normalsNeedUpdate = false;

		}

		if ( geometry.colorsNeedUpdate === true ) {

			attribute = this.attributes.color;

			if ( attribute !== undefined ) {

				attribute.copyColorsArray( geometry.colors );
				attribute.needsUpdate = true;

			}

			geometry.colorsNeedUpdate = false;

		}

		if ( geometry.uvsNeedUpdate ) {

			attribute = this.attributes.uv;

			if ( attribute !== undefined ) {

				attribute.copyVector2sArray( geometry.uvs );
				attribute.needsUpdate = true;

			}

			geometry.uvsNeedUpdate = false;

		}

		if ( geometry.lineDistancesNeedUpdate ) {

			attribute = this.attributes.lineDistance;

			if ( attribute !== undefined ) {

				attribute.copyArray( geometry.lineDistances );
				attribute.needsUpdate = true;

			}

			geometry.lineDistancesNeedUpdate = false;

		}

		if ( geometry.groupsNeedUpdate ) {

			geometry.computeGroups( object.geometry );
			this.groups = geometry.groups;

			geometry.groupsNeedUpdate = false;

		}

		return this;

	},

	fromGeometry: function ( geometry ) {

		geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );

		return this.fromDirectGeometry( geometry.__directGeometry );

	},

	fromDirectGeometry: function ( geometry ) {

		var positions = new Float32Array( geometry.vertices.length * 3 );
		this.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );

		if ( geometry.normals.length > 0 ) {

			var normals = new Float32Array( geometry.normals.length * 3 );
			this.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );

		}

		if ( geometry.colors.length > 0 ) {

			var colors = new Float32Array( geometry.colors.length * 3 );
			this.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );

		}

		if ( geometry.uvs.length > 0 ) {

			var uvs = new Float32Array( geometry.uvs.length * 2 );
			this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );

		}

		if ( geometry.uvs2.length > 0 ) {

			var uvs2 = new Float32Array( geometry.uvs2.length * 2 );
			this.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );

		}

		if ( geometry.indices.length > 0 ) {

			var TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;
			var indices = new TypeArray( geometry.indices.length * 3 );
			this.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );

		}

		// groups

		this.groups = geometry.groups;

		// morphs

		for ( var name in geometry.morphTargets ) {

			var array = [];
			var morphTargets = geometry.morphTargets[ name ];

			for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {

				var morphTarget = morphTargets[ i ];

				var attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );

				array.push( attribute.copyVector3sArray( morphTarget ) );

			}

			this.morphAttributes[ name ] = array;

		}

		// skinning

		if ( geometry.skinIndices.length > 0 ) {

			var skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );
			this.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );

		}

		if ( geometry.skinWeights.length > 0 ) {

			var skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );
			this.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );

		}

		//

		if ( geometry.boundingSphere !== null ) {

			this.boundingSphere = geometry.boundingSphere.clone();

		}

		if ( geometry.boundingBox !== null ) {

			this.boundingBox = geometry.boundingBox.clone();

		}

		return this;

	},

	computeBoundingBox: function () {

		if ( this.boundingBox === null ) {

			this.boundingBox = new Box3();

		}

		var position = this.attributes.position;

		if ( position !== undefined ) {

			this.boundingBox.setFromBufferAttribute( position );

		} else {

			this.boundingBox.makeEmpty();

		}

		if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {

			console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this );

		}

	},

	computeBoundingSphere: function () {

		var box = new Box3();
		var vector = new Vector3();

		return function computeBoundingSphere() {

			if ( this.boundingSphere === null ) {

				this.boundingSphere = new Sphere$2();

			}

			var position = this.attributes.position;

			if ( position ) {

				var center = this.boundingSphere.center;

				box.setFromBufferAttribute( position );
				box.getCenter( center );

				// hoping to find a boundingSphere with a radius smaller than the
				// boundingSphere of the boundingBox: sqrt(3) smaller in the best case

				var maxRadiusSq = 0;

				for ( var i = 0, il = position.count; i < il; i ++ ) {

					vector.x = position.getX( i );
					vector.y = position.getY( i );
					vector.z = position.getZ( i );
					maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );

				}

				this.boundingSphere.radius = Math.sqrt( maxRadiusSq );

				if ( isNaN( this.boundingSphere.radius ) ) {

					console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this );

				}

			}

		};

	}(),

	computeFaceNormals: function () {

		// backwards compatibility

	},

	computeVertexNormals: function () {

		var index = this.index;
		var attributes = this.attributes;
		var groups = this.groups;

		if ( attributes.position ) {

			var positions = attributes.position.array;

			if ( attributes.normal === undefined ) {

				this.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );

			} else {

				// reset existing normals to zero

				var array = attributes.normal.array;

				for ( var i = 0, il = array.length; i < il; i ++ ) {

					array[ i ] = 0;

				}

			}

			var normals = attributes.normal.array;

			var vA, vB, vC;
			var pA = new Vector3(), pB = new Vector3(), pC = new Vector3();
			var cb = new Vector3(), ab = new Vector3();

			// indexed elements

			if ( index ) {

				var indices = index.array;

				if ( groups.length === 0 ) {

					this.addGroup( 0, indices.length );

				}

				for ( var j = 0, jl = groups.length; j < jl; ++ j ) {

					var group = groups[ j ];

					var start = group.start;
					var count = group.count;

					for ( var i = start, il = start + count; i < il; i += 3 ) {

						vA = indices[ i + 0 ] * 3;
						vB = indices[ i + 1 ] * 3;
						vC = indices[ i + 2 ] * 3;

						pA.fromArray( positions, vA );
						pB.fromArray( positions, vB );
						pC.fromArray( positions, vC );

						cb.subVectors( pC, pB );
						ab.subVectors( pA, pB );
						cb.cross( ab );

						normals[ vA ] += cb.x;
						normals[ vA + 1 ] += cb.y;
						normals[ vA + 2 ] += cb.z;

						normals[ vB ] += cb.x;
						normals[ vB + 1 ] += cb.y;
						normals[ vB + 2 ] += cb.z;

						normals[ vC ] += cb.x;
						normals[ vC + 1 ] += cb.y;
						normals[ vC + 2 ] += cb.z;

					}

				}

			} else {

				// non-indexed elements (unconnected triangle soup)

				for ( var i = 0, il = positions.length; i < il; i += 9 ) {

					pA.fromArray( positions, i );
					pB.fromArray( positions, i + 3 );
					pC.fromArray( positions, i + 6 );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					normals[ i ] = cb.x;
					normals[ i + 1 ] = cb.y;
					normals[ i + 2 ] = cb.z;

					normals[ i + 3 ] = cb.x;
					normals[ i + 4 ] = cb.y;
					normals[ i + 5 ] = cb.z;

					normals[ i + 6 ] = cb.x;
					normals[ i + 7 ] = cb.y;
					normals[ i + 8 ] = cb.z;

				}

			}

			this.normalizeNormals();

			attributes.normal.needsUpdate = true;

		}

	},

	merge: function ( geometry, offset ) {

		if ( ( geometry && geometry.isBufferGeometry ) === false ) {

			console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );
			return;

		}

		if ( offset === undefined ) offset = 0;

		var attributes = this.attributes;

		for ( var key in attributes ) {

			if ( geometry.attributes[ key ] === undefined ) continue;

			var attribute1 = attributes[ key ];
			var attributeArray1 = attribute1.array;

			var attribute2 = geometry.attributes[ key ];
			var attributeArray2 = attribute2.array;

			var attributeSize = attribute2.itemSize;

			for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {

				attributeArray1[ j ] = attributeArray2[ i ];

			}

		}

		return this;

	},

	normalizeNormals: function () {

		var normals = this.attributes.normal;

		var x, y, z, n;

		for ( var i = 0, il = normals.count; i < il; i ++ ) {

			x = normals.getX( i );
			y = normals.getY( i );
			z = normals.getZ( i );

			n = 1.0 / Math.sqrt( x * x + y * y + z * z );

			normals.setXYZ( i, x * n, y * n, z * n );

		}

	},

	toNonIndexed: function () {

		if ( this.index === null ) {

			console.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );
			return this;

		}

		var geometry2 = new BufferGeometry();

		var indices = this.index.array;
		var attributes = this.attributes;

		for ( var name in attributes ) {

			var attribute = attributes[ name ];

			var array = attribute.array;
			var itemSize = attribute.itemSize;

			var array2 = new array.constructor( indices.length * itemSize );

			var index = 0, index2 = 0;

			for ( var i = 0, l = indices.length; i < l; i ++ ) {

				index = indices[ i ] * itemSize;

				for ( var j = 0; j < itemSize; j ++ ) {

					array2[ index2 ++ ] = array[ index ++ ];

				}

			}

			geometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );

		}

		return geometry2;

	},

	toJSON: function () {

		var data = {
			metadata: {
				version: 4.4,
				type: 'BufferGeometry',
				generator: 'BufferGeometry.toJSON'
			}
		};

		// standard BufferGeometry serialization

		data.uuid = this.uuid;
		data.type = this.type;
		if ( this.name !== '' ) data.name = this.name;

		if ( this.parameters !== undefined ) {

			var parameters = this.parameters;

			for ( var key in parameters ) {

				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];

			}

			return data;

		}

		data.data = { attributes: {} };

		var index = this.index;

		if ( index !== null ) {

			var array = Array.prototype.slice.call( index.array );

			data.data.index = {
				type: index.array.constructor.name,
				array: array
			};

		}

		var attributes = this.attributes;

		for ( var key in attributes ) {

			var attribute = attributes[ key ];

			var array = Array.prototype.slice.call( attribute.array );

			data.data.attributes[ key ] = {
				itemSize: attribute.itemSize,
				type: attribute.array.constructor.name,
				array: array,
				normalized: attribute.normalized
			};

		}

		var groups = this.groups;

		if ( groups.length > 0 ) {

			data.data.groups = JSON.parse( JSON.stringify( groups ) );

		}

		var boundingSphere = this.boundingSphere;

		if ( boundingSphere !== null ) {

			data.data.boundingSphere = {
				center: boundingSphere.center.toArray(),
				radius: boundingSphere.radius
			};

		}

		return data;

	},

	clone: function () {

		/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */

		return new BufferGeometry().copy( this );

	},

	copy: function ( source ) {

		var name, i, l;

		// reset

		this.index = null;
		this.attributes = {};
		this.morphAttributes = {};
		this.groups = [];
		this.boundingBox = null;
		this.boundingSphere = null;

		// name

		this.name = source.name;

		// index

		var index = source.index;

		if ( index !== null ) {

			this.setIndex( index.clone() );

		}

		// attributes

		var attributes = source.attributes;

		for ( name in attributes ) {

			var attribute = attributes[ name ];
			this.addAttribute( name, attribute.clone() );

		}

		// morph attributes

		var morphAttributes = source.morphAttributes;

		for ( name in morphAttributes ) {

			var array = [];
			var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

			for ( i = 0, l = morphAttribute.length; i < l; i ++ ) {

				array.push( morphAttribute[ i ].clone() );

			}

			this.morphAttributes[ name ] = array;

		}

		// groups

		var groups = source.groups;

		for ( i = 0, l = groups.length; i < l; i ++ ) {

			var group = groups[ i ];
			this.addGroup( group.start, group.count, group.materialIndex );

		}

		// bounding box

		var boundingBox = source.boundingBox;

		if ( boundingBox !== null ) {

			this.boundingBox = boundingBox.clone();

		}

		// bounding sphere

		var boundingSphere = source.boundingSphere;

		if ( boundingSphere !== null ) {

			this.boundingSphere = boundingSphere.clone();

		}

		// draw range

		this.drawRange.start = source.drawRange.start;
		this.drawRange.count = source.drawRange.count;

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author jonobr1 / http://jonobr1.com/
 */

function Mesh( geometry, material ) {

	Object3D.call( this );

	this.type = 'Mesh';

	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	this.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );

	this.drawMode = TrianglesDrawMode;

	this.updateMorphTargets();

}

Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Mesh,

	isMesh: true,

	setDrawMode: function ( value ) {

		this.drawMode = value;

	},

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.drawMode = source.drawMode;

		return this;

	},

	updateMorphTargets: function () {

		var morphTargets = this.geometry.morphTargets;

		if ( morphTargets !== undefined && morphTargets.length > 0 ) {

			this.morphTargetInfluences = [];
			this.morphTargetDictionary = {};

			for ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {

				this.morphTargetInfluences.push( 0 );
				this.morphTargetDictionary[ morphTargets[ m ].name ] = m;

			}

		}

	},

	raycast: ( function () {

		var inverseMatrix = new Matrix4();
		var ray = new Ray();
		var sphere = new Sphere$2();

		var vA = new Vector3();
		var vB = new Vector3();
		var vC = new Vector3();

		var tempA = new Vector3();
		var tempB = new Vector3();
		var tempC = new Vector3();

		var uvA = new Vector2();
		var uvB = new Vector2();
		var uvC = new Vector2();

		var barycoord = new Vector3();

		var intersectionPoint = new Vector3();
		var intersectionPointWorld = new Vector3();

		function uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {

			Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );

			uv1.multiplyScalar( barycoord.x );
			uv2.multiplyScalar( barycoord.y );
			uv3.multiplyScalar( barycoord.z );

			uv1.add( uv2 ).add( uv3 );

			return uv1.clone();

		}

		function checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {

			var intersect;
			var material = object.material;

			if ( material.side === BackSide ) {

				intersect = ray.intersectTriangle( pC, pB, pA, true, point );

			} else {

				intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );

			}

			if ( intersect === null ) return null;

			intersectionPointWorld.copy( point );
			intersectionPointWorld.applyMatrix4( object.matrixWorld );

			var distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );

			if ( distance < raycaster.near || distance > raycaster.far ) return null;

			return {
				distance: distance,
				point: intersectionPointWorld.clone(),
				object: object
			};

		}

		function checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {

			vA.fromBufferAttribute( position, a );
			vB.fromBufferAttribute( position, b );
			vC.fromBufferAttribute( position, c );

			var intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );

			if ( intersection ) {

				if ( uv ) {

					uvA.fromBufferAttribute( uv, a );
					uvB.fromBufferAttribute( uv, b );
					uvC.fromBufferAttribute( uv, c );

					intersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );

				}

				intersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );
				intersection.faceIndex = a;

			}

			return intersection;

		}

		return function raycast( raycaster, intersects ) {

			var geometry = this.geometry;
			var material = this.material;
			var matrixWorld = this.matrixWorld;

			if ( material === undefined ) return;

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

			sphere.copy( geometry.boundingSphere );
			sphere.applyMatrix4( matrixWorld );

			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;

			//

			inverseMatrix.getInverse( matrixWorld );
			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );

			// Check boundingBox before continuing

			if ( geometry.boundingBox !== null ) {

				if ( ray.intersectsBox( geometry.boundingBox ) === false ) return;

			}

			var intersection;

			if ( geometry.isBufferGeometry ) {

				var a, b, c;
				var index = geometry.index;
				var position = geometry.attributes.position;
				var uv = geometry.attributes.uv;
				var i, l;

				if ( index !== null ) {

					// indexed buffer geometry

					for ( i = 0, l = index.count; i < l; i += 3 ) {

						a = index.getX( i );
						b = index.getX( i + 1 );
						c = index.getX( i + 2 );

						intersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );

						if ( intersection ) {

							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics
							intersects.push( intersection );

						}

					}

				} else {

					// non-indexed buffer geometry

					for ( i = 0, l = position.count; i < l; i += 3 ) {

						a = i;
						b = i + 1;
						c = i + 2;

						intersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );

						if ( intersection ) {

							intersection.index = a; // triangle number in positions buffer semantics
							intersects.push( intersection );

						}

					}

				}

			} else if ( geometry.isGeometry ) {

				var fvA, fvB, fvC;
				var isMultiMaterial = Array.isArray( material );

				var vertices = geometry.vertices;
				var faces = geometry.faces;
				var uvs;

				var faceVertexUvs = geometry.faceVertexUvs[ 0 ];
				if ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;

				for ( var f = 0, fl = faces.length; f < fl; f ++ ) {

					var face = faces[ f ];
					var faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;

					if ( faceMaterial === undefined ) continue;

					fvA = vertices[ face.a ];
					fvB = vertices[ face.b ];
					fvC = vertices[ face.c ];

					if ( faceMaterial.morphTargets === true ) {

						var morphTargets = geometry.morphTargets;
						var morphInfluences = this.morphTargetInfluences;

						vA.set( 0, 0, 0 );
						vB.set( 0, 0, 0 );
						vC.set( 0, 0, 0 );

						for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {

							var influence = morphInfluences[ t ];

							if ( influence === 0 ) continue;

							var targets = morphTargets[ t ].vertices;

							vA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );
							vB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );
							vC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );

						}

						vA.add( fvA );
						vB.add( fvB );
						vC.add( fvC );

						fvA = vA;
						fvB = vB;
						fvC = vC;

					}

					intersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );

					if ( intersection ) {

						if ( uvs && uvs[ f ] ) {

							var uvs_f = uvs[ f ];
							uvA.copy( uvs_f[ 0 ] );
							uvB.copy( uvs_f[ 1 ] );
							uvC.copy( uvs_f[ 2 ] );

							intersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );

						}

						intersection.face = face;
						intersection.faceIndex = f;
						intersects.push( intersection );

					}

				}

			}

		};

	}() ),

	clone: function () {

		return new this.constructor( this.geometry, this.material ).copy( this );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as
 */

function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {

	Geometry.call( this );

	this.type = 'BoxGeometry';

	this.parameters = {
		width: width,
		height: height,
		depth: depth,
		widthSegments: widthSegments,
		heightSegments: heightSegments,
		depthSegments: depthSegments
	};

	this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );
	this.mergeVertices();

}

BoxGeometry.prototype = Object.create( Geometry.prototype );
BoxGeometry.prototype.constructor = BoxGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {

	BufferGeometry.call( this );

	this.type = 'BoxBufferGeometry';

	this.parameters = {
		width: width,
		height: height,
		depth: depth,
		widthSegments: widthSegments,
		heightSegments: heightSegments,
		depthSegments: depthSegments
	};

	var scope = this;

	// segments

	widthSegments = Math.floor( widthSegments ) || 1;
	heightSegments = Math.floor( heightSegments ) || 1;
	depthSegments = Math.floor( depthSegments ) || 1;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var numberOfVertices = 0;
	var groupStart = 0;

	// build each side of the box geometry

	buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px
	buildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx
	buildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py
	buildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny
	buildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz
	buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {

		var segmentWidth = width / gridX;
		var segmentHeight = height / gridY;

		var widthHalf = width / 2;
		var heightHalf = height / 2;
		var depthHalf = depth / 2;

		var gridX1 = gridX + 1;
		var gridY1 = gridY + 1;

		var vertexCounter = 0;
		var groupCount = 0;

		var ix, iy;

		var vector = new Vector3();

		// generate vertices, normals and uvs

		for ( iy = 0; iy < gridY1; iy ++ ) {

			var y = iy * segmentHeight - heightHalf;

			for ( ix = 0; ix < gridX1; ix ++ ) {

				var x = ix * segmentWidth - widthHalf;

				// set values to correct vector component

				vector[ u ] = x * udir;
				vector[ v ] = y * vdir;
				vector[ w ] = depthHalf;

				// now apply vector to vertex buffer

				vertices.push( vector.x, vector.y, vector.z );

				// set values to correct vector component

				vector[ u ] = 0;
				vector[ v ] = 0;
				vector[ w ] = depth > 0 ? 1 : - 1;

				// now apply vector to normal buffer

				normals.push( vector.x, vector.y, vector.z );

				// uvs

				uvs.push( ix / gridX );
				uvs.push( 1 - ( iy / gridY ) );

				// counters

				vertexCounter += 1;

			}

		}

		// indices

		// 1. you need three indices to draw a single face
		// 2. a single segment consists of two faces
		// 3. so we need to generate six (2*3) indices per segment

		for ( iy = 0; iy < gridY; iy ++ ) {

			for ( ix = 0; ix < gridX; ix ++ ) {

				var a = numberOfVertices + ix + gridX1 * iy;
				var b = numberOfVertices + ix + gridX1 * ( iy + 1 );
				var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );
				var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

				// increase counter

				groupCount += 6;

			}

		}

		// add a group to the geometry. this will ensure multi material support

		scope.addGroup( groupStart, groupCount, materialIndex );

		// calculate new start value for groups

		groupStart += groupCount;

		// update total number of vertices

		numberOfVertices += vertexCounter;

	}

}

BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;

/**
 * @author mrdoob / http://mrdoob.com/
 * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as
 */

function PlaneGeometry( width, height, widthSegments, heightSegments ) {

	Geometry.call( this );

	this.type = 'PlaneGeometry';

	this.parameters = {
		width: width,
		height: height,
		widthSegments: widthSegments,
		heightSegments: heightSegments
	};

	this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );
	this.mergeVertices();

}

PlaneGeometry.prototype = Object.create( Geometry.prototype );
PlaneGeometry.prototype.constructor = PlaneGeometry;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 *
 * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as
 */

function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {

	BufferGeometry.call( this );

	this.type = 'PlaneBufferGeometry';

	this.parameters = {
		width: width,
		height: height,
		widthSegments: widthSegments,
		heightSegments: heightSegments
	};

	var width_half = width / 2;
	var height_half = height / 2;

	var gridX = Math.floor( widthSegments ) || 1;
	var gridY = Math.floor( heightSegments ) || 1;

	var gridX1 = gridX + 1;
	var gridY1 = gridY + 1;

	var segment_width = width / gridX;
	var segment_height = height / gridY;

	var ix, iy;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// generate vertices, normals and uvs

	for ( iy = 0; iy < gridY1; iy ++ ) {

		var y = iy * segment_height - height_half;

		for ( ix = 0; ix < gridX1; ix ++ ) {

			var x = ix * segment_width - width_half;

			vertices.push( x, - y, 0 );

			normals.push( 0, 0, 1 );

			uvs.push( ix / gridX );
			uvs.push( 1 - ( iy / gridY ) );

		}

	}

	// indices

	for ( iy = 0; iy < gridY; iy ++ ) {

		for ( ix = 0; ix < gridX; ix ++ ) {

			var a = ix + gridX1 * iy;
			var b = ix + gridX1 * ( iy + 1 );
			var c = ( ix + 1 ) + gridX1 * ( iy + 1 );
			var d = ( ix + 1 ) + gridX1 * iy;

			// faces

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author WestLangley / http://github.com/WestLangley
*/

function Camera() {

	Object3D.call( this );

	this.type = 'Camera';

	this.matrixWorldInverse = new Matrix4();
	this.projectionMatrix = new Matrix4();

}

Camera.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Camera,

	isCamera: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.matrixWorldInverse.copy( source.matrixWorldInverse );
		this.projectionMatrix.copy( source.projectionMatrix );

		return this;

	},

	getWorldDirection: function () {

		var quaternion = new Quaternion();

		return function getWorldDirection( optionalTarget ) {

			var result = optionalTarget || new Vector3();

			this.getWorldQuaternion( quaternion );

			return result.set( 0, 0, - 1 ).applyQuaternion( quaternion );

		};

	}(),

	clone: function () {

		return new this.constructor().copy( this );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author greggman / http://games.greggman.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author tschw
 */

function PerspectiveCamera( fov, aspect, near, far ) {

	Camera.call( this );

	this.type = 'PerspectiveCamera';

	this.fov = fov !== undefined ? fov : 50;
	this.zoom = 1;

	this.near = near !== undefined ? near : 0.1;
	this.far = far !== undefined ? far : 2000;
	this.focus = 10;

	this.aspect = aspect !== undefined ? aspect : 1;
	this.view = null;

	this.filmGauge = 35;	// width of the film (default in millimeters)
	this.filmOffset = 0;	// horizontal film offset (same unit as gauge)

	this.updateProjectionMatrix();

}

PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {

	constructor: PerspectiveCamera,

	isPerspectiveCamera: true,

	copy: function ( source ) {

		Camera.prototype.copy.call( this, source );

		this.fov = source.fov;
		this.zoom = source.zoom;

		this.near = source.near;
		this.far = source.far;
		this.focus = source.focus;

		this.aspect = source.aspect;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		this.filmGauge = source.filmGauge;
		this.filmOffset = source.filmOffset;

		return this;

	},

	/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */
	setFocalLength: function ( focalLength ) {

		// see http://www.bobatkins.com/photography/technical/field_of_view.html
		var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;

		this.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );
		this.updateProjectionMatrix();

	},

	/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */
	getFocalLength: function () {

		var vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );

		return 0.5 * this.getFilmHeight() / vExtentSlope;

	},

	getEffectiveFOV: function () {

		return _Math.RAD2DEG * 2 * Math.atan(
				Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );

	},

	getFilmWidth: function () {

		// film not completely covered in portrait format (aspect < 1)
		return this.filmGauge * Math.min( this.aspect, 1 );

	},

	getFilmHeight: function () {

		// film not completely covered in landscape format (aspect > 1)
		return this.filmGauge / Math.max( this.aspect, 1 );

	},

	/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   var w = 1920;
	 *   var h = 1080;
	 *   var fullWidth = w * 3;
	 *   var fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */
	setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {

		this.aspect = fullWidth / fullHeight;

		this.view = {
			fullWidth: fullWidth,
			fullHeight: fullHeight,
			offsetX: x,
			offsetY: y,
			width: width,
			height: height
		};

		this.updateProjectionMatrix();

	},

	clearViewOffset: function () {

		this.view = null;
		this.updateProjectionMatrix();

	},

	updateProjectionMatrix: function () {

		var near = this.near,
			top = near * Math.tan(
					_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,
			height = 2 * top,
			width = this.aspect * height,
			left = - 0.5 * width,
			view = this.view;

		if ( view !== null ) {

			var fullWidth = view.fullWidth,
				fullHeight = view.fullHeight;

			left += view.offsetX * width / fullWidth;
			top -= view.offsetY * height / fullHeight;
			width *= view.width / fullWidth;
			height *= view.height / fullHeight;

		}

		var skew = this.filmOffset;
		if ( skew !== 0 ) left += near * skew / this.getFilmWidth();

		this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );

	},

	toJSON: function ( meta ) {

		var data = Object3D.prototype.toJSON.call( this, meta );

		data.object.fov = this.fov;
		data.object.zoom = this.zoom;

		data.object.near = this.near;
		data.object.far = this.far;
		data.object.focus = this.focus;

		data.object.aspect = this.aspect;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		data.object.filmGauge = this.filmGauge;
		data.object.filmOffset = this.filmOffset;

		return data;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author arose / http://github.com/arose
 */

function OrthographicCamera( left, right, top, bottom, near, far ) {

	Camera.call( this );

	this.type = 'OrthographicCamera';

	this.zoom = 1;
	this.view = null;

	this.left = left;
	this.right = right;
	this.top = top;
	this.bottom = bottom;

	this.near = ( near !== undefined ) ? near : 0.1;
	this.far = ( far !== undefined ) ? far : 2000;

	this.updateProjectionMatrix();

}

OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {

	constructor: OrthographicCamera,

	isOrthographicCamera: true,

	copy: function ( source ) {

		Camera.prototype.copy.call( this, source );

		this.left = source.left;
		this.right = source.right;
		this.top = source.top;
		this.bottom = source.bottom;
		this.near = source.near;
		this.far = source.far;

		this.zoom = source.zoom;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		return this;

	},

	setViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {

		this.view = {
			fullWidth: fullWidth,
			fullHeight: fullHeight,
			offsetX: x,
			offsetY: y,
			width: width,
			height: height
		};

		this.updateProjectionMatrix();

	},

	clearViewOffset: function() {

		this.view = null;
		this.updateProjectionMatrix();

	},

	updateProjectionMatrix: function () {

		var dx = ( this.right - this.left ) / ( 2 * this.zoom );
		var dy = ( this.top - this.bottom ) / ( 2 * this.zoom );
		var cx = ( this.right + this.left ) / 2;
		var cy = ( this.top + this.bottom ) / 2;

		var left = cx - dx;
		var right = cx + dx;
		var top = cy + dy;
		var bottom = cy - dy;

		if ( this.view !== null ) {

			var zoomW = this.zoom / ( this.view.width / this.view.fullWidth );
			var zoomH = this.zoom / ( this.view.height / this.view.fullHeight );
			var scaleW = ( this.right - this.left ) / this.view.width;
			var scaleH = ( this.top - this.bottom ) / this.view.height;

			left += scaleW * ( this.view.offsetX / zoomW );
			right = left + scaleW * ( this.view.width / zoomW );
			top -= scaleH * ( this.view.offsetY / zoomH );
			bottom = top - scaleH * ( this.view.height / zoomH );

		}

		this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );

	},

	toJSON: function ( meta ) {

		var data = Object3D.prototype.toJSON.call( this, meta );

		data.object.zoom = this.zoom;
		data.object.left = this.left;
		data.object.right = this.right;
		data.object.top = this.top;
		data.object.bottom = this.bottom;
		data.object.near = this.near;
		data.object.far = this.far;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		return data;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLAttributes( gl ) {

	var buffers = {};

	function createBuffer( attribute, bufferType ) {

		var array = attribute.array;
		var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;

		var buffer = gl.createBuffer();

		gl.bindBuffer( bufferType, buffer );
		gl.bufferData( bufferType, array, usage );

		attribute.onUploadCallback();

		var type = gl.FLOAT;

		if ( array instanceof Float32Array ) {

			type = gl.FLOAT;

		} else if ( array instanceof Float64Array ) {

			console.warn( "Unsupported data buffer format: Float64Array" );

		} else if ( array instanceof Uint16Array ) {

			type = gl.UNSIGNED_SHORT;

		} else if ( array instanceof Int16Array ) {

			type = gl.SHORT;

		} else if ( array instanceof Uint32Array ) {

			type = gl.UNSIGNED_INT;

		} else if ( array instanceof Int32Array ) {

			type = gl.INT;

		} else if ( array instanceof Int8Array ) {

			type = gl.BYTE;

		} else if ( array instanceof Uint8Array ) {

			type = gl.UNSIGNED_BYTE;

		}

		return {
			buffer: buffer,
			type: type,
			bytesPerElement: array.BYTES_PER_ELEMENT,
			version: attribute.version
		};

	}

	function updateBuffer( buffer, attribute, bufferType ) {

		var array = attribute.array;
		var updateRange = attribute.updateRange;

		gl.bindBuffer( bufferType, buffer );

		if ( attribute.dynamic === false ) {

			gl.bufferData( bufferType, array, gl.STATIC_DRAW );

		} else if ( updateRange.count === - 1 ) {

			// Not using update ranges

			gl.bufferSubData( bufferType, 0, array );

		} else if ( updateRange.count === 0 ) {

			console.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );

		} else {

			gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
				array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );

			updateRange.count = 0; // reset range

		}

	}

	//

	function get( attribute ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		return buffers[ attribute.uuid ];

	}

	function remove( attribute ) {

		var data = buffers[ attribute.uuid ];

		if ( data ) {

			gl.deleteBuffer( data.buffer );

			delete buffers[ attribute.uuid ];

		}

	}

	function update( attribute, bufferType ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		var data = buffers[ attribute.uuid ];

		if ( data === undefined ) {

			buffers[ attribute.uuid ] = createBuffer( attribute, bufferType );

		} else if ( data.version < attribute.version ) {

			updateBuffer( data.buffer, attribute, bufferType );

			data.version = attribute.version;

		}

	}

	return {

		get: get,
		remove: remove,
		update: update

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function painterSortStable( a, b ) {

	if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} else if ( a.program && b.program && a.program !== b.program ) {

		return a.program.id - b.program.id;

	} else if ( a.material.id !== b.material.id ) {

		return a.material.id - b.material.id;

	} else if ( a.z !== b.z ) {

		return a.z - b.z;

	} else {

		return a.id - b.id;

	}

}

function reversePainterSortStable( a, b ) {

	if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} if ( a.z !== b.z ) {

		return b.z - a.z;

	} else {

		return a.id - b.id;

	}

}

function WebGLRenderList() {

	var opaque = [];
	var opaqueLastIndex = - 1;

	var transparent = [];
	var transparentLastIndex = - 1;

	function init() {

		opaqueLastIndex = - 1;
		transparentLastIndex = - 1;

	}

	function push( object, geometry, material, z, group ) {

		var array, index;

		// allocate the next position in the appropriate array

		if ( material.transparent ) {

			array = transparent;
			index = ++ transparentLastIndex;

		} else {

			array = opaque;
			index = ++ opaqueLastIndex;

		}

		// recycle existing render item or grow the array

		var renderItem = array[ index ];

		if ( renderItem ) {

			renderItem.id = object.id;
			renderItem.object = object;
			renderItem.geometry = geometry;
			renderItem.material = material;
			renderItem.program = material.program;
			renderItem.renderOrder = object.renderOrder;
			renderItem.z = z;
			renderItem.group = group;

		} else {

			renderItem = {
				id: object.id,
				object: object,
				geometry: geometry,
				material: material,
				program: material.program,
				renderOrder: object.renderOrder,
				z: z,
				group: group
			};

			// assert( index === array.length );
			array.push( renderItem );

		}

	}

	function finish() {

		opaque.length = opaqueLastIndex + 1;
		transparent.length = transparentLastIndex + 1;

	}

	function sort() {

		opaque.sort( painterSortStable );
		transparent.sort( reversePainterSortStable );

	}

	return {
		opaque: opaque,
		transparent: transparent,

		init: init,
		push: push,
		finish: finish,

		sort: sort
	};

}

function WebGLRenderLists() {

	var lists = {};

	function get( scene, camera ) {

		var hash = scene.id + ',' + camera.id;
		var list = lists[ hash ];

		if ( list === undefined ) {

			console.log( 'THREE.WebGLRenderLists:', hash );

			list = new WebGLRenderList();
			lists[ hash ] = list;

		}

		return list;

	}

	function dispose() {

		lists = {};

	}

	return {
		get: get,
		dispose: dispose
	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {

	var mode;

	function setMode( value ) {

		mode = value;

	}

	var type, size;

	function setIndex( index ) {

		if ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {

			type = gl.UNSIGNED_INT;
			size = 4;

		} else if ( index.array instanceof Uint16Array ) {

			type = gl.UNSIGNED_SHORT;
			size = 2;

		} else {

			type = gl.UNSIGNED_BYTE;
			size = 1;

		}

	}

	function render( start, count ) {

		gl.drawElements( mode, count, type, start * size );

		infoRender.calls ++;
		infoRender.vertices += count;

		if ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;

	}

	function renderInstances( geometry, start, count ) {

		var extension = extensions.get( 'ANGLE_instanced_arrays' );

		if ( extension === null ) {

			console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
			return;

		}

		extension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );

		infoRender.calls ++;
		infoRender.vertices += count * geometry.maxInstancedCount;

		if ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;

	}

	//

	this.setMode = setMode;
	this.setIndex = setIndex;
	this.render = render;
	this.renderInstances = renderInstances;

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLBufferRenderer( gl, extensions, infoRender ) {

	var mode;

	function setMode( value ) {

		mode = value;

	}

	function render( start, count ) {

		gl.drawArrays( mode, start, count );

		infoRender.calls ++;
		infoRender.vertices += count;

		if ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;

	}

	function renderInstances( geometry, start, count ) {

		var extension = extensions.get( 'ANGLE_instanced_arrays' );

		if ( extension === null ) {

			console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
			return;

		}

		var position = geometry.attributes.position;

		if ( position.isInterleavedBufferAttribute ) {

			count = position.data.count;

			extension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );

		} else {

			extension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );

		}

		infoRender.calls ++;
		infoRender.vertices += count * geometry.maxInstancedCount;

		if ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;

	}

	//

	this.setMode = setMode;
	this.render = render;
	this.renderInstances = renderInstances;

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLGeometries( gl, attributes, infoMemory ) {

	var geometries = {};
	var wireframeAttributes = {};

	function onGeometryDispose( event ) {

		var geometry = event.target;
		var buffergeometry = geometries[ geometry.id ];

		if ( buffergeometry.index !== null ) {

			attributes.remove( buffergeometry.index );

		}

		for ( var name in buffergeometry.attributes ) {

			attributes.remove( buffergeometry.attributes[ name ] );

		}

		geometry.removeEventListener( 'dispose', onGeometryDispose );

		delete geometries[ geometry.id ];

		// TODO Remove duplicate code

		var attribute = wireframeAttributes[ geometry.id ];

		if ( attribute ) {

			attributes.remove( attribute );
			delete wireframeAttributes[ geometry.id ];

		}

		attribute = wireframeAttributes[ buffergeometry.id ];

		if ( attribute ) {

			attributes.remove( attribute );
			delete wireframeAttributes[ buffergeometry.id ];

		}

		//

		infoMemory.geometries --;

	}

	function get( object, geometry ) {

		var buffergeometry = geometries[ geometry.id ];

		if ( buffergeometry ) return buffergeometry;

		geometry.addEventListener( 'dispose', onGeometryDispose );

		if ( geometry.isBufferGeometry ) {

			buffergeometry = geometry;

		} else if ( geometry.isGeometry ) {

			if ( geometry._bufferGeometry === undefined ) {

				geometry._bufferGeometry = new BufferGeometry().setFromObject( object );

			}

			buffergeometry = geometry._bufferGeometry;

		}

		geometries[ geometry.id ] = buffergeometry;

		infoMemory.geometries ++;

		return buffergeometry;

	}

	function update( geometry ) {

		var index = geometry.index;
		var geometryAttributes = geometry.attributes;

		if ( index !== null ) {

			attributes.update( index, gl.ELEMENT_ARRAY_BUFFER );

		}

		for ( var name in geometryAttributes ) {

			attributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );

		}

		// morph targets

		var morphAttributes = geometry.morphAttributes;

		for ( var name in morphAttributes ) {

			var array = morphAttributes[ name ];

			for ( var i = 0, l = array.length; i < l; i ++ ) {

				attributes.update( array[ i ], gl.ARRAY_BUFFER );

			}

		}

	}

	function getWireframeAttribute( geometry ) {

		var attribute = wireframeAttributes[ geometry.id ];

		if ( attribute ) return attribute;

		var indices = [];

		var geometryIndex = geometry.index;
		var geometryAttributes = geometry.attributes;

		// console.time( 'wireframe' );

		if ( geometryIndex !== null ) {

			var array = geometryIndex.array;

			for ( var i = 0, l = array.length; i < l; i += 3 ) {

				var a = array[ i + 0 ];
				var b = array[ i + 1 ];
				var c = array[ i + 2 ];

				indices.push( a, b, b, c, c, a );

			}

		} else {

			var array = geometryAttributes.position.array;

			for ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {

				var a = i + 0;
				var b = i + 1;
				var c = i + 2;

				indices.push( a, b, b, c, c, a );

			}

		}

		// console.timeEnd( 'wireframe' );

		attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );

		attributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );

		wireframeAttributes[ geometry.id ] = attribute;

		return attribute;

	}

	return {

		get: get,
		update: update,

		getWireframeAttribute: getWireframeAttribute

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLLights() {

	var lights = {};

	return {

		get: function ( light ) {

			if ( lights[ light.id ] !== undefined ) {

				return lights[ light.id ];

			}

			var uniforms;

			switch ( light.type ) {

				case 'DirectionalLight':
					uniforms = {
						direction: new Vector3(),
						color: new Color(),

						shadow: false,
						shadowBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'SpotLight':
					uniforms = {
						position: new Vector3(),
						direction: new Vector3(),
						color: new Color(),
						distance: 0,
						coneCos: 0,
						penumbraCos: 0,
						decay: 0,

						shadow: false,
						shadowBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'PointLight':
					uniforms = {
						position: new Vector3(),
						color: new Color(),
						distance: 0,
						decay: 0,

						shadow: false,
						shadowBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'HemisphereLight':
					uniforms = {
						direction: new Vector3(),
						skyColor: new Color(),
						groundColor: new Color()
					};
					break;

				case 'RectAreaLight':
					uniforms = {
						color: new Color(),
						position: new Vector3(),
						halfWidth: new Vector3(),
						halfHeight: new Vector3()
						// TODO (abelnation): set RectAreaLight shadow uniforms
					};
					break;

			}

			lights[ light.id ] = uniforms;

			return uniforms;

		}

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLObjects( gl, geometries, infoRender ) {

	var updateList = {};

	function update( object ) {

		var frame = infoRender.frame;

		var geometry = object.geometry;
		var buffergeometry = geometries.get( object, geometry );

		// Update once per frame

		if ( updateList[ buffergeometry.id ] !== frame ) {

			if ( geometry.isGeometry ) {

				buffergeometry.updateFromObject( object );

			}

			geometries.update( buffergeometry );

			updateList[ buffergeometry.id ] = frame;

		}

		return buffergeometry;

	}

	function clear() {

		updateList = {};

	}

	return {

		update: update,
		clear: clear

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function addLineNumbers( string ) {

	var lines = string.split( '\n' );

	for ( var i = 0; i < lines.length; i ++ ) {

		lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];

	}

	return lines.join( '\n' );

}

function WebGLShader( gl, type, string ) {

	var shader = gl.createShader( type );

	gl.shaderSource( shader, string );
	gl.compileShader( shader );

	if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {

		console.error( 'THREE.WebGLShader: Shader couldn\'t compile.' );

	}

	if ( gl.getShaderInfoLog( shader ) !== '' ) {

		console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );

	}

	// --enable-privileged-webgl-extension
	// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );

	return shader;

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

var programIdCount = 0;

function getEncodingComponents( encoding ) {

	switch ( encoding ) {

		case LinearEncoding:
			return [ 'Linear','( value )' ];
		case sRGBEncoding:
			return [ 'sRGB','( value )' ];
		case RGBEEncoding:
			return [ 'RGBE','( value )' ];
		case RGBM7Encoding:
			return [ 'RGBM','( value, 7.0 )' ];
		case RGBM16Encoding:
			return [ 'RGBM','( value, 16.0 )' ];
		case RGBDEncoding:
			return [ 'RGBD','( value, 256.0 )' ];
		case GammaEncoding:
			return [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];
		default:
			throw new Error( 'unsupported encoding: ' + encoding );

	}

}

function getTexelDecodingFunction( functionName, encoding ) {

	var components = getEncodingComponents( encoding );
	return "vec4 " + functionName + "( vec4 value ) { return " + components[ 0 ] + "ToLinear" + components[ 1 ] + "; }";

}

function getTexelEncodingFunction( functionName, encoding ) {

	var components = getEncodingComponents( encoding );
	return "vec4 " + functionName + "( vec4 value ) { return LinearTo" + components[ 0 ] + components[ 1 ] + "; }";

}

function getToneMappingFunction( functionName, toneMapping ) {

	var toneMappingName;

	switch ( toneMapping ) {

		case LinearToneMapping:
			toneMappingName = "Linear";
			break;

		case ReinhardToneMapping:
			toneMappingName = "Reinhard";
			break;

		case Uncharted2ToneMapping:
			toneMappingName = "Uncharted2";
			break;

		case CineonToneMapping:
			toneMappingName = "OptimizedCineon";
			break;

		default:
			throw new Error( 'unsupported toneMapping: ' + toneMapping );

	}

	return "vec3 " + functionName + "( vec3 color ) { return " + toneMappingName + "ToneMapping( color ); }";

}

function generateExtensions( extensions, parameters, rendererExtensions ) {

	extensions = extensions || {};

	var chunks = [
		( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',
		( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',
		( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',
		( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''
	];

	return chunks.filter( filterEmptyLine ).join( '\n' );

}

function generateDefines( defines ) {

	var chunks = [];

	for ( var name in defines ) {

		var value = defines[ name ];

		if ( value === false ) continue;

		chunks.push( '#define ' + name + ' ' + value );

	}

	return chunks.join( '\n' );

}

function fetchAttributeLocations( gl, program, identifiers ) {

	var attributes = {};

	var n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );

	for ( var i = 0; i < n; i ++ ) {

		var info = gl.getActiveAttrib( program, i );
		var name = info.name;

		// console.log("THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:", name, i );

		attributes[ name ] = gl.getAttribLocation( program, name );

	}

	return attributes;

}

function filterEmptyLine( string ) {

	return string !== '';

}

function replaceLightNums( string, parameters ) {

	return string
		.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )
		.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )
		.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )
		.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )
		.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );

}

function parseIncludes( string ) {

	var pattern = /^\s*#include +<([\w\d.]+)>/gm;

	function replace( match, include ) {

		var replace = ShaderChunk[ include ];

		if ( replace === undefined ) {

			throw new Error( 'Can not resolve #include <' + include + '>' );

		}

		return parseIncludes( replace );

	}

	return string.replace( pattern, replace );

}

function unrollLoops( string ) {

	var pattern = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;

	function replace( match, start, end, snippet ) {

		var unroll = '';

		for ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {

			unroll += snippet.replace( /\[ i \]/g, '[ ' + i + ' ]' );

		}

		return unroll;

	}

	return string.replace( pattern, replace );

}

function WebGLProgram( renderer, code, material, parameters ) {

	var gl = renderer.context;

	var extensions = material.extensions;
	var defines = material.defines;

	var vertexShader = material.__webglShader.vertexShader;
	var fragmentShader = material.__webglShader.fragmentShader;

	var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';

	if ( parameters.shadowMapType === PCFShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';

	} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';

	}

	var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
	var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';
	var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';

	if ( parameters.envMap ) {

		switch ( material.envMap.mapping ) {

			case CubeReflectionMapping:
			case CubeRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
				break;

			case CubeUVReflectionMapping:
			case CubeUVRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';
				break;

			case EquirectangularReflectionMapping:
			case EquirectangularRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';
				break;

			case SphericalReflectionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';
				break;

		}

		switch ( material.envMap.mapping ) {

			case CubeRefractionMapping:
			case EquirectangularRefractionMapping:
				envMapModeDefine = 'ENVMAP_MODE_REFRACTION';
				break;

		}

		switch ( material.combine ) {

			case MultiplyOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
				break;

			case MixOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';
				break;

			case AddOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';
				break;

		}

	}

	var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;

	// console.log( 'building new program ' );

	//

	var customExtensions = generateExtensions( extensions, parameters, renderer.extensions );

	var customDefines = generateDefines( defines );

	//

	var program = gl.createProgram();

	var prefixVertex, prefixFragment;

	if ( material.isRawShaderMaterial ) {

		prefixVertex = [

			customDefines,

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

		prefixFragment = [

			customExtensions,
			customDefines,

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

	} else {

		prefixVertex = [

			'precision ' + parameters.precision + ' float;',
			'precision ' + parameters.precision + ' int;',

			'#define SHADER_NAME ' + material.__webglShader.name,

			customDefines,

			parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',

			'#define GAMMA_FACTOR ' + gammaFactorDefine,

			'#define MAX_BONES ' + parameters.maxBones,
			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',
			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
			parameters.vertexColors ? '#define USE_COLOR' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.skinning ? '#define USE_SKINNING' : '',
			parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',

			parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',
			parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',
			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			parameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			'uniform mat4 modelMatrix;',
			'uniform mat4 modelViewMatrix;',
			'uniform mat4 projectionMatrix;',
			'uniform mat4 viewMatrix;',
			'uniform mat3 normalMatrix;',
			'uniform vec3 cameraPosition;',

			'attribute vec3 position;',
			'attribute vec3 normal;',
			'attribute vec2 uv;',

			'#ifdef USE_COLOR',

			'	attribute vec3 color;',

			'#endif',

			'#ifdef USE_MORPHTARGETS',

			'	attribute vec3 morphTarget0;',
			'	attribute vec3 morphTarget1;',
			'	attribute vec3 morphTarget2;',
			'	attribute vec3 morphTarget3;',

			'	#ifdef USE_MORPHNORMALS',

			'		attribute vec3 morphNormal0;',
			'		attribute vec3 morphNormal1;',
			'		attribute vec3 morphNormal2;',
			'		attribute vec3 morphNormal3;',

			'	#else',

			'		attribute vec3 morphTarget4;',
			'		attribute vec3 morphTarget5;',
			'		attribute vec3 morphTarget6;',
			'		attribute vec3 morphTarget7;',

			'	#endif',

			'#endif',

			'#ifdef USE_SKINNING',

			'	attribute vec4 skinIndex;',
			'	attribute vec4 skinWeight;',

			'#endif',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

		prefixFragment = [

			customExtensions,

			'precision ' + parameters.precision + ' float;',
			'precision ' + parameters.precision + ' int;',

			'#define SHADER_NAME ' + material.__webglShader.name,

			customDefines,

			parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',

			'#define GAMMA_FACTOR ' + gammaFactorDefine,

			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapTypeDefine : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.envMap ? '#define ' + envMapBlendingDefine : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
			parameters.vertexColors ? '#define USE_COLOR' : '',

			parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,
			'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : '',

			parameters.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			parameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			parameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',

			'uniform mat4 viewMatrix;',
			'uniform vec3 cameraPosition;',

			( parameters.toneMapping !== NoToneMapping ) ? "#define TONE_MAPPING" : '',
			( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below
			( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( "toneMapping", parameters.toneMapping ) : '',

			( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below
			parameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',
			parameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',
			parameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',
			parameters.outputEncoding ? getTexelEncodingFunction( "linearToOutputTexel", parameters.outputEncoding ) : '',

			parameters.depthPacking ? "#define DEPTH_PACKING " + material.depthPacking : '',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

	}

	vertexShader = parseIncludes( vertexShader, parameters );
	vertexShader = replaceLightNums( vertexShader, parameters );

	fragmentShader = parseIncludes( fragmentShader, parameters );
	fragmentShader = replaceLightNums( fragmentShader, parameters );

	if ( ! material.isShaderMaterial ) {

		vertexShader = unrollLoops( vertexShader );
		fragmentShader = unrollLoops( fragmentShader );

	}

	var vertexGlsl = prefixVertex + vertexShader;
	var fragmentGlsl = prefixFragment + fragmentShader;

	// console.log( '*VERTEX*', vertexGlsl );
	// console.log( '*FRAGMENT*', fragmentGlsl );

	var glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );
	var glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );

	gl.attachShader( program, glVertexShader );
	gl.attachShader( program, glFragmentShader );

	// Force a particular attribute to index 0.

	if ( material.index0AttributeName !== undefined ) {

		gl.bindAttribLocation( program, 0, material.index0AttributeName );

	} else if ( parameters.morphTargets === true ) {

		// programs with morphTargets displace position out of attribute 0
		gl.bindAttribLocation( program, 0, 'position' );

	}

	gl.linkProgram( program );

	var programLog = gl.getProgramInfoLog( program );
	var vertexLog = gl.getShaderInfoLog( glVertexShader );
	var fragmentLog = gl.getShaderInfoLog( glFragmentShader );

	var runnable = true;
	var haveDiagnostics = true;

	// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );
	// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );

	if ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {

		runnable = false;

		console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );

	} else if ( programLog !== '' ) {

		console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );

	} else if ( vertexLog === '' || fragmentLog === '' ) {

		haveDiagnostics = false;

	}

	if ( haveDiagnostics ) {

		this.diagnostics = {

			runnable: runnable,
			material: material,

			programLog: programLog,

			vertexShader: {

				log: vertexLog,
				prefix: prefixVertex

			},

			fragmentShader: {

				log: fragmentLog,
				prefix: prefixFragment

			}

		};

	}

	// clean up

	gl.deleteShader( glVertexShader );
	gl.deleteShader( glFragmentShader );

	// set up caching for uniform locations

	var cachedUniforms;

	this.getUniforms = function() {

		if ( cachedUniforms === undefined ) {

			cachedUniforms =
				new WebGLUniforms( gl, program, renderer );

		}

		return cachedUniforms;

	};

	// set up caching for attribute locations

	var cachedAttributes;

	this.getAttributes = function() {

		if ( cachedAttributes === undefined ) {

			cachedAttributes = fetchAttributeLocations( gl, program );

		}

		return cachedAttributes;

	};

	// free resource

	this.destroy = function() {

		gl.deleteProgram( program );
		this.program = undefined;

	};

	// DEPRECATED

	Object.defineProperties( this, {

		uniforms: {
			get: function() {

				console.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );
				return this.getUniforms();

			}
		},

		attributes: {
			get: function() {

				console.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );
				return this.getAttributes();

			}
		}

	} );


	//

	this.id = programIdCount ++;
	this.code = code;
	this.usedTimes = 1;
	this.program = program;
	this.vertexShader = glVertexShader;
	this.fragmentShader = glFragmentShader;

	return this;

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLPrograms( renderer, capabilities ) {

	var programs = [];

	var shaderIDs = {
		MeshDepthMaterial: 'depth',
		MeshNormalMaterial: 'normal',
		MeshBasicMaterial: 'basic',
		MeshLambertMaterial: 'lambert',
		MeshPhongMaterial: 'phong',
		MeshToonMaterial: 'phong',
		MeshStandardMaterial: 'physical',
		MeshPhysicalMaterial: 'physical',
		LineBasicMaterial: 'basic',
		LineDashedMaterial: 'dashed',
		PointsMaterial: 'points'
	};

	var parameterNames = [
		"precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding",
		"lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap",
		"roughnessMap", "metalnessMap", "gradientMap",
		"alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp",
		"flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning",
		"maxBones", "useVertexTexture", "morphTargets", "morphNormals",
		"maxMorphTargets", "maxMorphNormals", "premultipliedAlpha",
		"numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights",
		"shadowMapEnabled", "shadowMapType", "toneMapping", 'physicallyCorrectLights',
		"alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking"
	];


	function allocateBones( object ) {

		var skeleton = object.skeleton;
		var bones = skeleton.bones;

		if ( capabilities.floatVertexTextures ) {

			return 1024;

		} else {

			// default for when object is not specified
			// ( for example when prebuilding shader to be used with multiple objects )
			//
			//  - leave some extra space for other uniforms
			//  - limit here is ANGLE's 254 max uniform vectors
			//    (up to 54 should be safe)

			var nVertexUniforms = capabilities.maxVertexUniforms;
			var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );

			var maxBones = Math.min( nVertexMatrices, bones.length );

			if ( maxBones < bones.length ) {

				console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );
				return 0;

			}

			return maxBones;

		}

	}

	function getTextureEncodingFromMap( map, gammaOverrideLinear ) {

		var encoding;

		if ( ! map ) {

			encoding = LinearEncoding;

		} else if ( map.isTexture ) {

			encoding = map.encoding;

		} else if ( map.isWebGLRenderTarget ) {

			console.warn( "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead." );
			encoding = map.texture.encoding;

		}

		// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.
		if ( encoding === LinearEncoding && gammaOverrideLinear ) {

			encoding = GammaEncoding;

		}

		return encoding;

	}

	this.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {

		var shaderID = shaderIDs[ material.type ];

		// heuristics to create shader parameters according to lights in the scene
		// (not to blow over maxLights budget)

		var maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;
		var precision = renderer.getPrecision();

		if ( material.precision !== null ) {

			precision = capabilities.getMaxPrecision( material.precision );

			if ( precision !== material.precision ) {

				console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );

			}

		}

		var currentRenderTarget = renderer.getRenderTarget();

		var parameters = {

			shaderID: shaderID,

			precision: precision,
			supportsVertexTextures: capabilities.vertexTextures,
			outputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),
			map: !! material.map,
			mapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),
			envMap: !! material.envMap,
			envMapMode: material.envMap && material.envMap.mapping,
			envMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),
			envMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),
			lightMap: !! material.lightMap,
			aoMap: !! material.aoMap,
			emissiveMap: !! material.emissiveMap,
			emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),
			bumpMap: !! material.bumpMap,
			normalMap: !! material.normalMap,
			displacementMap: !! material.displacementMap,
			roughnessMap: !! material.roughnessMap,
			metalnessMap: !! material.metalnessMap,
			specularMap: !! material.specularMap,
			alphaMap: !! material.alphaMap,

			gradientMap: !! material.gradientMap,

			combine: material.combine,

			vertexColors: material.vertexColors,

			fog: !! fog,
			useFog: material.fog,
			fogExp: ( fog && fog.isFogExp2 ),

			flatShading: material.shading === FlatShading,

			sizeAttenuation: material.sizeAttenuation,
			logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,

			skinning: material.skinning && maxBones > 0,
			maxBones: maxBones,
			useVertexTexture: capabilities.floatVertexTextures,

			morphTargets: material.morphTargets,
			morphNormals: material.morphNormals,
			maxMorphTargets: renderer.maxMorphTargets,
			maxMorphNormals: renderer.maxMorphNormals,

			numDirLights: lights.directional.length,
			numPointLights: lights.point.length,
			numSpotLights: lights.spot.length,
			numRectAreaLights: lights.rectArea.length,
			numHemiLights: lights.hemi.length,

			numClippingPlanes: nClipPlanes,
			numClipIntersection: nClipIntersection,

			shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,
			shadowMapType: renderer.shadowMap.type,

			toneMapping: renderer.toneMapping,
			physicallyCorrectLights: renderer.physicallyCorrectLights,

			premultipliedAlpha: material.premultipliedAlpha,

			alphaTest: material.alphaTest,
			doubleSided: material.side === DoubleSide,
			flipSided: material.side === BackSide,

			depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false

		};

		return parameters;

	};

	this.getProgramCode = function ( material, parameters ) {

		var array = [];

		if ( parameters.shaderID ) {

			array.push( parameters.shaderID );

		} else {

			array.push( material.fragmentShader );
			array.push( material.vertexShader );

		}

		if ( material.defines !== undefined ) {

			for ( var name in material.defines ) {

				array.push( name );
				array.push( material.defines[ name ] );

			}

		}

		for ( var i = 0; i < parameterNames.length; i ++ ) {

			array.push( parameters[ parameterNames[ i ] ] );

		}

		return array.join();

	};

	this.acquireProgram = function ( material, parameters, code ) {

		var program;

		// Check if code has been already compiled
		for ( var p = 0, pl = programs.length; p < pl; p ++ ) {

			var programInfo = programs[ p ];

			if ( programInfo.code === code ) {

				program = programInfo;
				++ program.usedTimes;

				break;

			}

		}

		if ( program === undefined ) {

			program = new WebGLProgram( renderer, code, material, parameters );
			programs.push( program );

		}

		return program;

	};

	this.releaseProgram = function ( program ) {

		if ( -- program.usedTimes === 0 ) {

			// Remove from unordered set
			var i = programs.indexOf( program );
			programs[ i ] = programs[ programs.length - 1 ];
			programs.pop();

			// Free WebGL resources
			program.destroy();

		}

	};

	// Exposed for resource monitoring & error feedback via renderer.info:
	this.programs = programs;

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, infoMemory ) {

	var _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );

	//

	function clampToMaxSize( image, maxSize ) {

		if ( image.width > maxSize || image.height > maxSize ) {

			// Warning: Scaling through the canvas will only work with images that use
			// premultiplied alpha.

			var scale = maxSize / Math.max( image.width, image.height );

			var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
			canvas.width = Math.floor( image.width * scale );
			canvas.height = Math.floor( image.height * scale );

			var context = canvas.getContext( '2d' );
			context.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );

			console.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );

			return canvas;

		}

		return image;

	}

	function isPowerOfTwo( image ) {

		return _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );

	}

	function makePowerOfTwo( image ) {

		if ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {

			var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
			canvas.width = _Math.nearestPowerOfTwo( image.width );
			canvas.height = _Math.nearestPowerOfTwo( image.height );

			var context = canvas.getContext( '2d' );
			context.drawImage( image, 0, 0, canvas.width, canvas.height );

			console.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );

			return canvas;

		}

		return image;

	}

	function textureNeedsPowerOfTwo( texture ) {

		return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||
			( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );

	}

	// Fallback filters for non-power-of-2 textures

	function filterFallback( f ) {

		if ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {

			return _gl.NEAREST;

		}

		return _gl.LINEAR;

	}

	//

	function onTextureDispose( event ) {

		var texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		deallocateTexture( texture );

		infoMemory.textures --;


	}

	function onRenderTargetDispose( event ) {

		var renderTarget = event.target;

		renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );

		deallocateRenderTarget( renderTarget );

		infoMemory.textures --;

	}

	//

	function deallocateTexture( texture ) {

		var textureProperties = properties.get( texture );

		if ( texture.image && textureProperties.__image__webglTextureCube ) {

			// cube texture

			_gl.deleteTexture( textureProperties.__image__webglTextureCube );

		} else {

			// 2D texture

			if ( textureProperties.__webglInit === undefined ) return;

			_gl.deleteTexture( textureProperties.__webglTexture );

		}

		// remove all webgl properties
		properties.remove( texture );

	}

	function deallocateRenderTarget( renderTarget ) {

		var renderTargetProperties = properties.get( renderTarget );
		var textureProperties = properties.get( renderTarget.texture );

		if ( ! renderTarget ) return;

		if ( textureProperties.__webglTexture !== undefined ) {

			_gl.deleteTexture( textureProperties.__webglTexture );

		}

		if ( renderTarget.depthTexture ) {

			renderTarget.depthTexture.dispose();

		}

		if ( renderTarget.isWebGLRenderTargetCube ) {

			for ( var i = 0; i < 6; i ++ ) {

				_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );
				if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );

			}

		} else {

			_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );
			if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );

		}

		properties.remove( renderTarget.texture );
		properties.remove( renderTarget );

	}

	//



	function setTexture2D( texture, slot ) {

		var textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			var image = texture.image;

			if ( image === undefined ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );

			} else if ( image.complete === false ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );

			} else {

				uploadTexture( textureProperties, texture, slot );
				return;

			}

		}

		state.activeTexture( _gl.TEXTURE0 + slot );
		state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );

	}

	function setTextureCube( texture, slot ) {

		var textureProperties = properties.get( texture );

		if ( texture.image.length === 6 ) {

			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

				if ( ! textureProperties.__image__webglTextureCube ) {

					texture.addEventListener( 'dispose', onTextureDispose );

					textureProperties.__image__webglTextureCube = _gl.createTexture();

					infoMemory.textures ++;

				}

				state.activeTexture( _gl.TEXTURE0 + slot );
				state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );

				_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );

				var isCompressed = ( texture && texture.isCompressedTexture );
				var isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );

				var cubeImage = [];

				for ( var i = 0; i < 6; i ++ ) {

					if ( ! isCompressed && ! isDataTexture ) {

						cubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );

					} else {

						cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];

					}

				}

				var image = cubeImage[ 0 ],
				isPowerOfTwoImage = isPowerOfTwo( image ),
				glFormat = paramThreeToGL( texture.format ),
				glType = paramThreeToGL( texture.type );

				setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );

				for ( var i = 0; i < 6; i ++ ) {

					if ( ! isCompressed ) {

						if ( isDataTexture ) {

							state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );

						} else {

							state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );

						}

					} else {

						var mipmap, mipmaps = cubeImage[ i ].mipmaps;

						for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {

							mipmap = mipmaps[ j ];

							if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

								if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {

									state.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );

								} else {

									console.warn( "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()" );

								}

							} else {

								state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

							}

						}

					}

				}

				if ( texture.generateMipmaps && isPowerOfTwoImage ) {

					_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );

				}

				textureProperties.__version = texture.version;

				if ( texture.onUpdate ) texture.onUpdate( texture );

			} else {

				state.activeTexture( _gl.TEXTURE0 + slot );
				state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );

			}

		}

	}

	function setTextureCubeDynamic( texture, slot ) {

		state.activeTexture( _gl.TEXTURE0 + slot );
		state.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );

	}

	function setTextureParameters( textureType, texture, isPowerOfTwoImage ) {

		var extension;

		if ( isPowerOfTwoImage ) {

			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );

			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );

		} else {

			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );
			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );

			if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );

			}

			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );

			if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );

			}

		}

		extension = extensions.get( 'EXT_texture_filter_anisotropic' );

		if ( extension ) {

			if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;
			if ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;

			if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {

				_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );
				properties.get( texture ).__currentAnisotropy = texture.anisotropy;

			}

		}

	}

	function uploadTexture( textureProperties, texture, slot ) {

		if ( textureProperties.__webglInit === undefined ) {

			textureProperties.__webglInit = true;

			texture.addEventListener( 'dispose', onTextureDispose );

			textureProperties.__webglTexture = _gl.createTexture();

			infoMemory.textures ++;

		}

		state.activeTexture( _gl.TEXTURE0 + slot );
		state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );

		_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );
		_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );
		_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );

		var image = clampToMaxSize( texture.image, capabilities.maxTextureSize );

		if ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {

			image = makePowerOfTwo( image );

		}

		var isPowerOfTwoImage = isPowerOfTwo( image ),
		glFormat = paramThreeToGL( texture.format ),
		glType = paramThreeToGL( texture.type );

		setTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );

		var mipmap, mipmaps = texture.mipmaps;

		if ( texture.isDepthTexture ) {

			// populate depth texture with dummy data

			var internalFormat = _gl.DEPTH_COMPONENT;

			if ( texture.type === FloatType ) {

				if ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');
				internalFormat = _gl.DEPTH_COMPONENT32F;

			} else if ( _isWebGL2 ) {

				// WebGL 2.0 requires signed internalformat for glTexImage2D
				internalFormat = _gl.DEPTH_COMPONENT16;

			}

			if ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {

				// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
				// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT
				// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
				if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {

				        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );

					texture.type = UnsignedShortType;
					glType = paramThreeToGL( texture.type );

				}

			}

			// Depth stencil textures need the DEPTH_STENCIL internal format
			// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
			if ( texture.format === DepthStencilFormat ) {

				internalFormat = _gl.DEPTH_STENCIL;

				// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
				// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
				// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
				if ( texture.type !== UnsignedInt248Type ) {

				        console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );

					texture.type = UnsignedInt248Type;
					glType = paramThreeToGL( texture.type );

				}

			}

			state.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );

		} else if ( texture.isDataTexture ) {

			// use manually created mipmaps if available
			// if there are no manual mipmaps
			// set 0 level mipmap and then use GL to generate other mipmap levels

			if ( mipmaps.length > 0 && isPowerOfTwoImage ) {

				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];
					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

				}

				texture.generateMipmaps = false;

			} else {

				state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );

			}

		} else if ( texture.isCompressedTexture ) {

			for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

				mipmap = mipmaps[ i ];

				if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

					if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {

						state.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );

					} else {

						console.warn( "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()" );

					}

				} else {

					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

				}

			}

		} else {

			// regular Texture (image, video, canvas)

			// use manually created mipmaps if available
			// if there are no manual mipmaps
			// set 0 level mipmap and then use GL to generate other mipmap levels

			if ( mipmaps.length > 0 && isPowerOfTwoImage ) {

				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];
					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );

				}

				texture.generateMipmaps = false;

			} else {

				state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );

			}

		}

		if ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );

		textureProperties.__version = texture.version;

		if ( texture.onUpdate ) texture.onUpdate( texture );

	}

	// Render targets

	// Setup storage for target texture and bind it to correct framebuffer
	function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {

		var glFormat = paramThreeToGL( renderTarget.texture.format );
		var glType = paramThreeToGL( renderTarget.texture.type );
		state.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );
		_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
		_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );
		_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );

	}

	// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
	function setupRenderBufferStorage( renderbuffer, renderTarget ) {

		_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );

		if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );
			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );

		} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );
			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );

		} else {

			// FIXME: We don't support !depth !stencil
			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );

		}

		_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );

	}

	// Setup resources for a Depth Texture for a FBO (needs an extension)
	function setupDepthTexture( framebuffer, renderTarget ) {

		var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );
		if ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');

		_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );

		if ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {

			throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');

		}

		// upload an empty depth texture with framebuffer size
		if ( !properties.get( renderTarget.depthTexture ).__webglTexture ||
				renderTarget.depthTexture.image.width !== renderTarget.width ||
				renderTarget.depthTexture.image.height !== renderTarget.height ) {
			renderTarget.depthTexture.image.width = renderTarget.width;
			renderTarget.depthTexture.image.height = renderTarget.height;
			renderTarget.depthTexture.needsUpdate = true;
		}

		setTexture2D( renderTarget.depthTexture, 0 );

		var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;

		if ( renderTarget.depthTexture.format === DepthFormat ) {

			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );

		} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {

			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );

		} else {

			throw new Error('Unknown depthTexture format')

		}

	}

	// Setup GL resources for a non-texture depth buffer
	function setupDepthRenderbuffer( renderTarget ) {

		var renderTargetProperties = properties.get( renderTarget );

		var isCube = ( renderTarget.isWebGLRenderTargetCube === true );

		if ( renderTarget.depthTexture ) {

			if ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');

			setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );

		} else {

			if ( isCube ) {

				renderTargetProperties.__webglDepthbuffer = [];

				for ( var i = 0; i < 6; i ++ ) {

					_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );
					renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();
					setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );

				}

			} else {

				_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );
				renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
				setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );

			}

		}

		_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );

	}

	// Set up GL resources for the render target
	function setupRenderTarget( renderTarget ) {

		var renderTargetProperties = properties.get( renderTarget );
		var textureProperties = properties.get( renderTarget.texture );

		renderTarget.addEventListener( 'dispose', onRenderTargetDispose );

		textureProperties.__webglTexture = _gl.createTexture();

		infoMemory.textures ++;

		var isCube = ( renderTarget.isWebGLRenderTargetCube === true );
		var isTargetPowerOfTwo = isPowerOfTwo( renderTarget );

		// Setup framebuffer

		if ( isCube ) {

			renderTargetProperties.__webglFramebuffer = [];

			for ( var i = 0; i < 6; i ++ ) {

				renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();

			}

		} else {

			renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();

		}

		// Setup color buffer

		if ( isCube ) {

			state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );
			setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );

			for ( var i = 0; i < 6; i ++ ) {

				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );

			}

			if ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );
			state.bindTexture( _gl.TEXTURE_CUBE_MAP, null );

		} else {

			state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );
			setTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );
			setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );

			if ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );
			state.bindTexture( _gl.TEXTURE_2D, null );

		}

		// Setup depth and stencil buffers

		if ( renderTarget.depthBuffer ) {

			setupDepthRenderbuffer( renderTarget );

		}

	}

	function updateRenderTargetMipmap( renderTarget ) {

		var texture = renderTarget.texture;

		if ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&
				texture.minFilter !== NearestFilter &&
				texture.minFilter !== LinearFilter ) {

			var target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;
			var webglTexture = properties.get( texture ).__webglTexture;

			state.bindTexture( target, webglTexture );
			_gl.generateMipmap( target );
			state.bindTexture( target, null );

		}

	}

	this.setTexture2D = setTexture2D;
	this.setTextureCube = setTextureCube;
	this.setTextureCubeDynamic = setTextureCubeDynamic;
	this.setupRenderTarget = setupRenderTarget;
	this.updateRenderTargetMipmap = updateRenderTargetMipmap;

}

/**
 * @author fordacious / fordacious.github.io
 */

function WebGLProperties() {

	var properties = {};

	function get( object ) {

		var uuid = object.uuid;
		var map = properties[ uuid ];

		if ( map === undefined ) {

			map = {};
			properties[ uuid ] = map;

		}

		return map;

	}

	function remove( object ) {

		delete properties[ object.uuid ];

	}

	function clear() {

		properties = {};

	}

	return {
		get: get,
		remove: remove,
		clear: clear
	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLState( gl, extensions, paramThreeToGL ) {

	function ColorBuffer() {

		var locked = false;

		var color = new Vector4();
		var currentColorMask = null;
		var currentColorClear = new Vector4();

		return {

			setMask: function ( colorMask ) {

				if ( currentColorMask !== colorMask && ! locked ) {

					gl.colorMask( colorMask, colorMask, colorMask, colorMask );
					currentColorMask = colorMask;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( r, g, b, a, premultipliedAlpha ) {

				if ( premultipliedAlpha === true ) {

					r *= a; g *= a; b *= a;

				}

				color.set( r, g, b, a );

				if ( currentColorClear.equals( color ) === false ) {

					gl.clearColor( r, g, b, a );
					currentColorClear.copy( color );

				}

			},

			reset: function () {

				locked = false;

				currentColorMask = null;
				currentColorClear.set( 0, 0, 0, 1 );

			}

		};

	}

	function DepthBuffer() {

		var locked = false;

		var currentDepthMask = null;
		var currentDepthFunc = null;
		var currentDepthClear = null;

		return {

			setTest: function ( depthTest ) {

				if ( depthTest ) {

					enable( gl.DEPTH_TEST );

				} else {

					disable( gl.DEPTH_TEST );

				}

			},

			setMask: function ( depthMask ) {

				if ( currentDepthMask !== depthMask && ! locked ) {

					gl.depthMask( depthMask );
					currentDepthMask = depthMask;

				}

			},

			setFunc: function ( depthFunc ) {

				if ( currentDepthFunc !== depthFunc ) {

					if ( depthFunc ) {

						switch ( depthFunc ) {

							case NeverDepth:

								gl.depthFunc( gl.NEVER );
								break;

							case AlwaysDepth:

								gl.depthFunc( gl.ALWAYS );
								break;

							case LessDepth:

								gl.depthFunc( gl.LESS );
								break;

							case LessEqualDepth:

								gl.depthFunc( gl.LEQUAL );
								break;

							case EqualDepth:

								gl.depthFunc( gl.EQUAL );
								break;

							case GreaterEqualDepth:

								gl.depthFunc( gl.GEQUAL );
								break;

							case GreaterDepth:

								gl.depthFunc( gl.GREATER );
								break;

							case NotEqualDepth:

								gl.depthFunc( gl.NOTEQUAL );
								break;

							default:

								gl.depthFunc( gl.LEQUAL );

						}

					} else {

						gl.depthFunc( gl.LEQUAL );

					}

					currentDepthFunc = depthFunc;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( depth ) {

				if ( currentDepthClear !== depth ) {

					gl.clearDepth( depth );
					currentDepthClear = depth;

				}

			},

			reset: function () {

				locked = false;

				currentDepthMask = null;
				currentDepthFunc = null;
				currentDepthClear = null;

			}

		};

	}

	function StencilBuffer() {

		var locked = false;

		var currentStencilMask = null;
		var currentStencilFunc = null;
		var currentStencilRef = null;
		var currentStencilFuncMask = null;
		var currentStencilFail = null;
		var currentStencilZFail = null;
		var currentStencilZPass = null;
		var currentStencilClear = null;

		return {

			setTest: function ( stencilTest ) {

				if ( stencilTest ) {

					enable( gl.STENCIL_TEST );

				} else {

					disable( gl.STENCIL_TEST );

				}

			},

			setMask: function ( stencilMask ) {

				if ( currentStencilMask !== stencilMask && ! locked ) {

					gl.stencilMask( stencilMask );
					currentStencilMask = stencilMask;

				}

			},

			setFunc: function ( stencilFunc, stencilRef, stencilMask ) {

				if ( currentStencilFunc !== stencilFunc ||
				     currentStencilRef 	!== stencilRef 	||
				     currentStencilFuncMask !== stencilMask ) {

					gl.stencilFunc( stencilFunc, stencilRef, stencilMask );

					currentStencilFunc = stencilFunc;
					currentStencilRef = stencilRef;
					currentStencilFuncMask = stencilMask;

				}

			},

			setOp: function ( stencilFail, stencilZFail, stencilZPass ) {

				if ( currentStencilFail	 !== stencilFail 	||
				     currentStencilZFail !== stencilZFail ||
				     currentStencilZPass !== stencilZPass ) {

					gl.stencilOp( stencilFail, stencilZFail, stencilZPass );

					currentStencilFail = stencilFail;
					currentStencilZFail = stencilZFail;
					currentStencilZPass = stencilZPass;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( stencil ) {

				if ( currentStencilClear !== stencil ) {

					gl.clearStencil( stencil );
					currentStencilClear = stencil;

				}

			},

			reset: function () {

				locked = false;

				currentStencilMask = null;
				currentStencilFunc = null;
				currentStencilRef = null;
				currentStencilFuncMask = null;
				currentStencilFail = null;
				currentStencilZFail = null;
				currentStencilZPass = null;
				currentStencilClear = null;

			}

		};

	}

	//

	var colorBuffer = new ColorBuffer();
	var depthBuffer = new DepthBuffer();
	var stencilBuffer = new StencilBuffer();

	var maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );
	var newAttributes = new Uint8Array( maxVertexAttributes );
	var enabledAttributes = new Uint8Array( maxVertexAttributes );
	var attributeDivisors = new Uint8Array( maxVertexAttributes );

	var capabilities = {};

	var compressedTextureFormats = null;

	var currentBlending = null;
	var currentBlendEquation = null;
	var currentBlendSrc = null;
	var currentBlendDst = null;
	var currentBlendEquationAlpha = null;
	var currentBlendSrcAlpha = null;
	var currentBlendDstAlpha = null;
	var currentPremultipledAlpha = false;

	var currentFlipSided = null;
	var currentCullFace = null;

	var currentLineWidth = null;

	var currentPolygonOffsetFactor = null;
	var currentPolygonOffsetUnits = null;

	var currentScissorTest = null;

	var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );

	var version = parseFloat( /^WebGL\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );
	var lineWidthAvailable = parseFloat( version ) >= 1.0;

	var currentTextureSlot = null;
	var currentBoundTextures = {};

	var currentScissor = new Vector4();
	var currentViewport = new Vector4();

	function createTexture( type, target, count ) {

		var data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.
		var texture = gl.createTexture();

		gl.bindTexture( type, texture );
		gl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );
		gl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );

		for ( var i = 0; i < count; i ++ ) {

			gl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );

		}

		return texture;

	}

	var emptyTextures = {};
	emptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );
	emptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );

	//

	function init() {

		colorBuffer.setClear( 0, 0, 0, 1 );
		depthBuffer.setClear( 1 );
		stencilBuffer.setClear( 0 );

		enable( gl.DEPTH_TEST );
		depthBuffer.setFunc( LessEqualDepth );

		setFlipSided( false );
		setCullFace( CullFaceBack );
		enable( gl.CULL_FACE );

		enable( gl.BLEND );
		setBlending( NormalBlending );

	}

	function initAttributes() {

		for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {

			newAttributes[ i ] = 0;

		}

	}

	function enableAttribute( attribute ) {

		newAttributes[ attribute ] = 1;

		if ( enabledAttributes[ attribute ] === 0 ) {

			gl.enableVertexAttribArray( attribute );
			enabledAttributes[ attribute ] = 1;

		}

		if ( attributeDivisors[ attribute ] !== 0 ) {

			var extension = extensions.get( 'ANGLE_instanced_arrays' );

			extension.vertexAttribDivisorANGLE( attribute, 0 );
			attributeDivisors[ attribute ] = 0;

		}

	}

	function enableAttributeAndDivisor( attribute, meshPerAttribute ) {

		newAttributes[ attribute ] = 1;

		if ( enabledAttributes[ attribute ] === 0 ) {

			gl.enableVertexAttribArray( attribute );
			enabledAttributes[ attribute ] = 1;

		}

		if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {

			var extension = extensions.get( 'ANGLE_instanced_arrays' );

			extension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );
			attributeDivisors[ attribute ] = meshPerAttribute;

		}

	}

	function disableUnusedAttributes() {

		for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {

			if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {

				gl.disableVertexAttribArray( i );
				enabledAttributes[ i ] = 0;

			}

		}

	}

	function enable( id ) {

		if ( capabilities[ id ] !== true ) {

			gl.enable( id );
			capabilities[ id ] = true;

		}

	}

	function disable( id ) {

		if ( capabilities[ id ] !== false ) {

			gl.disable( id );
			capabilities[ id ] = false;

		}

	}

	function getCompressedTextureFormats() {

		if ( compressedTextureFormats === null ) {

			compressedTextureFormats = [];

			if ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||
			     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||
			     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {

				var formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );

				for ( var i = 0; i < formats.length; i ++ ) {

					compressedTextureFormats.push( formats[ i ] );

				}

			}

		}

		return compressedTextureFormats;

	}

	function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {

		if ( blending !== NoBlending ) {

			enable( gl.BLEND );

		} else {

			disable( gl.BLEND );

		}

		if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {

			if ( blending === AdditiveBlending ) {

				if ( premultipliedAlpha ) {

					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
					gl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );

				} else {

					gl.blendEquation( gl.FUNC_ADD );
					gl.blendFunc( gl.SRC_ALPHA, gl.ONE );

				}

			} else if ( blending === SubtractiveBlending ) {

				if ( premultipliedAlpha ) {

					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
					gl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );

				} else {

					gl.blendEquation( gl.FUNC_ADD );
					gl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );

				}

			} else if ( blending === MultiplyBlending ) {

				if ( premultipliedAlpha ) {

					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
					gl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );

				} else {

					gl.blendEquation( gl.FUNC_ADD );
					gl.blendFunc( gl.ZERO, gl.SRC_COLOR );

				}

			} else {

				if ( premultipliedAlpha ) {

					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
					gl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );

				} else {

					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
					gl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );

				}

			}

			currentBlending = blending;
			currentPremultipledAlpha = premultipliedAlpha;

		}

		if ( blending === CustomBlending ) {

			blendEquationAlpha = blendEquationAlpha || blendEquation;
			blendSrcAlpha = blendSrcAlpha || blendSrc;
			blendDstAlpha = blendDstAlpha || blendDst;

			if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {

				gl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );

				currentBlendEquation = blendEquation;
				currentBlendEquationAlpha = blendEquationAlpha;

			}

			if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {

				gl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );

				currentBlendSrc = blendSrc;
				currentBlendDst = blendDst;
				currentBlendSrcAlpha = blendSrcAlpha;
				currentBlendDstAlpha = blendDstAlpha;

			}

		} else {

			currentBlendEquation = null;
			currentBlendSrc = null;
			currentBlendDst = null;
			currentBlendEquationAlpha = null;
			currentBlendSrcAlpha = null;
			currentBlendDstAlpha = null;

		}

	}

	function setMaterial( material ) {

		material.side === DoubleSide
			? disable( gl.CULL_FACE )
			: enable( gl.CULL_FACE );

		setFlipSided( material.side === BackSide );

		material.transparent === true
			? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )
			: setBlending( NoBlending );

		depthBuffer.setFunc( material.depthFunc );
		depthBuffer.setTest( material.depthTest );
		depthBuffer.setMask( material.depthWrite );
		colorBuffer.setMask( material.colorWrite );

		setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

	}

	//

	function setFlipSided( flipSided ) {

		if ( currentFlipSided !== flipSided ) {

			if ( flipSided ) {

				gl.frontFace( gl.CW );

			} else {

				gl.frontFace( gl.CCW );

			}

			currentFlipSided = flipSided;

		}

	}

	function setCullFace( cullFace ) {

		if ( cullFace !== CullFaceNone ) {

			enable( gl.CULL_FACE );

			if ( cullFace !== currentCullFace ) {

				if ( cullFace === CullFaceBack ) {

					gl.cullFace( gl.BACK );

				} else if ( cullFace === CullFaceFront ) {

					gl.cullFace( gl.FRONT );

				} else {

					gl.cullFace( gl.FRONT_AND_BACK );

				}

			}

		} else {

			disable( gl.CULL_FACE );

		}

		currentCullFace = cullFace;

	}

	function setLineWidth( width ) {

		if ( width !== currentLineWidth ) {

			if ( lineWidthAvailable ) gl.lineWidth( width );

			currentLineWidth = width;

		}

	}

	function setPolygonOffset( polygonOffset, factor, units ) {

		if ( polygonOffset ) {

			enable( gl.POLYGON_OFFSET_FILL );

			if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {

				gl.polygonOffset( factor, units );

				currentPolygonOffsetFactor = factor;
				currentPolygonOffsetUnits = units;

			}

		} else {

			disable( gl.POLYGON_OFFSET_FILL );

		}

	}

	function getScissorTest() {

		return currentScissorTest;

	}

	function setScissorTest( scissorTest ) {

		currentScissorTest = scissorTest;

		if ( scissorTest ) {

			enable( gl.SCISSOR_TEST );

		} else {

			disable( gl.SCISSOR_TEST );

		}

	}

	// texture

	function activeTexture( webglSlot ) {

		if ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;

		if ( currentTextureSlot !== webglSlot ) {

			gl.activeTexture( webglSlot );
			currentTextureSlot = webglSlot;

		}

	}

	function bindTexture( webglType, webglTexture ) {

		if ( currentTextureSlot === null ) {

			activeTexture();

		}

		var boundTexture = currentBoundTextures[ currentTextureSlot ];

		if ( boundTexture === undefined ) {

			boundTexture = { type: undefined, texture: undefined };
			currentBoundTextures[ currentTextureSlot ] = boundTexture;

		}

		if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {

			gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );

			boundTexture.type = webglType;
			boundTexture.texture = webglTexture;

		}

	}

	function compressedTexImage2D() {

		try {

			gl.compressedTexImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( error );

		}

	}

	function texImage2D() {

		try {

			gl.texImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( error );

		}

	}

	//

	function scissor( scissor ) {

		if ( currentScissor.equals( scissor ) === false ) {

			gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );
			currentScissor.copy( scissor );

		}

	}

	function viewport( viewport ) {

		if ( currentViewport.equals( viewport ) === false ) {

			gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );
			currentViewport.copy( viewport );

		}

	}

	//

	function reset() {

		for ( var i = 0; i < enabledAttributes.length; i ++ ) {

			if ( enabledAttributes[ i ] === 1 ) {

				gl.disableVertexAttribArray( i );
				enabledAttributes[ i ] = 0;

			}

		}

		capabilities = {};

		compressedTextureFormats = null;

		currentTextureSlot = null;
		currentBoundTextures = {};

		currentBlending = null;

		currentFlipSided = null;
		currentCullFace = null;

		colorBuffer.reset();
		depthBuffer.reset();
		stencilBuffer.reset();

	}

	return {

		buffers: {
			color: colorBuffer,
			depth: depthBuffer,
			stencil: stencilBuffer
		},

		init: init,
		initAttributes: initAttributes,
		enableAttribute: enableAttribute,
		enableAttributeAndDivisor: enableAttributeAndDivisor,
		disableUnusedAttributes: disableUnusedAttributes,
		enable: enable,
		disable: disable,
		getCompressedTextureFormats: getCompressedTextureFormats,

		setBlending: setBlending,
		setMaterial: setMaterial,

		setFlipSided: setFlipSided,
		setCullFace: setCullFace,

		setLineWidth: setLineWidth,
		setPolygonOffset: setPolygonOffset,

		getScissorTest: getScissorTest,
		setScissorTest: setScissorTest,

		activeTexture: activeTexture,
		bindTexture: bindTexture,
		compressedTexImage2D: compressedTexImage2D,
		texImage2D: texImage2D,

		scissor: scissor,
		viewport: viewport,

		reset: reset

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLCapabilities( gl, extensions, parameters ) {

	var maxAnisotropy;

	function getMaxAnisotropy() {

		if ( maxAnisotropy !== undefined ) return maxAnisotropy;

		var extension = extensions.get( 'EXT_texture_filter_anisotropic' );

		if ( extension !== null ) {

			maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );

		} else {

			maxAnisotropy = 0;

		}

		return maxAnisotropy;

	}

	function getMaxPrecision( precision ) {

		if ( precision === 'highp' ) {

			if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&
			     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {

				return 'highp';

			}

			precision = 'mediump';

		}

		if ( precision === 'mediump' ) {

			if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&
			     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {

				return 'mediump';

			}

		}

		return 'lowp';

	}

	var precision = parameters.precision !== undefined ? parameters.precision : 'highp';
	var maxPrecision = getMaxPrecision( precision );

	if ( maxPrecision !== precision ) {

		console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );
		precision = maxPrecision;

	}

	var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );

	var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );
	var maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );
	var maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );
	var maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );

	var maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );
	var maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );
	var maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );
	var maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );

	var vertexTextures = maxVertexTextures > 0;
	var floatFragmentTextures = !! extensions.get( 'OES_texture_float' );
	var floatVertexTextures = vertexTextures && floatFragmentTextures;

	return {

		getMaxAnisotropy: getMaxAnisotropy,
		getMaxPrecision: getMaxPrecision,

		precision: precision,
		logarithmicDepthBuffer: logarithmicDepthBuffer,

		maxTextures: maxTextures,
		maxVertexTextures: maxVertexTextures,
		maxTextureSize: maxTextureSize,
		maxCubemapSize: maxCubemapSize,

		maxAttributes: maxAttributes,
		maxVertexUniforms: maxVertexUniforms,
		maxVaryings: maxVaryings,
		maxFragmentUniforms: maxFragmentUniforms,

		vertexTextures: vertexTextures,
		floatFragmentTextures: floatFragmentTextures,
		floatVertexTextures: floatVertexTextures

	};

}

/**
 * @author mrdoob / http://mrdoob.com/
 */

function WebGLExtensions( gl ) {

	var extensions = {};

	return {

		get: function ( name ) {

			if ( extensions[ name ] !== undefined ) {

				return extensions[ name ];

			}

			var extension;

			switch ( name ) {

				case 'WEBGL_depth_texture':
					extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );
					break;

				case 'EXT_texture_filter_anisotropic':
					extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );
					break;

				case 'WEBGL_compressed_texture_s3tc':
					extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );
					break;

				case 'WEBGL_compressed_texture_pvrtc':
					extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );
					break;

				case 'WEBGL_compressed_texture_etc1':
					extension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );
					break;

				default:
					extension = gl.getExtension( name );

			}

			if ( extension === null ) {

				console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );

			}

			extensions[ name ] = extension;

			return extension;

		}

	};

}

/**
 * @author tschw
 */

function WebGLClipping() {

	var scope = this,

		globalState = null,
		numGlobalPlanes = 0,
		localClippingEnabled = false,
		renderingShadows = false,

		plane = new Plane(),
		viewNormalMatrix = new Matrix3(),

		uniform = { value: null, needsUpdate: false };

	this.uniform = uniform;
	this.numPlanes = 0;
	this.numIntersection = 0;

	this.init = function( planes, enableLocalClipping, camera ) {

		var enabled =
			planes.length !== 0 ||
			enableLocalClipping ||
			// enable state of previous frame - the clipping code has to
			// run another frame in order to reset the state:
			numGlobalPlanes !== 0 ||
			localClippingEnabled;

		localClippingEnabled = enableLocalClipping;

		globalState = projectPlanes( planes, camera, 0 );
		numGlobalPlanes = planes.length;

		return enabled;

	};

	this.beginShadows = function() {

		renderingShadows = true;
		projectPlanes( null );

	};

	this.endShadows = function() {

		renderingShadows = false;
		resetGlobalState();

	};

	this.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {

		if ( ! localClippingEnabled ||
				planes === null || planes.length === 0 ||
				renderingShadows && ! clipShadows ) {
			// there's no local clipping

			if ( renderingShadows ) {
				// there's no global clipping

				projectPlanes( null );

			} else {

				resetGlobalState();
			}

		} else {

			var nGlobal = renderingShadows ? 0 : numGlobalPlanes,
				lGlobal = nGlobal * 4,

				dstArray = cache.clippingState || null;

			uniform.value = dstArray; // ensure unique state

			dstArray = projectPlanes( planes, camera, lGlobal, fromCache );

			for ( var i = 0; i !== lGlobal; ++ i ) {

				dstArray[ i ] = globalState[ i ];

			}

			cache.clippingState = dstArray;
			this.numIntersection = clipIntersection ? this.numPlanes : 0;
			this.numPlanes += nGlobal;

		}


	};

	function resetGlobalState() {

		if ( uniform.value !== globalState ) {

			uniform.value = globalState;
			uniform.needsUpdate = numGlobalPlanes > 0;

		}

		scope.numPlanes = numGlobalPlanes;
		scope.numIntersection = 0;

	}

	function projectPlanes( planes, camera, dstOffset, skipTransform ) {

		var nPlanes = planes !== null ? planes.length : 0,
			dstArray = null;

		if ( nPlanes !== 0 ) {

			dstArray = uniform.value;

			if ( skipTransform !== true || dstArray === null ) {

				var flatSize = dstOffset + nPlanes * 4,
					viewMatrix = camera.matrixWorldInverse;

				viewNormalMatrix.getNormalMatrix( viewMatrix );

				if ( dstArray === null || dstArray.length < flatSize ) {

					dstArray = new Float32Array( flatSize );

				}

				for ( var i = 0, i4 = dstOffset;
									i !== nPlanes; ++ i, i4 += 4 ) {

					plane.copy( planes[ i ] ).
							applyMatrix4( viewMatrix, viewNormalMatrix );

					plane.normal.toArray( dstArray, i4 );
					dstArray[ i4 + 3 ] = plane.constant;

				}

			}

			uniform.value = dstArray;
			uniform.needsUpdate = true;

		}

		scope.numPlanes = nPlanes;
		
		return dstArray;

	}

}

// import { Sphere } from '../math/Sphere';
/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 * @author tschw
 */

function WebGLRenderer( parameters ) {

	console.log( 'THREE.WebGLRenderer', REVISION );

	parameters = parameters || {};

	var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),
		_context = parameters.context !== undefined ? parameters.context : null,

		_alpha = parameters.alpha !== undefined ? parameters.alpha : false,
		_depth = parameters.depth !== undefined ? parameters.depth : true,
		_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
		_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
		_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
		_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;

	var lights = [];

	var currentRenderList = null;

	var morphInfluences = new Float32Array( 8 );

	var sprites = [];
	var lensFlares = [];

	// public properties

	this.domElement = _canvas;
	this.context = null;

	// clearing

	this.autoClear = true;
	this.autoClearColor = true;
	this.autoClearDepth = true;
	this.autoClearStencil = true;

	// scene graph

	this.sortObjects = true;

	// user-defined clipping

	this.clippingPlanes = [];
	this.localClippingEnabled = false;

	// physically based shading

	this.gammaFactor = 2.0;	// for backwards compatibility
	this.gammaInput = false;
	this.gammaOutput = false;

	// physical lights

	this.physicallyCorrectLights = false;

	// tone mapping

	this.toneMapping = LinearToneMapping;
	this.toneMappingExposure = 1.0;
	this.toneMappingWhitePoint = 1.0;

	// morphs

	this.maxMorphTargets = 8;
	this.maxMorphNormals = 4;

	// internal properties

	var _this = this,

		// internal state cache

		_currentProgram = null,
		_currentRenderTarget = null,
		_currentFramebuffer = null,
		_currentMaterialId = - 1,
		_currentGeometryProgram = '',
		_currentCamera = null,

		_currentScissor = new Vector4(),
		_currentScissorTest = null,

		_currentViewport = new Vector4(),

		//

		_usedTextureUnits = 0,

		//

		_clearColor = new Color( 0x000000 ),
		_clearAlpha = 0,

		_width = _canvas.width,
		_height = _canvas.height,

		_pixelRatio = 1,

		_scissor = new Vector4( 0, 0, _width, _height ),
		_scissorTest = false,

		_viewport = new Vector4( 0, 0, _width, _height ),

		// frustum

		_frustum = new Frustum(),

		// clipping

		_clipping = new WebGLClipping(),
		_clippingEnabled = false,
		_localClippingEnabled = false,

		// camera matrices cache

		_projScreenMatrix = new Matrix4(),

		_vector3 = new Vector3(),
		_matrix4 = new Matrix4(),
		_matrix42 = new Matrix4(),

		// light arrays cache

		_lights = {

			hash: '',

			ambient: [ 0, 0, 0 ],
			directional: [],
			directionalShadowMap: [],
			directionalShadowMatrix: [],
			spot: [],
			spotShadowMap: [],
			spotShadowMatrix: [],
			rectArea: [],
			point: [],
			pointShadowMap: [],
			pointShadowMatrix: [],
			hemi: [],

			shadows: []

		},

		// info

		_infoMemory = {
			geometries: 0,
			textures: 0
		},

		_infoRender = {

			frame: 0,
			calls: 0,
			vertices: 0,
			faces: 0,
			points: 0

		};

	this.info = {

		render: _infoRender,
		memory: _infoMemory,
		programs: null

	};


	// initialize

	var _gl;

	try {

		var contextAttributes = {
			alpha: _alpha,
			depth: _depth,
			stencil: _stencil,
			antialias: _antialias,
			premultipliedAlpha: _premultipliedAlpha,
			preserveDrawingBuffer: _preserveDrawingBuffer
		};

		_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );

		if ( _gl === null ) {

			if ( _canvas.getContext( 'webgl' ) !== null ) {

				throw 'Error creating WebGL context with your selected attributes.';

			} else {

				throw 'Error creating WebGL context.';

			}

		}

		// Some experimental-webgl implementations do not have getShaderPrecisionFormat

		if ( _gl.getShaderPrecisionFormat === undefined ) {

			_gl.getShaderPrecisionFormat = function () {

				return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };

			};

		}

		_canvas.addEventListener( 'webglcontextlost', onContextLost, false );

	} catch ( error ) {

		console.error( 'THREE.WebGLRenderer: ' + error );

	}

	var extensions = new WebGLExtensions( _gl );

	extensions.get( 'WEBGL_depth_texture' );
	extensions.get( 'OES_texture_float' );
	extensions.get( 'OES_texture_float_linear' );
	extensions.get( 'OES_texture_half_float' );
	extensions.get( 'OES_texture_half_float_linear' );
	extensions.get( 'OES_standard_derivatives' );
	extensions.get( 'ANGLE_instanced_arrays' );

	if ( extensions.get( 'OES_element_index_uint' ) ) {

		BufferGeometry.MaxIndex = 4294967296;

	}

	var capabilities = new WebGLCapabilities( _gl, extensions, parameters );

	var state = new WebGLState( _gl, extensions, paramThreeToGL );

	var properties = new WebGLProperties();
	var textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, _infoMemory );
	var attributes = new WebGLAttributes( _gl );
	var geometries = new WebGLGeometries( _gl, attributes, _infoMemory );
	var objects = new WebGLObjects( _gl, geometries, _infoRender );
	var programCache = new WebGLPrograms( this, capabilities );
	var lightCache = new WebGLLights();
	var renderLists = new WebGLRenderLists();

	this.info.programs = programCache.programs;

	var bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );
	var indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );

	//

	var backgroundPlaneCamera, backgroundPlaneMesh;
	var backgroundBoxCamera, backgroundBoxMesh;

	//

	function getTargetPixelRatio() {

		return _currentRenderTarget === null ? _pixelRatio : 1;

	}

	function setDefaultGLState() {

		state.init();

		state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );
		state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );

		state.buffers.color.setClear( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha, _premultipliedAlpha );

	}

	function resetGLState() {

		_currentProgram = null;
		_currentCamera = null;

		_currentGeometryProgram = '';
		_currentMaterialId = - 1;

		state.reset();

	}

	setDefaultGLState();

	this.context = _gl;
	this.capabilities = capabilities;
	this.extensions = extensions;
	this.properties = properties;
	this.state = state;

	// shadow map

	var shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );

	this.shadowMap = shadowMap;


	// Plugins

	var spritePlugin = new SpritePlugin( this, sprites );
	var lensFlarePlugin = new LensFlarePlugin( this, lensFlares );

	// API

	this.getContext = function () {

		return _gl;

	};

	this.getContextAttributes = function () {

		return _gl.getContextAttributes();

	};

	this.forceContextLoss = function () {

		var extension = extensions.get( 'WEBGL_lose_context' );
		if ( extension ) extension.loseContext();

	};

	this.getMaxAnisotropy = function () {

		return capabilities.getMaxAnisotropy();

	};

	this.getPrecision = function () {

		return capabilities.precision;

	};

	this.getPixelRatio = function () {

		return _pixelRatio;

	};

	this.setPixelRatio = function ( value ) {

		if ( value === undefined ) return;

		_pixelRatio = value;

		this.setSize( _viewport.z, _viewport.w, false );

	};

	this.getSize = function () {

		return {
			width: _width,
			height: _height
		};

	};

	this.setSize = function ( width, height, updateStyle ) {

		_width = width;
		_height = height;

		_canvas.width = width * _pixelRatio;
		_canvas.height = height * _pixelRatio;

		if ( updateStyle !== false ) {

			_canvas.style.width = width + 'px';
			_canvas.style.height = height + 'px';

		}

		this.setViewport( 0, 0, width, height );

	};

	this.setViewport = function ( x, y, width, height ) {

		state.viewport( _viewport.set( x, y, width, height ) );

	};

	this.setScissor = function ( x, y, width, height ) {

		state.scissor( _scissor.set( x, y, width, height ) );

	};

	this.setScissorTest = function ( boolean ) {

		state.setScissorTest( _scissorTest = boolean );

	};

	// Clearing

	this.getClearColor = function () {

		return _clearColor;

	};

	this.setClearColor = function ( color, alpha ) {

		_clearColor.set( color );

		_clearAlpha = alpha !== undefined ? alpha : 1;

		state.buffers.color.setClear( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha, _premultipliedAlpha );

	};

	this.getClearAlpha = function () {

		return _clearAlpha;

	};

	this.setClearAlpha = function ( alpha ) {

		_clearAlpha = alpha;

		state.buffers.color.setClear( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha, _premultipliedAlpha );

	};

	this.clear = function ( color, depth, stencil ) {

		var bits = 0;

		if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;
		if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;
		if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;

		_gl.clear( bits );

	};

	this.clearColor = function () {

		this.clear( true, false, false );

	};

	this.clearDepth = function () {

		this.clear( false, true, false );

	};

	this.clearStencil = function () {

		this.clear( false, false, true );

	};

	this.clearTarget = function ( renderTarget, color, depth, stencil ) {

		this.setRenderTarget( renderTarget );
		this.clear( color, depth, stencil );

	};

	// Reset

	this.resetGLState = resetGLState;

	this.dispose = function () {

		_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );

		renderLists.dispose();

	};

	// Events

	function onContextLost( event ) {

		event.preventDefault();

		resetGLState();
		setDefaultGLState();

		properties.clear();
		objects.clear();

	}

	function onMaterialDispose( event ) {

		var material = event.target;

		material.removeEventListener( 'dispose', onMaterialDispose );

		deallocateMaterial( material );

	}

	// Buffer deallocation

	function deallocateMaterial( material ) {

		releaseMaterialProgramReference( material );

		properties.remove( material );

	}


	function releaseMaterialProgramReference( material ) {

		var programInfo = properties.get( material ).program;

		material.program = undefined;

		if ( programInfo !== undefined ) {

			programCache.releaseProgram( programInfo );

		}

	}

	// Buffer rendering

	function renderObjectImmediate( object, program, material ) {

		object.render( function ( object ) {

			_this.renderBufferImmediate( object, program, material );

		} );

	}

	this.renderBufferImmediate = function ( object, program, material ) {

		state.initAttributes();

		var buffers = properties.get( object );

		if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();
		if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();
		if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();
		if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();

		var programAttributes = program.getAttributes();

		if ( object.hasPositions ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );

			state.enableAttribute( programAttributes.position );
			_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasNormals ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );

			if ( ! material.isMeshPhongMaterial &&
				! material.isMeshStandardMaterial &&
				! material.isMeshNormalMaterial &&
				material.shading === FlatShading ) {

				for ( var i = 0, l = object.count * 3; i < l; i += 9 ) {

					var array = object.normalArray;

					var nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;
					var ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;
					var nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;

					array[ i + 0 ] = nx;
					array[ i + 1 ] = ny;
					array[ i + 2 ] = nz;

					array[ i + 3 ] = nx;
					array[ i + 4 ] = ny;
					array[ i + 5 ] = nz;

					array[ i + 6 ] = nx;
					array[ i + 7 ] = ny;
					array[ i + 8 ] = nz;

				}

			}

			_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );

			state.enableAttribute( programAttributes.normal );

			_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasUvs && material.map ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );

			state.enableAttribute( programAttributes.uv );

			_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasColors && material.vertexColors !== NoColors ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );

			state.enableAttribute( programAttributes.color );

			_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );

		}

		state.disableUnusedAttributes();

		_gl.drawArrays( _gl.TRIANGLES, 0, object.count );

		object.count = 0;

	};

	this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {

		state.setMaterial( material );

		var program = setProgram( camera, fog, material, object );
		var geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );

		var updateBuffers = false;

		if ( geometryProgram !== _currentGeometryProgram ) {

			_currentGeometryProgram = geometryProgram;
			updateBuffers = true;

		}

		// morph targets

		var morphTargetInfluences = object.morphTargetInfluences;

		if ( morphTargetInfluences !== undefined ) {

			// TODO Remove allocations

			var activeInfluences = [];

			for ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {

				var influence = morphTargetInfluences[ i ];
				activeInfluences.push( [ influence, i ] );

			}

			activeInfluences.sort( absNumericalSort );

			if ( activeInfluences.length > 8 ) {

				activeInfluences.length = 8;

			}

			var morphAttributes = geometry.morphAttributes;

			for ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {

				var influence = activeInfluences[ i ];
				morphInfluences[ i ] = influence[ 0 ];

				if ( influence[ 0 ] !== 0 ) {

					var index = influence[ 1 ];

					if ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );
					if ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );

				} else {

					if ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );
					if ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );

				}

			}

			for ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {

				morphInfluences[ i ] = 0.0;

			}

			program.getUniforms().setValue( _gl, 'morphTargetInfluences', morphInfluences );

			updateBuffers = true;

		}

		//

		var index = geometry.index;
		var position = geometry.attributes.position;
		var rangeFactor = 1;

		if ( material.wireframe === true ) {

			index = geometries.getWireframeAttribute( geometry );
			rangeFactor = 2;

		}

		var renderer = bufferRenderer;

		if ( index !== null ) {

			renderer = indexedBufferRenderer;
			renderer.setIndex( index );

		}

		if ( updateBuffers ) {

			setupVertexAttributes( material, program, geometry );

			if ( index !== null ) {

				_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );

			}

		}

		//

		var dataCount = 0;

		if ( index !== null ) {

			dataCount = index.count;

		} else if ( position !== undefined ) {

			dataCount = position.count;

		}

		var rangeStart = geometry.drawRange.start * rangeFactor;
		var rangeCount = geometry.drawRange.count * rangeFactor;

		var groupStart = group !== null ? group.start * rangeFactor : 0;
		var groupCount = group !== null ? group.count * rangeFactor : Infinity;

		var drawStart = Math.max( rangeStart, groupStart );
		var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;

		var drawCount = Math.max( 0, drawEnd - drawStart + 1 );

		if ( drawCount === 0 ) return;

		//

		if ( object.isMesh ) {

			if ( material.wireframe === true ) {

				state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );
				renderer.setMode( _gl.LINES );

			} else {

				switch ( object.drawMode ) {

					case TrianglesDrawMode:
						renderer.setMode( _gl.TRIANGLES );
						break;

					case TriangleStripDrawMode:
						renderer.setMode( _gl.TRIANGLE_STRIP );
						break;

					case TriangleFanDrawMode:
						renderer.setMode( _gl.TRIANGLE_FAN );
						break;

				}

			}


		} else if ( object.isLine ) {

			var lineWidth = material.linewidth;

			if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material

			state.setLineWidth( lineWidth * getTargetPixelRatio() );

			if ( object.isLineSegments ) {

				renderer.setMode( _gl.LINES );

			} else if ( object.isLineLoop ) {

				renderer.setMode( _gl.LINE_LOOP );

			} else {

				renderer.setMode( _gl.LINE_STRIP );

			}

		} else if ( object.isPoints ) {

			renderer.setMode( _gl.POINTS );

		}

		if ( geometry && geometry.isInstancedBufferGeometry ) {

			if ( geometry.maxInstancedCount > 0 ) {

				renderer.renderInstances( geometry, drawStart, drawCount );

			}

		} else {

			renderer.render( drawStart, drawCount );

		}

	};

	function setupVertexAttributes( material, program, geometry, startIndex ) {

		if ( geometry && geometry.isInstancedBufferGeometry ) {

			if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {

				console.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
				return;

			}

		}

		if ( startIndex === undefined ) startIndex = 0;

		state.initAttributes();

		var geometryAttributes = geometry.attributes;

		var programAttributes = program.getAttributes();

		var materialDefaultAttributeValues = material.defaultAttributeValues;

		for ( var name in programAttributes ) {

			var programAttribute = programAttributes[ name ];

			if ( programAttribute >= 0 ) {

				var geometryAttribute = geometryAttributes[ name ];

				if ( geometryAttribute !== undefined ) {

					var normalized = geometryAttribute.normalized;
					var size = geometryAttribute.itemSize;

					var attributeProperties = attributes.get( geometryAttribute );

					var buffer = attributeProperties.buffer;
					var type = attributeProperties.type;
					var bytesPerElement = attributeProperties.bytesPerElement;

					if ( geometryAttribute.isInterleavedBufferAttribute ) {

						var data = geometryAttribute.data;
						var stride = data.stride;
						var offset = geometryAttribute.offset;

						if ( data && data.isInstancedInterleavedBuffer ) {

							state.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );

							if ( geometry.maxInstancedCount === undefined ) {

								geometry.maxInstancedCount = data.meshPerAttribute * data.count;

							}

						} else {

							state.enableAttribute( programAttribute );

						}

						_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );
						_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );

					} else {

						if ( geometryAttribute.isInstancedBufferAttribute ) {

							state.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );

							if ( geometry.maxInstancedCount === undefined ) {

								geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;

							}

						} else {

							state.enableAttribute( programAttribute );

						}

						_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );
						_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );

					}

				} else if ( materialDefaultAttributeValues !== undefined ) {

					var value = materialDefaultAttributeValues[ name ];

					if ( value !== undefined ) {

						switch ( value.length ) {

							case 2:
								_gl.vertexAttrib2fv( programAttribute, value );
								break;

							case 3:
								_gl.vertexAttrib3fv( programAttribute, value );
								break;

							case 4:
								_gl.vertexAttrib4fv( programAttribute, value );
								break;

							default:
								_gl.vertexAttrib1fv( programAttribute, value );

						}

					}

				}

			}

		}

		state.disableUnusedAttributes();

	}

	// Sorting

	function absNumericalSort( a, b ) {

		return Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );

	}

	// Rendering

	this.render = function ( scene, camera, renderTarget, forceClear ) {

		if ( camera !== undefined && camera.isCamera !== true ) {

			console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
			return;

		}

		// reset caching for this frame

		_currentGeometryProgram = '';
		_currentMaterialId = - 1;
		_currentCamera = null;

		// update scene graph

		if ( scene.autoUpdate === true ) scene.updateMatrixWorld();

		// update camera matrices and frustum

		camera.onBeforeRender( _this );

		if ( camera.parent === null ) camera.updateMatrixWorld();

		camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		_frustum.setFromMatrix( _projScreenMatrix );

		lights.length = 0;
		sprites.length = 0;
		lensFlares.length = 0;

		_localClippingEnabled = this.localClippingEnabled;
		_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );

		currentRenderList = renderLists.get( scene, camera );
		currentRenderList.init();

		projectObject( scene, camera, _this.sortObjects );

		currentRenderList.finish();

		if ( _this.sortObjects === true ) {

			currentRenderList.sort();

		}

		//

		if ( _clippingEnabled ) _clipping.beginShadows();

		setupShadows( lights );

		shadowMap.render( scene, camera );

		setupLights( lights, camera );

		if ( _clippingEnabled ) _clipping.endShadows();

		//

		_infoRender.frame ++;
		_infoRender.calls = 0;
		_infoRender.vertices = 0;
		_infoRender.faces = 0;
		_infoRender.points = 0;

		if ( renderTarget === undefined ) {

			renderTarget = null;

		}

		this.setRenderTarget( renderTarget );

		//

		var background = scene.background;

		if ( background === null ) {

			state.buffers.color.setClear( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha, _premultipliedAlpha );

		} else if ( background && background.isColor ) {

			state.buffers.color.setClear( background.r, background.g, background.b, 1, _premultipliedAlpha );
			forceClear = true;

		}

		if ( this.autoClear || forceClear ) {

			this.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );

		}

		if ( background && background.isCubeTexture ) {

			if ( backgroundBoxCamera === undefined ) {

				backgroundBoxCamera = new PerspectiveCamera();

				backgroundBoxMesh = new Mesh(
					new BoxBufferGeometry( 5, 5, 5 ),
					new ShaderMaterial( {
						uniforms: ShaderLib.cube.uniforms,
						vertexShader: ShaderLib.cube.vertexShader,
						fragmentShader: ShaderLib.cube.fragmentShader,
						side: BackSide,
						depthTest: false,
						depthWrite: false,
						fog: false
					} )
				);

			}

			backgroundBoxCamera.projectionMatrix.copy( camera.projectionMatrix );

			backgroundBoxCamera.matrixWorld.extractRotation( camera.matrixWorld );
			backgroundBoxCamera.matrixWorldInverse.getInverse( backgroundBoxCamera.matrixWorld );


			backgroundBoxMesh.material.uniforms[ "tCube" ].value = background;
			backgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundBoxCamera.matrixWorldInverse, backgroundBoxMesh.matrixWorld );

			objects.update( backgroundBoxMesh );

			_this.renderBufferDirect( backgroundBoxCamera, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );

		} else if ( background && background.isTexture ) {

			if ( backgroundPlaneCamera === undefined ) {

				backgroundPlaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );

				backgroundPlaneMesh = new Mesh(
					new PlaneBufferGeometry( 2, 2 ),
					new MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )
				);

			}

			backgroundPlaneMesh.material.map = background;

			objects.update( backgroundPlaneMesh );

			_this.renderBufferDirect( backgroundPlaneCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );

		}

		//

		var opaqueObjects = currentRenderList.opaque;
		var transparentObjects = currentRenderList.transparent;

		if ( scene.overrideMaterial ) {

			var overrideMaterial = scene.overrideMaterial;

			if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );
			if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );

		} else {

			// opaque pass (front-to-back order)

			if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );

			// transparent pass (back-to-front order)

			if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );

		}

		// custom render plugins (post pass)

		spritePlugin.render( scene, camera );
		lensFlarePlugin.render( scene, camera, _currentViewport );

		// Generate mipmap if we're using any kind of mipmap filtering

		if ( renderTarget ) {

			textures.updateRenderTargetMipmap( renderTarget );

		}

		// Ensure depth buffer writing is enabled so it can be cleared on next render

		state.buffers.depth.setTest( true );
		state.buffers.depth.setMask( true );
		state.buffers.color.setMask( true );

		if ( camera.isArrayCamera && camera.enabled ) {

			_this.setScissorTest( false );

		}

		camera.onAfterRender( _this );

		// _gl.finish();

	};

	/*
	// TODO Duplicated code (Frustum)

	var _sphere = new Sphere();

	function isObjectViewable( object ) {

		var geometry = object.geometry;

		if ( geometry.boundingSphere === null )
			geometry.computeBoundingSphere();

		_sphere.copy( geometry.boundingSphere ).
		applyMatrix4( object.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSpriteViewable( sprite ) {

		_sphere.center.set( 0, 0, 0 );
		_sphere.radius = 0.7071067811865476;
		_sphere.applyMatrix4( sprite.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSphereViewable( sphere ) {

		if ( ! _frustum.intersectsSphere( sphere ) ) return false;

		var numPlanes = _clipping.numPlanes;

		if ( numPlanes === 0 ) return true;

		var planes = _this.clippingPlanes,

			center = sphere.center,
			negRad = - sphere.radius,
			i = 0;

		do {

			// out when deeper than radius in the negative halfspace
			if ( planes[ i ].distanceToPoint( center ) < negRad ) return false;

		} while ( ++ i !== numPlanes );

		return true;

	}
	*/

	function projectObject( object, camera, sortObjects ) {

		if ( ! object.visible ) return;

		var visible = object.layers.test( camera.layers );

		if ( visible ) {

			if ( object.isLight ) {

				lights.push( object );

			} else if ( object.isSprite ) {

				if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {

					sprites.push( object );

				}

			} else if ( object.isLensFlare ) {

				lensFlares.push( object );

			} else if ( object.isImmediateRenderObject ) {

				if ( sortObjects ) {

					_vector3.setFromMatrixPosition( object.matrixWorld )
						.applyMatrix4( _projScreenMatrix );

				}

				currentRenderList.push( object, null, object.material, _vector3.z, null );

			} else if ( object.isMesh || object.isLine || object.isPoints ) {

				if ( object.isSkinnedMesh ) {

					object.skeleton.update();

				}

				if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					var geometry = objects.update( object );
					var material = object.material;

					if ( Array.isArray( material ) ) {

						var groups = geometry.groups;

						for ( var i = 0, l = groups.length; i < l; i ++ ) {

							var group = groups[ i ];
							var groupMaterial = material[ group.materialIndex ];

							if ( groupMaterial && groupMaterial.visible ) {

								currentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );

							}

						}

					} else if ( material.visible ) {

						currentRenderList.push( object, geometry, material, _vector3.z, null );

					}

				}

			}

		}

		var children = object.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			projectObject( children[ i ], camera, sortObjects );

		}

	}

	function renderObjects( renderList, scene, camera, overrideMaterial ) {

		for ( var i = 0, l = renderList.length; i < l; i ++ ) {

			var renderItem = renderList[ i ];

			var object = renderItem.object;
			var geometry = renderItem.geometry;
			var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;
			var group = renderItem.group;

			object.onBeforeRender( _this, scene, camera, geometry, material, group );

			if ( camera.isArrayCamera && camera.enabled ) {

				var cameras = camera.cameras;

				for ( var j = 0, jl = cameras.length; j < jl; j ++ ) {

					var camera2 = cameras[ j ];
					var bounds = camera2.bounds;
					_this.setViewport(
						bounds.x * _width * _pixelRatio, bounds.y * _height * _pixelRatio,
						bounds.z * _width * _pixelRatio, bounds.w * _height * _pixelRatio
					);
					_this.setScissor(
						bounds.x * _width * _pixelRatio, bounds.y * _height * _pixelRatio,
						bounds.z * _width * _pixelRatio, bounds.w * _height * _pixelRatio
					);
					_this.setScissorTest( true );
					renderObject( object, scene, camera2, geometry, material, group );

				}

			} else {

				renderObject( object, scene, camera, geometry, material, group );

			}

			object.onAfterRender( _this, scene, camera, geometry, material, group );

		}

	}

	function renderObject( object, scene, camera, geometry, material, group ) {

		object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );
		object.normalMatrix.getNormalMatrix( object.modelViewMatrix );

		if ( object.isImmediateRenderObject ) {

			state.setMaterial( material );

			var program = setProgram( camera, scene.fog, material, object );

			_currentGeometryProgram = '';

			renderObjectImmediate( object, program, material );

		} else {

			_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );

		}

	}

	function initMaterial( material, fog, object ) {

		var materialProperties = properties.get( material );

		var parameters = programCache.getParameters(
			material, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );

		var code = programCache.getProgramCode( material, parameters );

		var program = materialProperties.program;
		var programChange = true;

		if ( program === undefined ) {

			// new material
			material.addEventListener( 'dispose', onMaterialDispose );

		} else if ( program.code !== code ) {

			// changed glsl or parameters
			releaseMaterialProgramReference( material );

		} else if ( parameters.shaderID !== undefined ) {

			// same glsl and uniform list
			return;

		} else {

			// only rebuild uniform list
			programChange = false;

		}

		if ( programChange ) {

			if ( parameters.shaderID ) {

				var shader = ShaderLib[ parameters.shaderID ];

				materialProperties.__webglShader = {
					name: material.type,
					uniforms: UniformsUtils.clone( shader.uniforms ),
					vertexShader: shader.vertexShader,
					fragmentShader: shader.fragmentShader
				};

			} else {

				materialProperties.__webglShader = {
					name: material.type,
					uniforms: material.uniforms,
					vertexShader: material.vertexShader,
					fragmentShader: material.fragmentShader
				};

			}

			material.__webglShader = materialProperties.__webglShader;

			program = programCache.acquireProgram( material, parameters, code );

			materialProperties.program = program;
			material.program = program;

		}

		var programAttributes = program.getAttributes();

		if ( material.morphTargets ) {

			material.numSupportedMorphTargets = 0;

			for ( var i = 0; i < _this.maxMorphTargets; i ++ ) {

				if ( programAttributes[ 'morphTarget' + i ] >= 0 ) {

					material.numSupportedMorphTargets ++;

				}

			}

		}

		if ( material.morphNormals ) {

			material.numSupportedMorphNormals = 0;

			for ( var i = 0; i < _this.maxMorphNormals; i ++ ) {

				if ( programAttributes[ 'morphNormal' + i ] >= 0 ) {

					material.numSupportedMorphNormals ++;

				}

			}

		}

		var uniforms = materialProperties.__webglShader.uniforms;

		if ( ! material.isShaderMaterial &&
			! material.isRawShaderMaterial ||
			material.clipping === true ) {

			materialProperties.numClippingPlanes = _clipping.numPlanes;
			materialProperties.numIntersection = _clipping.numIntersection;
			uniforms.clippingPlanes = _clipping.uniform;

		}

		materialProperties.fog = fog;

		// store the light setup it was created for

		materialProperties.lightsHash = _lights.hash;

		if ( material.lights ) {

			// wire up the material to this renderer's lighting state

			uniforms.ambientLightColor.value = _lights.ambient;
			uniforms.directionalLights.value = _lights.directional;
			uniforms.spotLights.value = _lights.spot;
			uniforms.rectAreaLights.value = _lights.rectArea;
			uniforms.pointLights.value = _lights.point;
			uniforms.hemisphereLights.value = _lights.hemi;

			uniforms.directionalShadowMap.value = _lights.directionalShadowMap;
			uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;
			uniforms.spotShadowMap.value = _lights.spotShadowMap;
			uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;
			uniforms.pointShadowMap.value = _lights.pointShadowMap;
			uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;
			// TODO (abelnation): add area lights shadow info to uniforms

		}

		var progUniforms = materialProperties.program.getUniforms(),
			uniformsList =
				WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );

		materialProperties.uniformsList = uniformsList;

	}

	function setProgram( camera, fog, material, object ) {

		_usedTextureUnits = 0;

		var materialProperties = properties.get( material );

		if ( _clippingEnabled ) {

			if ( _localClippingEnabled || camera !== _currentCamera ) {

				var useCache =
					camera === _currentCamera &&
					material.id === _currentMaterialId;

				// we might want to call this function with some ClippingGroup
				// object instead of the material, once it becomes feasible
				// (#8465, #8379)
				_clipping.setState(
					material.clippingPlanes, material.clipIntersection, material.clipShadows,
					camera, materialProperties, useCache );

			}

		}

		if ( material.needsUpdate === false ) {

			if ( materialProperties.program === undefined ) {

				material.needsUpdate = true;

			} else if ( material.fog && materialProperties.fog !== fog ) {

				material.needsUpdate = true;

			} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {

				material.needsUpdate = true;

			} else if ( materialProperties.numClippingPlanes !== undefined &&
				( materialProperties.numClippingPlanes !== _clipping.numPlanes ||
				materialProperties.numIntersection !== _clipping.numIntersection ) ) {

				material.needsUpdate = true;

			}

		}

		if ( material.needsUpdate ) {

			initMaterial( material, fog, object );
			material.needsUpdate = false;

		}

		var refreshProgram = false;
		var refreshMaterial = false;
		var refreshLights = false;

		var program = materialProperties.program,
			p_uniforms = program.getUniforms(),
			m_uniforms = materialProperties.__webglShader.uniforms;

		if ( program.id !== _currentProgram ) {

			_gl.useProgram( program.program );
			_currentProgram = program.id;

			refreshProgram = true;
			refreshMaterial = true;
			refreshLights = true;

		}

		if ( material.id !== _currentMaterialId ) {

			_currentMaterialId = material.id;

			refreshMaterial = true;

		}

		if ( refreshProgram || camera !== _currentCamera ) {

			p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );

			if ( capabilities.logarithmicDepthBuffer ) {

				p_uniforms.setValue( _gl, 'logDepthBufFC',
					2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );

			}


			if ( camera !== _currentCamera ) {

				_currentCamera = camera;

				// lighting uniforms depend on the camera so enforce an update
				// now, in case this material supports lights - or later, when
				// the next material that does gets activated:

				refreshMaterial = true;		// set to true on material change
				refreshLights = true;		// remains set until update done

			}

			// load material specific uniforms
			// (shader material also gets them for the sake of genericity)

			if ( material.isShaderMaterial ||
				material.isMeshPhongMaterial ||
				material.isMeshStandardMaterial ||
				material.envMap ) {

				var uCamPos = p_uniforms.map.cameraPosition;

				if ( uCamPos !== undefined ) {

					uCamPos.setValue( _gl,
						_vector3.setFromMatrixPosition( camera.matrixWorld ) );

				}

			}

			if ( material.isMeshPhongMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshBasicMaterial ||
				material.isMeshStandardMaterial ||
				material.isShaderMaterial ||
				material.skinning ) {

				p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );

			}

			p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );
			p_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );

		}

		// skinning uniforms must be set even if material didn't change
		// auto-setting of texture unit for bone texture must go before other textures
		// not sure why, but otherwise weird things happen

		if ( material.skinning ) {

			p_uniforms.setOptional( _gl, object, 'bindMatrix' );
			p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );

			var skeleton = object.skeleton;

			if ( skeleton ) {

				var bones = skeleton.bones;

				if ( capabilities.floatVertexTextures ) {

					if ( skeleton.boneTexture === undefined ) {

						// layout (1 matrix = 4 pixels)
						//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
						//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
						//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
						//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
						//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)


						var size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix
						size = _Math.nextPowerOfTwo( Math.ceil( size ) );
						size = Math.max( size, 4 );

						var boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel
						boneMatrices.set( skeleton.boneMatrices ); // copy current values

						var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );

						skeleton.boneMatrices = boneMatrices;
						skeleton.boneTexture = boneTexture;
						skeleton.boneTextureSize = size;

					}

					p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );
					p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );

				} else {

					p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );

				}

			}

		}

		if ( refreshMaterial ) {

			if ( material.lights ) {

				// the current material requires lighting info

				// note: all lighting uniforms are always set correctly
				// they simply reference the renderer's state for their
				// values
				//
				// use the current material's .needsUpdate flags to set
				// the GL state when required

				markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );

			}

			// refresh uniforms common to several materials

			if ( fog && material.fog ) {

				refreshUniformsFog( m_uniforms, fog );

			}

			if ( material.isMeshBasicMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshPhongMaterial ||
				material.isMeshStandardMaterial ||
				material.isMeshNormalMaterial ||
				material.isMeshDepthMaterial ) {

				refreshUniformsCommon( m_uniforms, material );

			}

			// refresh single material specific uniforms

			if ( material.isLineBasicMaterial ) {

				refreshUniformsLine( m_uniforms, material );

			} else if ( material.isLineDashedMaterial ) {

				refreshUniformsLine( m_uniforms, material );
				refreshUniformsDash( m_uniforms, material );

			} else if ( material.isPointsMaterial ) {

				refreshUniformsPoints( m_uniforms, material );

			} else if ( material.isMeshLambertMaterial ) {

				refreshUniformsLambert( m_uniforms, material );

			} else if ( material.isMeshToonMaterial ) {

				refreshUniformsToon( m_uniforms, material );

			} else if ( material.isMeshPhongMaterial ) {

				refreshUniformsPhong( m_uniforms, material );

			} else if ( material.isMeshPhysicalMaterial ) {

				refreshUniformsPhysical( m_uniforms, material );

			} else if ( material.isMeshStandardMaterial ) {

				refreshUniformsStandard( m_uniforms, material );

			} else if ( material.isMeshDepthMaterial ) {

				if ( material.displacementMap ) {

					m_uniforms.displacementMap.value = material.displacementMap;
					m_uniforms.displacementScale.value = material.displacementScale;
					m_uniforms.displacementBias.value = material.displacementBias;

				}

			} else if ( material.isMeshNormalMaterial ) {

				refreshUniformsNormal( m_uniforms, material );

			}

			// RectAreaLight Texture
			// TODO (mrdoob): Find a nicer implementation

			if ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;
			if ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;

			WebGLUniforms.upload(
				_gl, materialProperties.uniformsList, m_uniforms, _this );

		}


		// common matrices

		p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );
		p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );
		p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );

		return program;

	}

	// Uniforms (refresh uniforms objects)

	function refreshUniformsCommon( uniforms, material ) {

		uniforms.opacity.value = material.opacity;

		uniforms.diffuse.value = material.color;

		if ( material.emissive ) {

			uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );

		}

		uniforms.map.value = material.map;
		uniforms.specularMap.value = material.specularMap;
		uniforms.alphaMap.value = material.alphaMap;

		if ( material.lightMap ) {

			uniforms.lightMap.value = material.lightMap;
			uniforms.lightMapIntensity.value = material.lightMapIntensity;

		}

		if ( material.aoMap ) {

			uniforms.aoMap.value = material.aoMap;
			uniforms.aoMapIntensity.value = material.aoMapIntensity;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. specular map
		// 3. normal map
		// 4. bump map
		// 5. alpha map
		// 6. emissive map

		var uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.specularMap ) {

			uvScaleMap = material.specularMap;

		} else if ( material.displacementMap ) {

			uvScaleMap = material.displacementMap;

		} else if ( material.normalMap ) {

			uvScaleMap = material.normalMap;

		} else if ( material.bumpMap ) {

			uvScaleMap = material.bumpMap;

		} else if ( material.roughnessMap ) {

			uvScaleMap = material.roughnessMap;

		} else if ( material.metalnessMap ) {

			uvScaleMap = material.metalnessMap;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		} else if ( material.emissiveMap ) {

			uvScaleMap = material.emissiveMap;

		}

		if ( uvScaleMap !== undefined ) {

			// backwards compatibility
			if ( uvScaleMap.isWebGLRenderTarget ) {

				uvScaleMap = uvScaleMap.texture;

			}

			var offset = uvScaleMap.offset;
			var repeat = uvScaleMap.repeat;

			uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );

		}

		uniforms.envMap.value = material.envMap;

		// don't flip CubeTexture envMaps, flip everything else:
		//  WebGLRenderTargetCube will be flipped for backwards compatibility
		//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
		// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
		uniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;

		uniforms.reflectivity.value = material.reflectivity;
		uniforms.refractionRatio.value = material.refractionRatio;

	}

	function refreshUniformsLine( uniforms, material ) {

		uniforms.diffuse.value = material.color;
		uniforms.opacity.value = material.opacity;

	}

	function refreshUniformsDash( uniforms, material ) {

		uniforms.dashSize.value = material.dashSize;
		uniforms.totalSize.value = material.dashSize + material.gapSize;
		uniforms.scale.value = material.scale;

	}

	function refreshUniformsPoints( uniforms, material ) {

		uniforms.diffuse.value = material.color;
		uniforms.opacity.value = material.opacity;
		uniforms.size.value = material.size * _pixelRatio;
		uniforms.scale.value = _height * 0.5;

		uniforms.map.value = material.map;

		if ( material.map !== null ) {

			var offset = material.map.offset;
			var repeat = material.map.repeat;

			uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );

		}

	}

	function refreshUniformsFog( uniforms, fog ) {

		uniforms.fogColor.value = fog.color;

		if ( fog.isFog ) {

			uniforms.fogNear.value = fog.near;
			uniforms.fogFar.value = fog.far;

		} else if ( fog.isFogExp2 ) {

			uniforms.fogDensity.value = fog.density;

		}

	}

	function refreshUniformsLambert( uniforms, material ) {

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

	}

	function refreshUniformsPhong( uniforms, material ) {

		uniforms.specular.value = material.specular;
		uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsToon( uniforms, material ) {

		refreshUniformsPhong( uniforms, material );

		if ( material.gradientMap ) {

			uniforms.gradientMap.value = material.gradientMap;

		}

	}

	function refreshUniformsStandard( uniforms, material ) {

		uniforms.roughness.value = material.roughness;
		uniforms.metalness.value = material.metalness;

		if ( material.roughnessMap ) {

			uniforms.roughnessMap.value = material.roughnessMap;

		}

		if ( material.metalnessMap ) {

			uniforms.metalnessMap.value = material.metalnessMap;

		}

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

		if ( material.envMap ) {

			//uniforms.envMap.value = material.envMap; // part of uniforms common
			uniforms.envMapIntensity.value = material.envMapIntensity;

		}

	}

	function refreshUniformsPhysical( uniforms, material ) {

		uniforms.clearCoat.value = material.clearCoat;
		uniforms.clearCoatRoughness.value = material.clearCoatRoughness;

		refreshUniformsStandard( uniforms, material );

	}

	function refreshUniformsNormal( uniforms, material ) {

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	// If uniforms are marked as clean, they don't need to be loaded to the GPU.

	function markUniformsLightsNeedsUpdate( uniforms, value ) {

		uniforms.ambientLightColor.needsUpdate = value;

		uniforms.directionalLights.needsUpdate = value;
		uniforms.pointLights.needsUpdate = value;
		uniforms.spotLights.needsUpdate = value;
		uniforms.rectAreaLights.needsUpdate = value;
		uniforms.hemisphereLights.needsUpdate = value;

	}

	// Lighting

	function setupShadows( lights ) {

		var lightShadowsLength = 0;

		for ( var i = 0, l = lights.length; i < l; i ++ ) {

			var light = lights[ i ];

			if ( light.castShadow ) {

				_lights.shadows[ lightShadowsLength ] = light;
				lightShadowsLength ++;

			}

		}

		_lights.shadows.length = lightShadowsLength;

	}

	function setupLights( lights, camera ) {

		var l, ll, light, shadow,
			r = 0, g = 0, b = 0,
			color,
			intensity,
			distance,
			shadowMap,

			viewMatrix = camera.matrixWorldInverse,

			directionalLength = 0,
			pointLength = 0,
			spotLength = 0,
			rectAreaLength = 0,
			hemiLength = 0;

		for ( l = 0, ll = lights.length; l < ll; l ++ ) {

			light = lights[ l ];

			color = light.color;
			intensity = light.intensity;
			distance = light.distance;

			shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;

			if ( light.isAmbientLight ) {

				r += color.r * intensity;
				g += color.g * intensity;
				b += color.b * intensity;

			} else if ( light.isDirectionalLight ) {

				var uniforms = lightCache.get( light );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				_vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( _vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				uniforms.shadow = light.castShadow;

				if ( light.castShadow ) {

					shadow = light.shadow;

					uniforms.shadowBias = shadow.bias;
					uniforms.shadowRadius = shadow.radius;
					uniforms.shadowMapSize = shadow.mapSize;

				}

				_lights.directionalShadowMap[ directionalLength ] = shadowMap;
				_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;
				_lights.directional[ directionalLength ] = uniforms;

				directionalLength ++;

			} else if ( light.isSpotLight ) {

				var uniforms = lightCache.get( light );

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				uniforms.color.copy( color ).multiplyScalar( intensity );
				uniforms.distance = distance;

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				_vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( _vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				uniforms.coneCos = Math.cos( light.angle );
				uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );
				uniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;

				uniforms.shadow = light.castShadow;

				if ( light.castShadow ) {

					shadow = light.shadow;

					uniforms.shadowBias = shadow.bias;
					uniforms.shadowRadius = shadow.radius;
					uniforms.shadowMapSize = shadow.mapSize;

				}

				_lights.spotShadowMap[ spotLength ] = shadowMap;
				_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;
				_lights.spot[ spotLength ] = uniforms;

				spotLength ++;

			} else if ( light.isRectAreaLight ) {

				var uniforms = lightCache.get( light );

				// (a) intensity controls irradiance of entire light
				uniforms.color
					.copy( color )
					.multiplyScalar( intensity / ( light.width * light.height ) );

				// (b) intensity controls the radiance per light area
				// uniforms.color.copy( color ).multiplyScalar( intensity );

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				// extract local rotation of light to derive width/height half vectors
				_matrix42.identity();
				_matrix4.copy( light.matrixWorld );
				_matrix4.premultiply( viewMatrix );
				_matrix42.extractRotation( _matrix4 );

				uniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );
				uniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );

				uniforms.halfWidth.applyMatrix4( _matrix42 );
				uniforms.halfHeight.applyMatrix4( _matrix42 );

				// TODO (abelnation): RectAreaLight distance?
				// uniforms.distance = distance;

				_lights.rectArea[ rectAreaLength ] = uniforms;

				rectAreaLength ++;

			} else if ( light.isPointLight ) {

				var uniforms = lightCache.get( light );

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
				uniforms.distance = light.distance;
				uniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;

				uniforms.shadow = light.castShadow;

				if ( light.castShadow ) {

					shadow = light.shadow;

					uniforms.shadowBias = shadow.bias;
					uniforms.shadowRadius = shadow.radius;
					uniforms.shadowMapSize = shadow.mapSize;

				}

				_lights.pointShadowMap[ pointLength ] = shadowMap;

				if ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {

					_lights.pointShadowMatrix[ pointLength ] = new Matrix4();

				}

				// for point lights we set the shadow matrix to be a translation-only matrix
				// equal to inverse of the light's position
				_vector3.setFromMatrixPosition( light.matrixWorld ).negate();
				_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );

				_lights.point[ pointLength ] = uniforms;

				pointLength ++;

			} else if ( light.isHemisphereLight ) {

				var uniforms = lightCache.get( light );

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				uniforms.direction.transformDirection( viewMatrix );
				uniforms.direction.normalize();

				uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );
				uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );

				_lights.hemi[ hemiLength ] = uniforms;

				hemiLength ++;

			}

		}

		_lights.ambient[ 0 ] = r;
		_lights.ambient[ 1 ] = g;
		_lights.ambient[ 2 ] = b;

		_lights.directional.length = directionalLength;
		_lights.spot.length = spotLength;
		_lights.rectArea.length = rectAreaLength;
		_lights.point.length = pointLength;
		_lights.hemi.length = hemiLength;

		// TODO (sam-g-steel) why aren't we using join
		_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + _lights.shadows.length;

	}

	// GL state setting

	this.setFaceCulling = function ( cullFace, frontFaceDirection ) {

		state.setCullFace( cullFace );
		state.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );

	};

	// Textures

	function allocTextureUnit() {

		var textureUnit = _usedTextureUnits;

		if ( textureUnit >= capabilities.maxTextures ) {

			console.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );

		}

		_usedTextureUnits += 1;

		return textureUnit;

	}

	this.allocTextureUnit = allocTextureUnit;

	// this.setTexture2D = setTexture2D;
	this.setTexture2D = ( function () {

		var warned = false;

		// backwards compatibility: peel texture.texture
		return function setTexture2D( texture, slot ) {

			if ( texture && texture.isWebGLRenderTarget ) {

				if ( ! warned ) {

					console.warn( "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead." );
					warned = true;

				}

				texture = texture.texture;

			}

			textures.setTexture2D( texture, slot );

		};

	}() );

	this.setTexture = ( function () {

		var warned = false;

		return function setTexture( texture, slot ) {

			if ( ! warned ) {

				console.warn( "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead." );
				warned = true;

			}

			textures.setTexture2D( texture, slot );

		};

	}() );

	this.setTextureCube = ( function () {

		var warned = false;

		return function setTextureCube( texture, slot ) {

			// backwards compatibility: peel texture.texture
			if ( texture && texture.isWebGLRenderTargetCube ) {

				if ( ! warned ) {

					console.warn( "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead." );
					warned = true;

				}

				texture = texture.texture;

			}

			// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture
			// TODO: unify these code paths
			if ( ( texture && texture.isCubeTexture ) ||
				( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {

				// CompressedTexture can have Array in image :/

				// this function alone should take care of cube textures
				textures.setTextureCube( texture, slot );

			} else {

				// assumed: texture property of THREE.WebGLRenderTargetCube

				textures.setTextureCubeDynamic( texture, slot );

			}

		};

	}() );

	this.getRenderTarget = function () {

		return _currentRenderTarget;

	};

	this.setRenderTarget = function ( renderTarget ) {

		_currentRenderTarget = renderTarget;

		if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {

			textures.setupRenderTarget( renderTarget );

		}

		var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );
		var framebuffer;

		if ( renderTarget ) {

			var renderTargetProperties = properties.get( renderTarget );

			if ( isCube ) {

				framebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];

			} else {

				framebuffer = renderTargetProperties.__webglFramebuffer;

			}

			_currentScissor.copy( renderTarget.scissor );
			_currentScissorTest = renderTarget.scissorTest;

			_currentViewport.copy( renderTarget.viewport );

		} else {

			framebuffer = null;

			_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );
			_currentScissorTest = _scissorTest;

			_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );

		}

		if ( _currentFramebuffer !== framebuffer ) {

			_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
			_currentFramebuffer = framebuffer;

		}

		state.scissor( _currentScissor );
		state.setScissorTest( _currentScissorTest );

		state.viewport( _currentViewport );

		if ( isCube ) {

			var textureProperties = properties.get( renderTarget.texture );
			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );

		}

	};

	this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {

		if ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {

			console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );
			return;

		}

		var framebuffer = properties.get( renderTarget ).__webglFramebuffer;

		if ( framebuffer ) {

			var restore = false;

			if ( framebuffer !== _currentFramebuffer ) {

				_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );

				restore = true;

			}

			try {

				var texture = renderTarget.texture;
				var textureFormat = texture.format;
				var textureType = texture.type;

				if ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );
					return;

				}

				if ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)
					! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox
					! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );
					return;

				}

				if ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {

					// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)

					if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {

						_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );

					}

				} else {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );

				}

			} finally {

				if ( restore ) {

					_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );

				}

			}

		}

	};

	// Map three.js constants to WebGL constants

	function paramThreeToGL( p ) {

		var extension;

		if ( p === RepeatWrapping ) return _gl.REPEAT;
		if ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;
		if ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;

		if ( p === NearestFilter ) return _gl.NEAREST;
		if ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;
		if ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;

		if ( p === LinearFilter ) return _gl.LINEAR;
		if ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;
		if ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;

		if ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;
		if ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;
		if ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;
		if ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;

		if ( p === ByteType ) return _gl.BYTE;
		if ( p === ShortType ) return _gl.SHORT;
		if ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;
		if ( p === IntType ) return _gl.INT;
		if ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;
		if ( p === FloatType ) return _gl.FLOAT;

		if ( p === HalfFloatType ) {

			extension = extensions.get( 'OES_texture_half_float' );

			if ( extension !== null ) return extension.HALF_FLOAT_OES;

		}

		if ( p === AlphaFormat ) return _gl.ALPHA;
		if ( p === RGBFormat ) return _gl.RGB;
		if ( p === RGBAFormat ) return _gl.RGBA;
		if ( p === LuminanceFormat ) return _gl.LUMINANCE;
		if ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;
		if ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;
		if ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;

		if ( p === AddEquation ) return _gl.FUNC_ADD;
		if ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;
		if ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;

		if ( p === ZeroFactor ) return _gl.ZERO;
		if ( p === OneFactor ) return _gl.ONE;
		if ( p === SrcColorFactor ) return _gl.SRC_COLOR;
		if ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;
		if ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;
		if ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;
		if ( p === DstAlphaFactor ) return _gl.DST_ALPHA;
		if ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;

		if ( p === DstColorFactor ) return _gl.DST_COLOR;
		if ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;
		if ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;

		if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||
			p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );

			if ( extension !== null ) {

				if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;
				if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
				if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;
				if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;

			}

		}

		if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||
			p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );

			if ( extension !== null ) {

				if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
				if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
				if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
				if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

			}

		}

		if ( p === RGB_ETC1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_etc1' );

			if ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;

		}

		if ( p === MinEquation || p === MaxEquation ) {

			extension = extensions.get( 'EXT_blend_minmax' );

			if ( extension !== null ) {

				if ( p === MinEquation ) return extension.MIN_EXT;
				if ( p === MaxEquation ) return extension.MAX_EXT;

			}

		}

		if ( p === UnsignedInt248Type ) {

			extension = extensions.get( 'WEBGL_depth_texture' );

			if ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;

		}

		return 0;

	}

}

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function FogExp2 ( color, density ) {

	this.name = '';

	this.color = new Color( color );
	this.density = ( density !== undefined ) ? density : 0.00025;

}

FogExp2.prototype.isFogExp2 = true;

FogExp2.prototype.clone = function () {

	return new FogExp2( this.color.getHex(), this.density );

};

FogExp2.prototype.toJSON = function ( meta ) {

	return {
		type: 'FogExp2',
		color: this.color.getHex(),
		density: this.density
	};

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function Fog ( color, near, far ) {

	this.name = '';

	this.color = new Color( color );

	this.near = ( near !== undefined ) ? near : 1;
	this.far = ( far !== undefined ) ? far : 1000;

}

Fog.prototype.isFog = true;

Fog.prototype.clone = function () {

	return new Fog( this.color.getHex(), this.near, this.far );

};

Fog.prototype.toJSON = function ( meta ) {

	return {
		type: 'Fog',
		color: this.color.getHex(),
		near: this.near,
		far: this.far
	};

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Scene () {

	Object3D.call( this );

	this.type = 'Scene';

	this.background = null;
	this.fog = null;
	this.overrideMaterial = null;

	this.autoUpdate = true; // checked by the renderer

}

Scene.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Scene,

	copy: function ( source, recursive ) {

		Object3D.prototype.copy.call( this, source, recursive );

		if ( source.background !== null ) this.background = source.background.clone();
		if ( source.fog !== null ) this.fog = source.fog.clone();
		if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();

		this.autoUpdate = source.autoUpdate;
		this.matrixAutoUpdate = source.matrixAutoUpdate;

		return this;

	},

	toJSON: function ( meta ) {

		var data = Object3D.prototype.toJSON.call( this, meta );

		if ( this.background !== null ) data.object.background = this.background.toJSON( meta );
		if ( this.fog !== null ) data.object.fog = this.fog.toJSON();

		return data;

	}

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

function LensFlare( texture, size, distance, blending, color ) {

	Object3D.call( this );

	this.lensFlares = [];

	this.positionScreen = new Vector3();
	this.customUpdateCallback = undefined;

	if ( texture !== undefined ) {

		this.add( texture, size, distance, blending, color );

	}

}

LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: LensFlare,

	isLensFlare: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.positionScreen.copy( source.positionScreen );
		this.customUpdateCallback = source.customUpdateCallback;

		for ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {

			this.lensFlares.push( source.lensFlares[ i ] );

		}

		return this;

	},

	add: function ( texture, size, distance, blending, color, opacity ) {

		if ( size === undefined ) size = - 1;
		if ( distance === undefined ) distance = 0;
		if ( opacity === undefined ) opacity = 1;
		if ( color === undefined ) color = new Color( 0xffffff );
		if ( blending === undefined ) blending = NormalBlending;

		distance = Math.min( distance, Math.max( 0, distance ) );

		this.lensFlares.push( {
			texture: texture,	// THREE.Texture
			size: size, 		// size in pixels (-1 = use texture.width)
			distance: distance, 	// distance (0-1) from light source (0=at light source)
			x: 0, y: 0, z: 0,	// screen position (-1 => 1) z = 0 is in front z = 1 is back
			scale: 1, 		// scale
			rotation: 0, 		// rotation
			opacity: opacity,	// opacity
			color: color,		// color
			blending: blending	// blending
		} );

	},

	/*
	 * Update lens flares update positions on all flares based on the screen position
	 * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.
	 */

	updateLensFlares: function () {

		var f, fl = this.lensFlares.length;
		var flare;
		var vecX = - this.positionScreen.x * 2;
		var vecY = - this.positionScreen.y * 2;

		for ( f = 0; f < fl; f ++ ) {

			flare = this.lensFlares[ f ];

			flare.x = this.positionScreen.x + vecX * flare.distance;
			flare.y = this.positionScreen.y + vecY * flare.distance;

			flare.wantedRotation = flare.x * Math.PI * 0.25;
			flare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;

		}

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *	uvOffset: new THREE.Vector2(),
 *	uvScale: new THREE.Vector2()
 * }
 */

function SpriteMaterial( parameters ) {

	Material.call( this );

	this.type = 'SpriteMaterial';

	this.color = new Color( 0xffffff );
	this.map = null;

	this.rotation = 0;

	this.fog = false;
	this.lights = false;

	this.setValues( parameters );

}

SpriteMaterial.prototype = Object.create( Material.prototype );
SpriteMaterial.prototype.constructor = SpriteMaterial;
SpriteMaterial.prototype.isSpriteMaterial = true;

SpriteMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );
	this.map = source.map;

	this.rotation = source.rotation;

	return this;

};

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

function Sprite( material ) {

	Object3D.call( this );

	this.type = 'Sprite';

	this.material = ( material !== undefined ) ? material : new SpriteMaterial();

}

Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Sprite,

	isSprite: true,

	raycast: ( function () {

		var intersectPoint = new Vector3();
		var worldPosition = new Vector3();
		var worldScale = new Vector3();

		return function raycast( raycaster, intersects ) {

			worldPosition.setFromMatrixPosition( this.matrixWorld );
			raycaster.ray.closestPointToPoint( worldPosition, intersectPoint );

			worldScale.setFromMatrixScale( this.matrixWorld );
			var guessSizeSq = worldScale.x * worldScale.y / 4;

			if ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;

			var distance = raycaster.ray.origin.distanceTo( intersectPoint );

			if ( distance < raycaster.near || distance > raycaster.far ) return;

			intersects.push( {

				distance: distance,
				point: intersectPoint.clone(),
				face: null,
				object: this

			} );

		};

	}() ),

	clone: function () {

		return new this.constructor( this.material ).copy( this );

	}

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

function LOD() {

	Object3D.call( this );

	this.type = 'LOD';

	Object.defineProperties( this, {
		levels: {
			enumerable: true,
			value: []
		}
	} );

}

LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: LOD,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source, false );

		var levels = source.levels;

		for ( var i = 0, l = levels.length; i < l; i ++ ) {

			var level = levels[ i ];

			this.addLevel( level.object.clone(), level.distance );

		}

		return this;

	},

	addLevel: function ( object, distance ) {

		if ( distance === undefined ) distance = 0;

		distance = Math.abs( distance );

		var levels = this.levels;

		for ( var l = 0; l < levels.length; l ++ ) {

			if ( distance < levels[ l ].distance ) {

				break;

			}

		}

		levels.splice( l, 0, { distance: distance, object: object } );

		this.add( object );

	},

	getObjectForDistance: function ( distance ) {

		var levels = this.levels;

		for ( var i = 1, l = levels.length; i < l; i ++ ) {

			if ( distance < levels[ i ].distance ) {

				break;

			}

		}

		return levels[ i - 1 ].object;

	},

	raycast: ( function () {

		var matrixPosition = new Vector3();

		return function raycast( raycaster, intersects ) {

			matrixPosition.setFromMatrixPosition( this.matrixWorld );

			var distance = raycaster.ray.origin.distanceTo( matrixPosition );

			this.getObjectForDistance( distance ).raycast( raycaster, intersects );

		};

	}() ),

	update: function () {

		var v1 = new Vector3();
		var v2 = new Vector3();

		return function update( camera ) {

			var levels = this.levels;

			if ( levels.length > 1 ) {

				v1.setFromMatrixPosition( camera.matrixWorld );
				v2.setFromMatrixPosition( this.matrixWorld );

				var distance = v1.distanceTo( v2 );

				levels[ 0 ].object.visible = true;

				for ( var i = 1, l = levels.length; i < l; i ++ ) {

					if ( distance >= levels[ i ].distance ) {

						levels[ i - 1 ].object.visible = false;
						levels[ i ].object.visible = true;

					} else {

						break;

					}

				}

				for ( ; i < l; i ++ ) {

					levels[ i ].object.visible = false;

				}

			}

		};

	}(),

	toJSON: function ( meta ) {

		var data = Object3D.prototype.toJSON.call( this, meta );

		data.object.levels = [];

		var levels = this.levels;

		for ( var i = 0, l = levels.length; i < l; i ++ ) {

			var level = levels[ i ];

			data.object.levels.push( {
				object: level.object.uuid,
				distance: level.distance
			} );

		}

		return data;

	}

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author michael guerrero / http://realitymeltdown.com
 * @author ikerr / http://verold.com
 */

function Skeleton( bones, boneInverses ) {

	// copy the bone array

	bones = bones || [];

	this.bones = bones.slice( 0 );
	this.boneMatrices = new Float32Array( this.bones.length * 16 );

	// use the supplied bone inverses or calculate the inverses

	if ( boneInverses === undefined ) {

		this.calculateInverses();

	} else {

		if ( this.bones.length === boneInverses.length ) {

			this.boneInverses = boneInverses.slice( 0 );

		} else {

			console.warn( 'THREE.Skeleton boneInverses is the wrong length.' );

			this.boneInverses = [];

			for ( var i = 0, il = this.bones.length; i < il; i ++ ) {

				this.boneInverses.push( new Matrix4() );

			}

		}

	}

}

Object.assign( Skeleton.prototype, {

	calculateInverses: function () {

		this.boneInverses = [];

		for ( var i = 0, il = this.bones.length; i < il; i ++ ) {

			var inverse = new Matrix4();

			if ( this.bones[ i ] ) {

				inverse.getInverse( this.bones[ i ].matrixWorld );

			}

			this.boneInverses.push( inverse );

		}

	},

	pose: function () {

		var bone, i, il;

		// recover the bind-time world matrices

		for ( i = 0, il = this.bones.length; i < il; i ++ ) {

			bone = this.bones[ i ];

			if ( bone ) {

				bone.matrixWorld.getInverse( this.boneInverses[ i ] );

			}

		}

		// compute the local matrices, positions, rotations and scales

		for ( i = 0, il = this.bones.length; i < il; i ++ ) {

			bone = this.bones[ i ];

			if ( bone ) {

				if ( bone.parent && bone.parent.isBone ) {

					bone.matrix.getInverse( bone.parent.matrixWorld );
					bone.matrix.multiply( bone.matrixWorld );

				} else {

					bone.matrix.copy( bone.matrixWorld );

				}

				bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );

			}

		}

	},

	update: ( function () {

		var offsetMatrix = new Matrix4();
		var identityMatrix = new Matrix4();

		return function update() {

			var bones = this.bones;
			var boneInverses = this.boneInverses;
			var boneMatrices = this.boneMatrices;
			var boneTexture = this.boneTexture;

			// flatten bone matrices to array

			for ( var i = 0, il = bones.length; i < il; i ++ ) {

				// compute the offset between the current and the original transform

				var matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;

				offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );
				offsetMatrix.toArray( boneMatrices, i * 16 );

			}

			if ( boneTexture !== undefined ) {

				boneTexture.needsUpdate = true;

			}

		};

	} )(),

	clone: function () {

		return new Skeleton( this.bones, this.boneInverses );

	}

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */

function Bone() {

	Object3D.call( this );

	this.type = 'Bone';

}

Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Bone,

	isBone: true

} );

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */

function SkinnedMesh( geometry, material ) {

	Mesh.call( this, geometry, material );

	this.type = 'SkinnedMesh';

	this.bindMode = 'attached';
	this.bindMatrix = new Matrix4();
	this.bindMatrixInverse = new Matrix4();

	var bones = this.initBones();
	var skeleton = new Skeleton( bones );

	this.bind( skeleton, this.matrixWorld );

	this.normalizeSkinWeights();

}

SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {

	constructor: SkinnedMesh,

	isSkinnedMesh: true,

	initBones: function () {

		var bones = [], bone, gbone;
		var i, il;

		if ( this.geometry && this.geometry.bones !== undefined ) {

			// first, create array of 'Bone' objects from geometry data

			for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {

				gbone = this.geometry.bones[ i ];

				// create new 'Bone' object

				bone = new Bone();
				bones.push( bone );

				// apply values

				bone.name = gbone.name;
				bone.position.fromArray( gbone.pos );
				bone.quaternion.fromArray( gbone.rotq );
				if ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );

			}

			// second, create bone hierarchy

			for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {

				gbone = this.geometry.bones[ i ];

				if ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {

					// subsequent bones in the hierarchy

					bones[ gbone.parent ].add( bones[ i ] );

				} else {

					// topmost bone, immediate child of the skinned mesh

					this.add( bones[ i ] );

				}

			}

		}

		// now the bones are part of the scene graph and children of the skinned mesh.
		// let's update the corresponding matrices

		this.updateMatrixWorld( true );

		return bones;

	},

	bind: function ( skeleton, bindMatrix ) {

		this.skeleton = skeleton;

		if ( bindMatrix === undefined ) {

			this.updateMatrixWorld( true );

			this.skeleton.calculateInverses();

			bindMatrix = this.matrixWorld;

		}

		this.bindMatrix.copy( bindMatrix );
		this.bindMatrixInverse.getInverse( bindMatrix );

	},

	pose: function () {

		this.skeleton.pose();

	},

	normalizeSkinWeights: function () {

		var scale, i;

		if ( this.geometry && this.geometry.isGeometry ) {

			for ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {

				var sw = this.geometry.skinWeights[ i ];

				scale = 1.0 / sw.lengthManhattan();

				if ( scale !== Infinity ) {

					sw.multiplyScalar( scale );

				} else {

					sw.set( 1, 0, 0, 0 ); // do something reasonable

				}

			}

		} else if ( this.geometry && this.geometry.isBufferGeometry ) {

			var vec = new Vector4();

			var skinWeight = this.geometry.attributes.skinWeight;

			for ( i = 0; i < skinWeight.count; i ++ ) {

				vec.x = skinWeight.getX( i );
				vec.y = skinWeight.getY( i );
				vec.z = skinWeight.getZ( i );
				vec.w = skinWeight.getW( i );

				scale = 1.0 / vec.lengthManhattan();

				if ( scale !== Infinity ) {

					vec.multiplyScalar( scale );

				} else {

					vec.set( 1, 0, 0, 0 ); // do something reasonable

				}

				skinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );

			}

		}

	},

	updateMatrixWorld: function ( force ) {

		Mesh.prototype.updateMatrixWorld.call( this, force );

		if ( this.bindMode === 'attached' ) {

			this.bindMatrixInverse.getInverse( this.matrixWorld );

		} else if ( this.bindMode === 'detached' ) {

			this.bindMatrixInverse.getInverse( this.bindMatrix );

		} else {

			console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );

		}

	},

	clone: function () {

		return new this.constructor( this.geometry, this.material ).copy( this );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */

function LineBasicMaterial( parameters ) {

	Material.call( this );

	this.type = 'LineBasicMaterial';

	this.color = new Color( 0xffffff );

	this.linewidth = 1;
	this.linecap = 'round';
	this.linejoin = 'round';

	this.lights = false;

	this.setValues( parameters );

}

LineBasicMaterial.prototype = Object.create( Material.prototype );
LineBasicMaterial.prototype.constructor = LineBasicMaterial;

LineBasicMaterial.prototype.isLineBasicMaterial = true;

LineBasicMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );

	this.linewidth = source.linewidth;
	this.linecap = source.linecap;
	this.linejoin = source.linejoin;

	return this;

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Line( geometry, material, mode ) {

	if ( mode === 1 ) {

		console.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );
		return new LineSegments( geometry, material );

	}

	Object3D.call( this );

	this.type = 'Line';

	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	this.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );

}

Line.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Line,

	isLine: true,

	raycast: ( function () {

		var inverseMatrix = new Matrix4();
		var ray = new Ray();
		var sphere = new Sphere$2();

		return function raycast( raycaster, intersects ) {

			var precision = raycaster.linePrecision;
			var precisionSq = precision * precision;

			var geometry = this.geometry;
			var matrixWorld = this.matrixWorld;

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

			sphere.copy( geometry.boundingSphere );
			sphere.applyMatrix4( matrixWorld );

			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;

			//

			inverseMatrix.getInverse( matrixWorld );
			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );

			var vStart = new Vector3();
			var vEnd = new Vector3();
			var interSegment = new Vector3();
			var interRay = new Vector3();
			var step = (this && this.isLineSegments) ? 2 : 1;

			if ( geometry.isBufferGeometry ) {

				var index = geometry.index;
				var attributes = geometry.attributes;
				var positions = attributes.position.array;

				if ( index !== null ) {

					var indices = index.array;

					for ( var i = 0, l = indices.length - 1; i < l; i += step ) {

						var a = indices[ i ];
						var b = indices[ i + 1 ];

						vStart.fromArray( positions, a * 3 );
						vEnd.fromArray( positions, b * 3 );

						var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

						if ( distSq > precisionSq ) continue;

						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

						var distance = raycaster.ray.origin.distanceTo( interRay );

						if ( distance < raycaster.near || distance > raycaster.far ) continue;

						intersects.push( {

							distance: distance,
							// What do we want? intersection point on the ray or on the segment??
							// point: raycaster.ray.at( distance ),
							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
							index: i,
							face: null,
							faceIndex: null,
							object: this

						} );

					}

				} else {

					for ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {

						vStart.fromArray( positions, 3 * i );
						vEnd.fromArray( positions, 3 * i + 3 );

						var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

						if ( distSq > precisionSq ) continue;

						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

						var distance = raycaster.ray.origin.distanceTo( interRay );

						if ( distance < raycaster.near || distance > raycaster.far ) continue;

						intersects.push( {

							distance: distance,
							// What do we want? intersection point on the ray or on the segment??
							// point: raycaster.ray.at( distance ),
							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
							index: i,
							face: null,
							faceIndex: null,
							object: this

						} );

					}

				}

			} else if ( geometry.isGeometry ) {

				var vertices = geometry.vertices;
				var nbVertices = vertices.length;

				for ( var i = 0; i < nbVertices - 1; i += step ) {

					var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );

					if ( distSq > precisionSq ) continue;

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					var distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) continue;

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			}

		};

	}() ),

	clone: function () {

		return new this.constructor( this.geometry, this.material ).copy( this );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function LineSegments( geometry, material ) {

	Line.call( this, geometry, material );

	this.type = 'LineSegments';

}

LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {

	constructor: LineSegments,

	isLineSegments: true

} );

/**
 * @author mgreter / http://github.com/mgreter
 */

function LineLoop( geometry, material ) {

	Line.call( this, geometry, material );

	this.type = 'LineLoop';

}

LineLoop.prototype = Object.assign( Object.create( Line.prototype ), {

	constructor: LineLoop,

	isLineLoop: true,

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 * }
 */

function PointsMaterial( parameters ) {

	Material.call( this );

	this.type = 'PointsMaterial';

	this.color = new Color( 0xffffff );

	this.map = null;

	this.size = 1;
	this.sizeAttenuation = true;

	this.lights = false;

	this.setValues( parameters );

}

PointsMaterial.prototype = Object.create( Material.prototype );
PointsMaterial.prototype.constructor = PointsMaterial;

PointsMaterial.prototype.isPointsMaterial = true;

PointsMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );

	this.map = source.map;

	this.size = source.size;
	this.sizeAttenuation = source.sizeAttenuation;

	return this;

};

/**
 * @author alteredq / http://alteredqualia.com/
 */

function Points( geometry, material ) {

	Object3D.call( this );

	this.type = 'Points';

	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	this.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );

}

Points.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Points,

	isPoints: true,

	raycast: ( function () {

		var inverseMatrix = new Matrix4();
		var ray = new Ray();
		var sphere = new Sphere$2();

		return function raycast( raycaster, intersects ) {

			var object = this;
			var geometry = this.geometry;
			var matrixWorld = this.matrixWorld;
			var threshold = raycaster.params.Points.threshold;

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

			sphere.copy( geometry.boundingSphere );
			sphere.applyMatrix4( matrixWorld );
			sphere.radius += threshold;

			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;

			//

			inverseMatrix.getInverse( matrixWorld );
			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );

			var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
			var localThresholdSq = localThreshold * localThreshold;
			var position = new Vector3();

			function testPoint( point, index ) {

				var rayPointDistanceSq = ray.distanceSqToPoint( point );

				if ( rayPointDistanceSq < localThresholdSq ) {

					var intersectPoint = ray.closestPointToPoint( point );
					intersectPoint.applyMatrix4( matrixWorld );

					var distance = raycaster.ray.origin.distanceTo( intersectPoint );

					if ( distance < raycaster.near || distance > raycaster.far ) return;

					intersects.push( {

						distance: distance,
						distanceToRay: Math.sqrt( rayPointDistanceSq ),
						point: intersectPoint.clone(),
						index: index,
						face: null,
						object: object

					} );

				}

			}

			if ( geometry.isBufferGeometry ) {

				var index = geometry.index;
				var attributes = geometry.attributes;
				var positions = attributes.position.array;

				if ( index !== null ) {

					var indices = index.array;

					for ( var i = 0, il = indices.length; i < il; i ++ ) {

						var a = indices[ i ];

						position.fromArray( positions, a * 3 );

						testPoint( position, a );

					}

				} else {

					for ( var i = 0, l = positions.length / 3; i < l; i ++ ) {

						position.fromArray( positions, i * 3 );

						testPoint( position, i );

					}

				}

			} else {

				var vertices = geometry.vertices;

				for ( var i = 0, l = vertices.length; i < l; i ++ ) {

					testPoint( vertices[ i ], i );

				}

			}

		};

	}() ),

	clone: function () {

		return new this.constructor( this.geometry, this.material ).copy( this );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Group() {

	Object3D.call( this );

	this.type = 'Group';

}

Group.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Group

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

	Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

	this.generateMipmaps = false;

	var scope = this;

	function update() {

		requestAnimationFrame( update );

		if ( video.readyState >= video.HAVE_CURRENT_DATA ) {

			scope.needsUpdate = true;

		}

	}

	update();

}

VideoTexture.prototype = Object.create( Texture.prototype );
VideoTexture.prototype.constructor = VideoTexture;

/**
 * @author alteredq / http://alteredqualia.com/
 */

function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

	this.image = { width: width, height: height };
	this.mipmaps = mipmaps;

	// no flipping for cube textures
	// (also flipping doesn't work for compressed textures )

	this.flipY = false;

	// can't generate mipmaps for compressed textures
	// mips must be embedded in DDS files

	this.generateMipmaps = false;

}

CompressedTexture.prototype = Object.create( Texture.prototype );
CompressedTexture.prototype.constructor = CompressedTexture;

CompressedTexture.prototype.isCompressedTexture = true;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

	Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

	this.needsUpdate = true;

}

CanvasTexture.prototype = Object.create( Texture.prototype );
CanvasTexture.prototype.constructor = CanvasTexture;

/**
 * @author Matt DesLauriers / @mattdesl
 * @author atix / arthursilber.de
 */

function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {

	format = format !== undefined ? format : DepthFormat;

	if ( format !== DepthFormat && format !== DepthStencilFormat ) {

		throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )

	}

	if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;
	if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;

	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

	this.image = { width: width, height: height };

	this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
	this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

	this.flipY = false;
	this.generateMipmaps	= false;

}

DepthTexture.prototype = Object.create( Texture.prototype );
DepthTexture.prototype.constructor = DepthTexture;
DepthTexture.prototype.isDepthTexture = true;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */

function WireframeGeometry( geometry ) {

	BufferGeometry.call( this );

	this.type = 'WireframeGeometry';

	// buffer

	var vertices = [];

	// helper variables

	var i, j, l, o, ol;
	var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;
	var key, keys = [ 'a', 'b', 'c' ];
	var vertex;

	// different logic for Geometry and BufferGeometry

	if ( geometry && geometry.isGeometry ) {

		// create a data structure that contains all edges without duplicates

		var faces = geometry.faces;

		for ( i = 0, l = faces.length; i < l; i ++ ) {

			var face = faces[ i ];

			for ( j = 0; j < 3; j ++ ) {

				edge1 = face[ keys[ j ] ];
				edge2 = face[ keys[ ( j + 1 ) % 3 ] ];
				edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates
				edge[ 1 ] = Math.max( edge1, edge2 );

				key = edge[ 0 ] + ',' + edge[ 1 ];

				if ( edges[ key ] === undefined ) {

					edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };

				}

			}

		}

		// generate vertices

		for ( key in edges ) {

			e = edges[ key ];

			vertex = geometry.vertices[ e.index1 ];
			vertices.push( vertex.x, vertex.y, vertex.z );

			vertex = geometry.vertices[ e.index2 ];
			vertices.push( vertex.x, vertex.y, vertex.z );

		}

	} else if ( geometry && geometry.isBufferGeometry ) {

		var position, indices, groups;
		var group, start, count;
		var index1, index2;

		vertex = new Vector3();

		if ( geometry.index !== null ) {

			// indexed BufferGeometry

			position = geometry.attributes.position;
			indices = geometry.index;
			groups = geometry.groups;

			if ( groups.length === 0 ) {

				groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];

			}

			// create a data structure that contains all eges without duplicates

			for ( o = 0, ol = groups.length; o < ol; ++ o ) {

				group = groups[ o ];

				start = group.start;
				count = group.count;

				for ( i = start, l = ( start + count ); i < l; i += 3 ) {

					for ( j = 0; j < 3; j ++ ) {

						edge1 = indices.getX( i + j );
						edge2 = indices.getX( i + ( j + 1 ) % 3 );
						edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates
						edge[ 1 ] = Math.max( edge1, edge2 );

						key = edge[ 0 ] + ',' + edge[ 1 ];

						if ( edges[ key ] === undefined ) {

							edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };

						}

					}

				}

			}

			// generate vertices

			for ( key in edges ) {

				e = edges[ key ];

				vertex.fromBufferAttribute( position, e.index1 );
				vertices.push( vertex.x, vertex.y, vertex.z );

				vertex.fromBufferAttribute( position, e.index2 );
				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		} else {

			// non-indexed BufferGeometry

			position = geometry.attributes.position;

			for ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {

				for ( j = 0; j < 3; j ++ ) {

					// three edges per triangle, an edge is represented as (index1, index2)
					// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)

					index1 = 3 * i + j;
					vertex.fromBufferAttribute( position, index1 );
					vertices.push( vertex.x, vertex.y, vertex.z );

					index2 = 3 * i + ( ( j + 1 ) % 3 );
					vertex.fromBufferAttribute( position, index2 );
					vertices.push( vertex.x, vertex.y, vertex.z );

				}

			}

		}

	}

	// build geometry

	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

}

WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );
WireframeGeometry.prototype.constructor = WireframeGeometry;

/**
 * @author zz85 / https://github.com/zz85
 *
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
 */

function ParametricGeometry( func, slices, stacks ) {

	Geometry.call( this );

	this.type = 'ParametricGeometry';

	this.parameters = {
		func: func,
		slices: slices,
		stacks: stacks
	};

	this.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );
	this.mergeVertices();

}

ParametricGeometry.prototype = Object.create( Geometry.prototype );
ParametricGeometry.prototype.constructor = ParametricGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
 */

function ParametricBufferGeometry( func, slices, stacks ) {

	BufferGeometry.call( this );

	this.type = 'ParametricBufferGeometry';

	this.parameters = {
		func: func,
		slices: slices,
		stacks: stacks
	};

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	var EPS = 0.00001;
	var pu = new Vector3(), pv = new Vector3(), normal = new Vector3();

	var i, j;

	// generate vertices, normals and uvs

	var sliceCount = slices + 1;

	for ( i = 0; i <= stacks; i ++ ) {

		var v = i / stacks;

		for ( j = 0; j <= slices; j ++ ) {

			var u = j / slices;

			var p = func( u, v );
			vertices.push( p.x, p.y, p.z );

			// approximate tangent vectors via finite differences

			if ( u - EPS >= 0 ) {

				pu.subVectors( p, func( u - EPS, v ) );

			} else {

				pu.subVectors( func( u + EPS, v ), p );

			}

			if ( v - EPS >= 0 ) {

				pv.subVectors( p, func( u, v - EPS ) );

			} else {

				pv.subVectors( func( u, v + EPS ), p );

			}

			// cross product of tangent vectors returns surface normal

			normal.crossVectors( pu, pv ).normalize();
			normals.push( normal.x, normal.y, normal.z );

			uvs.push( u, v );

		}

	}

	// generate indices

	for ( i = 0; i < stacks; i ++ ) {

		for ( j = 0; j < slices; j ++ ) {

			var a = i * sliceCount + j;
			var b = i * sliceCount + j + 1;
			var c = ( i + 1 ) * sliceCount + j + 1;
			var d = ( i + 1 ) * sliceCount + j;

			// faces one and two

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

ParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;

/**
 * @author clockworkgeek / https://github.com/clockworkgeek
 * @author timothypratley / https://github.com/timothypratley
 * @author WestLangley / http://github.com/WestLangley
*/

function PolyhedronGeometry( vertices, indices, radius, detail ) {

	Geometry.call( this );

	this.type = 'PolyhedronGeometry';

	this.parameters = {
		vertices: vertices,
		indices: indices,
		radius: radius,
		detail: detail
	};

	this.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );
	this.mergeVertices();

}

PolyhedronGeometry.prototype = Object.create( Geometry.prototype );
PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function PolyhedronBufferGeometry( vertices, indices, radius, detail ) {

	BufferGeometry.call( this );

	this.type = 'PolyhedronBufferGeometry';

	this.parameters = {
		vertices: vertices,
		indices: indices,
		radius: radius,
		detail: detail
	};

	radius = radius || 1;
	detail = detail || 0;

	// default buffer data

	var vertexBuffer = [];
	var uvBuffer = [];

	// the subdivision creates the vertex buffer data

	subdivide( detail );

	// all vertices should lie on a conceptual sphere with a given radius

	appplyRadius( radius );

	// finally, create the uv data

	generateUVs();

	// build non-indexed geometry

	this.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );
	this.normalizeNormals();

	// helper functions

	function subdivide( detail ) {

		var a = new Vector3();
		var b = new Vector3();
		var c = new Vector3();

		// iterate over all faces and apply a subdivison with the given detail value

		for ( var i = 0; i < indices.length; i += 3 ) {

			// get the vertices of the face

			getVertexByIndex( indices[ i + 0 ], a );
			getVertexByIndex( indices[ i + 1 ], b );
			getVertexByIndex( indices[ i + 2 ], c );

			// perform subdivision

			subdivideFace( a, b, c, detail );

		}

	}

	function subdivideFace( a, b, c, detail ) {

		var cols = Math.pow( 2, detail );

		// we use this multidimensional array as a data structure for creating the subdivision

		var v = [];

		var i, j;

		// construct all of the vertices for this subdivision

		for ( i = 0; i <= cols; i ++ ) {

			v[ i ] = [];

			var aj = a.clone().lerp( c, i / cols );
			var bj = b.clone().lerp( c, i / cols );

			var rows = cols - i;

			for ( j = 0; j <= rows; j ++ ) {

				if ( j === 0 && i === cols ) {

					v[ i ][ j ] = aj;

				} else {

					v[ i ][ j ] = aj.clone().lerp( bj, j / rows );

				}

			}

		}

		// construct all of the faces

		for ( i = 0; i < cols; i ++ ) {

			for ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {

				var k = Math.floor( j / 2 );

				if ( j % 2 === 0 ) {

					pushVertex( v[ i ][ k + 1 ] );
					pushVertex( v[ i + 1 ][ k ] );
					pushVertex( v[ i ][ k ] );

				} else {

					pushVertex( v[ i ][ k + 1 ] );
					pushVertex( v[ i + 1 ][ k + 1 ] );
					pushVertex( v[ i + 1 ][ k ] );

				}

			}

		}

	}

	function appplyRadius( radius ) {

		var vertex = new Vector3();

		// iterate over the entire buffer and apply the radius to each vertex

		for ( var i = 0; i < vertexBuffer.length; i += 3 ) {

			vertex.x = vertexBuffer[ i + 0 ];
			vertex.y = vertexBuffer[ i + 1 ];
			vertex.z = vertexBuffer[ i + 2 ];

			vertex.normalize().multiplyScalar( radius );

			vertexBuffer[ i + 0 ] = vertex.x;
			vertexBuffer[ i + 1 ] = vertex.y;
			vertexBuffer[ i + 2 ] = vertex.z;

		}

	}

	function generateUVs() {

		var vertex = new Vector3();

		for ( var i = 0; i < vertexBuffer.length; i += 3 ) {

			vertex.x = vertexBuffer[ i + 0 ];
			vertex.y = vertexBuffer[ i + 1 ];
			vertex.z = vertexBuffer[ i + 2 ];

			var u = azimuth( vertex ) / 2 / Math.PI + 0.5;
			var v = inclination( vertex ) / Math.PI + 0.5;
			uvBuffer.push( u, 1 - v );

		}

		correctUVs();

		correctSeam();

	}

	function correctSeam() {

		// handle case when face straddles the seam, see #3269

		for ( var i = 0; i < uvBuffer.length; i += 6 ) {

			// uv data of a single face

			var x0 = uvBuffer[ i + 0 ];
			var x1 = uvBuffer[ i + 2 ];
			var x2 = uvBuffer[ i + 4 ];

			var max = Math.max( x0, x1, x2 );
			var min = Math.min( x0, x1, x2 );

			// 0.9 is somewhat arbitrary

			if ( max > 0.9 && min < 0.1 ) {

				if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;
				if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;
				if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;

			}

		}

	}

	function pushVertex( vertex ) {

		vertexBuffer.push( vertex.x, vertex.y, vertex.z );

	}

	function getVertexByIndex( index, vertex ) {

		var stride = index * 3;

		vertex.x = vertices[ stride + 0 ];
		vertex.y = vertices[ stride + 1 ];
		vertex.z = vertices[ stride + 2 ];

	}

	function correctUVs() {

		var a = new Vector3();
		var b = new Vector3();
		var c = new Vector3();

		var centroid = new Vector3();

		var uvA = new Vector2();
		var uvB = new Vector2();
		var uvC = new Vector2();

		for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {

			a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );
			b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );
			c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );

			uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );
			uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );
			uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );

			centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );

			var azi = azimuth( centroid );

			correctUV( uvA, j + 0, a, azi );
			correctUV( uvB, j + 2, b, azi );
			correctUV( uvC, j + 4, c, azi );

		}

	}

	function correctUV( uv, stride, vector, azimuth ) {

		if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {

			uvBuffer[ stride ] = uv.x - 1;

		}

		if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {

			uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;

		}

	}

	// Angle around the Y axis, counter-clockwise when looking from above.

	function azimuth( vector ) {

		return Math.atan2( vector.z, - vector.x );

	}


	// Angle above the XZ plane.

	function inclination( vector ) {

		return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );

	}

}

PolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;

/**
 * @author timothypratley / https://github.com/timothypratley
 */

function TetrahedronGeometry( radius, detail ) {

	Geometry.call( this );

	this.type = 'TetrahedronGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

	this.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );
	this.mergeVertices();

}

TetrahedronGeometry.prototype = Object.create( Geometry.prototype );
TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function TetrahedronBufferGeometry( radius, detail ) {

	var vertices = [
		1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1
	];

	var indices = [
		2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1
	];

	PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

	this.type = 'TetrahedronBufferGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

}

TetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;

/**
 * @author timothypratley / https://github.com/timothypratley
 */

function OctahedronGeometry( radius, detail ) {

	Geometry.call( this );

	this.type = 'OctahedronGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

	this.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );
	this.mergeVertices();

}

OctahedronGeometry.prototype = Object.create( Geometry.prototype );
OctahedronGeometry.prototype.constructor = OctahedronGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function OctahedronBufferGeometry( radius, detail ) {

	var vertices = [
		1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1
	];

	var indices = [
		0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2
	];

	PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

	this.type = 'OctahedronBufferGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

}

OctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;

/**
 * @author timothypratley / https://github.com/timothypratley
 */

function IcosahedronGeometry( radius, detail ) {

 	Geometry.call( this );

	this.type = 'IcosahedronGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

	this.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );
	this.mergeVertices();

}

IcosahedronGeometry.prototype = Object.create( Geometry.prototype );
IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function IcosahedronBufferGeometry( radius, detail ) {

	var t = ( 1 + Math.sqrt( 5 ) ) / 2;

	var vertices = [
		- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,
		 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,
		 t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1
	];

	var indices = [
		 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,
		 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,
		 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,
		 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1
	];

	PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

	this.type = 'IcosahedronBufferGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

}

IcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;

/**
 * @author Abe Pazos / https://hamoid.com
 */

function DodecahedronGeometry( radius, detail ) {

	Geometry.call( this );

	this.type = 'DodecahedronGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

	this.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );
	this.mergeVertices();

}

DodecahedronGeometry.prototype = Object.create( Geometry.prototype );
DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function DodecahedronBufferGeometry( radius, detail ) {

	var t = ( 1 + Math.sqrt( 5 ) ) / 2;
	var r = 1 / t;

	var vertices = [

		// (±1, ±1, ±1)
		- 1, - 1, - 1,    - 1, - 1,  1,
		- 1,  1, - 1,    - 1,  1,  1,
		  1, - 1, - 1,     1, - 1,  1,
		  1,  1, - 1,     1,  1,  1,

		// (0, ±1/φ, ±φ)
		 0, - r, - t,     0, - r,  t,
		 0,  r, - t,     0,  r,  t,

		// (±1/φ, ±φ, 0)
		- r, - t,  0,    - r,  t,  0,
		 r, - t,  0,     r,  t,  0,

		// (±φ, 0, ±1/φ)
		- t,  0, - r,     t,  0, - r,
		- t,  0,  r,     t,  0,  r
	];

	var indices = [
		 3, 11,  7,      3,  7, 15,      3, 15, 13,
		 7, 19, 17,      7, 17,  6,      7,  6, 15,
		17,  4,  8,     17,  8, 10,     17, 10,  6,
		 8,  0, 16,      8, 16,  2,      8,  2, 10,
		 0, 12,  1,      0,  1, 18,      0, 18, 16,
		 6, 10,  2,      6,  2, 13,      6, 13, 15,
		 2, 16, 18,      2, 18,  3,      2,  3, 13,
		18,  1,  9,     18,  9, 11,     18, 11,  3,
		 4, 14, 12,      4, 12,  0,      4,  0,  8,
		11,  9,  5,     11,  5, 19,     11, 19,  7,
		19,  5, 14,     19, 14,  4,     19,  4, 17,
		 1, 12, 14,      1, 14,  5,      1,  5,  9
	];

	PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

	this.type = 'DodecahedronBufferGeometry';

	this.parameters = {
		radius: radius,
		detail: detail
	};

}

DodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;

/**
 * @author oosmoxiecode / https://github.com/oosmoxiecode
 * @author WestLangley / https://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author miningold / https://github.com/miningold
 * @author jonobr1 / https://github.com/jonobr1
 *
 * Creates a tube which extrudes along a 3d spline.
 */

function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {

	Geometry.call( this );

	this.type = 'TubeGeometry';

	this.parameters = {
		path: path,
		tubularSegments: tubularSegments,
		radius: radius,
		radialSegments: radialSegments,
		closed: closed
	};

	if ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );

	var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );

	// expose internals

	this.tangents = bufferGeometry.tangents;
	this.normals = bufferGeometry.normals;
	this.binormals = bufferGeometry.binormals;

	// create geometry

	this.fromBufferGeometry( bufferGeometry );
	this.mergeVertices();

}

TubeGeometry.prototype = Object.create( Geometry.prototype );
TubeGeometry.prototype.constructor = TubeGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {

	BufferGeometry.call( this );

	this.type = 'TubeBufferGeometry';

	this.parameters = {
		path: path,
		tubularSegments: tubularSegments,
		radius: radius,
		radialSegments: radialSegments,
		closed: closed
	};

	tubularSegments = tubularSegments || 64;
	radius = radius || 1;
	radialSegments = radialSegments || 8;
	closed = closed || false;

	var frames = path.computeFrenetFrames( tubularSegments, closed );

	// expose internals

	this.tangents = frames.tangents;
	this.normals = frames.normals;
	this.binormals = frames.binormals;

	// helper variables

	var vertex = new Vector3();
	var normal = new Vector3();
	var uv = new Vector2();

	var i, j;

	// buffer

	var vertices = [];
	var normals = [];
	var uvs = [];
	var indices = [];

	// create buffer data

	generateBufferData();

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	// functions

	function generateBufferData() {

		for ( i = 0; i < tubularSegments; i ++ ) {

			generateSegment( i );

		}

		// if the geometry is not closed, generate the last row of vertices and normals
		// at the regular position on the given path
		//
		// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)

		generateSegment( ( closed === false ) ? tubularSegments : 0 );

		// uvs are generated in a separate function.
		// this makes it easy compute correct values for closed geometries

		generateUVs();

		// finally create faces

		generateIndices();

	}

	function generateSegment( i ) {

		// we use getPointAt to sample evenly distributed points from the given path

		var P = path.getPointAt( i / tubularSegments );

		// retrieve corresponding normal and binormal

		var N = frames.normals[ i ];
		var B = frames.binormals[ i ];

		// generate normals and vertices for the current segment

		for ( j = 0; j <= radialSegments; j ++ ) {

			var v = j / radialSegments * Math.PI * 2;

			var sin =   Math.sin( v );
			var cos = - Math.cos( v );

			// normal

			normal.x = ( cos * N.x + sin * B.x );
			normal.y = ( cos * N.y + sin * B.y );
			normal.z = ( cos * N.z + sin * B.z );
			normal.normalize();

			normals.push( normal.x, normal.y, normal.z );

			// vertex

			vertex.x = P.x + radius * normal.x;
			vertex.y = P.y + radius * normal.y;
			vertex.z = P.z + radius * normal.z;

			vertices.push( vertex.x, vertex.y, vertex.z );

		}

	}

	function generateIndices() {

		for ( j = 1; j <= tubularSegments; j ++ ) {

			for ( i = 1; i <= radialSegments; i ++ ) {

				var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
				var b = ( radialSegments + 1 ) * j + ( i - 1 );
				var c = ( radialSegments + 1 ) * j + i;
				var d = ( radialSegments + 1 ) * ( j - 1 ) + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

	}

	function generateUVs() {

		for ( i = 0; i <= tubularSegments; i ++ ) {

			for ( j = 0; j <= radialSegments; j ++ ) {

				uv.x = i / tubularSegments;
				uv.y = j / radialSegments;

				uvs.push( uv.x, uv.y );

			}

		}

	}

}

TubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;

/**
 * @author oosmoxiecode
 */

function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {

	Geometry.call( this );

	this.type = 'TorusKnotGeometry';

	this.parameters = {
		radius: radius,
		tube: tube,
		tubularSegments: tubularSegments,
		radialSegments: radialSegments,
		p: p,
		q: q
	};

	if ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );

	this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );
	this.mergeVertices();

}

TorusKnotGeometry.prototype = Object.create( Geometry.prototype );
TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 * see: http://www.blackpawn.com/texts/pqtorus/
 */

function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {

	BufferGeometry.call( this );

	this.type = 'TorusKnotBufferGeometry';

	this.parameters = {
		radius: radius,
		tube: tube,
		tubularSegments: tubularSegments,
		radialSegments: radialSegments,
		p: p,
		q: q
	};

	radius = radius || 100;
	tube = tube || 40;
	tubularSegments = Math.floor( tubularSegments ) || 64;
	radialSegments = Math.floor( radialSegments ) || 8;
	p = p || 2;
	q = q || 3;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var i, j;

	var vertex = new Vector3();
	var normal = new Vector3();

	var P1 = new Vector3();
	var P2 = new Vector3();

	var B = new Vector3();
	var T = new Vector3();
	var N = new Vector3();

	// generate vertices, normals and uvs

	for ( i = 0; i <= tubularSegments; ++ i ) {

		// the radian "u" is used to calculate the position on the torus curve of the current tubular segement

		var u = i / tubularSegments * p * Math.PI * 2;

		// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
		// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions

		calculatePositionOnCurve( u, p, q, radius, P1 );
		calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );

		// calculate orthonormal basis

		T.subVectors( P2, P1 );
		N.addVectors( P2, P1 );
		B.crossVectors( T, N );
		N.crossVectors( B, T );

		// normalize B, N. T can be ignored, we don't use it

		B.normalize();
		N.normalize();

		for ( j = 0; j <= radialSegments; ++ j ) {

			// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
			// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.

			var v = j / radialSegments * Math.PI * 2;
			var cx = - tube * Math.cos( v );
			var cy = tube * Math.sin( v );

			// now calculate the final vertex position.
			// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve

			vertex.x = P1.x + ( cx * N.x + cy * B.x );
			vertex.y = P1.y + ( cx * N.y + cy * B.y );
			vertex.z = P1.z + ( cx * N.z + cy * B.z );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)

			normal.subVectors( vertex, P1 ).normalize();

			normals.push( normal.x, normal.y, normal.z );

			// uv

			uvs.push( i / tubularSegments );
			uvs.push( j / radialSegments );

		}

	}

	// generate indices

	for ( j = 1; j <= tubularSegments; j ++ ) {

		for ( i = 1; i <= radialSegments; i ++ ) {

			// indices

			var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
			var b = ( radialSegments + 1 ) * j + ( i - 1 );
			var c = ( radialSegments + 1 ) * j + i;
			var d = ( radialSegments + 1 ) * ( j - 1 ) + i;

			// faces

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	// this function calculates the current position on the torus curve

	function calculatePositionOnCurve( u, p, q, radius, position ) {

		var cu = Math.cos( u );
		var su = Math.sin( u );
		var quOverP = q / p * u;
		var cs = Math.cos( quOverP );

		position.x = radius * ( 2 + cs ) * 0.5 * cu;
		position.y = radius * ( 2 + cs ) * su * 0.5;
		position.z = radius * Math.sin( quOverP ) * 0.5;

	}

}

TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;

/**
 * @author oosmoxiecode
 * @author mrdoob / http://mrdoob.com/
 * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888
 */

function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {

	Geometry.call( this );

	this.type = 'TorusGeometry';

	this.parameters = {
		radius: radius,
		tube: tube,
		radialSegments: radialSegments,
		tubularSegments: tubularSegments,
		arc: arc
	};

	this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );
	this.mergeVertices();

}

TorusGeometry.prototype = Object.create( Geometry.prototype );
TorusGeometry.prototype.constructor = TorusGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {

	BufferGeometry.call( this );

	this.type = 'TorusBufferGeometry';

	this.parameters = {
		radius: radius,
		tube: tube,
		radialSegments: radialSegments,
		tubularSegments: tubularSegments,
		arc: arc
	};

	radius = radius || 100;
	tube = tube || 40;
	radialSegments = Math.floor( radialSegments ) || 8;
	tubularSegments = Math.floor( tubularSegments ) || 6;
	arc = arc || Math.PI * 2;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var center = new Vector3();
	var vertex = new Vector3();
	var normal = new Vector3();

	var j, i;

	// generate vertices, normals and uvs

	for ( j = 0; j <= radialSegments; j ++ ) {

		for ( i = 0; i <= tubularSegments; i ++ ) {

			var u = i / tubularSegments * arc;
			var v = j / radialSegments * Math.PI * 2;

			// vertex

			vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );
			vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );
			vertex.z = tube * Math.sin( v );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			center.x = radius * Math.cos( u );
			center.y = radius * Math.sin( u );
			normal.subVectors( vertex, center ).normalize();

			normals.push( normal.x, normal.y, normal.z );

			// uv

			uvs.push( i / tubularSegments );
			uvs.push( j / radialSegments );

		}

	}

	// generate indices

	for ( j = 1; j <= radialSegments; j ++ ) {

		for ( i = 1; i <= tubularSegments; i ++ ) {

			// indices

			var a = ( tubularSegments + 1 ) * j + i - 1;
			var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;
			var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;
			var d = ( tubularSegments + 1 ) * j + i;

			// faces

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */

var ShapeUtils = {

	// calculate area of the contour polygon

	area: function ( contour ) {

		var n = contour.length;
		var a = 0.0;

		for ( var p = n - 1, q = 0; q < n; p = q ++ ) {

			a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;

		}

		return a * 0.5;

	},

	triangulate: ( function () {

		/**
		 * This code is a quick port of code written in C++ which was submitted to
		 * flipcode.com by John W. Ratcliff  // July 22, 2000
		 * See original code and more information here:
		 * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
		 *
		 * ported to actionscript by Zevan Rosser
		 * www.actionsnippet.com
		 *
		 * ported to javascript by Joshua Koo
		 * http://www.lab4games.net/zz85/blog
		 *
		 */

		function snip( contour, u, v, w, n, verts ) {

			var p;
			var ax, ay, bx, by;
			var cx, cy, px, py;

			ax = contour[ verts[ u ] ].x;
			ay = contour[ verts[ u ] ].y;

			bx = contour[ verts[ v ] ].x;
			by = contour[ verts[ v ] ].y;

			cx = contour[ verts[ w ] ].x;
			cy = contour[ verts[ w ] ].y;

			if ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;

			var aX, aY, bX, bY, cX, cY;
			var apx, apy, bpx, bpy, cpx, cpy;
			var cCROSSap, bCROSScp, aCROSSbp;

			aX = cx - bx;  aY = cy - by;
			bX = ax - cx;  bY = ay - cy;
			cX = bx - ax;  cY = by - ay;

			for ( p = 0; p < n; p ++ ) {

				px = contour[ verts[ p ] ].x;
				py = contour[ verts[ p ] ].y;

				if ( ( ( px === ax ) && ( py === ay ) ) ||
					 ( ( px === bx ) && ( py === by ) ) ||
					 ( ( px === cx ) && ( py === cy ) ) )	continue;

				apx = px - ax;  apy = py - ay;
				bpx = px - bx;  bpy = py - by;
				cpx = px - cx;  cpy = py - cy;

				// see if p is inside triangle abc

				aCROSSbp = aX * bpy - aY * bpx;
				cCROSSap = cX * apy - cY * apx;
				bCROSScp = bX * cpy - bY * cpx;

				if ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;

			}

			return true;

		}

		// takes in an contour array and returns

		return function triangulate( contour, indices ) {

			var n = contour.length;

			if ( n < 3 ) return null;

			var result = [],
				verts = [],
				vertIndices = [];

			/* we want a counter-clockwise polygon in verts */

			var u, v, w;

			if ( ShapeUtils.area( contour ) > 0.0 ) {

				for ( v = 0; v < n; v ++ ) verts[ v ] = v;

			} else {

				for ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;

			}

			var nv = n;

			/*  remove nv - 2 vertices, creating 1 triangle every time */

			var count = 2 * nv;   /* error detection */

			for ( v = nv - 1; nv > 2; ) {

				/* if we loop, it is probably a non-simple polygon */

				if ( ( count -- ) <= 0 ) {

					//** Triangulate: ERROR - probable bad polygon!

					//throw ( "Warning, unable to triangulate polygon!" );
					//return null;
					// Sometimes warning is fine, especially polygons are triangulated in reverse.
					console.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );

					if ( indices ) return vertIndices;
					return result;

				}

				/* three consecutive vertices in current polygon, <u,v,w> */

				u = v; 	 	if ( nv <= u ) u = 0;     /* previous */
				v = u + 1;  if ( nv <= v ) v = 0;     /* new v    */
				w = v + 1;  if ( nv <= w ) w = 0;     /* next     */

				if ( snip( contour, u, v, w, nv, verts ) ) {

					var a, b, c, s, t;

					/* true names of the vertices */

					a = verts[ u ];
					b = verts[ v ];
					c = verts[ w ];

					/* output Triangle */

					result.push( [ contour[ a ],
						contour[ b ],
						contour[ c ] ] );


					vertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );

					/* remove v from the remaining polygon */

					for ( s = v, t = v + 1; t < nv; s ++, t ++ ) {

						verts[ s ] = verts[ t ];

					}

					nv --;

					/* reset error detection counter */

					count = 2 * nv;

				}

			}

			if ( indices ) return vertIndices;
			return result;

		}

	} )(),

	triangulateShape: function ( contour, holes ) {

		function removeDupEndPts(points) {

			var l = points.length;

			if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {

				points.pop();

			}

		}

		removeDupEndPts( contour );
		holes.forEach( removeDupEndPts );

		function point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {

			// inOtherPt needs to be collinear to the inSegment
			if ( inSegPt1.x !== inSegPt2.x ) {

				if ( inSegPt1.x < inSegPt2.x ) {

					return	( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );

				} else {

					return	( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );

				}

			} else {

				if ( inSegPt1.y < inSegPt2.y ) {

					return	( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );

				} else {

					return	( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );

				}

			}

		}

		function intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {

			var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;
			var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;

			var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;
			var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;

			var limit		= seg1dy * seg2dx - seg1dx * seg2dy;
			var perpSeg1	= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;

			if ( Math.abs( limit ) > Number.EPSILON ) {

				// not parallel

				var perpSeg2;
				if ( limit > 0 ) {

					if ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) 		return [];
					perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;
					if ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) 		return [];

				} else {

					if ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) 		return [];
					perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;
					if ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) 		return [];

				}

				// i.e. to reduce rounding errors
				// intersection at endpoint of segment#1?
				if ( perpSeg2 === 0 ) {

					if ( ( inExcludeAdjacentSegs ) &&
						 ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )		return [];
					return [ inSeg1Pt1 ];

				}
				if ( perpSeg2 === limit ) {

					if ( ( inExcludeAdjacentSegs ) &&
						 ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )		return [];
					return [ inSeg1Pt2 ];

				}
				// intersection at endpoint of segment#2?
				if ( perpSeg1 === 0 )		return [ inSeg2Pt1 ];
				if ( perpSeg1 === limit )	return [ inSeg2Pt2 ];

				// return real intersection point
				var factorSeg1 = perpSeg2 / limit;
				return	[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,
							y: inSeg1Pt1.y + factorSeg1 * seg1dy } ];

			} else {

				// parallel or collinear
				if ( ( perpSeg1 !== 0 ) ||
					 ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) 			return [];

				// they are collinear or degenerate
				var seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );	// segment1 is just a point?
				var seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );	// segment2 is just a point?
				// both segments are points
				if ( seg1Pt && seg2Pt ) {

					if ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||
						 ( inSeg1Pt1.y !== inSeg2Pt1.y ) )		return [];	// they are distinct  points
					return [ inSeg1Pt1 ];                 						// they are the same point

				}
				// segment#1  is a single point
				if ( seg1Pt ) {

					if ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )		return [];		// but not in segment#2
					return [ inSeg1Pt1 ];

				}
				// segment#2  is a single point
				if ( seg2Pt ) {

					if ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )		return [];		// but not in segment#1
					return [ inSeg2Pt1 ];

				}

				// they are collinear segments, which might overlap
				var seg1min, seg1max, seg1minVal, seg1maxVal;
				var seg2min, seg2max, seg2minVal, seg2maxVal;
				if ( seg1dx !== 0 ) {

					// the segments are NOT on a vertical line
					if ( inSeg1Pt1.x < inSeg1Pt2.x ) {

						seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;
						seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;

					} else {

						seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;
						seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;

					}
					if ( inSeg2Pt1.x < inSeg2Pt2.x ) {

						seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;
						seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;

					} else {

						seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;
						seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;

					}

				} else {

					// the segments are on a vertical line
					if ( inSeg1Pt1.y < inSeg1Pt2.y ) {

						seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;
						seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;

					} else {

						seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;
						seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;

					}
					if ( inSeg2Pt1.y < inSeg2Pt2.y ) {

						seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;
						seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;

					} else {

						seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;
						seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;

					}

				}
				if ( seg1minVal <= seg2minVal ) {

					if ( seg1maxVal <  seg2minVal )	return [];
					if ( seg1maxVal === seg2minVal )	{

						if ( inExcludeAdjacentSegs )		return [];
						return [ seg2min ];

					}
					if ( seg1maxVal <= seg2maxVal )	return [ seg2min, seg1max ];
					return	[ seg2min, seg2max ];

				} else {

					if ( seg1minVal >  seg2maxVal )	return [];
					if ( seg1minVal === seg2maxVal )	{

						if ( inExcludeAdjacentSegs )		return [];
						return [ seg1min ];

					}
					if ( seg1maxVal <= seg2maxVal )	return [ seg1min, seg1max ];
					return	[ seg1min, seg2max ];

				}

			}

		}

		function isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {

			// The order of legs is important

			// translation of all points, so that Vertex is at (0,0)
			var legFromPtX	= inLegFromPt.x - inVertex.x,  legFromPtY	= inLegFromPt.y - inVertex.y;
			var legToPtX	= inLegToPt.x	- inVertex.x,  legToPtY		= inLegToPt.y	- inVertex.y;
			var otherPtX	= inOtherPt.x	- inVertex.x,  otherPtY		= inOtherPt.y	- inVertex.y;

			// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.
			var from2toAngle	= legFromPtX * legToPtY - legFromPtY * legToPtX;
			var from2otherAngle	= legFromPtX * otherPtY - legFromPtY * otherPtX;

			if ( Math.abs( from2toAngle ) > Number.EPSILON ) {

				// angle != 180 deg.

				var other2toAngle		= otherPtX * legToPtY - otherPtY * legToPtX;
				// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );

				if ( from2toAngle > 0 ) {

					// main angle < 180 deg.
					return	( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );

				} else {

					// main angle > 180 deg.
					return	( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );

				}

			} else {

				// angle == 180 deg.
				// console.log( "from2to: 180 deg., from2other: " + from2otherAngle  );
				return	( from2otherAngle > 0 );

			}

		}


		function removeHoles( contour, holes ) {

			var shape = contour.concat(); // work on this shape
			var hole;

			function isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {

				// Check if hole point lies within angle around shape point
				var lastShapeIdx = shape.length - 1;

				var prevShapeIdx = inShapeIdx - 1;
				if ( prevShapeIdx < 0 )			prevShapeIdx = lastShapeIdx;

				var nextShapeIdx = inShapeIdx + 1;
				if ( nextShapeIdx > lastShapeIdx )	nextShapeIdx = 0;

				var insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );
				if ( ! insideAngle ) {

					// console.log( "Vertex (Shape): " + inShapeIdx + ", Point: " + hole[inHoleIdx].x + "/" + hole[inHoleIdx].y );
					return	false;

				}

				// Check if shape point lies within angle around hole point
				var lastHoleIdx = hole.length - 1;

				var prevHoleIdx = inHoleIdx - 1;
				if ( prevHoleIdx < 0 )			prevHoleIdx = lastHoleIdx;

				var nextHoleIdx = inHoleIdx + 1;
				if ( nextHoleIdx > lastHoleIdx )	nextHoleIdx = 0;

				insideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );
				if ( ! insideAngle ) {

					// console.log( "Vertex (Hole): " + inHoleIdx + ", Point: " + shape[inShapeIdx].x + "/" + shape[inShapeIdx].y );
					return	false;

				}

				return	true;

			}

			function intersectsShapeEdge( inShapePt, inHolePt ) {

				// checks for intersections with shape edges
				var sIdx, nextIdx, intersection;
				for ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {

					nextIdx = sIdx + 1; nextIdx %= shape.length;
					intersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );
					if ( intersection.length > 0 )		return	true;

				}

				return	false;

			}

			var indepHoles = [];

			function intersectsHoleEdge( inShapePt, inHolePt ) {

				// checks for intersections with hole edges
				var ihIdx, chkHole,
					hIdx, nextIdx, intersection;
				for ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {

					chkHole = holes[ indepHoles[ ihIdx ]];
					for ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {

						nextIdx = hIdx + 1; nextIdx %= chkHole.length;
						intersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );
						if ( intersection.length > 0 )		return	true;

					}

				}
				return	false;

			}

			var holeIndex, shapeIndex,
				shapePt, holePt,
				holeIdx, cutKey, failedCuts = [],
				tmpShape1, tmpShape2,
				tmpHole1, tmpHole2;

			for ( var h = 0, hl = holes.length; h < hl; h ++ ) {

				indepHoles.push( h );

			}

			var minShapeIndex = 0;
			var counter = indepHoles.length * 2;
			while ( indepHoles.length > 0 ) {

				counter --;
				if ( counter < 0 ) {

					console.log( "Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!" );
					break;

				}

				// search for shape-vertex and hole-vertex,
				// which can be connected without intersections
				for ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {

					shapePt = shape[ shapeIndex ];
					holeIndex	= - 1;

					// search for hole which can be reached without intersections
					for ( var h = 0; h < indepHoles.length; h ++ ) {

						holeIdx = indepHoles[ h ];

						// prevent multiple checks
						cutKey = shapePt.x + ":" + shapePt.y + ":" + holeIdx;
						if ( failedCuts[ cutKey ] !== undefined )			continue;

						hole = holes[ holeIdx ];
						for ( var h2 = 0; h2 < hole.length; h2 ++ ) {

							holePt = hole[ h2 ];
							if ( ! isCutLineInsideAngles( shapeIndex, h2 ) )		continue;
							if ( intersectsShapeEdge( shapePt, holePt ) )		continue;
							if ( intersectsHoleEdge( shapePt, holePt ) )		continue;

							holeIndex = h2;
							indepHoles.splice( h, 1 );

							tmpShape1 = shape.slice( 0, shapeIndex + 1 );
							tmpShape2 = shape.slice( shapeIndex );
							tmpHole1 = hole.slice( holeIndex );
							tmpHole2 = hole.slice( 0, holeIndex + 1 );

							shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );

							minShapeIndex = shapeIndex;

							// Debug only, to show the selected cuts
							// glob_CutLines.push( [ shapePt, holePt ] );

							break;

						}
						if ( holeIndex >= 0 )	break;		// hole-vertex found

						failedCuts[ cutKey ] = true;			// remember failure

					}
					if ( holeIndex >= 0 )	break;		// hole-vertex found

				}

			}

			return shape; 			/* shape with no holes */

		}


		var i, il, f, face,
			key, index,
			allPointsMap = {};

		// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.

		var allpoints = contour.concat();

		for ( var h = 0, hl = holes.length; h < hl; h ++ ) {

			Array.prototype.push.apply( allpoints, holes[ h ] );

		}

		//console.log( "allpoints",allpoints, allpoints.length );

		// prepare all points map

		for ( i = 0, il = allpoints.length; i < il; i ++ ) {

			key = allpoints[ i ].x + ":" + allpoints[ i ].y;

			if ( allPointsMap[ key ] !== undefined ) {

				console.warn( "THREE.ShapeUtils: Duplicate point", key, i );

			}

			allPointsMap[ key ] = i;

		}

		// remove holes by cutting paths to holes and adding them to the shape
		var shapeWithoutHoles = removeHoles( contour, holes );

		var triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape
		//console.log( "triangles",triangles, triangles.length );

		// check all face vertices against all points map

		for ( i = 0, il = triangles.length; i < il; i ++ ) {

			face = triangles[ i ];

			for ( f = 0; f < 3; f ++ ) {

				key = face[ f ].x + ":" + face[ f ].y;

				index = allPointsMap[ key ];

				if ( index !== undefined ) {

					face[ f ] = index;

				}

			}

		}

		return triangles.concat();

	},

	isClockWise: function ( pts ) {

		return ShapeUtils.area( pts ) < 0;

	}

};

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  amount: <int>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline is bevel
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *  frames: <Object> // containing arrays of tangents, normals, binormals
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 **/
 
 function ExtrudeGeometry( shapes, options ) {

	Geometry.call( this );

	this.type = 'ExtrudeGeometry';

	this.parameters = {
		shapes: shapes,
		options: options
	};

	this.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );
	this.mergeVertices();

}


ExtrudeGeometry.prototype = Object.create( Geometry.prototype );
ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;

 

function ExtrudeBufferGeometry( shapes, options ) {

	if ( typeof ( shapes ) === "undefined" ) {

		shapes = [];
		return;

	}

	BufferGeometry.call( this );

	this.type = 'ExtrudeBufferGeometry';

	shapes = Array.isArray( shapes ) ? shapes : [ shapes ];

	this.addShapeList( shapes, options );

	this.computeVertexNormals();

	// can't really use automatic vertex normals
	// as then front and back sides get smoothed too
	// should do separate smoothing just for sides

	//this.computeVertexNormals();

	//console.log( "took", ( Date.now() - startTime ) );

}

ExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;

ExtrudeBufferGeometry.prototype.getArrays = function () {

	var positionAttribute = this.getAttribute( "position" );
	var verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];

	var uvAttribute = this.getAttribute( "uv" );
	var uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];

	var IndexAttribute = this.index;
	var indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];

	return {
		position: verticesArray,
		uv: uvArray,
		index: indicesArray
	};

};

ExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {

	var sl = shapes.length;
	options.arrays = this.getArrays();

	for ( var s = 0; s < sl; s ++ ) {

		var shape = shapes[ s ];
		this.addShape( shape, options );

	}

	this.setIndex( options.arrays.index );
	this.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );

};

ExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {

	var arrays = options.arrays ? options.arrays : this.getArrays();
	var verticesArray = arrays.position;
	var indicesArray = arrays.index;
	var uvArray = arrays.uv;

	var placeholder = [];


	var amount = options.amount !== undefined ? options.amount : 100;

	var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10
	var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8
	var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;

	var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false

	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;

	var steps = options.steps !== undefined ? options.steps : 1;

	var extrudePath = options.extrudePath;
	var extrudePts, extrudeByPath = false;

	// Use default WorldUVGenerator if no UV generators are specified.
	var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;

	var splineTube, binormal, normal, position2;
	if ( extrudePath ) {

		extrudePts = extrudePath.getSpacedPoints( steps );

		extrudeByPath = true;
		bevelEnabled = false; // bevels not supported for path extrusion

		// SETUP TNB variables

		// TODO1 - have a .isClosed in spline?

		splineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );

		// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);

		binormal = new Vector3();
		normal = new Vector3();
		position2 = new Vector3();

	}

	// Safeguards if bevels are not enabled

	if ( ! bevelEnabled ) {

		bevelSegments = 0;
		bevelThickness = 0;
		bevelSize = 0;

	}

	// Variables initialization

	var ahole, h, hl; // looping of holes
	var scope = this;

	var shapePoints = shape.extractPoints( curveSegments );

	var vertices = shapePoints.shape;
	var holes = shapePoints.holes;

	var reverse = ! ShapeUtils.isClockWise( vertices );

	if ( reverse ) {

		vertices = vertices.reverse();

		// Maybe we should also check if holes are in the opposite direction, just to be safe ...

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];

			if ( ShapeUtils.isClockWise( ahole ) ) {

				holes[ h ] = ahole.reverse();

			}

		}

		reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!

	}


	var faces = ShapeUtils.triangulateShape( vertices, holes );

	/* Vertices */

	var contour = vertices; // vertices has all points but contour has only points of circumference

	for ( h = 0, hl = holes.length; h < hl; h ++ ) {

		ahole = holes[ h ];

		vertices = vertices.concat( ahole );

	}


	function scalePt2( pt, vec, size ) {

		if ( ! vec ) console.error( "THREE.ExtrudeGeometry: vec does not exist" );

		return vec.clone().multiplyScalar( size ).add( pt );

	}

	var b, bs, t, z,
		vert, vlen = vertices.length,
		face, flen = faces.length;


	// Find directions for point movement


	function getBevelVec( inPt, inPrev, inNext ) {

		// computes for inPt the corresponding point inPt' on a new contour
		//   shifted by 1 unit (length of normalized vector) to the left
		// if we walk along contour clockwise, this new contour is outside the old one
		//
		// inPt' is the intersection of the two lines parallel to the two
		//  adjacent edges of inPt at a distance of 1 unit on the left side.

		var v_trans_x, v_trans_y, shrink_by = 1; // resulting translation vector for inPt

		// good reading for geometry algorithms (here: line-line intersection)
		// http://geomalgorithms.com/a05-_intersect-1.html

		var v_prev_x = inPt.x - inPrev.x,
			v_prev_y = inPt.y - inPrev.y;
		var v_next_x = inNext.x - inPt.x,
			v_next_y = inNext.y - inPt.y;

		var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );

		// check for collinear edges
		var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );

		if ( Math.abs( collinear0 ) > Number.EPSILON ) {

			// not collinear

			// length of vectors for normalizing

			var v_prev_len = Math.sqrt( v_prev_lensq );
			var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );

			// shift adjacent points by unit vectors to the left

			var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );
			var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );

			var ptNextShift_x = ( inNext.x - v_next_y / v_next_len );
			var ptNextShift_y = ( inNext.y + v_next_x / v_next_len );

			// scaling factor for v_prev to intersection point

			var sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -
					( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /
				( v_prev_x * v_next_y - v_prev_y * v_next_x );

			// vector from inPt to intersection point

			v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );
			v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );

			// Don't normalize!, otherwise sharp corners become ugly
			//  but prevent crazy spikes
			var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );
			if ( v_trans_lensq <= 2 ) {

				return new Vector2( v_trans_x, v_trans_y );

			} else {

				shrink_by = Math.sqrt( v_trans_lensq / 2 );

			}

		} else {

			// handle special case of collinear edges

			var direction_eq = false; // assumes: opposite
			if ( v_prev_x > Number.EPSILON ) {

				if ( v_next_x > Number.EPSILON ) {

					direction_eq = true;

				}

			} else {

				if ( v_prev_x < - Number.EPSILON ) {

					if ( v_next_x < - Number.EPSILON ) {

						direction_eq = true;

					}

				} else {

					if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {

						direction_eq = true;

					}

				}

			}

			if ( direction_eq ) {

				// console.log("Warning: lines are a straight sequence");
				v_trans_x = - v_prev_y;
				v_trans_y = v_prev_x;
				shrink_by = Math.sqrt( v_prev_lensq );

			} else {

				// console.log("Warning: lines are a straight spike");
				v_trans_x = v_prev_x;
				v_trans_y = v_prev_y;
				shrink_by = Math.sqrt( v_prev_lensq / 2 );

			}

		}

		return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );

	}


	var contourMovements = [];

	for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

		if ( j === il ) j = 0;
		if ( k === il ) k = 0;

		//  (j)---(i)---(k)
		// console.log('i,j,k', i, j , k)

		contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );

	}

	var holesMovements = [],
		oneHoleMovements, verticesMovements = contourMovements.concat();

	for ( h = 0, hl = holes.length; h < hl; h ++ ) {

		ahole = holes[ h ];

		oneHoleMovements = [];

		for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

			if ( j === il ) j = 0;
			if ( k === il ) k = 0;

			//  (j)---(i)---(k)
			oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );

		}

		holesMovements.push( oneHoleMovements );
		verticesMovements = verticesMovements.concat( oneHoleMovements );

	}


	// Loop bevelSegments, 1 for the front, 1 for the back

	for ( b = 0; b < bevelSegments; b ++ ) {

		//for ( b = bevelSegments; b > 0; b -- ) {

		t = b / bevelSegments;
		z = bevelThickness * Math.cos( t * Math.PI / 2 );
		bs = bevelSize * Math.sin( t * Math.PI / 2 );

		// contract shape

		for ( i = 0, il = contour.length; i < il; i ++ ) {

			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );

			v( vert.x, vert.y, - z );

		}

		// expand holes

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];
			oneHoleMovements = holesMovements[ h ];

			for ( i = 0, il = ahole.length; i < il; i ++ ) {

				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

				v( vert.x, vert.y, - z );

			}

		}

	}

	bs = bevelSize;

	// Back facing vertices

	for ( i = 0; i < vlen; i ++ ) {

		vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

		if ( ! extrudeByPath ) {

			v( vert.x, vert.y, 0 );

		} else {

			// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );

			normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );
			binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );

			position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );

			v( position2.x, position2.y, position2.z );

		}

	}

	// Add stepped vertices...
	// Including front facing vertices

	var s;

	for ( s = 1; s <= steps; s ++ ) {

		for ( i = 0; i < vlen; i ++ ) {

			vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

			if ( ! extrudeByPath ) {

				v( vert.x, vert.y, amount / steps * s );

			} else {

				// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );

				normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );
				binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );

				position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );

				v( position2.x, position2.y, position2.z );

			}

		}

	}


	// Add bevel segments planes

	//for ( b = 1; b <= bevelSegments; b ++ ) {
	for ( b = bevelSegments - 1; b >= 0; b -- ) {

		t = b / bevelSegments;
		z = bevelThickness * Math.cos( t * Math.PI / 2 );
		bs = bevelSize * Math.sin( t * Math.PI / 2 );

		// contract shape

		for ( i = 0, il = contour.length; i < il; i ++ ) {

			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
			v( vert.x, vert.y, amount + z );

		}

		// expand holes

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];
			oneHoleMovements = holesMovements[ h ];

			for ( i = 0, il = ahole.length; i < il; i ++ ) {

				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

				if ( ! extrudeByPath ) {

					v( vert.x, vert.y, amount + z );

				} else {

					v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );

				}

			}

		}

	}

	/* Faces */

	// Top and bottom faces

	buildLidFaces();

	// Sides faces

	buildSideFaces();


	/////  Internal functions

	function buildLidFaces() {
		
		var start = verticesArray.length/3;

		if ( bevelEnabled ) {

			var layer = 0; // steps + 1
			var offset = vlen * layer;

			// Bottom faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );

			}

			layer = steps + bevelSegments * 2;
			offset = vlen * layer;

			// Top faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );

			}

		} else {

			// Bottom faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 2 ], face[ 1 ], face[ 0 ] );

			}

			// Top faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );

			}

		}
		
		scope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);

	}

	// Create faces for the z-sides of the shape

	function buildSideFaces() {

		var start = verticesArray.length/3;
		var layeroffset = 0;
		sidewalls( contour, layeroffset );
		layeroffset += contour.length;

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];
			sidewalls( ahole, layeroffset );

			//, true
			layeroffset += ahole.length;

		}
		

		scope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);


	}

	function sidewalls( contour, layeroffset ) {

		var j, k;
		i = contour.length;

		while ( -- i >= 0 ) {

			j = i;
			k = i - 1;
			if ( k < 0 ) k = contour.length - 1;

			//console.log('b', i,j, i-1, k,vertices.length);

			var s = 0,
				sl = steps + bevelSegments * 2;

			for ( s = 0; s < sl; s ++ ) {

				var slen1 = vlen * s;
				var slen2 = vlen * ( s + 1 );

				var a = layeroffset + j + slen1,
					b = layeroffset + k + slen1,
					c = layeroffset + k + slen2,
					d = layeroffset + j + slen2;

				f4( a, b, c, d, contour, s, sl, j, k );

			}

		}

	}

	function v( x, y, z ) {

		placeholder.push( x );
		placeholder.push( y );
		placeholder.push( z );

	}


	function f3( a, b, c ) {

		addVertex( a );
		addVertex( b );
		addVertex( c );

		var nextIndex = verticesArray.length / 3;
		var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

		addUV( uvs[ 0 ] );
		addUV( uvs[ 1 ] );
		addUV( uvs[ 2 ] );

	}

	function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {

		addVertex( a );
		addVertex( b );
		addVertex( d );

		addVertex( b );
		addVertex( c );
		addVertex( d );


		var nextIndex = verticesArray.length / 3;
		var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

		addUV( uvs[ 0 ] );
		addUV( uvs[ 1 ] );
		addUV( uvs[ 3 ] );

		addUV( uvs[ 1 ] );
		addUV( uvs[ 2 ] );
		addUV( uvs[ 3 ] );

	}

	function addVertex( index ) {

		indicesArray.push( verticesArray.length / 3 );
		verticesArray.push( placeholder[ index * 3 + 0 ] );
		verticesArray.push( placeholder[ index * 3 + 1 ] );
		verticesArray.push( placeholder[ index * 3 + 2 ] );

	}


	function addUV( vector2 ) {

		uvArray.push( vector2.x );
		uvArray.push( vector2.y );

	}

	if ( ! options.arrays ) {

		this.setIndex( indicesArray );
		this.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );
		this.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );

	}

};

ExtrudeGeometry.WorldUVGenerator = {

	generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {

		var a_x = vertices[ indexA * 3 ];
		var a_y = vertices[ indexA * 3 + 1 ];
		var b_x = vertices[ indexB * 3 ];
		var b_y = vertices[ indexB * 3 + 1 ];
		var c_x = vertices[ indexC * 3 ];
		var c_y = vertices[ indexC * 3 + 1 ];

		return [
			new Vector2( a_x, a_y ),
			new Vector2( b_x, b_y ),
			new Vector2( c_x, c_y )
		];

	},

	generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {

		var a_x = vertices[ indexA * 3 ];
		var a_y = vertices[ indexA * 3 + 1 ];
		var a_z = vertices[ indexA * 3 + 2 ];
		var b_x = vertices[ indexB * 3 ];
		var b_y = vertices[ indexB * 3 + 1 ];
		var b_z = vertices[ indexB * 3 + 2 ];
		var c_x = vertices[ indexC * 3 ];
		var c_y = vertices[ indexC * 3 + 1 ];
		var c_z = vertices[ indexC * 3 + 2 ];
		var d_x = vertices[ indexD * 3 ];
		var d_y = vertices[ indexD * 3 + 1 ];
		var d_z = vertices[ indexD * 3 + 2 ];

		if ( Math.abs( a_y - b_y ) < 0.01 ) {

			return [
				new Vector2( a_x, 1 - a_z ),
				new Vector2( b_x, 1 - b_z ),
				new Vector2( c_x, 1 - c_z ),
				new Vector2( d_x, 1 - d_z )
			];

		} else {

			return [
				new Vector2( a_y, 1 - a_z ),
				new Vector2( b_y, 1 - b_z ),
				new Vector2( c_y, 1 - c_z ),
				new Vector2( d_y, 1 - d_z )
			];

		}

	}
};

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float> // how far from text outline is bevel
 * }
 */
 

function TextGeometry(  text, parameters ) {

	Geometry.call( this );

	this.type = 'TextGeometry';

	this.parameters = {
		text: text,
		parameters: parameters
	};

	this.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );
	this.mergeVertices();

}

TextGeometry.prototype = Object.create( Geometry.prototype );
TextGeometry.prototype.constructor = TextGeometry;


function TextBufferGeometry( text, parameters ) {

	parameters = parameters || {};

	var font = parameters.font;

	if ( ( font && font.isFont ) === false ) {

		console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );
		return new Geometry();

	}

	var shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );

	// translate parameters to ExtrudeGeometry API

	parameters.amount = parameters.height !== undefined ? parameters.height : 50;

	// defaults

	if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;
	if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;
	if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;

	ExtrudeBufferGeometry.call( this, shapes, parameters );

	this.type = 'TextGeometry';

}

TextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );
TextBufferGeometry.prototype.constructor = TextBufferGeometry;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {

	Geometry.call( this );

	this.type = 'SphereGeometry';

	this.parameters = {
		radius: radius,
		widthSegments: widthSegments,
		heightSegments: heightSegments,
		phiStart: phiStart,
		phiLength: phiLength,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );
	this.mergeVertices();

}

SphereGeometry.prototype = Object.create( Geometry.prototype );
SphereGeometry.prototype.constructor = SphereGeometry;

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 */

function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {

	BufferGeometry.call( this );

	this.type = 'SphereBufferGeometry';

	this.parameters = {
		radius: radius,
		widthSegments: widthSegments,
		heightSegments: heightSegments,
		phiStart: phiStart,
		phiLength: phiLength,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	radius = radius || 50;

	widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );
	heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );

	phiStart = phiStart !== undefined ? phiStart : 0;
	phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;

	var thetaEnd = thetaStart + thetaLength;

	var ix, iy;

	var index = 0;
	var grid = [];

	var vertex = new Vector3();
	var normal = new Vector3();

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// generate vertices, normals and uvs

	for ( iy = 0; iy <= heightSegments; iy ++ ) {

		var verticesRow = [];

		var v = iy / heightSegments;

		for ( ix = 0; ix <= widthSegments; ix ++ ) {

			var u = ix / widthSegments;

			// vertex

			vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
			vertex.y = radius * Math.cos( thetaStart + v * thetaLength );
			vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normal.set( vertex.x, vertex.y, vertex.z ).normalize();
			normals.push( normal.x, normal.y, normal.z );

			// uv

			uvs.push( u, 1 - v );

			verticesRow.push( index ++ );

		}

		grid.push( verticesRow );

	}

	// indices

	for ( iy = 0; iy < heightSegments; iy ++ ) {

		for ( ix = 0; ix < widthSegments; ix ++ ) {

			var a = grid[ iy ][ ix + 1 ];
			var b = grid[ iy ][ ix ];
			var c = grid[ iy + 1 ][ ix ];
			var d = grid[ iy + 1 ][ ix + 1 ];

			if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );
			if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;

/**
 * @author Kaleb Murphy
 */

function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {

	Geometry.call( this );

	this.type = 'RingGeometry';

	this.parameters = {
		innerRadius: innerRadius,
		outerRadius: outerRadius,
		thetaSegments: thetaSegments,
		phiSegments: phiSegments,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );
	this.mergeVertices();

}

RingGeometry.prototype = Object.create( Geometry.prototype );
RingGeometry.prototype.constructor = RingGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {

	BufferGeometry.call( this );

	this.type = 'RingBufferGeometry';

	this.parameters = {
		innerRadius: innerRadius,
		outerRadius: outerRadius,
		thetaSegments: thetaSegments,
		phiSegments: phiSegments,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	innerRadius = innerRadius || 20;
	outerRadius = outerRadius || 50;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

	thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;
	phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// some helper variables

	var segment;
	var radius = innerRadius;
	var radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );
	var vertex = new Vector3();
	var uv = new Vector2();
	var j, i;

	// generate vertices, normals and uvs

	for ( j = 0; j <= phiSegments; j ++ ) {

		for ( i = 0; i <= thetaSegments; i ++ ) {

			// values are generate from the inside of the ring to the outside

			segment = thetaStart + i / thetaSegments * thetaLength;

			// vertex

			vertex.x = radius * Math.cos( segment );
			vertex.y = radius * Math.sin( segment );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normals.push( 0, 0, 1 );

			// uv

			uv.x = ( vertex.x / outerRadius + 1 ) / 2;
			uv.y = ( vertex.y / outerRadius + 1 ) / 2;

			uvs.push( uv.x, uv.y );

		}

		// increase the radius for next row of vertices

		radius += radiusStep;

	}

	// indices

	for ( j = 0; j < phiSegments; j ++ ) {

		var thetaSegmentLevel = j * ( thetaSegments + 1 );

		for ( i = 0; i < thetaSegments; i ++ ) {

			segment = i + thetaSegmentLevel;

			var a = segment;
			var b = segment + thetaSegments + 1;
			var c = segment + thetaSegments + 2;
			var d = segment + 1;

			// faces

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
RingBufferGeometry.prototype.constructor = RingBufferGeometry;

/**
 * @author astrodud / http://astrodud.isgreat.org/
 * @author zz85 / https://github.com/zz85
 * @author bhouston / http://clara.io
 */

// points - to create a closed torus, one must use a set of points
//    like so: [ a, b, c, d, a ], see first is the same as last.
// segments - the number of circumference segments to create
// phiStart - the starting radian
// phiLength - the radian (0 to 2PI) range of the lathed section
//    2PI is a closed lathe, less than 2PI is a portion.

function LatheGeometry( points, segments, phiStart, phiLength ) {

	Geometry.call( this );

	this.type = 'LatheGeometry';

	this.parameters = {
		points: points,
		segments: segments,
		phiStart: phiStart,
		phiLength: phiLength
	};

	this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );
	this.mergeVertices();

}

LatheGeometry.prototype = Object.create( Geometry.prototype );
LatheGeometry.prototype.constructor = LatheGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function LatheBufferGeometry( points, segments, phiStart, phiLength ) {

	BufferGeometry.call( this );

	this.type = 'LatheBufferGeometry';

	this.parameters = {
		points: points,
		segments: segments,
		phiStart: phiStart,
		phiLength: phiLength
	};

	segments = Math.floor( segments ) || 12;
	phiStart = phiStart || 0;
	phiLength = phiLength || Math.PI * 2;

	// clamp phiLength so it's in range of [ 0, 2PI ]

	phiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );


	// buffers

	var indices = [];
	var vertices = [];
	var uvs = [];

	// helper variables

	var base;
	var inverseSegments = 1.0 / segments;
	var vertex = new Vector3();
	var uv = new Vector2();
	var i, j;

	// generate vertices and uvs

	for ( i = 0; i <= segments; i ++ ) {

		var phi = phiStart + i * inverseSegments * phiLength;

		var sin = Math.sin( phi );
		var cos = Math.cos( phi );

		for ( j = 0; j <= ( points.length - 1 ); j ++ ) {

			// vertex

			vertex.x = points[ j ].x * sin;
			vertex.y = points[ j ].y;
			vertex.z = points[ j ].x * cos;

			vertices.push( vertex.x, vertex.y, vertex.z );

			// uv

			uv.x = i / segments;
			uv.y = j / ( points.length - 1 );

			uvs.push( uv.x, uv.y );


		}

	}

	// indices

	for ( i = 0; i < segments; i ++ ) {

		for ( j = 0; j < ( points.length - 1 ); j ++ ) {

			base = j + i * points.length;

			var a = base;
			var b = base + points.length;
			var c = base + points.length + 1;
			var d = base + 1;

			// faces

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	// generate normals

	this.computeVertexNormals();

	// if the geometry is closed, we need to average the normals along the seam.
	// because the corresponding vertices are identical (but still have different UVs).

	if ( phiLength === Math.PI * 2 ) {

		var normals = this.attributes.normal.array;
		var n1 = new Vector3();
		var n2 = new Vector3();
		var n = new Vector3();

		// this is the buffer offset for the last line of vertices

		base = segments * points.length * 3;

		for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {

			// select the normal of the vertex in the first line

			n1.x = normals[ j + 0 ];
			n1.y = normals[ j + 1 ];
			n1.z = normals[ j + 2 ];

			// select the normal of the vertex in the last line

			n2.x = normals[ base + j + 0 ];
			n2.y = normals[ base + j + 1 ];
			n2.z = normals[ base + j + 2 ];

			// average normals

			n.addVectors( n1, n2 ).normalize();

			// assign the new values to both normals

			normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;
			normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;
			normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;

		}

	}

}

LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;

/**
 * @author jonobr1 / http://jonobr1.com
 */

function ShapeGeometry( shapes, curveSegments ) {

	Geometry.call( this );

	this.type = 'ShapeGeometry';

	if ( typeof curveSegments === 'object' ) {

		console.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );

		curveSegments = curveSegments.curveSegments;

	}

	this.parameters = {
		shapes: shapes,
		curveSegments: curveSegments
	};

	this.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );
	this.mergeVertices();

}

ShapeGeometry.prototype = Object.create( Geometry.prototype );
ShapeGeometry.prototype.constructor = ShapeGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function ShapeBufferGeometry( shapes, curveSegments ) {

	BufferGeometry.call( this );

	this.type = 'ShapeBufferGeometry';

	this.parameters = {
		shapes: shapes,
		curveSegments: curveSegments
	};

	curveSegments = curveSegments || 12;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var groupStart = 0;
	var groupCount = 0;

	// allow single and array values for "shapes" parameter

	if ( Array.isArray( shapes ) === false ) {

		addShape( shapes );

	} else {

		for ( var i = 0; i < shapes.length; i ++ ) {

			addShape( shapes[ i ] );

			this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support

			groupStart += groupCount;
			groupCount = 0;

		}

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );


	// helper functions

	function addShape( shape ) {

		var i, l, shapeHole;

		var indexOffset = vertices.length / 3;
		var points = shape.extractPoints( curveSegments );

		var shapeVertices = points.shape;
		var shapeHoles = points.holes;

		// check direction of vertices

		if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {

			shapeVertices = shapeVertices.reverse();

			// also check if holes are in the opposite direction

			for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {

				shapeHole = shapeHoles[ i ];

				if ( ShapeUtils.isClockWise( shapeHole ) === true ) {

					shapeHoles[ i ] = shapeHole.reverse();

				}

			}

		}

		var faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );

		// join vertices of inner and outer paths to a single array

		for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {

			shapeHole = shapeHoles[ i ];
			shapeVertices = shapeVertices.concat( shapeHole );

		}

		// vertices, normals, uvs

		for ( i = 0, l = shapeVertices.length; i < l; i ++ ) {

			var vertex = shapeVertices[ i ];

			vertices.push( vertex.x, vertex.y, 0 );
			normals.push( 0, 0, 1 );
			uvs.push( vertex.x, vertex.y ); // world uvs

		}

		// incides

		for ( i = 0, l = faces.length; i < l; i ++ ) {

			var face = faces[ i ];

			var a = face[ 0 ] + indexOffset;
			var b = face[ 1 ] + indexOffset;
			var c = face[ 2 ] + indexOffset;

			indices.push( a, b, c );
			groupCount += 3;

		}

	}

}

ShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;

/**
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */

function EdgesGeometry( geometry, thresholdAngle ) {

	BufferGeometry.call( this );

	this.type = 'EdgesGeometry';

	this.parameters = {
		thresholdAngle: thresholdAngle
	};

	thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;

	// buffer

	var vertices = [];

	// helper variables

	var thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );
	var edge = [ 0, 0 ], edges = {}, edge1, edge2;
	var key, keys = [ 'a', 'b', 'c' ];

	// prepare source geometry

	var geometry2;

	if ( geometry.isBufferGeometry ) {

		geometry2 = new Geometry();
		geometry2.fromBufferGeometry( geometry );

	} else {

		geometry2 = geometry.clone();

	}

	geometry2.mergeVertices();
	geometry2.computeFaceNormals();

	var sourceVertices = geometry2.vertices;
	var faces = geometry2.faces;

	// now create a data structure where each entry represents an edge with its adjoining faces

	for ( var i = 0, l = faces.length; i < l; i ++ ) {

		var face = faces[ i ];

		for ( var j = 0; j < 3; j ++ ) {

			edge1 = face[ keys[ j ] ];
			edge2 = face[ keys[ ( j + 1 ) % 3 ] ];
			edge[ 0 ] = Math.min( edge1, edge2 );
			edge[ 1 ] = Math.max( edge1, edge2 );

			key = edge[ 0 ] + ',' + edge[ 1 ];

			if ( edges[ key ] === undefined ) {

				edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };

			} else {

				edges[ key ].face2 = i;

			}

		}

	}

	// generate vertices

	for ( key in edges ) {

		var e = edges[ key ];

		// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.

		if ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {

			var vertex = sourceVertices[ e.index1 ];
			vertices.push( vertex.x, vertex.y, vertex.z );

			vertex = sourceVertices[ e.index2 ];
			vertices.push( vertex.x, vertex.y, vertex.z );

		}

	}

	// build geometry

	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

}

EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );
EdgesGeometry.prototype.constructor = EdgesGeometry;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

	Geometry.call( this );

	this.type = 'CylinderGeometry';

	this.parameters = {
		radiusTop: radiusTop,
		radiusBottom: radiusBottom,
		height: height,
		radialSegments: radialSegments,
		heightSegments: heightSegments,
		openEnded: openEnded,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );
	this.mergeVertices();

}

CylinderGeometry.prototype = Object.create( Geometry.prototype );
CylinderGeometry.prototype.constructor = CylinderGeometry;

/**
 * @author Mugen87 / https://github.com/Mugen87
 */

function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

	BufferGeometry.call( this );

	this.type = 'CylinderBufferGeometry';

	this.parameters = {
		radiusTop: radiusTop,
		radiusBottom: radiusBottom,
		height: height,
		radialSegments: radialSegments,
		heightSegments: heightSegments,
		openEnded: openEnded,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	var scope = this;

	radiusTop = radiusTop !== undefined ? radiusTop : 20;
	radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;
	height = height !== undefined ? height : 100;

	radialSegments = Math.floor( radialSegments ) || 8;
	heightSegments = Math.floor( heightSegments ) || 1;

	openEnded = openEnded !== undefined ? openEnded : false;
	thetaStart = thetaStart !== undefined ? thetaStart : 0.0;
	thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var index = 0;
	var indexArray = [];
	var halfHeight = height / 2;
	var groupStart = 0;

	// generate geometry

	generateTorso();

	if ( openEnded === false ) {

		if ( radiusTop > 0 ) generateCap( true );
		if ( radiusBottom > 0 ) generateCap( false );

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	function generateTorso() {

		var x, y;
		var normal = new Vector3();
		var vertex = new Vector3();

		var groupCount = 0;

		// this will be used to calculate the normal
		var slope = ( radiusBottom - radiusTop ) / height;

		// generate vertices, normals and uvs

		for ( y = 0; y <= heightSegments; y ++ ) {

			var indexRow = [];

			var v = y / heightSegments;

			// calculate the radius of the current row

			var radius = v * ( radiusBottom - radiusTop ) + radiusTop;

			for ( x = 0; x <= radialSegments; x ++ ) {

				var u = x / radialSegments;

				var theta = u * thetaLength + thetaStart;

				var sinTheta = Math.sin( theta );
				var cosTheta = Math.cos( theta );

				// vertex

				vertex.x = radius * sinTheta;
				vertex.y = - v * height + halfHeight;
				vertex.z = radius * cosTheta;
				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normal.set( sinTheta, slope, cosTheta ).normalize();
				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( u, 1 - v );

				// save index of vertex in respective row

				indexRow.push( index ++ );

			}

			// now save vertices of the row in our index array

			indexArray.push( indexRow );

		}

		// generate indices

		for ( x = 0; x < radialSegments; x ++ ) {

			for ( y = 0; y < heightSegments; y ++ ) {

				// we use the index array to access the correct indices

				var a = indexArray[ y ][ x ];
				var b = indexArray[ y + 1 ][ x ];
				var c = indexArray[ y + 1 ][ x + 1 ];
				var d = indexArray[ y ][ x + 1 ];

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

				// update group counter

				groupCount += 6;

			}

		}

		// add a group to the geometry. this will ensure multi material support

		scope.addGroup( groupStart, groupCount, 0 );

		// calculate new start value for groups

		groupStart += groupCount;

	}

	function generateCap( top ) {

		var x, centerIndexStart, centerIndexEnd;

		var uv = new Vector2();
		var vertex = new Vector3();

		var groupCount = 0;

		var radius = ( top === true ) ? radiusTop : radiusBottom;
		var sign = ( top === true ) ? 1 : - 1;

		// save the index of the first center vertex
		centerIndexStart = index;

		// first we generate the center vertex data of the cap.
		// because the geometry needs one set of uvs per face,
		// we must generate a center vertex per face/segment

		for ( x = 1; x <= radialSegments; x ++ ) {

			// vertex

			vertices.push( 0, halfHeight * sign, 0 );

			// normal

			normals.push( 0, sign, 0 );

			// uv

			uvs.push( 0.5, 0.5 );

			// increase index

			index ++;

		}

		// save the index of the last center vertex

		centerIndexEnd = index;

		// now we generate the surrounding vertices, normals and uvs

		for ( x = 0; x <= radialSegments; x ++ ) {

			var u = x / radialSegments;
			var theta = u * thetaLength + thetaStart;

			var cosTheta = Math.cos( theta );
			var sinTheta = Math.sin( theta );

			// vertex

			vertex.x = radius * sinTheta;
			vertex.y = halfHeight * sign;
			vertex.z = radius * cosTheta;
			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normals.push( 0, sign, 0 );

			// uv

			uv.x = ( cosTheta * 0.5 ) + 0.5;
			uv.y = ( sinTheta * 0.5 * sign ) + 0.5;
			uvs.push( uv.x, uv.y );

			// increase index

			index ++;

		}

		// generate indices

		for ( x = 0; x < radialSegments; x ++ ) {

			var c = centerIndexStart + x;
			var i = centerIndexEnd + x;

			if ( top === true ) {

				// face top

				indices.push( i, i + 1, c );

			} else {

				// face bottom

				indices.push( i + 1, i, c );

			}

			groupCount += 3;

		}

		// add a group to the geometry. this will ensure multi material support

		scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );

		// calculate new start value for groups

		groupStart += groupCount;

	}

}

CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;

/**
 * @author abelnation / http://github.com/abelnation
 */

function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

	CylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

	this.type = 'ConeGeometry';

	this.parameters = {
		radius: radius,
		height: height,
		radialSegments: radialSegments,
		heightSegments: heightSegments,
		openEnded: openEnded,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

}

ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );
ConeGeometry.prototype.constructor = ConeGeometry;

/**
 * @author: abelnation / http://github.com/abelnation
 */

function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

	CylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

	this.type = 'ConeBufferGeometry';

	this.parameters = {
		radius: radius,
		height: height,
		radialSegments: radialSegments,
		heightSegments: heightSegments,
		openEnded: openEnded,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

}

ConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );
ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;

/**
 * @author hughes
 */

function CircleGeometry( radius, segments, thetaStart, thetaLength ) {

	Geometry.call( this );

	this.type = 'CircleGeometry';

	this.parameters = {
		radius: radius,
		segments: segments,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );
	this.mergeVertices();

}

CircleGeometry.prototype = Object.create( Geometry.prototype );
CircleGeometry.prototype.constructor = CircleGeometry;

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 */

function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {

	BufferGeometry.call( this );

	this.type = 'CircleBufferGeometry';

	this.parameters = {
		radius: radius,
		segments: segments,
		thetaStart: thetaStart,
		thetaLength: thetaLength
	};

	radius = radius || 50;
	segments = segments !== undefined ? Math.max( 3, segments ) : 8;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

	// buffers

	var indices = [];
	var vertices = [];
	var normals = [];
	var uvs = [];

	// helper variables

	var i, s;
	var vertex = new Vector3();
	var uv = new Vector2();

	// center point

	vertices.push( 0, 0, 0 );
	normals.push( 0, 0, 1 );
	uvs.push( 0.5, 0.5 );

	for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {

		var segment = thetaStart + s / segments * thetaLength;

		// vertex

		vertex.x = radius * Math.cos( segment );
		vertex.y = radius * Math.sin( segment );

		vertices.push( vertex.x, vertex.y, vertex.z );

		// normal

		normals.push( 0, 0, 1 );

		// uvs

		uv.x = ( vertices[ i ] / radius + 1 ) / 2;
		uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;

		uvs.push( uv.x, uv.y );

	}

	// indices

	for ( i = 1; i <= segments; i ++ ) {

		indices.push( i, i + 1, 0 );

	}

	// build geometry

	this.setIndex( indices );
	this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;



var Geometries = Object.freeze({
	WireframeGeometry: WireframeGeometry,
	ParametricGeometry: ParametricGeometry,
	ParametricBufferGeometry: ParametricBufferGeometry,
	TetrahedronGeometry: TetrahedronGeometry,
	TetrahedronBufferGeometry: TetrahedronBufferGeometry,
	OctahedronGeometry: OctahedronGeometry,
	OctahedronBufferGeometry: OctahedronBufferGeometry,
	IcosahedronGeometry: IcosahedronGeometry,
	IcosahedronBufferGeometry: IcosahedronBufferGeometry,
	DodecahedronGeometry: DodecahedronGeometry,
	DodecahedronBufferGeometry: DodecahedronBufferGeometry,
	PolyhedronGeometry: PolyhedronGeometry,
	PolyhedronBufferGeometry: PolyhedronBufferGeometry,
	TubeGeometry: TubeGeometry,
	TubeBufferGeometry: TubeBufferGeometry,
	TorusKnotGeometry: TorusKnotGeometry,
	TorusKnotBufferGeometry: TorusKnotBufferGeometry,
	TorusGeometry: TorusGeometry,
	TorusBufferGeometry: TorusBufferGeometry,
	TextGeometry: TextGeometry,
	TextBufferGeometry: TextBufferGeometry,
	SphereGeometry: SphereGeometry,
	SphereBufferGeometry: SphereBufferGeometry,
	RingGeometry: RingGeometry,
	RingBufferGeometry: RingBufferGeometry,
	PlaneGeometry: PlaneGeometry,
	PlaneBufferGeometry: PlaneBufferGeometry,
	LatheGeometry: LatheGeometry,
	LatheBufferGeometry: LatheBufferGeometry,
	ShapeGeometry: ShapeGeometry,
	ShapeBufferGeometry: ShapeBufferGeometry,
	ExtrudeGeometry: ExtrudeGeometry,
	ExtrudeBufferGeometry: ExtrudeBufferGeometry,
	EdgesGeometry: EdgesGeometry,
	ConeGeometry: ConeGeometry,
	ConeBufferGeometry: ConeBufferGeometry,
	CylinderGeometry: CylinderGeometry,
	CylinderBufferGeometry: CylinderBufferGeometry,
	CircleGeometry: CircleGeometry,
	CircleBufferGeometry: CircleBufferGeometry,
	BoxGeometry: BoxGeometry,
	BoxBufferGeometry: BoxBufferGeometry
});

/**
 * @author mrdoob / http://mrdoob.com/
 */

function ShadowMaterial() {

	ShaderMaterial.call( this, {
		uniforms: UniformsUtils.merge( [
			UniformsLib.lights,
			{
				opacity: { value: 1.0 }
			}
		] ),
		vertexShader: ShaderChunk[ 'shadow_vert' ],
		fragmentShader: ShaderChunk[ 'shadow_frag' ]
	} );

	this.lights = true;
	this.transparent = true;

	Object.defineProperties( this, {
		opacity: {
			enumerable: true,
			get: function () {
				return this.uniforms.opacity.value;
			},
			set: function ( value ) {
				this.uniforms.opacity.value = value;
			}
		}
	} );

}

ShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );
ShadowMaterial.prototype.constructor = ShadowMaterial;

ShadowMaterial.prototype.isShadowMaterial = true;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function RawShaderMaterial( parameters ) {

	ShaderMaterial.call( this, parameters );

	this.type = 'RawShaderMaterial';

}

RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );
RawShaderMaterial.prototype.constructor = RawShaderMaterial;

RawShaderMaterial.prototype.isRawShaderMaterial = true;

/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function MeshStandardMaterial( parameters ) {

	Material.call( this );

	this.defines = { 'STANDARD': '' };

	this.type = 'MeshStandardMaterial';

	this.color = new Color( 0xffffff ); // diffuse
	this.roughness = 0.5;
	this.metalness = 0.5;

	this.map = null;

	this.lightMap = null;
	this.lightMapIntensity = 1.0;

	this.aoMap = null;
	this.aoMapIntensity = 1.0;

	this.emissive = new Color( 0x000000 );
	this.emissiveIntensity = 1.0;
	this.emissiveMap = null;

	this.bumpMap = null;
	this.bumpScale = 1;

	this.normalMap = null;
	this.normalScale = new Vector2( 1, 1 );

	this.displacementMap = null;
	this.displacementScale = 1;
	this.displacementBias = 0;

	this.roughnessMap = null;

	this.metalnessMap = null;

	this.alphaMap = null;

	this.envMap = null;
	this.envMapIntensity = 1.0;

	this.refractionRatio = 0.98;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

}

MeshStandardMaterial.prototype = Object.create( Material.prototype );
MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;

MeshStandardMaterial.prototype.isMeshStandardMaterial = true;

MeshStandardMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.defines = { 'STANDARD': '' };

	this.color.copy( source.color );
	this.roughness = source.roughness;
	this.metalness = source.metalness;

	this.map = source.map;

	this.lightMap = source.lightMap;
	this.lightMapIntensity = source.lightMapIntensity;

	this.aoMap = source.aoMap;
	this.aoMapIntensity = source.aoMapIntensity;

	this.emissive.copy( source.emissive );
	this.emissiveMap = source.emissiveMap;
	this.emissiveIntensity = source.emissiveIntensity;

	this.bumpMap = source.bumpMap;
	this.bumpScale = source.bumpScale;

	this.normalMap = source.normalMap;
	this.normalScale.copy( source.normalScale );

	this.displacementMap = source.displacementMap;
	this.displacementScale = source.displacementScale;
	this.displacementBias = source.displacementBias;

	this.roughnessMap = source.roughnessMap;

	this.metalnessMap = source.metalnessMap;

	this.alphaMap = source.alphaMap;

	this.envMap = source.envMap;
	this.envMapIntensity = source.envMapIntensity;

	this.refractionRatio = source.refractionRatio;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;
	this.wireframeLinecap = source.wireframeLinecap;
	this.wireframeLinejoin = source.wireframeLinejoin;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	return this;

};

/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  reflectivity: <float>
 * }
 */

function MeshPhysicalMaterial( parameters ) {

	MeshStandardMaterial.call( this );

	this.defines = { 'PHYSICAL': '' };

	this.type = 'MeshPhysicalMaterial';

	this.reflectivity = 0.5; // maps to F0 = 0.04

	this.clearCoat = 0.0;
	this.clearCoatRoughness = 0.0;

	this.setValues( parameters );

}

MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );
MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;

MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;

MeshPhysicalMaterial.prototype.copy = function ( source ) {

	MeshStandardMaterial.prototype.copy.call( this, source );

	this.defines = { 'PHYSICAL': '' };

	this.reflectivity = source.reflectivity;

	this.clearCoat = source.clearCoat;
	this.clearCoatRoughness = source.clearCoatRoughness;

	return this;

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function MeshPhongMaterial( parameters ) {

	Material.call( this );

	this.type = 'MeshPhongMaterial';

	this.color = new Color( 0xffffff ); // diffuse
	this.specular = new Color( 0x111111 );
	this.shininess = 30;

	this.map = null;

	this.lightMap = null;
	this.lightMapIntensity = 1.0;

	this.aoMap = null;
	this.aoMapIntensity = 1.0;

	this.emissive = new Color( 0x000000 );
	this.emissiveIntensity = 1.0;
	this.emissiveMap = null;

	this.bumpMap = null;
	this.bumpScale = 1;

	this.normalMap = null;
	this.normalScale = new Vector2( 1, 1 );

	this.displacementMap = null;
	this.displacementScale = 1;
	this.displacementBias = 0;

	this.specularMap = null;

	this.alphaMap = null;

	this.envMap = null;
	this.combine = MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

}

MeshPhongMaterial.prototype = Object.create( Material.prototype );
MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;

MeshPhongMaterial.prototype.isMeshPhongMaterial = true;

MeshPhongMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );
	this.specular.copy( source.specular );
	this.shininess = source.shininess;

	this.map = source.map;

	this.lightMap = source.lightMap;
	this.lightMapIntensity = source.lightMapIntensity;

	this.aoMap = source.aoMap;
	this.aoMapIntensity = source.aoMapIntensity;

	this.emissive.copy( source.emissive );
	this.emissiveMap = source.emissiveMap;
	this.emissiveIntensity = source.emissiveIntensity;

	this.bumpMap = source.bumpMap;
	this.bumpScale = source.bumpScale;

	this.normalMap = source.normalMap;
	this.normalScale.copy( source.normalScale );

	this.displacementMap = source.displacementMap;
	this.displacementScale = source.displacementScale;
	this.displacementBias = source.displacementBias;

	this.specularMap = source.specularMap;

	this.alphaMap = source.alphaMap;

	this.envMap = source.envMap;
	this.combine = source.combine;
	this.reflectivity = source.reflectivity;
	this.refractionRatio = source.refractionRatio;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;
	this.wireframeLinecap = source.wireframeLinecap;
	this.wireframeLinejoin = source.wireframeLinejoin;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	return this;

};

/**
 * @author takahirox / http://github.com/takahirox
 *
 * parameters = {
 *  gradientMap: new THREE.Texture( <Image> )
 * }
 */

function MeshToonMaterial( parameters ) {

	MeshPhongMaterial.call( this );

	this.defines = { 'TOON': '' };

	this.type = 'MeshToonMaterial';

	this.gradientMap = null;

	this.setValues( parameters );

}

MeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );
MeshToonMaterial.prototype.constructor = MeshToonMaterial;

MeshToonMaterial.prototype.isMeshToonMaterial = true;

MeshToonMaterial.prototype.copy = function ( source ) {

	MeshPhongMaterial.prototype.copy.call( this, source );

	this.gradientMap = source.gradientMap;

	return this;

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function MeshNormalMaterial( parameters ) {

	Material.call( this, parameters );

	this.type = 'MeshNormalMaterial';

	this.bumpMap = null;
	this.bumpScale = 1;

	this.normalMap = null;
	this.normalScale = new Vector2( 1, 1 );

	this.displacementMap = null;
	this.displacementScale = 1;
	this.displacementBias = 0;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.fog = false;
	this.lights = false;

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

}

MeshNormalMaterial.prototype = Object.create( Material.prototype );
MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;

MeshNormalMaterial.prototype.isMeshNormalMaterial = true;

MeshNormalMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.bumpMap = source.bumpMap;
	this.bumpScale = source.bumpScale;

	this.normalMap = source.normalMap;
	this.normalScale.copy( source.normalScale );

	this.displacementMap = source.displacementMap;
	this.displacementScale = source.displacementScale;
	this.displacementBias = source.displacementBias;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	return this;

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function MeshLambertMaterial( parameters ) {

	Material.call( this );

	this.type = 'MeshLambertMaterial';

	this.color = new Color( 0xffffff ); // diffuse

	this.map = null;

	this.lightMap = null;
	this.lightMapIntensity = 1.0;

	this.aoMap = null;
	this.aoMapIntensity = 1.0;

	this.emissive = new Color( 0x000000 );
	this.emissiveIntensity = 1.0;
	this.emissiveMap = null;

	this.specularMap = null;

	this.alphaMap = null;

	this.envMap = null;
	this.combine = MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

}

MeshLambertMaterial.prototype = Object.create( Material.prototype );
MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;

MeshLambertMaterial.prototype.isMeshLambertMaterial = true;

MeshLambertMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );

	this.map = source.map;

	this.lightMap = source.lightMap;
	this.lightMapIntensity = source.lightMapIntensity;

	this.aoMap = source.aoMap;
	this.aoMapIntensity = source.aoMapIntensity;

	this.emissive.copy( source.emissive );
	this.emissiveMap = source.emissiveMap;
	this.emissiveIntensity = source.emissiveIntensity;

	this.specularMap = source.specularMap;

	this.alphaMap = source.alphaMap;

	this.envMap = source.envMap;
	this.combine = source.combine;
	this.reflectivity = source.reflectivity;
	this.refractionRatio = source.refractionRatio;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;
	this.wireframeLinecap = source.wireframeLinecap;
	this.wireframeLinejoin = source.wireframeLinejoin;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	return this;

};

/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */

function LineDashedMaterial( parameters ) {

	Material.call( this );

	this.type = 'LineDashedMaterial';

	this.color = new Color( 0xffffff );

	this.linewidth = 1;

	this.scale = 1;
	this.dashSize = 3;
	this.gapSize = 1;

	this.lights = false;

	this.setValues( parameters );

}

LineDashedMaterial.prototype = Object.create( Material.prototype );
LineDashedMaterial.prototype.constructor = LineDashedMaterial;

LineDashedMaterial.prototype.isLineDashedMaterial = true;

LineDashedMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.color.copy( source.color );

	this.linewidth = source.linewidth;

	this.scale = source.scale;
	this.dashSize = source.dashSize;
	this.gapSize = source.gapSize;

	return this;

};



var Materials = Object.freeze({
	ShadowMaterial: ShadowMaterial,
	SpriteMaterial: SpriteMaterial,
	RawShaderMaterial: RawShaderMaterial,
	ShaderMaterial: ShaderMaterial,
	PointsMaterial: PointsMaterial,
	MeshPhysicalMaterial: MeshPhysicalMaterial,
	MeshStandardMaterial: MeshStandardMaterial,
	MeshPhongMaterial: MeshPhongMaterial,
	MeshToonMaterial: MeshToonMaterial,
	MeshNormalMaterial: MeshNormalMaterial,
	MeshLambertMaterial: MeshLambertMaterial,
	MeshDepthMaterial: MeshDepthMaterial,
	MeshBasicMaterial: MeshBasicMaterial,
	LineDashedMaterial: LineDashedMaterial,
	LineBasicMaterial: LineBasicMaterial,
	Material: Material
});

/**
 * @author mrdoob / http://mrdoob.com/
 */

var Cache = {

	enabled: false,

	files: {},

	add: function ( key, file ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Adding key:', key );

		this.files[ key ] = file;

	},

	get: function ( key ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Checking key:', key );

		return this.files[ key ];

	},

	remove: function ( key ) {

		delete this.files[ key ];

	},

	clear: function () {

		this.files = {};

	}

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

function LoadingManager( onLoad, onProgress, onError ) {

	var scope = this;

	var isLoading = false, itemsLoaded = 0, itemsTotal = 0;

	this.onStart = undefined;
	this.onLoad = onLoad;
	this.onProgress = onProgress;
	this.onError = onError;

	this.itemStart = function ( url ) {

		itemsTotal ++;

		if ( isLoading === false ) {

			if ( scope.onStart !== undefined ) {

				scope.onStart( url, itemsLoaded, itemsTotal );

			}

		}

		isLoading = true;

	};

	this.itemEnd = function ( url ) {

		itemsLoaded ++;

		if ( scope.onProgress !== undefined ) {

			scope.onProgress( url, itemsLoaded, itemsTotal );

		}

		if ( itemsLoaded === itemsTotal ) {

			isLoading = false;

			if ( scope.onLoad !== undefined ) {

				scope.onLoad();

			}

		}

	};

	this.itemError = function ( url ) {

		if ( scope.onError !== undefined ) {

			scope.onError( url );

		}

	};

}

var DefaultLoadingManager = new LoadingManager();

/**
 * @author mrdoob / http://mrdoob.com/
 */

function FileLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( FileLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		var scope = this;

		var cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		// Check for data: URI
		var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;
		var dataUriRegexResult = url.match( dataUriRegex );

		// Safari can not handle Data URIs through XMLHttpRequest so process manually
		if ( dataUriRegexResult ) {

			var mimeType = dataUriRegexResult[ 1 ];
			var isBase64 = !! dataUriRegexResult[ 2 ];
			var data = dataUriRegexResult[ 3 ];

			data = window.decodeURIComponent( data );

			if ( isBase64 ) data = window.atob( data );

			try {

				var response;
				var responseType = ( this.responseType || '' ).toLowerCase();

				switch ( responseType ) {

					case 'arraybuffer':
					case 'blob':

					 	response = new ArrayBuffer( data.length );

						var view = new Uint8Array( response );

						for ( var i = 0; i < data.length; i ++ ) {

							view[ i ] = data.charCodeAt( i );

						}

						if ( responseType === 'blob' ) {

							response = new Blob( [ response ], { type: mimeType } );

						}

						break;

					case 'document':

						var parser = new DOMParser();
						response = parser.parseFromString( data, mimeType );

						break;

					case 'json':

						response = JSON.parse( data );

						break;

					default: // 'text' or other

						response = data;

						break;

				}

				// Wait for next browser tick
				window.setTimeout( function () {

					if ( onLoad ) onLoad( response );

					scope.manager.itemEnd( url );

				}, 0 );

			} catch ( error ) {

				// Wait for next browser tick
				window.setTimeout( function () {

					if ( onError ) onError( error );

					scope.manager.itemError( url );

				}, 0 );

			}

		} else {

			var request = new XMLHttpRequest();
			request.open( 'GET', url, true );

			request.addEventListener( 'load', function ( event ) {

				var response = event.target.response;

				Cache.add( url, response );

				if ( this.status === 200 ) {

					if ( onLoad ) onLoad( response );

					scope.manager.itemEnd( url );

				} else if ( this.status === 0 ) {

					// Some browsers return HTTP Status 0 when using non-http protocol
					// e.g. 'file://' or 'data://'. Handle as success.

					console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );

					if ( onLoad ) onLoad( response );

					scope.manager.itemEnd( url );

				} else {

					if ( onError ) onError( event );

					scope.manager.itemError( url );

				}

			}, false );

			if ( onProgress !== undefined ) {

				request.addEventListener( 'progress', function ( event ) {

					onProgress( event );

				}, false );

			}

			request.addEventListener( 'error', function ( event ) {

				if ( onError ) onError( event );

				scope.manager.itemError( url );

			}, false );

			if ( this.responseType !== undefined ) request.responseType = this.responseType;
			if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;

			if ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );

			for ( var header in this.requestHeader ) {

				request.setRequestHeader( header, this.requestHeader[ header ] );

			}

			request.send( null );

		}

		scope.manager.itemStart( url );

		return request;

	},

	setPath: function ( value ) {

		this.path = value;
		return this;

	},

	setResponseType: function ( value ) {

		this.responseType = value;
		return this;

	},

	setWithCredentials: function ( value ) {

		this.withCredentials = value;
		return this;

	},

	setMimeType: function ( value ) {

		this.mimeType = value;
		return this;

	},

	setRequestHeader: function ( value ) {

		this.requestHeader = value;
		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 *
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 */

function CompressedTextureLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

	// override in sub classes
	this._parser = null;

}

Object.assign( CompressedTextureLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var images = [];

		var texture = new CompressedTexture();
		texture.image = images;

		var loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setResponseType( 'arraybuffer' );

		function loadTexture( i ) {

			loader.load( url[ i ], function ( buffer ) {

				var texDatas = scope._parser( buffer, true );

				images[ i ] = {
					width: texDatas.width,
					height: texDatas.height,
					format: texDatas.format,
					mipmaps: texDatas.mipmaps
				};

				loaded += 1;

				if ( loaded === 6 ) {

					if ( texDatas.mipmapCount === 1 )
						texture.minFilter = LinearFilter;

					texture.format = texDatas.format;
					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, onProgress, onError );

		}

		if ( Array.isArray( url ) ) {

			var loaded = 0;

			for ( var i = 0, il = url.length; i < il; ++ i ) {

				loadTexture( i );

			}

		} else {

			// compressed cubemap texture stored in a single DDS file

			loader.load( url, function ( buffer ) {

				var texDatas = scope._parser( buffer, true );

				if ( texDatas.isCubemap ) {

					var faces = texDatas.mipmaps.length / texDatas.mipmapCount;

					for ( var f = 0; f < faces; f ++ ) {

						images[ f ] = { mipmaps : [] };

						for ( var i = 0; i < texDatas.mipmapCount; i ++ ) {

							images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );
							images[ f ].format = texDatas.format;
							images[ f ].width = texDatas.width;
							images[ f ].height = texDatas.height;

						}

					}

				} else {

					texture.image.width = texDatas.width;
					texture.image.height = texDatas.height;
					texture.mipmaps = texDatas.mipmaps;

				}

				if ( texDatas.mipmapCount === 1 ) {

					texture.minFilter = LinearFilter;

				}

				texture.format = texDatas.format;
				texture.needsUpdate = true;

				if ( onLoad ) onLoad( texture );

			}, onProgress, onError );

		}

		return texture;

	},

	setPath: function ( value ) {

		this.path = value;
		return this;

	}

} );

/**
 * @author Nikos M. / https://github.com/foo123/
 *
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 */

function DataTextureLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

	// override in sub classes
	this._parser = null;

}

Object.assign( DataTextureLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var texture = new DataTexture();

		var loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );

		loader.load( url, function ( buffer ) {

			var texData = scope._parser( buffer );

			if ( ! texData ) return;

			if ( undefined !== texData.image ) {

				texture.image = texData.image;

			} else if ( undefined !== texData.data ) {

				texture.image.width = texData.width;
				texture.image.height = texData.height;
				texture.image.data = texData.data;

			}

			texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;
			texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;

			texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;
			texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;

			texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;

			if ( undefined !== texData.format ) {

				texture.format = texData.format;

			}
			if ( undefined !== texData.type ) {

				texture.type = texData.type;

			}

			if ( undefined !== texData.mipmaps ) {

				texture.mipmaps = texData.mipmaps;

			}

			if ( 1 === texData.mipmapCount ) {

				texture.minFilter = LinearFilter;

			}

			texture.needsUpdate = true;

			if ( onLoad ) onLoad( texture, texData );

		}, onProgress, onError );


		return texture;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function ImageLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( ImageLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		var scope = this;

		var cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );

		image.addEventListener( 'load', function () {

			Cache.add( url, this );

			if ( onLoad ) onLoad( this );

			scope.manager.itemEnd( url );

		}, false );

		/*
		image.addEventListener( 'progress', function ( event ) {

			if ( onProgress ) onProgress( event );

		}, false );
		*/

		image.addEventListener( 'error', function ( event ) {

			if ( onError ) onError( event );

			scope.manager.itemError( url );

		}, false );

		if ( url.substr( 0, 5 ) !== 'data:' ) {

			if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;

		}

		scope.manager.itemStart( url );

		image.src = url;

		return image;

	},

	setCrossOrigin: function ( value ) {

		this.crossOrigin = value;
		return this;

	},

	setPath: function ( value ) {

		this.path = value;
		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function CubeTextureLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( CubeTextureLoader.prototype, {

	load: function ( urls, onLoad, onProgress, onError ) {

		var texture = new CubeTexture();

		var loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		var loaded = 0;

		function loadTexture( i ) {

			loader.load( urls[ i ], function ( image ) {

				texture.images[ i ] = image;

				loaded ++;

				if ( loaded === 6 ) {

					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, undefined, onError );

		}

		for ( var i = 0; i < urls.length; ++ i ) {

			loadTexture( i );

		}

		return texture;

	},

	setCrossOrigin: function ( value ) {

		this.crossOrigin = value;
		return this;

	},

	setPath: function ( value ) {

		this.path = value;
		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function TextureLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( TextureLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		var texture = new Texture();
		texture.image = loader.load( url, function () {

			// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
			var isJPEG = url.search( /\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\:image\/jpeg/ ) === 0;

			texture.format = isJPEG ? RGBFormat : RGBAFormat;
			texture.needsUpdate = true;

			if ( onLoad !== undefined ) {

				onLoad( texture );

			}

		}, onProgress, onError );

		return texture;

	},

	setCrossOrigin: function ( value ) {

		this.crossOrigin = value;
		return this;

	},

	setPath: function ( value ) {

		this.path = value;
		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function Light( color, intensity ) {

	Object3D.call( this );

	this.type = 'Light';

	this.color = new Color( color );
	this.intensity = intensity !== undefined ? intensity : 1;

	this.receiveShadow = undefined;

}

Light.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Light,

	isLight: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.color.copy( source.color );
		this.intensity = source.intensity;

		return this;

	},

	toJSON: function ( meta ) {

		var data = Object3D.prototype.toJSON.call( this, meta );

		data.object.color = this.color.getHex();
		data.object.intensity = this.intensity;

		if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();

		if ( this.distance !== undefined ) data.object.distance = this.distance;
		if ( this.angle !== undefined ) data.object.angle = this.angle;
		if ( this.decay !== undefined ) data.object.decay = this.decay;
		if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;

		if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();

		return data;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function HemisphereLight( skyColor, groundColor, intensity ) {

	Light.call( this, skyColor, intensity );

	this.type = 'HemisphereLight';

	this.castShadow = undefined;

	this.position.copy( Object3D.DefaultUp );
	this.updateMatrix();

	this.groundColor = new Color( groundColor );

}

HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: HemisphereLight,

	isHemisphereLight: true,

	copy: function ( source ) {

		Light.prototype.copy.call( this, source );

		this.groundColor.copy( source.groundColor );

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function LightShadow( camera ) {

	this.camera = camera;

	this.bias = 0;
	this.radius = 1;

	this.mapSize = new Vector2( 512, 512 );

	this.map = null;
	this.matrix = new Matrix4();

}

Object.assign( LightShadow.prototype, {

	copy: function ( source ) {

		this.camera = source.camera.clone();

		this.bias = source.bias;
		this.radius = source.radius;

		this.mapSize.copy( source.mapSize );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	toJSON: function () {

		var object = {};

		if ( this.bias !== 0 ) object.bias = this.bias;
		if ( this.radius !== 1 ) object.radius = this.radius;
		if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();

		object.camera = this.camera.toJSON( false ).object;
		delete object.camera.matrix;

		return object;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function SpotLightShadow() {

	LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );

}

SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {

	constructor: SpotLightShadow,

	isSpotLightShadow: true,

	update: function ( light ) {

		var fov = _Math.RAD2DEG * 2 * light.angle;
		var aspect = this.mapSize.width / this.mapSize.height;
		var far = light.distance || 500;

		var camera = this.camera;

		if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {

			camera.fov = fov;
			camera.aspect = aspect;
			camera.far = far;
			camera.updateProjectionMatrix();

		}

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function SpotLight( color, intensity, distance, angle, penumbra, decay ) {

	Light.call( this, color, intensity );

	this.type = 'SpotLight';

	this.position.copy( Object3D.DefaultUp );
	this.updateMatrix();

	this.target = new Object3D();

	Object.defineProperty( this, 'power', {
		get: function () {
			// intensity = power per solid angle.
			// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
			return this.intensity * Math.PI;
		},
		set: function ( power ) {
			// intensity = power per solid angle.
			// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
			this.intensity = power / Math.PI;
		}
	} );

	this.distance = ( distance !== undefined ) ? distance : 0;
	this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;
	this.penumbra = ( penumbra !== undefined ) ? penumbra : 0;
	this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.

	this.shadow = new SpotLightShadow();

}

SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: SpotLight,

	isSpotLight: true,

	copy: function ( source ) {

		Light.prototype.copy.call( this, source );

		this.distance = source.distance;
		this.angle = source.angle;
		this.penumbra = source.penumbra;
		this.decay = source.decay;

		this.target = source.target.clone();

		this.shadow = source.shadow.clone();

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */


function PointLight( color, intensity, distance, decay ) {

	Light.call( this, color, intensity );

	this.type = 'PointLight';

	Object.defineProperty( this, 'power', {
		get: function () {
			// intensity = power per solid angle.
			// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
			return this.intensity * 4 * Math.PI;

		},
		set: function ( power ) {
			// intensity = power per solid angle.
			// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
			this.intensity = power / ( 4 * Math.PI );
		}
	} );

	this.distance = ( distance !== undefined ) ? distance : 0;
	this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.

	this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );

}

PointLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: PointLight,

	isPointLight: true,

	copy: function ( source ) {

		Light.prototype.copy.call( this, source );

		this.distance = source.distance;
		this.decay = source.decay;

		this.shadow = source.shadow.clone();

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function DirectionalLightShadow( ) {

	LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );

}

DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {

	constructor: DirectionalLightShadow

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function DirectionalLight( color, intensity ) {

	Light.call( this, color, intensity );

	this.type = 'DirectionalLight';

	this.position.copy( Object3D.DefaultUp );
	this.updateMatrix();

	this.target = new Object3D();

	this.shadow = new DirectionalLightShadow();

}

DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: DirectionalLight,

	isDirectionalLight: true,

	copy: function ( source ) {

		Light.prototype.copy.call( this, source );

		this.target = source.target.clone();

		this.shadow = source.shadow.clone();

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function AmbientLight( color, intensity ) {

	Light.call( this, color, intensity );

	this.type = 'AmbientLight';

	this.castShadow = undefined;

}

AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: AmbientLight,

	isAmbientLight: true

} );

/**
 * @author abelnation / http://github.com/abelnation
 */

function RectAreaLight( color, intensity, width, height ) {

	Light.call( this, color, intensity );

	this.type = 'RectAreaLight';

	this.position.set( 0, 1, 0 );
	this.updateMatrix();

	this.width = ( width !== undefined ) ? width : 10;
	this.height = ( height !== undefined ) ? height : 10;

	// TODO (abelnation): distance/decay

	// TODO (abelnation): update method for RectAreaLight to update transform to lookat target

	// TODO (abelnation): shadows

}

// TODO (abelnation): RectAreaLight update when light shape is changed
RectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {

	constructor: RectAreaLight,

	isRectAreaLight: true,

	copy: function ( source ) {

		Light.prototype.copy.call( this, source );

		this.width = source.width;
		this.height = source.height;

		return this;

	},

	toJSON: function ( meta ) {

		var data = Light.prototype.toJSON.call( this, meta );

		data.object.width = this.width;
		data.object.height = this.height;

		return data;

	}

} );

/**
 * @author tschw
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */

var AnimationUtils = {

	// same as Array.prototype.slice, but also works on typed arrays
	arraySlice: function ( array, from, to ) {

		if ( AnimationUtils.isTypedArray( array ) ) {

			// in ios9 array.subarray(from, undefined) will return empty array
			// but array.subarray(from) or array.subarray(from, len) is correct
			return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );

		}

		return array.slice( from, to );

	},

	// converts an array to a specific type
	convertArray: function ( array, type, forceClone ) {

		if ( ! array || // let 'undefined' and 'null' pass
				! forceClone && array.constructor === type ) return array;

		if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {

			return new type( array ); // create typed array

		}

		return Array.prototype.slice.call( array ); // create Array

	},

	isTypedArray: function ( object ) {

		return ArrayBuffer.isView( object ) &&
				! ( object instanceof DataView );

	},

	// returns an array by which times and values can be sorted
	getKeyframeOrder: function ( times ) {

		function compareTime( i, j ) {

			return times[ i ] - times[ j ];

		}

		var n = times.length;
		var result = new Array( n );
		for ( var i = 0; i !== n; ++ i ) result[ i ] = i;

		result.sort( compareTime );

		return result;

	},

	// uses the array previously returned by 'getKeyframeOrder' to sort data
	sortedArray: function ( values, stride, order ) {

		var nValues = values.length;
		var result = new values.constructor( nValues );

		for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {

			var srcOffset = order[ i ] * stride;

			for ( var j = 0; j !== stride; ++ j ) {

				result[ dstOffset ++ ] = values[ srcOffset + j ];

			}

		}

		return result;

	},

	// function for parsing AOS keyframe formats
	flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {

		var i = 1, key = jsonKeys[ 0 ];

		while ( key !== undefined && key[ valuePropertyName ] === undefined ) {

			key = jsonKeys[ i ++ ];

		}

		if ( key === undefined ) return; // no data

		var value = key[ valuePropertyName ];
		if ( value === undefined ) return; // no data

		if ( Array.isArray( value ) ) {

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push.apply( values, value ); // push all elements

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else if ( value.toArray !== undefined ) {

			// ...assume THREE.Math-ish

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					value.toArray( values, values.length );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else {

			// otherwise push as-is

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push( value );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		}

	}

};

/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 * @author tschw
 */

function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	this.parameterPositions = parameterPositions;
	this._cachedIndex = 0;

	this.resultBuffer = resultBuffer !== undefined ?
			resultBuffer : new sampleValues.constructor( sampleSize );
	this.sampleValues = sampleValues;
	this.valueSize = sampleSize;

}

Object.assign( Interpolant.prototype, {

	evaluate: function( t ) {

		var pp = this.parameterPositions,
			i1 = this._cachedIndex,

			t1 = pp[   i1   ],
			t0 = pp[ i1 - 1 ];

		validate_interval: {

			seek: {

				var right;

				linear_scan: {
					//- See http://jsperf.com/comparison-to-undefined/3
					//- slower code:
					//-
					//- 				if ( t >= t1 || t1 === undefined ) {
					forward_scan: if ( ! ( t < t1 ) ) {

						for ( var giveUpAt = i1 + 2; ;) {

							if ( t1 === undefined ) {

								if ( t < t0 ) break forward_scan;

								// after end

								i1 = pp.length;
								this._cachedIndex = i1;
								return this.afterEnd_( i1 - 1, t, t0 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t0 = t1;
							t1 = pp[ ++ i1 ];

							if ( t < t1 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the right side of the index
						right = pp.length;
						break linear_scan;

					}

					//- slower code:
					//-					if ( t < t0 || t0 === undefined ) {
					if ( ! ( t >= t0 ) ) {

						// looping?

						var t1global = pp[ 1 ];

						if ( t < t1global ) {

							i1 = 2; // + 1, using the scan for the details
							t0 = t1global;

						}

						// linear reverse scan

						for ( var giveUpAt = i1 - 2; ;) {

							if ( t0 === undefined ) {

								// before start

								this._cachedIndex = 0;
								return this.beforeStart_( 0, t, t1 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t1 = t0;
							t0 = pp[ -- i1 - 1 ];

							if ( t >= t0 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the left side of the index
						right = i1;
						i1 = 0;
						break linear_scan;

					}

					// the interval is valid

					break validate_interval;

				} // linear scan

				// binary search

				while ( i1 < right ) {

					var mid = ( i1 + right ) >>> 1;

					if ( t < pp[ mid ] ) {

						right = mid;

					} else {

						i1 = mid + 1;

					}

				}

				t1 = pp[   i1   ];
				t0 = pp[ i1 - 1 ];

				// check boundary cases, again

				if ( t0 === undefined ) {

					this._cachedIndex = 0;
					return this.beforeStart_( 0, t, t1 );

				}

				if ( t1 === undefined ) {

					i1 = pp.length;
					this._cachedIndex = i1;
					return this.afterEnd_( i1 - 1, t0, t );

				}

			} // seek

			this._cachedIndex = i1;

			this.intervalChanged_( i1, t0, t1 );

		} // validate_interval

		return this.interpolate_( i1, t0, t, t1 );

	},

	settings: null, // optional, subclass-specific settings structure
	// Note: The indirection allows central control of many interpolants.

	// --- Protected interface

	DefaultSettings_: {},

	getSettings_: function() {

		return this.settings || this.DefaultSettings_;

	},

	copySampleValue_: function( index ) {

		// copies a sample value to the result buffer

		var result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,
			offset = index * stride;

		for ( var i = 0; i !== stride; ++ i ) {

			result[ i ] = values[ offset + i ];

		}

		return result;

	},

	// Template methods for derived classes:

	interpolate_: function( i1, t0, t, t1 ) {

		throw new Error( "call to abstract method" );
		// implementations shall return this.resultBuffer

	},

	intervalChanged_: function( i1, t0, t1 ) {

		// empty

	}

} );

//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign( Interpolant.prototype, {

	//( 0, t, t0 ), returns this.resultBuffer
	beforeStart_: Interpolant.prototype.copySampleValue_,

	//( N-1, tN-1, t ), returns this.resultBuffer
	afterEnd_: Interpolant.prototype.copySampleValue_,

} );

/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 *
 * @author tschw
 */

function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call(
			this, parameterPositions, sampleValues, sampleSize, resultBuffer );

	this._weightPrev = -0;
	this._offsetPrev = -0;
	this._weightNext = -0;
	this._offsetNext = -0;

}

CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: CubicInterpolant,

	DefaultSettings_: {

		endingStart: 	ZeroCurvatureEnding,
		endingEnd:		ZeroCurvatureEnding

	},

	intervalChanged_: function( i1, t0, t1 ) {

		var pp = this.parameterPositions,
			iPrev = i1 - 2,
			iNext = i1 + 1,

			tPrev = pp[ iPrev ],
			tNext = pp[ iNext ];

		if ( tPrev === undefined ) {

			switch ( this.getSettings_().endingStart ) {

				case ZeroSlopeEnding:

					// f'(t0) = 0
					iPrev = i1;
					tPrev = 2 * t0 - t1;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iPrev = pp.length - 2;
					tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(t0) = 0 a.k.a. Natural Spline
					iPrev = i1;
					tPrev = t1;

			}

		}

		if ( tNext === undefined ) {

			switch ( this.getSettings_().endingEnd ) {

				case ZeroSlopeEnding:

					// f'(tN) = 0
					iNext = i1;
					tNext = 2 * t1 - t0;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iNext = 1;
					tNext = t1 + pp[ 1 ] - pp[ 0 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(tN) = 0, a.k.a. Natural Spline
					iNext = i1 - 1;
					tNext = t0;

			}

		}

		var halfDt = ( t1 - t0 ) * 0.5,
			stride = this.valueSize;

		this._weightPrev = halfDt / ( t0 - tPrev );
		this._weightNext = halfDt / ( tNext - t1 );
		this._offsetPrev = iPrev * stride;
		this._offsetNext = iNext * stride;

	},

	interpolate_: function( i1, t0, t, t1 ) {

		var result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			o1 = i1 * stride,		o0 = o1 - stride,
			oP = this._offsetPrev, 	oN = this._offsetNext,
			wP = this._weightPrev,	wN = this._weightNext,

			p = ( t - t0 ) / ( t1 - t0 ),
			pp = p * p,
			ppp = pp * p;

		// evaluate polynomials

		var sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;
		var s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;
		var s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;
		var sN =       wN   * ppp   -           wN      * pp;

		// combine data linearly

		for ( var i = 0; i !== stride; ++ i ) {

			result[ i ] =
					sP * values[ oP + i ] +
					s0 * values[ o0 + i ] +
					s1 * values[ o1 + i ] +
					sN * values[ oN + i ];

		}

		return result;

	}

} );

/**
 * @author tschw
 */

function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: LinearInterpolant,

	interpolate_: function( i1, t0, t, t1 ) {

		var result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			offset1 = i1 * stride,
			offset0 = offset1 - stride,

			weight1 = ( t - t0 ) / ( t1 - t0 ),
			weight0 = 1 - weight1;

		for ( var i = 0; i !== stride; ++ i ) {

			result[ i ] =
					values[ offset0 + i ] * weight0 +
					values[ offset1 + i ] * weight1;

		}

		return result;

	}

} );

/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 *
 * @author tschw
 */

function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: DiscreteInterpolant,

	interpolate_: function( i1, t0, t, t1 ) {

		return this.copySampleValue_( i1 - 1 );

	}

} );

var KeyframeTrackPrototype;

KeyframeTrackPrototype = {

	TimeBufferType: Float32Array,
	ValueBufferType: Float32Array,

	DefaultInterpolation: InterpolateLinear,

	InterpolantFactoryMethodDiscrete: function ( result ) {

		return new DiscreteInterpolant(
				this.times, this.values, this.getValueSize(), result );

	},

	InterpolantFactoryMethodLinear: function ( result ) {

		return new LinearInterpolant(
				this.times, this.values, this.getValueSize(), result );

	},

	InterpolantFactoryMethodSmooth: function ( result ) {

		return new CubicInterpolant(
				this.times, this.values, this.getValueSize(), result );

	},

	setInterpolation: function ( interpolation ) {

		var factoryMethod;

		switch ( interpolation ) {

			case InterpolateDiscrete:

				factoryMethod = this.InterpolantFactoryMethodDiscrete;

				break;

			case InterpolateLinear:

				factoryMethod = this.InterpolantFactoryMethodLinear;

				break;

			case InterpolateSmooth:

				factoryMethod = this.InterpolantFactoryMethodSmooth;

				break;

		}

		if ( factoryMethod === undefined ) {

			var message = "unsupported interpolation for " +
					this.ValueTypeName + " keyframe track named " + this.name;

			if ( this.createInterpolant === undefined ) {

				// fall back to default, unless the default itself is messed up
				if ( interpolation !== this.DefaultInterpolation ) {

					this.setInterpolation( this.DefaultInterpolation );

				} else {

					throw new Error( message ); // fatal, in this case

				}

			}

			console.warn( message );
			return;

		}

		this.createInterpolant = factoryMethod;

	},

	getInterpolation: function () {

		switch ( this.createInterpolant ) {

			case this.InterpolantFactoryMethodDiscrete:

				return InterpolateDiscrete;

			case this.InterpolantFactoryMethodLinear:

				return InterpolateLinear;

			case this.InterpolantFactoryMethodSmooth:

				return InterpolateSmooth;

		}

	},

	getValueSize: function () {

		return this.values.length / this.times.length;

	},

	// move all keyframes either forwards or backwards in time
	shift: function ( timeOffset ) {

		if ( timeOffset !== 0.0 ) {

			var times = this.times;

			for ( var i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] += timeOffset;

			}

		}

		return this;

	},

	// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
	scale: function ( timeScale ) {

		if ( timeScale !== 1.0 ) {

			var times = this.times;

			for ( var i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] *= timeScale;

			}

		}

		return this;

	},

	// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
	// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
	trim: function ( startTime, endTime ) {

		var times = this.times,
			nKeys = times.length,
			from = 0,
			to = nKeys - 1;

		while ( from !== nKeys && times[ from ] < startTime ) ++ from;
		while ( to !== - 1 && times[ to ] > endTime ) -- to;

		++ to; // inclusive -> exclusive bound

		if ( from !== 0 || to !== nKeys ) {

			// empty tracks are forbidden, so keep at least one keyframe
			if ( from >= to ) to = Math.max( to, 1 ), from = to - 1;

			var stride = this.getValueSize();
			this.times = AnimationUtils.arraySlice( times, from, to );
			this.values = AnimationUtils.
					arraySlice( this.values, from * stride, to * stride );

		}

		return this;

	},

	// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
	validate: function () {

		var valid = true;

		var valueSize = this.getValueSize();
		if ( valueSize - Math.floor( valueSize ) !== 0 ) {

			console.error( "invalid value size in track", this );
			valid = false;

		}

		var times = this.times,
			values = this.values,

			nKeys = times.length;

		if ( nKeys === 0 ) {

			console.error( "track is empty", this );
			valid = false;

		}

		var prevTime = null;

		for ( var i = 0; i !== nKeys; i ++ ) {

			var currTime = times[ i ];

			if ( typeof currTime === 'number' && isNaN( currTime ) ) {

				console.error( "time is not a valid number", this, i, currTime );
				valid = false;
				break;

			}

			if ( prevTime !== null && prevTime > currTime ) {

				console.error( "out of order keys", this, i, currTime, prevTime );
				valid = false;
				break;

			}

			prevTime = currTime;

		}

		if ( values !== undefined ) {

			if ( AnimationUtils.isTypedArray( values ) ) {

				for ( var i = 0, n = values.length; i !== n; ++ i ) {

					var value = values[ i ];

					if ( isNaN( value ) ) {

						console.error( "value is not a valid number", this, i, value );
						valid = false;
						break;

					}

				}

			}

		}

		return valid;

	},

	// removes equivalent sequential keys as common in morph target sequences
	// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
	optimize: function () {

		var times = this.times,
			values = this.values,
			stride = this.getValueSize(),

			smoothInterpolation = this.getInterpolation() === InterpolateSmooth,

			writeIndex = 1,
			lastIndex = times.length - 1;

		for ( var i = 1; i < lastIndex; ++ i ) {

			var keep = false;

			var time = times[ i ];
			var timeNext = times[ i + 1 ];

			// remove adjacent keyframes scheduled at the same time

			if ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {

				if ( ! smoothInterpolation ) {

					// remove unnecessary keyframes same as their neighbors

					var offset = i * stride,
						offsetP = offset - stride,
						offsetN = offset + stride;

					for ( var j = 0; j !== stride; ++ j ) {

						var value = values[ offset + j ];

						if ( value !== values[ offsetP + j ] ||
								value !== values[ offsetN + j ] ) {

							keep = true;
							break;

						}

					}

				} else keep = true;

			}

			// in-place compaction

			if ( keep ) {

				if ( i !== writeIndex ) {

					times[ writeIndex ] = times[ i ];

					var readOffset = i * stride,
						writeOffset = writeIndex * stride;

					for ( var j = 0; j !== stride; ++ j )

						values[ writeOffset + j ] = values[ readOffset + j ];

				}

				++ writeIndex;

			}

		}

		// flush last keyframe (compaction looks ahead)

		if ( lastIndex > 0 ) {

			times[ writeIndex ] = times[ lastIndex ];

			for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )

				values[ writeOffset + j ] = values[ readOffset + j ];

			++ writeIndex;

		}

		if ( writeIndex !== times.length ) {

			this.times = AnimationUtils.arraySlice( times, 0, writeIndex );
			this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );

		}

		return this;

	}

};

function KeyframeTrackConstructor( name, times, values, interpolation ) {

	if ( name === undefined ) throw new Error( "track name is undefined" );

	if ( times === undefined || times.length === 0 ) {

		throw new Error( "no keyframes in track named " + name );

	}

	this.name = name;

	this.times = AnimationUtils.convertArray( times, this.TimeBufferType );
	this.values = AnimationUtils.convertArray( values, this.ValueBufferType );

	this.setInterpolation( interpolation || this.DefaultInterpolation );

	this.validate();
	this.optimize();

}

/**
 *
 * A Track of vectored keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function VectorKeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.call( this, name, times, values, interpolation );

}

VectorKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: VectorKeyframeTrack,

	ValueTypeName: 'vector'

	// ValueBufferType is inherited

	// DefaultInterpolation is inherited

} );

/**
 * Spherical linear unit quaternion interpolant.
 *
 * @author tschw
 */

function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: QuaternionLinearInterpolant,

	interpolate_: function( i1, t0, t, t1 ) {

		var result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			offset = i1 * stride,

			alpha = ( t - t0 ) / ( t1 - t0 );

		for ( var end = offset + stride; offset !== end; offset += 4 ) {

			Quaternion.slerpFlat( result, 0,
					values, offset - stride, values, offset, alpha );

		}

		return result;

	}

} );

/**
 *
 * A Track of quaternion keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function QuaternionKeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.call( this, name, times, values, interpolation );

}

QuaternionKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: QuaternionKeyframeTrack,

	ValueTypeName: 'quaternion',

	// ValueBufferType is inherited

	DefaultInterpolation: InterpolateLinear,

	InterpolantFactoryMethodLinear: function( result ) {

		return new QuaternionLinearInterpolant(
				this.times, this.values, this.getValueSize(), result );

	},

	InterpolantFactoryMethodSmooth: undefined // not yet implemented

} );

/**
 *
 * A Track of numeric keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function NumberKeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.call( this, name, times, values, interpolation );

}

NumberKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: NumberKeyframeTrack,

	ValueTypeName: 'number'

	// ValueBufferType is inherited

	// DefaultInterpolation is inherited

} );

/**
 *
 * A Track that interpolates Strings
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function StringKeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.call( this, name, times, values, interpolation );

}

StringKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: StringKeyframeTrack,

	ValueTypeName: 'string',
	ValueBufferType: Array,

	DefaultInterpolation: InterpolateDiscrete,

	InterpolantFactoryMethodLinear: undefined,

	InterpolantFactoryMethodSmooth: undefined

} );

/**
 *
 * A Track of Boolean keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function BooleanKeyframeTrack( name, times, values ) {

	KeyframeTrackConstructor.call( this, name, times, values );

}

BooleanKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: BooleanKeyframeTrack,

	ValueTypeName: 'bool',
	ValueBufferType: Array,

	DefaultInterpolation: InterpolateDiscrete,

	InterpolantFactoryMethodLinear: undefined,
	InterpolantFactoryMethodSmooth: undefined

	// Note: Actually this track could have a optimized / compressed
	// representation of a single value and a custom interpolant that
	// computes "firstValue ^ isOdd( index )".

} );

/**
 *
 * A Track of keyframe values that represent color.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function ColorKeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.call( this, name, times, values, interpolation );

}

ColorKeyframeTrack.prototype =
		Object.assign( Object.create( KeyframeTrackPrototype ), {

	constructor: ColorKeyframeTrack,

	ValueTypeName: 'color'

	// ValueBufferType is inherited

	// DefaultInterpolation is inherited


	// Note: Very basic implementation and nothing special yet.
	// However, this is the place for color space parameterization.

} );

/**
 *
 * A timed sequence of keyframes for a specific property.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function KeyframeTrack( name, times, values, interpolation ) {

	KeyframeTrackConstructor.apply( this, arguments );

}

KeyframeTrack.prototype = KeyframeTrackPrototype;
KeyframeTrackPrototype.constructor = KeyframeTrack;

// Static methods:

Object.assign( KeyframeTrack, {

	// Serialization (in static context, because of constructor invocation
	// and automatic invocation of .toJSON):

	parse: function( json ) {

		if( json.type === undefined ) {

			throw new Error( "track type undefined, can not parse" );

		}

		var trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );

		if ( json.times === undefined ) {

			var times = [], values = [];

			AnimationUtils.flattenJSON( json.keys, times, values, 'value' );

			json.times = times;
			json.values = values;

		}

		// derived classes can define a static parse method
		if ( trackType.parse !== undefined ) {

			return trackType.parse( json );

		} else {

			// by default, we asssume a constructor compatible with the base
			return new trackType(
					json.name, json.times, json.values, json.interpolation );

		}

	},

	toJSON: function( track ) {

		var trackType = track.constructor;

		var json;

		// derived classes can define a static toJSON method
		if ( trackType.toJSON !== undefined ) {

			json = trackType.toJSON( track );

		} else {

			// by default, we assume the data can be serialized as-is
			json = {

				'name': track.name,
				'times': AnimationUtils.convertArray( track.times, Array ),
				'values': AnimationUtils.convertArray( track.values, Array )

			};

			var interpolation = track.getInterpolation();

			if ( interpolation !== track.DefaultInterpolation ) {

				json.interpolation = interpolation;

			}

		}

		json.type = track.ValueTypeName; // mandatory

		return json;

	},

	_getTrackTypeForValueTypeName: function( typeName ) {

		switch( typeName.toLowerCase() ) {

			case "scalar":
			case "double":
			case "float":
			case "number":
			case "integer":

				return NumberKeyframeTrack;

			case "vector":
			case "vector2":
			case "vector3":
			case "vector4":

				return VectorKeyframeTrack;

			case "color":

				return ColorKeyframeTrack;

			case "quaternion":

				return QuaternionKeyframeTrack;

			case "bool":
			case "boolean":

				return BooleanKeyframeTrack;

			case "string":

				return StringKeyframeTrack;

		}

		throw new Error( "Unsupported typeName: " + typeName );

	}

} );

/**
 *
 * Reusable set of Tracks that represent an animation.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */

function AnimationClip( name, duration, tracks ) {

	this.name = name;
	this.tracks = tracks;
	this.duration = ( duration !== undefined ) ? duration : - 1;

	this.uuid = _Math.generateUUID();

	// this means it should figure out its duration by scanning the tracks
	if ( this.duration < 0 ) {

		this.resetDuration();

	}

	this.optimize();

}

Object.assign( AnimationClip, {

	parse: function ( json ) {

		var tracks = [],
			jsonTracks = json.tracks,
			frameTime = 1.0 / ( json.fps || 1.0 );

		for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {

			tracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );

		}

		return new AnimationClip( json.name, json.duration, tracks );

	},

	toJSON: function ( clip ) {

		var tracks = [],
			clipTracks = clip.tracks;

		var json = {

			'name': clip.name,
			'duration': clip.duration,
			'tracks': tracks

		};

		for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {

			tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );

		}

		return json;

	},

	CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {

		var numMorphTargets = morphTargetSequence.length;
		var tracks = [];

		for ( var i = 0; i < numMorphTargets; i ++ ) {

			var times = [];
			var values = [];

			times.push(
					( i + numMorphTargets - 1 ) % numMorphTargets,
					i,
					( i + 1 ) % numMorphTargets );

			values.push( 0, 1, 0 );

			var order = AnimationUtils.getKeyframeOrder( times );
			times = AnimationUtils.sortedArray( times, 1, order );
			values = AnimationUtils.sortedArray( values, 1, order );

			// if there is a key at the first frame, duplicate it as the
			// last frame as well for perfect loop.
			if ( ! noLoop && times[ 0 ] === 0 ) {

				times.push( numMorphTargets );
				values.push( values[ 0 ] );

			}

			tracks.push(
					new NumberKeyframeTrack(
						'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',
						times, values
					).scale( 1.0 / fps ) );

		}

		return new AnimationClip( name, - 1, tracks );

	},

	findByName: function ( objectOrClipArray, name ) {

		var clipArray = objectOrClipArray;

		if ( ! Array.isArray( objectOrClipArray ) ) {

			var o = objectOrClipArray;
			clipArray = o.geometry && o.geometry.animations || o.animations;

		}

		for ( var i = 0; i < clipArray.length; i ++ ) {

			if ( clipArray[ i ].name === name ) {

				return clipArray[ i ];

			}

		}

		return null;

	},

	CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {

		var animationToMorphTargets = {};

		// tested with https://regex101.com/ on trick sequences
		// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
		var pattern = /^([\w-]*?)([\d]+)$/;

		// sort morph target names into animation groups based
		// patterns like Walk_001, Walk_002, Run_001, Run_002
		for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {

			var morphTarget = morphTargets[ i ];
			var parts = morphTarget.name.match( pattern );

			if ( parts && parts.length > 1 ) {

				var name = parts[ 1 ];

				var animationMorphTargets = animationToMorphTargets[ name ];
				if ( ! animationMorphTargets ) {

					animationToMorphTargets[ name ] = animationMorphTargets = [];

				}

				animationMorphTargets.push( morphTarget );

			}

		}

		var clips = [];

		for ( var name in animationToMorphTargets ) {

			clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );

		}

		return clips;

	},

	// parse the animation.hierarchy format
	parseAnimation: function ( animation, bones ) {

		if ( ! animation ) {

			console.error( "  no animation in JSONLoader data" );
			return null;

		}

		var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {

			// only return track if there are actually keys.
			if ( animationKeys.length !== 0 ) {

				var times = [];
				var values = [];

				AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );

				// empty keys are filtered out, so check again
				if ( times.length !== 0 ) {

					destTracks.push( new trackType( trackName, times, values ) );

				}

			}

		};

		var tracks = [];

		var clipName = animation.name || 'default';
		// automatic length determination in AnimationClip.
		var duration = animation.length || - 1;
		var fps = animation.fps || 30;

		var hierarchyTracks = animation.hierarchy || [];

		for ( var h = 0; h < hierarchyTracks.length; h ++ ) {

			var animationKeys = hierarchyTracks[ h ].keys;

			// skip empty tracks
			if ( ! animationKeys || animationKeys.length === 0 ) continue;

			// process morph targets in a way exactly compatible
			// with AnimationHandler.init( animation )
			if ( animationKeys[ 0 ].morphTargets ) {

				// figure out all morph targets used in this track
				var morphTargetNames = {};

				for ( var k = 0; k < animationKeys.length; k ++ ) {

					if ( animationKeys[ k ].morphTargets ) {

						for ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {

							morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;

						}

					}

				}

				// create a track for each morph target with all zero
				// morphTargetInfluences except for the keys in which
				// the morphTarget is named.
				for ( var morphTargetName in morphTargetNames ) {

					var times = [];
					var values = [];

					for ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {

						var animationKey = animationKeys[ k ];

						times.push( animationKey.time );
						values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );

					}

					tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );

				}

				duration = morphTargetNames.length * ( fps || 1.0 );

			} else {

				// ...assume skeletal animation

				var boneName = '.bones[' + bones[ h ].name + ']';

				addNonemptyTrack(
						VectorKeyframeTrack, boneName + '.position',
						animationKeys, 'pos', tracks );

				addNonemptyTrack(
						QuaternionKeyframeTrack, boneName + '.quaternion',
						animationKeys, 'rot', tracks );

				addNonemptyTrack(
						VectorKeyframeTrack, boneName + '.scale',
						animationKeys, 'scl', tracks );

			}

		}

		if ( tracks.length === 0 ) {

			return null;

		}

		var clip = new AnimationClip( clipName, duration, tracks );

		return clip;

	}

} );

Object.assign( AnimationClip.prototype, {

	resetDuration: function () {

		var tracks = this.tracks, duration = 0;

		for ( var i = 0, n = tracks.length; i !== n; ++ i ) {

			var track = this.tracks[ i ];

			duration = Math.max( duration, track.times[ track.times.length - 1 ] );

		}

		this.duration = duration;

	},

	trim: function () {

		for ( var i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].trim( 0, this.duration );

		}

		return this;

	},

	optimize: function () {

		for ( var i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].optimize();

		}

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function MaterialLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;
	this.textures = {};

}

Object.assign( MaterialLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var loader = new FileLoader( scope.manager );
		loader.setResponseType( 'json' );
		loader.load( url, function ( json ) {

			onLoad( scope.parse( json ) );

		}, onProgress, onError );

	},

	setTextures: function ( value ) {

		this.textures = value;

	},

	parse: function ( json ) {

		var textures = this.textures;

		function getTexture( name ) {

			if ( textures[ name ] === undefined ) {

				console.warn( 'THREE.MaterialLoader: Undefined texture', name );

			}

			return textures[ name ];

		}

		var material = new Materials[ json.type ]();

		if ( json.uuid !== undefined ) material.uuid = json.uuid;
		if ( json.name !== undefined ) material.name = json.name;
		if ( json.color !== undefined ) material.color.setHex( json.color );
		if ( json.roughness !== undefined ) material.roughness = json.roughness;
		if ( json.metalness !== undefined ) material.metalness = json.metalness;
		if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );
		if ( json.specular !== undefined ) material.specular.setHex( json.specular );
		if ( json.shininess !== undefined ) material.shininess = json.shininess;
		if ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;
		if ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;
		if ( json.uniforms !== undefined ) material.uniforms = json.uniforms;
		if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;
		if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;
		if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;
		if ( json.fog !== undefined ) material.fog = json.fog;
		if ( json.shading !== undefined ) material.shading = json.shading;
		if ( json.blending !== undefined ) material.blending = json.blending;
		if ( json.side !== undefined ) material.side = json.side;
		if ( json.opacity !== undefined ) material.opacity = json.opacity;
		if ( json.transparent !== undefined ) material.transparent = json.transparent;
		if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;
		if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;
		if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;
		if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;
		if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;
		if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;
		if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;
		if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;
		if ( json.skinning !== undefined ) material.skinning = json.skinning;
		if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;

		// for PointsMaterial

		if ( json.size !== undefined ) material.size = json.size;
		if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;

		// maps

		if ( json.map !== undefined ) material.map = getTexture( json.map );

		if ( json.alphaMap !== undefined ) {

			material.alphaMap = getTexture( json.alphaMap );
			material.transparent = true;

		}

		if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );
		if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;

		if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );
		if ( json.normalScale !== undefined ) {

			var normalScale = json.normalScale;

			if ( Array.isArray( normalScale ) === false ) {

				// Blender exporter used to export a scalar. See #7459

				normalScale = [ normalScale, normalScale ];

			}

			material.normalScale = new Vector2().fromArray( normalScale );

		}

		if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );
		if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;
		if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;

		if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );
		if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );

		if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );
		if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;

		if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );

		if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );

		if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;

		if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );
		if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;

		if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );
		if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;

		if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );

		// MultiMaterial

		if ( json.materials !== undefined ) {

			for ( var i = 0, l = json.materials.length; i < l; i ++ ) {

				material.materials.push( this.parse( json.materials[ i ] ) );

			}

		}

		return material;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function BufferGeometryLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( BufferGeometryLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var loader = new FileLoader( scope.manager );
		loader.setResponseType( 'json' );
		loader.load( url, function ( json ) {

			onLoad( scope.parse( json ) );

		}, onProgress, onError );

	},

	parse: function ( json ) {

		var geometry = new BufferGeometry();

		var index = json.data.index;

		var TYPED_ARRAYS = {
			'Int8Array': Int8Array,
			'Uint8Array': Uint8Array,
			'Uint8ClampedArray': Uint8ClampedArray,
			'Int16Array': Int16Array,
			'Uint16Array': Uint16Array,
			'Int32Array': Int32Array,
			'Uint32Array': Uint32Array,
			'Float32Array': Float32Array,
			'Float64Array': Float64Array
		};

		if ( index !== undefined ) {

			var typedArray = new TYPED_ARRAYS[ index.type ]( index.array );
			geometry.setIndex( new BufferAttribute( typedArray, 1 ) );

		}

		var attributes = json.data.attributes;

		for ( var key in attributes ) {

			var attribute = attributes[ key ];
			var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );

			geometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );

		}

		var groups = json.data.groups || json.data.drawcalls || json.data.offsets;

		if ( groups !== undefined ) {

			for ( var i = 0, n = groups.length; i !== n; ++ i ) {

				var group = groups[ i ];

				geometry.addGroup( group.start, group.count, group.materialIndex );

			}

		}

		var boundingSphere = json.data.boundingSphere;

		if ( boundingSphere !== undefined ) {

			var center = new Vector3();

			if ( boundingSphere.center !== undefined ) {

				center.fromArray( boundingSphere.center );

			}

			geometry.boundingSphere = new Sphere$2( center, boundingSphere.radius );

		}

		return geometry;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function Loader() {

	this.onLoadStart = function () {};
	this.onLoadProgress = function () {};
	this.onLoadComplete = function () {};

}

Loader.Handlers = {

	handlers: [],

	add: function ( regex, loader ) {

		this.handlers.push( regex, loader );

	},

	get: function ( file ) {

		var handlers = this.handlers;

		for ( var i = 0, l = handlers.length; i < l; i += 2 ) {

			var regex = handlers[ i ];
			var loader = handlers[ i + 1 ];

			if ( regex.test( file ) ) {

				return loader;

			}

		}

		return null;

	}

};

Object.assign( Loader.prototype, {

	crossOrigin: undefined,

	extractUrlBase: function ( url ) {

		var parts = url.split( '/' );

		if ( parts.length === 1 ) return './';

		parts.pop();

		return parts.join( '/' ) + '/';

	},

	initMaterials: function ( materials, texturePath, crossOrigin ) {

		var array = [];

		for ( var i = 0; i < materials.length; ++ i ) {

			array[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );

		}

		return array;

	},

	createMaterial: ( function () {

		var BlendingMode = {
			NoBlending: NoBlending,
			NormalBlending: NormalBlending,
			AdditiveBlending: AdditiveBlending,
			SubtractiveBlending: SubtractiveBlending,
			MultiplyBlending: MultiplyBlending,
			CustomBlending: CustomBlending
		};

		var color = new Color();
		var textureLoader = new TextureLoader();
		var materialLoader = new MaterialLoader();

		return function createMaterial( m, texturePath, crossOrigin ) {

			// convert from old material format

			var textures = {};

			function loadTexture( path, repeat, offset, wrap, anisotropy ) {

				var fullPath = texturePath + path;
				var loader = Loader.Handlers.get( fullPath );

				var texture;

				if ( loader !== null ) {

					texture = loader.load( fullPath );

				} else {

					textureLoader.setCrossOrigin( crossOrigin );
					texture = textureLoader.load( fullPath );

				}

				if ( repeat !== undefined ) {

					texture.repeat.fromArray( repeat );

					if ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;
					if ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;

				}

				if ( offset !== undefined ) {

					texture.offset.fromArray( offset );

				}

				if ( wrap !== undefined ) {

					if ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;
					if ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;

					if ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;
					if ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;

				}

				if ( anisotropy !== undefined ) {

					texture.anisotropy = anisotropy;

				}

				var uuid = _Math.generateUUID();

				textures[ uuid ] = texture;

				return uuid;

			}

			//

			var json = {
				uuid: _Math.generateUUID(),
				type: 'MeshLambertMaterial'
			};

			for ( var name in m ) {

				var value = m[ name ];

				switch ( name ) {

					case 'DbgColor':
					case 'DbgIndex':
					case 'opticalDensity':
					case 'illumination':
						break;
					case 'DbgName':
						json.name = value;
						break;
					case 'blending':
						json.blending = BlendingMode[ value ];
						break;
					case 'colorAmbient':
					case 'mapAmbient':
						console.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );
						break;
					case 'colorDiffuse':
						json.color = color.fromArray( value ).getHex();
						break;
					case 'colorSpecular':
						json.specular = color.fromArray( value ).getHex();
						break;
					case 'colorEmissive':
						json.emissive = color.fromArray( value ).getHex();
						break;
					case 'specularCoef':
						json.shininess = value;
						break;
					case 'shading':
						if ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';
						if ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';
						if ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';
						break;
					case 'mapDiffuse':
						json.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );
						break;
					case 'mapDiffuseRepeat':
					case 'mapDiffuseOffset':
					case 'mapDiffuseWrap':
					case 'mapDiffuseAnisotropy':
						break;
					case 'mapEmissive':
						json.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );
						break;
					case 'mapEmissiveRepeat':
					case 'mapEmissiveOffset':
					case 'mapEmissiveWrap':
					case 'mapEmissiveAnisotropy':
						break;
					case 'mapLight':
						json.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );
						break;
					case 'mapLightRepeat':
					case 'mapLightOffset':
					case 'mapLightWrap':
					case 'mapLightAnisotropy':
						break;
					case 'mapAO':
						json.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );
						break;
					case 'mapAORepeat':
					case 'mapAOOffset':
					case 'mapAOWrap':
					case 'mapAOAnisotropy':
						break;
					case 'mapBump':
						json.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );
						break;
					case 'mapBumpScale':
						json.bumpScale = value;
						break;
					case 'mapBumpRepeat':
					case 'mapBumpOffset':
					case 'mapBumpWrap':
					case 'mapBumpAnisotropy':
						break;
					case 'mapNormal':
						json.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );
						break;
					case 'mapNormalFactor':
						json.normalScale = [ value, value ];
						break;
					case 'mapNormalRepeat':
					case 'mapNormalOffset':
					case 'mapNormalWrap':
					case 'mapNormalAnisotropy':
						break;
					case 'mapSpecular':
						json.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );
						break;
					case 'mapSpecularRepeat':
					case 'mapSpecularOffset':
					case 'mapSpecularWrap':
					case 'mapSpecularAnisotropy':
						break;
					case 'mapMetalness':
						json.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );
						break;
					case 'mapMetalnessRepeat':
					case 'mapMetalnessOffset':
					case 'mapMetalnessWrap':
					case 'mapMetalnessAnisotropy':
						break;
					case 'mapRoughness':
						json.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );
						break;
					case 'mapRoughnessRepeat':
					case 'mapRoughnessOffset':
					case 'mapRoughnessWrap':
					case 'mapRoughnessAnisotropy':
						break;
					case 'mapAlpha':
						json.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );
						break;
					case 'mapAlphaRepeat':
					case 'mapAlphaOffset':
					case 'mapAlphaWrap':
					case 'mapAlphaAnisotropy':
						break;
					case 'flipSided':
						json.side = BackSide;
						break;
					case 'doubleSided':
						json.side = DoubleSide;
						break;
					case 'transparency':
						console.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );
						json.opacity = value;
						break;
					case 'depthTest':
					case 'depthWrite':
					case 'colorWrite':
					case 'opacity':
					case 'reflectivity':
					case 'transparent':
					case 'visible':
					case 'wireframe':
						json[ name ] = value;
						break;
					case 'vertexColors':
						if ( value === true ) json.vertexColors = VertexColors;
						if ( value === 'face' ) json.vertexColors = FaceColors;
						break;
					default:
						console.error( 'THREE.Loader.createMaterial: Unsupported', name, value );
						break;

				}

			}

			if ( json.type === 'MeshBasicMaterial' ) delete json.emissive;
			if ( json.type !== 'MeshPhongMaterial' ) delete json.specular;

			if ( json.opacity < 1 ) json.transparent = true;

			materialLoader.setTextures( textures );

			return materialLoader.parse( json );

		};

	} )()

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

function JSONLoader( manager ) {

	if ( typeof manager === 'boolean' ) {

		console.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );
		manager = undefined;

	}

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

	this.withCredentials = false;

}

Object.assign( JSONLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var texturePath = this.texturePath && ( typeof this.texturePath === "string" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );

		var loader = new FileLoader( this.manager );
		loader.setResponseType( 'json' );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( json ) {

			var metadata = json.metadata;

			if ( metadata !== undefined ) {

				var type = metadata.type;

				if ( type !== undefined ) {

					if ( type.toLowerCase() === 'object' ) {

						console.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );
						return;

					}

					if ( type.toLowerCase() === 'scene' ) {

						console.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );
						return;

					}

				}

			}

			var object = scope.parse( json, texturePath );
			onLoad( object.geometry, object.materials );

		}, onProgress, onError );

	},

	setTexturePath: function ( value ) {

		this.texturePath = value;

	},

	parse: ( function () {

		function parseModel( json, geometry ) {

			function isBitSet( value, position ) {

				return value & ( 1 << position );

			}

			var i, j, fi,

				offset, zLength,

				colorIndex, normalIndex, uvIndex, materialIndex,

				type,
				isQuad,
				hasMaterial,
				hasFaceVertexUv,
				hasFaceNormal, hasFaceVertexNormal,
				hasFaceColor, hasFaceVertexColor,

				vertex, face, faceA, faceB, hex, normal,

				uvLayer, uv, u, v,

				faces = json.faces,
				vertices = json.vertices,
				normals = json.normals,
				colors = json.colors,

				scale = json.scale,

				nUvLayers = 0;


			if ( json.uvs !== undefined ) {

				// disregard empty arrays

				for ( i = 0; i < json.uvs.length; i ++ ) {

					if ( json.uvs[ i ].length ) nUvLayers ++;

				}

				for ( i = 0; i < nUvLayers; i ++ ) {

					geometry.faceVertexUvs[ i ] = [];

				}

			}

			offset = 0;
			zLength = vertices.length;

			while ( offset < zLength ) {

				vertex = new Vector3();

				vertex.x = vertices[ offset ++ ] * scale;
				vertex.y = vertices[ offset ++ ] * scale;
				vertex.z = vertices[ offset ++ ] * scale;

				geometry.vertices.push( vertex );

			}

			offset = 0;
			zLength = faces.length;

			while ( offset < zLength ) {

				type = faces[ offset ++ ];

				isQuad = isBitSet( type, 0 );
				hasMaterial = isBitSet( type, 1 );
				hasFaceVertexUv = isBitSet( type, 3 );
				hasFaceNormal = isBitSet( type, 4 );
				hasFaceVertexNormal = isBitSet( type, 5 );
				hasFaceColor = isBitSet( type, 6 );
				hasFaceVertexColor = isBitSet( type, 7 );

				// console.log("type", type, "bits", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);

				if ( isQuad ) {

					faceA = new Face3();
					faceA.a = faces[ offset ];
					faceA.b = faces[ offset + 1 ];
					faceA.c = faces[ offset + 3 ];

					faceB = new Face3();
					faceB.a = faces[ offset + 1 ];
					faceB.b = faces[ offset + 2 ];
					faceB.c = faces[ offset + 3 ];

					offset += 4;

					if ( hasMaterial ) {

						materialIndex = faces[ offset ++ ];
						faceA.materialIndex = materialIndex;
						faceB.materialIndex = materialIndex;

					}

					// to get face <=> uv index correspondence

					fi = geometry.faces.length;

					if ( hasFaceVertexUv ) {

						for ( i = 0; i < nUvLayers; i ++ ) {

							uvLayer = json.uvs[ i ];

							geometry.faceVertexUvs[ i ][ fi ] = [];
							geometry.faceVertexUvs[ i ][ fi + 1 ] = [];

							for ( j = 0; j < 4; j ++ ) {

								uvIndex = faces[ offset ++ ];

								u = uvLayer[ uvIndex * 2 ];
								v = uvLayer[ uvIndex * 2 + 1 ];

								uv = new Vector2( u, v );

								if ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );
								if ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );

							}

						}

					}

					if ( hasFaceNormal ) {

						normalIndex = faces[ offset ++ ] * 3;

						faceA.normal.set(
							normals[ normalIndex ++ ],
							normals[ normalIndex ++ ],
							normals[ normalIndex ]
						);

						faceB.normal.copy( faceA.normal );

					}

					if ( hasFaceVertexNormal ) {

						for ( i = 0; i < 4; i ++ ) {

							normalIndex = faces[ offset ++ ] * 3;

							normal = new Vector3(
								normals[ normalIndex ++ ],
								normals[ normalIndex ++ ],
								normals[ normalIndex ]
							);


							if ( i !== 2 ) faceA.vertexNormals.push( normal );
							if ( i !== 0 ) faceB.vertexNormals.push( normal );

						}

					}


					if ( hasFaceColor ) {

						colorIndex = faces[ offset ++ ];
						hex = colors[ colorIndex ];

						faceA.color.setHex( hex );
						faceB.color.setHex( hex );

					}


					if ( hasFaceVertexColor ) {

						for ( i = 0; i < 4; i ++ ) {

							colorIndex = faces[ offset ++ ];
							hex = colors[ colorIndex ];

							if ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );
							if ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );

						}

					}

					geometry.faces.push( faceA );
					geometry.faces.push( faceB );

				} else {

					face = new Face3();
					face.a = faces[ offset ++ ];
					face.b = faces[ offset ++ ];
					face.c = faces[ offset ++ ];

					if ( hasMaterial ) {

						materialIndex = faces[ offset ++ ];
						face.materialIndex = materialIndex;

					}

					// to get face <=> uv index correspondence

					fi = geometry.faces.length;

					if ( hasFaceVertexUv ) {

						for ( i = 0; i < nUvLayers; i ++ ) {

							uvLayer = json.uvs[ i ];

							geometry.faceVertexUvs[ i ][ fi ] = [];

							for ( j = 0; j < 3; j ++ ) {

								uvIndex = faces[ offset ++ ];

								u = uvLayer[ uvIndex * 2 ];
								v = uvLayer[ uvIndex * 2 + 1 ];

								uv = new Vector2( u, v );

								geometry.faceVertexUvs[ i ][ fi ].push( uv );

							}

						}

					}

					if ( hasFaceNormal ) {

						normalIndex = faces[ offset ++ ] * 3;

						face.normal.set(
							normals[ normalIndex ++ ],
							normals[ normalIndex ++ ],
							normals[ normalIndex ]
						);

					}

					if ( hasFaceVertexNormal ) {

						for ( i = 0; i < 3; i ++ ) {

							normalIndex = faces[ offset ++ ] * 3;

							normal = new Vector3(
								normals[ normalIndex ++ ],
								normals[ normalIndex ++ ],
								normals[ normalIndex ]
							);

							face.vertexNormals.push( normal );

						}

					}


					if ( hasFaceColor ) {

						colorIndex = faces[ offset ++ ];
						face.color.setHex( colors[ colorIndex ] );

					}


					if ( hasFaceVertexColor ) {

						for ( i = 0; i < 3; i ++ ) {

							colorIndex = faces[ offset ++ ];
							face.vertexColors.push( new Color( colors[ colorIndex ] ) );

						}

					}

					geometry.faces.push( face );

				}

			}

		}

		function parseSkin( json, geometry ) {

			var influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;

			if ( json.skinWeights ) {

				for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {

					var x = json.skinWeights[ i ];
					var y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;
					var z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;
					var w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;

					geometry.skinWeights.push( new Vector4( x, y, z, w ) );

				}

			}

			if ( json.skinIndices ) {

				for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {

					var a = json.skinIndices[ i ];
					var b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;
					var c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;
					var d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;

					geometry.skinIndices.push( new Vector4( a, b, c, d ) );

				}

			}

			geometry.bones = json.bones;

			if ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {

				console.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +
					geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );

			}

		}

		function parseMorphing( json, geometry ) {

			var scale = json.scale;

			if ( json.morphTargets !== undefined ) {

				for ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {

					geometry.morphTargets[ i ] = {};
					geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;
					geometry.morphTargets[ i ].vertices = [];

					var dstVertices = geometry.morphTargets[ i ].vertices;
					var srcVertices = json.morphTargets[ i ].vertices;

					for ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {

						var vertex = new Vector3();
						vertex.x = srcVertices[ v ] * scale;
						vertex.y = srcVertices[ v + 1 ] * scale;
						vertex.z = srcVertices[ v + 2 ] * scale;

						dstVertices.push( vertex );

					}

				}

			}

			if ( json.morphColors !== undefined && json.morphColors.length > 0 ) {

				console.warn( 'THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.' );

				var faces = geometry.faces;
				var morphColors = json.morphColors[ 0 ].colors;

				for ( var i = 0, l = faces.length; i < l; i ++ ) {

					faces[ i ].color.fromArray( morphColors, i * 3 );

				}

			}

		}

		function parseAnimations( json, geometry ) {

			var outputAnimations = [];

			// parse old style Bone/Hierarchy animations
			var animations = [];

			if ( json.animation !== undefined ) {

				animations.push( json.animation );

			}

			if ( json.animations !== undefined ) {

				if ( json.animations.length ) {

					animations = animations.concat( json.animations );

				} else {

					animations.push( json.animations );

				}

			}

			for ( var i = 0; i < animations.length; i ++ ) {

				var clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );
				if ( clip ) outputAnimations.push( clip );

			}

			// parse implicit morph animations
			if ( geometry.morphTargets ) {

				// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.
				var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );
				outputAnimations = outputAnimations.concat( morphAnimationClips );

			}

			if ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;

		}

		return function ( json, texturePath ) {

			if ( json.data !== undefined ) {

				// Geometry 4.0 spec
				json = json.data;

			}

			if ( json.scale !== undefined ) {

				json.scale = 1.0 / json.scale;

			} else {

				json.scale = 1.0;

			}

			var geometry = new Geometry();

			parseModel( json, geometry );
			parseSkin( json, geometry );
			parseMorphing( json, geometry );
			parseAnimations( json, geometry );

			geometry.computeFaceNormals();
			geometry.computeBoundingSphere();

			if ( json.materials === undefined || json.materials.length === 0 ) {

				return { geometry: geometry };

			} else {

				var materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );

				return { geometry: geometry, materials: materials };

			}

		};

	} )()

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function ObjectLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;
	this.texturePath = '';

}

Object.assign( ObjectLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		if ( this.texturePath === '' ) {

			this.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );

		}

		var scope = this;

		var loader = new FileLoader( scope.manager );
		loader.load( url, function ( text ) {

			var json = null;

			try {

				json = JSON.parse( text );

			} catch ( error ) {

				if ( onError !== undefined ) onError( error );

				console.error( 'THREE:ObjectLoader: Can\'t parse ' + url + '.', error.message );

				return;

			}

			var metadata = json.metadata;

			if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {

				console.error( 'THREE.ObjectLoader: Can\'t load ' + url + '. Use THREE.JSONLoader instead.' );
				return;

			}

			scope.parse( json, onLoad );

		}, onProgress, onError );

	},

	setTexturePath: function ( value ) {

		this.texturePath = value;

	},

	setCrossOrigin: function ( value ) {

		this.crossOrigin = value;

	},

	parse: function ( json, onLoad ) {

		var geometries = this.parseGeometries( json.geometries );

		var images = this.parseImages( json.images, function () {

			if ( onLoad !== undefined ) onLoad( object );

		} );

		var textures = this.parseTextures( json.textures, images );
		var materials = this.parseMaterials( json.materials, textures );

		var object = this.parseObject( json.object, geometries, materials );

		if ( json.animations ) {

			object.animations = this.parseAnimations( json.animations );

		}

		if ( json.images === undefined || json.images.length === 0 ) {

			if ( onLoad !== undefined ) onLoad( object );

		}

		return object;

	},

	parseGeometries: function ( json ) {

		var geometries = {};

		if ( json !== undefined ) {

			var geometryLoader = new JSONLoader();
			var bufferGeometryLoader = new BufferGeometryLoader();

			for ( var i = 0, l = json.length; i < l; i ++ ) {

				var geometry;
				var data = json[ i ];

				switch ( data.type ) {

					case 'PlaneGeometry':
					case 'PlaneBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.width,
							data.height,
							data.widthSegments,
							data.heightSegments
						);

						break;

					case 'BoxGeometry':
					case 'BoxBufferGeometry':
					case 'CubeGeometry': // backwards compatible

						geometry = new Geometries[ data.type ](
							data.width,
							data.height,
							data.depth,
							data.widthSegments,
							data.heightSegments,
							data.depthSegments
						);

						break;

					case 'CircleGeometry':
					case 'CircleBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.segments,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'CylinderGeometry':
					case 'CylinderBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radiusTop,
							data.radiusBottom,
							data.height,
							data.radialSegments,
							data.heightSegments,
							data.openEnded,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'ConeGeometry':
					case 'ConeBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.height,
							data.radialSegments,
							data.heightSegments,
							data.openEnded,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'SphereGeometry':
					case 'SphereBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.widthSegments,
							data.heightSegments,
							data.phiStart,
							data.phiLength,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'DodecahedronGeometry':
					case 'IcosahedronGeometry':
					case 'OctahedronGeometry':
					case 'TetrahedronGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.detail
						);

						break;

					case 'RingGeometry':
					case 'RingBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.innerRadius,
							data.outerRadius,
							data.thetaSegments,
							data.phiSegments,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'TorusGeometry':
					case 'TorusBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.tube,
							data.radialSegments,
							data.tubularSegments,
							data.arc
						);

						break;

					case 'TorusKnotGeometry':
					case 'TorusKnotBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.tube,
							data.tubularSegments,
							data.radialSegments,
							data.p,
							data.q
						);

						break;

					case 'LatheGeometry':
					case 'LatheBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.points,
							data.segments,
							data.phiStart,
							data.phiLength
						);

						break;

					case 'BufferGeometry':

						geometry = bufferGeometryLoader.parse( data );

						break;

					case 'Geometry':

						geometry = geometryLoader.parse( data, this.texturePath ).geometry;

						break;

					default:

						console.warn( 'THREE.ObjectLoader: Unsupported geometry type "' + data.type + '"' );

						continue;

				}

				geometry.uuid = data.uuid;

				if ( data.name !== undefined ) geometry.name = data.name;

				geometries[ data.uuid ] = geometry;

			}

		}

		return geometries;

	},

	parseMaterials: function ( json, textures ) {

		var materials = {};

		if ( json !== undefined ) {

			var loader = new MaterialLoader();
			loader.setTextures( textures );

			for ( var i = 0, l = json.length; i < l; i ++ ) {

				var material = loader.parse( json[ i ] );
				materials[ material.uuid ] = material;

			}

		}

		return materials;

	},

	parseAnimations: function ( json ) {

		var animations = [];

		for ( var i = 0; i < json.length; i ++ ) {

			var clip = AnimationClip.parse( json[ i ] );

			animations.push( clip );

		}

		return animations;

	},

	parseImages: function ( json, onLoad ) {

		var scope = this;
		var images = {};

		function loadImage( url ) {

			scope.manager.itemStart( url );

			return loader.load( url, function () {

				scope.manager.itemEnd( url );

			}, undefined, function () {

				scope.manager.itemError( url );

			} );

		}

		if ( json !== undefined && json.length > 0 ) {

			var manager = new LoadingManager( onLoad );

			var loader = new ImageLoader( manager );
			loader.setCrossOrigin( this.crossOrigin );

			for ( var i = 0, l = json.length; i < l; i ++ ) {

				var image = json[ i ];
				var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;

				images[ image.uuid ] = loadImage( path );

			}

		}

		return images;

	},

	parseTextures: function ( json, images ) {

		var TextureMapping = {
			UVMapping: UVMapping,
			CubeReflectionMapping: CubeReflectionMapping,
			CubeRefractionMapping: CubeRefractionMapping,
			EquirectangularReflectionMapping: EquirectangularReflectionMapping,
			EquirectangularRefractionMapping: EquirectangularRefractionMapping,
			SphericalReflectionMapping: SphericalReflectionMapping,
			CubeUVReflectionMapping: CubeUVReflectionMapping,
			CubeUVRefractionMapping: CubeUVRefractionMapping
		};

		var TextureWrapping = {
			RepeatWrapping: RepeatWrapping,
			ClampToEdgeWrapping: ClampToEdgeWrapping,
			MirroredRepeatWrapping: MirroredRepeatWrapping
		};

		var TextureFilter = {
			NearestFilter: NearestFilter,
			NearestMipMapNearestFilter: NearestMipMapNearestFilter,
			NearestMipMapLinearFilter: NearestMipMapLinearFilter,
			LinearFilter: LinearFilter,
			LinearMipMapNearestFilter: LinearMipMapNearestFilter,
			LinearMipMapLinearFilter: LinearMipMapLinearFilter
		};

		function parseConstant( value, type ) {

			if ( typeof( value ) === 'number' ) return value;

			console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );

			return type[ value ];

		}

		var textures = {};

		if ( json !== undefined ) {

			for ( var i = 0, l = json.length; i < l; i ++ ) {

				var data = json[ i ];

				if ( data.image === undefined ) {

					console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid );

				}

				if ( images[ data.image ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined image', data.image );

				}

				var texture = new Texture( images[ data.image ] );
				texture.needsUpdate = true;

				texture.uuid = data.uuid;

				if ( data.name !== undefined ) texture.name = data.name;

				if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );

				if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );
				if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );
				if ( data.wrap !== undefined ) {

					texture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );
					texture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );

				}

				if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );
				if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );
				if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;

				if ( data.flipY !== undefined ) texture.flipY = data.flipY;

				textures[ data.uuid ] = texture;

			}

		}

		return textures;

	},

	parseObject: function () {

		var matrix = new Matrix4();

		return function parseObject( data, geometries, materials ) {

			var object;

			function getGeometry( name ) {

				if ( geometries[ name ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined geometry', name );

				}

				return geometries[ name ];

			}

			function getMaterial( name ) {

				if ( name === undefined ) return undefined;

				if ( materials[ name ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined material', name );

				}

				return materials[ name ];

			}

			switch ( data.type ) {

				case 'Scene':

					object = new Scene();

					if ( data.background !== undefined ) {

						if ( Number.isInteger( data.background ) ) {

							object.background = new Color( data.background );

						}

					}

					if ( data.fog !== undefined ) {

						if ( data.fog.type === 'Fog' ) {

							object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );

						} else if ( data.fog.type === 'FogExp2' ) {

							object.fog = new FogExp2( data.fog.color, data.fog.density );

						}

					}

					break;

				case 'PerspectiveCamera':

					object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );

					if ( data.focus !== undefined ) object.focus = data.focus;
					if ( data.zoom !== undefined ) object.zoom = data.zoom;
					if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;
					if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;
					if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );

					break;

				case 'OrthographicCamera':

					object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );

					break;

				case 'AmbientLight':

					object = new AmbientLight( data.color, data.intensity );

					break;

				case 'DirectionalLight':

					object = new DirectionalLight( data.color, data.intensity );

					break;

				case 'PointLight':

					object = new PointLight( data.color, data.intensity, data.distance, data.decay );

					break;

				case 'RectAreaLight':

					object = new RectAreaLight( data.color, data.intensity, data.width, data.height );

					break;

				case 'SpotLight':

					object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );

					break;

				case 'HemisphereLight':

					object = new HemisphereLight( data.color, data.groundColor, data.intensity );

					break;

				case 'SkinnedMesh':

					console.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );

				case 'Mesh':

					var geometry = getGeometry( data.geometry );
					var material = getMaterial( data.material );

					if ( geometry.bones && geometry.bones.length > 0 ) {

						object = new SkinnedMesh( geometry, material );

					} else {

						object = new Mesh( geometry, material );

					}

					break;

				case 'LOD':

					object = new LOD();

					break;

				case 'Line':

					object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );

					break;

				case 'LineLoop':

					object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'LineSegments':

					object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'PointCloud':
				case 'Points':

					object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'Sprite':

					object = new Sprite( getMaterial( data.material ) );

					break;

				case 'Group':

					object = new Group();

					break;

				default:

					object = new Object3D();

			}

			object.uuid = data.uuid;

			if ( data.name !== undefined ) object.name = data.name;
			if ( data.matrix !== undefined ) {

				matrix.fromArray( data.matrix );
				matrix.decompose( object.position, object.quaternion, object.scale );

			} else {

				if ( data.position !== undefined ) object.position.fromArray( data.position );
				if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );
				if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );
				if ( data.scale !== undefined ) object.scale.fromArray( data.scale );

			}

			if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;
			if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;

			if ( data.shadow ) {

				if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;
				if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;
				if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );
				if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );

			}

			if ( data.visible !== undefined ) object.visible = data.visible;
			if ( data.userData !== undefined ) object.userData = data.userData;

			if ( data.children !== undefined ) {

				for ( var child in data.children ) {

					object.add( this.parseObject( data.children[ child ], geometries, materials ) );

				}

			}

			if ( data.type === 'LOD' ) {

				var levels = data.levels;

				for ( var l = 0; l < levels.length; l ++ ) {

					var level = levels[ l ];
					var child = object.getObjectByProperty( 'uuid', level.object );

					if ( child !== undefined ) {

						object.addLevel( child, level.distance );

					}

				}

			}

			return object;

		};

	}()

} );

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Bezier Curves formulas obtained from
 * http://en.wikipedia.org/wiki/Bézier_curve
 */

function CatmullRom( t, p0, p1, p2, p3 ) {

	var v0 = ( p2 - p0 ) * 0.5;
	var v1 = ( p3 - p1 ) * 0.5;
	var t2 = t * t;
	var t3 = t * t2;
	return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;

}

//

function QuadraticBezierP0( t, p ) {

	var k = 1 - t;
	return k * k * p;

}

function QuadraticBezierP1( t, p ) {

	return 2 * ( 1 - t ) * t * p;

}

function QuadraticBezierP2( t, p ) {

	return t * t * p;

}

function QuadraticBezier( t, p0, p1, p2 ) {

	return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +
		QuadraticBezierP2( t, p2 );

}

//

function CubicBezierP0( t, p ) {

	var k = 1 - t;
	return k * k * k * p;

}

function CubicBezierP1( t, p ) {

	var k = 1 - t;
	return 3 * k * k * t * p;

}

function CubicBezierP2( t, p ) {

	return 3 * ( 1 - t ) * t * t * p;

}

function CubicBezierP3( t, p ) {

	return t * t * t * p;

}

function CubicBezier( t, p0, p1, p2, p3 ) {

	return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +
		CubicBezierP3( t, p3 );

}

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Extensible curve object
 *
 * Some common of curve methods:
 * .getPoint(t), getTangent(t)
 * .getPointAt(u), getTangentAt(u)
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/

/**************************************************************
 *	Abstract Curve base class
 **************************************************************/

function Curve() {

	this.arcLengthDivisions = 200;

}

Object.assign( Curve.prototype, {

	// Virtual base class method to overwrite and implement in subclasses
	//	- t [0 .. 1]

	getPoint: function () {

		console.warn( 'THREE.Curve: .getPoint() not implemented.' );
		return null;

	},

	// Get point at relative position in curve according to arc length
	// - u [0 .. 1]

	getPointAt: function ( u ) {

		var t = this.getUtoTmapping( u );
		return this.getPoint( t );

	},

	// Get sequence of points using getPoint( t )

	getPoints: function ( divisions ) {

		if ( divisions === undefined ) divisions = 5;

		var points = [];

		for ( var d = 0; d <= divisions; d ++ ) {

			points.push( this.getPoint( d / divisions ) );

		}

		return points;

	},

	// Get sequence of points using getPointAt( u )

	getSpacedPoints: function ( divisions ) {

		if ( divisions === undefined ) divisions = 5;

		var points = [];

		for ( var d = 0; d <= divisions; d ++ ) {

			points.push( this.getPointAt( d / divisions ) );

		}

		return points;

	},

	// Get total curve arc length

	getLength: function () {

		var lengths = this.getLengths();
		return lengths[ lengths.length - 1 ];

	},

	// Get list of cumulative segment lengths

	getLengths: function ( divisions ) {

		if ( divisions === undefined ) divisions = this.arcLengthDivisions;

		if ( this.cacheArcLengths &&
			( this.cacheArcLengths.length === divisions + 1 ) &&
			! this.needsUpdate ) {

			return this.cacheArcLengths;

		}

		this.needsUpdate = false;

		var cache = [];
		var current, last = this.getPoint( 0 );
		var p, sum = 0;

		cache.push( 0 );

		for ( p = 1; p <= divisions; p ++ ) {

			current = this.getPoint( p / divisions );
			sum += current.distanceTo( last );
			cache.push( sum );
			last = current;

		}

		this.cacheArcLengths = cache;

		return cache; // { sums: cache, sum: sum }; Sum is in the last element.

	},

	updateArcLengths: function () {

		this.needsUpdate = true;
		this.getLengths();

	},

	// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant

	getUtoTmapping: function ( u, distance ) {

		var arcLengths = this.getLengths();

		var i = 0, il = arcLengths.length;

		var targetArcLength; // The targeted u distance value to get

		if ( distance ) {

			targetArcLength = distance;

		} else {

			targetArcLength = u * arcLengths[ il - 1 ];

		}

		// binary search for the index with largest value smaller than target u distance

		var low = 0, high = il - 1, comparison;

		while ( low <= high ) {

			i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats

			comparison = arcLengths[ i ] - targetArcLength;

			if ( comparison < 0 ) {

				low = i + 1;

			} else if ( comparison > 0 ) {

				high = i - 1;

			} else {

				high = i;
				break;

				// DONE

			}

		}

		i = high;

		if ( arcLengths[ i ] === targetArcLength ) {

			return i / ( il - 1 );

		}

		// we could get finer grain at lengths, or use simple interpolation between two points

		var lengthBefore = arcLengths[ i ];
		var lengthAfter = arcLengths[ i + 1 ];

		var segmentLength = lengthAfter - lengthBefore;

		// determine where we are between the 'before' and 'after' points

		var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;

		// add that fractional amount to t

		var t = ( i + segmentFraction ) / ( il - 1 );

		return t;

	},

	// Returns a unit vector tangent at t
	// In case any sub curve does not implement its tangent derivation,
	// 2 points a small delta apart will be used to find its gradient
	// which seems to give a reasonable approximation

	getTangent: function ( t ) {

		var delta = 0.0001;
		var t1 = t - delta;
		var t2 = t + delta;

		// Capping in case of danger

		if ( t1 < 0 ) t1 = 0;
		if ( t2 > 1 ) t2 = 1;

		var pt1 = this.getPoint( t1 );
		var pt2 = this.getPoint( t2 );

		var vec = pt2.clone().sub( pt1 );
		return vec.normalize();

	},

	getTangentAt: function ( u ) {

		var t = this.getUtoTmapping( u );
		return this.getTangent( t );

	},

	computeFrenetFrames: function ( segments, closed ) {

		// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf

		var normal = new Vector3();

		var tangents = [];
		var normals = [];
		var binormals = [];

		var vec = new Vector3();
		var mat = new Matrix4();

		var i, u, theta;

		// compute the tangent vectors for each segment on the curve

		for ( i = 0; i <= segments; i ++ ) {

			u = i / segments;

			tangents[ i ] = this.getTangentAt( u );
			tangents[ i ].normalize();

		}

		// select an initial normal vector perpendicular to the first tangent vector,
		// and in the direction of the minimum tangent xyz component

		normals[ 0 ] = new Vector3();
		binormals[ 0 ] = new Vector3();
		var min = Number.MAX_VALUE;
		var tx = Math.abs( tangents[ 0 ].x );
		var ty = Math.abs( tangents[ 0 ].y );
		var tz = Math.abs( tangents[ 0 ].z );

		if ( tx <= min ) {

			min = tx;
			normal.set( 1, 0, 0 );

		}

		if ( ty <= min ) {

			min = ty;
			normal.set( 0, 1, 0 );

		}

		if ( tz <= min ) {

			normal.set( 0, 0, 1 );

		}

		vec.crossVectors( tangents[ 0 ], normal ).normalize();

		normals[ 0 ].crossVectors( tangents[ 0 ], vec );
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );


		// compute the slowly-varying normal and binormal vectors for each segment on the curve

		for ( i = 1; i <= segments; i ++ ) {

			normals[ i ] = normals[ i - 1 ].clone();

			binormals[ i ] = binormals[ i - 1 ].clone();

			vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );

			if ( vec.length() > Number.EPSILON ) {

				vec.normalize();

				theta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors

				normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );

			}

			binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

		}

		// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same

		if ( closed === true ) {

			theta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );
			theta /= segments;

			if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {

				theta = - theta;

			}

			for ( i = 1; i <= segments; i ++ ) {

				// twist a little...
				normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
				binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

			}

		}

		return {
			tangents: tangents,
			normals: normals,
			binormals: binormals
		};

	}

} );

function LineCurve( v1, v2 ) {

	Curve.call( this );

	this.v1 = v1;
	this.v2 = v2;

}

LineCurve.prototype = Object.create( Curve.prototype );
LineCurve.prototype.constructor = LineCurve;

LineCurve.prototype.isLineCurve = true;

LineCurve.prototype.getPoint = function ( t ) {

	if ( t === 1 ) {

		return this.v2.clone();

	}

	var point = this.v2.clone().sub( this.v1 );
	point.multiplyScalar( t ).add( this.v1 );

	return point;

};

// Line curve is linear, so we can overwrite default getPointAt

LineCurve.prototype.getPointAt = function ( u ) {

	return this.getPoint( u );

};

LineCurve.prototype.getTangent = function ( t ) {

	var tangent = this.v2.clone().sub( this.v1 );

	return tangent.normalize();

};

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 **/

/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/

function CurvePath() {

	Curve.call( this );

	this.curves = [];

	this.autoClose = false; // Automatically closes the path

}

CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {

	constructor: CurvePath,

	add: function ( curve ) {

		this.curves.push( curve );

	},

	closePath: function () {

		// Add a line curve if start and end of lines are not connected
		var startPoint = this.curves[ 0 ].getPoint( 0 );
		var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );

		if ( ! startPoint.equals( endPoint ) ) {

			this.curves.push( new LineCurve( endPoint, startPoint ) );

		}

	},

	// To get accurate point with reference to
	// entire path distance at time t,
	// following has to be done:

	// 1. Length of each sub path have to be known
	// 2. Locate and identify type of curve
	// 3. Get t for the curve
	// 4. Return curve.getPointAt(t')

	getPoint: function ( t ) {

		var d = t * this.getLength();
		var curveLengths = this.getCurveLengths();
		var i = 0;

		// To think about boundaries points.

		while ( i < curveLengths.length ) {

			if ( curveLengths[ i ] >= d ) {

				var diff = curveLengths[ i ] - d;
				var curve = this.curves[ i ];

				var segmentLength = curve.getLength();
				var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;

				return curve.getPointAt( u );

			}

			i ++;

		}

		return null;

		// loop where sum != 0, sum > d , sum+1 <d

	},

	// We cannot use the default THREE.Curve getPoint() with getLength() because in
	// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
	// getPoint() depends on getLength

	getLength: function () {

		var lens = this.getCurveLengths();
		return lens[ lens.length - 1 ];

	},

	// cacheLengths must be recalculated.
	updateArcLengths: function () {

		this.needsUpdate = true;
		this.cacheLengths = null;
		this.getCurveLengths();

	},

	// Compute lengths and cache them
	// We cannot overwrite getLengths() because UtoT mapping uses it.

	getCurveLengths: function () {

		// We use cache values if curves and cache array are same length

		if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {

			return this.cacheLengths;

		}

		// Get length of sub-curve
		// Push sums into cached array

		var lengths = [], sums = 0;

		for ( var i = 0, l = this.curves.length; i < l; i ++ ) {

			sums += this.curves[ i ].getLength();
			lengths.push( sums );

		}

		this.cacheLengths = lengths;

		return lengths;

	},

	getSpacedPoints: function ( divisions ) {

		if ( divisions === undefined ) divisions = 40;

		var points = [];

		for ( var i = 0; i <= divisions; i ++ ) {

			points.push( this.getPoint( i / divisions ) );

		}

		if ( this.autoClose ) {

			points.push( points[ 0 ] );

		}

		return points;

	},

	getPoints: function ( divisions ) {

		divisions = divisions || 12;

		var points = [], last;

		for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {

			var curve = curves[ i ];
			var resolution = (curve && curve.isEllipseCurve) ? divisions * 2
				: (curve && curve.isLineCurve) ? 1
				: (curve && curve.isSplineCurve) ? divisions * curve.points.length
				: divisions;

			var pts = curve.getPoints( resolution );

			for ( var j = 0; j < pts.length; j++ ) {

				var point = pts[ j ];

				if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates

				points.push( point );
				last = point;

			}

		}

		if ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {

			points.push( points[ 0 ] );

		}

		return points;

	},

	/**************************************************************
	 *	Create Geometries Helpers
	 **************************************************************/

	/// Generate geometry from path points (for Line or Points objects)

	createPointsGeometry: function ( divisions ) {

		var pts = this.getPoints( divisions );
		return this.createGeometry( pts );

	},

	// Generate geometry from equidistant sampling along the path

	createSpacedPointsGeometry: function ( divisions ) {

		var pts = this.getSpacedPoints( divisions );
		return this.createGeometry( pts );

	},

	createGeometry: function ( points ) {

		var geometry = new Geometry();

		for ( var i = 0, l = points.length; i < l; i ++ ) {

			var point = points[ i ];
			geometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );

		}

		return geometry;

	}

} );

function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

	Curve.call( this );

	this.aX = aX;
	this.aY = aY;

	this.xRadius = xRadius;
	this.yRadius = yRadius;

	this.aStartAngle = aStartAngle;
	this.aEndAngle = aEndAngle;

	this.aClockwise = aClockwise;

	this.aRotation = aRotation || 0;

}

EllipseCurve.prototype = Object.create( Curve.prototype );
EllipseCurve.prototype.constructor = EllipseCurve;

EllipseCurve.prototype.isEllipseCurve = true;

EllipseCurve.prototype.getPoint = function ( t ) {

	var twoPi = Math.PI * 2;
	var deltaAngle = this.aEndAngle - this.aStartAngle;
	var samePoints = Math.abs( deltaAngle ) < Number.EPSILON;

	// ensures that deltaAngle is 0 .. 2 PI
	while ( deltaAngle < 0 ) deltaAngle += twoPi;
	while ( deltaAngle > twoPi ) deltaAngle -= twoPi;

	if ( deltaAngle < Number.EPSILON ) {

		if ( samePoints ) {

			deltaAngle = 0;

		} else {

			deltaAngle = twoPi;

		}

	}

	if ( this.aClockwise === true && ! samePoints ) {

		if ( deltaAngle === twoPi ) {

			deltaAngle = - twoPi;

		} else {

			deltaAngle = deltaAngle - twoPi;

		}

	}

	var angle = this.aStartAngle + t * deltaAngle;
	var x = this.aX + this.xRadius * Math.cos( angle );
	var y = this.aY + this.yRadius * Math.sin( angle );

	if ( this.aRotation !== 0 ) {

		var cos = Math.cos( this.aRotation );
		var sin = Math.sin( this.aRotation );

		var tx = x - this.aX;
		var ty = y - this.aY;

		// Rotate the point about the center of the ellipse.
		x = tx * cos - ty * sin + this.aX;
		y = tx * sin + ty * cos + this.aY;

	}

	return new Vector2( x, y );

};

function SplineCurve( points /* array of Vector2 */ ) {

	Curve.call( this );

	this.points = ( points === undefined ) ? [] : points;

}

SplineCurve.prototype = Object.create( Curve.prototype );
SplineCurve.prototype.constructor = SplineCurve;

SplineCurve.prototype.isSplineCurve = true;

SplineCurve.prototype.getPoint = function ( t ) {

	var points = this.points;
	var point = ( points.length - 1 ) * t;

	var intPoint = Math.floor( point );
	var weight = point - intPoint;

	var point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];
	var point1 = points[ intPoint ];
	var point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
	var point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];

	return new Vector2(
		CatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),
		CatmullRom( weight, point0.y, point1.y, point2.y, point3.y )
	);

};

function CubicBezierCurve( v0, v1, v2, v3 ) {

	Curve.call( this );

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;
	this.v3 = v3;

}

CubicBezierCurve.prototype = Object.create( Curve.prototype );
CubicBezierCurve.prototype.constructor = CubicBezierCurve;

CubicBezierCurve.prototype.getPoint = function ( t ) {

	var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

	return new Vector2(
		CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
		CubicBezier( t, v0.y, v1.y, v2.y, v3.y )
	);

};

function QuadraticBezierCurve( v0, v1, v2 ) {

	Curve.call( this );

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;

}

QuadraticBezierCurve.prototype = Object.create( Curve.prototype );
QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;

QuadraticBezierCurve.prototype.getPoint = function ( t ) {

	var v0 = this.v0, v1 = this.v1, v2 = this.v2;

	return new Vector2(
		QuadraticBezier( t, v0.x, v1.x, v2.x ),
		QuadraticBezier( t, v0.y, v1.y, v2.y )
	);

};

var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {

	fromPoints: function ( vectors ) {

		this.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );

		for ( var i = 1, l = vectors.length; i < l; i ++ ) {

			this.lineTo( vectors[ i ].x, vectors[ i ].y );

		}

	},

	moveTo: function ( x, y ) {

		this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?

	},

	lineTo: function ( x, y ) {

		var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );
		this.curves.push( curve );

		this.currentPoint.set( x, y );

	},

	quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {

		var curve = new QuadraticBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCPx, aCPy ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

	},

	bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		var curve = new CubicBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCP1x, aCP1y ),
			new Vector2( aCP2x, aCP2y ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

	},

	splineThru: function ( pts /*Array of Vector*/ ) {

		var npts = [ this.currentPoint.clone() ].concat( pts );

		var curve = new SplineCurve( npts );
		this.curves.push( curve );

		this.currentPoint.copy( pts[ pts.length - 1 ] );

	},

	arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		var x0 = this.currentPoint.x;
		var y0 = this.currentPoint.y;

		this.absarc( aX + x0, aY + y0, aRadius,
			aStartAngle, aEndAngle, aClockwise );

	},

	absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

	},

	ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		var x0 = this.currentPoint.x;
		var y0 = this.currentPoint.y;

		this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

	},

	absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

		if ( this.curves.length > 0 ) {

			// if a previous curve is present, attempt to join
			var firstPoint = curve.getPoint( 0 );

			if ( ! firstPoint.equals( this.currentPoint ) ) {

				this.lineTo( firstPoint.x, firstPoint.y );

			}

		}

		this.curves.push( curve );

		var lastPoint = curve.getPoint( 1 );
		this.currentPoint.copy( lastPoint );

	}

} );

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Creates free form 2d path using series of points, lines or curves.
 **/

function Path( points ) {

	CurvePath.call( this );
	this.currentPoint = new Vector2();

	if ( points ) {

		this.fromPoints( points );

	}

}

Path.prototype = PathPrototype;
PathPrototype.constructor = Path;

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Defines a 2d shape plane using paths.
 **/

// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.

function Shape() {

	Path.apply( this, arguments );

	this.holes = [];

}

Shape.prototype = Object.assign( Object.create( PathPrototype ), {

	constructor: Shape,

	getPointsHoles: function ( divisions ) {

		var holesPts = [];

		for ( var i = 0, l = this.holes.length; i < l; i ++ ) {

			holesPts[ i ] = this.holes[ i ].getPoints( divisions );

		}

		return holesPts;

	},

	// Get points of shape and holes (keypoints based on segments parameter)

	extractAllPoints: function ( divisions ) {

		return {

			shape: this.getPoints( divisions ),
			holes: this.getPointsHoles( divisions )

		};

	},

	extractPoints: function ( divisions ) {

		return this.extractAllPoints( divisions );

	}

} );

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
 **/

function ShapePath() {

	this.subPaths = [];
	this.currentPath = null;

}

Object.assign( ShapePath.prototype, {

	moveTo: function ( x, y ) {

		this.currentPath = new Path();
		this.subPaths.push( this.currentPath );
		this.currentPath.moveTo( x, y );

	},

	lineTo: function ( x, y ) {

		this.currentPath.lineTo( x, y );

	},

	quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {

		this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );

	},

	bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );

	},

	splineThru: function ( pts ) {

		this.currentPath.splineThru( pts );

	},

	toShapes: function ( isCCW, noHoles ) {

		function toShapesNoHoles( inSubpaths ) {

			var shapes = [];

			for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {

				var tmpPath = inSubpaths[ i ];

				var tmpShape = new Shape();
				tmpShape.curves = tmpPath.curves;

				shapes.push( tmpShape );

			}

			return shapes;

		}

		function isPointInsidePolygon( inPt, inPolygon ) {

			var polyLen = inPolygon.length;

			// inPt on polygon contour => immediate success    or
			// toggling of inside/outside at every single! intersection point of an edge
			//  with the horizontal line through inPt, left of inPt
			//  not counting lowerY endpoints of edges and whole edges on that line
			var inside = false;
			for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {

				var edgeLowPt  = inPolygon[ p ];
				var edgeHighPt = inPolygon[ q ];

				var edgeDx = edgeHighPt.x - edgeLowPt.x;
				var edgeDy = edgeHighPt.y - edgeLowPt.y;

				if ( Math.abs( edgeDy ) > Number.EPSILON ) {

					// not parallel
					if ( edgeDy < 0 ) {

						edgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;
						edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;

					}
					if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) 		continue;

					if ( inPt.y === edgeLowPt.y ) {

						if ( inPt.x === edgeLowPt.x )		return	true;		// inPt is on contour ?
						// continue;				// no intersection or edgeLowPt => doesn't count !!!

					} else {

						var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );
						if ( perpEdge === 0 )				return	true;		// inPt is on contour ?
						if ( perpEdge < 0 ) 				continue;
						inside = ! inside;		// true intersection left of inPt

					}

				} else {

					// parallel or collinear
					if ( inPt.y !== edgeLowPt.y ) 		continue;			// parallel
					// edge lies on the same horizontal line as inPt
					if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||
						 ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )		return	true;	// inPt: Point on contour !
					// continue;

				}

			}

			return	inside;

		}

		var isClockWise = ShapeUtils.isClockWise;

		var subPaths = this.subPaths;
		if ( subPaths.length === 0 ) return [];

		if ( noHoles === true )	return	toShapesNoHoles( subPaths );


		var solid, tmpPath, tmpShape, shapes = [];

		if ( subPaths.length === 1 ) {

			tmpPath = subPaths[ 0 ];
			tmpShape = new Shape();
			tmpShape.curves = tmpPath.curves;
			shapes.push( tmpShape );
			return shapes;

		}

		var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );
		holesFirst = isCCW ? ! holesFirst : holesFirst;

		// console.log("Holes first", holesFirst);

		var betterShapeHoles = [];
		var newShapes = [];
		var newShapeHoles = [];
		var mainIdx = 0;
		var tmpPoints;

		newShapes[ mainIdx ] = undefined;
		newShapeHoles[ mainIdx ] = [];

		for ( var i = 0, l = subPaths.length; i < l; i ++ ) {

			tmpPath = subPaths[ i ];
			tmpPoints = tmpPath.getPoints();
			solid = isClockWise( tmpPoints );
			solid = isCCW ? ! solid : solid;

			if ( solid ) {

				if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )	mainIdx ++;

				newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };
				newShapes[ mainIdx ].s.curves = tmpPath.curves;

				if ( holesFirst )	mainIdx ++;
				newShapeHoles[ mainIdx ] = [];

				//console.log('cw', i);

			} else {

				newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );

				//console.log('ccw', i);

			}

		}

		// only Holes? -> probably all Shapes with wrong orientation
		if ( ! newShapes[ 0 ] )	return	toShapesNoHoles( subPaths );


		if ( newShapes.length > 1 ) {

			var ambiguous = false;
			var toChange = [];

			for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				betterShapeHoles[ sIdx ] = [];

			}

			for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				var sho = newShapeHoles[ sIdx ];

				for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {

					var ho = sho[ hIdx ];
					var hole_unassigned = true;

					for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {

						if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {

							if ( sIdx !== s2Idx )	toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );
							if ( hole_unassigned ) {

								hole_unassigned = false;
								betterShapeHoles[ s2Idx ].push( ho );

							} else {

								ambiguous = true;

							}

						}

					}
					if ( hole_unassigned ) {

						betterShapeHoles[ sIdx ].push( ho );

					}

				}

			}
			// console.log("ambiguous: ", ambiguous);
			if ( toChange.length > 0 ) {

				// console.log("to change: ", toChange);
				if ( ! ambiguous )	newShapeHoles = betterShapeHoles;

			}

		}

		var tmpHoles;

		for ( var i = 0, il = newShapes.length; i < il; i ++ ) {

			tmpShape = newShapes[ i ].s;
			shapes.push( tmpShape );
			tmpHoles = newShapeHoles[ i ];

			for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {

				tmpShape.holes.push( tmpHoles[ j ].h );

			}

		}

		//console.log("shape", shapes);

		return shapes;

	}

} );

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author mrdoob / http://mrdoob.com/
 */

function Font( data ) {

	this.data = data;

}

Object.assign( Font.prototype, {

	isFont: true,

	generateShapes: function ( text, size, divisions ) {

		function createPaths( text ) {

			var chars = String( text ).split( '' );
			var scale = size / data.resolution;
			var line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;

			var offsetX = 0, offsetY = 0;

			var paths = [];

			for ( var i = 0; i < chars.length; i ++ ) {

				var char = chars[ i ];

				if ( char === '\n' ) {

					offsetX = 0;
					offsetY -= line_height;

				} else {

					var ret = createPath( char, scale, offsetX, offsetY );
					offsetX += ret.offsetX;
					paths.push( ret.path );

				}

			}

			return paths;

		}

		function createPath( c, scale, offsetX, offsetY ) {

			var glyph = data.glyphs[ c ] || data.glyphs[ '?' ];

			if ( ! glyph ) return;

			var path = new ShapePath();

			var pts = [];
			var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;

			if ( glyph.o ) {

				var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );

				for ( var i = 0, l = outline.length; i < l; ) {

					var action = outline[ i ++ ];

					switch ( action ) {

						case 'm': // moveTo

							x = outline[ i ++ ] * scale + offsetX;
							y = outline[ i ++ ] * scale + offsetY;

							path.moveTo( x, y );

							break;

						case 'l': // lineTo

							x = outline[ i ++ ] * scale + offsetX;
							y = outline[ i ++ ] * scale + offsetY;

							path.lineTo( x, y );

							break;

						case 'q': // quadraticCurveTo

							cpx  = outline[ i ++ ] * scale + offsetX;
							cpy  = outline[ i ++ ] * scale + offsetY;
							cpx1 = outline[ i ++ ] * scale + offsetX;
							cpy1 = outline[ i ++ ] * scale + offsetY;

							path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );

							laste = pts[ pts.length - 1 ];

							if ( laste ) {

								cpx0 = laste.x;
								cpy0 = laste.y;

								for ( var i2 = 1; i2 <= divisions; i2 ++ ) {

									var t = i2 / divisions;
									QuadraticBezier( t, cpx0, cpx1, cpx );
									QuadraticBezier( t, cpy0, cpy1, cpy );

								}

							}

							break;

						case 'b': // bezierCurveTo

							cpx  = outline[ i ++ ] * scale + offsetX;
							cpy  = outline[ i ++ ] * scale + offsetY;
							cpx1 = outline[ i ++ ] * scale + offsetX;
							cpy1 = outline[ i ++ ] * scale + offsetY;
							cpx2 = outline[ i ++ ] * scale + offsetX;
							cpy2 = outline[ i ++ ] * scale + offsetY;

							path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );

							laste = pts[ pts.length - 1 ];

							if ( laste ) {

								cpx0 = laste.x;
								cpy0 = laste.y;

								for ( var i2 = 1; i2 <= divisions; i2 ++ ) {

									var t = i2 / divisions;
									CubicBezier( t, cpx0, cpx1, cpx2, cpx );
									CubicBezier( t, cpy0, cpy1, cpy2, cpy );

								}

							}

							break;

					}

				}

			}

			return { offsetX: glyph.ha * scale, path: path };

		}

		//

		if ( size === undefined ) size = 100;
		if ( divisions === undefined ) divisions = 4;

		var data = this.data;

		var paths = createPaths( text );
		var shapes = [];

		for ( var p = 0, pl = paths.length; p < pl; p ++ ) {

			Array.prototype.push.apply( shapes, paths[ p ].toShapes() );

		}

		return shapes;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function FontLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( FontLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var scope = this;

		var loader = new FileLoader( this.manager );
		loader.load( url, function ( text ) {

			var json;

			try {

				json = JSON.parse( text );

			} catch ( e ) {

				console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );
				json = JSON.parse( text.substring( 65, text.length - 2 ) );

			}

			var font = scope.parse( json );

			if ( onLoad ) onLoad( font );

		}, onProgress, onError );

	},

	parse: function ( json ) {

		return new Font( json );

	}

} );

var context;

var AudioContext = {

	getContext: function () {

		if ( context === undefined ) {

			context = new ( window.AudioContext || window.webkitAudioContext )();

		}

		return context;

	},

	setContext: function ( value ) {

		context = value;

	}

};

/**
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */

function AudioLoader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

}

Object.assign( AudioLoader.prototype, {

	load: function ( url, onLoad, onProgress, onError ) {

		var loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );
		loader.load( url, function ( buffer ) {

			var context = AudioContext.getContext();

			context.decodeAudioData( buffer, function ( audioBuffer ) {

				onLoad( audioBuffer );

			} );

		}, onProgress, onError );

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function StereoCamera() {

	this.type = 'StereoCamera';

	this.aspect = 1;

	this.eyeSep = 0.064;

	this.cameraL = new PerspectiveCamera();
	this.cameraL.layers.enable( 1 );
	this.cameraL.matrixAutoUpdate = false;

	this.cameraR = new PerspectiveCamera();
	this.cameraR.layers.enable( 2 );
	this.cameraR.matrixAutoUpdate = false;

}

Object.assign( StereoCamera.prototype, {

	update: ( function () {

		var instance, focus, fov, aspect, near, far, zoom, eyeSep;

		var eyeRight = new Matrix4();
		var eyeLeft = new Matrix4();

		return function update( camera ) {

			var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||
												aspect !== camera.aspect * this.aspect || near !== camera.near ||
												far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;

			if ( needsUpdate ) {

				instance = this;
				focus = camera.focus;
				fov = camera.fov;
				aspect = camera.aspect * this.aspect;
				near = camera.near;
				far = camera.far;
				zoom = camera.zoom;

				// Off-axis stereoscopic effect based on
				// http://paulbourke.net/stereographics/stereorender/

				var projectionMatrix = camera.projectionMatrix.clone();
				eyeSep = this.eyeSep / 2;
				var eyeSepOnProjection = eyeSep * near / focus;
				var ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;
				var xmin, xmax;

				// translate xOffset

				eyeLeft.elements[ 12 ] = - eyeSep;
				eyeRight.elements[ 12 ] = eyeSep;

				// for left eye

				xmin = - ymax * aspect + eyeSepOnProjection;
				xmax = ymax * aspect + eyeSepOnProjection;

				projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );
				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

				this.cameraL.projectionMatrix.copy( projectionMatrix );

				// for right eye

				xmin = - ymax * aspect - eyeSepOnProjection;
				xmax = ymax * aspect - eyeSepOnProjection;

				projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );
				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

				this.cameraR.projectionMatrix.copy( projectionMatrix );

			}

			this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );
			this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );

		};

	} )()

} );

/**
 * Camera for rendering cube maps
 *	- renders scene into axis-aligned cube
 *
 * @author alteredq / http://alteredqualia.com/
 */

function CubeCamera( near, far, cubeResolution ) {

	Object3D.call( this );

	this.type = 'CubeCamera';

	var fov = 90, aspect = 1;

	var cameraPX = new PerspectiveCamera( fov, aspect, near, far );
	cameraPX.up.set( 0, - 1, 0 );
	cameraPX.lookAt( new Vector3( 1, 0, 0 ) );
	this.add( cameraPX );

	var cameraNX = new PerspectiveCamera( fov, aspect, near, far );
	cameraNX.up.set( 0, - 1, 0 );
	cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );
	this.add( cameraNX );

	var cameraPY = new PerspectiveCamera( fov, aspect, near, far );
	cameraPY.up.set( 0, 0, 1 );
	cameraPY.lookAt( new Vector3( 0, 1, 0 ) );
	this.add( cameraPY );

	var cameraNY = new PerspectiveCamera( fov, aspect, near, far );
	cameraNY.up.set( 0, 0, - 1 );
	cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );
	this.add( cameraNY );

	var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );
	cameraPZ.up.set( 0, - 1, 0 );
	cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );
	this.add( cameraPZ );

	var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );
	cameraNZ.up.set( 0, - 1, 0 );
	cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );
	this.add( cameraNZ );

	var options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };

	this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );
	this.renderTarget.texture.name = "CubeCamera";

	this.updateCubeMap = function ( renderer, scene ) {

		if ( this.parent === null ) this.updateMatrixWorld();

		var renderTarget = this.renderTarget;
		var generateMipmaps = renderTarget.texture.generateMipmaps;

		renderTarget.texture.generateMipmaps = false;

		renderTarget.activeCubeFace = 0;
		renderer.render( scene, cameraPX, renderTarget );

		renderTarget.activeCubeFace = 1;
		renderer.render( scene, cameraNX, renderTarget );

		renderTarget.activeCubeFace = 2;
		renderer.render( scene, cameraPY, renderTarget );

		renderTarget.activeCubeFace = 3;
		renderer.render( scene, cameraNY, renderTarget );

		renderTarget.activeCubeFace = 4;
		renderer.render( scene, cameraPZ, renderTarget );

		renderTarget.texture.generateMipmaps = generateMipmaps;

		renderTarget.activeCubeFace = 5;
		renderer.render( scene, cameraNZ, renderTarget );

		renderer.setRenderTarget( null );

	};

}

CubeCamera.prototype = Object.create( Object3D.prototype );
CubeCamera.prototype.constructor = CubeCamera;

/**
 * @author mrdoob / http://mrdoob.com/
 */

function ArrayCamera( array ) {

	PerspectiveCamera.call( this );

	this.enabled = false;
	this.cameras = array || [];

}

ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {

	constructor: ArrayCamera,

	isArrayCamera: true

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function AudioListener() {

	Object3D.call( this );

	this.type = 'AudioListener';

	this.context = AudioContext.getContext();

	this.gain = this.context.createGain();
	this.gain.connect( this.context.destination );

	this.filter = null;

}

AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: AudioListener,

	getInput: function () {

		return this.gain;

	},

	removeFilter: function ( ) {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );
			this.gain.connect( this.context.destination );
			this.filter = null;

		}

	},

	getFilter: function () {

		return this.filter;

	},

	setFilter: function ( value ) {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );

		} else {

			this.gain.disconnect( this.context.destination );

		}

		this.filter = value;
		this.gain.connect( this.filter );
		this.filter.connect( this.context.destination );

	},

	getMasterVolume: function () {

		return this.gain.gain.value;

	},

	setMasterVolume: function ( value ) {

		this.gain.gain.value = value;

	},

	updateMatrixWorld: ( function () {

		var position = new Vector3();
		var quaternion = new Quaternion();
		var scale = new Vector3();

		var orientation = new Vector3();

		return function updateMatrixWorld( force ) {

			Object3D.prototype.updateMatrixWorld.call( this, force );

			var listener = this.context.listener;
			var up = this.up;

			this.matrixWorld.decompose( position, quaternion, scale );

			orientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );

			if ( listener.positionX ) {

				listener.positionX.setValueAtTime( position.x, this.context.currentTime );
				listener.positionY.setValueAtTime( position.y, this.context.currentTime );
				listener.positionZ.setValueAtTime( position.z, this.context.currentTime );
				listener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );
				listener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );
				listener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );
				listener.upX.setValueAtTime( up.x, this.context.currentTime );
				listener.upY.setValueAtTime( up.y, this.context.currentTime );
				listener.upZ.setValueAtTime( up.z, this.context.currentTime );

			} else {

				listener.setPosition( position.x, position.y, position.z );
				listener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );

			}

		};

	} )()

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */

function Audio( listener ) {

	Object3D.call( this );

	this.type = 'Audio';

	this.context = listener.context;

	this.gain = this.context.createGain();
	this.gain.connect( listener.getInput() );

	this.autoplay = false;

	this.buffer = null;
	this.loop = false;
	this.startTime = 0;
	this.playbackRate = 1;
	this.isPlaying = false;
	this.hasPlaybackControl = true;
	this.sourceType = 'empty';

	this.filters = [];

}

Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Audio,

	getOutput: function () {

		return this.gain;

	},

	setNodeSource: function ( audioNode ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'audioNode';
		this.source = audioNode;
		this.connect();

		return this;

	},

	setBuffer: function ( audioBuffer ) {

		this.buffer = audioBuffer;
		this.sourceType = 'buffer';

		if ( this.autoplay ) this.play();

		return this;

	},

	play: function () {

		if ( this.isPlaying === true ) {

			console.warn( 'THREE.Audio: Audio is already playing.' );
			return;

		}

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		var source = this.context.createBufferSource();

		source.buffer = this.buffer;
		source.loop = this.loop;
		source.onended = this.onEnded.bind( this );
		source.playbackRate.setValueAtTime( this.playbackRate, this.startTime );
		source.start( 0, this.startTime );

		this.isPlaying = true;

		this.source = source;

		return this.connect();

	},

	pause: function () {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.source.stop();
		this.startTime = this.context.currentTime;
		this.isPlaying = false;

		return this;

	},

	stop: function () {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.source.stop();
		this.startTime = 0;
		this.isPlaying = false;

		return this;

	},

	connect: function () {

		if ( this.filters.length > 0 ) {

			this.source.connect( this.filters[ 0 ] );

			for ( var i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].connect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].connect( this.getOutput() );

		} else {

			this.source.connect( this.getOutput() );

		}

		return this;

	},

	disconnect: function () {

		if ( this.filters.length > 0 ) {

			this.source.disconnect( this.filters[ 0 ] );

			for ( var i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].disconnect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );

		} else {

			this.source.disconnect( this.getOutput() );

		}

		return this;

	},

	getFilters: function () {

		return this.filters;

	},

	setFilters: function ( value ) {

		if ( ! value ) value = [];

		if ( this.isPlaying === true ) {

			this.disconnect();
			this.filters = value;
			this.connect();

		} else {

			this.filters = value;

		}

		return this;

	},

	getFilter: function () {

		return this.getFilters()[ 0 ];

	},

	setFilter: function ( filter ) {

		return this.setFilters( filter ? [ filter ] : [] );

	},

	setPlaybackRate: function ( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.playbackRate = value;

		if ( this.isPlaying === true ) {

			this.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );

		}

		return this;

	},

	getPlaybackRate: function () {

		return this.playbackRate;

	},

	onEnded: function () {

		this.isPlaying = false;

	},

	getLoop: function () {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return false;

		}

		return this.loop;

	},

	setLoop: function ( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.loop = value;

		if ( this.isPlaying === true ) {

			this.source.loop = this.loop;

		}

		return this;

	},

	getVolume: function () {

		return this.gain.gain.value;

	},
	
	setVolume: function ( value ) {

		this.gain.gain.value = value;

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function PositionalAudio( listener ) {

	Audio.call( this, listener );

	this.panner = this.context.createPanner();
	this.panner.connect( this.gain );

}

PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {

	constructor: PositionalAudio,

	getOutput: function () {

		return this.panner;

	},

	getRefDistance: function () {

		return this.panner.refDistance;

	},

	setRefDistance: function ( value ) {

		this.panner.refDistance = value;

	},

	getRolloffFactor: function () {

		return this.panner.rolloffFactor;

	},

	setRolloffFactor: function ( value ) {

		this.panner.rolloffFactor = value;

	},

	getDistanceModel: function () {

		return this.panner.distanceModel;

	},

	setDistanceModel: function ( value ) {

		this.panner.distanceModel = value;

	},

	getMaxDistance: function () {

		return this.panner.maxDistance;

	},

	setMaxDistance: function ( value ) {

		this.panner.maxDistance = value;

	},

	updateMatrixWorld: ( function () {

		var position = new Vector3();

		return function updateMatrixWorld( force ) {

			Object3D.prototype.updateMatrixWorld.call( this, force );

			position.setFromMatrixPosition( this.matrixWorld );

			this.panner.setPosition( position.x, position.y, position.z );

		};

	} )()


} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function AudioAnalyser( audio, fftSize ) {

	this.analyser = audio.context.createAnalyser();
	this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;

	this.data = new Uint8Array( this.analyser.frequencyBinCount );

	audio.getOutput().connect( this.analyser );

}

Object.assign( AudioAnalyser.prototype, {

	getFrequencyData: function () {

		this.analyser.getByteFrequencyData( this.data );

		return this.data;

	},

	getAverageFrequency: function () {

		var value = 0, data = this.getFrequencyData();

		for ( var i = 0; i < data.length; i ++ ) {

			value += data[ i ];

		}

		return value / data.length;

	}

} );

/**
 *
 * Buffered scene graph property that allows weighted accumulation.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function PropertyMixer( binding, typeName, valueSize ) {

	this.binding = binding;
	this.valueSize = valueSize;

	var bufferType = Float64Array,
		mixFunction;

	switch ( typeName ) {

		case 'quaternion':
			mixFunction = this._slerp;
			break;

		case 'string':
		case 'bool':
			bufferType = Array;
			mixFunction = this._select;
			break;

		default:
			mixFunction = this._lerp;

	}

	this.buffer = new bufferType( valueSize * 4 );
	// layout: [ incoming | accu0 | accu1 | orig ]
	//
	// interpolators can use .buffer as their .result
	// the data then goes to 'incoming'
	//
	// 'accu0' and 'accu1' are used frame-interleaved for
	// the cumulative result and are compared to detect
	// changes
	//
	// 'orig' stores the original state of the property

	this._mixBufferRegion = mixFunction;

	this.cumulativeWeight = 0;

	this.useCount = 0;
	this.referenceCount = 0;

}

Object.assign( PropertyMixer.prototype, {

	// accumulate data in the 'incoming' region into 'accu<i>'
	accumulate: function ( accuIndex, weight ) {

		// note: happily accumulating nothing when weight = 0, the caller knows
		// the weight and shouldn't have made the call in the first place

		var buffer = this.buffer,
			stride = this.valueSize,
			offset = accuIndex * stride + stride,

			currentWeight = this.cumulativeWeight;

		if ( currentWeight === 0 ) {

			// accuN := incoming * weight

			for ( var i = 0; i !== stride; ++ i ) {

				buffer[ offset + i ] = buffer[ i ];

			}

			currentWeight = weight;

		} else {

			// accuN := accuN + incoming * weight

			currentWeight += weight;
			var mix = weight / currentWeight;
			this._mixBufferRegion( buffer, offset, 0, mix, stride );

		}

		this.cumulativeWeight = currentWeight;

	},

	// apply the state of 'accu<i>' to the binding when accus differ
	apply: function ( accuIndex ) {

		var stride = this.valueSize,
			buffer = this.buffer,
			offset = accuIndex * stride + stride,

			weight = this.cumulativeWeight,

			binding = this.binding;

		this.cumulativeWeight = 0;

		if ( weight < 1 ) {

			// accuN := accuN + original * ( 1 - cumulativeWeight )

			var originalValueOffset = stride * 3;

			this._mixBufferRegion(
				buffer, offset, originalValueOffset, 1 - weight, stride );

		}

		for ( var i = stride, e = stride + stride; i !== e; ++ i ) {

			if ( buffer[ i ] !== buffer[ i + stride ] ) {

				// value has changed -> update scene graph

				binding.setValue( buffer, offset );
				break;

			}

		}

	},

	// remember the state of the bound property and copy it to both accus
	saveOriginalState: function () {

		var binding = this.binding;

		var buffer = this.buffer,
			stride = this.valueSize,

			originalValueOffset = stride * 3;

		binding.getValue( buffer, originalValueOffset );

		// accu[0..1] := orig -- initially detect changes against the original
		for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {

			buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];

		}

		this.cumulativeWeight = 0;

	},

	// apply the state previously taken via 'saveOriginalState' to the binding
	restoreOriginalState: function () {

		var originalValueOffset = this.valueSize * 3;
		this.binding.setValue( this.buffer, originalValueOffset );

	},


	// mix functions

	_select: function ( buffer, dstOffset, srcOffset, t, stride ) {

		if ( t >= 0.5 ) {

			for ( var i = 0; i !== stride; ++ i ) {

				buffer[ dstOffset + i ] = buffer[ srcOffset + i ];

			}

		}

	},

	_slerp: function ( buffer, dstOffset, srcOffset, t ) {

		Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );

	},

	_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {

		var s = 1 - t;

		for ( var i = 0; i !== stride; ++ i ) {

			var j = dstOffset + i;

			buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;

		}

	}

} );

/**
 *
 * A reference to a real property in the scene graph.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function Composite( targetGroup, path, optionalParsedPath ) {

	var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );

	this._targetGroup = targetGroup;
	this._bindings = targetGroup.subscribe_( path, parsedPath );

}

Object.assign( Composite.prototype, {

	getValue: function ( array, offset ) {

		this.bind(); // bind all binding

		var firstValidIndex = this._targetGroup.nCachedObjects_,
			binding = this._bindings[ firstValidIndex ];

		// and only call .getValue on the first
		if ( binding !== undefined ) binding.getValue( array, offset );

	},

	setValue: function ( array, offset ) {

		var bindings = this._bindings;

		for ( var i = this._targetGroup.nCachedObjects_,
				  n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].setValue( array, offset );

		}

	},

	bind: function () {

		var bindings = this._bindings;

		for ( var i = this._targetGroup.nCachedObjects_,
				  n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].bind();

		}

	},

	unbind: function () {

		var bindings = this._bindings;

		for ( var i = this._targetGroup.nCachedObjects_,
				  n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].unbind();

		}

	}

} );


function PropertyBinding( rootNode, path, parsedPath ) {

	this.path = path;
	this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );

	this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;

	this.rootNode = rootNode;

}

Object.assign( PropertyBinding, {

	Composite: Composite,

	create: function ( root, path, parsedPath ) {

		if ( ! ( root && root.isAnimationObjectGroup ) ) {

			return new PropertyBinding( root, path, parsedPath );

		} else {

			return new PropertyBinding.Composite( root, path, parsedPath );

		}

	},

	parseTrackName: function () {

		// Parent directories, delimited by '/' or ':'. Currently unused, but must
		// be matched to parse the rest of the track name.
		var directoryRe = /((?:[\w-]+[\/:])*)/;

		// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.
		var nodeRe = /([\w-\.]+)?/;

		// Object on target node, and accessor. Name may contain only word
		// characters. Accessor may contain any character except closing bracket.
		var objectRe = /(?:\.([\w-]+)(?:\[(.+)\])?)?/;

		// Property and accessor. May contain only word characters. Accessor may
		// contain any non-bracket characters.
		var propertyRe = /\.([\w-]+)(?:\[(.+)\])?/;

		var trackRe = new RegExp(''
			+ '^'
			+ directoryRe.source
			+ nodeRe.source
			+ objectRe.source
			+ propertyRe.source
			+ '$'
		);

		var supportedObjectNames = [ 'material', 'materials', 'bones' ];

		return function ( trackName ) {

				var matches = trackRe.exec( trackName );

				if ( ! matches ) {

					throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );

				}

				var results = {
					// directoryName: matches[ 1 ], // (tschw) currently unused
					nodeName: matches[ 2 ],
					objectName: matches[ 3 ],
					objectIndex: matches[ 4 ],
					propertyName: matches[ 5 ],     // required
					propertyIndex: matches[ 6 ]
				};

				var lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );

				if ( lastDot !== undefined && lastDot !== -1 ) {

					var objectName = results.nodeName.substring( lastDot + 1 );

					// Object names must be checked against a whitelist. Otherwise, there
					// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
					// 'bar' could be the objectName, or part of a nodeName (which can
					// include '.' characters).
					if ( supportedObjectNames.indexOf( objectName ) !== -1 ) {

						results.nodeName = results.nodeName.substring( 0, lastDot );
						results.objectName = objectName;

					}

				}

				if ( results.propertyName === null || results.propertyName.length === 0 ) {

					throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );

				}

				return results;

			};

	}(),

	findNode: function ( root, nodeName ) {

		if ( ! nodeName || nodeName === "" || nodeName === "root" || nodeName === "." || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {

			return root;

		}

		// search into skeleton bones.
		if ( root.skeleton ) {

			var searchSkeleton = function ( skeleton ) {

				for ( var i = 0; i < skeleton.bones.length; i ++ ) {

					var bone = skeleton.bones[ i ];

					if ( bone.name === nodeName ) {

						return bone;

					}

				}

				return null;

			};

			var bone = searchSkeleton( root.skeleton );

			if ( bone ) {

				return bone;

			}

		}

		// search into node subtree.
		if ( root.children ) {

			var searchNodeSubtree = function ( children ) {

				for ( var i = 0; i < children.length; i ++ ) {

					var childNode = children[ i ];

					if ( childNode.name === nodeName || childNode.uuid === nodeName ) {

						return childNode;

					}

					var result = searchNodeSubtree( childNode.children );

					if ( result ) return result;

				}

				return null;

			};

			var subTreeNode = searchNodeSubtree( root.children );

			if ( subTreeNode ) {

				return subTreeNode;

			}

		}

		return null;

	}

} );

Object.assign( PropertyBinding.prototype, { // prototype, continued

	// these are used to "bind" a nonexistent property
	_getValue_unavailable: function () {},
	_setValue_unavailable: function () {},

	BindingType: {
		Direct: 0,
		EntireArray: 1,
		ArrayElement: 2,
		HasFromToArray: 3
	},

	Versioning: {
		None: 0,
		NeedsUpdate: 1,
		MatrixWorldNeedsUpdate: 2
	},

	GetterByBindingType: [

		function getValue_direct( buffer, offset ) {

			buffer[ offset ] = this.node[ this.propertyName ];

		},

		function getValue_array( buffer, offset ) {

			var source = this.resolvedProperty;

			for ( var i = 0, n = source.length; i !== n; ++ i ) {

				buffer[ offset ++ ] = source[ i ];

			}

		},

		function getValue_arrayElement( buffer, offset ) {

			buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];

		},

		function getValue_toArray( buffer, offset ) {

			this.resolvedProperty.toArray( buffer, offset );

		}

	],

	SetterByBindingTypeAndVersioning: [

		[
			// Direct

			function setValue_direct( buffer, offset ) {

				this.node[ this.propertyName ] = buffer[ offset ];

			},

			function setValue_direct_setNeedsUpdate( buffer, offset ) {

				this.node[ this.propertyName ] = buffer[ offset ];
				this.targetObject.needsUpdate = true;

			},

			function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.node[ this.propertyName ] = buffer[ offset ];
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// EntireArray

			function setValue_array( buffer, offset ) {

				var dest = this.resolvedProperty;

				for ( var i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

			},

			function setValue_array_setNeedsUpdate( buffer, offset ) {

				var dest = this.resolvedProperty;

				for ( var i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

				this.targetObject.needsUpdate = true;

			},

			function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {

				var dest = this.resolvedProperty;

				for ( var i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// ArrayElement

			function setValue_arrayElement( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];

			},

			function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
				this.targetObject.needsUpdate = true;

			},

			function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// HasToFromArray

			function setValue_fromArray( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );

			},

			function setValue_fromArray_setNeedsUpdate( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );
				this.targetObject.needsUpdate = true;

			},

			function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		]

	],

	getValue: function getValue_unbound( targetArray, offset ) {

		this.bind();
		this.getValue( targetArray, offset );

		// Note: This class uses a State pattern on a per-method basis:
		// 'bind' sets 'this.getValue' / 'setValue' and shadows the
		// prototype version of these methods with one that represents
		// the bound state. When the property is not found, the methods
		// become no-ops.

	},

	setValue: function getValue_unbound( sourceArray, offset ) {

		this.bind();
		this.setValue( sourceArray, offset );

	},

	// create getter / setter pair for a property in the scene graph
	bind: function () {

		var targetObject = this.node,
			parsedPath = this.parsedPath,

			objectName = parsedPath.objectName,
			propertyName = parsedPath.propertyName,
			propertyIndex = parsedPath.propertyIndex;

		if ( ! targetObject ) {

			targetObject = PropertyBinding.findNode(
					this.rootNode, parsedPath.nodeName ) || this.rootNode;

			this.node = targetObject;

		}

		// set fail state so we can just 'return' on error
		this.getValue = this._getValue_unavailable;
		this.setValue = this._setValue_unavailable;

		// ensure there is a value node
		if ( ! targetObject ) {

			console.error( "  trying to update node for track: " + this.path + " but it wasn't found." );
			return;

		}

		if ( objectName ) {

			var objectIndex = parsedPath.objectIndex;

			// special cases were we need to reach deeper into the hierarchy to get the face materials....
			switch ( objectName ) {

				case 'materials':

					if ( ! targetObject.material ) {

						console.error( '  can not bind to material as node does not have a material', this );
						return;

					}

					if ( ! targetObject.material.materials ) {

						console.error( '  can not bind to material.materials as node.material does not have a materials array', this );
						return;

					}

					targetObject = targetObject.material.materials;

					break;

				case 'bones':

					if ( ! targetObject.skeleton ) {

						console.error( '  can not bind to bones as node does not have a skeleton', this );
						return;

					}

					// potential future optimization: skip this if propertyIndex is already an integer
					// and convert the integer string to a true integer.

					targetObject = targetObject.skeleton.bones;

					// support resolving morphTarget names into indices.
					for ( var i = 0; i < targetObject.length; i ++ ) {

						if ( targetObject[ i ].name === objectIndex ) {

							objectIndex = i;
							break;

						}

					}

					break;

				default:

					if ( targetObject[ objectName ] === undefined ) {

						console.error( '  can not bind to objectName of node, undefined', this );
						return;

					}

					targetObject = targetObject[ objectName ];

			}


			if ( objectIndex !== undefined ) {

				if ( targetObject[ objectIndex ] === undefined ) {

					console.error( "  trying to bind to objectIndex of objectName, but is undefined:", this, targetObject );
					return;

				}

				targetObject = targetObject[ objectIndex ];

			}

		}

		// resolve property
		var nodeProperty = targetObject[ propertyName ];

		if ( nodeProperty === undefined ) {

			var nodeName = parsedPath.nodeName;

			console.error( "  trying to update property for track: " + nodeName +
				'.' + propertyName + " but it wasn't found.", targetObject );
			return;

		}

		// determine versioning scheme
		var versioning = this.Versioning.None;

		if ( targetObject.needsUpdate !== undefined ) { // material

			versioning = this.Versioning.NeedsUpdate;
			this.targetObject = targetObject;

		} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform

			versioning = this.Versioning.MatrixWorldNeedsUpdate;
			this.targetObject = targetObject;

		}

		// determine how the property gets bound
		var bindingType = this.BindingType.Direct;

		if ( propertyIndex !== undefined ) {

			// access a sub element of the property array (only primitives are supported right now)

			if ( propertyName === "morphTargetInfluences" ) {

				// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.

				// support resolving morphTarget names into indices.
				if ( ! targetObject.geometry ) {

					console.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );
					return;

				}

				if ( ! targetObject.geometry.morphTargets ) {

					console.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );
					return;

				}

				for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {

					if ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {

						propertyIndex = i;
						break;

					}

				}

			}

			bindingType = this.BindingType.ArrayElement;

			this.resolvedProperty = nodeProperty;
			this.propertyIndex = propertyIndex;

		} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {

			// must use copy for Object3D.Euler/Quaternion

			bindingType = this.BindingType.HasFromToArray;

			this.resolvedProperty = nodeProperty;

		} else if ( Array.isArray( nodeProperty ) ) {

			bindingType = this.BindingType.EntireArray;

			this.resolvedProperty = nodeProperty;

		} else {

			this.propertyName = propertyName;

		}

		// select getter / setter
		this.getValue = this.GetterByBindingType[ bindingType ];
		this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];

	},

	unbind: function () {

		this.node = null;

		// back to the prototype version of getValue / setValue
		// note: avoiding to mutate the shape of 'this' via 'delete'
		this.getValue = this._getValue_unbound;
		this.setValue = this._setValue_unbound;

	}

} );

//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign( PropertyBinding.prototype, {

	// initial state of these methods that calls 'bind'
	_getValue_unbound: PropertyBinding.prototype.getValue,
	_setValue_unbound: PropertyBinding.prototype.setValue,

} );

/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 * 	-	Add objects you would otherwise pass as 'root' to the
 * 		constructor or the .clipAction method of AnimationMixer.
 *
 * 	-	Instead pass this object as 'root'.
 *
 * 	-	You can also add and remove objects later when the mixer
 * 		is running.
 *
 * Note:
 *
 *  	Objects of this class appear as one object to the mixer,
 *  	so cache control of the individual objects must be done
 *  	on the group.
 *
 * Limitation:
 *
 * 	- 	The animated properties must be compatible among the
 * 		all objects in the group.
 *
 *  -	A single property can either be controlled through a
 *  	target group or directly, but not both.
 *
 * @author tschw
 */

function AnimationObjectGroup( var_args ) {

	this.uuid = _Math.generateUUID();

	// cached objects followed by the active ones
	this._objects = Array.prototype.slice.call( arguments );

	this.nCachedObjects_ = 0;			// threshold
	// note: read by PropertyBinding.Composite

	var indices = {};
	this._indicesByUUID = indices;		// for bookkeeping

	for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

		indices[ arguments[ i ].uuid ] = i;

	}

	this._paths = [];					// inside: string
	this._parsedPaths = [];				// inside: { we don't care, here }
	this._bindings = []; 				// inside: Array< PropertyBinding >
	this._bindingsIndicesByPath = {}; 	// inside: indices in these arrays

	var scope = this;

	this.stats = {

		objects: {
			get total() { return scope._objects.length; },
			get inUse() { return this.total - scope.nCachedObjects_; }
		},

		get bindingsPerObject() { return scope._bindings.length; }

	};

}

Object.assign( AnimationObjectGroup.prototype, {

	isAnimationObjectGroup: true,

	add: function( var_args ) {

		var objects = this._objects,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_,
			indicesByUUID = this._indicesByUUID,
			paths = this._paths,
			parsedPaths = this._parsedPaths,
			bindings = this._bindings,
			nBindings = bindings.length;

		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

			var object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ],
				knownObject = undefined;

			if ( index === undefined ) {

				// unknown object -> add it to the ACTIVE region

				index = nObjects ++;
				indicesByUUID[ uuid ] = index;
				objects.push( object );

				// accounting is done, now do the same for all bindings

				for ( var j = 0, m = nBindings; j !== m; ++ j ) {

					bindings[ j ].push(
							new PropertyBinding(
								object, paths[ j ], parsedPaths[ j ] ) );

				}

			} else if ( index < nCachedObjects ) {

				knownObject = objects[ index ];

				// move existing object to the ACTIVE region

				var firstActiveIndex = -- nCachedObjects,
					lastCachedObject = objects[ firstActiveIndex ];

				indicesByUUID[ lastCachedObject.uuid ] = index;
				objects[ index ] = lastCachedObject;

				indicesByUUID[ uuid ] = firstActiveIndex;
				objects[ firstActiveIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( var j = 0, m = nBindings; j !== m; ++ j ) {

					var bindingsForPath = bindings[ j ],
						lastCached = bindingsForPath[ firstActiveIndex ],
						binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = lastCached;

					if ( binding === undefined ) {

						// since we do not bother to create new bindings
						// for objects that are cached, the binding may
						// or may not exist

						binding = new PropertyBinding(
								object, paths[ j ], parsedPaths[ j ] );

					}

					bindingsForPath[ firstActiveIndex ] = binding;

				}

			} else if ( objects[ index ] !== knownObject ) {

				console.error( "Different objects with the same UUID " +
						"detected. Clean the caches or recreate your " +
						"infrastructure when reloading scenes..." );

			} // else the object is already where we want it to be

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	},

	remove: function( var_args ) {

		var objects = this._objects,
			nCachedObjects = this.nCachedObjects_,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

			var object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined && index >= nCachedObjects ) {

				// move existing object into the CACHED region

				var lastCachedIndex = nCachedObjects ++,
					firstActiveObject = objects[ lastCachedIndex ];

				indicesByUUID[ firstActiveObject.uuid ] = index;
				objects[ index ] = firstActiveObject;

				indicesByUUID[ uuid ] = lastCachedIndex;
				objects[ lastCachedIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( var j = 0, m = nBindings; j !== m; ++ j ) {

					var bindingsForPath = bindings[ j ],
						firstActive = bindingsForPath[ lastCachedIndex ],
						binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = firstActive;
					bindingsForPath[ lastCachedIndex ] = binding;

				}

			}

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	},

	// remove & forget
	uncache: function( var_args ) {

		var objects = this._objects,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

			var object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined ) {

				delete indicesByUUID[ uuid ];

				if ( index < nCachedObjects ) {

					// object is cached, shrink the CACHED region

					var firstActiveIndex = -- nCachedObjects,
						lastCachedObject = objects[ firstActiveIndex ],
						lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					// last cached object takes this object's place
					indicesByUUID[ lastCachedObject.uuid ] = index;
					objects[ index ] = lastCachedObject;

					// last object goes to the activated slot and pop
					indicesByUUID[ lastObject.uuid ] = firstActiveIndex;
					objects[ firstActiveIndex ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( var j = 0, m = nBindings; j !== m; ++ j ) {

						var bindingsForPath = bindings[ j ],
							lastCached = bindingsForPath[ firstActiveIndex ],
							last = bindingsForPath[ lastIndex ];

						bindingsForPath[ index ] = lastCached;
						bindingsForPath[ firstActiveIndex ] = last;
						bindingsForPath.pop();

					}

				} else {

					// object is active, just swap with the last and pop

					var lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					indicesByUUID[ lastObject.uuid ] = index;
					objects[ index ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( var j = 0, m = nBindings; j !== m; ++ j ) {

						var bindingsForPath = bindings[ j ];

						bindingsForPath[ index ] = bindingsForPath[ lastIndex ];
						bindingsForPath.pop();

					}

				} // cached or active

			} // if object is known

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	},

	// Internal interface used by befriended PropertyBinding.Composite:

	subscribe_: function ( path, parsedPath ) {

		// returns an array of bindings for the given path that is changed
		// according to the contained objects in the group

		var indicesByPath = this._bindingsIndicesByPath,
			index = indicesByPath[ path ],
			bindings = this._bindings;

		if ( index !== undefined ) return bindings[ index ];

		var paths = this._paths,
			parsedPaths = this._parsedPaths,
			objects = this._objects,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_,
			bindingsForPath = new Array( nObjects );

		index = bindings.length;

		indicesByPath[ path ] = index;

		paths.push( path );
		parsedPaths.push( parsedPath );
		bindings.push( bindingsForPath );

		for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {

			var object = objects[ i ];
			bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );

		}

		return bindingsForPath;

	},

	unsubscribe_: function ( path ) {

		// tells the group to forget about a property path and no longer
		// update the array previously obtained with 'subscribe_'

		var indicesByPath = this._bindingsIndicesByPath,
			index = indicesByPath[ path ];

		if ( index !== undefined ) {

			var paths = this._paths,
				parsedPaths = this._parsedPaths,
				bindings = this._bindings,
				lastBindingsIndex = bindings.length - 1,
				lastBindings = bindings[ lastBindingsIndex ],
				lastBindingsPath = path[ lastBindingsIndex ];

			indicesByPath[ lastBindingsPath ] = index;

			bindings[ index ] = lastBindings;
			bindings.pop();

			parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];
			parsedPaths.pop();

			paths[ index ] = paths[ lastBindingsIndex ];
			paths.pop();

		}

	}

} );

/**
 *
 * Action provided by AnimationMixer for scheduling clip playback on specific
 * objects.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 *
 */

function AnimationAction( mixer, clip, localRoot ) {

	this._mixer = mixer;
	this._clip = clip;
	this._localRoot = localRoot || null;

	var tracks = clip.tracks,
		nTracks = tracks.length,
		interpolants = new Array( nTracks );

	var interpolantSettings = {
			endingStart: 	ZeroCurvatureEnding,
			endingEnd:		ZeroCurvatureEnding
	};

	for ( var i = 0; i !== nTracks; ++ i ) {

		var interpolant = tracks[ i ].createInterpolant( null );
		interpolants[ i ] = interpolant;
		interpolant.settings = interpolantSettings;

	}

	this._interpolantSettings = interpolantSettings;

	this._interpolants = interpolants;	// bound by the mixer

	// inside: PropertyMixer (managed by the mixer)
	this._propertyBindings = new Array( nTracks );

	this._cacheIndex = null;			// for the memory manager
	this._byClipCacheIndex = null;		// for the memory manager

	this._timeScaleInterpolant = null;
	this._weightInterpolant = null;

	this.loop = LoopRepeat;
	this._loopCount = -1;

	// global mixer time when the action is to be started
	// it's set back to 'null' upon start of the action
	this._startTime = null;

	// scaled local time of the action
	// gets clamped or wrapped to 0..clip.duration according to loop
	this.time = 0;

	this.timeScale = 1;
	this._effectiveTimeScale = 1;

	this.weight = 1;
	this._effectiveWeight = 1;

	this.repetitions = Infinity; 		// no. of repetitions when looping

	this.paused = false;				// true -> zero effective time scale
	this.enabled = true;				// false -> zero effective weight

	this.clampWhenFinished 	= false;	// keep feeding the last frame?

	this.zeroSlopeAtStart 	= true;		// for smooth interpolation w/o separate
	this.zeroSlopeAtEnd		= true;		// clips for start, loop and end

}

Object.assign( AnimationAction.prototype, {

	// State & Scheduling

	play: function() {

		this._mixer._activateAction( this );

		return this;

	},

	stop: function() {

		this._mixer._deactivateAction( this );

		return this.reset();

	},

	reset: function() {

		this.paused = false;
		this.enabled = true;

		this.time = 0;			// restart clip
		this._loopCount = -1;	// forget previous loops
		this._startTime = null;	// forget scheduling

		return this.stopFading().stopWarping();

	},

	isRunning: function() {

		return this.enabled && ! this.paused && this.timeScale !== 0 &&
				this._startTime === null && this._mixer._isActiveAction( this );

	},

	// return true when play has been called
	isScheduled: function() {

		return this._mixer._isActiveAction( this );

	},

	startAt: function( time ) {

		this._startTime = time;

		return this;

	},

	setLoop: function( mode, repetitions ) {

		this.loop = mode;
		this.repetitions = repetitions;

		return this;

	},

	// Weight

	// set the weight stopping any scheduled fading
	// although .enabled = false yields an effective weight of zero, this
	// method does *not* change .enabled, because it would be confusing
	setEffectiveWeight: function( weight ) {

		this.weight = weight;

		// note: same logic as when updated at runtime
		this._effectiveWeight = this.enabled ? weight : 0;

		return this.stopFading();

	},

	// return the weight considering fading and .enabled
	getEffectiveWeight: function() {

		return this._effectiveWeight;

	},

	fadeIn: function( duration ) {

		return this._scheduleFading( duration, 0, 1 );

	},

	fadeOut: function( duration ) {

		return this._scheduleFading( duration, 1, 0 );

	},

	crossFadeFrom: function( fadeOutAction, duration, warp ) {

		fadeOutAction.fadeOut( duration );
		this.fadeIn( duration );

		if( warp ) {

			var fadeInDuration = this._clip.duration,
				fadeOutDuration = fadeOutAction._clip.duration,

				startEndRatio = fadeOutDuration / fadeInDuration,
				endStartRatio = fadeInDuration / fadeOutDuration;

			fadeOutAction.warp( 1.0, startEndRatio, duration );
			this.warp( endStartRatio, 1.0, duration );

		}

		return this;

	},

	crossFadeTo: function( fadeInAction, duration, warp ) {

		return fadeInAction.crossFadeFrom( this, duration, warp );

	},

	stopFading: function() {

		var weightInterpolant = this._weightInterpolant;

		if ( weightInterpolant !== null ) {

			this._weightInterpolant = null;
			this._mixer._takeBackControlInterpolant( weightInterpolant );

		}

		return this;

	},

	// Time Scale Control

	// set the time scale stopping any scheduled warping
	// although .paused = true yields an effective time scale of zero, this
	// method does *not* change .paused, because it would be confusing
	setEffectiveTimeScale: function( timeScale ) {

		this.timeScale = timeScale;
		this._effectiveTimeScale = this.paused ? 0 :timeScale;

		return this.stopWarping();

	},

	// return the time scale considering warping and .paused
	getEffectiveTimeScale: function() {

		return this._effectiveTimeScale;

	},

	setDuration: function( duration ) {

		this.timeScale = this._clip.duration / duration;

		return this.stopWarping();

	},

	syncWith: function( action ) {

		this.time = action.time;
		this.timeScale = action.timeScale;

		return this.stopWarping();

	},

	halt: function( duration ) {

		return this.warp( this._effectiveTimeScale, 0, duration );

	},

	warp: function( startTimeScale, endTimeScale, duration ) {

		var mixer = this._mixer, now = mixer.time,
			interpolant = this._timeScaleInterpolant,

			timeScale = this.timeScale;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._timeScaleInterpolant = interpolant;

		}

		var times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now;
		times[ 1 ] = now + duration;

		values[ 0 ] = startTimeScale / timeScale;
		values[ 1 ] = endTimeScale / timeScale;

		return this;

	},

	stopWarping: function() {

		var timeScaleInterpolant = this._timeScaleInterpolant;

		if ( timeScaleInterpolant !== null ) {

			this._timeScaleInterpolant = null;
			this._mixer._takeBackControlInterpolant( timeScaleInterpolant );

		}

		return this;

	},

	// Object Accessors

	getMixer: function() {

		return this._mixer;

	},

	getClip: function() {

		return this._clip;

	},

	getRoot: function() {

		return this._localRoot || this._mixer._root;

	},

	// Interna

	_update: function( time, deltaTime, timeDirection, accuIndex ) {

		// called by the mixer

		if ( ! this.enabled ) {

			// call ._updateWeight() to update ._effectiveWeight

			this._updateWeight( time );
			return;

		}

		var startTime = this._startTime;

		if ( startTime !== null ) {

			// check for scheduled start of action

			var timeRunning = ( time - startTime ) * timeDirection;
			if ( timeRunning < 0 || timeDirection === 0 ) {

				return; // yet to come / don't decide when delta = 0

			}

			// start

			this._startTime = null; // unschedule
			deltaTime = timeDirection * timeRunning;

		}

		// apply time scale and advance time

		deltaTime *= this._updateTimeScale( time );
		var clipTime = this._updateTime( deltaTime );

		// note: _updateTime may disable the action resulting in
		// an effective weight of 0

		var weight = this._updateWeight( time );

		if ( weight > 0 ) {

			var interpolants = this._interpolants;
			var propertyMixers = this._propertyBindings;

			for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {

				interpolants[ j ].evaluate( clipTime );
				propertyMixers[ j ].accumulate( accuIndex, weight );

			}

		}

	},

	_updateWeight: function( time ) {

		var weight = 0;

		if ( this.enabled ) {

			weight = this.weight;
			var interpolant = this._weightInterpolant;

			if ( interpolant !== null ) {

				var interpolantValue = interpolant.evaluate( time )[ 0 ];

				weight *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopFading();

					if ( interpolantValue === 0 ) {

						// faded out, disable
						this.enabled = false;

					}

				}

			}

		}

		this._effectiveWeight = weight;
		return weight;

	},

	_updateTimeScale: function( time ) {

		var timeScale = 0;

		if ( ! this.paused ) {

			timeScale = this.timeScale;

			var interpolant = this._timeScaleInterpolant;

			if ( interpolant !== null ) {

				var interpolantValue = interpolant.evaluate( time )[ 0 ];

				timeScale *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopWarping();

					if ( timeScale === 0 ) {

						// motion has halted, pause
						this.paused = true;

					} else {

						// warp done - apply final time scale
						this.timeScale = timeScale;

					}

				}

			}

		}

		this._effectiveTimeScale = timeScale;
		return timeScale;

	},

	_updateTime: function( deltaTime ) {

		var time = this.time + deltaTime;

		if ( deltaTime === 0 ) return time;

		var duration = this._clip.duration,

			loop = this.loop,
			loopCount = this._loopCount;

		if ( loop === LoopOnce ) {

			if ( loopCount === -1 ) {
				// just started

				this._loopCount = 0;
				this._setEndings( true, true, false );

			}

			handle_stop: {

				if ( time >= duration ) {

					time = duration;

				} else if ( time < 0 ) {

					time = 0;

				} else break handle_stop;

				if ( this.clampWhenFinished ) this.paused = true;
				else this.enabled = false;

				this._mixer.dispatchEvent( {
					type: 'finished', action: this,
					direction: deltaTime < 0 ? -1 : 1
				} );

			}

		} else { // repetitive Repeat or PingPong

			var pingPong = ( loop === LoopPingPong );

			if ( loopCount === -1 ) {
				// just started

				if ( deltaTime >= 0 ) {

					loopCount = 0;

					this._setEndings(
							true, this.repetitions === 0, pingPong );

				} else {

					// when looping in reverse direction, the initial
					// transition through zero counts as a repetition,
					// so leave loopCount at -1

					this._setEndings(
							this.repetitions === 0, true, pingPong );

				}

			}

			if ( time >= duration || time < 0 ) {
				// wrap around

				var loopDelta = Math.floor( time / duration ); // signed
				time -= duration * loopDelta;

				loopCount += Math.abs( loopDelta );

				var pending = this.repetitions - loopCount;

				if ( pending < 0 ) {
					// have to stop (switch state, clamp time, fire event)

					if ( this.clampWhenFinished ) this.paused = true;
					else this.enabled = false;

					time = deltaTime > 0 ? duration : 0;

					this._mixer.dispatchEvent( {
						type: 'finished', action: this,
						direction: deltaTime > 0 ? 1 : -1
					} );

				} else {
					// keep running

					if ( pending === 0 ) {
						// entering the last round

						var atStart = deltaTime < 0;
						this._setEndings( atStart, ! atStart, pingPong );

					} else {

						this._setEndings( false, false, pingPong );

					}

					this._loopCount = loopCount;

					this._mixer.dispatchEvent( {
						type: 'loop', action: this, loopDelta: loopDelta
					} );

				}

			}

			if ( pingPong && ( loopCount & 1 ) === 1 ) {
				// invert time for the "pong round"

				this.time = time;
				return duration - time;

			}

		}

		this.time = time;
		return time;

	},

	_setEndings: function( atStart, atEnd, pingPong ) {

		var settings = this._interpolantSettings;

		if ( pingPong ) {

			settings.endingStart 	= ZeroSlopeEnding;
			settings.endingEnd		= ZeroSlopeEnding;

		} else {

			// assuming for LoopOnce atStart == atEnd == true

			if ( atStart ) {

				settings.endingStart = this.zeroSlopeAtStart ?
						ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingStart = WrapAroundEnding;

			}

			if ( atEnd ) {

				settings.endingEnd = this.zeroSlopeAtEnd ?
						ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingEnd 	 = WrapAroundEnding;

			}

		}

	},

	_scheduleFading: function( duration, weightNow, weightThen ) {

		var mixer = this._mixer, now = mixer.time,
			interpolant = this._weightInterpolant;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._weightInterpolant = interpolant;

		}

		var times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now; 				values[ 0 ] = weightNow;
		times[ 1 ] = now + duration;	values[ 1 ] = weightThen;

		return this;

	}

} );

/**
 *
 * Player for AnimationClips.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */

function AnimationMixer( root ) {

	this._root = root;
	this._initMemoryManager();
	this._accuIndex = 0;

	this.time = 0;

	this.timeScale = 1.0;

}

Object.assign( AnimationMixer.prototype, EventDispatcher.prototype, {

	_bindAction: function ( action, prototypeAction ) {

		var root = action._localRoot || this._root,
			tracks = action._clip.tracks,
			nTracks = tracks.length,
			bindings = action._propertyBindings,
			interpolants = action._interpolants,
			rootUuid = root.uuid,
			bindingsByRoot = this._bindingsByRootAndName,
			bindingsByName = bindingsByRoot[ rootUuid ];

		if ( bindingsByName === undefined ) {

			bindingsByName = {};
			bindingsByRoot[ rootUuid ] = bindingsByName;

		}

		for ( var i = 0; i !== nTracks; ++ i ) {

			var track = tracks[ i ],
				trackName = track.name,
				binding = bindingsByName[ trackName ];

			if ( binding !== undefined ) {

				bindings[ i ] = binding;

			} else {

				binding = bindings[ i ];

				if ( binding !== undefined ) {

					// existing binding, make sure the cache knows

					if ( binding._cacheIndex === null ) {

						++ binding.referenceCount;
						this._addInactiveBinding( binding, rootUuid, trackName );

					}

					continue;

				}

				var path = prototypeAction && prototypeAction.
						_propertyBindings[ i ].binding.parsedPath;

				binding = new PropertyMixer(
					PropertyBinding.create( root, trackName, path ),
					track.ValueTypeName, track.getValueSize() );

				++ binding.referenceCount;
				this._addInactiveBinding( binding, rootUuid, trackName );

				bindings[ i ] = binding;

			}

			interpolants[ i ].resultBuffer = binding.buffer;

		}

	},

	_activateAction: function ( action ) {

		if ( ! this._isActiveAction( action ) ) {

			if ( action._cacheIndex === null ) {

				// this action has been forgotten by the cache, but the user
				// appears to be still using it -> rebind

				var rootUuid = ( action._localRoot || this._root ).uuid,
					clipUuid = action._clip.uuid,
					actionsForClip = this._actionsByClip[ clipUuid ];

				this._bindAction( action,
					actionsForClip && actionsForClip.knownActions[ 0 ] );

				this._addInactiveAction( action, clipUuid, rootUuid );

			}

			var bindings = action._propertyBindings;

			// increment reference counts / sort out state
			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

				var binding = bindings[ i ];

				if ( binding.useCount ++ === 0 ) {

					this._lendBinding( binding );
					binding.saveOriginalState();

				}

			}

			this._lendAction( action );

		}

	},

	_deactivateAction: function ( action ) {

		if ( this._isActiveAction( action ) ) {

			var bindings = action._propertyBindings;

			// decrement reference counts / sort out state
			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

				var binding = bindings[ i ];

				if ( -- binding.useCount === 0 ) {

					binding.restoreOriginalState();
					this._takeBackBinding( binding );

				}

			}

			this._takeBackAction( action );

		}

	},

	// Memory manager

	_initMemoryManager: function () {

		this._actions = []; // 'nActiveActions' followed by inactive ones
		this._nActiveActions = 0;

		this._actionsByClip = {};
		// inside:
		// {
		// 		knownActions: Array< AnimationAction >	- used as prototypes
		// 		actionByRoot: AnimationAction			- lookup
		// }


		this._bindings = []; // 'nActiveBindings' followed by inactive ones
		this._nActiveBindings = 0;

		this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >


		this._controlInterpolants = []; // same game as above
		this._nActiveControlInterpolants = 0;

		var scope = this;

		this.stats = {

			actions: {
				get total() { return scope._actions.length; },
				get inUse() { return scope._nActiveActions; }
			},
			bindings: {
				get total() { return scope._bindings.length; },
				get inUse() { return scope._nActiveBindings; }
			},
			controlInterpolants: {
				get total() { return scope._controlInterpolants.length; },
				get inUse() { return scope._nActiveControlInterpolants; }
			}

		};

	},

	// Memory management for AnimationAction objects

	_isActiveAction: function ( action ) {

		var index = action._cacheIndex;
		return index !== null && index < this._nActiveActions;

	},

	_addInactiveAction: function ( action, clipUuid, rootUuid ) {

		var actions = this._actions,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip === undefined ) {

			actionsForClip = {

				knownActions: [ action ],
				actionByRoot: {}

			};

			action._byClipCacheIndex = 0;

			actionsByClip[ clipUuid ] = actionsForClip;

		} else {

			var knownActions = actionsForClip.knownActions;

			action._byClipCacheIndex = knownActions.length;
			knownActions.push( action );

		}

		action._cacheIndex = actions.length;
		actions.push( action );

		actionsForClip.actionByRoot[ rootUuid ] = action;

	},

	_removeInactiveAction: function ( action ) {

		var actions = this._actions,
			lastInactiveAction = actions[ actions.length - 1 ],
			cacheIndex = action._cacheIndex;

		lastInactiveAction._cacheIndex = cacheIndex;
		actions[ cacheIndex ] = lastInactiveAction;
		actions.pop();

		action._cacheIndex = null;


		var clipUuid = action._clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ],
			knownActionsForClip = actionsForClip.knownActions,

			lastKnownAction =
				knownActionsForClip[ knownActionsForClip.length - 1 ],

			byClipCacheIndex = action._byClipCacheIndex;

		lastKnownAction._byClipCacheIndex = byClipCacheIndex;
		knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;
		knownActionsForClip.pop();

		action._byClipCacheIndex = null;


		var actionByRoot = actionsForClip.actionByRoot,
			rootUuid = ( action._localRoot || this._root ).uuid;

		delete actionByRoot[ rootUuid ];

		if ( knownActionsForClip.length === 0 ) {

			delete actionsByClip[ clipUuid ];

		}

		this._removeInactiveBindingsForAction( action );

	},

	_removeInactiveBindingsForAction: function ( action ) {

		var bindings = action._propertyBindings;
		for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

			var binding = bindings[ i ];

			if ( -- binding.referenceCount === 0 ) {

				this._removeInactiveBinding( binding );

			}

		}

	},

	_lendAction: function ( action ) {

		// [ active actions |  inactive actions  ]
		// [  active actions >| inactive actions ]
		//                 s        a
		//                  <-swap->
		//                 a        s

		var actions = this._actions,
			prevIndex = action._cacheIndex,

			lastActiveIndex = this._nActiveActions ++,

			firstInactiveAction = actions[ lastActiveIndex ];

		action._cacheIndex = lastActiveIndex;
		actions[ lastActiveIndex ] = action;

		firstInactiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = firstInactiveAction;

	},

	_takeBackAction: function ( action ) {

		// [  active actions  | inactive actions ]
		// [ active actions |< inactive actions  ]
		//        a        s
		//         <-swap->
		//        s        a

		var actions = this._actions,
			prevIndex = action._cacheIndex,

			firstInactiveIndex = -- this._nActiveActions,

			lastActiveAction = actions[ firstInactiveIndex ];

		action._cacheIndex = firstInactiveIndex;
		actions[ firstInactiveIndex ] = action;

		lastActiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = lastActiveAction;

	},

	// Memory management for PropertyMixer objects

	_addInactiveBinding: function ( binding, rootUuid, trackName ) {

		var bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ],

			bindings = this._bindings;

		if ( bindingByName === undefined ) {

			bindingByName = {};
			bindingsByRoot[ rootUuid ] = bindingByName;

		}

		bindingByName[ trackName ] = binding;

		binding._cacheIndex = bindings.length;
		bindings.push( binding );

	},

	_removeInactiveBinding: function ( binding ) {

		var bindings = this._bindings,
			propBinding = binding.binding,
			rootUuid = propBinding.rootNode.uuid,
			trackName = propBinding.path,
			bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ],

			lastInactiveBinding = bindings[ bindings.length - 1 ],
			cacheIndex = binding._cacheIndex;

		lastInactiveBinding._cacheIndex = cacheIndex;
		bindings[ cacheIndex ] = lastInactiveBinding;
		bindings.pop();

		delete bindingByName[ trackName ];

		remove_empty_map: {

			for ( var _ in bindingByName ) break remove_empty_map;

			delete bindingsByRoot[ rootUuid ];

		}

	},

	_lendBinding: function ( binding ) {

		var bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			lastActiveIndex = this._nActiveBindings ++,

			firstInactiveBinding = bindings[ lastActiveIndex ];

		binding._cacheIndex = lastActiveIndex;
		bindings[ lastActiveIndex ] = binding;

		firstInactiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = firstInactiveBinding;

	},

	_takeBackBinding: function ( binding ) {

		var bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			firstInactiveIndex = -- this._nActiveBindings,

			lastActiveBinding = bindings[ firstInactiveIndex ];

		binding._cacheIndex = firstInactiveIndex;
		bindings[ firstInactiveIndex ] = binding;

		lastActiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = lastActiveBinding;

	},


	// Memory management of Interpolants for weight and time scale

	_lendControlInterpolant: function () {

		var interpolants = this._controlInterpolants,
			lastActiveIndex = this._nActiveControlInterpolants ++,
			interpolant = interpolants[ lastActiveIndex ];

		if ( interpolant === undefined ) {

			interpolant = new LinearInterpolant(
				new Float32Array( 2 ), new Float32Array( 2 ),
				1, this._controlInterpolantsResultBuffer );

			interpolant.__cacheIndex = lastActiveIndex;
			interpolants[ lastActiveIndex ] = interpolant;

		}

		return interpolant;

	},

	_takeBackControlInterpolant: function ( interpolant ) {

		var interpolants = this._controlInterpolants,
			prevIndex = interpolant.__cacheIndex,

			firstInactiveIndex = -- this._nActiveControlInterpolants,

			lastActiveInterpolant = interpolants[ firstInactiveIndex ];

		interpolant.__cacheIndex = firstInactiveIndex;
		interpolants[ firstInactiveIndex ] = interpolant;

		lastActiveInterpolant.__cacheIndex = prevIndex;
		interpolants[ prevIndex ] = lastActiveInterpolant;

	},

	_controlInterpolantsResultBuffer: new Float32Array( 1 ),

	// return an action for a clip optionally using a custom root target
	// object (this method allocates a lot of dynamic memory in case a
	// previously unknown clip/root combination is specified)
	clipAction: function ( clip, optionalRoot ) {

		var root = optionalRoot || this._root,
			rootUuid = root.uuid,

			clipObject = typeof clip === 'string' ?
				AnimationClip.findByName( root, clip ) : clip,

			clipUuid = clipObject !== null ? clipObject.uuid : clip,

			actionsForClip = this._actionsByClip[ clipUuid ],
			prototypeAction = null;

		if ( actionsForClip !== undefined ) {

			var existingAction =
					actionsForClip.actionByRoot[ rootUuid ];

			if ( existingAction !== undefined ) {

				return existingAction;

			}

			// we know the clip, so we don't have to parse all
			// the bindings again but can just copy
			prototypeAction = actionsForClip.knownActions[ 0 ];

			// also, take the clip from the prototype action
			if ( clipObject === null )
				clipObject = prototypeAction._clip;

		}

		// clip must be known when specified via string
		if ( clipObject === null ) return null;

		// allocate all resources required to run it
		var newAction = new AnimationAction( this, clipObject, optionalRoot );

		this._bindAction( newAction, prototypeAction );

		// and make the action known to the memory manager
		this._addInactiveAction( newAction, clipUuid, rootUuid );

		return newAction;

	},

	// get an existing action
	existingAction: function ( clip, optionalRoot ) {

		var root = optionalRoot || this._root,
			rootUuid = root.uuid,

			clipObject = typeof clip === 'string' ?
				AnimationClip.findByName( root, clip ) : clip,

			clipUuid = clipObject ? clipObject.uuid : clip,

			actionsForClip = this._actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			return actionsForClip.actionByRoot[ rootUuid ] || null;

		}

		return null;

	},

	// deactivates all previously scheduled actions
	stopAllAction: function () {

		var actions = this._actions,
			nActions = this._nActiveActions,
			bindings = this._bindings,
			nBindings = this._nActiveBindings;

		this._nActiveActions = 0;
		this._nActiveBindings = 0;

		for ( var i = 0; i !== nActions; ++ i ) {

			actions[ i ].reset();

		}

		for ( var i = 0; i !== nBindings; ++ i ) {

			bindings[ i ].useCount = 0;

		}

		return this;

	},

	// advance the time and update apply the animation
	update: function ( deltaTime ) {

		deltaTime *= this.timeScale;

		var actions = this._actions,
			nActions = this._nActiveActions,

			time = this.time += deltaTime,
			timeDirection = Math.sign( deltaTime ),

			accuIndex = this._accuIndex ^= 1;

		// run active actions

		for ( var i = 0; i !== nActions; ++ i ) {

			var action = actions[ i ];

			action._update( time, deltaTime, timeDirection, accuIndex );

		}

		// update scene graph

		var bindings = this._bindings,
			nBindings = this._nActiveBindings;

		for ( var i = 0; i !== nBindings; ++ i ) {

			bindings[ i ].apply( accuIndex );

		}

		return this;

	},

	// return this mixer's root target object
	getRoot: function () {

		return this._root;

	},

	// free all resources specific to a particular clip
	uncacheClip: function ( clip ) {

		var actions = this._actions,
			clipUuid = clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			// note: just calling _removeInactiveAction would mess up the
			// iteration state and also require updating the state we can
			// just throw away

			var actionsToRemove = actionsForClip.knownActions;

			for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {

				var action = actionsToRemove[ i ];

				this._deactivateAction( action );

				var cacheIndex = action._cacheIndex,
					lastInactiveAction = actions[ actions.length - 1 ];

				action._cacheIndex = null;
				action._byClipCacheIndex = null;

				lastInactiveAction._cacheIndex = cacheIndex;
				actions[ cacheIndex ] = lastInactiveAction;
				actions.pop();

				this._removeInactiveBindingsForAction( action );

			}

			delete actionsByClip[ clipUuid ];

		}

	},

	// free all resources specific to a particular root target object
	uncacheRoot: function ( root ) {

		var rootUuid = root.uuid,
			actionsByClip = this._actionsByClip;

		for ( var clipUuid in actionsByClip ) {

			var actionByRoot = actionsByClip[ clipUuid ].actionByRoot,
				action = actionByRoot[ rootUuid ];

			if ( action !== undefined ) {

				this._deactivateAction( action );
				this._removeInactiveAction( action );

			}

		}

		var bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ];

		if ( bindingByName !== undefined ) {

			for ( var trackName in bindingByName ) {

				var binding = bindingByName[ trackName ];
				binding.restoreOriginalState();
				this._removeInactiveBinding( binding );

			}

		}

	},

	// remove a targeted clip from the cache
	uncacheAction: function ( clip, optionalRoot ) {

		var action = this.existingAction( clip, optionalRoot );

		if ( action !== null ) {

			this._deactivateAction( action );
			this._removeInactiveAction( action );

		}

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Uniform( value ) {

	if ( typeof value === 'string' ) {

		console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );
		value = arguments[ 1 ];

	}

	this.value = value;

}

Uniform.prototype.clone = function () {

	return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );

};

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */

function InstancedBufferGeometry() {

	BufferGeometry.call( this );

	this.type = 'InstancedBufferGeometry';
	this.maxInstancedCount = undefined;

}

InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {

	constructor: InstancedBufferGeometry,

	isInstancedBufferGeometry: true,

	addGroup: function ( start, count, materialIndex ) {

		this.groups.push( {

			start: start,
			count: count,
			materialIndex: materialIndex

		} );

	},

	copy: function ( source ) {

		var index = source.index;

		if ( index !== null ) {

			this.setIndex( index.clone() );

		}

		var attributes = source.attributes;

		for ( var name in attributes ) {

			var attribute = attributes[ name ];
			this.addAttribute( name, attribute.clone() );

		}

		var groups = source.groups;

		for ( var i = 0, l = groups.length; i < l; i ++ ) {

			var group = groups[ i ];
			this.addGroup( group.start, group.count, group.materialIndex );

		}

		return this;

	}

} );

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */

function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {

	this.uuid = _Math.generateUUID();

	this.data = interleavedBuffer;
	this.itemSize = itemSize;
	this.offset = offset;

	this.normalized = normalized === true;

}

Object.defineProperties( InterleavedBufferAttribute.prototype, {

	count: {

		get: function () {

			return this.data.count;

		}

	},

	array: {

		get: function () {

			return this.data.array;

		}

	}

} );

Object.assign( InterleavedBufferAttribute.prototype, {

	isInterleavedBufferAttribute: true,

	setX: function ( index, x ) {

		this.data.array[ index * this.data.stride + this.offset ] = x;

		return this;

	},

	setY: function ( index, y ) {

		this.data.array[ index * this.data.stride + this.offset + 1 ] = y;

		return this;

	},

	setZ: function ( index, z ) {

		this.data.array[ index * this.data.stride + this.offset + 2 ] = z;

		return this;

	},

	setW: function ( index, w ) {

		this.data.array[ index * this.data.stride + this.offset + 3 ] = w;

		return this;

	},

	getX: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset ];

	},

	getY: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 1 ];

	},

	getZ: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 2 ];

	},

	getW: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 3 ];

	},

	setXY: function ( index, x, y ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;

		return this;

	},

	setXYZ: function ( index, x, y, z ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;

		return this;

	},

	setXYZW: function ( index, x, y, z, w ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;
		this.data.array[ index + 3 ] = w;

		return this;

	}

} );

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */

function InterleavedBuffer( array, stride ) {

	this.uuid = _Math.generateUUID();

	this.array = array;
	this.stride = stride;
	this.count = array !== undefined ? array.length / stride : 0;

	this.dynamic = false;
	this.updateRange = { offset: 0, count: - 1 };

	this.onUploadCallback = function () {};

	this.version = 0;

}

Object.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( InterleavedBuffer.prototype, {

	isInterleavedBuffer: true,

	setArray: function ( array ) {

		if ( Array.isArray( array ) ) {

			throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

		}

		this.count = array !== undefined ? array.length / this.stride : 0;
		this.array = array;

	},

	setDynamic: function ( value ) {

		this.dynamic = value;

		return this;

	},

	copy: function ( source ) {

		this.array = new source.array.constructor( source.array );
		this.count = source.count;
		this.stride = source.stride;
		this.dynamic = source.dynamic;

		return this;

	},

	copyAt: function ( index1, attribute, index2 ) {

		index1 *= this.stride;
		index2 *= attribute.stride;

		for ( var i = 0, l = this.stride; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	},

	set: function ( value, offset ) {

		if ( offset === undefined ) offset = 0;

		this.array.set( value, offset );

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	onUpload: function ( callback ) {

		this.onUploadCallback = callback;

		return this;

	}

} );

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */

function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {

	InterleavedBuffer.call( this, array, stride );

	this.meshPerAttribute = meshPerAttribute || 1;

}

InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {

	constructor: InstancedInterleavedBuffer,

	isInstancedInterleavedBuffer: true,

	copy: function ( source ) {

		InterleavedBuffer.prototype.copy.call( this, source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	}

} );

/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */

function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {

	BufferAttribute.call( this, array, itemSize );

	this.meshPerAttribute = meshPerAttribute || 1;

}

InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {

	constructor: InstancedBufferAttribute,

	isInstancedBufferAttribute: true,

	copy: function ( source ) {

		BufferAttribute.prototype.copy.call( this, source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	}

} );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author bhouston / http://clara.io/
 * @author stephomi / http://stephaneginier.com/
 */

function Raycaster( origin, direction, near, far ) {

	this.ray = new Ray( origin, direction );
	// direction is assumed to be normalized (for accurate distance calculations)

	this.near = near || 0;
	this.far = far || Infinity;

	this.params = {
		Mesh: {},
		Line: {},
		LOD: {},
		Points: { threshold: 1 },
		Sprite: {}
	};

	Object.defineProperties( this.params, {
		PointCloud: {
			get: function () {
				console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );
				return this.Points;
			}
		}
	} );

}

function ascSort( a, b ) {

	return a.distance - b.distance;

}

function intersectObject( object, raycaster, intersects, recursive ) {

	if ( object.visible === false ) return;

	object.raycast( raycaster, intersects );

	if ( recursive === true ) {

		var children = object.children;

		for ( var i = 0, l = children.length; i < l; i ++ ) {

			intersectObject( children[ i ], raycaster, intersects, true );

		}

	}

}

Object.assign( Raycaster.prototype, {

	linePrecision: 1,

	set: function ( origin, direction ) {

		// direction is assumed to be normalized (for accurate distance calculations)

		this.ray.set( origin, direction );

	},

	setFromCamera: function ( coords, camera ) {

		if ( ( camera && camera.isPerspectiveCamera ) ) {

			this.ray.origin.setFromMatrixPosition( camera.matrixWorld );
			this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();

		} else if ( ( camera && camera.isOrthographicCamera ) ) {

			this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera
			this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );

		} else {

			console.error( 'THREE.Raycaster: Unsupported camera type.' );

		}

	},

	intersectObject: function ( object, recursive ) {

		var intersects = [];

		intersectObject( object, this, intersects, recursive );

		intersects.sort( ascSort );

		return intersects;

	},

	intersectObjects: function ( objects, recursive ) {

		var intersects = [];

		if ( Array.isArray( objects ) === false ) {

			console.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );
			return intersects;

		}

		for ( var i = 0, l = objects.length; i < l; i ++ ) {

			intersectObject( objects[ i ], this, intersects, recursive );

		}

		intersects.sort( ascSort );

		return intersects;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function Clock( autoStart ) {

	this.autoStart = ( autoStart !== undefined ) ? autoStart : true;

	this.startTime = 0;
	this.oldTime = 0;
	this.elapsedTime = 0;

	this.running = false;

}

Object.assign( Clock.prototype, {

	start: function () {

		this.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732

		this.oldTime = this.startTime;
		this.elapsedTime = 0;
		this.running = true;

	},

	stop: function () {

		this.getElapsedTime();
		this.running = false;

	},

	getElapsedTime: function () {

		this.getDelta();
		return this.elapsedTime;

	},

	getDelta: function () {

		var diff = 0;

		if ( this.autoStart && ! this.running ) {

			this.start();
			return 0;

		}

		if ( this.running ) {

			var newTime = ( typeof performance === 'undefined' ? Date : performance ).now();

			diff = ( newTime - this.oldTime ) / 1000;
			this.oldTime = newTime;

			this.elapsedTime += diff;

		}

		return diff;

	}

} );

/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The poles (phi) are at the positive and negative y axis.
 * The equator starts at positive z.
 */

function Spherical( radius, phi, theta ) {

	this.radius = ( radius !== undefined ) ? radius : 1.0;
	this.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole
	this.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere

	return this;

}

Object.assign( Spherical.prototype, {

	set: function ( radius, phi, theta ) {

		this.radius = radius;
		this.phi = phi;
		this.theta = theta;

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( other ) {

		this.radius = other.radius;
		this.phi = other.phi;
		this.theta = other.theta;

		return this;

	},

	// restrict phi to be betwee EPS and PI-EPS
	makeSafe: function() {

		var EPS = 0.000001;
		this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );

		return this;

	},

	setFromVector3: function( vec3 ) {

		this.radius = vec3.length();

		if ( this.radius === 0 ) {

			this.theta = 0;
			this.phi = 0;

		} else {

			this.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis
			this.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle

		}

		return this;

	}

} );

/**
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 *
 */

function Cylindrical( radius, theta, y ) {

	this.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane
	this.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis
	this.y = ( y !== undefined ) ? y : 0; // height above the x-z plane

	return this;

}

Object.assign( Cylindrical.prototype, {

	set: function ( radius, theta, y ) {

		this.radius = radius;
		this.theta = theta;
		this.y = y;

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( other ) {

		this.radius = other.radius;
		this.theta = other.theta;
		this.y = other.y;

		return this;

	},

	setFromVector3: function( vec3 ) {

		this.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );
		this.theta = Math.atan2( vec3.x, vec3.z );
		this.y = vec3.y;

		return this;

	}

} );

/**
 * @author alteredq / http://alteredqualia.com/
 */

function MorphBlendMesh( geometry, material ) {

	Mesh.call( this, geometry, material );

	this.animationsMap = {};
	this.animationsList = [];

	// prepare default animation
	// (all frames played together in 1 second)

	var numFrames = this.geometry.morphTargets.length;

	var name = "__default";

	var startFrame = 0;
	var endFrame = numFrames - 1;

	var fps = numFrames / 1;

	this.createAnimation( name, startFrame, endFrame, fps );
	this.setAnimationWeight( name, 1 );

}

MorphBlendMesh.prototype = Object.create( Mesh.prototype );
MorphBlendMesh.prototype.constructor = MorphBlendMesh;

MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {

	var animation = {

		start: start,
		end: end,

		length: end - start + 1,

		fps: fps,
		duration: ( end - start ) / fps,

		lastFrame: 0,
		currentFrame: 0,

		active: false,

		time: 0,
		direction: 1,
		weight: 1,

		directionBackwards: false,
		mirroredLoop: false

	};

	this.animationsMap[ name ] = animation;
	this.animationsList.push( animation );

};

MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {

	var pattern = /([a-z]+)_?(\d+)/i;

	var firstAnimation, frameRanges = {};

	var geometry = this.geometry;

	for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {

		var morph = geometry.morphTargets[ i ];
		var chunks = morph.name.match( pattern );

		if ( chunks && chunks.length > 1 ) {

			var name = chunks[ 1 ];

			if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };

			var range = frameRanges[ name ];

			if ( i < range.start ) range.start = i;
			if ( i > range.end ) range.end = i;

			if ( ! firstAnimation ) firstAnimation = name;

		}

	}

	for ( var name in frameRanges ) {

		var range = frameRanges[ name ];
		this.createAnimation( name, range.start, range.end, fps );

	}

	this.firstAnimation = firstAnimation;

};

MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.direction = 1;
		animation.directionBackwards = false;

	}

};

MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.direction = - 1;
		animation.directionBackwards = true;

	}

};

MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.fps = fps;
		animation.duration = ( animation.end - animation.start ) / animation.fps;

	}

};

MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.duration = duration;
		animation.fps = ( animation.end - animation.start ) / animation.duration;

	}

};

MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.weight = weight;

	}

};

MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.time = time;

	}

};

MorphBlendMesh.prototype.getAnimationTime = function ( name ) {

	var time = 0;

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		time = animation.time;

	}

	return time;

};

MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {

	var duration = - 1;

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		duration = animation.duration;

	}

	return duration;

};

MorphBlendMesh.prototype.playAnimation = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.time = 0;
		animation.active = true;

	} else {

		console.warn( "THREE.MorphBlendMesh: animation[" + name + "] undefined in .playAnimation()" );

	}

};

MorphBlendMesh.prototype.stopAnimation = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.active = false;

	}

};

MorphBlendMesh.prototype.update = function ( delta ) {

	for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {

		var animation = this.animationsList[ i ];

		if ( ! animation.active ) continue;

		var frameTime = animation.duration / animation.length;

		animation.time += animation.direction * delta;

		if ( animation.mirroredLoop ) {

			if ( animation.time > animation.duration || animation.time < 0 ) {

				animation.direction *= - 1;

				if ( animation.time > animation.duration ) {

					animation.time = animation.duration;
					animation.directionBackwards = true;

				}

				if ( animation.time < 0 ) {

					animation.time = 0;
					animation.directionBackwards = false;

				}

			}

		} else {

			animation.time = animation.time % animation.duration;

			if ( animation.time < 0 ) animation.time += animation.duration;

		}

		var keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );
		var weight = animation.weight;

		if ( keyframe !== animation.currentFrame ) {

			this.morphTargetInfluences[ animation.lastFrame ] = 0;
			this.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;

			this.morphTargetInfluences[ keyframe ] = 0;

			animation.lastFrame = animation.currentFrame;
			animation.currentFrame = keyframe;

		}

		var mix = ( animation.time % frameTime ) / frameTime;

		if ( animation.directionBackwards ) mix = 1 - mix;

		if ( animation.currentFrame !== animation.lastFrame ) {

			this.morphTargetInfluences[ animation.currentFrame ] = mix * weight;
			this.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;

		} else {

			this.morphTargetInfluences[ animation.currentFrame ] = weight;

		}

	}

};

/**
 * @author alteredq / http://alteredqualia.com/
 */

function ImmediateRenderObject( material ) {

	Object3D.call( this );

	this.material = material;
	this.render = function ( renderCallback ) {};

}

ImmediateRenderObject.prototype = Object.create( Object3D.prototype );
ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;

ImmediateRenderObject.prototype.isImmediateRenderObject = true;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
*/

function VertexNormalsHelper( object, size, hex, linewidth ) {

	this.object = object;

	this.size = ( size !== undefined ) ? size : 1;

	var color = ( hex !== undefined ) ? hex : 0xff0000;

	var width = ( linewidth !== undefined ) ? linewidth : 1;

	//

	var nNormals = 0;

	var objGeometry = this.object.geometry;

	if ( objGeometry && objGeometry.isGeometry ) {

		nNormals = objGeometry.faces.length * 3;

	} else if ( objGeometry && objGeometry.isBufferGeometry ) {

		nNormals = objGeometry.attributes.normal.count;

	}

	//

	var geometry = new BufferGeometry();

	var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );

	geometry.addAttribute( 'position', positions );

	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );

	//

	this.matrixAutoUpdate = false;

	this.update();

}

VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );
VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;

VertexNormalsHelper.prototype.update = ( function () {

	var v1 = new Vector3();
	var v2 = new Vector3();
	var normalMatrix = new Matrix3();

	return function update() {

		var keys = [ 'a', 'b', 'c' ];

		this.object.updateMatrixWorld( true );

		normalMatrix.getNormalMatrix( this.object.matrixWorld );

		var matrixWorld = this.object.matrixWorld;

		var position = this.geometry.attributes.position;

		//

		var objGeometry = this.object.geometry;

		if ( objGeometry && objGeometry.isGeometry ) {

			var vertices = objGeometry.vertices;

			var faces = objGeometry.faces;

			var idx = 0;

			for ( var i = 0, l = faces.length; i < l; i ++ ) {

				var face = faces[ i ];

				for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {

					var vertex = vertices[ face[ keys[ j ] ] ];

					var normal = face.vertexNormals[ j ];

					v1.copy( vertex ).applyMatrix4( matrixWorld );

					v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );

					position.setXYZ( idx, v1.x, v1.y, v1.z );

					idx = idx + 1;

					position.setXYZ( idx, v2.x, v2.y, v2.z );

					idx = idx + 1;

				}

			}

		} else if ( objGeometry && objGeometry.isBufferGeometry ) {

			var objPos = objGeometry.attributes.position;

			var objNorm = objGeometry.attributes.normal;

			var idx = 0;

			// for simplicity, ignore index and drawcalls, and render every normal

			for ( var j = 0, jl = objPos.count; j < jl; j ++ ) {

				v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );

				v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );

				v2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );

				position.setXYZ( idx, v1.x, v1.y, v1.z );

				idx = idx + 1;

				position.setXYZ( idx, v2.x, v2.y, v2.z );

				idx = idx + 1;

			}

		}

		position.needsUpdate = true;

		return this;

	};

}() );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
*/

function SpotLightHelper( light ) {

	Object3D.call( this );

	this.light = light;
	this.light.updateMatrixWorld();

	this.matrix = light.matrixWorld;
	this.matrixAutoUpdate = false;

	var geometry = new BufferGeometry();

	var positions = [
		0, 0, 0,   0,   0,   1,
		0, 0, 0,   1,   0,   1,
		0, 0, 0, - 1,   0,   1,
		0, 0, 0,   0,   1,   1,
		0, 0, 0,   0, - 1,   1
	];

	for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {

		var p1 = ( i / l ) * Math.PI * 2;
		var p2 = ( j / l ) * Math.PI * 2;

		positions.push(
			Math.cos( p1 ), Math.sin( p1 ), 1,
			Math.cos( p2 ), Math.sin( p2 ), 1
		);

	}

	geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

	var material = new LineBasicMaterial( { fog: false } );

	this.cone = new LineSegments( geometry, material );
	this.add( this.cone );

	this.update();

}

SpotLightHelper.prototype = Object.create( Object3D.prototype );
SpotLightHelper.prototype.constructor = SpotLightHelper;

SpotLightHelper.prototype.dispose = function () {

	this.cone.geometry.dispose();
	this.cone.material.dispose();

};

SpotLightHelper.prototype.update = function () {

	var vector = new Vector3();
	var vector2 = new Vector3();

	return function update() {

		var coneLength = this.light.distance ? this.light.distance : 1000;
		var coneWidth = coneLength * Math.tan( this.light.angle );

		this.cone.scale.set( coneWidth, coneWidth, coneLength );

		vector.setFromMatrixPosition( this.light.matrixWorld );
		vector2.setFromMatrixPosition( this.light.target.matrixWorld );

		this.cone.lookAt( vector2.sub( vector ) );

		this.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	};

}();

/**
 * @author Sean Griffin / http://twitter.com/sgrif
 * @author Michael Guerrero / http://realitymeltdown.com
 * @author mrdoob / http://mrdoob.com/
 * @author ikerr / http://verold.com
 * @author Mugen87 / https://github.com/Mugen87
 */

function SkeletonHelper( object ) {

	this.bones = this.getBoneList( object );

	var geometry = new BufferGeometry();

	var vertices = [];
	var colors = [];

	var color1 = new Color( 0, 0, 1 );
	var color2 = new Color( 0, 1, 0 );

	for ( var i = 0; i < this.bones.length; i ++ ) {

		var bone = this.bones[ i ];

		if ( bone.parent && bone.parent.isBone ) {

			vertices.push( 0, 0, 0 );
			vertices.push( 0, 0, 0 );
			colors.push( color1.r, color1.g, color1.b );
			colors.push( color2.r, color2.g, color2.b );

		}

	}

	geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

	var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );

	LineSegments.call( this, geometry, material );

	this.root = object;

	this.matrix = object.matrixWorld;
	this.matrixAutoUpdate = false;

	this.update();

}


SkeletonHelper.prototype = Object.create( LineSegments.prototype );
SkeletonHelper.prototype.constructor = SkeletonHelper;

SkeletonHelper.prototype.getBoneList = function( object ) {

	var boneList = [];

	if ( object && object.isBone ) {

		boneList.push( object );

	}

	for ( var i = 0; i < object.children.length; i ++ ) {

		boneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );

	}

	return boneList;

};

SkeletonHelper.prototype.update = function () {

	var vector = new Vector3();

	var boneMatrix = new Matrix4();
	var matrixWorldInv = new Matrix4();

	return function update() {

		var geometry = this.geometry;
		var position = geometry.getAttribute( 'position' );

		matrixWorldInv.getInverse( this.root.matrixWorld );

		for ( var i = 0, j = 0; i < this.bones.length; i ++ ) {

			var bone = this.bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				boneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );
				vector.setFromMatrixPosition( boneMatrix );
				position.setXYZ( j, vector.x, vector.y, vector.z );

				boneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );
				vector.setFromMatrixPosition( boneMatrix );
				position.setXYZ( j + 1, vector.x, vector.y, vector.z );

				j += 2;

			}

		}

		geometry.getAttribute( 'position' ).needsUpdate = true;

	};

}();

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

function PointLightHelper( light, sphereSize ) {

	this.light = light;
	this.light.updateMatrixWorld();

	var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );
	var material = new MeshBasicMaterial( { wireframe: true, fog: false } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	Mesh.call( this, geometry, material );

	this.matrix = this.light.matrixWorld;
	this.matrixAutoUpdate = false;

	/*
	var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );
	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

	var d = light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.scale.set( d, d, d );

	}

	this.add( this.lightDistance );
	*/

}

PointLightHelper.prototype = Object.create( Mesh.prototype );
PointLightHelper.prototype.constructor = PointLightHelper;

PointLightHelper.prototype.dispose = function () {

	this.geometry.dispose();
	this.material.dispose();

};

PointLightHelper.prototype.update = function () {

	this.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	/*
	var d = this.light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.visible = true;
		this.lightDistance.scale.set( d, d, d );

	}
	*/

};

/**
 * @author abelnation / http://github.com/abelnation
 * @author Mugen87 / http://github.com/Mugen87
 */

function RectAreaLightHelper( light ) {

	Object3D.call( this );

	this.light = light;
	this.light.updateMatrixWorld();

	var materialFront = new MeshBasicMaterial( {
		color: light.color,
		fog: false
	} );

	var materialBack = new MeshBasicMaterial( {
		color: light.color,
		fog: false,
		wireframe: true
	} );

	var geometry = new BufferGeometry();

	geometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 6 * 3 ), 3 ) );

	// shows the "front" of the light, e.g. where light comes from

	this.add( new Mesh( geometry, materialFront ) );

	// shows the "back" of the light, which does not emit light

	this.add( new Mesh( geometry, materialBack ) );

	this.update();

}

RectAreaLightHelper.prototype = Object.create( Object3D.prototype );
RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;

RectAreaLightHelper.prototype.dispose = function () {

	this.children[ 0 ].geometry.dispose();
	this.children[ 0 ].material.dispose();
	this.children[ 1 ].geometry.dispose();
	this.children[ 1 ].material.dispose();

};

RectAreaLightHelper.prototype.update = function () {

	var vector1 = new Vector3();
	var vector2 = new Vector3();

	return function update() {

		var mesh1 = this.children[ 0 ];
		var mesh2 = this.children[ 1 ];

		if ( this.light.target ) {

			vector1.setFromMatrixPosition( this.light.matrixWorld );
			vector2.setFromMatrixPosition( this.light.target.matrixWorld );

			var lookVec = vector2.clone().sub( vector1 );
			mesh1.lookAt( lookVec );
			mesh2.lookAt( lookVec );

		}

		// update materials

		mesh1.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
		mesh2.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

		// calculate new dimensions of the helper

		var hx = this.light.width * 0.5;
		var hy = this.light.height * 0.5;

		// because the buffer attribute is shared over both geometries, we only have to update once

		var position = mesh1.geometry.getAttribute( 'position' );
		var array = position.array;

		// first face

		array[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;
		array[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;
		array[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;

		// second face

		array[  9 ] = - hx; array[ 10 ] =   hy; array[ 11 ] = 0;
		array[ 12 ] = - hx; array[ 13 ] = - hy; array[ 14 ] = 0;
		array[ 15 ] =   hx; array[ 16 ] = - hy; array[ 17 ] = 0;

		position.needsUpdate = true;

	};

}();

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */

function HemisphereLightHelper( light, size ) {

	Object3D.call( this );

	this.light = light;
	this.light.updateMatrixWorld();

	this.matrix = light.matrixWorld;
	this.matrixAutoUpdate = false;

	var geometry = new OctahedronBufferGeometry( size );
	geometry.rotateY( Math.PI * 0.5 );

	var material = new MeshBasicMaterial( { vertexColors: VertexColors, wireframe: true } );

	var position = geometry.getAttribute( 'position' );
	var colors = new Float32Array( position.count * 3 );

	geometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );

	this.add( new Mesh( geometry, material ) );

	this.update();

}

HemisphereLightHelper.prototype = Object.create( Object3D.prototype );
HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;

HemisphereLightHelper.prototype.dispose = function () {

	this.children[ 0 ].geometry.dispose();
	this.children[ 0 ].material.dispose();

};

HemisphereLightHelper.prototype.update = function () {

	var vector = new Vector3();

	var color1 = new Color();
	var color2 = new Color();

	return function update() {

		var mesh = this.children[ 0 ];

		var colors = mesh.geometry.getAttribute( 'color' );

		color1.copy( this.light.color ).multiplyScalar( this.light.intensity );
		color2.copy( this.light.groundColor ).multiplyScalar( this.light.intensity );

		for ( var i = 0, l = colors.count; i < l; i ++ ) {

			var color = ( i < ( l / 2 ) ) ? color1 : color2;

			colors.setXYZ( i, color.r, color.g, color.b );

		}

		mesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );

		colors.needsUpdate = true;

	};

}();

/**
 * @author mrdoob / http://mrdoob.com/
 */

function GridHelper( size, divisions, color1, color2 ) {

	size = size || 10;
	divisions = divisions || 10;
	color1 = new Color( color1 !== undefined ? color1 : 0x444444 );
	color2 = new Color( color2 !== undefined ? color2 : 0x888888 );

	var center = divisions / 2;
	var step = size / divisions;
	var halfSize = size / 2;

	var vertices = [], colors = [];

	for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {

		vertices.push( - halfSize, 0, k, halfSize, 0, k );
		vertices.push( k, 0, - halfSize, k, 0, halfSize );

		var color = i === center ? color1 : color2;

		color.toArray( colors, j ); j += 3;
		color.toArray( colors, j ); j += 3;
		color.toArray( colors, j ); j += 3;
		color.toArray( colors, j ); j += 3;

	}

	var geometry = new BufferGeometry();
	geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

	var material = new LineBasicMaterial( { vertexColors: VertexColors } );

	LineSegments.call( this, geometry, material );

}

GridHelper.prototype = Object.create( LineSegments.prototype );
GridHelper.prototype.constructor = GridHelper;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author Hectate / http://www.github.com/Hectate
 */

function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {

	radius = radius || 10;
	radials = radials || 16;
	circles = circles || 8;
	divisions = divisions || 64;
	color1 = new Color( color1 !== undefined ? color1 : 0x444444 );
	color2 = new Color( color2 !== undefined ? color2 : 0x888888 );

	var vertices = [];
	var colors = [];

	var x, z;
	var v, i, j, r, color;

	// create the radials

	for ( i = 0; i <= radials; i ++ ) {

		v = ( i / radials ) * ( Math.PI * 2 );

		x = Math.sin( v ) * radius;
		z = Math.cos( v ) * radius;

		vertices.push( 0, 0, 0 );
		vertices.push( x, 0, z );

		color = ( i & 1 ) ? color1 : color2;

		colors.push( color.r, color.g, color.b );
		colors.push( color.r, color.g, color.b );

	}

	// create the circles

	for ( i = 0; i <= circles; i ++ ) {

		color = ( i & 1 ) ? color1 : color2;

		r = radius - ( radius / circles * i );

		for ( j = 0; j < divisions; j ++ ) {

			// first vertex

			v = ( j / divisions ) * ( Math.PI * 2 );

			x = Math.sin( v ) * r;
			z = Math.cos( v ) * r;

			vertices.push( x, 0, z );
			colors.push( color.r, color.g, color.b );

			// second vertex

			v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );

			x = Math.sin( v ) * r;
			z = Math.cos( v ) * r;

			vertices.push( x, 0, z );
			colors.push( color.r, color.g, color.b );

		}

	}

	var geometry = new BufferGeometry();
	geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

	var material = new LineBasicMaterial( { vertexColors: VertexColors } );

	LineSegments.call( this, geometry, material );

}

PolarGridHelper.prototype = Object.create( LineSegments.prototype );
PolarGridHelper.prototype.constructor = PolarGridHelper;

/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
*/

function FaceNormalsHelper( object, size, hex, linewidth ) {

	// FaceNormalsHelper only supports THREE.Geometry

	this.object = object;

	this.size = ( size !== undefined ) ? size : 1;

	var color = ( hex !== undefined ) ? hex : 0xffff00;

	var width = ( linewidth !== undefined ) ? linewidth : 1;

	//

	var nNormals = 0;

	var objGeometry = this.object.geometry;

	if ( objGeometry && objGeometry.isGeometry ) {

		nNormals = objGeometry.faces.length;

	} else {

		console.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );

	}

	//

	var geometry = new BufferGeometry();

	var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );

	geometry.addAttribute( 'position', positions );

	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );

	//

	this.matrixAutoUpdate = false;
	this.update();

}

FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );
FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;

FaceNormalsHelper.prototype.update = ( function () {

	var v1 = new Vector3();
	var v2 = new Vector3();
	var normalMatrix = new Matrix3();

	return function update() {

		this.object.updateMatrixWorld( true );

		normalMatrix.getNormalMatrix( this.object.matrixWorld );

		var matrixWorld = this.object.matrixWorld;

		var position = this.geometry.attributes.position;

		//

		var objGeometry = this.object.geometry;

		var vertices = objGeometry.vertices;

		var faces = objGeometry.faces;

		var idx = 0;

		for ( var i = 0, l = faces.length; i < l; i ++ ) {

			var face = faces[ i ];

			var normal = face.normal;

			v1.copy( vertices[ face.a ] )
				.add( vertices[ face.b ] )
				.add( vertices[ face.c ] )
				.divideScalar( 3 )
				.applyMatrix4( matrixWorld );

			v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );

			position.setXYZ( idx, v1.x, v1.y, v1.z );

			idx = idx + 1;

			position.setXYZ( idx, v2.x, v2.y, v2.z );

			idx = idx + 1;

		}

		position.needsUpdate = true;

		return this;

	};

}() );

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */

function DirectionalLightHelper( light, size ) {

	Object3D.call( this );

	this.light = light;
	this.light.updateMatrixWorld();

	this.matrix = light.matrixWorld;
	this.matrixAutoUpdate = false;

	if ( size === undefined ) size = 1;

	var geometry = new BufferGeometry();
	geometry.addAttribute( 'position', new Float32BufferAttribute( [
		- size,   size, 0,
		  size,   size, 0,
		  size, - size, 0,
		- size, - size, 0,
		- size,   size, 0
	], 3 ) );

	var material = new LineBasicMaterial( { fog: false } );

	this.add( new Line( geometry, material ) );

	geometry = new BufferGeometry();
	geometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );

	this.add( new Line( geometry, material ));

	this.update();

}

DirectionalLightHelper.prototype = Object.create( Object3D.prototype );
DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;

DirectionalLightHelper.prototype.dispose = function () {

	var lightPlane = this.children[ 0 ];
	var targetLine = this.children[ 1 ];

	lightPlane.geometry.dispose();
	lightPlane.material.dispose();
	targetLine.geometry.dispose();
	targetLine.material.dispose();

};

DirectionalLightHelper.prototype.update = function () {

	var v1 = new Vector3();
	var v2 = new Vector3();
	var v3 = new Vector3();

	return function update() {

		v1.setFromMatrixPosition( this.light.matrixWorld );
		v2.setFromMatrixPosition( this.light.target.matrixWorld );
		v3.subVectors( v2, v1 );

		var lightPlane = this.children[ 0 ];
		var targetLine = this.children[ 1 ];

		lightPlane.lookAt( v3 );
		lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

		targetLine.lookAt( v3 );
		targetLine.scale.z = v3.length();

	};

}();

/**
 * @author alteredq / http://alteredqualia.com/
 * @author Mugen87 / https://github.com/Mugen87
 *
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */

function CameraHelper( camera ) {

	var geometry = new BufferGeometry();
	var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );

	var vertices = [];
	var colors = [];

	var pointMap = {};

	// colors

	var colorFrustum = new Color( 0xffaa00 );
	var colorCone = new Color( 0xff0000 );
	var colorUp = new Color( 0x00aaff );
	var colorTarget = new Color( 0xffffff );
	var colorCross = new Color( 0x333333 );

	// near

	addLine( "n1", "n2", colorFrustum );
	addLine( "n2", "n4", colorFrustum );
	addLine( "n4", "n3", colorFrustum );
	addLine( "n3", "n1", colorFrustum );

	// far

	addLine( "f1", "f2", colorFrustum );
	addLine( "f2", "f4", colorFrustum );
	addLine( "f4", "f3", colorFrustum );
	addLine( "f3", "f1", colorFrustum );

	// sides

	addLine( "n1", "f1", colorFrustum );
	addLine( "n2", "f2", colorFrustum );
	addLine( "n3", "f3", colorFrustum );
	addLine( "n4", "f4", colorFrustum );

	// cone

	addLine( "p", "n1", colorCone );
	addLine( "p", "n2", colorCone );
	addLine( "p", "n3", colorCone );
	addLine( "p", "n4", colorCone );

	// up

	addLine( "u1", "u2", colorUp );
	addLine( "u2", "u3", colorUp );
	addLine( "u3", "u1", colorUp );

	// target

	addLine( "c", "t", colorTarget );
	addLine( "p", "c", colorCross );

	// cross

	addLine( "cn1", "cn2", colorCross );
	addLine( "cn3", "cn4", colorCross );

	addLine( "cf1", "cf2", colorCross );
	addLine( "cf3", "cf4", colorCross );

	function addLine( a, b, color ) {

		addPoint( a, color );
		addPoint( b, color );

	}

	function addPoint( id, color ) {

		vertices.push( 0, 0, 0 );
		colors.push( color.r, color.g, color.b );

		if ( pointMap[ id ] === undefined ) {

			pointMap[ id ] = [];

		}

		pointMap[ id ].push( ( vertices.length / 3 ) - 1 );

	}

	geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

	LineSegments.call( this, geometry, material );

	this.camera = camera;
	if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();

	this.matrix = camera.matrixWorld;
	this.matrixAutoUpdate = false;

	this.pointMap = pointMap;

	this.update();

}

CameraHelper.prototype = Object.create( LineSegments.prototype );
CameraHelper.prototype.constructor = CameraHelper;

CameraHelper.prototype.update = function () {

	var geometry, pointMap;

	var vector = new Vector3();
	var camera = new Camera();

	function setPoint( point, x, y, z ) {

		vector.set( x, y, z ).unproject( camera );

		var points = pointMap[ point ];

		if ( points !== undefined ) {

			var position = geometry.getAttribute( 'position' );

			for ( var i = 0, l = points.length; i < l; i ++ ) {

				position.setXYZ( points[ i ], vector.x, vector.y, vector.z );

			}

		}

	}

	return function update() {

		geometry = this.geometry;
		pointMap = this.pointMap;

		var w = 1, h = 1;

		// we need just camera projection matrix
		// world matrix must be identity

		camera.projectionMatrix.copy( this.camera.projectionMatrix );

		// center / target

		setPoint( "c", 0, 0, - 1 );
		setPoint( "t", 0, 0,  1 );

		// near

		setPoint( "n1", - w, - h, - 1 );
		setPoint( "n2",   w, - h, - 1 );
		setPoint( "n3", - w,   h, - 1 );
		setPoint( "n4",   w,   h, - 1 );

		// far

		setPoint( "f1", - w, - h, 1 );
		setPoint( "f2",   w, - h, 1 );
		setPoint( "f3", - w,   h, 1 );
		setPoint( "f4",   w,   h, 1 );

		// up

		setPoint( "u1",   w * 0.7, h * 1.1, - 1 );
		setPoint( "u2", - w * 0.7, h * 1.1, - 1 );
		setPoint( "u3",         0, h * 2,   - 1 );

		// cross

		setPoint( "cf1", - w,   0, 1 );
		setPoint( "cf2",   w,   0, 1 );
		setPoint( "cf3",   0, - h, 1 );
		setPoint( "cf4",   0,   h, 1 );

		setPoint( "cn1", - w,   0, - 1 );
		setPoint( "cn2",   w,   0, - 1 );
		setPoint( "cn3",   0, - h, - 1 );
		setPoint( "cn4",   0,   h, - 1 );

		geometry.getAttribute( 'position' ).needsUpdate = true;

	};

}();

/**
 * @author mrdoob / http://mrdoob.com/
 */

function BoxHelper( object, color ) {

	if ( color === undefined ) color = 0xffff00;

	var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );
	var positions = new Float32Array( 8 * 3 );

	var geometry = new BufferGeometry();
	geometry.setIndex( new BufferAttribute( indices, 1 ) );
	geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );

	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );

	if ( object !== undefined ) {

		this.update( object );

	}

}

BoxHelper.prototype = Object.create( LineSegments.prototype );
BoxHelper.prototype.constructor = BoxHelper;

BoxHelper.prototype.update = ( function () {

	var box = new Box3();

	return function update( object ) {

		if ( object && object.isBox3 ) {

			box.copy( object );

		} else {

			box.setFromObject( object );

		}

		if ( box.isEmpty() ) return;

		var min = box.min;
		var max = box.max;

		/*
		  5____4
		1/___0/|
		| 6__|_7
		2/___3/

		0: max.x, max.y, max.z
		1: min.x, max.y, max.z
		2: min.x, min.y, max.z
		3: max.x, min.y, max.z
		4: max.x, max.y, min.z
		5: min.x, max.y, min.z
		6: min.x, min.y, min.z
		7: max.x, min.y, min.z
		*/

		var position = this.geometry.attributes.position;
		var array = position.array;

		array[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;
		array[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;
		array[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;
		array[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;
		array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;
		array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;
		array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;
		array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;

		position.needsUpdate = true;

		this.geometry.computeBoundingSphere();

	};

} )();

/**
 * @author WestLangley / http://github.com/WestLangley
 * @author zz85 / http://github.com/zz85
 * @author bhouston / http://clara.io
 *
 * Creates an arrow for visualizing directions
 *
 * Parameters:
 *  dir - Vector3
 *  origin - Vector3
 *  length - Number
 *  color - color in hex value
 *  headLength - Number
 *  headWidth - Number
 */

var lineGeometry;
var coneGeometry;

function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {

	// dir is assumed to be normalized

	Object3D.call( this );

	if ( color === undefined ) color = 0xffff00;
	if ( length === undefined ) length = 1;
	if ( headLength === undefined ) headLength = 0.2 * length;
	if ( headWidth === undefined ) headWidth = 0.2 * headLength;

	if ( lineGeometry === undefined ) {

		lineGeometry = new BufferGeometry();
		lineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );

		coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );
		coneGeometry.translate( 0, - 0.5, 0 );

	}

	this.position.copy( origin );

	this.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );
	this.line.matrixAutoUpdate = false;
	this.add( this.line );

	this.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );
	this.cone.matrixAutoUpdate = false;
	this.add( this.cone );

	this.setDirection( dir );
	this.setLength( length, headLength, headWidth );

}

ArrowHelper.prototype = Object.create( Object3D.prototype );
ArrowHelper.prototype.constructor = ArrowHelper;

ArrowHelper.prototype.setDirection = ( function () {

	var axis = new Vector3();
	var radians;

	return function setDirection( dir ) {

		// dir is assumed to be normalized

		if ( dir.y > 0.99999 ) {

			this.quaternion.set( 0, 0, 0, 1 );

		} else if ( dir.y < - 0.99999 ) {

			this.quaternion.set( 1, 0, 0, 0 );

		} else {

			axis.set( dir.z, 0, - dir.x ).normalize();

			radians = Math.acos( dir.y );

			this.quaternion.setFromAxisAngle( axis, radians );

		}

	};

}() );

ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {

	if ( headLength === undefined ) headLength = 0.2 * length;
	if ( headWidth === undefined ) headWidth = 0.2 * headLength;

	this.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );
	this.line.updateMatrix();

	this.cone.scale.set( headWidth, headLength, headWidth );
	this.cone.position.y = length;
	this.cone.updateMatrix();

};

ArrowHelper.prototype.setColor = function ( color ) {

	this.line.material.color.copy( color );
	this.cone.material.color.copy( color );

};

/**
 * @author sroucheray / http://sroucheray.org/
 * @author mrdoob / http://mrdoob.com/
 */

function AxisHelper( size ) {

	size = size || 1;

	var vertices = [
		0, 0, 0,  size, 0, 0,
		0, 0, 0,  0, size, 0,
		0, 0, 0,  0, 0, size
	];

	var colors = [
		1, 0, 0,  1, 0.6, 0,
		0, 1, 0,  0.6, 1, 0,
		0, 0, 1,  0, 0.6, 1
	];

	var geometry = new BufferGeometry();
	geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

	var material = new LineBasicMaterial( { vertexColors: VertexColors } );

	LineSegments.call( this, geometry, material );

}

AxisHelper.prototype = Object.create( LineSegments.prototype );
AxisHelper.prototype.constructor = AxisHelper;

/**
 * @author zz85 https://github.com/zz85
 *
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */


/*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/

function CubicPoly() {

	var c0 = 0, c1 = 0, c2 = 0, c3 = 0;

	/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */
	function init( x0, x1, t0, t1 ) {

		c0 = x0;
		c1 = t0;
		c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;
		c3 = 2 * x0 - 2 * x1 + t0 + t1;

	}

	return {

		initCatmullRom: function ( x0, x1, x2, x3, tension ) {

			init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );

		},

		initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {

			// compute tangents when parameterized in [t1,t2]
			var t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;
			var t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;

			// rescale tangents for parametrization in [0,1]
			t1 *= dt1;
			t2 *= dt1;

			init( x1, x2, t1, t2 );

		},

		calc: function ( t ) {

			var t2 = t * t;
			var t3 = t2 * t;
			return c0 + c1 * t + c2 * t2 + c3 * t3;

		}

	};

}

//

var tmp = new Vector3();
var px$1 = new CubicPoly();
var py = new CubicPoly();
var pz = new CubicPoly();

function CatmullRomCurve3( p /* array of Vector3 */ ) {

	Curve.call( this );

	this.points = p || [];
	this.closed = false;

}

CatmullRomCurve3.prototype = Object.create( Curve.prototype );
CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;

CatmullRomCurve3.prototype.getPoint = function ( t ) {

	var points = this.points;
	var l = points.length;

	if ( l < 2 ) console.log( 'duh, you need at least 2 points' );

	var point = ( l - ( this.closed ? 0 : 1 ) ) * t;
	var intPoint = Math.floor( point );
	var weight = point - intPoint;

	if ( this.closed ) {

		intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;

	} else if ( weight === 0 && intPoint === l - 1 ) {

		intPoint = l - 2;
		weight = 1;

	}

	var p0, p1, p2, p3; // 4 points

	if ( this.closed || intPoint > 0 ) {

		p0 = points[ ( intPoint - 1 ) % l ];

	} else {

		// extrapolate first point
		tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );
		p0 = tmp;

	}

	p1 = points[ intPoint % l ];
	p2 = points[ ( intPoint + 1 ) % l ];

	if ( this.closed || intPoint + 2 < l ) {

		p3 = points[ ( intPoint + 2 ) % l ];

	} else {

		// extrapolate last point
		tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );
		p3 = tmp;

	}

	if ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {

		// init Centripetal / Chordal Catmull-Rom
		var pow = this.type === 'chordal' ? 0.5 : 0.25;
		var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );
		var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );
		var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );

		// safety check for repeated points
		if ( dt1 < 1e-4 ) dt1 = 1.0;
		if ( dt0 < 1e-4 ) dt0 = dt1;
		if ( dt2 < 1e-4 ) dt2 = dt1;

		px$1.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );
		py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );
		pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );

	} else if ( this.type === 'catmullrom' ) {

		var tension = this.tension !== undefined ? this.tension : 0.5;
		px$1.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );
		py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );
		pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );

	}

	return new Vector3( px$1.calc( weight ), py.calc( weight ), pz.calc( weight ) );

};

function CubicBezierCurve3( v0, v1, v2, v3 ) {

	Curve.call( this );

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;
	this.v3 = v3;

}

CubicBezierCurve3.prototype = Object.create( Curve.prototype );
CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;

CubicBezierCurve3.prototype.getPoint = function ( t ) {

	var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

	return new Vector3(
		CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
		CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),
		CubicBezier( t, v0.z, v1.z, v2.z, v3.z )
	);

};

function QuadraticBezierCurve3( v0, v1, v2 ) {

	Curve.call( this );

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;

}

QuadraticBezierCurve3.prototype = Object.create( Curve.prototype );
QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;

QuadraticBezierCurve3.prototype.getPoint = function ( t ) {

	var v0 = this.v0, v1 = this.v1, v2 = this.v2;

	return new Vector3(
		QuadraticBezier( t, v0.x, v1.x, v2.x ),
		QuadraticBezier( t, v0.y, v1.y, v2.y ),
		QuadraticBezier( t, v0.z, v1.z, v2.z )
	);

};

function LineCurve3( v1, v2 ) {

	Curve.call( this );

	this.v1 = v1;
	this.v2 = v2;

}

LineCurve3.prototype = Object.create( Curve.prototype );
LineCurve3.prototype.constructor = LineCurve3;

LineCurve3.prototype.getPoint = function ( t ) {

	if ( t === 1 ) {

		return this.v2.clone();

	}

	var vector = new Vector3();

	vector.subVectors( this.v2, this.v1 ); // diff
	vector.multiplyScalar( t );
	vector.add( this.v1 );

	return vector;

};

function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

	EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

}

ArcCurve.prototype = Object.create( EllipseCurve.prototype );
ArcCurve.prototype.constructor = ArcCurve;

/**
 * @author alteredq / http://alteredqualia.com/
 */

var SceneUtils = {

	createMultiMaterialObject: function ( geometry, materials ) {

		var group = new Group();

		for ( var i = 0, l = materials.length; i < l; i ++ ) {

			group.add( new Mesh( geometry, materials[ i ] ) );

		}

		return group;

	},

	detach: function ( child, parent, scene ) {

		child.applyMatrix( parent.matrixWorld );
		parent.remove( child );
		scene.add( child );

	},

	attach: function ( child, scene, parent ) {

		var matrixWorldInverse = new Matrix4();
		matrixWorldInverse.getInverse( parent.matrixWorld );
		child.applyMatrix( matrixWorldInverse );

		scene.remove( child );
		parent.add( child );

	}

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

function Face4( a, b, c, d, normal, color, materialIndex ) {

	console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );
	return new Face3( a, b, c, normal, color, materialIndex );

}

var LineStrip = 0;

var LinePieces = 1;

function MeshFaceMaterial( materials ) {

	console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );
	return materials;

}

function MultiMaterial( materials ) {

	if ( materials === undefined ) materials = [];

	console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );
	materials.isMultiMaterial = true;
	materials.materials = materials;
	materials.clone = function () {

		return materials.slice();

	};
	return materials;

}

function PointCloud( geometry, material ) {

	console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function Particle( material ) {

	console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );
	return new Sprite( material );

}

function ParticleSystem( geometry, material ) {

	console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function PointCloudMaterial( parameters ) {

	console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleBasicMaterial( parameters ) {

	console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleSystemMaterial( parameters ) {

	console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function Vertex( x, y, z ) {

	console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );
	return new Vector3( x, y, z );

}

//

function DynamicBufferAttribute( array, itemSize ) {

	console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );
	return new BufferAttribute( array, itemSize ).setDynamic( true );

}

function Int8Attribute( array, itemSize ) {

	console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );
	return new Int8BufferAttribute( array, itemSize );

}

function Uint8Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );
	return new Uint8BufferAttribute( array, itemSize );

}

function Uint8ClampedAttribute( array, itemSize ) {

	console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );
	return new Uint8ClampedBufferAttribute( array, itemSize );

}

function Int16Attribute( array, itemSize ) {

	console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );
	return new Int16BufferAttribute( array, itemSize );

}

function Uint16Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );
	return new Uint16BufferAttribute( array, itemSize );

}

function Int32Attribute( array, itemSize ) {

	console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );
	return new Int32BufferAttribute( array, itemSize );

}

function Uint32Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );
	return new Uint32BufferAttribute( array, itemSize );

}

function Float32Attribute( array, itemSize ) {

	console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );
	return new Float32BufferAttribute( array, itemSize );

}

function Float64Attribute( array, itemSize ) {

	console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );
	return new Float64BufferAttribute( array, itemSize );

}

//

Curve.create = function ( construct, getPoint ) {

	console.log( 'THREE.Curve.create() has been deprecated' );

	construct.prototype = Object.create( Curve.prototype );
	construct.prototype.constructor = construct;
	construct.prototype.getPoint = getPoint;

	return construct;

};

//

function ClosedSplineCurve3( points ) {

	console.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );

	CatmullRomCurve3.call( this, points );
	this.type = 'catmullrom';
	this.closed = true;

}

ClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );

//

function SplineCurve3( points ) {

	console.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );

	CatmullRomCurve3.call( this, points );
	this.type = 'catmullrom';

}

SplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );

//

function Spline( points ) {

	console.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );

	CatmullRomCurve3.call( this, points );
	this.type = 'catmullrom';

}

Spline.prototype = Object.create( CatmullRomCurve3.prototype );

Object.assign( Spline.prototype, {

	initFromArray: function ( a ) {

		console.error( 'THREE.Spline: .initFromArray() has been removed.' );

	},
	getControlPointsArray: function ( optionalTarget ) {

		console.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );

	},
	reparametrizeByArcLength: function ( samplingCoef ) {

		console.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );

	}

} );

//
function BoundingBoxHelper( object, color ) {

	console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );
	return new BoxHelper( object, color );

}

function EdgesHelper( object, hex ) {

	console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );
	return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

GridHelper.prototype.setColors = function () {

	console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );

};

function WireframeHelper( object, hex ) {

	console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );
	return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

//

function XHRLoader( manager ) {

	console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );
	return new FileLoader( manager );

}

function BinaryTextureLoader( manager ) {

	console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );
	return new DataTextureLoader( manager );

}

//

Object.assign( Box2.prototype, {

	center: function ( optionalTarget ) {

		console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );
		return this.getCenter( optionalTarget );

	},
	empty: function () {

		console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );
		return this.isEmpty();

	},
	isIntersectionBox: function ( box ) {

		console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );
		return this.intersectsBox( box );

	},
	size: function ( optionalTarget ) {

		console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );
		return this.getSize( optionalTarget );

	}
} );

Object.assign( Box3.prototype, {

	center: function ( optionalTarget ) {

		console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );
		return this.getCenter( optionalTarget );

	},
	empty: function () {

		console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );
		return this.isEmpty();

	},
	isIntersectionBox: function ( box ) {

		console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );
		return this.intersectsBox( box );

	},
	isIntersectionSphere: function ( sphere ) {

		console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
		return this.intersectsSphere( sphere );

	},
	size: function ( optionalTarget ) {

		console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );
		return this.getSize( optionalTarget );

	}
} );

Line3.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

_Math.random16 = function () {

	console.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );
	return Math.random();

};

Object.assign( Matrix3.prototype, {

	flattenToArrayOffset: function ( array, offset ) {

		console.warn( "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." );
		return this.toArray( array, offset );

	},
	multiplyVector3: function ( vector ) {

		console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
		return vector.applyMatrix3( this );

	},
	multiplyVector3Array: function ( a ) {

		console.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );
		return this.applyToVector3Array( a );

	},
	applyToBuffer: function( buffer, offset, length ) {

		console.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );
		return this.applyToBufferAttribute( buffer );

	},
	applyToVector3Array: function( array, offset, length ) {

		console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );

	}

} );

Object.assign( Matrix4.prototype, {

	extractPosition: function ( m ) {

		console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );
		return this.copyPosition( m );

	},
	flattenToArrayOffset: function ( array, offset ) {

		console.warn( "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." );
		return this.toArray( array, offset );

	},
	getPosition: function () {

		var v1;

		return function getPosition() {

			if ( v1 === undefined ) v1 = new Vector3();
			console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );
			return v1.setFromMatrixColumn( this, 3 );

		};

	}(),
	setRotationFromQuaternion: function ( q ) {

		console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );
		return this.makeRotationFromQuaternion( q );

	},
	multiplyToArray: function () {

		console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );

	},
	multiplyVector3: function ( vector ) {

		console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
		return vector.applyMatrix4( this );

	},
	multiplyVector4: function ( vector ) {

		console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
		return vector.applyMatrix4( this );

	},
	multiplyVector3Array: function ( a ) {

		console.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );
		return this.applyToVector3Array( a );

	},
	rotateAxis: function ( v ) {

		console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );
		v.transformDirection( this );

	},
	crossVector: function ( vector ) {

		console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
		return vector.applyMatrix4( this );

	},
	translate: function () {

		console.error( 'THREE.Matrix4: .translate() has been removed.' );

	},
	rotateX: function () {

		console.error( 'THREE.Matrix4: .rotateX() has been removed.' );

	},
	rotateY: function () {

		console.error( 'THREE.Matrix4: .rotateY() has been removed.' );

	},
	rotateZ: function () {

		console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );

	},
	rotateByAxis: function () {

		console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );

	},
	applyToBuffer: function( buffer, offset, length ) {

		console.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );
		return this.applyToBufferAttribute( buffer );

	},
	applyToVector3Array: function( array, offset, length ) {

		console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );

	},
	makeFrustum: function( left, right, bottom, top, near, far ) {

		console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );
		return this.makePerspective( left, right, top, bottom, near, far );

	}

} );

Plane.prototype.isIntersectionLine = function ( line ) {

	console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );
	return this.intersectsLine( line );

};

Quaternion.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
	return vector.applyQuaternion( this );

};

Object.assign( Ray.prototype, {

	isIntersectionBox: function ( box ) {

		console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );
		return this.intersectsBox( box );

	},
	isIntersectionPlane: function ( plane ) {

		console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );
		return this.intersectsPlane( plane );

	},
	isIntersectionSphere: function ( sphere ) {

		console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
		return this.intersectsSphere( sphere );

	}

} );

Object.assign( Shape.prototype, {

	extrude: function ( options ) {

		console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );
		return new ExtrudeGeometry( this, options );

	},
	makeGeometry: function ( options ) {

		console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );
		return new ShapeGeometry( this, options );

	}

} );

Object.assign( Vector2.prototype, {

	fromAttribute: function ( attribute, index, offset ) {

		console.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );
		return this.fromBufferAttribute( attribute, index, offset );

	}

} );

Object.assign( Vector3.prototype, {

	setEulerFromRotationMatrix: function () {

		console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );

	},
	setEulerFromQuaternion: function () {

		console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );

	},
	getPositionFromMatrix: function ( m ) {

		console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );
		return this.setFromMatrixPosition( m );

	},
	getScaleFromMatrix: function ( m ) {

		console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );
		return this.setFromMatrixScale( m );

	},
	getColumnFromMatrix: function ( index, matrix ) {

		console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );
		return this.setFromMatrixColumn( matrix, index );

	},
	applyProjection: function ( m ) {

		console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );
		return this.applyMatrix4( m );

	},
	fromAttribute: function ( attribute, index, offset ) {

		console.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );
		return this.fromBufferAttribute( attribute, index, offset );

	}

} );

Object.assign( Vector4.prototype, {

	fromAttribute: function ( attribute, index, offset ) {

		console.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );
		return this.fromBufferAttribute( attribute, index, offset );

	}

} );

//

Geometry.prototype.computeTangents = function () {

	console.warn( 'THREE.Geometry: .computeTangents() has been removed.' );

};

Object.assign( Object3D.prototype, {

	getChildByName: function ( name ) {

		console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );
		return this.getObjectByName( name );

	},
	renderDepth: function () {

		console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );

	},
	translate: function ( distance, axis ) {

		console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );
		return this.translateOnAxis( axis, distance );

	}

} );

Object.defineProperties( Object3D.prototype, {

	eulerOrder: {
		get: function () {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			return this.rotation.order;

		},
		set: function ( value ) {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			this.rotation.order = value;

		}
	},
	useQuaternion: {
		get: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		},
		set: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		}
	}

} );

Object.defineProperties( LOD.prototype, {

	objects: {
		get: function () {

			console.warn( 'THREE.LOD: .objects has been renamed to .levels.' );
			return this.levels;

		}
	}

} );

Object.defineProperty( Skeleton.prototype, 'useVertexTexture', {

	get: function () {

		console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

	},
	set: function () {

		console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

	}

} );

Object.defineProperty( Curve.prototype, '__arcLengthDivisions', {

	get: function () {

		console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
		return this.arcLengthDivisions;

	},
	set: function ( value ) {

		console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
		this.arcLengthDivisions = value;

	}

} );

//

PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {

	console.warn( "THREE.PerspectiveCamera.setLens is deprecated. " +
			"Use .setFocalLength and .filmGauge for a photographic setup." );

	if ( filmGauge !== undefined ) this.filmGauge = filmGauge;
	this.setFocalLength( focalLength );

};

//

Object.defineProperties( Light.prototype, {
	onlyShadow: {
		set: function () {

			console.warn( 'THREE.Light: .onlyShadow has been removed.' );

		}
	},
	shadowCameraFov: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );
			this.shadow.camera.fov = value;

		}
	},
	shadowCameraLeft: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );
			this.shadow.camera.left = value;

		}
	},
	shadowCameraRight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );
			this.shadow.camera.right = value;

		}
	},
	shadowCameraTop: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );
			this.shadow.camera.top = value;

		}
	},
	shadowCameraBottom: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );
			this.shadow.camera.bottom = value;

		}
	},
	shadowCameraNear: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );
			this.shadow.camera.near = value;

		}
	},
	shadowCameraFar: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );
			this.shadow.camera.far = value;

		}
	},
	shadowCameraVisible: {
		set: function () {

			console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );

		}
	},
	shadowBias: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );
			this.shadow.bias = value;

		}
	},
	shadowDarkness: {
		set: function () {

			console.warn( 'THREE.Light: .shadowDarkness has been removed.' );

		}
	},
	shadowMapWidth: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );
			this.shadow.mapSize.width = value;

		}
	},
	shadowMapHeight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );
			this.shadow.mapSize.height = value;

		}
	}
} );

//

Object.defineProperties( BufferAttribute.prototype, {

	length: {
		get: function () {

			console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );
			return this.array.length;

		}
	}

} );

Object.assign( BufferGeometry.prototype, {

	addIndex: function ( index ) {

		console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );
		this.setIndex( index );

	},
	addDrawCall: function ( start, count, indexOffset ) {

		if ( indexOffset !== undefined ) {

			console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );

		}
		console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );
		this.addGroup( start, count );

	},
	clearDrawCalls: function () {

		console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );
		this.clearGroups();

	},
	computeTangents: function () {

		console.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );

	},
	computeOffsets: function () {

		console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );

	}

} );

Object.defineProperties( BufferGeometry.prototype, {

	drawcalls: {
		get: function () {

			console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );
			return this.groups;

		}
	},
	offsets: {
		get: function () {

			console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );
			return this.groups;

		}
	}

} );

//

Object.defineProperties( Uniform.prototype, {

	dynamic: {
		set: function () {

			console.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );

		}
	},
	onUpdate: {
		value: function () {

			console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );
			return this;

		}
	}

} );

//

Object.defineProperties( Material.prototype, {

	wrapAround: {
		get: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		}
	},
	wrapRGB: {
		get: function () {

			console.warn( 'THREE.Material: .wrapRGB has been removed.' );
			return new Color();

		}
	}

} );

Object.defineProperties( MeshPhongMaterial.prototype, {

	metal: {
		get: function () {

			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );
			return false;

		},
		set: function () {

			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );

		}
	}

} );

Object.defineProperties( ShaderMaterial.prototype, {

	derivatives: {
		get: function () {

			console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			return this.extensions.derivatives;

		},
		set: function ( value ) {

			console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			this.extensions.derivatives = value;

		}
	}

} );

//

Object.assign( WebGLRenderer.prototype, {

	getCurrentRenderTarget: function () {

		console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );
		return this.getRenderTarget();

	},

	supportsFloatTextures: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' );
		return this.extensions.get( 'OES_texture_float' );

	},
	supportsHalfFloatTextures: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' );
		return this.extensions.get( 'OES_texture_half_float' );

	},
	supportsStandardDerivatives: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' );
		return this.extensions.get( 'OES_standard_derivatives' );

	},
	supportsCompressedTextureS3TC: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' );
		return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );

	},
	supportsCompressedTexturePVRTC: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' );
		return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );

	},
	supportsBlendMinMax: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' );
		return this.extensions.get( 'EXT_blend_minmax' );

	},
	supportsVertexTextures: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );
		return this.capabilities.vertexTextures;

	},
	supportsInstancedArrays: function () {

		console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' );
		return this.extensions.get( 'ANGLE_instanced_arrays' );

	},
	enableScissorTest: function ( boolean ) {

		console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );
		this.setScissorTest( boolean );

	},
	initMaterial: function () {

		console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );

	},
	addPrePlugin: function () {

		console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );

	},
	addPostPlugin: function () {

		console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );

	},
	updateShadowMap: function () {

		console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );

	}

} );

Object.defineProperties( WebGLRenderer.prototype, {

	shadowMapEnabled: {
		get: function () {

			return this.shadowMap.enabled;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );
			this.shadowMap.enabled = value;

		}
	},
	shadowMapType: {
		get: function () {

			return this.shadowMap.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );
			this.shadowMap.type = value;

		}
	},
	shadowMapCullFace: {
		get: function () {

			return this.shadowMap.cullFace;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );
			this.shadowMap.cullFace = value;

		}
	}
} );

Object.defineProperties( WebGLShadowMap.prototype, {

	cullFace: {
		get: function () {

			return this.renderReverseSided ? CullFaceFront : CullFaceBack;

		},
		set: function ( cullFace ) {

			var value = ( cullFace !== CullFaceBack );
			console.warn( "WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + value + "." );
			this.renderReverseSided = value;

		}
	}

} );

//

Object.defineProperties( WebGLRenderTarget.prototype, {

	wrapS: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			return this.texture.wrapS;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			this.texture.wrapS = value;

		}
	},
	wrapT: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			return this.texture.wrapT;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			this.texture.wrapT = value;

		}
	},
	magFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			return this.texture.magFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			this.texture.magFilter = value;

		}
	},
	minFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			return this.texture.minFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			this.texture.minFilter = value;

		}
	},
	anisotropy: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			return this.texture.anisotropy;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			this.texture.anisotropy = value;

		}
	},
	offset: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			return this.texture.offset;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			this.texture.offset = value;

		}
	},
	repeat: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			return this.texture.repeat;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			this.texture.repeat = value;

		}
	},
	format: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			return this.texture.format;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			this.texture.format = value;

		}
	},
	type: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			return this.texture.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			this.texture.type = value;

		}
	},
	generateMipmaps: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			return this.texture.generateMipmaps;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			this.texture.generateMipmaps = value;

		}
	}

} );

//

Audio.prototype.load = function ( file ) {

	console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );
	var scope = this;
	var audioLoader = new AudioLoader();
	audioLoader.load( file, function ( buffer ) {

		scope.setBuffer( buffer );

	} );
	return this;

};

AudioAnalyser.prototype.getData = function () {

	console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );
	return this.getFrequencyData();

};

//

var GeometryUtils = {

	merge: function ( geometry1, geometry2, materialIndexOffset ) {

		console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );
		var matrix;

		if ( geometry2.isMesh ) {

			geometry2.matrixAutoUpdate && geometry2.updateMatrix();

			matrix = geometry2.matrix;
			geometry2 = geometry2.geometry;

		}

		geometry1.merge( geometry2, matrix, materialIndexOffset );

	},

	center: function ( geometry ) {

		console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );
		return geometry.center();

	}

};

var ImageUtils = {

	crossOrigin: undefined,

	loadTexture: function ( url, mapping, onLoad, onError ) {

		console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );

		var loader = new TextureLoader();
		loader.setCrossOrigin( this.crossOrigin );

		var texture = loader.load( url, onLoad, undefined, onError );

		if ( mapping ) texture.mapping = mapping;

		return texture;

	},

	loadTextureCube: function ( urls, mapping, onLoad, onError ) {

		console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );

		var loader = new CubeTextureLoader();
		loader.setCrossOrigin( this.crossOrigin );

		var texture = loader.load( urls, onLoad, undefined, onError );

		if ( mapping ) texture.mapping = mapping;

		return texture;

	},

	loadCompressedTexture: function () {

		console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );

	},

	loadCompressedTextureCube: function () {

		console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );

	}

};

//

function Projector() {

	console.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );

	this.projectVector = function ( vector, camera ) {

		console.warn( 'THREE.Projector: .projectVector() is now vector.project().' );
		vector.project( camera );

	};

	this.unprojectVector = function ( vector, camera ) {

		console.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );
		vector.unproject( camera );

	};

	this.pickingRay = function () {

		console.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );

	};

}

//

function CanvasRenderer() {

	console.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );

	this.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	this.clear = function () {};
	this.render = function () {};
	this.setClearColor = function () {};
	this.setSize = function () {};

}




var three_module = Object.freeze({
	WebGLRenderTargetCube: WebGLRenderTargetCube,
	WebGLRenderTarget: WebGLRenderTarget,
	WebGLRenderer: WebGLRenderer,
	ShaderLib: ShaderLib,
	UniformsLib: UniformsLib,
	UniformsUtils: UniformsUtils,
	ShaderChunk: ShaderChunk,
	FogExp2: FogExp2,
	Fog: Fog,
	Scene: Scene,
	LensFlare: LensFlare,
	Sprite: Sprite,
	LOD: LOD,
	SkinnedMesh: SkinnedMesh,
	Skeleton: Skeleton,
	Bone: Bone,
	Mesh: Mesh,
	LineSegments: LineSegments,
	LineLoop: LineLoop,
	Line: Line,
	Points: Points,
	Group: Group,
	VideoTexture: VideoTexture,
	DataTexture: DataTexture,
	CompressedTexture: CompressedTexture,
	CubeTexture: CubeTexture,
	CanvasTexture: CanvasTexture,
	DepthTexture: DepthTexture,
	Texture: Texture,
	CompressedTextureLoader: CompressedTextureLoader,
	DataTextureLoader: DataTextureLoader,
	CubeTextureLoader: CubeTextureLoader,
	TextureLoader: TextureLoader,
	ObjectLoader: ObjectLoader,
	MaterialLoader: MaterialLoader,
	BufferGeometryLoader: BufferGeometryLoader,
	DefaultLoadingManager: DefaultLoadingManager,
	LoadingManager: LoadingManager,
	JSONLoader: JSONLoader,
	ImageLoader: ImageLoader,
	FontLoader: FontLoader,
	FileLoader: FileLoader,
	Loader: Loader,
	Cache: Cache,
	AudioLoader: AudioLoader,
	SpotLightShadow: SpotLightShadow,
	SpotLight: SpotLight,
	PointLight: PointLight,
	RectAreaLight: RectAreaLight,
	HemisphereLight: HemisphereLight,
	DirectionalLightShadow: DirectionalLightShadow,
	DirectionalLight: DirectionalLight,
	AmbientLight: AmbientLight,
	LightShadow: LightShadow,
	Light: Light,
	StereoCamera: StereoCamera,
	PerspectiveCamera: PerspectiveCamera,
	OrthographicCamera: OrthographicCamera,
	CubeCamera: CubeCamera,
	ArrayCamera: ArrayCamera,
	Camera: Camera,
	AudioListener: AudioListener,
	PositionalAudio: PositionalAudio,
	AudioContext: AudioContext,
	AudioAnalyser: AudioAnalyser,
	Audio: Audio,
	VectorKeyframeTrack: VectorKeyframeTrack,
	StringKeyframeTrack: StringKeyframeTrack,
	QuaternionKeyframeTrack: QuaternionKeyframeTrack,
	NumberKeyframeTrack: NumberKeyframeTrack,
	ColorKeyframeTrack: ColorKeyframeTrack,
	BooleanKeyframeTrack: BooleanKeyframeTrack,
	PropertyMixer: PropertyMixer,
	PropertyBinding: PropertyBinding,
	KeyframeTrack: KeyframeTrack,
	AnimationUtils: AnimationUtils,
	AnimationObjectGroup: AnimationObjectGroup,
	AnimationMixer: AnimationMixer,
	AnimationClip: AnimationClip,
	Uniform: Uniform,
	InstancedBufferGeometry: InstancedBufferGeometry,
	BufferGeometry: BufferGeometry,
	GeometryIdCount: GeometryIdCount,
	Geometry: Geometry,
	InterleavedBufferAttribute: InterleavedBufferAttribute,
	InstancedInterleavedBuffer: InstancedInterleavedBuffer,
	InterleavedBuffer: InterleavedBuffer,
	InstancedBufferAttribute: InstancedBufferAttribute,
	Face3: Face3,
	Object3D: Object3D,
	Raycaster: Raycaster,
	Layers: Layers,
	EventDispatcher: EventDispatcher,
	Clock: Clock,
	QuaternionLinearInterpolant: QuaternionLinearInterpolant,
	LinearInterpolant: LinearInterpolant,
	DiscreteInterpolant: DiscreteInterpolant,
	CubicInterpolant: CubicInterpolant,
	Interpolant: Interpolant,
	Triangle: Triangle,
	Math: _Math,
	Spherical: Spherical,
	Cylindrical: Cylindrical,
	Plane: Plane,
	Frustum: Frustum,
	Sphere: Sphere$2,
	Ray: Ray,
	Matrix4: Matrix4,
	Matrix3: Matrix3,
	Box3: Box3,
	Box2: Box2,
	Line3: Line3,
	Euler: Euler,
	Vector4: Vector4,
	Vector3: Vector3,
	Vector2: Vector2,
	Quaternion: Quaternion,
	Color: Color,
	MorphBlendMesh: MorphBlendMesh,
	ImmediateRenderObject: ImmediateRenderObject,
	VertexNormalsHelper: VertexNormalsHelper,
	SpotLightHelper: SpotLightHelper,
	SkeletonHelper: SkeletonHelper,
	PointLightHelper: PointLightHelper,
	RectAreaLightHelper: RectAreaLightHelper,
	HemisphereLightHelper: HemisphereLightHelper,
	GridHelper: GridHelper,
	PolarGridHelper: PolarGridHelper,
	FaceNormalsHelper: FaceNormalsHelper,
	DirectionalLightHelper: DirectionalLightHelper,
	CameraHelper: CameraHelper,
	BoxHelper: BoxHelper,
	ArrowHelper: ArrowHelper,
	AxisHelper: AxisHelper,
	CatmullRomCurve3: CatmullRomCurve3,
	CubicBezierCurve3: CubicBezierCurve3,
	QuadraticBezierCurve3: QuadraticBezierCurve3,
	LineCurve3: LineCurve3,
	ArcCurve: ArcCurve,
	EllipseCurve: EllipseCurve,
	SplineCurve: SplineCurve,
	CubicBezierCurve: CubicBezierCurve,
	QuadraticBezierCurve: QuadraticBezierCurve,
	LineCurve: LineCurve,
	Shape: Shape,
	Path: Path,
	ShapePath: ShapePath,
	Font: Font,
	CurvePath: CurvePath,
	Curve: Curve,
	ShapeUtils: ShapeUtils,
	SceneUtils: SceneUtils,
	WireframeGeometry: WireframeGeometry,
	ParametricGeometry: ParametricGeometry,
	ParametricBufferGeometry: ParametricBufferGeometry,
	TetrahedronGeometry: TetrahedronGeometry,
	TetrahedronBufferGeometry: TetrahedronBufferGeometry,
	OctahedronGeometry: OctahedronGeometry,
	OctahedronBufferGeometry: OctahedronBufferGeometry,
	IcosahedronGeometry: IcosahedronGeometry,
	IcosahedronBufferGeometry: IcosahedronBufferGeometry,
	DodecahedronGeometry: DodecahedronGeometry,
	DodecahedronBufferGeometry: DodecahedronBufferGeometry,
	PolyhedronGeometry: PolyhedronGeometry,
	PolyhedronBufferGeometry: PolyhedronBufferGeometry,
	TubeGeometry: TubeGeometry,
	TubeBufferGeometry: TubeBufferGeometry,
	TorusKnotGeometry: TorusKnotGeometry,
	TorusKnotBufferGeometry: TorusKnotBufferGeometry,
	TorusGeometry: TorusGeometry,
	TorusBufferGeometry: TorusBufferGeometry,
	TextGeometry: TextGeometry,
	TextBufferGeometry: TextBufferGeometry,
	SphereGeometry: SphereGeometry,
	SphereBufferGeometry: SphereBufferGeometry,
	RingGeometry: RingGeometry,
	RingBufferGeometry: RingBufferGeometry,
	PlaneGeometry: PlaneGeometry,
	PlaneBufferGeometry: PlaneBufferGeometry,
	LatheGeometry: LatheGeometry,
	LatheBufferGeometry: LatheBufferGeometry,
	ShapeGeometry: ShapeGeometry,
	ShapeBufferGeometry: ShapeBufferGeometry,
	ExtrudeGeometry: ExtrudeGeometry,
	ExtrudeBufferGeometry: ExtrudeBufferGeometry,
	EdgesGeometry: EdgesGeometry,
	ConeGeometry: ConeGeometry,
	ConeBufferGeometry: ConeBufferGeometry,
	CylinderGeometry: CylinderGeometry,
	CylinderBufferGeometry: CylinderBufferGeometry,
	CircleGeometry: CircleGeometry,
	CircleBufferGeometry: CircleBufferGeometry,
	BoxGeometry: BoxGeometry,
	BoxBufferGeometry: BoxBufferGeometry,
	ShadowMaterial: ShadowMaterial,
	SpriteMaterial: SpriteMaterial,
	RawShaderMaterial: RawShaderMaterial,
	ShaderMaterial: ShaderMaterial,
	PointsMaterial: PointsMaterial,
	MeshPhysicalMaterial: MeshPhysicalMaterial,
	MeshStandardMaterial: MeshStandardMaterial,
	MeshPhongMaterial: MeshPhongMaterial,
	MeshToonMaterial: MeshToonMaterial,
	MeshNormalMaterial: MeshNormalMaterial,
	MeshLambertMaterial: MeshLambertMaterial,
	MeshDepthMaterial: MeshDepthMaterial,
	MeshBasicMaterial: MeshBasicMaterial,
	LineDashedMaterial: LineDashedMaterial,
	LineBasicMaterial: LineBasicMaterial,
	Material: Material,
	Float64BufferAttribute: Float64BufferAttribute,
	Float32BufferAttribute: Float32BufferAttribute,
	Uint32BufferAttribute: Uint32BufferAttribute,
	Int32BufferAttribute: Int32BufferAttribute,
	Uint16BufferAttribute: Uint16BufferAttribute,
	Int16BufferAttribute: Int16BufferAttribute,
	Uint8ClampedBufferAttribute: Uint8ClampedBufferAttribute,
	Uint8BufferAttribute: Uint8BufferAttribute,
	Int8BufferAttribute: Int8BufferAttribute,
	BufferAttribute: BufferAttribute,
	REVISION: REVISION,
	MOUSE: MOUSE,
	CullFaceNone: CullFaceNone,
	CullFaceBack: CullFaceBack,
	CullFaceFront: CullFaceFront,
	CullFaceFrontBack: CullFaceFrontBack,
	FrontFaceDirectionCW: FrontFaceDirectionCW,
	FrontFaceDirectionCCW: FrontFaceDirectionCCW,
	BasicShadowMap: BasicShadowMap,
	PCFShadowMap: PCFShadowMap,
	PCFSoftShadowMap: PCFSoftShadowMap,
	FrontSide: FrontSide,
	BackSide: BackSide,
	DoubleSide: DoubleSide,
	FlatShading: FlatShading,
	SmoothShading: SmoothShading,
	NoColors: NoColors,
	FaceColors: FaceColors,
	VertexColors: VertexColors,
	NoBlending: NoBlending,
	NormalBlending: NormalBlending,
	AdditiveBlending: AdditiveBlending,
	SubtractiveBlending: SubtractiveBlending,
	MultiplyBlending: MultiplyBlending,
	CustomBlending: CustomBlending,
	AddEquation: AddEquation,
	SubtractEquation: SubtractEquation,
	ReverseSubtractEquation: ReverseSubtractEquation,
	MinEquation: MinEquation,
	MaxEquation: MaxEquation,
	ZeroFactor: ZeroFactor,
	OneFactor: OneFactor,
	SrcColorFactor: SrcColorFactor,
	OneMinusSrcColorFactor: OneMinusSrcColorFactor,
	SrcAlphaFactor: SrcAlphaFactor,
	OneMinusSrcAlphaFactor: OneMinusSrcAlphaFactor,
	DstAlphaFactor: DstAlphaFactor,
	OneMinusDstAlphaFactor: OneMinusDstAlphaFactor,
	DstColorFactor: DstColorFactor,
	OneMinusDstColorFactor: OneMinusDstColorFactor,
	SrcAlphaSaturateFactor: SrcAlphaSaturateFactor,
	NeverDepth: NeverDepth,
	AlwaysDepth: AlwaysDepth,
	LessDepth: LessDepth,
	LessEqualDepth: LessEqualDepth,
	EqualDepth: EqualDepth,
	GreaterEqualDepth: GreaterEqualDepth,
	GreaterDepth: GreaterDepth,
	NotEqualDepth: NotEqualDepth,
	MultiplyOperation: MultiplyOperation,
	MixOperation: MixOperation,
	AddOperation: AddOperation,
	NoToneMapping: NoToneMapping,
	LinearToneMapping: LinearToneMapping,
	ReinhardToneMapping: ReinhardToneMapping,
	Uncharted2ToneMapping: Uncharted2ToneMapping,
	CineonToneMapping: CineonToneMapping,
	UVMapping: UVMapping,
	CubeReflectionMapping: CubeReflectionMapping,
	CubeRefractionMapping: CubeRefractionMapping,
	EquirectangularReflectionMapping: EquirectangularReflectionMapping,
	EquirectangularRefractionMapping: EquirectangularRefractionMapping,
	SphericalReflectionMapping: SphericalReflectionMapping,
	CubeUVReflectionMapping: CubeUVReflectionMapping,
	CubeUVRefractionMapping: CubeUVRefractionMapping,
	RepeatWrapping: RepeatWrapping,
	ClampToEdgeWrapping: ClampToEdgeWrapping,
	MirroredRepeatWrapping: MirroredRepeatWrapping,
	NearestFilter: NearestFilter,
	NearestMipMapNearestFilter: NearestMipMapNearestFilter,
	NearestMipMapLinearFilter: NearestMipMapLinearFilter,
	LinearFilter: LinearFilter,
	LinearMipMapNearestFilter: LinearMipMapNearestFilter,
	LinearMipMapLinearFilter: LinearMipMapLinearFilter,
	UnsignedByteType: UnsignedByteType,
	ByteType: ByteType,
	ShortType: ShortType,
	UnsignedShortType: UnsignedShortType,
	IntType: IntType,
	UnsignedIntType: UnsignedIntType,
	FloatType: FloatType,
	HalfFloatType: HalfFloatType,
	UnsignedShort4444Type: UnsignedShort4444Type,
	UnsignedShort5551Type: UnsignedShort5551Type,
	UnsignedShort565Type: UnsignedShort565Type,
	UnsignedInt248Type: UnsignedInt248Type,
	AlphaFormat: AlphaFormat,
	RGBFormat: RGBFormat,
	RGBAFormat: RGBAFormat,
	LuminanceFormat: LuminanceFormat,
	LuminanceAlphaFormat: LuminanceAlphaFormat,
	RGBEFormat: RGBEFormat,
	DepthFormat: DepthFormat,
	DepthStencilFormat: DepthStencilFormat,
	RGB_S3TC_DXT1_Format: RGB_S3TC_DXT1_Format,
	RGBA_S3TC_DXT1_Format: RGBA_S3TC_DXT1_Format,
	RGBA_S3TC_DXT3_Format: RGBA_S3TC_DXT3_Format,
	RGBA_S3TC_DXT5_Format: RGBA_S3TC_DXT5_Format,
	RGB_PVRTC_4BPPV1_Format: RGB_PVRTC_4BPPV1_Format,
	RGB_PVRTC_2BPPV1_Format: RGB_PVRTC_2BPPV1_Format,
	RGBA_PVRTC_4BPPV1_Format: RGBA_PVRTC_4BPPV1_Format,
	RGBA_PVRTC_2BPPV1_Format: RGBA_PVRTC_2BPPV1_Format,
	RGB_ETC1_Format: RGB_ETC1_Format,
	LoopOnce: LoopOnce,
	LoopRepeat: LoopRepeat,
	LoopPingPong: LoopPingPong,
	InterpolateDiscrete: InterpolateDiscrete,
	InterpolateLinear: InterpolateLinear,
	InterpolateSmooth: InterpolateSmooth,
	ZeroCurvatureEnding: ZeroCurvatureEnding,
	ZeroSlopeEnding: ZeroSlopeEnding,
	WrapAroundEnding: WrapAroundEnding,
	TrianglesDrawMode: TrianglesDrawMode,
	TriangleStripDrawMode: TriangleStripDrawMode,
	TriangleFanDrawMode: TriangleFanDrawMode,
	LinearEncoding: LinearEncoding,
	sRGBEncoding: sRGBEncoding,
	GammaEncoding: GammaEncoding,
	RGBEEncoding: RGBEEncoding,
	LogLuvEncoding: LogLuvEncoding,
	RGBM7Encoding: RGBM7Encoding,
	RGBM16Encoding: RGBM16Encoding,
	RGBDEncoding: RGBDEncoding,
	BasicDepthPacking: BasicDepthPacking,
	RGBADepthPacking: RGBADepthPacking,
	CubeGeometry: BoxGeometry,
	Face4: Face4,
	LineStrip: LineStrip,
	LinePieces: LinePieces,
	MeshFaceMaterial: MeshFaceMaterial,
	MultiMaterial: MultiMaterial,
	PointCloud: PointCloud,
	Particle: Particle,
	ParticleSystem: ParticleSystem,
	PointCloudMaterial: PointCloudMaterial,
	ParticleBasicMaterial: ParticleBasicMaterial,
	ParticleSystemMaterial: ParticleSystemMaterial,
	Vertex: Vertex,
	DynamicBufferAttribute: DynamicBufferAttribute,
	Int8Attribute: Int8Attribute,
	Uint8Attribute: Uint8Attribute,
	Uint8ClampedAttribute: Uint8ClampedAttribute,
	Int16Attribute: Int16Attribute,
	Uint16Attribute: Uint16Attribute,
	Int32Attribute: Int32Attribute,
	Uint32Attribute: Uint32Attribute,
	Float32Attribute: Float32Attribute,
	Float64Attribute: Float64Attribute,
	ClosedSplineCurve3: ClosedSplineCurve3,
	SplineCurve3: SplineCurve3,
	Spline: Spline,
	BoundingBoxHelper: BoundingBoxHelper,
	EdgesHelper: EdgesHelper,
	WireframeHelper: WireframeHelper,
	XHRLoader: XHRLoader,
	BinaryTextureLoader: BinaryTextureLoader,
	GeometryUtils: GeometryUtils,
	ImageUtils: ImageUtils,
	Projector: Projector,
	CanvasRenderer: CanvasRenderer
});

var empty = {};


var empty$1 = Object.freeze({
	default: empty
});

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
function resolve() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : '/';

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
}

// path.normalize(path)
// posix version
function normalize(path) {
  var isPathAbsolute = isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isPathAbsolute).join('/');

  if (!path && !isPathAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isPathAbsolute ? '/' : '') + path;
}

// posix version
function isAbsolute(path) {
  return path.charAt(0) === '/';
}

// posix version
function join() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
}


// path.relative(from, to)
// posix version
function relative(from, to) {
  from = resolve(from).substr(1);
  to = resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
}

var sep = '/';
var delimiter = ':';

function dirname(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
}

function basename(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
}


function extname(path) {
  return splitPath(path)[3];
}
var path = {
  extname: extname,
  basename: basename,
  dirname: dirname,
  sep: sep,
  delimiter: delimiter,
  relative: relative,
  join: join,
  isAbsolute: isAbsolute,
  normalize: normalize,
  resolve: resolve
};
function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b' ?
    function (str, start, len) { return str.substr(start, len) } :
    function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    };


var path$1 = Object.freeze({
	resolve: resolve,
	normalize: normalize,
	isAbsolute: isAbsolute,
	join: join,
	relative: relative,
	sep: sep,
	delimiter: delimiter,
	dirname: dirname,
	basename: basename,
	extname: extname,
	default: path
});

var require$$0$23 = ( empty$1 && empty ) || empty$1;

var require$$1$5 = ( path$1 && path ) || path$1;

var ammo = createCommonjsModule(function (module) {
// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.
var Ammo = function(Ammo) {
  Ammo = Ammo || {};
  var Module = Ammo;

var Module;if(!Module)Module=(typeof Ammo!=="undefined"?Ammo:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key];}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true;}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true;}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true;}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true;}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof commonjsRequire==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require$$0$23;if(!nodePath)nodePath=require$$1$5;filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f));};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/");}else{Module["thisProgram"]="unknown-program";}}Module["arguments"]=process["argv"].slice(2);{module["exports"]=Module;}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"});}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read;}else{Module["read"]=function read(){throw"no read() available"};}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs;}else if(typeof arguments!="undefined"){Module["arguments"]=arguments;}if(typeof quit==="function"){Module["quit"]=(function(status,toThrow){quit(status);});}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return xhr.response};}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);}else{onerror();}};xhr.onerror=onerror;xhr.send(null);};if(typeof arguments!="undefined"){Module["arguments"]=arguments;}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x);};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x);};}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x);}):(function(x){});}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts;}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title;});}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f));};}if(!Module["print"]){Module["print"]=(function(){});}if(!Module["printErr"]){Module["printErr"]=Module["print"];}if(!Module["arguments"]){Module["arguments"]=[];}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program";}if(!Module["quit"]){Module["quit"]=(function(status,toThrow){throw toThrow});}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key];}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value;return value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop;}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4;}}else{assert((ptr&3)===0);}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null;}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text);}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={};}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){if(sig.length===1){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func)};}else if(sig.length===2){sigCache[func]=function dynCall_wrapper(arg){return Runtime.dynCall(sig,func,[arg])};}else{sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,Array.prototype.slice.call(arguments))};}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=(ret+size+15|0)&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text);}}function getCFunc(ident){var func=Module["_"+ident];if(!func){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave();}),"stackRestore":(function(){Runtime.stackRestore();}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=Runtime.stackAlloc(len);stringToUTF8(str,ret,len);}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i]);}else{cArgs[i]=args[i];}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack);}));return}Runtime.stackRestore(stack);}return ret};var cwrap=function cwrap(ident,returnType,argTypes){return(function(){return ccall(ident,returnType,argTypes,arguments)})};}))();function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type);}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type);}return null}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab;}else{zeroinit=false;size=slab.length;}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr;}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length));}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0;}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0;}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret);}else{HEAPU8.set(new Uint8Array(slab),ret);}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr);}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type;}i+=typeSize;}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK;}return ret}return Module["UTF8ToString"](ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3;}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4;}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5;}}}if(u0<65536){str+=String.fromCharCode(u0);}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}}}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u;}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63;}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len;}else if(u<=2047){len+=2;}else if(u<=65535){len+=3;}else if(u<=2097151){len+=4;}else if(u<=67108863){len+=5;}else{len+=6;}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function demangle(func){var __cxa_demangle_func=Module["___cxa_demangle"]||Module["__cxa_demangle"];if(__cxa_demangle_func){try{var s=func.substr(1);var len=lengthBytesUTF8(s)+1;var buf=_malloc(len);stringToUTF8(s,buf,len);var status=_malloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret);}return func}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e;}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer);}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");}function enlargeMemory(){abortOnCannotGrowMemory();}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||67108864;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"];}else{{buffer=new ArrayBuffer(TOTAL_MEMORY);}}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func);}else{Module["dynCall_vi"](func,callback.arg);}}else{func(callback.arg===undefined?null:callback.arg);}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__);}function preMain(){callRuntimeCallbacks(__ATMAIN__);}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true;}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnPreMain(cb){__ATMAIN__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer);}if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];if(!Math["trunc"])Math["trunc"]=(function(x){return x<0?Math.ceil(x):Math.floor(x)});Math.trunc=Math["trunc"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[(function($0,$1,$2,$3,$4,$5,$6,$7){{var self=Module["getCache"](Module["ConcreteContactResultCallback"])[$0];if(!self.hasOwnProperty("addSingleResult"))throw"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";return self["addSingleResult"]($1,$2,$3,$4,$5,$6,$7)}})];function _emscripten_asm_const_diiiiiiii(code,a0,a1,a2,a3,a4,a5,a6,a7){return ASM_CONSTS[code](a0,a1,a2,a3,a4,a5,a6,a7)}STATIC_BASE=8;STATICTOP=STATIC_BASE+26352;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_btQuickprof_cpp();})});allocate([8,38,0,0,120,39,0,0,24,0,0,0,0,0,0,0,224,37,0,0,152,39,0,0,8,38,0,0,196,39,0,0,48,0,0,0,0,0,0,0,224,37,0,0,243,39,0,0,8,38,0,0,27,40,0,0,72,0,0,0,0,0,0,0,224,37,0,0,49,40,0,0,8,38,0,0,77,40,0,0,96,0,0,0,0,0,0,0,224,37,0,0,100,40,0,0,224,37,0,0,116,40,0,0,8,38,0,0,137,40,0,0,128,0,0,0,0,0,0,0,224,37,0,0,187,40,0,0,8,38,0,0,230,40,0,0,152,0,0,0,0,0,0,0,224,37,0,0,0,41,0,0,8,38,0,0,19,41,0,0,0,4,0,0,0,0,0,0,8,38,0,0,63,41,0,0,192,0,0,0,0,0,0,0,224,37,0,0,122,41,0,0,8,38,0,0,155,41,0,0,192,0,0,0,0,0,0,0,8,38,0,0,207,41,0,0,192,0,0,0,0,0,0,0,8,38,0,0,253,41,0,0,192,0,0,0,0,0,0,0,8,38,0,0,239,42,0,0,176,3,0,0,0,0,0,0,8,38,0,0,252,42,0,0,24,1,0,0,0,0,0,0,224,37,0,0,28,43,0,0,224,37,0,0,47,43,0,0,8,38,0,0,68,43,0,0,32,1,0,0,0,0,0,0,8,38,0,0,99,43,0,0,48,8,0,0,0,0,0,0,8,38,0,0,244,43,0,0,104,1,0,0,0,0,0,0,8,38,0,0,214,43,0,0,176,7,0,0,0,0,0,0,8,38,0,0,22,44,0,0,24,1,0,0,0,0,0,0,8,38,0,0,55,44,0,0,24,1,0,0,0,0,0,0,8,38,0,0,90,44,0,0,24,1,0,0,0,0,0,0,8,38,0,0,124,44,0,0,104,1,0,0,0,0,0,0,8,38,0,0,158,44,0,0,184,1,0,0,0,0,0,0,224,37,0,0,190,44,0,0,8,38,0,0,202,45,0,0,184,1,0,0,0,0,0,0,8,38,0,0,13,45,0,0,208,7,0,0,0,0,0,0,8,38,0,0,222,44,0,0,120,7,0,0,0,0,0,0,224,37,0,0,240,44,0,0,8,38,0,0,173,45,0,0,208,7,0,0,0,0,0,0,8,38,0,0,126,46,0,0,96,2,0,0,0,0,0,0,8,38,0,0,47,46,0,0,40,2,0,0,0,0,0,0,8,38,0,0,73,46,0,0,56,2,0,0,0,0,0,0,224,37,0,0,99,46,0,0,8,38,0,0,153,46,0,0,184,1,0,0,0,0,0,0,8,38,0,0,205,46,0,0,176,3,0,0,0,0,0,0,8,38,0,0,125,48,0,0,128,2,0,0,0,0,0,0,8,38,0,0,95,47,0,0,112,0,0,0,0,0,0,0,8,38,0,0,151,48,0,0,40,5,0,0,0,0,0,0,8,38,0,0,169,48,0,0,160,2,0,0,0,0,0,0,224,37,0,0,199,48,0,0,8,38,0,0,53,49,0,0,184,2,0,0,0,0,0,0,48,38,0,0,17,49,0,0,0,0,0,0,1,0,0,0,208,2,0,0,2,4,0,0,224,37,0,0,37,49,0,0,8,38,0,0,113,49,0,0,168,2,0,0,0,0,0,0,8,38,0,0,178,49,0,0,184,2,0,0,0,0,0,0,8,38,0,0,254,49,0,0,184,2,0,0,0,0,0,0,8,38,0,0,45,50,0,0,184,2,0,0,0,0,0,0,8,38,0,0,96,50,0,0,184,2,0,0,0,0,0,0,8,38,0,0,190,50,0,0,56,3,0,0,0,0,0,0,224,37,0,0,228,50,0,0,8,38,0,0,249,50,0,0,80,3,0,0,0,0,0,0,224,37,0,0,12,51,0,0,8,38,0,0,32,51,0,0,104,0,0,0,0,0,0,0,8,38,0,0,106,51,0,0,136,3,0,0,0,0,0,0,8,38,0,0,60,51,0,0,112,0,0,0,0,0,0,0,8,38,0,0,139,51,0,0,80,3,0,0,0,0,0,0,8,38,0,0,172,51,0,0,168,3,0,0,0,0,0,0,224,37,0,0,197,51,0,0,224,37,0,0,239,51,0,0,8,38,0,0,3,52,0,0,176,3,0,0,0,0,0,0,8,38,0,0,19,52,0,0,184,3,0,0,0,0,0,0,8,38,0,0,92,52,0,0,136,9,0,0,0,0,0,0,8,38,0,0,46,52,0,0,248,3,0,0,0,0,0,0,224,37,0,0,72,52,0,0,8,38,0,0,116,52,0,0,16,4,0,0,0,0,0,0,224,37,0,0,150,52,0,0,8,38,0,0,177,52,0,0,192,0,0,0,0,0,0,0,8,38,0,0,225,52,0,0,192,0,0,0,0,0,0,0,8,38,0,0,12,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,63,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,112,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,145,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,197,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,250,53,0,0,192,0,0,0,0,0,0,0,8,38,0,0,39,54,0,0,192,0,0,0,0,0,0,0,8,38,0,0,96,54,0,0,192,0,0,0,0,0,0,0,224,37,0,0,146,54,0,0,8,38,0,0,217,54,0,0,184,1,0,0,0,0,0,0,8,38,0,0,180,55,0,0,56,10,0,0,0,0,0,0,8,38,0,0,251,54,0,0,208,7,0,0,0,0,0,0,8,38,0,0,153,55,0,0,208,7,0,0,0,0,0,0,8,38,0,0,216,55,0,0,56,10,0,0,0,0,0,0,8,38,0,0,245,55,0,0,32,5,0,0,0,0,0,0,224,37,0,0,8,56,0,0,224,37,0,0,175,59,0,0,8,38,0,0,159,58,0,0,40,2,0,0,0,0,0,0,8,38,0,0,116,56,0,0,48,0,0,0,0,0,0,0,8,38,0,0,249,56,0,0,24,1,0,0,0,0,0,0,8,38,0,0,119,57,0,0,152,9,0,0,0,0,0,0,8,38,0,0,12,58,0,0,152,9,0,0,0,0,0,0,48,38,0,0,181,58,0,0,0,0,0,0,2,0,0,0,208,7,0,0,2,0,0,0,216,7,0,0,2,4,0,0,8,38,0,0,214,59,0,0,128,0,0,0,0,0,0,0,8,38,0,0,115,60,0,0,168,9,0,0,0,0,0,0,8,38,0,0,36,61,0,0,168,9,0,0,0,0,0,0,8,38,0,0,227,61,0,0,40,2,0,0,0,0,0,0,8,38,0,0,21,62,0,0,56,2,0,0,0,0,0,0,8,38,0,0,251,61,0,0,16,5,0,0,0,0,0,0,8,38,0,0,47,62,0,0,56,10,0,0,0,0,0,0,8,38,0,0,155,63,0,0,192,0,0,0,0,0,0,0,8,38,0,0,129,63,0,0,56,10,0,0,0,0,0,0,8,38,0,0,84,62,0,0,16,5,0,0,0,0,0,0,8,38,0,0,111,62,0,0,32,5,0,0,0,0,0,0,8,38,0,0,252,62,0,0,32,5,0,0,0,0,0,0,8,38,0,0,220,63,0,0,56,10,0,0,0,0,0,0,8,38,0,0,195,63,0,0,24,1,0,0,0,0,0,0,8,38,0,0,28,64,0,0,56,10,0,0,0,0,0,0,8,38,0,0,251,63,0,0,24,1,0,0,0,0,0,0,8,38,0,0,121,64,0,0,152,7,0,0,0,0,0,0,8,38,0,0,160,64,0,0,176,7,0,0,0,0,0,0,8,38,0,0,180,64,0,0,176,6,0,0,0,0,0,0,8,38,0,0,201,64,0,0,176,6,0,0,0,0,0,0,8,38,0,0,223,64,0,0,176,7,0,0,0,0,0,0,8,38,0,0,157,65,0,0,56,7,0,0,0,0,0,0,8,38,0,0,239,64,0,0,16,7,0,0,0,0,0,0,224,37,0,0,93,65,0,0,8,38,0,0,182,65,0,0,16,7,0,0,0,0,0,0,8,38,0,0,30,66,0,0,16,7,0,0,0,0,0,0,8,38,0,0,26,67,0,0,48,8,0,0,0,0,0,0,8,38,0,0,143,66,0,0,208,7,0,0,0,0,0,0,8,38,0,0,167,66,0,0,216,7,0,0,0,0,0,0,8,38,0,0,83,67,0,0,48,8,0,0,0,0,0,0,8,38,0,0,104,67,0,0,176,7,0,0,0,0,0,0,8,38,0,0,130,67,0,0,120,7,0,0,0,0,0,0,224,37,0,0,188,67,0,0,8,38,0,0,207,67,0,0,152,7,0,0,0,0,0,0,8,38,0,0,223,67,0,0,160,7,0,0,0,0,0,0,8,38,0,0,20,68,0,0,136,7,0,0,0,0,0,0,224,37,0,0,40,68,0,0,224,37,0,0,61,68,0,0,8,38,0,0,127,68,0,0,176,7,0,0,0,0,0,0,8,38,0,0,153,68,0,0,224,7,0,0,0,0,0,0,8,38,0,0,180,68,0,0,224,7,0,0,0,0,0,0,8,38,0,0,241,68,0,0,136,7,0,0,0,0,0,0,8,38,0,0,198,68,0,0,216,7,0,0,0,0,0,0,8,38,0,0,13,69,0,0,152,7,0,0,0,0,0,0,8,38,0,0,34,69,0,0,120,7,0,0,0,0,0,0,8,38,0,0,47,69,0,0,144,9,0,0,0,0,0,0,8,38,0,0,64,69,0,0,216,7,0,0,0,0,0,0,8,38,0,0,155,69,0,0,216,7,0,0,0,0,0,0,8,38,0,0,11,70,0,0,48,8,0,0,0,0,0,0,8,38,0,0,69,70,0,0,176,7,0,0,0,0,0,0,8,38,0,0,97,70,0,0,144,8,0,0,0,0,0,0,8,38,0,0,126,70,0,0,144,8,0,0,0,0,0,0,8,38,0,0,145,70,0,0,152,10,0,0,0,0,0,0,8,38,0,0,212,70,0,0,224,8,0,0,0,0,0,0,8,38,0,0,162,70,0,0,240,8,0,0,0,0,0,0,224,37,0,0,188,70,0,0,8,38,0,0,227,70,0,0,8,9,0,0,0,0,0,0,8,38,0,0,245,70,0,0,72,0,0,0,0,0,0,0,8,38,0,0,253,71,0,0,8,9,0,0,0,0,0,0,8,38,0,0,14,71,0,0,248,3,0,0,0,0,0,0,8,38,0,0,124,71,0,0,248,3,0,0,0,0,0,0,8,38,0,0,94,72,0,0,240,8,0,0,0,0,0,0,8,38,0,0,28,72,0,0,24,1,0,0,0,0,0,0,8,38,0,0,49,72,0,0,24,1,0,0,0,0,0,0,8,38,0,0,72,72,0,0,24,1,0,0,0,0,0,0,224,37,0,0,113,72,0,0,224,37,0,0,219,72,0,0,8,38,0,0,236,72,0,0,208,7,0,0,0,0,0,0,8,38,0,0,8,73,0,0,208,7,0,0,0,0,0,0,8,38,0,0,210,73,0,0,216,9,0,0,0,0,0,0,8,38,0,0,39,73,0,0,32,5,0,0,0,0,0,0,224,37,0,0,246,73,0,0,8,38,0,0,23,74,0,0,216,9,0,0,0,0,0,0,8,38,0,0,75,74,0,0,168,3,0,0,0,0,0,0,8,38,0,0,56,74,0,0,32,5,0,0,0,0,0,0,8,38,0,0,93,74,0,0,168,3,0,0,0,0,0,0,8,38,0,0,123,74,0,0,48,10,0,0,0,0,0,0,224,37,0,0,143,74,0,0,8,38,0,0,182,74,0,0,184,1,0,0,0,0,0,0,8,38,0,0,215,74,0,0,184,1,0,0,0,0,0,0,8,38,0,0,234,74,0,0,56,10,0,0,0,0,0,0,8,38,0,0,13,75,0,0,48,10,0,0,0,0,0,0,8,38,0,0,32,75,0,0,48,10,0,0,0,0,0,0,224,37,0,0,57,75,0,0,224,37,0,0,83,75,0,0,8,38,0,0,104,75,0,0,168,10,0,0,0,0,0,0,224,37,0,0,24,76,0,0,224,37,0,0,66,86,0,0,8,38,0,0,162,86,0,0,200,10,0,0,0,0,0,0,8,38,0,0,79,86,0,0,216,10,0,0,0,0,0,0,224,37,0,0,112,86,0,0,8,38,0,0,125,86,0,0,184,10,0,0,0,0,0,0,8,38,0,0,168,87,0,0,200,10,0,0,0,0,0,0,8,38,0,0,132,87,0,0,240,10,0,0,0,0,0,0,8,38,0,0,202,87,0,0,184,10,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,24,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,5,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,48,0,0,0,7,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,56,0,0,0,9,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,72,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,80,0,0,0,13,0,0,0,14,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,96,0,0,0,15,0,0,0,16,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,104,0,0,0,17,0,0,0,18,0,0,0,1,0,0,0,0,0,0,0,112,0,0,0,19,0,0,0,20,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,21,0,0,0,22,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,136,0,0,0,23,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,25,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,160,0,0,0,26,0,0,0,27,0,0,0,5,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,0,0,0,0,232,0,0,0,28,0,0,0,29,0,0,0,2,0,0,0,0,0,0,0,216,0,0,0,28,0,0,0,30,0,0,0,3,0,0,0,0,0,0,0,200,0,0,0,28,0,0,0,31,0,0,0,4,0,0,0,0,0,0,0,176,0,0,0,28,0,0,0,32,0,0,0,5,0,0,0,0,0,0,0,248,0,0,0,4,0,0,0,33,0,0,0,34,0,0,0,6,0,0,0,8,0,0,0,3,0,0,0,7,0,0,0,6,0,0,0,0,0,0,0,8,1,0,0,35,0,0,0,36,0,0,0,7,0,0,0,8,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,40,1,0,0,37,0,0,0,38,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,9,0,0,0,0,0,0,0,56,1,0,0,39,0,0,0,40,0,0,0,1,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,9,0,0,0,10,0,0,0,2,0,0,0,11,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,2,0,0,0,0,0,0,0,120,1,0,0,35,0,0,0,41,0,0,0,7,0,0,0,12,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,72,1,0,0,35,0,0,0,42,0,0,0,7,0,0,0,13,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,88,1,0,0,43,0,0,0,44,0,0,0,3,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,3,0,0,0,14,0,0,0,10,0,0,0,5,0,0,0,3,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,9,0,0,0,10,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,17,0,0,0,0,0,0,0,152,1,0,0,35,0,0,0,45,0,0,0,12,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,136,1,0,0,35,0,0,0,46,0,0,0,13,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,168,1,0,0,47,0,0,0,48,0,0,0,2,0,0,0,1,0,0,0,16,0,0,0,0,0,0,0,192,1,0,0,49,0,0,0,50,0,0,0,3,0,0,0,2,0,0,0,17,0,0,0,0,0,0,0,208,1,0,0,51,0,0,0,52,0,0,0,6,0,0,0,0,0,0,0,240,1,0,0,6,0,0,0,18,0,0,0,14,0,0,0,53,0,0,0,54,0,0,0,0,0,0,0,224,1,0,0,55,0,0,0,56,0,0,0,7,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,4,0,0,0,18,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,15,0,0,0,16,0,0,0,1,0,0,0,8,0,0,0,5,0,0,0,19,0,0,0,17,0,0,0,7,0,0,0,20,0,0,0,21,0,0,0,9,0,0,0,18,0,0,0,22,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,248,1,0,0,57,0,0,0,58,0,0,0,12,0,0,0,0,0,0,0,8,2,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,19,0,0,0,23,0,0,0,63,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,20,0,0,0,64,0,0,0,21,0,0,0,1,0,0,0,19,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,65,0,0,0,27,0,0,0,16,0,0,0,28,0,0,0,29,0,0,0,24,0,0,0,25,0,0,0,8,0,0,0,9,0,0,0,26,0,0,0,66,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,8,0,0,0,9,0,0,0,67,0,0,0,34,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,68,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,24,2,0,0,69,0,0,0,70,0,0,0,10,0,0,0,0,0,0,0,64,2,0,0,71,0,0,0,72,0,0,0,4,0,0,0,3,0,0,0,36,0,0,0,0,0,0,0,80,2,0,0,11,0,0,0,73,0,0,0,74,0,0,0,37,0,0,0,27,0,0,0,6,0,0,0,38,0,0,0,0,0,0,0,96,2,0,0,75,0,0,0,76,0,0,0,61,0,0,0,62,0,0,0,19,0,0,0,23,0,0,0,77,0,0,0,13,0,0,0,17,0,0,0,15,0,0,0,39,0,0,0,64,0,0,0,40,0,0,0,1,0,0,0,19,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,65,0,0,0,27,0,0,0,16,0,0,0,28,0,0,0,29,0,0,0,24,0,0,0,25,0,0,0,8,0,0,0,9,0,0,0,28,0,0,0,66,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,14,0,0,0,9,0,0,0,67,0,0,0,34,0,0,0,10,0,0,0,15,0,0,0,12,0,0,0,68,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,112,2,0,0,21,0,0,0,78,0,0,0,12,0,0,0,3,0,0,0,0,0,0,0,144,2,0,0,79,0,0,0,80,0,0,0,1,0,0,0,0,0,0,0,168,2,0,0,81,0,0,0,82,0,0,0,83,0,0,0,1,0,0,0,41,0,0,0,42,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,29,0,0,0,7,0,0,0,84,0,0,0,0,0,0,0,184,2,0,0,81,0,0,0,85,0,0,0,86,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,8,0,0,0,0,0,0,0,216,2,0,0,81,0,0,0,87,0,0,0,83,0,0,0,1,0,0,0,41,0,0,0,43,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,31,0,0,0,9,0,0,0,84,0,0,0,20,0,0,0,0,0,0,0,232,2,0,0,81,0,0,0,88,0,0,0,89,0,0,0,1,0,0,0,44,0,0,0,45,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,32,0,0,0,10,0,0,0,0,0,0,0,248,2,0,0,81,0,0,0,90,0,0,0,86,0,0,0,1,0,0,0,46,0,0,0,47,0,0,0,1,0,0,0,3,0,0,0,6,0,0,0,33,0,0,0,11,0,0,0,0,0,0,0,8,3,0,0,81,0,0,0,91,0,0,0,92,0,0,0,1,0,0,0,48,0,0,0,49,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,34,0,0,0,12,0,0,0,21,0,0,0,0,0,0,0,24,3,0,0,81,0,0,0,93,0,0,0,94,0,0,0,1,0,0,0,50,0,0,0,51,0,0,0,1,0,0,0,5,0,0,0,8,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,40,3,0,0,95,0,0,0,96,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,97,0,0,0,36,0,0,0,18,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,64,3,0,0,98,0,0,0,99,0,0,0,2,0,0,0,52,0,0,0,16,0,0,0,17,0,0,0,19,0,0,0,0,0,0,0,88,3,0,0,17,0,0,0,100,0,0,0,6,0,0,0,0,0,0,0,104,3,0,0,101,0,0,0,102,0,0,0,3,0,0,0,53,0,0,0,54,0,0,0,4,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,5,0,0,0,37,0,0,0,103,0,0,0,38,0,0,0,58,0,0,0,0,0,0,0,120,3,0,0,21,0,0,0,104,0,0,0,3,0,0,0,9,0,0,0,0,0,0,0,152,3,0,0,105,0,0,0,106,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,176,3,0,0,4,0,0,0,107,0,0,0,108,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,0,0,0,0,184,3,0,0,4,0,0,0,109,0,0,0,110,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,200,3,0,0,4,0,0,0,111,0,0,0,112,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,25,0,0,0,21,0,0,0,0,0,0,0,216,3,0,0,113,0,0,0,114,0,0,0,7,0,0,0,15,0,0,0,59,0,0,0,60,0,0,0,16,0,0,0,17,0,0,0,22,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,14,0,0,0,61,0,0,0,0,0,0,0,232,3,0,0,115,0,0,0,116,0,0,0,15,0,0,0,0,0,0,0,0,4,0,0,117,0,0,0,118,0,0,0,5,0,0,0,6,0,0,0,18,0,0,0,7,0,0,0,0,0,0,0,168,4,0,0,28,0,0,0,119,0,0,0,8,0,0,0,0,0,0,0,152,4,0,0,28,0,0,0,120,0,0,0,9,0,0,0,0,0,0,0,136,4,0,0,28,0,0,0,121,0,0,0,10,0,0,0,0,0,0,0,120,4,0,0,28,0,0,0,122,0,0,0,11,0,0,0,0,0,0,0,104,4,0,0,28,0,0,0,123,0,0,0,12,0,0,0,0,0,0,0,88,4,0,0,28,0,0,0,124,0,0,0,13,0,0,0,0,0,0,0,72,4,0,0,28,0,0,0,125,0,0,0,14,0,0,0,0,0,0,0,56,4,0,0,28,0,0,0,126,0,0,0,15,0,0,0,0,0,0,0,40,4,0,0,28,0,0,0,127,0,0,0,16,0,0,0,0,0,0,0,24,4,0,0,28,0,0,0,128,0,0,0,17,0,0,0,0,0,0,0,184,4,0,0,129,0,0,0,130,0,0,0,26,0,0,0,62,0,0,0,0,0,0,0,192,4,0,0,131,0,0,0,132,0,0,0,5,0,0,0,4,0,0,0,63,0,0,0,0,0,0,0,208,4,0,0,133,0,0,0,134,0,0,0,6,0,0,0,5,0,0,0,64,0,0,0,0,0,0,0,224,4,0,0,51,0,0,0,135,0,0,0,23,0,0,0,0,0,0,0,240,4,0,0,136,0,0,0,137,0,0,0,24,0,0,0,0,0,0,0,0,5,0,0,138,0,0,0,139,0,0,0,7,0,0,0,6,0,0,0,65,0,0,0,0,0,0,0,16,5,0,0,140,0,0,0,141,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,0,0,0,0,40,5,0,0,142,0,0,0,143,0,0,0,61,0,0,0,62,0,0,0,19,0,0,0,23,0,0,0,144,0,0,0,13,0,0,0,17,0,0,0,25,0,0,0,66,0,0,0,64,0,0,0,67,0,0,0,0,0,0,0,48,5,0,0,69,0,0,0,145,0,0,0,16,0,0,0,0,0,0,0,112,5,0,0,51,0,0,0,146,0,0,0,26,0,0,0,1,0,0,0,0,0,0,0,96,5,0,0,51,0,0,0,147,0,0,0,26,0,0,0,2,0,0,0,0,0,0,0,80,5,0,0,35,0,0,0,148,0,0,0,7,0,0,0,68,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,64,5,0,0,7,0,0,0,149,0,0,0,17,0,0,0,10,0,0,0,0,0,0,0,128,5,0,0,150,0,0,0,151,0,0,0,27,0,0,0,28,0,0,0,252,255,255,255,128,5,0,0,152,0,0,0,153,0,0,0,29,0,0,0,0,0,0,0,192,5,0,0,51,0,0,0,154,0,0,0,30,0,0,0,1,0,0,0,0,0,0,0,176,5,0,0,51,0,0,0,155,0,0,0,30,0,0,0,2,0,0,0,0,0,0,0,160,5,0,0,21,0,0,0,156,0,0,0,18,0,0,0,11,0,0,0,0,0,0,0,208,5,0,0,69,0,0,0,157,0,0,0,19,0,0,0,0,0,0,0,224,5,0,0,69,0,0,0,158,0,0,0,20,0,0,0,0,0,0,0,240,5,0,0,140,0,0,0,159,0,0,0,27,0,0,0,28,0,0,0,4,0,0,0,0,0,0,0,0,6,0,0,160,0,0,0,161,0,0,0,8,0,0,0,7,0,0,0,69,0,0,0,0,0,0,0,16,6,0,0,162,0,0,0,163,0,0,0,18,0,0,0,0,0,0,0,32,6,0,0,164,0,0,0,165,0,0,0,9,0,0,0,8,0,0,0,70,0,0,0,0,0,0,0,80,6,0,0,140,0,0,0,166,0,0,0,29,0,0,0,30,0,0,0,5,0,0,0,0,0,0,0,64,6,0,0,140,0,0,0,167,0,0,0,31,0,0,0,32,0,0,0,6,0,0,0,0,0,0,0,48,6,0,0,140,0,0,0,168,0,0,0,27,0,0,0,28,0,0,0,7,0,0,0,0,0,0,0,96,6,0,0,169,0,0,0,170,0,0,0,10,0,0,0,9,0,0,0,71,0,0,0,0,0,0,0,112,6,0,0,35,0,0,0,171,0,0,0,7,0,0,0,72,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,6,0,0,172,0,0,0,173,0,0,0,11,0,0,0,10,0,0,0,73,0,0,0,0,0,0,0,144,6,0,0,35,0,0,0,174,0,0,0,33,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,6,0,0,175,0,0,0,176,0,0,0,31,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,74,0,0,0,44,0,0,0,5,0,0,0,45,0,0,0,10,0,0,0,18,0,0,0,5,0,0,0,46,0,0,0,19,0,0,0,11,0,0,0,75,0,0,0,177,0,0,0,0,0,0,0,176,6,0,0,43,0,0,0,178,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,47,0,0,0,77,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,192,6,0,0,43,0,0,0,179,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,49,0,0,0,78,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,208,6,0,0,43,0,0,0,180,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,50,0,0,0,79,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,224,6,0,0,43,0,0,0,181,0,0,0,34,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,7,0,0,0,51,0,0,0,10,0,0,0,19,0,0,0,6,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,36,0,0,0,37,0,0,0,1,0,0,0,35,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,240,6,0,0,182,0,0,0,183,0,0,0,36,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,80,0,0,0,52,0,0,0,8,0,0,0,53,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,54,0,0,0,21,0,0,0,11,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,81,0,0,0,82,0,0,0,0,0,0,0,0,7,0,0,184,0,0,0,185,0,0,0,40,0,0,0,0,0,0,0,24,7,0,0,184,0,0,0,186,0,0,0,41,0,0,0,0,0,0,0,40,7,0,0,184,0,0,0,187,0,0,0,42,0,0,0,0,0,0,0,56,7,0,0,188,0,0,0,189,0,0,0,36,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,83,0,0,0,52,0,0,0,8,0,0,0,55,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,38,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,72,7,0,0,51,0,0,0,190,0,0,0,39,0,0,0,0,0,0,0,88,7,0,0,191,0,0,0,192,0,0,0,40,0,0,0,0,0,0,0,104,7,0,0,193,0,0,0,194,0,0,0,41,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,84,0,0,0,56,0,0,0,9,0,0,0,57,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,58,0,0,0,22,0,0,0,11,0,0,0,42,0,0,0,0,0,0,0,120,7,0,0,55,0,0,0,195,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,10,0,0,0,1,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,15,0,0,0,43,0,0,0,1,0,0,0,43,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,192,7,0,0,196,0,0,0,197,0,0,0,44,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,85,0,0,0,13,0,0,0,10,0,0,0,59,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,60,0,0,0,23,0,0,0,11,0,0,0,44,0,0,0,45,0,0,0,1,0,0,0,45,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,61,0,0,0,62,0,0,0,46,0,0,0,46,0,0,0,63,0,0,0,47,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,224,7,0,0,43,0,0,0,198,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,64,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,240,7,0,0,43,0,0,0,199,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,66,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,0,8,0,0,43,0,0,0,200,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,67,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,16,8,0,0,55,0,0,0,201,0,0,0,44,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,88,0,0,0,68,0,0,0,10,0,0,0,69,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,50,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,70,0,0,0,71,0,0,0,51,0,0,0,50,0,0,0,72,0,0,0,52,0,0,0,3,0,0,0,0,0,0,0,32,8,0,0,191,0,0,0,202,0,0,0,53,0,0,0,0,0,0,0,64,8,0,0,55,0,0,0,203,0,0,0,54,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,89,0,0,0,13,0,0,0,12,0,0,0,73,0,0,0,10,0,0,0,21,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,51,0,0,0,52,0,0,0,1,0,0,0,55,0,0,0,5,0,0,0,74,0,0,0,53,0,0,0,7,0,0,0,75,0,0,0,76,0,0,0,56,0,0,0,54,0,0,0,77,0,0,0,57,0,0,0,4,0,0,0,55,0,0,0,0,0,0,0,80,8,0,0,204,0,0,0,205,0,0,0,19,0,0,0,78,0,0,0,25,0,0,0,90,0,0,0,91,0,0,0,20,0,0,0,0,0,0,0,112,8,0,0,191,0,0,0,206,0,0,0,58,0,0,0,0,0,0,0,96,8,0,0,191,0,0,0,207,0,0,0,59,0,0,0,0,0,0,0,128,8,0,0,208,0,0,0,209,0,0,0,60,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,92,0,0,0,79,0,0,0,13,0,0,0,80,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,61,0,0,0,12,0,0,0,0,0,0,0,144,8,0,0,43,0,0,0,210,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,81,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,57,0,0,0,1,0,0,0,63,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,0,0,0,0,160,8,0,0,43,0,0,0,211,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,83,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,58,0,0,0,1,0,0,0,64,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,8,0,0,0,0,0,0,0,176,8,0,0,43,0,0,0,212,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,84,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,59,0,0,0,1,0,0,0,65,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,9,0,0,0,0,0,0,0,192,8,0,0,213,0,0,0,214,0,0,0,66,0,0,0,1,0,0,0,2,0,0,0,95,0,0,0,96,0,0,0,85,0,0,0,97,0,0,0,98,0,0,0,86,0,0,0,60,0,0,0,61,0,0,0,87,0,0,0,27,0,0,0,0,0,0,0,208,8,0,0,215,0,0,0,216,0,0,0,1,0,0,0,62,0,0,0,12,0,0,0,67,0,0,0,2,0,0,0,68,0,0,0,99,0,0,0,88,0,0,0,89,0,0,0,63,0,0,0,100,0,0,0,217,0,0,0,0,0,0,0,224,8,0,0,215,0,0,0,218,0,0,0,1,0,0,0,62,0,0,0,12,0,0,0,67,0,0,0,2,0,0,0,68,0,0,0,99,0,0,0,88,0,0,0,89,0,0,0,63,0,0,0,100,0,0,0,217,0,0,0,0,0,0,0,248,8,0,0,219,0,0,0,220,0,0,0,28,0,0,0,21,0,0,0,64,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,65,0,0,0,93,0,0,0,66,0,0,0,101,0,0,0,67,0,0,0,29,0,0,0,94,0,0,0,102,0,0,0,103,0,0,0,0,0,0,0,24,9,0,0,221,0,0,0,222,0,0,0,30,0,0,0,22,0,0,0,68,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,69,0,0,0,98,0,0,0,70,0,0,0,104,0,0,0,71,0,0,0,31,0,0,0,99,0,0,0,105,0,0,0,106,0,0,0,0,0,0,0,40,9,0,0,115,0,0,0,223,0,0,0,21,0,0,0,0,0,0,0,56,9,0,0,115,0,0,0,224,0,0,0,22,0,0,0,0,0,0,0,72,9,0,0,225,0,0,0,226,0,0,0,2,0,0,0,72,0,0,0,13,0,0,0,69,0,0,0,3,0,0,0,70,0,0,0,107,0,0,0,100,0,0,0,101,0,0,0,73,0,0,0,108,0,0,0,227,0,0,0,0,0,0,0,88,9,0,0,35,0,0,0,228,0,0,0,74,0,0,0,109,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,104,9,0,0,35,0,0,0,229,0,0,0,7,0,0,0,110,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,9,0,0,35,0,0,0,230,0,0,0,7,0,0,0,111,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,9,0,0,231,0,0,0,232,0,0,0,19,0,0,0,78,0,0,0,25,0,0,0,90,0,0,0,91,0,0,0,0,0,0,0,168,9,0,0,51,0,0,0,233,0,0,0,30,0,0,0,1,0,0,0,0,0,0,0,184,9,0,0,234,0,0,0,235,0,0,0,1,0,0,0,0,0,0,0,200,9,0,0,140,0,0,0,236,0,0,0,75,0,0,0,76,0,0,0,8,0,0,0,0,0,0,0,224,9,0,0,234,0,0,0,237,0,0,0,2,0,0,0,0,0,0,0,240,9,0,0,105,0,0,0,238,0,0,0,2,0,0,0,0,0,0,0,0,10,0,0,140,0,0,0,239,0,0,0,77,0,0,0,78,0,0,0,9,0,0,0,0,0,0,0,16,10,0,0,105,0,0,0,240,0,0,0,3,0,0,0,0,0,0,0,32,10,0,0,241,0,0,0,242,0,0,0,14,0,0,0,0,0,0,0,72,10,0,0,243,0,0,0,244,0,0,0,15,0,0,0,11,0,0,0,112,0,0,0,0,0,0,0,88,10,0,0,245,0,0,0,246,0,0,0,16,0,0,0,12,0,0,0,113,0,0,0,0,0,0,0,104,10,0,0,241,0,0,0,247,0,0,0,17,0,0,0,0,0,0,0,120,10,0,0,241,0,0,0,248,0,0,0,18,0,0,0,0,0,0,0,136,10,0,0,249,0,0,0,250,0,0,0,32,0,0,0,33,0,0,0,102,0,0,0,0,0,0,0,144,10,0,0,251,0,0,0,252,0,0,0,0,0,0,0,152,10,0,0,253,0,0,0,254,0,0,0,66,0,0,0,1,0,0,0,2,0,0,0,95,0,0,0,96,0,0,0,85,0,0,0,114,0,0,0,115,0,0,0,86,0,0,0,60,0,0,0,61,0,0,0,87,0,0,0,27,0,0,0,100,100,0,0,255,255,255,255,5,0,0,0,0,0,0,0,0,0,0,0,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,35,0,0,0,225,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,184,10,0,0,255,0,0,0,0,1,0,0,1,1,0,0,2,1,0,0,36,0,0,0,4,0,0,0,19,0,0,0,71,0,0,0,0,0,0,0,224,10,0,0,255,0,0,0,3,1,0,0,1,1,0,0,2,1,0,0,36,0,0,0,5,0,0,0,20,0,0,0,72,0,0,0,0,0,0,0,16,11,0,0,255,0,0,0,4,1,0,0,1,1,0,0,2,1,0,0,36,0,0,0,6,0,0,0,21,0,0,0,73,0,0,0,123,32,118,97,114,32,115,101,108,102,32,61,32,77,111,100,117,108,101,91,39,103,101,116,67,97,99,104,101,39,93,40,77,111,100,117,108,101,91,39,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,39,93,41,91,36,48,93,59,32,105,102,32,40,33,115,101,108,102,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,41,41,32,116,104,114,111,119,32,39,97,32,74,83,73,109,112,108,101,109,101,110,116,97,116,105,111,110,32,109,117,115,116,32,105,109,112,108,101,109,101,110,116,32,97,108,108,32,102,117,110,99,116,105,111,110,115,44,32,121,111,117,32,102,111,114,103,111,116,32,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,58,58,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,46,39,59,32,114,101,116,117,114,110,32,115,101,108,102,91,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,93,40,36,49,44,36,50,44,36,51,44,36,52,44,36,53,44,36,54,44,36,55,41,59,32,125,0,50,57,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,49,57,98,116,71,104,111,115,116,80,97,105,114,67,97,108,108,98,97,99,107,0,50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0,50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0,49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0,49,56,98,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,50,51,98,116,68,101,102,97,117,108,116,83,111,102,116,66,111,100,121,83,111,108,118,101,114,0,49,54,98,116,83,111,102,116,66,111,100,121,83,111,108,118,101,114,0,52,49,98,116,83,111,102,116,66,111,100,121,82,105,103,105,100,66,111,100,121,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,57,98,116,83,111,102,116,82,105,103,105,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,83,111,102,116,83,111,102,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,83,111,102,116,66,111,100,121,77,97,116,101,114,105,97,108,68,97,116,97,0,83,111,102,116,66,111,100,121,78,111,100,101,68,97,116,97,0,83,111,102,116,66,111,100,121,76,105,110,107,68,97,116,97,0,83,111,102,116,66,111,100,121,70,97,99,101,68,97,116,97,0,83,111,102,116,66,111,100,121,84,101,116,114,97,68,97,116,97,0,83,111,102,116,82,105,103,105,100,65,110,99,104,111,114,68,97,116,97,0,102,108,111,97,116,0,83,111,102,116,66,111,100,121,80,111,115,101,68,97,116,97,0,83,111,102,116,66,111,100,121,67,108,117,115,116,101,114,68,97,116,97,0,105,110,116,0,98,116,83,111,102,116,66,111,100,121,74,111,105,110,116,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,70,108,111,97,116,68,97,116,97,0,49,48,98,116,83,111,102,116,66,111,100,121,0,78,49,48,98,116,83,111,102,116,66,111,100,121,49,53,82,97,121,70,114,111,109,84,111,67,97,115,116,101,114,69,0,78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0,78,49,48,98,116,83,111,102,116,66,111,100,121,53,74,111,105,110,116,69,0,78,49,48,98,116,83,111,102,116,66,111,100,121,54,67,74,111,105,110,116,69,0,83,111,102,116,66,111,100,121,0,50,52,98,116,83,111,102,116,66,111,100,121,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,85,112,100,97,116,101,67,108,117,115,116,101,114,115,0,83,111,102,116,66,111,100,121,32,97,112,112,108,121,70,111,114,99,101,115,0,65,112,112,108,121,67,108,117,115,116,101,114,115,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,83,79,70,84,67,76,85,83,84,69,82,0,50,55,98,116,83,111,102,116,67,108,117,115,116,101,114,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,67,76,95,82,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,49,67,108,117,115,116,101,114,66,97,115,101,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,51,67,111,108,108,105,100,101,83,68,70,95,82,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,86,70,95,83,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,67,76,95,83,83,69,0,50,57,98,116,83,111,102,116,82,105,103,105,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,84,114,105,97,110,103,108,101,0,49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0,78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0,90,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,50,54,98,116,83,111,102,116,66,111,100,121,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,115,111,108,118,101,83,111,102,116,67,111,110,115,116,114,97,105,110,116,115,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,83,111,102,116,66,111,100,121,0,114,97,121,84,101,115,116,0,50,51,98,116,83,111,102,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0,50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0,50,52,98,116,83,111,102,116,82,105,103,105,100,68,121,110,97,109,105,99,115,87,111,114,108,100,0,50,56,98,116,83,111,102,116,83,111,102,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,49,49,98,116,82,105,103,105,100,66,111,100,121,0,105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0,117,112,100,97,116,101,65,99,116,105,111,110,115,0,99,114,101,97,116,101,80,114,101,100,105,99,116,105,118,101,67,111,110,116,97,99,116,115,0,114,101,108,101,97,115,101,32,112,114,101,100,105,99,116,105,118,101,32,99,111,110,116,97,99,116,32,109,97,110,105,102,111,108,100,115,0,112,114,101,100,105,99,116,105,118,101,32,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0,99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0,105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0,67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0,97,112,112,108,121,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,32,114,101,115,116,105,116,117,116,105,111,110,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0,115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0,115,116,101,112,83,105,109,117,108,97,116,105,111,110,0,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,70,108,111,97,116,68,97,116,97,0,100,101,98,117,103,68,114,97,119,87,111,114,108,100,0,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0,49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0,78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0,49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0,50,51,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,0,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,50,57,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,49,56,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,49,55,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0,115,111,108,118,101,71,114,111,117,112,0,51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,49,54,98,116,82,97,121,99,97,115,116,86,101,104,105,99,108,101,0,49,55,98,116,65,99,116,105,111,110,73,110,116,101,114,102,97,99,101,0,50,53,98,116,68,101,102,97,117,108,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0,52,51,98,116,75,105,110,101,109,97,116,105,99,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,51,48,98,116,75,105,110,101,109,97,116,105,99,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,0,51,48,98,116,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,73,110,116,101,114,102,97,99,101,0,50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0,49,50,98,116,67,111,110,118,101,120,67,97,115,116,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0,49,51,98,116,71,104,111,115,116,79,98,106,101,99,116,0,50,52,98,116,80,97,105,114,67,97,99,104,105,110,103,71,104,111,115,116,79,98,106,101,99,116,0,50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0,49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0,51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,78,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0,105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0,112,114,111,99,101,115,115,73,115,108,97,110,100,115,0,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0,112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0,100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0,99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0,117,112,100,97,116,101,65,97,98,98,115,0,1,79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0,73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0,80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0,84,104,97,110,107,115,46,10,0,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0,99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,105,100,103,101,100,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,50,51,98,116,83,105,110,103,108,101,67,111,110,116,97,99,116,67,97,108,108,98,97,99,107,0,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,50,49,98,116,87,105,116,104,111,117,116,77,97,114,103,105,110,82,101,115,117,108,116,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,51,48,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0,67,111,109,112,111,117,110,100,0,49,53,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,0,98,116,67,111,110,101,83,104,97,112,101,68,97,116,97,0,67,111,110,101,0,49,49,98,116,67,111,110,101,83,104,97,112,101,0,67,111,110,101,90,0,49,50,98,116,67,111,110,101,83,104,97,112,101,90,0,67,111,110,101,88,0,49,50,98,116,67,111,110,101,83,104,97,112,101,88,0,83,80,72,69,82,69,0,49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0,90,78,75,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,50,49,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,90,78,75,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,49,54,70,105,108,116,101,114,101,100,67,97,108,108,98,97,99,107,0,84,82,73,65,78,71,76,69,77,69,83,72,0,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,68,97,116,97,0,83,84,65,84,73,67,80,76,65,78,69,0,49,56,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,0,50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0,51,52,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,65,97,98,98,67,97,99,104,105,110,103,83,104,97,112,101,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0,50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,68,97,116,97,0,67,111,110,118,101,120,0,49,55,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,0,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,67,97,112,115,117,108,101,83,104,97,112,101,0,49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0,67,97,112,115,117,108,101,88,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,88,0,67,97,112,115,117,108,101,90,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,90,0,50,54,76,111,99,97,108,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,67,111,110,118,101,120,84,114,105,109,101,115,104,0,50,53,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,49,52,98,116,67,111,110,99,97,118,101,83,104,97,112,101,0,66,111,120,0,49,48,98,116,66,111,120,83,104,97,112,101,0,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,48,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,57,81,117,97,110,116,105,122,101,100,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,72,69,73,71,72,84,70,73,69,76,68,0,50,53,98,116,72,101,105,103,104,116,102,105,101,108,100,84,101,114,114,97,105,110,83,104,97,112,101,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,67,121,108,105,110,100,101,114,89,0,49,53,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,0,67,121,108,105,110,100,101,114,88,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,88,0,67,121,108,105,110,100,101,114,90,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,90,0,49,52,98,116,84,114,105,97,110,103,108,101,77,101,115,104,0,50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0,50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0,49,50,98,116,65,120,105,115,83,119,101,101,112,51,0,49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0,50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0,49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0,49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0,49,50,98,116,68,105,115,112,97,116,99,104,101,114,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,49,52,98,116,81,117,97,110,116,105,122,101,100,66,118,104,0,50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0,49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0,50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0,49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0,51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0,50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0,50,51,98,116,72,97,115,104,101,100,83,105,109,112,108,101,80,97,105,114,67,97,99,104,101,0,49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0,50,54,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,65,114,114,97,121,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,0,82,111,111,116,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,83,116,57,101,120,99,101,112,116,105,111,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}Module["_i64Subtract"]=_i64Subtract;function _llvm_trap(){abort("trap!");}Module["_i64Add"]=_i64Add;Module["_memset"]=_memset;Module["_bitshift64Lshr"]=_bitshift64Lshr;Module["_bitshift64Shl"]=_bitshift64Shl;function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _abort(){Module["abort"]();}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++;}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr);}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr);}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0;})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--;}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module["dynCall_v"](func);_pthread_once.seen[ptr]=1;}Module["_llvm_bswap_i16"]=_llvm_bswap_i16;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0);})};function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_STATIC);Module["_llvm_cttz_i32"]=_llvm_cttz_i32;Module["___udivmoddi4"]=___udivmoddi4;Module["___udivdi3"]=___udivdi3;var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}Module["___muldsi3"]=___muldsi3;Module["___muldi3"]=___muldi3;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}Module["_sbrk"]=_sbrk;Module["_memmove"]=_memmove;var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr;}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(Runtime.setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(Runtime.setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(Runtime.setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(Runtime.setTempRet0(throwntype),thrown)|0}function ___gxx_personality_v0(){}Module["___uremdi3"]=___uremdi3;var _llvm_pow_f32=Math_pow;Module["_llvm_bswap_i32"]=_llvm_bswap_i32;function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module["print"]:Module["printErr"])(UTF8ArrayToString(buffer,0));buffer.length=0;}else{buffer.push(curr);}});}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j]);}ret+=len;}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}__ATEXIT__.push((function(){var fflush=Module["_fflush"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10);}));DYNAMICTOP_PTR=allocate(1,"i32",ALLOC_STATIC);STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vid(index,a1,a2){try{Module["dynCall_vid"](index,a1,a2);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiidii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiidii"](index,a1,a2,a3,a4,a5,a6);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{return Module["dynCall_iiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viidi(index,a1,a2,a3,a4){try{Module["dynCall_viidi"](index,a1,a2,a3,a4);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viddiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viddiii"](index,a1,a2,a3,a4,a5,a6);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vidii(index,a1,a2,a3,a4){try{Module["dynCall_vidii"](index,a1,a2,a3,a4);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vidi(index,a1,a2,a3){try{Module["dynCall_vidi"](index,a1,a2,a3);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_diiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiddddiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){try{Module["dynCall_viiiiddddiid"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_vidd(index,a1,a2,a3){try{Module["dynCall_vidd"](index,a1,a2,a3);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiid(index,a1,a2,a3){try{return Module["dynCall_iiid"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_di(index,a1){try{return Module["dynCall_di"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiidii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_diiidii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viidii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viidii"](index,a1,a2,a3,a4,a5);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diii(index,a1,a2,a3){try{return Module["dynCall_diii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{return Module["dynCall_diiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiid(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiid"](index,a1,a2,a3,a4,a5);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{return Module["dynCall_diiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_did(index,a1,a2){try{return Module["dynCall_did"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiiidddddidi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){try{Module["dynCall_viiiidddddidi"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diidii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diidii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_diiii(index,a1,a2,a3,a4){try{return Module["dynCall_diiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiid(index,a1,a2,a3,a4){try{Module["dynCall_viiid"](index,a1,a2,a3,a4);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_v(index){try{Module["dynCall_v"](index);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viid(index,a1,a2,a3){try{Module["dynCall_viid"](index,a1,a2,a3);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_iidid(index,a1,a2,a3,a4){try{return Module["dynCall_iidid"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4);}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0);}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"invoke_viiiii":invoke_viiiii,"invoke_vid":invoke_vid,"invoke_vi":invoke_vi,"invoke_viiidii":invoke_viiidii,"invoke_vii":invoke_vii,"invoke_iiiiiiiiiii":invoke_iiiiiiiiiii,"invoke_ii":invoke_ii,"invoke_viidi":invoke_viidi,"invoke_viddiii":invoke_viddiii,"invoke_vidii":invoke_vidii,"invoke_iiiii":invoke_iiiii,"invoke_vidi":invoke_vidi,"invoke_diiiiiiii":invoke_diiiiiiii,"invoke_viiiiddddiid":invoke_viiiiddddiid,"invoke_diiiii":invoke_diiiii,"invoke_vidd":invoke_vidd,"invoke_iiii":invoke_iiii,"invoke_viiiiid":invoke_viiiiid,"invoke_viiiiii":invoke_viiiiii,"invoke_iiid":invoke_iiid,"invoke_di":invoke_di,"invoke_iiiiiii":invoke_iiiiiii,"invoke_diiidii":invoke_diiidii,"invoke_viidii":invoke_viidii,"invoke_viiiiiii":invoke_viiiiiii,"invoke_viiiiiiiii":invoke_viiiiiiiii,"invoke_viiiiiiiiii":invoke_viiiiiiiiii,"invoke_iii":invoke_iii,"invoke_diii":invoke_diii,"invoke_diiiiiiiiii":invoke_diiiiiiiiii,"invoke_viiiid":invoke_viiiid,"invoke_diiiiiiiii":invoke_diiiiiiiii,"invoke_did":invoke_did,"invoke_viiiidddddidi":invoke_viiiidddddidi,"invoke_diidii":invoke_diidii,"invoke_diiii":invoke_diiii,"invoke_iiiiiiiiii":invoke_iiiiiiiiii,"invoke_viiid":invoke_viiid,"invoke_viii":invoke_viii,"invoke_v":invoke_v,"invoke_viid":invoke_viid,"invoke_iidid":invoke_iidid,"invoke_viiii":invoke_viiii,"_pthread_getspecific":_pthread_getspecific,"___cxa_begin_catch":___cxa_begin_catch,"_pthread_setspecific":_pthread_setspecific,"_pthread_key_create":_pthread_key_create,"_abort":_abort,"___setErrNo":___setErrNo,"___syscall6":___syscall6,"_llvm_trap":_llvm_trap,"_llvm_pow_f32":_llvm_pow_f32,"_gettimeofday":_gettimeofday,"_pthread_once":_pthread_once,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___gxx_personality_v0":___gxx_personality_v0,"___syscall140":___syscall140,"___resumeException":___resumeException,"_emscripten_asm_const_diiiiiiii":_emscripten_asm_const_diiiiiiii,"___cxa_find_matching_catch":___cxa_find_matching_catch,"___cxa_pure_virtual":___cxa_pure_virtual,"___syscall146":___syscall146,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"cttz_i8":cttz_i8};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.DYNAMICTOP_PTR|0;var j=env.tempDoublePtr|0;var k=env.ABORT|0;var l=env.STACKTOP|0;var m=env.STACK_MAX|0;var n=env.cttz_i8|0;var o=0;var p=0;var q=0;var r=0;var s=global.NaN,t=global.Infinity;var u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0.0;var D=0;var E=global.Math.floor;var F=global.Math.abs;var G=global.Math.sqrt;var H=global.Math.pow;var I=global.Math.cos;var J=global.Math.sin;var K=global.Math.tan;var L=global.Math.acos;var M=global.Math.asin;var N=global.Math.atan;var O=global.Math.atan2;var P=global.Math.exp;var Q=global.Math.log;var R=global.Math.ceil;var S=global.Math.imul;var T=global.Math.min;var U=global.Math.max;var V=global.Math.clz32;var W=env.abort;var X=env.assert;var Y=env.enlargeMemory;var Z=env.getTotalMemory;var _=env.abortOnCannotGrowMemory;var $=env.invoke_viiiii;var aa=env.invoke_vid;var ba=env.invoke_vi;var ca=env.invoke_viiidii;var da=env.invoke_vii;var ea=env.invoke_iiiiiiiiiii;var fa=env.invoke_ii;var ga=env.invoke_viidi;var ha=env.invoke_viddiii;var ia=env.invoke_vidii;var ja=env.invoke_iiiii;var ka=env.invoke_vidi;var la=env.invoke_diiiiiiii;var ma=env.invoke_viiiiddddiid;var na=env.invoke_diiiii;var oa=env.invoke_vidd;var pa=env.invoke_iiii;var qa=env.invoke_viiiiid;var ra=env.invoke_viiiiii;var sa=env.invoke_iiid;var ta=env.invoke_di;var ua=env.invoke_iiiiiii;var va=env.invoke_diiidii;var wa=env.invoke_viidii;var xa=env.invoke_viiiiiii;var ya=env.invoke_viiiiiiiii;var za=env.invoke_viiiiiiiiii;var Aa=env.invoke_iii;var Ba=env.invoke_diii;var Ca=env.invoke_diiiiiiiiii;var Da=env.invoke_viiiid;var Ea=env.invoke_diiiiiiiii;var Fa=env.invoke_did;var Ga=env.invoke_viiiidddddidi;var Ha=env.invoke_diidii;var Ia=env.invoke_diiii;var Ja=env.invoke_iiiiiiiiii;var Ka=env.invoke_viiid;var La=env.invoke_viii;var Ma=env.invoke_v;var Na=env.invoke_viid;var Oa=env.invoke_iidid;var Pa=env.invoke_viiii;var Qa=env._pthread_getspecific;var Ra=env.___cxa_begin_catch;var Sa=env._pthread_setspecific;var Ta=env._pthread_key_create;var Ua=env._abort;var Va=env.___setErrNo;var Wa=env.___syscall6;var Xa=env._llvm_trap;var Ya=env._llvm_pow_f32;var Za=env._gettimeofday;var _a=env._pthread_once;var $a=env._emscripten_memcpy_big;var ab=env.___gxx_personality_v0;var bb=env.___syscall140;var cb=env.___resumeException;var db=env._emscripten_asm_const_diiiiiiii;var eb=env.___cxa_find_matching_catch;var fb=env.___cxa_pure_virtual;var gb=env.___syscall146;var hb=env.__ZSt18uncaught_exceptionv;var ib=0.0;
// EMSCRIPTEN_START_FUNCS
function wf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+20>>2]=c[a+72>>2];e=c[a+16>>2]|0;c[b+16>>2]=e;c[b+12>>2]=0;if(!e)return 16476;g=zb[c[(c[d>>2]|0)+16>>2]&63](d,76,e)|0;e=c[g+8>>2]|0;c[b+12>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;if((c[b+16>>2]|0)>0){f=0;while(1){h=c[a+24>>2]|0;c[e+72>>2]=c[h+(f*80|0)+72>>2];c[e+64>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,c[h+(f*80|0)+64>>2]|0)|0;if(!(Kb[c[(c[d>>2]|0)+24>>2]&31](d,c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0)|0)){h=c[(c[d>>2]|0)+16>>2]|0;i=c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0;i=pb[c[(c[i>>2]|0)+52>>2]&127](i)|0;i=zb[h&63](d,i,1)|0;h=c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0;h=zb[c[(c[h>>2]|0)+56>>2]&63](h,c[i+8>>2]|0,d)|0;jb[c[(c[d>>2]|0)+20>>2]&31](d,i,h,1346455635,c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0);}i=c[a+24>>2]|0;c[e+68>>2]=c[i+(f*80|0)+68>>2];c[e>>2]=c[i+(f*80|0)>>2];c[e+4>>2]=c[i+(f*80|0)+4>>2];c[e+8>>2]=c[i+(f*80|0)+8>>2];c[e+12>>2]=c[i+(f*80|0)+12>>2];c[e+16>>2]=c[i+(f*80|0)+16>>2];c[e+20>>2]=c[i+(f*80|0)+20>>2];c[e+24>>2]=c[i+(f*80|0)+24>>2];c[e+28>>2]=c[i+(f*80|0)+28>>2];c[e+32>>2]=c[i+(f*80|0)+32>>2];c[e+36>>2]=c[i+(f*80|0)+36>>2];c[e+40>>2]=c[i+(f*80|0)+40>>2];c[e+44>>2]=c[i+(f*80|0)+44>>2];c[e+48>>2]=c[i+(f*80|0)+48>>2];c[e+52>>2]=c[i+(f*80|0)+52>>2];c[e+56>>2]=c[i+(f*80|0)+56>>2];c[e+60>>2]=c[i+(f*80|0)+60>>2];f=f+1|0;if((f|0)>=(c[b+16>>2]|0)){e=d;break}else e=e+76|0;}}else e=d;jb[c[(c[e>>2]|0)+20>>2]&31](d,g,16451,1497453121,c[g+8>>2]|0);return 16476}function xf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((c[b+8>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6436]=(c[6436]|0)+1,e=ic((d*36|3)+16|0)|0,(e|0)!=0):0){c[(e+4+15&-16)+-4>>2]=e;r=e+4+15&-16;}else r=0;n=c[b+4>>2]|0;if((n|0)>0){m=0;do{o=c[b+12>>2]|0;i=r+(m*36|0)+16|0;a[i>>0]=1;j=r+(m*36|0)+12|0;c[j>>2]=0;l=r+(m*36|0)+4|0;c[l>>2]=0;k=r+(m*36|0)+8|0;c[k>>2]=0;p=c[o+(m*36|0)+4>>2]|0;if((p|0)>0){c[6436]=(c[6436]|0)+1;e=ic((p<<2|3)+16|0)|0;if(!e)f=0;else{c[(e+4+15&-16)+-4>>2]=e;f=e+4+15&-16;}g=c[l>>2]|0;h=c[j>>2]|0;if((g|0)<=0){if(h|0)q=13;}else{e=0;do{c[f+(e<<2)>>2]=c[h+(e<<2)>>2];e=e+1|0;}while((e|0)!=(g|0));q=13;}if((q|0)==13?(q=0,a[i>>0]|0):0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}a[i>>0]=1;c[j>>2]=f;c[k>>2]=p;Ik(f|0,0,p<<2|0)|0;g=c[j>>2]|0;c[l>>2]=p;f=c[o+(m*36|0)+12>>2]|0;e=0;do{c[g+(e<<2)>>2]=c[f+(e<<2)>>2];e=e+1|0;}while((e|0)!=(p|0))}else c[l>>2]=p;p=r+(m*36|0)+20|0;o=o+(m*36|0)+20|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];m=m+1|0;}while((m|0)!=(n|0));f=c[b+4>>2]|0;if((f|0)>0){e=0;do{h=c[b+12>>2]|0;i=h+(e*36|0)+4|0;j=h+(e*36|0)+12|0;k=c[j>>2]|0;g=h+(e*36|0)+16|0;if(k|0){if(a[g>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[j>>2]=0;}a[g>>0]=1;c[j>>2]=0;c[i>>2]=0;c[h+(e*36|0)+8>>2]=0;e=e+1|0;}while((e|0)!=(f|0))}}e=c[b+12>>2]|0;if(e|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=r;c[b+8>>2]=d;return}function yf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=c[b+12>>2]|0;l=c[b+32>>2]|0;if((l|0)>=(k|0))return;if((c[b+36>>2]|0)<(k|0)){if(!k){d=0;f=l;}else{c[6436]=(c[6436]|0)+1;d=ic((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=c[b+32>>2]|0;}g=c[b+40>>2]|0;if((f|0)<=0)if(!g)e=b+44|0;else j=12;else{e=0;do{c[d+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0));j=12;}if((j|0)==12)if(!(a[b+44>>0]|0))e=b+44|0;else{c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);e=b+44|0;}a[e>>0]=1;c[b+40>>2]=d;c[b+36>>2]=k;i=b+40|0;}else{i=b+40|0;d=c[b+40>>2]|0;}Ik(d+(l<<2)|0,0,(k<<2)-(l<<2)|0)|0;c[b+32>>2]=k;h=c[b+52>>2]|0;if((h|0)<(k|0)){if((c[b+56>>2]|0)<(k|0)){if(!k){d=0;f=h;}else{c[6436]=(c[6436]|0)+1;d=ic((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=c[b+52>>2]|0;}g=c[b+60>>2]|0;if((f|0)<=0)if(!g)e=b+64|0;else j=26;else{e=0;do{c[d+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0));j=26;}if((j|0)==26)if(!(a[b+64>>0]|0))e=b+64|0;else{c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);e=b+64|0;}a[e>>0]=1;c[b+60>>2]=d;c[b+56>>2]=k;}else d=c[b+60>>2]|0;Ik(d+(h<<2)|0,0,(k<<2)-(h<<2)|0)|0;}c[b+52>>2]=k;if((k|0)>0){Ik(c[i>>2]|0,-1,k<<2|0)|0;Ik(c[b+60>>2]|0,-1,k<<2|0)|0;}if((l|0)<=0)return;g=c[b+16>>2]|0;e=c[i>>2]|0;f=c[b+60>>2]|0;d=0;do{k=c[g+(d*12|0)+4>>2]<<16|c[g+(d*12|0)>>2];k=(k+~(k<<15)>>10^k+~(k<<15))*9|0;k=e+((((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11))&(c[b+12>>2]|0)+-1)<<2)|0;c[f+(d<<2)>>2]=c[k>>2];c[k>>2]=d;d=d+1|0;}while((d|0)!=(l|0));return}function zf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;f=l;l=l+256|0;c[f+32>>2]=5816;k=f+32+36|0;c[k>>2]=c[b>>2];c[k+4>>2]=c[b+4>>2];c[k+8>>2]=c[b+8>>2];c[k+12>>2]=c[b+12>>2];m=f+32+52|0;c[m>>2]=c[d>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];c[f+32+212>>2]=a;c[f+32+216>>2]=e;c[f+32+68>>2]=1065353216;c[f+32+72>>2]=0;c[f+32+72+4>>2]=0;c[f+32+72+8>>2]=0;c[f+32+72+12>>2]=0;c[f+32+88>>2]=1065353216;c[f+32+92>>2]=0;c[f+32+92+4>>2]=0;c[f+32+92+8>>2]=0;c[f+32+92+12>>2]=0;c[f+32+108>>2]=1065353216;c[f+32+112>>2]=0;c[f+32+116>>2]=c[k>>2];c[f+32+116+4>>2]=c[k+4>>2];c[f+32+116+8>>2]=c[k+8>>2];c[f+32+116+12>>2]=c[k+12>>2];c[f+32+132>>2]=1065353216;c[f+32+136>>2]=0;c[f+32+136+4>>2]=0;c[f+32+136+8>>2]=0;c[f+32+136+12>>2]=0;c[f+32+152>>2]=1065353216;c[f+32+156>>2]=0;c[f+32+156+4>>2]=0;c[f+32+156+8>>2]=0;c[f+32+156+12>>2]=0;c[f+32+172>>2]=1065353216;c[f+32+176>>2]=0;c[f+32+180>>2]=c[d>>2];c[f+32+180+4>>2]=c[d+4>>2];c[f+32+180+8>>2]=c[d+8>>2];c[f+32+180+12>>2]=c[d+12>>2];n=+g[d>>2]-+g[b>>2];j=+g[d+4>>2]-+g[b+4>>2];i=+g[d+8>>2]-+g[b+8>>2];h=1.0/+G(+(n*n+j*j+i*i));q=n*h==0.0?999999984306749440.0:1.0/(n*h);g[f+32+4>>2]=q;p=j*h==0.0?999999984306749440.0:1.0/(j*h);g[f+32+8>>2]=p;o=i*h==0.0?999999984306749440.0:1.0/(i*h);g[f+32+12>>2]=o;c[f+32+20>>2]=q<0.0&1;c[f+32+24>>2]=p<0.0&1;c[f+32+28>>2]=o<0.0&1;g[f+32+32>>2]=n*h*(+g[m>>2]-+g[k>>2])+j*h*(+g[f+32+56>>2]-+g[f+32+40>>2])+i*h*(+g[f+32+60>>2]-+g[f+32+44>>2]);e=c[a+68>>2]|0;a=c[(c[e>>2]|0)+24>>2]|0;c[f+16>>2]=0;c[f+16+4>>2]=0;c[f+16+8>>2]=0;c[f+16+12>>2]=0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Bb[a&7](e,b,d,f+32|0,f+16|0,f);l=f;return}function Af(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;h=l;l=l+128|0;if(!b){l=h;return}if(c[b+40>>2]|0){Af(a,c[b+36>>2]|0,d+1|0,e,f);Af(a,c[b+40>>2]|0,d+1|0,e,f);}if((d|0)<0){l=h;return}m=+g[b>>2];r=+g[b+16>>2];j=+g[b+4>>2];q=+g[b+20>>2];i=+g[b+8>>2];p=+g[b+24>>2];k=(m+r)*.5-(r-m)*.5;n=(j+q)*.5-(q-j)*.5;o=(i+p)*.5-(p-i)*.5;m=(m+r)*.5+(r-m)*.5;j=(j+q)*.5+(q-j)*.5;i=(i+p)*.5+(p-i)*.5;f=(c[b+40>>2]|0)==0?f:e;g[h>>2]=k;g[h+4>>2]=n;g[h+8>>2]=o;g[h+12>>2]=0.0;g[h+16>>2]=m;g[h+20>>2]=n;g[h+24>>2]=o;g[h+28>>2]=0.0;g[h+32>>2]=m;g[h+36>>2]=j;g[h+40>>2]=o;g[h+44>>2]=0.0;g[h+48>>2]=k;g[h+52>>2]=j;g[h+56>>2]=o;g[h+60>>2]=0.0;g[h+64>>2]=k;g[h+68>>2]=n;g[h+72>>2]=i;g[h+76>>2]=0.0;g[h+80>>2]=m;g[h+84>>2]=n;g[h+88>>2]=i;g[h+92>>2]=0.0;g[h+96>>2]=m;g[h+100>>2]=j;g[h+104>>2]=i;g[h+108>>2]=0.0;g[h+112>>2]=k;g[h+116>>2]=j;g[h+120>>2]=i;g[h+124>>2]=0.0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,h,h+16|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+16|0,h+32|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+32|0,h+48|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+48|0,h,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+64|0,h+80|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+80|0,h+96|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+96|0,h+112|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+112|0,h+64|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h,h+64|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+16|0,h+80|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+32|0,h+96|0,f);Zb[c[(c[a>>2]|0)+8>>2]&127](a,h+48|0,h+112|0,f);l=h;return}function Bf(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;r=l;l=l+96|0;m=r;n=m+96|0;do{c[m>>2]=0;m=m+4|0;}while((m|0)<(n|0));if(!i)p=c[c[b+880>>2]>>2]|0;else p=i;i=c[b+772>>2]|0;if((i|0)==(c[b+776>>2]|0)?(q=i|0?i<<1:1,(i|0)<(q|0)):0){if(!q)o=0;else{c[6436]=(c[6436]|0)+1;i=ic((q*104|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}o=i;i=c[b+772>>2]|0;}if((i|0)>0){j=0;do{m=o+(j*104|0)|0;k=(c[b+780>>2]|0)+(j*104|0)|0;n=m+104|0;do{c[m>>2]=c[k>>2];m=m+4|0;k=k+4|0;}while((m|0)<(n|0));j=j+1|0;}while((j|0)!=(i|0))}i=c[b+780>>2]|0;if(i|0){if(a[b+784>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+780>>2]=0;}a[b+784>>0]=1;c[b+780>>2]=o;c[b+776>>2]=q;i=c[b+772>>2]|0;}m=c[b+780>>2]|0;c[m+(i*104|0)>>2]=0;c[m+(i*104|0)+4>>2]=p;m=m+(i*104|0)+8|0;k=r;n=m+96|0;do{c[m>>2]=c[k>>2];m=m+4|0;k=k+4|0;}while((m|0)<(n|0));q=c[b+772>>2]|0;c[b+772>>2]=q+1;p=c[b+780>>2]|0;k=c[b+720>>2]|0;c[p+(q*104|0)+8>>2]=k+(d*104|0);o=c[b+720>>2]|0;c[p+(q*104|0)+12>>2]=o+(e*104|0);m=c[b+720>>2]|0;c[p+(q*104|0)+16>>2]=m+(f*104|0);n=c[b+720>>2]|0;c[p+(q*104|0)+20>>2]=n+(h*104|0);z=+g[k+(d*104|0)+8>>2];w=+g[k+(d*104|0)+12>>2];A=+g[k+(d*104|0)+16>>2];t=+g[m+(f*104|0)+8>>2]-z;y=+g[m+(f*104|0)+12>>2]-w;v=+g[m+(f*104|0)+16>>2]-A;u=+g[n+(h*104|0)+8>>2]-z;x=+g[n+(h*104|0)+12>>2]-w;s=+g[n+(h*104|0)+16>>2]-A;g[p+(q*104|0)+24>>2]=(+g[o+(e*104|0)+16>>2]-A)*(t*x-y*u)+((+g[o+(e*104|0)+8>>2]-z)*(y*s-v*x)+(+g[o+(e*104|0)+12>>2]-w)*(v*u-t*s));a[b+924>>0]=1;l=r;return}function Cf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0;f=l;l=l+784|0;c[f+712>>2]=1065353216;c[f+712+4>>2]=0;c[f+712+4+4>>2]=0;c[f+712+4+8>>2]=0;c[f+712+4+12>>2]=0;c[f+712+20>>2]=1065353216;c[f+712+24>>2]=0;c[f+712+24+4>>2]=0;c[f+712+24+8>>2]=0;c[f+712+24+12>>2]=0;c[f+712+40>>2]=1065353216;e=f+712+44|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[f+536>>2]=3816;c[f+536+168>>2]=0;g[f+536+172>>2]=0.0;c[f+536+164>>2]=c[b+200>>2];e=c[b+196>>2]|0;c[f+480+8>>2]=0;c[f+480+12>>2]=1065353216;c[f+480+16>>2]=1065353216;c[f+480+20>>2]=1065353216;g[f+480+24>>2]=0.0;c[f+480>>2]=6796;c[f+480+4>>2]=8;c[f+480+28>>2]=e;c[f+480+44>>2]=e;c[f+376+8>>2]=0;c[f+376+12>>2]=1065353216;c[f+376+16>>2]=1065353216;c[f+376+20>>2]=1065353216;g[f+376+24>>2]=0.0;g[f+376+44>>2]=.03999999910593033;c[f+376+52>>2]=0;c[f+376>>2]=3844;c[f+376+4>>2]=1;c[f+376+56>>2]=c[d>>2];c[f+376+56+4>>2]=c[d+4>>2];c[f+376+56+8>>2]=c[d+8>>2];c[f+376+56+12>>2]=c[d+12>>2];c[f+376+72>>2]=c[d+16>>2];c[f+376+72+4>>2]=c[d+16+4>>2];c[f+376+72+8>>2]=c[d+16+8>>2];c[f+376+72+12>>2]=c[d+16+12>>2];c[f+376+88>>2]=c[d+32>>2];c[f+376+88+4>>2]=c[d+32+4>>2];c[f+376+88+8>>2]=c[d+32+8>>2];c[f+376+88+12>>2]=c[d+32+12>>2];g[f+16+308>>2]=9.999999747378752e-05;a[f+16+332>>0]=0;c[f>>2]=5088;c[f+4>>2]=f+16;c[f+8>>2]=f+480;c[f+12>>2]=f+376;if(bd(f,b+4|0,b+68|0,f+712|0,f+712|0,f+536|0)|0?(h=+g[f+536+164>>2],+g[b+200>>2]>h):0)g[b+200>>2]=h;c[f+376>>2]=7248;e=c[f+376+52>>2]|0;if(!e){l=f;return}lb[c[c[e>>2]>>2]&511](e);e=c[f+376+52>>2]|0;if(!e){l=f;return}c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);l=f;return}function Df(d,e,f,g,h,i,j,k,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,o=0;o=l;l=l+48|0;c[6436]=(c[6436]|0)+1;g=ic(83)|0;if(!g)n=0;else{c[(g+4+15&-16)+-4>>2]=g;n=g+4+15&-16;}c[n>>2]=h;b[n+4>>1]=i;b[n+6>>1]=j;h=n+16|0;c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];h=n+32|0;c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];c[n+8>>2]=0;h=n+56|0;c[h>>2]=0;i=n+52|0;c[i>>2]=0;c[o+16>>2]=c[e>>2];c[o+16+4>>2]=c[e+4>>2];c[o+16+8>>2]=c[e+8>>2];c[o+16+12>>2]=c[e+12>>2];c[o+16+16>>2]=c[f>>2];c[o+16+16+4>>2]=c[f+4>>2];c[o+16+16+8>>2]=c[f+8>>2];c[o+16+16+12>>2]=c[f+12>>2];c[n+60>>2]=c[d+144>>2];g=(c[d+188>>2]|0)+1|0;c[d+188>>2]=g;c[n+12>>2]=g;g=c[d+8>>2]|0;if(!g){c[6436]=(c[6436]|0)+1;g=ic(63)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16;}k=g;m=k+44|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(m|0))}else c[d+8>>2]=0;c[g+32>>2]=0;c[g+36>>2]=n;c[g+40>>2]=0;c[g>>2]=c[o+16>>2];c[g+4>>2]=c[o+16+4>>2];c[g+8>>2]=c[o+16+8>>2];c[g+12>>2]=c[o+16+12>>2];c[g+16>>2]=c[o+16+16>>2];c[g+20>>2]=c[o+16+20>>2];c[g+24>>2]=c[o+16+24>>2];c[g+28>>2]=c[o+16+28>>2];Fe(d+4|0,c[d+4>>2]|0,g);c[d+16>>2]=(c[d+16>>2]|0)+1;c[n+48>>2]=g;k=d+124+(c[d+144>>2]<<2)|0;c[i>>2]=0;c[h>>2]=c[k>>2];g=c[k>>2]|0;if(g|0)c[g+52>>2]=n;c[k>>2]=n;if(a[d+193>>0]|0){l=o;return n|0}c[o>>2]=9028;c[o+4>>2]=d;c[o+8>>2]=n;Xe(c[d+4>>2]|0,o+16|0,o);Xe(c[d+64>>2]|0,o+16|0,o);l=o;return n|0}function Ef(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0;q=l;l=l+48|0;p=c[b+720>>2]|0;a:do if(h?(k=c[b+732>>2]|0,(k|0)>0):0){i=c[b+740>>2]|0;h=0;while(1){j=c[i+(h*52|0)+8>>2]|0;if((j|0)==(p+(d*104|0)|0)?(c[i+(h*52|0)+12>>2]|0)==(p+(e*104|0)|0):0){h=25;break}if((j|0)==(p+(e*104|0)|0)?(c[i+(h*52|0)+12>>2]|0)==(p+(d*104|0)|0):0){h=25;break}h=h+1|0;if((h|0)>=(k|0))break a}if((h|0)==25){l=q;return}}while(0);k=q;m=k+44|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(m|0));if(!f)n=c[c[b+880>>2]>>2]|0;else n=f;h=c[b+732>>2]|0;if((h|0)==(c[b+736>>2]|0)?(o=h|0?h<<1:1,(h|0)<(o|0)):0){if(!o)f=0;else{c[6436]=(c[6436]|0)+1;h=ic((o*52|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}f=h;h=c[b+732>>2]|0;}if((h|0)>0){i=0;do{k=f+(i*52|0)|0;j=(c[b+740>>2]|0)+(i*52|0)|0;m=k+52|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0;}while((k|0)<(m|0));i=i+1|0;}while((i|0)!=(h|0))}h=c[b+740>>2]|0;if(h|0){if(a[b+744>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+740>>2]=0;}a[b+744>>0]=1;c[b+740>>2]=f;c[b+736>>2]=o;h=c[b+732>>2]|0;}k=c[b+740>>2]|0;c[k+(h*52|0)>>2]=0;c[k+(h*52|0)+4>>2]=n;k=k+(h*52|0)+8|0;j=q;m=k+44|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0;}while((k|0)<(m|0));o=c[b+732>>2]|0;c[b+732>>2]=o+1;n=c[b+740>>2]|0;c[n+(o*52|0)+8>>2]=p+(d*104|0);c[n+(o*52|0)+12>>2]=p+(e*104|0);t=+g[p+(d*104|0)+8>>2]-+g[p+(e*104|0)+8>>2];s=+g[p+(d*104|0)+12>>2]-+g[p+(e*104|0)+12>>2];r=+g[p+(d*104|0)+16>>2]-+g[p+(e*104|0)+16>>2];g[n+(o*52|0)+16>>2]=+G(+(t*t+s*s+r*r));a[b+924>>0]=1;l=q;return}function Ff(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0;d=c[a+752>>2]|0;if((d|0)>0){e=c[a+760>>2]|0;b=0;do{f=c[e+(b*44|0)+8>>2]|0;h=c[e+(b*44|0)+12>>2]|0;i=c[e+(b*44|0)+16>>2]|0;l=+g[f+8>>2];n=+g[f+12>>2];j=+g[f+16>>2];k=+g[h+8>>2]-l;o=+g[h+12>>2]-n;m=+g[h+16>>2]-j;l=+g[i+8>>2]-l;n=+g[i+12>>2]-n;j=+g[i+16>>2]-j;g[e+(b*44|0)+36>>2]=+G(+((k*n-o*l)*(k*n-o*l)+((o*j-m*n)*(o*j-m*n)+(m*l-k*j)*(m*l-k*j))));b=b+1|0;}while((b|0)!=(d|0))}d=c[a+712>>2]|0;if((d|0)>0){c[6436]=(c[6436]|0)+1;b=ic((d<<2|3)+16|0)|0;if(!b)e=0;else{c[(b+4+15&-16)+-4>>2]=b;e=b+4+15&-16;}Ik(e|0,0,d<<2|0)|0;f=c[a+712>>2]|0;if((f|0)>0){d=c[a+720>>2]|0;b=0;do{g[d+(b*104|0)+92>>2]=0.0;b=b+1|0;}while((b|0)!=(f|0));i=e;h=e;b=f;}else{i=e;h=e;b=f;}}else{i=0;h=0;b=d;}f=c[a+752>>2]|0;if((f|0)>0){d=c[a+760>>2]|0;e=c[a+720>>2]|0;b=0;do{o=+F(+(+g[d+(b*44|0)+36>>2]));p=c[d+(b*44|0)+8>>2]|0;q=i+(((p-e|0)/104|0)<<2)|0;c[q>>2]=(c[q>>2]|0)+1;g[p+92>>2]=o+ +g[p+92>>2];p=c[d+(b*44|0)+12>>2]|0;q=i+(((p-e|0)/104|0)<<2)|0;c[q>>2]=(c[q>>2]|0)+1;g[p+92>>2]=o+ +g[p+92>>2];p=c[d+(b*44|0)+16>>2]|0;q=i+(((p-e|0)/104|0)<<2)|0;c[q>>2]=(c[q>>2]|0)+1;g[p+92>>2]=o+ +g[p+92>>2];b=b+1|0;}while((b|0)!=(f|0));b=c[a+712>>2]|0;}if((b|0)>0){d=0;do{e=c[i+(d<<2)>>2]|0;if((e|0)>0){q=(c[a+720>>2]|0)+(d*104|0)+92|0;g[q>>2]=+g[q>>2]/+(e|0);}else g[(c[a+720>>2]|0)+(d*104|0)+92>>2]=0.0;d=d+1|0;}while((d|0)!=(b|0));if(!h)return}else if((i|0)==0|(h|0)==0)return;c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);return}function Gf(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0;e=l;l=l+128|0;G=c[(c[a+8>>2]|0)+24>>2]|0;h=c[G+(d*80|0)+64>>2]|0;f=c[a+12>>2]|0;x=+g[G+(d*80|0)>>2];D=+g[f>>2];w=+g[G+(d*80|0)+16>>2];C=+g[f+4>>2];v=+g[G+(d*80|0)+32>>2];B=+g[f+8>>2];u=+g[G+(d*80|0)+4>>2];t=+g[G+(d*80|0)+20>>2];s=+g[G+(d*80|0)+36>>2];r=+g[G+(d*80|0)+8>>2];p=+g[G+(d*80|0)+24>>2];n=+g[G+(d*80|0)+40>>2];A=+g[f+16>>2];z=+g[f+20>>2];y=+g[f+24>>2];q=+g[f+32>>2];o=+g[f+36>>2];m=+g[f+40>>2];F=+g[G+(d*80|0)+48>>2];E=+g[G+(d*80|0)+52>>2];i=+g[G+(d*80|0)+56>>2];k=+g[f+48>>2]+(D*F+C*E+B*i);j=A*F+z*E+y*i+ +g[f+52>>2];i=q*F+o*E+m*i+ +g[f+56>>2];g[e+56>>2]=x*D+w*C+v*B;g[e+56+4>>2]=D*u+C*t+B*s;g[e+56+8>>2]=D*r+C*p+B*n;g[e+56+12>>2]=0.0;g[e+56+16>>2]=x*A+w*z+v*y;g[e+56+20>>2]=u*A+t*z+s*y;g[e+56+24>>2]=r*A+p*z+n*y;g[e+56+28>>2]=0.0;g[e+56+32>>2]=x*q+w*o+v*m;g[e+56+36>>2]=u*q+t*o+s*m;g[e+56+40>>2]=r*q+p*o+n*m;g[e+56+44>>2]=0.0;g[e+56+48>>2]=k;g[e+56+52>>2]=j;g[e+56+56>>2]=i;g[e+56+60>>2]=0.0;f=c[a+4>>2]|0;c[e+32>>2]=0;c[e+32+4>>2]=h;c[e+32+8>>2]=f;c[e+32+12>>2]=e+56;c[e+32+16>>2]=-1;c[e+32+20>>2]=d;f=c[a+24>>2]|0;g[e+4>>2]=1.0;c[e+8>>2]=0;b[e+12>>1]=1;b[e+14>>1]=-1;c[e+16>>2]=0;c[e>>2]=5920;c[e+20>>2]=f;c[e+24>>2]=d;c[e+4>>2]=c[f+4>>2];c[e+16>>2]=c[f+16>>2];Nc(c[a+16>>2]|0,c[a+20>>2]|0,e+32|0,e);l=e;return}function Hf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;i=l;l=l+80|0;h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);f=0;do{q=i+64+(f<<2)|0;c[i+64>>2]=0;c[i+64+4>>2]=0;c[i+64+8>>2]=0;c[i+64+12>>2]=0;g[q>>2]=1.0;j=c[(c[a>>2]|0)+64>>2]|0;k=+g[i+64>>2];m=+g[i+64+4>>2];n=+g[i+64+8>>2];o=k*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=k*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[i+32>>2]=+g[b>>2]*k+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[i+32+4>>2]=o;g[i+32+8>>2]=p;g[i+32+12>>2]=0.0;Vb[j&127](i+48|0,a,i+32|0);p=+g[i+48>>2];o=+g[i+48+4>>2];n=+g[i+48+8>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];k=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[i+32>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[i+32+4>>2]=m;g[i+32+8>>2]=k;g[i+32+12>>2]=0.0;j=i+32+(f<<2)|0;g[e+(f<<2)>>2]=h+ +g[j>>2];g[q>>2]=-1.0;q=c[(c[a>>2]|0)+64>>2]|0;k=+g[i+64>>2];m=+g[i+64+4>>2];n=+g[i+64+8>>2];o=k*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=k*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[i>>2]=+g[b>>2]*k+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[i+4>>2]=o;g[i+8>>2]=p;g[i+12>>2]=0.0;Vb[q&127](i+16|0,a,i);p=+g[i+16>>2];o=+g[i+16+4>>2];n=+g[i+16+8>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];k=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[i+32>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[i+32+4>>2]=m;g[i+32+8>>2]=k;g[i+32+12>>2]=0.0;g[d+(f<<2)>>2]=+g[j>>2]-h;f=f+1|0;}while((f|0)!=3);l=i;return}function If(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0;k=l;l=l+160|0;i=c[b+12>>2]|0;if(!i){l=k;return}m=(a[b+16>>0]|0)!=0;n=m?e:d;e=m?d:e;o=c[n+4>>2]|0;d=c[e+4>>2]|0;c[h+4>>2]=i;i=c[i+752>>2]|0;c[k+136>>2]=9428;c[k+136+4>>2]=o;c[k+136+8>>2]=d;c[k+136+12>>2]=i;g[k+128>>2]=999999984306749440.0;i=c[n+12>>2]|0;c[k>>2]=c[i>>2];c[k+4>>2]=c[i+4>>2];c[k+8>>2]=c[i+8>>2];c[k+12>>2]=c[i+12>>2];c[k+16>>2]=c[i+16>>2];c[k+16+4>>2]=c[i+16+4>>2];c[k+16+8>>2]=c[i+16+8>>2];c[k+16+12>>2]=c[i+16+12>>2];c[k+32>>2]=c[i+32>>2];c[k+32+4>>2]=c[i+32+4>>2];c[k+32+8>>2]=c[i+32+8>>2];c[k+32+12>>2]=c[i+32+12>>2];c[k+48>>2]=c[i+48>>2];c[k+48+4>>2]=c[i+48+4>>2];c[k+48+8>>2]=c[i+48+8>>2];c[k+48+12>>2]=c[i+48+12>>2];i=c[e+12>>2]|0;c[k+64>>2]=c[i>>2];c[k+64+4>>2]=c[i+4>>2];c[k+64+8>>2]=c[i+8>>2];c[k+64+12>>2]=c[i+12>>2];c[k+80>>2]=c[i+16>>2];c[k+80+4>>2]=c[i+16+4>>2];c[k+80+8>>2]=c[i+16+8>>2];c[k+80+12>>2]=c[i+16+12>>2];c[k+96>>2]=c[i+32>>2];c[k+96+4>>2]=c[i+32+4>>2];c[k+96+8>>2]=c[i+32+8>>2];c[k+96+12>>2]=c[i+32+12>>2];c[k+112>>2]=c[i+48>>2];c[k+112+4>>2]=c[i+48+4>>2];c[k+112+8>>2]=c[i+48+8>>2];c[k+112+12>>2]=c[i+48+12>>2];Jd(k+136|0,k,h,c[f+20>>2]|0,m);do if(a[b+8>>0]|0?(j=c[h+4>>2]|0,c[j+748>>2]|0):0){d=c[j+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;b=c[(c[h+12>>2]|0)+8>>2]|0;if((d|0)==(e|0)){Ue(j,d+4|0,b+4|0);break}else{Ue(j,b+4|0,e+4|0);break}}while(0);l=k;return}function Jf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0;b=l;l=l+608|0;p=+g[d+116>>2]-+g[d+52>>2];o=+g[d+120>>2]-+g[d+56>>2];n=+g[d+124>>2]-+g[d+60>>2];i=+g[e+116>>2]-+g[e+52>>2];j=+g[e+120>>2]-+g[e+56>>2];k=+g[e+124>>2]-+g[e+60>>2];m=+g[d+252>>2];if(p*p+o*o+n*n<m*m?(p=+g[e+252>>2],i*i+j*j+k*k<p*p):0){p=1.0;l=b;return +p}h=c[d+192>>2]|0;f=c[e+248>>2]|0;c[b+552+8>>2]=0;c[b+552+12>>2]=1065353216;c[b+552+16>>2]=1065353216;c[b+552+20>>2]=1065353216;g[b+552+24>>2]=0.0;c[b+552>>2]=6796;c[b+552+4>>2]=8;c[b+552+28>>2]=f;c[b+552+44>>2]=f;c[b+376>>2]=3816;g[b+376+164>>2]=999999984306749440.0;c[b+376+168>>2]=0;g[b+376+172>>2]=0.0;g[b+16+308>>2]=9.999999747378752e-05;a[b+16+332>>0]=0;c[b>>2]=9264;c[b+4>>2]=b+16;c[b+8>>2]=h;c[b+12>>2]=b+552;if(od(b,d+4|0,d+68|0,e+4|0,e+68|0,b+376|0)|0){i=+g[b+376+164>>2];if(+g[d+244>>2]>i)g[d+244>>2]=i;if(+g[e+244>>2]>i)g[e+244>>2]=i;if(!(i<1.0))i=1.0;}else i=1.0;h=c[e+192>>2]|0;f=c[d+248>>2]|0;c[b+552+8>>2]=0;c[b+552+12>>2]=1065353216;c[b+552+16>>2]=1065353216;c[b+552+20>>2]=1065353216;g[b+552+24>>2]=0.0;c[b+552>>2]=6796;c[b+552+4>>2]=8;c[b+552+28>>2]=f;c[b+552+44>>2]=f;c[b+376>>2]=3816;g[b+376+164>>2]=999999984306749440.0;c[b+376+168>>2]=0;g[b+376+172>>2]=0.0;g[b+16+308>>2]=9.999999747378752e-05;a[b+16+332>>0]=0;c[b>>2]=9264;c[b+4>>2]=b+16;c[b+8>>2]=b+552;c[b+12>>2]=h;if(od(b,d+4|0,d+68|0,e+4|0,e+68|0,b+376|0)|0){j=+g[b+376+164>>2];if(+g[d+244>>2]>j)g[d+244>>2]=j;if(+g[e+244>>2]>j)g[e+244>>2]=j;if(i>j)i=j;}p=i;l=b;return +p}function Kf(b,d){b=b|0;d=+d;var e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;m=l;l=l+16|0;aj(12164);e=c[b+232>>2]|0;if((e|0)>0){k=(a[26328]|0)==0;j=0;do{i=c[(c[b+240>>2]|0)+(j<<2)>>2]|0;a:do if(i){f=c[i+216>>2]|0;b:do switch(f|0){case 4:case 2:{if((f|0)==4)break a;break}default:{q=+g[i+312>>2];p=+g[i+316>>2];o=+g[i+320>>2];n=+g[i+472>>2];if(q*q+p*p+o*o<n*n?(n=+g[i+328>>2],o=+g[i+332>>2],p=+g[i+336>>2],q=+g[i+476>>2],n*n+o*o+p*p<q*q):0){g[i+220>>2]=+g[i+220>>2]+d;break b}g[i+220>>2]=0.0;if((f&-2|0)!=4){c[i+216>>2]=0;f=0;}}}while(0);h=f&-2;do if(k){if((h|0)!=2?!(+g[i+220>>2]>2.0):0)break;if(c[i+204>>2]&3|0){if((h|0)==4)break a;c[i+216>>2]=2;break a}if((f|0)==1){if((h|0)==4)break a;c[i+216>>2]=3;break a}else{if((f|0)!=2)break a;e=(c[i+260>>2]|0)+2|0;c[i+328>>2]=0;c[i+328+4>>2]=0;c[i+328+8>>2]=0;c[i+328+12>>2]=0;c[i+260>>2]=e;c[i+312>>2]=0;c[i+312+4>>2]=0;c[i+312+8>>2]=0;c[i+312+12>>2]=0;e=c[b+232>>2]|0;break a}}while(0);if((h|0)!=4)c[i+216>>2]=1;}while(0);j=j+1|0;}while((j|0)<(e|0))}e=c[2388]|0;k=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=k;if(k|0){l=m;return}do if(c[e+4>>2]|0){Za(m|0,0)|0;k=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[m+4>>2]|0)-(c[k+4>>2]|0)+(((c[m>>2]|0)-(c[k>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2388]|0;break}else{l=m;return}}while(0);c[2388]=c[e+20>>2];l=m;return}function Lf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,H=0.0,I=0;I=l;l=l+32|0;j=+g[b+16>>2];f=+g[b>>2];k=+g[b+20>>2];h=+g[b+4>>2];n=+g[b+24>>2];i=+g[b+8>>2];r=+g[b+32>>2];v=+g[b+36>>2];w=+g[b+40>>2];B=(k-h)*(w-i)-(n-i)*(v-h);C=(n-i)*(r-f)-(j-f)*(w-i);D=(j-f)*(v-h)-(k-h)*(r-f);g[I+16>>2]=B;g[I+16+4>>2]=C;g[I+16+8>>2]=D;g[I+16+12>>2]=0.0;o=+g[a+4>>2];s=+g[a+8>>2];x=+g[a+12>>2];E=B*o+C*s+D*x-(f*B+h*C+i*D);p=+g[a+20>>2];t=+g[a+24>>2];y=+g[a+28>>2];if(E*(B*p+C*t+D*y-(f*B+h*C+i*D))>=0.0){l=I;return}F=c[a+36>>2]|0;if(E<=0.0&(F&1|0)!=0){l=I;return}H=E/(E-(B*p+C*t+D*y-(f*B+h*C+i*D)));if(!(H<+g[a+40>>2])){l=I;return}A=(B*B+C*C+D*D)*-9.999999747378752e-05;z=f-(p*H+o*(1.0-H));u=h-(t*H+s*(1.0-H));q=i-(y*H+x*(1.0-H));m=j-(p*H+o*(1.0-H));k=k-(t*H+s*(1.0-H));j=n-(y*H+x*(1.0-H));if(!(D*(z*k-u*m)+(B*(u*j-q*k)+C*(q*m-z*j))>=A)){l=I;return}i=r-(p*H+o*(1.0-H));h=v-(t*H+s*(1.0-H));f=w-(y*H+x*(1.0-H));if(!(D*(m*h-k*i)+(B*(k*f-j*h)+C*(j*i-m*f))>=A)){l=I;return}if(!(D*(u*i-z*h)+(B*(q*h-u*f)+C*(z*f-q*i))>=A)){l=I;return}f=1.0/+G(+(B*B+C*C+D*D));g[I+16>>2]=B*f;g[I+16+4>>2]=C*f;g[I+16+8>>2]=D*f;b=c[(c[a>>2]|0)+12>>2]|0;if(E<=0.0&(F&2|0)==0){g[I>>2]=-(B*f);g[I+4>>2]=-(C*f);g[I+8>>2]=-(D*f);g[I+12>>2]=0.0;g[a+40>>2]=+Rb[b&3](a,I,H,d,e);l=I;return}else{g[a+40>>2]=+Rb[b&3](a,I+16|0,H,d,e);l=I;return}}function Mf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0;k=l;l=l+144|0;i=c[b+12>>2]|0;if(!i){l=k;return}n=c[d+4>>2]|0;m=c[e+4>>2]|0;c[h+4>>2]=i;g[k+12+128>>2]=999999984306749440.0;i=c[d+12>>2]|0;c[k+12>>2]=c[i>>2];c[k+12+4>>2]=c[i+4>>2];c[k+12+8>>2]=c[i+8>>2];c[k+12+12>>2]=c[i+12>>2];c[k+12+16>>2]=c[i+16>>2];c[k+12+16+4>>2]=c[i+16+4>>2];c[k+12+16+8>>2]=c[i+16+8>>2];c[k+12+16+12>>2]=c[i+16+12>>2];c[k+12+32>>2]=c[i+32>>2];c[k+12+32+4>>2]=c[i+32+4>>2];c[k+12+32+8>>2]=c[i+32+8>>2];c[k+12+32+12>>2]=c[i+32+12>>2];c[k+12+48>>2]=c[i+48>>2];c[k+12+48+4>>2]=c[i+48+4>>2];c[k+12+48+8>>2]=c[i+48+8>>2];c[k+12+48+12>>2]=c[i+48+12>>2];i=c[e+12>>2]|0;c[k+12+64>>2]=c[i>>2];c[k+12+64+4>>2]=c[i+4>>2];c[k+12+64+8>>2]=c[i+8>>2];c[k+12+64+12>>2]=c[i+12>>2];c[k+12+80>>2]=c[i+16>>2];c[k+12+80+4>>2]=c[i+16+4>>2];c[k+12+80+8>>2]=c[i+16+8>>2];c[k+12+80+12>>2]=c[i+16+12>>2];c[k+12+96>>2]=c[i+32>>2];c[k+12+96+4>>2]=c[i+32+4>>2];c[k+12+96+8>>2]=c[i+32+8>>2];c[k+12+96+12>>2]=c[i+32+12>>2];c[k+12+112>>2]=c[i+48>>2];c[k+12+112+4>>2]=c[i+48+4>>2];c[k+12+112+8>>2]=c[i+48+8>>2];c[k+12+112+12>>2]=c[i+48+12>>2];c[k>>2]=9408;c[k+4>>2]=n;c[k+8>>2]=m;kc(k,k+12|0,h,c[f+20>>2]|0,0);do if(a[b+8>>0]|0?(j=c[h+4>>2]|0,c[j+748>>2]|0):0){d=c[j+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;b=c[(c[h+12>>2]|0)+8>>2]|0;if((d|0)==(e|0)){Ue(j,d+4|0,b+4|0);break}else{Ue(j,b+4|0,e+4|0);break}}while(0);l=k;return}function Nf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;q=l;l=l+48|0;if((f|0)==(d|0)|((d|0)==(e|0)|(e|0)==(f|0))){l=q;return}k=q;m=k+36|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(m|0));if(!h)o=c[c[b+880>>2]>>2]|0;else o=h;h=c[b+752>>2]|0;if((h|0)==(c[b+756>>2]|0)?(p=h|0?h<<1:1,(h|0)<(p|0)):0){if(!p)n=0;else{c[6436]=(c[6436]|0)+1;h=ic((p*44|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}n=h;h=c[b+752>>2]|0;}if((h|0)>0){i=0;do{k=n+(i*44|0)|0;j=(c[b+760>>2]|0)+(i*44|0)|0;m=k+44|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0;}while((k|0)<(m|0));i=i+1|0;}while((i|0)!=(h|0))}h=c[b+760>>2]|0;if(h|0){if(a[b+764>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+760>>2]=0;}a[b+764>>0]=1;c[b+760>>2]=n;c[b+756>>2]=p;h=c[b+752>>2]|0;}k=c[b+760>>2]|0;c[k+(h*44|0)>>2]=0;c[k+(h*44|0)+4>>2]=o;k=k+(h*44|0)+8|0;j=q;m=k+36|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0;}while((k|0)<(m|0));p=c[b+752>>2]|0;c[b+752>>2]=p+1;o=c[b+760>>2]|0;k=c[b+720>>2]|0;c[o+(p*44|0)+8>>2]=k+(d*104|0);m=c[b+720>>2]|0;c[o+(p*44|0)+12>>2]=m+(e*104|0);n=c[b+720>>2]|0;c[o+(p*44|0)+16>>2]=n+(f*104|0);t=+g[k+(d*104|0)+8>>2];v=+g[k+(d*104|0)+12>>2];r=+g[k+(d*104|0)+16>>2];s=+g[m+(e*104|0)+8>>2]-t;w=+g[m+(e*104|0)+12>>2]-v;u=+g[m+(e*104|0)+16>>2]-r;t=+g[n+(f*104|0)+8>>2]-t;v=+g[n+(f*104|0)+12>>2]-v;r=+g[n+(f*104|0)+16>>2]-r;g[o+(p*44|0)+36>>2]=+G(+((s*v-w*t)*(s*v-w*t)+((w*r-u*v)*(w*r-u*v)+(u*t-s*r)*(u*t-s*r))));a[b+924>>0]=1;l=q;return}function Of(b,d,e,f,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,o=0,p=0,q=0,r=0;r=l;l=l+80|0;g[r+16+60>>2]=0.0;g[r+16+8>>2]=0.0;g[r+16+12>>2]=.10000000149011612;g[r+16+16>>2]=300.0;g[r+16>>2]=1.0;g[r+16+4>>2]=-1.0;g[r+16+28>>2]=0.0;g[r+16+32>>2]=.20000000298023224;g[r+16+36>>2]=0.0;g[r+16+40>>2]=0.0;g[r+16+20>>2]=1.0;g[r+16+24>>2]=.5;c[r+16+56>>2]=0;g[r+16+48>>2]=0.0;a[r+16+44>>0]=0;p=0;do{o=c[b+856+(p<<2)>>2]|0;n=a[b+788+p>>0]|0;if(!o){if(n<<24>>24){n=1;q=5;}}else q=5;if((q|0)==5){q=0;g[r+16+40>>2]=0.0;c[r+16+56>>2]=o;c[r+16+52>>2]=c[b+840+(p<<2)>>2];c[r+16+48>>2]=c[b+824+(p<<2)>>2];c[r+16+20>>2]=c[b+732>>2];a[r+16+44>>0]=n;c[r+16+4>>2]=c[b+696+(p<<2)>>2];c[r+16+24>>2]=c[b+728>>2];c[r+16>>2]=c[b+680+(p<<2)>>2];g[r+16+16>>2]=0.0;c[r+16+12>>2]=c[b+808+(p<<2)>>2];c[r+16+8>>2]=c[b+792+(p<<2)>>2];c[r>>2]=c[b+1064+(p<<2)>>2];c[r+4>>2]=c[b+1080+(p<<2)>>2];c[r+8>>2]=c[b+1096+(p<<2)>>2];g[r+12>>2]=0.0;o=c[b+1304>>2]>>p*3;if(!(o&1))n=c[d+32>>2]|0;else n=b+740+(p<<2)|0;c[r+16+28>>2]=c[n>>2];if(!(o&2))n=c[d+32>>2]|0;else n=b+772+(p<<2)|0;c[r+16+36>>2]=c[n>>2];c[r+16+32>>2]=c[((o&4|0)==0?d+4|0:b+756+(p<<2)|0)>>2];if(a[b+1301>>0]|0){o=p+1|0;if(!(c[b+868+(((o|0)==3?0:o)<<6)+56>>2]|0))n=1;else n=(c[b+868+(((p+2|0)%3|0)<<6)+56>>2]|0)==0&1;}else n=0;e=(ud(b,r+16|0,f,h,i,j,k,m,d,e,r,0,n)|0)+e|0;}p=p+1|0;}while((p|0)!=3);l=r;return e|0}function Pf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=l;l=l+16|0;i=c[b+28>>2]|0;j=c[b+32>>2]|0;if(!(a[b+1301>>0]|0)){h=0;e=Of(b,d,0,i+4|0,j+4|0,i+312|0,j+312|0,i+328|0,j+328|0)|0;do{f=b+868+(h<<6)|0;if(!((c[b+868+(h<<6)+56>>2]|0)==0?(a[b+868+(h<<6)+44>>0]|0)==0:0)){g=b+1208+(h<<4)|0;c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];c[k+8>>2]=c[g+8>>2];c[k+12>>2]=c[g+12>>2];g=c[b+1304>>2]>>(h*3|0)+9;if(!(g&1))c[b+868+(h<<6)+28>>2]=c[c[d+32>>2]>>2];if(!(g&2))c[b+868+(h<<6)+36>>2]=c[c[d+32>>2]>>2];if(!(g&4))c[b+868+(h<<6)+32>>2]=c[d+4>>2];e=(ud(b,f,i+4|0,j+4|0,i+312|0,j+312|0,i+328|0,j+328|0,d,e,k,1,0)|0)+e|0;}h=h+1|0;}while((h|0)!=3);l=k;return}h=0;e=0;do{f=b+868+(h<<6)|0;if(!((c[b+868+(h<<6)+56>>2]|0)==0?(a[b+868+(h<<6)+44>>0]|0)==0:0)){g=b+1208+(h<<4)|0;c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];c[k+8>>2]=c[g+8>>2];c[k+12>>2]=c[g+12>>2];g=c[b+1304>>2]>>(h*3|0)+9;if(!(g&1))c[b+868+(h<<6)+28>>2]=c[c[d+32>>2]>>2];if(!(g&2))c[b+868+(h<<6)+36>>2]=c[c[d+32>>2]>>2];if(!(g&4))c[b+868+(h<<6)+32>>2]=c[d+4>>2];e=(ud(b,f,i+4|0,j+4|0,i+312|0,j+312|0,i+328|0,j+328|0,d,e,k,1,0)|0)+e|0;}h=h+1|0;}while((h|0)!=3);Of(b,d,e,i+4|0,j+4|0,i+312|0,j+312|0,i+328|0,j+328|0)|0;l=k;return}function Qf(a,b,d){a=a|0;b=+b;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0,m=0,n=0.0,o=0,p=0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0;v=l;l=l+16|0;q=+g[a+452>>2];o=c[a+192>>2]|0;n=+Db[c[(c[o>>2]|0)+48>>2]&15](o);o=c[a+812>>2]|0;if((o|0)<=0){l=v;return}m=0;do{p=c[a+820>>2]|0;k=c[p+(m*104|0)>>2]|0;k=(c[k+236>>2]&2|0)==0?0:k;if(k|0){u=+g[k+332>>2];e=+g[p+(m*104|0)+84>>2];j=+g[k+336>>2];s=+g[p+(m*104|0)+80>>2];f=+g[p+(m*104|0)+76>>2];t=+g[k+328>>2];d=q*(u*e-j*s+ +g[k+312>>2]);e=q*(+g[k+316>>2]+(j*f-e*t));f=q*(s*t-u*f+ +g[k+320>>2]);}else{d=0.0;e=0.0;f=0.0;}r=c[p+(m*104|0)+24>>2]|0;s=+g[r+8>>2];t=+g[r+12>>2];u=+g[r+16>>2];j=s-+g[r+24>>2]-d;i=t-+g[r+28>>2]-e;d=u-+g[r+32>>2]-f;e=+g[p+(m*104|0)+4>>2];f=+g[p+(m*104|0)+8>>2];h=+g[p+(m*104|0)+12>>2];if(j*e+i*f+d*h<=1.1920928955078125e-07?(y=s*e+t*f+u*h+ +g[p+(m*104|0)+20>>2],z=+g[p+(m*104|0)+96>>2],y=(y<n?y:n)*+g[p+(m*104|0)+100>>2],x=(j-(j-e*(j*e+i*f+d*h))*z+e*y)*b,w=(i-(i-f*(j*e+i*f+d*h))*z+y*f)*b,j=(d-(d-h*(j*e+i*f+d*h))*z+y*h)*b,f=+g[p+(m*104|0)+28>>2]*x+ +g[p+(m*104|0)+32>>2]*w+ +g[p+(m*104|0)+36>>2]*j,h=x*+g[p+(m*104|0)+44>>2]+w*+g[p+(m*104|0)+48>>2]+j*+g[p+(m*104|0)+52>>2],j=x*+g[p+(m*104|0)+60>>2]+w*+g[p+(m*104|0)+64>>2]+j*+g[p+(m*104|0)+68>>2],g[v>>2]=f,g[v+4>>2]=h,g[v+8>>2]=j,g[v+12>>2]=0.0,i=+g[p+(m*104|0)+92>>2],g[r+8>>2]=s-f*i,g[r+12>>2]=t-i*h,g[r+16>>2]=u-i*j,k|0):0)Wk(k,v,p+(m*104|0)+76|0);m=m+1|0;}while((m|0)!=(o|0));l=v;return}function Rf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=c[a+56>>2]|0;if(!e){e=c[a+52>>2]|0;if(!e){c[6436]=(c[6436]|0)+1;e=ic(31)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[a+60>>2]|0;c[e+4>>2]=f;g=e+8|0;c[g>>2]=0;c[6436]=(c[6436]|0)+1;f=ic((f*24|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}c[e>>2]=f;c[g>>2]=c[a+48>>2];c[a+48>>2]=e;}else c[a+52>>2]=c[e+8>>2];h=c[e>>2]|0;g=c[e+4>>2]|0;if((g|0)>0){e=0;f=h;do{e=e+1|0;i=f;f=f+24|0;c[i>>2]=(e|0)<(g|0)?f:0;}while((e|0)!=(g|0))}}else h=e;c[a+56>>2]=c[h>>2];c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;e=c[a+56>>2]|0;if(!e){e=c[a+52>>2]|0;if(!e){c[6436]=(c[6436]|0)+1;e=ic(31)|0;if(!e)f=0;else{c[(e+4+15&-16)+-4>>2]=e;f=e+4+15&-16;}e=c[a+60>>2]|0;c[f+4>>2]=e;g=f+8|0;c[g>>2]=0;c[6436]=(c[6436]|0)+1;e=ic((e*24|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[f>>2]=e;c[g>>2]=c[a+48>>2];c[a+48>>2]=f;}else{c[a+52>>2]=c[e+8>>2];f=e;}e=c[f>>2]|0;i=c[f+4>>2]|0;if((i|0)>0){f=0;g=e;do{f=f+1|0;j=g;g=g+24|0;c[j>>2]=(f|0)<(i|0)?g:0;}while((f|0)!=(i|0))}}c[a+56>>2]=c[e>>2];j=e;c[j>>2]=0;c[j+4>>2]=0;c[h+8>>2]=e;c[e+8>>2]=h;j=c[a+100>>2]|0;c[h+20>>2]=j;c[e+20>>2]=j;c[h+12>>2]=d;c[e+12>>2]=b;c[h+16>>2]=0;c[e+16>>2]=0;e=c[a+116>>2]|0;c[a+116>>2]=e+1;if((e|0)<(c[a+120>>2]|0))return h|0;c[a+120>>2]=e+1;return h|0}function Sf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0;c[b+4>>2]=1065353216;c[b+8>>2]=1065353216;c[b+12>>2]=1065353216;g[b+16>>2]=0.0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+48>>2]=0;c[b>>2]=8576;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;a[b+164>>0]=d&1;a[b+165>>0]=e&1;g[b+168>>2]=0.0;c[6436]=(c[6436]|0)+1;d=ic(51)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16;}e=c[b+24>>2]|0;if((e|0)>0){d=0;do{h=f+(d<<5)|0;i=(c[b+32>>2]|0)+(d<<5)|0;c[h>>2]=c[i>>2];c[h+4>>2]=c[i+4>>2];c[h+8>>2]=c[i+8>>2];c[h+12>>2]=c[i+12>>2];c[h+16>>2]=c[i+16>>2];c[h+20>>2]=c[i+20>>2];c[h+24>>2]=c[i+24>>2];c[h+28>>2]=c[i+28>>2];d=d+1|0;}while((d|0)!=(e|0))}d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=f;c[b+28>>2]=1;i=c[b+24>>2]|0;c[f+(i<<5)>>2]=0;c[f+(i<<5)+4>>2]=0;c[f+(i<<5)+8>>2]=12;c[f+(i<<5)+12>>2]=0;c[f+(i<<5)+16>>2]=0;c[f+(i<<5)+20>>2]=16;c[f+(i<<5)+24>>2]=2;c[f+(i<<5)+28>>2]=0;c[b+24>>2]=(c[b+24>>2]|0)+1;i=(a[b+164>>0]|0)==0;d=c[b+32>>2]|0;c[d>>2]=(c[(i?b+148|0:b+128|0)>>2]|0)/3|0;c[d+4>>2]=0;c[d+24>>2]=i?3:2;c[d+8>>2]=i?6:12;if(!(a[b+165>>0]|0)){h=12;b=(c[b+108>>2]|0)/3|0;i=d+12|0;c[i>>2]=b;i=d+16|0;c[i>>2]=0;i=d+20|0;c[i>>2]=h;return}else{h=16;b=c[b+88>>2]|0;i=d+12|0;c[i>>2]=b;i=d+16|0;c[i>>2]=0;i=d+20|0;c[i>>2]=h;return}}function Tf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;f=ms()|0;rj(f,4,b);c[f>>2]=4832;c[f+552>>2]=c[d>>2];c[f+552+4>>2]=c[d+4>>2];c[f+552+8>>2]=c[d+8>>2];c[f+552+12>>2]=c[d+12>>2];c[f+568>>2]=c[d+16>>2];c[f+568+4>>2]=c[d+16+4>>2];c[f+568+8>>2]=c[d+16+8>>2];c[f+568+12>>2]=c[d+16+12>>2];c[f+584>>2]=c[d+32>>2];c[f+584+4>>2]=c[d+32+4>>2];c[f+584+8>>2]=c[d+32+8>>2];c[f+584+12>>2]=c[d+32+12>>2];c[f+600>>2]=c[d+48>>2];c[f+600+4>>2]=c[d+48+4>>2];c[f+600+8>>2]=c[d+48+8>>2];c[f+600+12>>2]=c[d+48+12>>2];c[f+616>>2]=c[d>>2];c[f+616+4>>2]=c[d+4>>2];c[f+616+8>>2]=c[d+8>>2];c[f+616+12>>2]=c[d+12>>2];c[f+632>>2]=c[d+16>>2];c[f+632+4>>2]=c[d+16+4>>2];c[f+632+8>>2]=c[d+16+8>>2];c[f+632+12>>2]=c[d+16+12>>2];c[f+648>>2]=c[d+32>>2];c[f+648+4>>2]=c[d+32+4>>2];c[f+648+8>>2]=c[d+32+8>>2];c[f+648+12>>2]=c[d+32+12>>2];c[f+664>>2]=c[d+48>>2];c[f+664+4>>2]=c[d+48+4>>2];c[f+664+8>>2]=c[d+48+8>>2];c[f+664+12>>2]=c[d+48+12>>2];g[f+688>>2]=0.0;g[f+692>>2]=-1.0;g[f+696>>2]=.8999999761581421;g[f+700>>2]=.30000001192092896;g[f+704>>2]=1.0;g[f+708>>2]=0.0;g[f+712>>2]=0.0;a[f+716>>0]=0;a[f+736>>0]=0;a[f+737>>0]=0;a[f+738>>0]=0;a[f+739>>0]=1;a[f+740>>0]=e&1;c[f+748>>2]=0;d=c[f+28>>2]|0;l=+g[f+600>>2];k=+g[f+604>>2];j=+g[f+608>>2];i=l*+g[d+20>>2]+k*+g[d+24>>2]+j*+g[d+28>>2]+ +g[d+56>>2];h=l*+g[d+36>>2]+k*+g[d+40>>2]+j*+g[d+44>>2]+ +g[d+60>>2];g[f+664>>2]=l*+g[d+4>>2]+k*+g[d+8>>2]+j*+g[d+12>>2]+ +g[d+52>>2];g[f+668>>2]=i;g[f+672>>2]=h;g[f+676>>2]=0.0;g[f+732>>2]=e?-1.0:1.0;return f|0}function Uf(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=ms()|0;rj(e,4,b);c[e>>2]=4832;c[e+552>>2]=c[d>>2];c[e+552+4>>2]=c[d+4>>2];c[e+552+8>>2]=c[d+8>>2];c[e+552+12>>2]=c[d+12>>2];c[e+568>>2]=c[d+16>>2];c[e+568+4>>2]=c[d+16+4>>2];c[e+568+8>>2]=c[d+16+8>>2];c[e+568+12>>2]=c[d+16+12>>2];c[e+584>>2]=c[d+32>>2];c[e+584+4>>2]=c[d+32+4>>2];c[e+584+8>>2]=c[d+32+8>>2];c[e+584+12>>2]=c[d+32+12>>2];c[e+600>>2]=c[d+48>>2];c[e+600+4>>2]=c[d+48+4>>2];c[e+600+8>>2]=c[d+48+8>>2];c[e+600+12>>2]=c[d+48+12>>2];c[e+616>>2]=c[d>>2];c[e+616+4>>2]=c[d+4>>2];c[e+616+8>>2]=c[d+8>>2];c[e+616+12>>2]=c[d+12>>2];c[e+632>>2]=c[d+16>>2];c[e+632+4>>2]=c[d+16+4>>2];c[e+632+8>>2]=c[d+16+8>>2];c[e+632+12>>2]=c[d+16+12>>2];c[e+648>>2]=c[d+32>>2];c[e+648+4>>2]=c[d+32+4>>2];c[e+648+8>>2]=c[d+32+8>>2];c[e+648+12>>2]=c[d+32+12>>2];c[e+664>>2]=c[d+48>>2];c[e+664+4>>2]=c[d+48+4>>2];c[e+664+8>>2]=c[d+48+8>>2];c[e+664+12>>2]=c[d+48+12>>2];g[e+688>>2]=0.0;g[e+692>>2]=-1.0;g[e+696>>2]=.8999999761581421;g[e+700>>2]=.30000001192092896;g[e+704>>2]=1.0;g[e+708>>2]=0.0;g[e+712>>2]=0.0;a[e+716>>0]=0;a[e+736>>0]=0;a[e+737>>0]=0;a[e+738>>0]=0;a[e+739>>0]=1;a[e+740>>0]=0;c[e+748>>2]=0;d=c[e+28>>2]|0;k=+g[e+600>>2];j=+g[e+604>>2];i=+g[e+608>>2];h=k*+g[d+20>>2]+j*+g[d+24>>2]+i*+g[d+28>>2]+ +g[d+56>>2];f=k*+g[d+36>>2]+j*+g[d+40>>2]+i*+g[d+44>>2]+ +g[d+60>>2];g[e+664>>2]=k*+g[d+4>>2]+j*+g[d+8>>2]+i*+g[d+12>>2]+ +g[d+52>>2];g[e+668>>2]=h;g[e+672>>2]=f;g[e+676>>2]=0.0;g[e+732>>2]=1.0;return e|0}function Vf(b){b=b|0;var d=0,e=0.0,f=0,h=0,i=0.0,j=0.0,k=0;k=l;l=l+64|0;aj(12334);a:do if(!(a[b+274>>0]|0)){d=c[b+232>>2]|0;if((d|0)>0){h=0;while(1){f=c[(c[b+240>>2]|0)+(h<<2)>>2]|0;switch(c[f+216>>2]|0){case 2:case 5:break;default:if((c[f+480>>2]|0)!=0?(c[f+204>>2]&3|0)==0:0){e=+g[b+264>>2];if((a[b+300>>0]|0)!=0?(j=+g[b+268>>2],j!=0.0):0)e=e-j;else e=e*+g[f+244>>2];Gg(f+68|0,+g[f+132>>2],+g[f+136>>2],+g[f+140>>2],f+148|0,e,k);d=c[f+480>>2]|0;nb[c[(c[d>>2]|0)+12>>2]&127](d,k);d=c[b+232>>2]|0;}}h=h+1|0;if((h|0)>=(d|0))break a}}}else{d=c[b+8>>2]|0;if((d|0)>0){h=0;do{f=c[(c[b+16>>2]|0)+(h<<2)>>2]|0;if((!((f|0)==0?1:(c[f+236>>2]&2|0)==0)?(c[f+480>>2]|0)!=0:0)?(c[f+204>>2]&3|0)==0:0){e=+g[b+264>>2];if((a[b+300>>0]|0)!=0?(i=+g[b+268>>2],i!=0.0):0)e=e-i;else e=e*+g[f+244>>2];Gg(f+68|0,+g[f+132>>2],+g[f+136>>2],+g[f+140>>2],f+148|0,e,k);d=c[f+480>>2]|0;nb[c[(c[d>>2]|0)+12>>2]&127](d,k);d=c[b+8>>2]|0;}h=h+1|0;}while((h|0)<(d|0))}}while(0);d=c[2388]|0;b=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=b;if(b|0){l=k;return}do if(c[d+4>>2]|0){Za(k|0,0)|0;b=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[k+4>>2]|0)-(c[b+4>>2]|0)+(((c[k>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=k;return}}while(0);c[2388]=c[d+20>>2];l=k;return}function Wf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;n=l;l=l+32|0;if((b|0)<0)b=c[a+12>>2]|0;d=c[a>>2]|0;if(!((b|0)>0&(d|0)!=0)){l=n;return}while(1){e=d+40|0;if(c[e>>2]|0){m=0;while(1){g=d+32|0;h=c[g>>2]|0;if(h>>>0>d>>>0){i=(c[h+40>>2]|0)==(d|0)&1;j=c[h+36+((i^1)<<2)>>2]|0;k=c[h+32>>2]|0;if(!k)f=a;else f=k+36+(((c[k+40>>2]|0)==(h|0)&1)<<2)|0;c[f>>2]=d;c[j+32>>2]=d;c[h+32>>2]=d;c[g>>2]=k;k=d+36|0;c[h+36>>2]=c[k>>2];c[h+40>>2]=c[e>>2];c[(c[k>>2]|0)+32>>2]=h;c[(c[e>>2]|0)+32>>2]=h;c[d+36+(i<<2)>>2]=h;c[d+36+((i^1)<<2)>>2]=j;c[n>>2]=c[h>>2];c[n+4>>2]=c[h+4>>2];c[n+8>>2]=c[h+8>>2];c[n+12>>2]=c[h+12>>2];c[n+16>>2]=c[h+16>>2];c[n+20>>2]=c[h+20>>2];c[n+24>>2]=c[h+24>>2];c[n+28>>2]=c[h+28>>2];c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];c[h+16>>2]=c[d+16>>2];c[h+20>>2]=c[d+20>>2];c[h+24>>2]=c[d+24>>2];c[h+28>>2]=c[d+28>>2];c[d>>2]=c[n>>2];c[d+4>>2]=c[n+4>>2];c[d+8>>2]=c[n+8>>2];c[d+12>>2]=c[n+12>>2];c[d+16>>2]=c[n+16>>2];c[d+20>>2]=c[n+20>>2];c[d+24>>2]=c[n+24>>2];c[d+28>>2]=c[n+28>>2];d=h;}d=c[d+36+(((c[a+16>>2]|0)>>>m&1)<<2)>>2]|0;e=d+40|0;if(!(c[e>>2]|0))break;else m=m+1&31;}}if(!(hg(a,d)|0))e=0;else e=c[a>>2]|0;Fe(a,e,d);c[a+16>>2]=(c[a+16>>2]|0)+1;b=b+-1|0;if(!b)break;d=c[a>>2]|0;}l=n;return}function Xf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;i=l;l=l+32|0;d=a[b+8>>0]|0?d:e;if(((c[(c[d+4>>2]|0)+4>>2]|0)+-21|0)>>>0>=9){l=i;return}e=c[(c[d+8>>2]|0)+192>>2]|0;y=+Db[c[(c[e>>2]|0)+48>>2]&15](e);c[b+64>>2]=f;g[b+68>>2]=y+.05999999865889549;c[b+56>>2]=h;h=c[b+16>>2]|0;Vb[c[(c[h>>2]|0)+28>>2]&127](h,i+16|0,i);y=+g[i>>2];x=+g[i+16>>2];w=+g[i+4>>2];v=+g[i+16+4>>2];u=+g[i+8>>2];t=+g[i+16+8>>2];h=c[d+12>>2]|0;B=+g[h>>2];o=+g[h+16>>2];C=+g[h+32>>2];z=+g[h+4>>2];m=+g[h+20>>2];A=+g[h+36>>2];q=+g[h+8>>2];j=+g[h+24>>2];r=+g[h+40>>2];D=-+g[h+48>>2];s=-+g[h+52>>2];k=-+g[h+56>>2];p=(y+x)*.5*B+(w+v)*.5*o+(u+t)*.5*C+(B*D+o*s+C*k);n=(y+x)*.5*z+(w+v)*.5*m+(u+t)*.5*A+(z*D+m*s+A*k);k=(y+x)*.5*q+(w+v)*.5*j+(u+t)*.5*r+(q*D+j*s+r*k);s=+g[b+68>>2];o=((y-x)*.5+s)*+F(+(B+o*0.0+C*0.0))+((w-v)*.5+s)*+F(+(B*0.0+o+C*0.0))+((u-t)*.5+s)*+F(+(C+(B*0.0+o*0.0)));m=((y-x)*.5+s)*+F(+(z+m*0.0+A*0.0))+((w-v)*.5+s)*+F(+(z*0.0+m+A*0.0))+((u-t)*.5+s)*+F(+(A+(z*0.0+m*0.0)));j=((y-x)*.5+s)*+F(+(q+j*0.0+r*0.0))+((w-v)*.5+s)*+F(+(q*0.0+j+r*0.0))+((u-t)*.5+s)*+F(+(r+(q*0.0+j*0.0)));g[b+24>>2]=p-o;g[b+28>>2]=n-m;g[b+32>>2]=k-j;g[b+36>>2]=0.0;g[b+40>>2]=p+o;g[b+44>>2]=n+m;g[b+48>>2]=k+j;g[b+52>>2]=0.0;Zb[c[(c[e>>2]|0)+64>>2]&127](e,b+12|0,b+24|0,b+40|0);l=i;return}function Yf(b){b=b|0;var d=0;c[b>>2]=4884;d=c[b+176>>2]|0;if(d|0){if(a[b+180>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+176>>2]=0;}a[b+180>>0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;d=c[b+156>>2]|0;if(d|0){if(a[b+160>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+156>>2]=0;}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+136>>2]=0;}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+116>>2]=0;}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+76>>2]=0;}a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function Zf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,m=0,n=0;k=l;l=l+16|0;c[b+8>>2]=0;c[b+12>>2]=1065353216;c[b+16>>2]=1065353216;c[b+20>>2]=1065353216;g[b+24>>2]=0.0;g[b+44>>2]=.03999999910593033;c[b+52>>2]=0;c[b+56>>2]=1065353216;c[b+60>>2]=1065353216;c[b+64>>2]=1065353216;g[b+68>>2]=0.0;c[b+72>>2]=-1082130432;c[b+76>>2]=-1082130432;c[b+80>>2]=-1082130432;g[b+84>>2]=0.0;a[b+88>>0]=0;c[b>>2]=7380;a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b+4>>2]=4;if((e|0)<=0){c[b+96>>2]=e;dj(b);l=k;return}c[6436]=(c[6436]|0)+1;h=ic((e<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}i=c[b+96>>2]|0;if((i|0)>0){h=0;do{m=j+(h<<4)|0;n=(c[b+104>>2]|0)+(h<<4)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[b+104>>2]|0;if(h|0){if(a[b+108>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+104>>2]=0;}a[b+108>>0]=1;c[b+104>>2]=j;c[b+100>>2]=e;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];if((e|0)!=1){h=1;do{n=(c[b+104>>2]|0)+(h<<4)|0;c[n>>2]=c[k>>2];c[n+4>>2]=c[k+4>>2];c[n+8>>2]=c[k+8>>2];c[n+12>>2]=c[k+12>>2];h=h+1|0;}while((h|0)!=(e|0))}c[b+96>>2]=e;h=0;while(1){j=c[d+4>>2]|0;m=c[d+8>>2]|0;n=c[b+104>>2]|0;c[n+(h<<4)>>2]=c[d>>2];c[n+(h<<4)+4>>2]=j;c[n+(h<<4)+8>>2]=m;g[n+(h<<4)+12>>2]=0.0;h=h+1|0;if((h|0)==(e|0))break;else d=d+f|0;}dj(b);l=k;return}function _f(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0;x=l;l=l+48|0;u=+g[e>>2];v=+g[d>>2];w=+g[e+4>>2];t=+g[d+4>>2];s=+g[e+8>>2];n=+g[d+8>>2];o=+G(+((u-v)*.5*(u-v)*.5+(w-t)*.5*(w-t)*.5+(s-n)*.5*(s-n)*.5));p=+g[a+56>>2];d=+F(+p)>.7071067690849304;q=+g[a+52>>2];if(d){m=1.0/+G(+(p*p+q*q));r=+g[a+48>>2];f=r*-(p*m);h=(p*p+q*q)*m;i=0.0;j=-(r*q*m);k=-(p*m);m=q*m;}else{r=+g[a+48>>2];k=1.0/+G(+(r*r+q*q));f=(r*r+q*q)*k;h=-(p*r*k);i=-(q*k);j=p*-(q*k);k=r*k;m=0.0;}y=(u+v)*.5*r+(w+t)*.5*q+(s+n)*.5*p-+g[a+64>>2];z=(u+v)*.5-r*y;i=o*i;r=o*k;v=o*m;k=o*h;m=o*j;u=o*f;g[x>>2]=k+(i+z);g[x+4>>2]=m+(r+((w+t)*.5-q*y));g[x+8>>2]=u+(v+((s+n)*.5-p*y));g[x+12>>2]=0.0;g[x+16>>2]=i+z-k;g[x+20>>2]=r+((w+t)*.5-q*y)-m;g[x+24>>2]=v+((s+n)*.5-p*y)-u;g[x+28>>2]=0.0;g[x+32>>2]=z-i-k;g[x+36>>2]=(w+t)*.5-q*y-r-m;g[x+40>>2]=(s+n)*.5-p*y-v-u;g[x+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,x,0,0);g[x>>2]=z-i-k;g[x+4>>2]=(w+t)*.5-q*y-r-m;g[x+8>>2]=(s+n)*.5-p*y-v-u;g[x+12>>2]=0.0;g[x+16>>2]=k+(z-i);g[x+20>>2]=m+((w+t)*.5-q*y-r);g[x+24>>2]=u+((s+n)*.5-p*y-v);g[x+28>>2]=0.0;g[x+32>>2]=k+(i+z);g[x+36>>2]=m+(r+((w+t)*.5-q*y));g[x+40>>2]=u+(v+((s+n)*.5-p*y));g[x+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,x,0,1);l=x;return}function $f(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(!(a[d+164>>0]|0)){f=c[d+148>>2]|0;if((f|0)==(c[d+152>>2]|0)?(k=f|0?f<<1:1,(f|0)<(k|0)):0){if(!k)i=0;else{c[6436]=(c[6436]|0)+1;f=ic((k<<1)+19|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=f;f=c[d+148>>2]|0;}h=c[d+156>>2]|0;if((f|0)<=0)if(!h)f=d+160|0;else g=27;else{g=0;do{b[i+(g<<1)>>1]=b[h+(g<<1)>>1]|0;g=g+1|0;}while((g|0)!=(f|0));g=27;}if((g|0)==27){if(a[d+160>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[d+156>>2]=0;f=d+160|0;}a[f>>0]=1;c[d+156>>2]=i;c[d+152>>2]=k;f=c[d+148>>2]|0;}b[(c[d+156>>2]|0)+(f<<1)>>1]=e;c[d+148>>2]=f+1;k=d+156|0;k=c[k>>2]|0;e=d+32|0;e=c[e>>2]|0;e=e+4|0;c[e>>2]=k;return}else{f=c[d+128>>2]|0;if((f|0)==(c[d+132>>2]|0)?(j=f|0?f<<1:1,(f|0)<(j|0)):0){if(!j)i=0;else{c[6436]=(c[6436]|0)+1;f=ic((j<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=f;f=c[d+128>>2]|0;}h=c[d+136>>2]|0;if((f|0)<=0)if(!h)f=d+140|0;else g=12;else{g=0;do{c[i+(g<<2)>>2]=c[h+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0));g=12;}if((g|0)==12){if(a[d+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[d+136>>2]=0;f=d+140|0;}a[f>>0]=1;c[d+136>>2]=i;c[d+132>>2]=j;f=c[d+128>>2]|0;}c[(c[d+136>>2]|0)+(f<<2)>>2]=e;c[d+128>>2]=(c[d+128>>2]|0)+1;k=d+136|0;k=c[k>>2]|0;e=d+32|0;e=c[e>>2]|0;e=e+4|0;c[e>>2]=k;return}}function ag(a,b,e){a=a|0;b=b|0;e=e|0;$e(a,b,e)|0;c[b+256>>2]=c[a+264>>2];c[b+260>>2]=c[a+268>>2];c[b+264>>2]=c[a+272>>2];c[b+268>>2]=c[a+276>>2];c[b+272>>2]=c[a+280>>2];c[b+276>>2]=c[a+284>>2];c[b+280>>2]=c[a+288>>2];c[b+284>>2]=c[a+292>>2];c[b+288>>2]=c[a+296>>2];c[b+292>>2]=c[a+300>>2];c[b+296>>2]=c[a+304>>2];c[b+300>>2]=c[a+308>>2];c[b+304>>2]=c[a+312>>2];c[b+308>>2]=c[a+316>>2];c[b+312>>2]=c[a+320>>2];c[b+316>>2]=c[a+324>>2];c[b+320>>2]=c[a+328>>2];c[b+324>>2]=c[a+332>>2];c[b+328>>2]=c[a+336>>2];c[b+332>>2]=c[a+340>>2];c[b+448>>2]=c[a+344>>2];c[b+336>>2]=c[a+544>>2];c[b+340>>2]=c[a+548>>2];c[b+344>>2]=c[a+552>>2];c[b+348>>2]=c[a+556>>2];c[b+352>>2]=c[a+348>>2];c[b+356>>2]=c[a+352>>2];c[b+360>>2]=c[a+356>>2];c[b+364>>2]=c[a+360>>2];c[b+368>>2]=c[a+364>>2];c[b+372>>2]=c[a+368>>2];c[b+376>>2]=c[a+372>>2];c[b+380>>2]=c[a+376>>2];c[b+384>>2]=c[a+380>>2];c[b+388>>2]=c[a+384>>2];c[b+392>>2]=c[a+388>>2];c[b+396>>2]=c[a+392>>2];c[b+400>>2]=c[a+396>>2];c[b+404>>2]=c[a+400>>2];c[b+408>>2]=c[a+404>>2];c[b+412>>2]=c[a+408>>2];c[b+416>>2]=c[a+412>>2];c[b+420>>2]=c[a+416>>2];c[b+424>>2]=c[a+420>>2];c[b+428>>2]=c[a+424>>2];c[b+432>>2]=c[a+428>>2];c[b+436>>2]=c[a+432>>2];c[b+440>>2]=c[a+436>>2];c[b+444>>2]=c[a+440>>2];c[b+452>>2]=c[a+444>>2];c[b+456>>2]=c[a+448>>2];c[b+484>>2]=d[a+452>>0];c[b+460>>2]=c[a+456>>2];c[b+464>>2]=c[a+460>>2];c[b+468>>2]=c[a+464>>2];c[b+472>>2]=c[a+468>>2];c[b+476>>2]=c[a+472>>2];c[b+480>>2]=c[a+476>>2];return 11960}function bg(b,d,e,f,h){b=b|0;d=+d;e=e|0;f=f|0;h=h|0;var i=0;i=l;l=l+144|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+236>>2]=1;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;c[b>>2]=4236;a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;g[i>>2]=d;c[i+4>>2]=e;c[i+72>>2]=f;c[i+76>>2]=c[h>>2];c[i+76+4>>2]=c[h+4>>2];c[i+76+8>>2]=c[h+8>>2];c[i+76+12>>2]=c[h+12>>2];g[i+92>>2]=0.0;g[i+96>>2]=0.0;g[i+100>>2]=.5;g[i+104>>2]=0.0;g[i+108>>2]=0.0;g[i+112>>2]=.800000011920929;g[i+116>>2]=1.0;a[i+120>>0]=0;g[i+124>>2]=.004999999888241291;g[i+128>>2]=.009999999776482582;g[i+132>>2]=.009999999776482582;g[i+136>>2]=.009999999776482582;c[i+8>>2]=1065353216;c[i+12>>2]=0;c[i+12+4>>2]=0;c[i+12+8>>2]=0;c[i+12+12>>2]=0;c[i+28>>2]=1065353216;c[i+32>>2]=0;c[i+32+4>>2]=0;c[i+32+8>>2]=0;c[i+32+12>>2]=0;c[i+48>>2]=1065353216;c[i+52>>2]=0;c[i+52+4>>2]=0;c[i+52+8>>2]=0;c[i+52+12>>2]=0;c[i+52+16>>2]=0;xd(b,i);l=i;return}function cg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;Kd(b,d);c[b>>2]=3196;c[6436]=(c[6436]|0)+1;e=ic(27)|0;i=e+4+15&-16;c[i+-4>>2]=e;a[i+4>>0]=0;c[(e+4+15&-16)>>2]=3228;c[b+92>>2]=i;c[6436]=(c[6436]|0)+1;i=ic(27)|0;e=i+4+15&-16;c[e+-4>>2]=i;a[e+4>>0]=0;c[(i+4+15&-16)>>2]=3248;c[b+96>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=3248;c[b+100>>2]=e;a[e+4>>0]=1;c[6436]=(c[6436]|0)+1;i=ic(27)|0;e=i+4+15&-16;c[e+-4>>2]=i;a[e+4>>0]=0;c[(i+4+15&-16)>>2]=3268;c[b+104>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=3288;c[b+108>>2]=e;a[e+4>>0]=1;if(!(a[b+20>>0]|0))return;e=c[b+16>>2]|0;if(!e)return;if((c[e>>2]|0)>=156)return;f=c[e+16>>2]|0;if(f){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);e=c[b+16>>2]|0;if(!e)i=b+16|0;else{f=b+16|0;g=11;}}else{f=b+16|0;g=11;}if((g|0)==11){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);i=f;}c[6436]=(c[6436]|0)+1;e=ic(39)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16;}e=c[d+12>>2]|0;c[h>>2]=156;f=h+4|0;c[f>>2]=e;c[6436]=(c[6436]|0)+1;e=ic((e*156|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[h+16>>2]=e;c[h+12>>2]=e;f=c[f>>2]|0;c[h+8>>2]=f;if(f+-1|0){b=c[h>>2]|0;g=e;d=f+-1|0;do{j=g;g=g+b|0;c[j>>2]=g;d=d+-1|0;}while((d|0)!=0);e=e+(S(b,f+-1|0)|0)|0;}c[e>>2]=0;c[i>>2]=h;return}function dg(b,d,e,f,h,i,k,l,m){b=b|0;d=d|0;e=e|0;f=+f;h=+h;i=+i;k=k|0;l=l|0;m=m|0;var n=0,o=0.0,p=0.0,q=0.0,r=0.0;n=Yr()|0;c[n+8>>2]=0;g[n+12>>2]=0.0;c[n>>2]=8184;c[n+4>>2]=24;c[n+64>>2]=b;c[n+68>>2]=d;g[n+72>>2]=h;g[n+76>>2]=i;g[n+80>>2]=+(b+-1|0);g[n+84>>2]=+(d+-1|0);g[n+88>>2]=f;c[n+92>>2]=e;c[n+96>>2]=l;a[n+100>>0]=m&1;a[n+101>>0]=0;a[n+102>>0]=0;c[n+104>>2]=k;c[n+108>>2]=1065353216;c[n+112>>2]=1065353216;c[n+116>>2]=1065353216;g[n+120>>2]=0.0;switch(k|0){case 0:{g[n+16>>2]=h;c[n+20>>2]=0;b=n+84|0;d=n+80|0;e=n+76|0;f=0.0;i=0.0;break}case 1:{c[n+16>>2]=0;g[n+20>>2]=h;b=n+84|0;d=n+76|0;e=n+80|0;f=0.0;i=h;h=0.0;break}case 2:{c[n+16>>2]=0;c[n+20>>2]=0;b=n+76|0;d=n+84|0;e=n+80|0;f=h;i=0.0;h=0.0;break}default:{h=+g[n+16>>2];q=+g[n+32>>2];f=+g[n+20>>2];p=+g[n+36>>2];i=+g[n+24>>2];o=+g[n+40>>2];h=q+h;f=p+f;i=o+i;h=h*.5;f=f*.5;i=i*.5;m=n+48|0;g[m>>2]=h;m=n+52|0;g[m>>2]=f;m=n+56|0;g[m>>2]=i;m=n+60|0;g[m>>2]=0.0;return n|0}}g[n+24>>2]=f;g[n+28>>2]=0.0;k=c[e>>2]|0;c[n+32>>2]=k;l=c[d>>2]|0;c[n+36>>2]=l;m=c[b>>2]|0;c[n+40>>2]=m;g[n+44>>2]=0.0;r=(c[j>>2]=k,+g[j>>2]);q=(c[j>>2]=l,+g[j>>2]);o=h;p=i;h=q;q=f;i=(c[j>>2]=m,+g[j>>2]);o=r+o;p=h+p;q=i+q;o=o*.5;p=p*.5;q=q*.5;m=n+48|0;g[m>>2]=o;m=n+52|0;g[m>>2]=p;m=n+56|0;g[m>>2]=q;m=n+60|0;g[m>>2]=0.0;return n|0}function eg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=c[d>>2]|0;l=Kb[c[(c[l>>2]|0)+56>>2]&31](l,48)|0;c[l+4>>2]=c[d>>2];c[l>>2]=6352;a[l+28>>0]=1;c[l+24>>2]=0;c[l+16>>2]=0;c[l+20>>2]=0;c[l+32>>2]=c[d+4>>2];a[l+36>>0]=0;c[6436]=(c[6436]|0)+1;b=ic(87)|0;if(!b)h=0;else{c[(b+4+15&-16)+-4>>2]=b;h=b+4+15&-16;}c[h>>2]=9448;i=h+20|0;a[i>>0]=1;j=h+16|0;c[j>>2]=0;d=h+8|0;c[d>>2]=0;k=h+12|0;c[k>>2]=0;a[h+24>>0]=0;a[h+44>>0]=1;c[h+40>>2]=0;c[h+32>>2]=0;c[h+36>>2]=0;a[h+64>>0]=1;c[h+60>>2]=0;c[h+52>>2]=0;c[h+56>>2]=0;c[6436]=(c[6436]|0)+1;b=ic(43)|0;if(!b)g=0;else{c[(b+4+15&-16)+-4>>2]=b;g=b+4+15&-16;}d=c[d>>2]|0;if((d|0)>0){b=0;do{m=g+(b*12|0)|0;n=(c[j>>2]|0)+(b*12|0)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];b=b+1|0;}while((b|0)!=(d|0))}b=c[j>>2]|0;if(!b){a[i>>0]=1;c[j>>2]=g;c[k>>2]=2;yf(h);n=l+8|0;c[n>>2]=h;n=e+4|0;n=c[n>>2]|0;n=n+68|0;n=c[n>>2]|0;m=l+40|0;c[m>>2]=n;m=f+4|0;m=c[m>>2]|0;m=m+68|0;m=c[m>>2]|0;n=l+44|0;c[n>>2]=m;return l|0}if(a[i>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}c[j>>2]=0;a[i>>0]=1;c[j>>2]=g;c[k>>2]=2;yf(h);n=l+8|0;c[n>>2]=h;n=e+4|0;n=c[n>>2]|0;n=n+68|0;n=c[n>>2]|0;m=l+40|0;c[m>>2]=n;m=f+4|0;m=c[m>>2]|0;m=m+68|0;m=c[m>>2]|0;n=l+44|0;c[n>>2]=m;return l|0}function fg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;lb[c[(c[b>>2]|0)+32>>2]&511](b);e=zb[c[(c[b>>2]|0)+16>>2]&63](b,104,1)|0;d=c[e+8>>2]|0;f=d;g=f+104|0;do{c[f>>2]=0;f=f+4|0;}while((f|0)<(g|0));c[d+88>>2]=c[a+248>>2];c[d+92>>2]=c[a+252>>2];c[d+96>>2]=c[a+256>>2];c[d+100>>2]=c[a+260>>2];c[d>>2]=c[a+92>>2];c[d+4>>2]=c[a+96>>2];c[d+8>>2]=c[a+100>>2];c[d+12>>2]=c[a+104>>2];c[d+16>>2]=c[a+108>>2];c[d+20>>2]=c[a+116>>2];c[d+24>>2]=c[a+120>>2];c[d+28>>2]=c[a+124>>2];c[d+32>>2]=c[a+128>>2];c[d+36>>2]=c[a+132>>2];c[d+40>>2]=c[a+140>>2];c[d+44>>2]=c[a+144>>2];c[d+48>>2]=c[a+148>>2];c[d+52>>2]=c[a+152>>2];c[d+56>>2]=c[a+168>>2];c[d+60>>2]=c[a+172>>2];c[d+64>>2]=c[a+112>>2];c[d+68>>2]=c[a+156>>2];c[d+72>>2]=c[a+160>>2];c[d+76>>2]=c[a+164>>2];c[d+80>>2]=c[a+136>>2];jb[c[(c[b>>2]|0)+20>>2]&31](b,e,12373,1145853764,d);d=c[a+8>>2]|0;if((d|0)<=0){Pi(a,b);dd(a,b);a=c[b>>2]|0;a=a+36|0;a=c[a>>2]|0;lb[a&511](b);return}f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if(c[e+236>>2]&8){g=pb[c[(c[e>>2]|0)+16>>2]&127](e)|0;g=zb[c[(c[b>>2]|0)+16>>2]&63](b,g,1)|0;d=zb[c[(c[e>>2]|0)+20>>2]&63](e,c[g+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,g,d,1497645651,e);d=c[a+8>>2]|0;}f=f+1|0;}while((f|0)<(d|0));Pi(a,b);dd(a,b);a=c[b>>2]|0;a=a+36|0;a=c[a>>2]|0;lb[a&511](b);return}function gg(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,i=0.0,j=0.0,k=0.0;h=l;l=l+32|0;d=c[a+8>>2]|0;if((d|0)<=0){l=h;return}f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if((!((e|0)==0?1:(c[e+236>>2]&2|0)==0)?(c[e+216>>2]|0)!=2:0)?!(b==0.0?1:(c[e+204>>2]&2|0)==0):0){d=c[e+480>>2]|0;if(!d)d=e+4|0;else{nb[c[(c[d>>2]|0)+8>>2]&127](d,e+4|0);d=e+4|0;}j=1.0/b*(+g[e+56>>2]-+g[e+120>>2]);k=1.0/b*(+g[e+60>>2]-+g[e+124>>2]);g[e+312>>2]=1.0/b*(+g[e+52>>2]-+g[e+116>>2]);g[e+316>>2]=j;g[e+320>>2]=k;g[e+324>>2]=0.0;tf(e+68|0,d,h+8|0,h);k=+g[h>>2];j=1.0/b*k*+g[h+8+4>>2];i=1.0/b*k*+g[h+8+8>>2];g[e+328>>2]=1.0/b*+g[h+8>>2]*k;g[e+332>>2]=j;g[e+336>>2]=i;g[e+340>>2]=0.0;c[e+132>>2]=c[e+312>>2];c[e+132+4>>2]=c[e+312+4>>2];c[e+132+8>>2]=c[e+312+8>>2];c[e+132+12>>2]=c[e+312+12>>2];c[e+148>>2]=c[e+328>>2];c[e+148+4>>2]=c[e+328+4>>2];c[e+148+8>>2]=c[e+328+8>>2];c[e+148+12>>2]=c[e+328+12>>2];c[e+68>>2]=c[d>>2];c[e+68+4>>2]=c[d+4>>2];c[e+68+8>>2]=c[d+8>>2];c[e+68+12>>2]=c[d+12>>2];c[e+84>>2]=c[e+20>>2];c[e+84+4>>2]=c[e+20+4>>2];c[e+84+8>>2]=c[e+20+8>>2];c[e+84+12>>2]=c[e+20+12>>2];c[e+100>>2]=c[e+36>>2];c[e+100+4>>2]=c[e+36+4>>2];c[e+100+8>>2]=c[e+36+8>>2];c[e+100+12>>2]=c[e+36+12>>2];c[e+116>>2]=c[e+52>>2];c[e+116+4>>2]=c[e+52+4>>2];c[e+116+8>>2]=c[e+52+8>>2];c[e+116+12>>2]=c[e+52+12>>2];d=c[a+8>>2]|0;}f=f+1|0;}while((f|0)<(d|0));l=h;return}function hg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((c[a>>2]|0)==(b|0)){c[a>>2]=0;a=0;return a|0}e=c[b+32>>2]|0;d=c[e+32>>2]|0;b=c[e+36+(((c[e+40>>2]|0)!=(b|0)&1)<<2)>>2]|0;a:do if(!d){c[a>>2]=b;c[b+32>>2]=0;d=c[a+4>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[a+4>>2]=e;}else{c[d+36+(((c[d+40>>2]|0)==(e|0)&1)<<2)>>2]=b;c[b+32>>2]=d;b=c[a+4>>2]|0;if(b|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}c[a+4>>2]=e;while(1){n=+g[d>>2];r=d+4|0;p=+g[r>>2];w=d+8|0;o=+g[w>>2];e=d+16|0;m=+g[e>>2];t=d+20|0;k=+g[t>>2];u=d+24|0;h=+g[u>>2];v=c[d+36>>2]|0;q=c[d+40>>2]|0;b=c[(+g[v>>2]<+g[q>>2]?v:q)>>2]|0;c[d>>2]=b;s=c[(+g[v+16>>2]>+g[q+16>>2]?v+16|0:q+16|0)>>2]|0;c[e>>2]=s;e=c[(+g[v+4>>2]<+g[q+4>>2]?v:q)+4>>2]|0;c[r>>2]=e;r=c[(+g[v+20>>2]>+g[q+20>>2]?v+16|0:q+16|0)+4>>2]|0;c[t>>2]=r;t=c[(+g[v+8>>2]<+g[q+8>>2]?v:q)+8>>2]|0;c[w>>2]=t;q=c[(+g[v+24>>2]>+g[q+24>>2]?v+16|0:q+16|0)+8>>2]|0;c[u>>2]=q;b=n!=(c[j>>2]=b,+g[j>>2]);n=(c[j>>2]=t,+g[j>>2]);l=(c[j>>2]=s,+g[j>>2]);i=(c[j>>2]=r,+g[j>>2]);f=(c[j>>2]=q,+g[j>>2]);if(!(b|p!=(c[j>>2]=e,+g[j>>2])|o!=n|m!=l|k!=i|h!=f))break;d=c[d+32>>2]|0;if(!d)break a}return d|0}while(0);w=c[a>>2]|0;return w|0}function ig(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0;h=l;l=l+16|0;d=+g[a+336>>2]*b;b=+g[a+452>>2];f=c[a+792>>2]|0;if((f|0)<=0){l=h;return}e=0;do{t=c[a+800>>2]|0;j=t+(e*96|0)+20|0;w=c[j>>2]|0;o=c[t+(e*96|0)>>2]|0;z=+g[t+(e*96|0)+4>>2];y=+g[t+(e*96|0)+8>>2];x=+g[t+(e*96|0)+12>>2];i=t+(e*96|0)+76|0;v=+g[w+332>>2];q=+g[t+(e*96|0)+84>>2];A=+g[w+336>>2];m=+g[t+(e*96|0)+80>>2];k=+g[i>>2];n=+g[w+328>>2];s=+g[o+8>>2];r=+g[o+12>>2];p=+g[o+16>>2];u=d*(z*+g[w+4>>2]+y*+g[w+8>>2]+x*+g[w+12>>2]+ +g[w+52>>2]-s)+(b*(v*q-A*m+ +g[w+312>>2])-(s-+g[o+24>>2]));q=d*(z*+g[w+20>>2]+y*+g[w+24>>2]+x*+g[w+28>>2]+ +g[w+56>>2]-r)+(b*(+g[w+316>>2]+(A*k-q*n))-(r-+g[o+28>>2]));k=d*(z*+g[w+36>>2]+y*+g[w+40>>2]+x*+g[w+44>>2]+ +g[w+60>>2]-p)+(b*(m*n-v*k+ +g[w+320>>2])-(p-+g[o+32>>2]));v=+g[t+(e*96|0)+24>>2];n=(u*+g[t+(e*96|0)+28>>2]+q*+g[t+(e*96|0)+32>>2]+ +g[t+(e*96|0)+36>>2]*k)*v;m=(u*+g[t+(e*96|0)+44>>2]+q*+g[t+(e*96|0)+48>>2]+k*+g[t+(e*96|0)+52>>2])*v;k=v*(u*+g[t+(e*96|0)+60>>2]+q*+g[t+(e*96|0)+64>>2]+k*+g[t+(e*96|0)+68>>2]);q=+g[t+(e*96|0)+92>>2];g[o+8>>2]=s+n*q;g[o+12>>2]=q*m+r;g[o+16>>2]=q*k+p;j=c[j>>2]|0;g[h>>2]=-n;g[h+4>>2]=-m;g[h+8>>2]=-k;g[h+12>>2]=0.0;Wk(j,h,i);e=e+1|0;}while((e|0)!=(f|0));l=h;return}function jg(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0.0;d=c[a+712>>2]|0;if((d|0)>0){b=0;do{l=(c[a+720>>2]|0)+(b*104|0)+72|0;b=b+1|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;}while((b|0)!=(d|0))}d=c[a+752>>2]|0;if((d|0)>0){b=0;do{o=c[a+760>>2]|0;j=c[o+(b*44|0)+12>>2]|0;h=c[o+(b*44|0)+8>>2]|0;k=+g[h+8>>2];e=+g[j+8>>2]-k;f=+g[h+12>>2];i=+g[j+12>>2]-f;m=+g[h+16>>2];n=+g[j+16>>2]-m;l=c[o+(b*44|0)+16>>2]|0;k=+g[l+8>>2]-k;f=+g[l+12>>2]-f;m=+g[l+16>>2]-m;p=1.0/+G(+((e*f-i*k)*(e*f-i*k)+((i*m-n*f)*(i*m-n*f)+(n*k-e*m)*(n*k-e*m))));g[o+(b*44|0)+20>>2]=p*(i*m-n*f);g[o+(b*44|0)+24>>2]=p*(n*k-e*m);g[o+(b*44|0)+28>>2]=(e*f-i*k)*p;c[o+(b*44|0)+32>>2]=0;g[h+72>>2]=i*m-n*f+ +g[h+72>>2];g[h+76>>2]=n*k-e*m+ +g[h+76>>2];g[h+80>>2]=e*f-i*k+ +g[h+80>>2];g[j+72>>2]=i*m-n*f+ +g[j+72>>2];g[j+76>>2]=n*k-e*m+ +g[j+76>>2];g[j+80>>2]=e*f-i*k+ +g[j+80>>2];g[l+72>>2]=i*m-n*f+ +g[l+72>>2];g[l+76>>2]=n*k-e*m+ +g[l+76>>2];g[l+80>>2]=e*f-i*k+ +g[l+80>>2];b=b+1|0;}while((b|0)!=(d|0))}l=c[a+712>>2]|0;if((l|0)<=0)return;a=c[a+720>>2]|0;b=0;do{h=a+(b*104|0)+72|0;i=+g[h>>2];j=a+(b*104|0)+76|0;k=+g[j>>2];d=a+(b*104|0)+80|0;e=+g[d>>2];f=+G(+(i*i+k*k+e*e));if(f>1.1920928955078125e-07){g[h>>2]=i*(1.0/f);g[j>>2]=1.0/f*k;g[d>>2]=1.0/f*e;}b=b+1|0;}while((b|0)!=(l|0));return}function kg(b,d,e,f){b=b|0;d=+d;e=e|0;f=+f;var h=0,i=0.0,j=0,k=0;k=l;l=l+16|0;Za(c[6435]|0,0)|0;_q(25700);c[6426]=(c[6426]|0)+1;j=c[6429]|0;c[6429]=j+1;if(!j){Za(k|0,0)|0;j=c[6435]|0;c[6428]=(c[k+4>>2]|0)-(c[j+4>>2]|0)+(((c[k>>2]|0)-(c[j>>2]|0)|0)*1e6|0);}c[6434]=0;Za(k|0,0)|0;aj(12358);if(e){g[b+268>>2]=f;i=+g[b+264>>2]+d;g[b+264>>2]=i;if(!(i>=f)){d=f;j=0;}else{g[b+264>>2]=i-+(~~(i/f)|0)*f;d=f;j=~~(i/f);}}else{g[b+264>>2]=a[b+300>>0]|0?0.0:d;g[b+268>>2]=0.0;j=!(+F(+d)<1.1920928955078125e-07)&1;e=j;}if(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0){h=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;a[26328]=(pb[c[(c[h>>2]|0)+48>>2]&127](h)|0)>>>4&1;}if(j){h=(j|0)>(e|0)?e:j;kb[c[(c[b>>2]|0)+164>>2]&31](b,d*+(h|0));lb[c[(c[b>>2]|0)+168>>2]&511](b);if((h|0)>0){e=0;do{kb[c[(c[b>>2]|0)+160>>2]&31](b,d);lb[c[(c[b>>2]|0)+80>>2]&511](b);e=e+1|0;}while((e|0)<(h|0));e=b;}else e=b;}else{lb[c[(c[b>>2]|0)+80>>2]&511](b);e=b;}lb[c[(c[e>>2]|0)+120>>2]&511](b);c[6434]=(c[6434]|0)+1;e=c[2388]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){l=k;return j|0}do if(c[e+4>>2]|0){Za(k|0,0)|0;b=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[k+4>>2]|0)-(c[b+4>>2]|0)+(((c[k>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2388]|0;break}else{l=k;return j|0}}while(0);c[2388]=c[e+20>>2];l=k;return j|0}function lg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=es()|0;c[h+4>>2]=5;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4776;c[h+300>>2]=c[e>>2];c[h+300+4>>2]=c[e+4>>2];c[h+300+8>>2]=c[e+8>>2];c[h+300+12>>2]=c[e+12>>2];c[h+316>>2]=c[e+16>>2];c[h+316+4>>2]=c[e+16+4>>2];c[h+316+8>>2]=c[e+16+8>>2];c[h+316+12>>2]=c[e+16+12>>2];c[h+332>>2]=c[e+32>>2];c[h+332+4>>2]=c[e+32+4>>2];c[h+332+8>>2]=c[e+32+8>>2];c[h+332+12>>2]=c[e+32+12>>2];c[h+348>>2]=c[e+48>>2];c[h+348+4>>2]=c[e+48+4>>2];c[h+348+8>>2]=c[e+48+8>>2];c[h+348+12>>2]=c[e+48+12>>2];c[h+364>>2]=c[f>>2];c[h+364+4>>2]=c[f+4>>2];c[h+364+8>>2]=c[f+8>>2];c[h+364+12>>2]=c[f+12>>2];c[h+380>>2]=c[f+16>>2];c[h+380+4>>2]=c[f+16+4>>2];c[h+380+8>>2]=c[f+16+8>>2];c[h+380+12>>2]=c[f+16+12>>2];c[h+396>>2]=c[f+32>>2];c[h+396+4>>2]=c[f+32+4>>2];c[h+396+8>>2]=c[f+32+8>>2];c[h+396+12>>2]=c[f+32+12>>2];c[h+412>>2]=c[f+48>>2];c[h+412+4>>2]=c[f+48+4>>2];c[h+412+8>>2]=c[f+48+8>>2];c[h+412+12>>2]=c[f+48+12>>2];a[h+552>>0]=0;c[h+524>>2]=0;g[h+572>>2]=-1.0;g[h+444>>2]=999999984306749440.0;g[h+448>>2]=999999984306749440.0;g[h+452>>2]=999999984306749440.0;g[h+428>>2]=1.0;g[h+432>>2]=.30000001192092896;g[h+436>>2]=1.0;g[h+440>>2]=.009999999776482582;g[h+456>>2]=.05000000074505806;c[h+592>>2]=0;g[h+596>>2]=0.0;g[h+600>>2]=.699999988079071;g[h+604>>2]=0.0;return h|0}function mg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0.0,m=0,n=0.0;m=l;l=l+672|0;c[m+568+8>>2]=0;c[m+568+12>>2]=1065353216;c[m+568+16>>2]=1065353216;c[m+568+20>>2]=1065353216;g[m+568+24>>2]=0.0;c[m+568+52>>2]=0;c[m+568>>2]=3844;c[m+568+4>>2]=1;c[m+568+56>>2]=c[d>>2];c[m+568+56+4>>2]=c[d+4>>2];c[m+568+56+8>>2]=c[d+8>>2];c[m+568+56+12>>2]=c[d+12>>2];c[m+568+72>>2]=c[d+16>>2];c[m+568+72+4>>2]=c[d+16+4>>2];c[m+568+72+8>>2]=c[d+16+8>>2];c[m+568+72+12>>2]=c[d+16+12>>2];c[m+568+88>>2]=c[d+32>>2];c[m+568+88+4>>2]=c[d+32+4>>2];c[m+568+88+8>>2]=c[d+32+8>>2];c[m+568+88+12>>2]=c[d+32+12>>2];c[m+568+44>>2]=c[b+204>>2];g[m+208+308>>2]=9.999999747378752e-05;a[m+208+332>>0]=0;c[m+200>>2]=9244;d=c[b+4>>2]|0;c[m+176>>2]=9312;c[m+176+4>>2]=m+208;c[m+176+8>>2]=m+200;c[m+176+12>>2]=d;c[m+176+16>>2]=m+568;c[m+176+20>>2]=0;c[m>>2]=3816;c[m+168>>2]=0;g[m+164>>2]=1.0;c[m+172>>2]=c[b+208>>2];if((Hd(m+176|0,b+8|0,b+72|0,b+136|0,b+136|0,m)|0?(h=+g[m+132>>2],i=+g[m+136>>2],j=+g[m+140>>2],h*h+i*i+j*j>9.999999747378752e-05):0)?(k=+g[m+164>>2],k<+g[b+200>>2]):0){n=1.0/+G(+(h*h+i*i+j*j));g[m+132>>2]=h*n;g[m+136>>2]=i*n;g[m+140>>2]=j*n;+Fb[c[(c[b>>2]|0)+12>>2]&3](b,m+132|0,m+148|0,k,e,f);}c[m+568>>2]=7248;b=c[m+568+52>>2]|0;if(!b){l=m;return}lb[c[c[b>>2]>>2]&511](b);b=c[m+568+52>>2]|0;if(!b){l=m;return}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);l=m;return}function ng(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;e=+g[d+128>>2];if(!(e!=0.0))return;c[5972]=(c[5972]|0)+1;k=+g[d+96>>2];f=+g[d+16>>2];h=+g[d+20>>2];i=+g[d+24>>2];j=+g[d+108>>2];j=e-k*+g[d+116>>2]-(f*+g[a+144>>2]+h*+g[a+148>>2]+i*+g[a+152>>2]+(+g[d>>2]*+g[a+160>>2]+ +g[d+4>>2]*+g[a+164>>2]+ +g[d+8>>2]*+g[a+168>>2]))*j-j*(+g[d+48>>2]*+g[b+144>>2]+ +g[d+52>>2]*+g[b+148>>2]+ +g[d+56>>2]*+g[b+152>>2]+(+g[d+32>>2]*+g[b+160>>2]+ +g[d+36>>2]*+g[b+164>>2]+ +g[d+40>>2]*+g[b+168>>2]));l=+g[d+120>>2];e=k+j<l?l-k:j;g[d+96>>2]=k+j<l?l:k+j;if(c[a+240>>2]|0){l=e*h*+g[a+132>>2]*+g[a+116>>2];k=e*i*+g[a+136>>2]*+g[a+120>>2];g[a+144>>2]=+g[a+112>>2]*e*f*+g[a+128>>2]+ +g[a+144>>2];g[a+148>>2]=l+ +g[a+148>>2];g[a+152>>2]=k+ +g[a+152>>2];k=e*+g[a+100>>2]*+g[d+68>>2];l=e*+g[a+104>>2]*+g[d+72>>2];g[a+160>>2]=e*+g[a+96>>2]*+g[d+64>>2]+ +g[a+160>>2];g[a+164>>2]=k+ +g[a+164>>2];g[a+168>>2]=l+ +g[a+168>>2];}if(!(c[b+240>>2]|0))return;l=e*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];k=e*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+144>>2]=+g[b+112>>2]*e*+g[d+48>>2]*+g[b+128>>2]+ +g[b+144>>2];g[b+148>>2]=l+ +g[b+148>>2];g[b+152>>2]=k+ +g[b+152>>2];k=e*+g[b+100>>2]*+g[d+84>>2];l=e*+g[b+104>>2]*+g[d+88>>2];g[b+160>>2]=e*+g[b+96>>2]*+g[d+80>>2]+ +g[b+160>>2];g[b+164>>2]=k+ +g[b+164>>2];g[b+168>>2]=l+ +g[b+168>>2];return}function og(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0;t=l;l=l+32|0;s=c[a+12>>2]|0;if(!s){l=t;return}c[f+4>>2]=s;a=c[b+4>>2]|0;e=c[d+4>>2]|0;b=c[b+12>>2]|0;d=c[d+12>>2]|0;m=+g[d+48>>2];h=+g[b+48>>2]-m;n=+g[d+52>>2];i=+g[b+52>>2]-n;o=+g[d+56>>2];k=+g[b+56>>2]-o;p=+G(+(h*h+i*i+k*k));q=+g[e+28>>2]*+g[e+12>>2];r=+g[a+28>>2]*+g[a+12>>2]+q;if(p>r){if(!(c[s+748>>2]|0)){l=t;return}a=c[s+740>>2]|0;b=c[(c[f+8>>2]|0)+8>>2]|0;e=c[(c[f+12>>2]|0)+8>>2]|0;if((a|0)==(b|0)){Ue(s,a+4|0,e+4|0);l=t;return}else{Ue(s,e+4|0,b+4|0);l=t;return}}c[t+16>>2]=1065353216;c[t+16+4>>2]=0;c[t+16+8>>2]=0;g[t+16+12>>2]=0.0;if(p>1.1920928955078125e-07){g[t+16>>2]=h*(1.0/p);g[t+16+4>>2]=i*(1.0/p);g[t+16+8>>2]=k*(1.0/p);g[t+16+12>>2]=0.0;j=h*(1.0/p);i=i*(1.0/p);h=k*(1.0/p);}else{j=1.0;i=0.0;h=0.0;}g[t>>2]=q*j+m;g[t+4>>2]=q*i+n;g[t+8>>2]=q*h+o;g[t+12>>2]=0.0;Ub[c[(c[f>>2]|0)+16>>2]&15](f,t+16|0,t,p-r);b=c[f+4>>2]|0;do if(c[b+748>>2]|0){d=c[b+740>>2]|0;a=c[(c[f+8>>2]|0)+8>>2]|0;e=c[(c[f+12>>2]|0)+8>>2]|0;if((d|0)==(a|0)){Ue(b,d+4|0,e+4|0);break}else{Ue(b,e+4|0,a+4|0);break}}while(0);l=t;return}function pg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;f=+g[d+100>>2];j=+g[d+16>>2];k=+g[d+20>>2];l=+g[d+24>>2];h=+g[d+108>>2];h=+g[d+112>>2]-f*+g[d+116>>2]-(j*+g[a+64>>2]+k*+g[a+68>>2]+l*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*h-h*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));e=+g[d+120>>2];if(!(f+h<e)){e=+g[d+124>>2];if(f+h>e)i=e-f;else{i=h;e=f+h;}}else i=e-f;g[d+100>>2]=e;if(c[a+240>>2]|0){h=i*k*+g[a+132>>2]*+g[a+116>>2];k=i*l*+g[a+136>>2]*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*i*j*+g[a+128>>2]+ +g[a+64>>2];g[a+68>>2]=h+ +g[a+68>>2];g[a+72>>2]=k+ +g[a+72>>2];k=i*+g[a+100>>2]*+g[d+68>>2];l=i*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=i*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=k+ +g[a+84>>2];g[a+88>>2]=l+ +g[a+88>>2];}if(!(c[b+240>>2]|0))return;l=i*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];k=i*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*i*+g[d+48>>2]*+g[b+128>>2]+ +g[b+64>>2];g[b+68>>2]=l+ +g[b+68>>2];g[b+72>>2]=k+ +g[b+72>>2];k=i*+g[b+100>>2]*+g[d+84>>2];l=i*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=i*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=k+ +g[b+84>>2];g[b+88>>2]=l+ +g[b+88>>2];return}function qg(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;i=ms()|0;c[i+4>>2]=4;c[i+8>>2]=-1;c[i+12>>2]=-1;g[i+16>>2]=3402823466385288598117041.0e14;a[i+20>>0]=1;a[i+21>>0]=0;c[i+24>>2]=-1;c[i+28>>2]=b;c[i+32>>2]=d;g[i+36>>2]=0.0;g[i+40>>2]=.30000001192092896;c[i+44>>2]=0;c[i>>2]=4832;c[i+552>>2]=c[e>>2];c[i+552+4>>2]=c[e+4>>2];c[i+552+8>>2]=c[e+8>>2];c[i+552+12>>2]=c[e+12>>2];c[i+568>>2]=c[e+16>>2];c[i+568+4>>2]=c[e+16+4>>2];c[i+568+8>>2]=c[e+16+8>>2];c[i+568+12>>2]=c[e+16+12>>2];c[i+584>>2]=c[e+32>>2];c[i+584+4>>2]=c[e+32+4>>2];c[i+584+8>>2]=c[e+32+8>>2];c[i+584+12>>2]=c[e+32+12>>2];c[i+600>>2]=c[e+48>>2];c[i+600+4>>2]=c[e+48+4>>2];c[i+600+8>>2]=c[e+48+8>>2];c[i+600+12>>2]=c[e+48+12>>2];c[i+616>>2]=c[f>>2];c[i+616+4>>2]=c[f+4>>2];c[i+616+8>>2]=c[f+8>>2];c[i+616+12>>2]=c[f+12>>2];c[i+632>>2]=c[f+16>>2];c[i+632+4>>2]=c[f+16+4>>2];c[i+632+8>>2]=c[f+16+8>>2];c[i+632+12>>2]=c[f+16+12>>2];c[i+648>>2]=c[f+32>>2];c[i+648+4>>2]=c[f+32+4>>2];c[i+648+8>>2]=c[f+32+8>>2];c[i+648+12>>2]=c[f+32+12>>2];c[i+664>>2]=c[f+48>>2];c[i+664+4>>2]=c[f+48+4>>2];c[i+664+8>>2]=c[f+48+8>>2];c[i+664+12>>2]=c[f+48+12>>2];g[i+688>>2]=0.0;g[i+692>>2]=-1.0;g[i+696>>2]=.8999999761581421;g[i+700>>2]=.30000001192092896;g[i+704>>2]=1.0;g[i+708>>2]=0.0;g[i+712>>2]=0.0;a[i+716>>0]=0;a[i+736>>0]=0;a[i+737>>0]=0;a[i+738>>0]=0;a[i+739>>0]=1;a[i+740>>0]=h&1;c[i+748>>2]=0;g[i+732>>2]=h?-1.0:1.0;return i|0}function rg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];g=c[a+48>>2]|0;zb[c[(c[g>>2]|0)+56>>2]&63](g,b+12|0,d)|0;c[b+52>>2]=c[a+12>>2];do if((c[a+52>>2]|0)!=0?((pb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&1|0)==0:0){e=Kb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+52>>2]|0)|0;if(!e){c[b+40>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+52>>2]|0)|0;c[b+44>>2]=0;e=c[a+52>>2]|0;e=pb[c[(c[e>>2]|0)+12>>2]&127](e)|0;e=zb[c[(c[d>>2]|0)+16>>2]&63](d,e,1)|0;g=c[a+52>>2]|0;g=zb[c[(c[g>>2]|0)+16>>2]&63](g,c[e+8>>2]|0,d)|0;jb[c[(c[d>>2]|0)+20>>2]&31](d,e,g,1213612625,c[a+52>>2]|0);break}else{c[b+40>>2]=e;c[b+44>>2]=0;break}}else f=8;while(0);if((f|0)==8){c[b+40>>2]=0;c[b+44>>2]=0;}if(c[a+56>>2]|0?((pb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&2|0)==0:0){e=Kb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+56>>2]|0)|0;if(!e){c[b+48>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+56>>2]|0)|0;b=c[a+56>>2]|0;b=pb[c[(c[b>>2]|0)+8>>2]&127](b)|0;b=zb[c[(c[d>>2]|0)+16>>2]&63](d,b,1)|0;g=c[a+56>>2]|0;g=zb[c[(c[g>>2]|0)+12>>2]&63](g,c[b+8>>2]|0,d)|0;jb[c[(c[d>>2]|0)+20>>2]&31](d,b,g,1346456916,c[a+56>>2]|0);return 16757}else{c[b+48>>2]=e;return 16757}}c[b+48>>2]=0;return 16757}function sg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6423]=(c[6423]|0)+1;k=((e<<16|d)+~((e<<16|d)<<15)>>10^(e<<16|d)+~((e<<16|d)<<15))*9|0;k=(k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11);l=c[b+12>>2]|0;f=c[(c[b+40>>2]|0)+((l+-1&k)<<2)>>2]|0;a:do if((f|0)!=-1){h=c[b+16>>2]|0;while(1){g=h+(f*12|0)|0;if((c[g>>2]|0)==(d|0)?(c[h+(f*12|0)+4>>2]|0)==(e|0):0)break;f=c[(c[b+60>>2]|0)+(f<<2)>>2]|0;if((f|0)==-1)break a}if(g|0){e=g;return e|0}}while(0);j=c[b+8>>2]|0;if((j|0)==(l|0)){h=l|0?l<<1:1;if((l|0)<(h|0)){if(!h){f=0;i=l;}else{c[6436]=(c[6436]|0)+1;f=ic((h*12|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=c[b+8>>2]|0;}if((i|0)>0){g=0;do{m=f+(g*12|0)|0;n=(c[b+16>>2]|0)+(g*12|0)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];g=g+1|0;}while((g|0)!=(i|0))}g=c[b+16>>2]|0;if(g|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=h;f=c[b+8>>2]|0;}else{f=l;h=l;}}else{f=j;h=l;}c[b+8>>2]=f+1;g=c[b+16>>2]|0;if((l|0)<(h|0)){yf(b);f=(c[b+12>>2]|0)+-1&k;}else f=l+-1&k;c[g+(j*12|0)>>2]=d;c[g+(j*12|0)+4>>2]=e;c[g+(j*12|0)+8>>2]=0;n=(c[b+40>>2]|0)+(f<<2)|0;c[(c[b+60>>2]|0)+(j<<2)>>2]=c[n>>2];c[n>>2]=j;n=g+(j*12|0)|0;return n|0}function tg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=ms()|0;c[h+4>>2]=4;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4832;c[h+552>>2]=c[e>>2];c[h+552+4>>2]=c[e+4>>2];c[h+552+8>>2]=c[e+8>>2];c[h+552+12>>2]=c[e+12>>2];c[h+568>>2]=c[e+16>>2];c[h+568+4>>2]=c[e+16+4>>2];c[h+568+8>>2]=c[e+16+8>>2];c[h+568+12>>2]=c[e+16+12>>2];c[h+584>>2]=c[e+32>>2];c[h+584+4>>2]=c[e+32+4>>2];c[h+584+8>>2]=c[e+32+8>>2];c[h+584+12>>2]=c[e+32+12>>2];c[h+600>>2]=c[e+48>>2];c[h+600+4>>2]=c[e+48+4>>2];c[h+600+8>>2]=c[e+48+8>>2];c[h+600+12>>2]=c[e+48+12>>2];c[h+616>>2]=c[f>>2];c[h+616+4>>2]=c[f+4>>2];c[h+616+8>>2]=c[f+8>>2];c[h+616+12>>2]=c[f+12>>2];c[h+632>>2]=c[f+16>>2];c[h+632+4>>2]=c[f+16+4>>2];c[h+632+8>>2]=c[f+16+8>>2];c[h+632+12>>2]=c[f+16+12>>2];c[h+648>>2]=c[f+32>>2];c[h+648+4>>2]=c[f+32+4>>2];c[h+648+8>>2]=c[f+32+8>>2];c[h+648+12>>2]=c[f+32+12>>2];c[h+664>>2]=c[f+48>>2];c[h+664+4>>2]=c[f+48+4>>2];c[h+664+8>>2]=c[f+48+8>>2];c[h+664+12>>2]=c[f+48+12>>2];g[h+688>>2]=0.0;g[h+692>>2]=-1.0;g[h+696>>2]=.8999999761581421;g[h+700>>2]=.30000001192092896;g[h+704>>2]=1.0;g[h+708>>2]=0.0;g[h+712>>2]=0.0;a[h+716>>0]=0;a[h+736>>0]=0;a[h+737>>0]=0;a[h+738>>0]=0;a[h+739>>0]=1;a[h+740>>0]=0;c[h+748>>2]=0;g[h+732>>2]=1.0;return h|0}function ug(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0;if(a[b+1308>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}cd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);c[d>>2]=0;c[d+4>>2]=6;if((c[b+856>>2]|0)==0?(a[b+788>>0]|0)==0:0){e=0;f=6;}else{c[d>>2]=1;c[d+4>>2]=5;e=1;f=5;}if(!((c[b+860>>2]|0)==0?(a[b+789>>0]|0)==0:0)){e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f;}if((c[b+864>>2]|0)==0?(a[b+790>>0]|0)==0:0)n=0;else{e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f;n=0;}do{k=+g[b+868+(n<<6)>>2];l=+g[b+868+(n<<6)+4>>2];m=+Ij(+g[b+1192+(n<<2)>>2],k,l);g[b+868+(n<<6)+52>>2]=m;do if(!(k>l)){if(k>m){c[b+868+(n<<6)+56>>2]=1;h=b+868+(n<<6)+48|0;g[h>>2]=m-k;if(!(m-k>3.1415927410125732))if(m-k<-3.1415927410125732)i=6.2831854820251465;else{j=18;break}else i=-6.2831854820251465;g[h>>2]=m-k+i;j=18;break}h=b+868+(n<<6)+56|0;if(l<m){c[h>>2]=2;h=b+868+(n<<6)+48|0;g[h>>2]=m-l;if(!(m-l>3.1415927410125732))if(m-l<-3.1415927410125732)i=6.2831854820251465;else{j=18;break}else i=-6.2831854820251465;g[h>>2]=m-l+i;j=18;}else j=17;}else{h=b+868+(n<<6)+56|0;j=17;}while(0);if((j|0)==17){j=0;c[h>>2]=0;if(a[b+868+(n<<6)+44>>0]|0)j=18;}if((j|0)==18){e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f;}n=n+1|0;}while((n|0)!=3);return}function vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;k=+g[d+100>>2];f=+g[d+16>>2];h=+g[d+20>>2];i=+g[d+24>>2];j=+g[d+108>>2];j=+g[d+112>>2]-k*+g[d+116>>2]-(f*+g[a+64>>2]+h*+g[a+68>>2]+i*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*j-j*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));l=+g[d+120>>2];e=k+j<l?l-k:j;g[d+100>>2]=k+j<l?l:k+j;if(c[a+240>>2]|0){l=e*h*+g[a+132>>2]*+g[a+116>>2];k=e*i*+g[a+136>>2]*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*e*f*+g[a+128>>2]+ +g[a+64>>2];g[a+68>>2]=l+ +g[a+68>>2];g[a+72>>2]=k+ +g[a+72>>2];k=e*+g[a+100>>2]*+g[d+68>>2];l=e*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=e*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=k+ +g[a+84>>2];g[a+88>>2]=l+ +g[a+88>>2];}if(!(c[b+240>>2]|0))return;l=e*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];k=e*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*e*+g[d+48>>2]*+g[b+128>>2]+ +g[b+64>>2];g[b+68>>2]=l+ +g[b+68>>2];g[b+72>>2]=k+ +g[b+72>>2];k=e*+g[b+100>>2]*+g[d+84>>2];l=e*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=e*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=k+ +g[b+84>>2];g[b+88>>2]=l+ +g[b+88>>2];return}function wg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=l;l=l+96|0;g=c[b+8>>2]|0;if((g|0)==(c[b+12>>2]|0)?(j=g|0?g<<1:1,(g|0)<(j|0)):0){if(!j)i=0;else{c[6436]=(c[6436]|0)+1;g=ic((j<<2|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16;}i=g;g=c[b+8>>2]|0;}if((g|0)>0){h=0;do{c[i+(h<<2)>>2]=c[(c[b+16>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(g|0))}h=c[b+16>>2]|0;if(h){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);g=c[b+8>>2]|0;}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=i;c[b+12>>2]=j;}c[(c[b+16>>2]|0)+(g<<2)>>2]=d;c[b+8>>2]=g+1;c[k+32>>2]=c[d+4>>2];c[k+32+4>>2]=c[d+4+4>>2];c[k+32+8>>2]=c[d+4+8>>2];c[k+32+12>>2]=c[d+4+12>>2];c[k+32+16>>2]=c[d+20>>2];c[k+32+16+4>>2]=c[d+20+4>>2];c[k+32+16+8>>2]=c[d+20+8>>2];c[k+32+16+12>>2]=c[d+20+12>>2];c[k+32+32>>2]=c[d+36>>2];c[k+32+32+4>>2]=c[d+36+4>>2];c[k+32+32+8>>2]=c[d+36+8>>2];c[k+32+32+12>>2]=c[d+36+12>>2];c[k+32+48>>2]=c[d+52>>2];c[k+32+48+4>>2]=c[d+52+4>>2];c[k+32+48+8>>2]=c[d+52+8>>2];c[k+32+48+12>>2]=c[d+52+12>>2];j=c[d+192>>2]|0;Zb[c[(c[j>>2]|0)+8>>2]&127](j,k+32|0,k+16|0,k);j=c[b+68>>2]|0;c[d+188>>2]=Tb[c[(c[j>>2]|0)+8>>2]&3](j,k+16|0,k,c[(c[d+192>>2]|0)+4>>2]|0,d,e,f,c[b+24>>2]|0,0)|0;l=k;return}function xg(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=4272;if(a[b+272>>0]|0?(d=c[b+204>>2]|0,lb[c[c[d>>2]>>2]&511](d),d=c[b+204>>2]|0,d|0):0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+196>>2]|0;if(d|0?(lb[c[c[d>>2]>>2]&511](d),e=c[b+196>>2]|0,e|0):0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}if(a[b+273>>0]|0?(f=c[b+200>>2]|0,lb[c[c[f>>2]>>2]&511](f),f=c[b+200>>2]|0,f|0):0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}d=c[b+316>>2]|0;if(d|0){if(a[b+320>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+316>>2]=0;}a[b+320>>0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;d=c[b+288>>2]|0;if(d|0){if(a[b+292>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+288>>2]=0;}a[b+292>>0]=1;c[b+288>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;d=c[b+240>>2]|0;if(d|0){if(a[b+244>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+240>>2]=0;}a[b+244>>0]=1;c[b+240>>2]=0;c[b+232>>2]=0;c[b+236>>2]=0;d=c[b+220>>2]|0;if(d|0){if(a[b+224>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+220>>2]=0;}a[b+224>>0]=1;c[b+220>>2]=0;c[b+212>>2]=0;c[b+216>>2]=0;d=c[b+188>>2]|0;if(!d){a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;f=b+184|0;c[f>>2]=0;xj(b);return}if(a[b+192>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+188>>2]=0;a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;f=b+184|0;c[f>>2]=0;xj(b);return}function yg(a,b,d,e,f,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=+j;k=k|0;l=+l;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;c[a>>2]=c[h>>2];c[a+4>>2]=c[h+4>>2];c[a+8>>2]=c[h+8>>2];c[a+12>>2]=c[h+12>>2];s=+g[e+4>>2];v=+g[a+8>>2];w=+g[e+8>>2];p=+g[a+4>>2];m=+g[a>>2];r=+g[e>>2];u=(s*v-w*p)*+g[b>>2]+ +g[b+4>>2]*(w*m-v*r)+(p*r-s*m)*+g[b+8>>2];t=(s*v-w*p)*+g[b+16>>2]+(w*m-v*r)*+g[b+20>>2]+(p*r-s*m)*+g[b+24>>2];s=(s*v-w*p)*+g[b+32>>2]+(w*m-v*r)*+g[b+36>>2]+(p*r-s*m)*+g[b+40>>2];g[a+16>>2]=u;g[a+20>>2]=t;g[a+24>>2]=s;g[a+28>>2]=0.0;r=+g[f+4>>2];w=+g[f+8>>2];n=+g[f>>2];q=+g[d>>2]*(r*-v-w*-p)+ +g[d+4>>2]*(w*-m-n*-v)+(n*-p-r*-m)*+g[d+8>>2];o=(r*-v-w*-p)*+g[d+16>>2]+(w*-m-n*-v)*+g[d+20>>2]+(n*-p-r*-m)*+g[d+24>>2];m=(r*-v-w*-p)*+g[d+32>>2]+(w*-m-n*-v)*+g[d+36>>2]+(n*-p-r*-m)*+g[d+40>>2];g[a+32>>2]=q;g[a+36>>2]=o;g[a+40>>2]=m;g[a+44>>2]=0.0;u=+g[i>>2]*u;t=+g[i+4>>2]*t;s=+g[i+8>>2]*s;g[a+48>>2]=u;g[a+52>>2]=t;g[a+56>>2]=s;g[a+60>>2]=0.0;r=+g[k>>2]*q;p=+g[k+4>>2]*o;n=+g[k+8>>2]*m;g[a+64>>2]=r;g[a+68>>2]=p;g[a+72>>2]=n;g[a+76>>2]=0.0;g[a+80>>2]=u*+g[a+16>>2]+t*+g[a+20>>2]+s*+g[a+24>>2]+j+l+(r*q+p*o+n*m);return}function zg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;h=l;l=l+64|0;a[d+84>>0]=0;c[h>>2]=c[b+4>>2];c[h+4>>2]=c[b+4+4>>2];c[h+8>>2]=c[b+4+8>>2];c[h+12>>2]=c[b+4+12>>2];c[h+16>>2]=c[b+20>>2];c[h+16+4>>2]=c[b+20+4>>2];c[h+16+8>>2]=c[b+20+8>>2];c[h+16+12>>2]=c[b+20+12>>2];c[h+32>>2]=c[b+36>>2];c[h+32+4>>2]=c[b+36+4>>2];c[h+32+8>>2]=c[b+36+8>>2];c[h+32+12>>2]=c[b+36+12>>2];c[h+48>>2]=c[b+52>>2];c[h+48+4>>2]=c[b+52+4>>2];c[h+48+8>>2]=c[b+52+8>>2];c[h+48+12>>2]=c[b+52+12>>2];if(e?(f=c[b+480>>2]|0,f|0):0)nb[c[(c[f>>2]|0)+8>>2]&127](f,h);w=+g[d+156>>2];u=+g[h>>2];v=+g[d+160>>2];t=+g[h+4>>2];o=+g[d+164>>2];s=+g[h+8>>2];r=+g[h+16>>2];q=+g[h+20>>2];p=+g[h+24>>2];n=+g[h+32>>2];k=+g[h+36>>2];i=+g[h+40>>2];m=w*r+v*q+o*p+ +g[h+52>>2];j=w*n+v*k+o*i+ +g[h+56>>2];g[d+36>>2]=w*u+v*t+o*s+ +g[h+48>>2];g[d+40>>2]=m;g[d+44>>2]=j;g[d+48>>2]=0.0;j=+g[d+172>>2];m=+g[d+176>>2];o=+g[d+180>>2];g[d+52>>2]=u*j+t*m+s*o;g[d+56>>2]=j*r+m*q+o*p;g[d+60>>2]=j*n+m*k+o*i;g[d+64>>2]=0.0;o=+g[d+188>>2];m=+g[d+192>>2];j=+g[d+196>>2];g[d+68>>2]=u*o+t*m+s*j;g[d+72>>2]=o*r+m*q+j*p;g[d+76>>2]=o*n+m*k+j*i;g[d+80>>2]=0.0;l=h;return}function Ag(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=b;break a}case 10:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;c[a>>2]=e;c[a+4>>2]=((e|0)<0)<<31>>31;break a}case 11:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;c[a>>2]=e;c[a+4>>2]=0;break a}case 12:{f=(c[d>>2]|0)+(8-1)&~(8-1);b=c[f>>2]|0;e=c[f+4>>2]|0;c[d>>2]=f+8;c[a>>2]=b;c[a+4>>2]=e;break a}case 13:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=(f&65535)<<16>>16;c[a+4>>2]=(((f&65535)<<16>>16|0)<0)<<31>>31;break a}case 14:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f&65535;c[a+4>>2]=0;break a}case 15:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=(f&255)<<24>>24;c[a+4>>2]=(((f&255)<<24>>24|0)<0)<<31>>31;break a}case 16:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f&255;c[a+4>>2]=0;break a}case 17:{f=(c[d>>2]|0)+(8-1)&~(8-1);g=+h[f>>3];c[d>>2]=f+8;h[a>>3]=g;break a}case 18:{f=(c[d>>2]|0)+(8-1)&~(8-1);g=+h[f>>3];c[d>>2]=f+8;h[a>>3]=g;break a}default:break a}while(0);while(0);return}function Bg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0,k=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0;w=l;l=l+2048|0;if((e|0)>0)f=0;else{l=w;return}do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0;}while((f|0)!=(e|0));p=0;do{if((pb[c[(c[a>>2]|0)+96>>2]&127](a)|0)>0){q=b+(p<<4)|0;r=b+(p<<4)+4|0;s=b+(p<<4)+8|0;t=d+(p<<4)+12|0;u=d+(p<<4)|0;o=0;do{if(((pb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-o|0)<128){f=(pb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-o|0;if((f|0)>0)v=10;else{i=-3402823466385288598117041.0e14;f=-1;}}else{f=128;v=10;}if((v|0)==10){v=0;h=0;do{Vb[c[(c[a>>2]|0)+108>>2]&127](a,h,w+(h<<4)|0);h=h+1|0;}while((h|0)!=(f|0));k=+g[q>>2];m=+g[r>>2];n=+g[s>>2];h=-1;j=0;i=-3402823466385288598117041.0e14;do{x=k*+g[w+(j<<4)>>2]+m*+g[w+(j<<4)+4>>2]+n*+g[w+(j<<4)+8>>2];y=x>i;h=y?j:h;i=y?x:i;j=j+1|0;}while((j|0)!=(f|0));f=h;}if(i>+g[t>>2]){y=w+(f<<4)|0;c[u>>2]=c[y>>2];c[u+4>>2]=c[y+4>>2];c[u+8>>2]=c[y+8>>2];c[u+12>>2]=c[y+12>>2];g[t>>2]=i;}o=o+128|0;}while((o|0)<(pb[c[(c[a>>2]|0)+96>>2]&127](a)|0))}p=p+1|0;}while((p|0)!=(e|0));l=w;return}function Cg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6422]=(c[6422]|0)+1;h=((d<<16|b)+~((d<<16|b)<<15)>>10^(d<<16|b)+~((d<<16|b)<<15))*9|0;m=c[a+40>>2]|0;h=m+(((c[a+12>>2]|0)+-1&((h>>6^h)+~((h>>6^h)<<11)>>16^(h>>6^h)+~((h>>6^h)<<11)))<<2)|0;g=c[h>>2]|0;if((g|0)==-1){n=0;return n|0}n=c[a+16>>2]|0;e=g;while(1){l=n+(e*12|0)|0;if((c[l>>2]|0)==(b|0)?(c[n+(e*12|0)+4>>2]|0)==(d|0):0)break;e=c[(c[a+60>>2]|0)+(e<<2)>>2]|0;if((e|0)==-1){e=0;f=13;break}}if((f|0)==13)return e|0;if(!l){n=0;return n|0}k=c[n+(e*12|0)+8>>2]|0;j=(e*12|0)/12|0;i=c[a+60>>2]|0;if((g|0)==(j|0))e=-1;else{e=g;while(1){b=c[i+(e<<2)>>2]|0;if((b|0)==(j|0))break;else e=b;}}c[((e|0)==-1?h:i+(e<<2)|0)>>2]=c[i+(j<<2)>>2];f=(c[a+8>>2]|0)+-1|0;if((f|0)==(j|0)){c[a+8>>2]=j;n=k;return n|0}g=c[n+(f*12|0)+4>>2]<<16|c[n+(f*12|0)>>2];g=(g+~(g<<15)>>10^g+~(g<<15))*9|0;g=((g>>6^g)+~((g>>6^g)<<11)>>16^(g>>6^g)+~((g>>6^g)<<11))&(c[a+12>>2]|0)+-1;b=g;d=-1;e=m;while(1){e=c[e+(b<<2)>>2]|0;if((e|0)==(f|0))break;else{b=e;d=e;e=i;}}c[((d|0)==-1?m+(g<<2)|0:i+(d<<2)|0)>>2]=c[i+(f<<2)>>2];c[l>>2]=c[n+(f*12|0)>>2];c[l+4>>2]=c[n+(f*12|0)+4>>2];c[l+8>>2]=c[n+(f*12|0)+8>>2];n=(c[a+40>>2]|0)+(g<<2)|0;c[(c[a+60>>2]|0)+(j<<2)>>2]=c[n>>2];c[n>>2]=j;c[a+8>>2]=(c[a+8>>2]|0)+-1;n=k;return n|0}function Dg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0,v=0;u=l;l=l+16|0;h=c[a+52>>2]|0;t=+g[a+28+(((h+2|0)%3|0)<<2)>>2];if((e|0)<=0){l=u;return}f=0;while(1){c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+(h<<2)>>2]=c[a+28+(h<<2)>>2];h=b+(f<<4)|0;r=b+(f<<4)+4|0;s=b+(f<<4)+8|0;m=t*+g[h>>2]+ +g[u>>2];n=t*+g[r>>2]+ +g[u+4>>2];o=t*+g[s>>2]+ +g[u+8>>2];p=+Db[c[(c[a>>2]|0)+48>>2]&15](a);i=+g[h>>2];j=+g[r>>2];k=+g[s>>2];if(i*(m-p*i)+j*(n-p*j)+k*(o-p*k)>-999999984306749440.0){g[d+(f<<4)>>2]=m-p*i;g[d+(f<<4)+4>>2]=n-p*j;g[d+(f<<4)+8>>2]=o-p*k;g[d+(f<<4)+12>>2]=0.0;q=i*(m-p*i)+j*(n-p*j)+k*(o-p*k);i=+g[h>>2];j=+g[r>>2];k=+g[s>>2];}else q=-999999984306749440.0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;v=c[a+52>>2]|0;g[u+(v<<2)>>2]=-+g[a+28+(v<<2)>>2];p=t*i+ +g[u>>2];o=t*j+ +g[u+4>>2];m=t*k+ +g[u+8>>2];n=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+g[h>>2];j=+g[r>>2];i=+g[s>>2];if(k*(p-n*k)+j*(o-n*j)+i*(m-n*i)>q){g[d+(f<<4)>>2]=p-n*k;g[d+(f<<4)+4>>2]=o-n*j;g[d+(f<<4)+8>>2]=m-n*i;g[d+(f<<4)+12>>2]=0.0;}f=f+1|0;if((f|0)==(e|0))break;h=c[a+52>>2]|0;}l=u;return}function Eg(b,d){b=b|0;d=d|0;var e=0;e=es()|0;rj(e,5,b);c[e>>2]=4776;c[e+300>>2]=c[d>>2];c[e+300+4>>2]=c[d+4>>2];c[e+300+8>>2]=c[d+8>>2];c[e+300+12>>2]=c[d+12>>2];c[e+316>>2]=c[d+16>>2];c[e+316+4>>2]=c[d+16+4>>2];c[e+316+8>>2]=c[d+16+8>>2];c[e+316+12>>2]=c[d+16+12>>2];c[e+332>>2]=c[d+32>>2];c[e+332+4>>2]=c[d+32+4>>2];c[e+332+8>>2]=c[d+32+8>>2];c[e+332+12>>2]=c[d+32+12>>2];c[e+348>>2]=c[d+48>>2];c[e+348+4>>2]=c[d+48+4>>2];c[e+348+8>>2]=c[d+48+8>>2];c[e+348+12>>2]=c[d+48+12>>2];a[e+527>>0]=0;c[e+364>>2]=c[e+300>>2];c[e+364+4>>2]=c[e+300+4>>2];c[e+364+8>>2]=c[e+300+8>>2];c[e+364+12>>2]=c[e+300+12>>2];c[e+380>>2]=c[e+316>>2];c[e+380+4>>2]=c[e+316+4>>2];c[e+380+8>>2]=c[e+316+8>>2];c[e+380+12>>2]=c[e+316+12>>2];c[e+396>>2]=c[e+332>>2];c[e+396+4>>2]=c[e+332+4>>2];c[e+396+8>>2]=c[e+332+8>>2];c[e+396+12>>2]=c[e+332+12>>2];a[e+524>>0]=0;a[e+525>>0]=0;a[e+526>>0]=0;a[e+552>>0]=0;c[e+412>>2]=0;c[e+412+4>>2]=0;c[e+412+8>>2]=0;c[e+412+12>>2]=0;g[e+572>>2]=-1.0;g[e+444>>2]=999999984306749440.0;g[e+448>>2]=999999984306749440.0;g[e+452>>2]=999999984306749440.0;g[e+428>>2]=1.0;g[e+432>>2]=.30000001192092896;g[e+436>>2]=1.0;g[e+440>>2]=.009999999776482582;g[e+456>>2]=.05000000074505806;c[e+592>>2]=0;g[e+596>>2]=0.0;g[e+600>>2]=.699999988079071;g[e+604>>2]=0.0;return e|0}function Fg(a,b,d,e,f,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var k=0.0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0;r=l;l=l+16|0;g[e>>2]=3402823466385288598117041.0e14;g[f>>2]=-3402823466385288598117041.0e14;p=c[a+96>>2]|0;if((p|0)>0){n=0;do{t=c[a+104>>2]|0;s=+g[t+(n<<4)>>2]*+g[a+12>>2];q=+g[t+(n<<4)+4>>2]*+g[a+16>>2];o=+g[t+(n<<4)+8>>2]*+g[a+20>>2];k=s*+g[b>>2]+q*+g[b+4>>2]+o*+g[b+8>>2]+ +g[b+48>>2];m=s*+g[b+16>>2]+q*+g[b+20>>2]+o*+g[b+24>>2]+ +g[b+52>>2];o=s*+g[b+32>>2]+q*+g[b+36>>2]+o*+g[b+40>>2]+ +g[b+56>>2];q=k*+g[d>>2]+m*+g[d+4>>2]+o*+g[d+8>>2];if(q<+g[e>>2]){g[e>>2]=q;g[h>>2]=k;g[h+4>>2]=m;g[h+8>>2]=o;g[h+12>>2]=0.0;}if(q>+g[f>>2]){g[f>>2]=q;g[i>>2]=k;g[i+4>>2]=m;g[i+8>>2]=o;g[i+12>>2]=0.0;}n=n+1|0;}while((n|0)!=(p|0));s=+g[f>>2];m=s;n=(g[j>>2]=s,c[j>>2]|0);}else{m=-3402823466385288598117041.0e14;n=-8388609;}k=+g[e>>2];if(!(k>m)){l=r;return}c[e>>2]=n;g[f>>2]=k;c[r>>2]=c[h>>2];c[r+4>>2]=c[h+4>>2];c[r+8>>2]=c[h+8>>2];c[r+12>>2]=c[h+12>>2];c[h>>2]=c[i>>2];c[h+4>>2]=c[i+4>>2];c[h+8>>2]=c[i+8>>2];c[h+12>>2]=c[i+12>>2];c[i>>2]=c[r>>2];c[i+4>>2]=c[r+4>>2];c[i+8>>2]=c[r+8>>2];c[i+12>>2]=c[r+12>>2];l=r;return}function Gg(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=e|0;f=+f;h=h|0;var i=0.0,j=0.0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;k=l;l=l+16|0;j=c*f+ +g[a+52>>2];i=d*f+ +g[a+56>>2];g[h+48>>2]=b*f+ +g[a+48>>2];g[h+52>>2]=j;g[h+56>>2]=i;g[h+60>>2]=0.0;i=+g[e>>2];j=+g[e+4>>2];d=+g[e+8>>2];b=+G(+(i*i+j*j+d*d));b=b*f>.7853981852531433?.7853981852531433/f:b;if(b<1.0000000474974513e-03)c=f*.5-b*f*f*f*.02083333395421505*b;else c=+J(+(b*.5*f))/b;o=i*c;n=j*c;i=d*c;q=+I(+(b*f*.5));fh(a,k);b=+g[k>>2];p=+g[k+12>>2];c=+g[k+8>>2];f=+g[k+4>>2];r=1.0/+G(+((q*p-o*b-n*f-i*c)*(q*p-o*b-n*f-i*c)+((i*p+q*c+o*f-n*b)*(i*p+q*c+o*f-n*b)+((q*b+o*p+n*c-i*f)*(q*b+o*p+n*c-i*f)+(i*b+(n*p+q*f)-o*c)*(i*b+(n*p+q*f)-o*c)))));d=(q*b+o*p+n*c-i*f)*r;j=r*(i*b+(n*p+q*f)-o*c);m=r*(i*p+q*c+o*f-n*b);c=r*(q*p-o*b-n*f-i*c);i=d*(2.0/(c*c+(m*m+(d*d+j*j))));f=j*(2.0/(c*c+(m*m+(d*d+j*j))));b=m*(2.0/(c*c+(m*m+(d*d+j*j))));g[h>>2]=1.0-(j*f+m*b);g[h+4>>2]=d*f-c*b;g[h+8>>2]=d*b+c*f;g[h+12>>2]=0.0;g[h+16>>2]=d*f+c*b;g[h+20>>2]=1.0-(d*i+m*b);g[h+24>>2]=j*b-c*i;g[h+28>>2]=0.0;g[h+32>>2]=d*b-c*f;g[h+36>>2]=j*b+c*i;g[h+40>>2]=1.0-(d*i+j*f);g[h+44>>2]=0.0;l=k;return}function Hg(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+48|0;e=(c[a+48>>2]|0)+4|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];b=d+32+4|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;g[d+32>>2]=1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+32>>2]=+g[d+16>>2]+ +g[a+12>>2];g[d+32>>2]=-1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+16>>2]=+g[d+16>>2]-+g[a+12>>2];c[d+32>>2]=0;c[d+32+4>>2]=0;c[d+32+8>>2]=0;c[d+32+12>>2]=0;g[b>>2]=1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+36>>2]=+g[d+16+4>>2]+ +g[a+12>>2];g[b>>2]=-1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+20>>2]=+g[d+16+4>>2]-+g[a+12>>2];c[d+32>>2]=0;c[d+32+4>>2]=0;c[d+32+8>>2]=0;c[d+32+12>>2]=0;g[d+32+8>>2]=1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+40>>2]=+g[d+16+8>>2]+ +g[a+12>>2];g[d+32+8>>2]=-1.0;Vb[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+24>>2]=+g[d+16+8>>2]-+g[a+12>>2];l=d;return}function Ig(b,d,e){b=b|0;d=+d;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;f=c[b+8>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0;}f=c[b+12>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0;}f=c[b+20>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0;}f=c[b+24>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0;}f=c[b+156>>2]|0;c[b+156>>2]=f+1;a[b+152>>0]=(f|0)>=(c[b+160>>2]|0)&1;if(f|0){c[b+72>>2]=0;c[b+72+4>>2]=0;c[b+72+8>>2]=0;c[b+72+12>>2]=0;c[b+72+16>>2]=0;c[b+72+20>>2]=0;c[b+72+24>>2]=0;c[b+72+28>>2]=0;return}j=+g[b+64>>2];i=1.0/d*+g[b+72>>2]*j;h=1.0/d*j*+g[b+76>>2];d=1.0/d*j*+g[b+80>>2];g[b+72>>2]=i;g[b+76>>2]=h;g[b+80>>2]=d;g[b+84>>2]=0.0;j=+g[b+68>>2];if(j>0.0){l=j*i*+g[b+120>>2]+j*h*+g[b+124>>2]+j*d*+g[b+128>>2];k=j*i*+g[b+136>>2]+j*h*+g[b+140>>2]+j*d*+g[b+144>>2];g[b+88>>2]=j*i*+g[b+104>>2]+j*h*+g[b+108>>2]+j*d*+g[b+112>>2];g[b+92>>2]=l;g[b+96>>2]=k;g[b+100>>2]=0.0;g[b+72>>2]=(1.0-j)*i;g[b+76>>2]=(1.0-j)*h;g[b+80>>2]=(1.0-j)*d;i=(1.0-j)*i;h=(1.0-j)*h;d=(1.0-j)*d;}g[b+72>>2]=1.0/+(e|0)*i;g[b+76>>2]=1.0/+(e|0)*h;g[b+80>>2]=1.0/+(e|0)*d;return}function Jg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0;j=l;l=l+48|0;n=+g[d>>2];o=+g[d+4>>2];m=+g[d+8>>2];p=n*+g[b+4>>2]+o*+g[b+20>>2]+m*+g[b+36>>2];q=n*+g[b+8>>2]+o*+g[b+24>>2]+m*+g[b+40>>2];g[j+32>>2]=+g[b>>2]*n+ +g[b+16>>2]*o+ +g[b+32>>2]*m;g[j+32+4>>2]=p;g[j+32+8>>2]=q;g[j+32+12>>2]=0.0;Vb[c[(c[a>>2]|0)+64>>2]&127](j+16|0,a,j+32|0);q=+g[j+16>>2];p=+g[j+16+4>>2];m=+g[j+16+8>>2];o=q*+g[b>>2]+p*+g[b+4>>2]+m*+g[b+8>>2]+ +g[b+48>>2];n=q*+g[b+16>>2]+p*+g[b+20>>2]+m*+g[b+24>>2]+ +g[b+52>>2];m=q*+g[b+32>>2]+p*+g[b+36>>2]+m*+g[b+40>>2]+ +g[b+56>>2];r=c[(c[a>>2]|0)+64>>2]|0;p=-+g[j+32+4>>2];q=-+g[j+32+8>>2];g[j>>2]=-+g[j+32>>2];g[j+4>>2]=p;g[j+8>>2]=q;g[j+12>>2]=0.0;Vb[r&127](j+16|0,a,j);q=+g[j+16>>2];p=+g[j+16+4>>2];h=+g[j+16+8>>2];k=q*+g[b>>2]+p*+g[b+4>>2]+h*+g[b+8>>2]+ +g[b+48>>2];i=q*+g[b+16>>2]+p*+g[b+20>>2]+h*+g[b+24>>2]+ +g[b+52>>2];h=q*+g[b+32>>2]+p*+g[b+36>>2]+h*+g[b+40>>2]+ +g[b+56>>2];g[e>>2]=o*+g[d>>2]+n*+g[d+4>>2]+m*+g[d+8>>2];h=k*+g[d>>2]+i*+g[d+4>>2]+h*+g[d+8>>2];g[f>>2]=h;i=+g[e>>2];if(!(i>h)){l=j;return}g[e>>2]=h;g[f>>2]=i;l=j;return}function Kg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0,j=0,k=0.0,m=0,n=0,o=0.0,p=0.0,q=0,r=0;n=l;l=l+16|0;if((f|0)>-3&(f+3|0)>-1){c[6436]=(c[6436]|0)+1;a=ic((f+3<<4|3)+16|0)|0;if(!a)m=0;else{c[(a+4+15&-16)+-4>>2]=a;m=a+4+15&-16;}a=0;do{j=m+(a<<4)|0;c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];c[j+12>>2]=c[n+12>>2];a=a+1|0;}while((a|0)!=(f+3|0));i=0;j=m;while(1){if(!i)h=0.0;else{a=i;h=0.0;k=.5;while(1){h=(a&1|0)==0?h:h+k;a=a>>1;if(!a)break;else k=k*.5;}}k=h*2.0+-1.0;o=(+(i<<1|0)*3.1415927410125732+3.1415927410125732)/+(f+3|0);p=+G(+(1.0-k*k));h=p*+J(+o);g[j>>2]=p*+I(+o);g[j+4>>2]=h;g[j+8>>2]=k;g[j+12>>2]=0.0;i=i+1|0;if((i|0)==(f+3|0)){j=m;i=m;break}else j=j+16|0;}}else{j=0;i=0;}if((f|0)>-3){a=0;do{r=j+(a<<4)|0;q=j+(a<<4)+4|0;m=j+(a<<4)+8|0;o=+g[q>>2]*+g[e+4>>2]+ +g[d+4>>2];p=+g[m>>2]*+g[e+8>>2]+ +g[d+8>>2];g[r>>2]=+g[r>>2]*+g[e>>2]+ +g[d>>2];g[q>>2]=o;g[m>>2]=p;g[j+(a<<4)+12>>2]=0.0;a=a+1|0;}while((a|0)<(f+3|0))}a=cc(b,j,f+3|0,1)|0;if((j|0)==0|(i|0)==0){l=n;return a|0}c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);l=n;return a|0}function Lg(a){a=a|0;var b=0,d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0;jl(a+988|0);if((c[a+752>>2]|0)<=0)return;f=0;do{p=c[a+760>>2]|0;q=p+(f*44|0)|0;d=c[p+(f*44|0)+8>>2]|0;e=c[p+(f*44|0)+12>>2]|0;b=c[p+(f*44|0)+16>>2]|0;m=+g[d+8>>2];n=+g[d+12>>2];o=+g[d+16>>2];i=+g[d+20>>2];u=+g[e+8>>2];j=u<m?u:m;r=+g[e+12>>2];k=r<n?r:n;s=+g[e+16>>2];l=s<o?s:o;t=+g[e+20>>2];h=t<i?t:i;m=m<u?u:m;n=n<r?r:n;o=o<s?s:o;i=i<t?t:i;t=+g[b+8>>2];j=t<j?t:j;s=+g[b+12>>2];k=s<k?s:k;r=+g[b+16>>2];l=r<l?r:l;u=+g[b+20>>2];h=u<h?u:h;i=i<u?u:i;m=(m<t?t:m)+0.0;n=(n<s?s:n)+0.0;o=(o<r?r:o)+0.0;b=c[a+992>>2]|0;if(!b){c[6436]=(c[6436]|0)+1;b=ic(63)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}d=b;e=d+44|0;do{c[d>>2]=0;d=d+4|0;}while((d|0)<(e|0))}else c[a+992>>2]=0;c[b+32>>2]=0;c[b+36>>2]=q;c[b+40>>2]=0;g[b>>2]=j;g[b+4>>2]=k;g[b+8>>2]=l;g[b+12>>2]=h;g[b+16>>2]=m;g[b+20>>2]=n;g[b+24>>2]=o;g[b+28>>2]=i;Fe(a+988|0,c[a+988>>2]|0,b);c[a+1e3>>2]=(c[a+1e3>>2]|0)+1;c[p+(f*44|0)+40>>2]=b;f=f+1|0;}while((f|0)<(c[a+752>>2]|0));return}function Mg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;m=l;l=l+16|0;h=c[a+12>>2]|0;i=c[h+(((d+b|0)/2|0)<<4)>>2]|0;j=c[h+(((d+b|0)/2|0)<<4)+4>>2]|0;k=c[h+(((d+b|0)/2|0)<<4)+8>>2]|0;f=d;e=b;while(1){while(1){g=c[h+(e<<4)+4>>2]|0;if((g|0)>=(j|0)){if((g|0)!=(j|0))break;g=c[h+(e<<4)>>2]|0;if((g|0)>=(i|0)){if((g|0)!=(i|0))break;if((c[h+(e<<4)+8>>2]|0)>=(k|0))break}}e=e+1|0;}while(1){g=c[h+(f<<4)+4>>2]|0;if((j|0)>=(g|0)){if((j|0)!=(g|0))break;g=c[h+(f<<4)>>2]|0;if((i|0)>=(g|0)){if((i|0)!=(g|0))break;if((k|0)>=(c[h+(f<<4)+8>>2]|0))break}}f=f+-1|0;}if((e|0)<=(f|0)){g=h+(e<<4)|0;c[m>>2]=c[g>>2];c[m+4>>2]=c[g+4>>2];c[m+8>>2]=c[g+8>>2];c[m+12>>2]=c[g+12>>2];h=h+(f<<4)|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];h=(c[a+12>>2]|0)+(f<<4)|0;c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];f=f+-1|0;e=e+1|0;}if((e|0)>(f|0))break;h=c[a+12>>2]|0;}if((f|0)>(b|0))Mg(a,b,f);if((e|0)>=(d|0)){l=m;return}Mg(a,e,d);l=m;return}function Ng(a,b,d,e,f,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var k=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0;r=l;l=l+16|0;g[e>>2]=3402823466385288598117041.0e14;g[f>>2]=-3402823466385288598117041.0e14;q=c[a+8>>2]|0;if((q|0)>0){n=0;do{t=c[a+16>>2]|0;s=+g[t+(n<<4)>>2];p=+g[t+(n<<4)+4>>2];o=+g[t+(n<<4)+8>>2];k=s*+g[b>>2]+p*+g[b+4>>2]+o*+g[b+8>>2]+ +g[b+48>>2];m=s*+g[b+16>>2]+p*+g[b+20>>2]+o*+g[b+24>>2]+ +g[b+52>>2];o=s*+g[b+32>>2]+p*+g[b+36>>2]+o*+g[b+40>>2]+ +g[b+56>>2];p=k*+g[d>>2]+m*+g[d+4>>2]+o*+g[d+8>>2];if(p<+g[e>>2]){g[e>>2]=p;g[h>>2]=k;g[h+4>>2]=m;g[h+8>>2]=o;g[h+12>>2]=0.0;}if(p>+g[f>>2]){g[f>>2]=p;g[i>>2]=k;g[i+4>>2]=m;g[i+8>>2]=o;g[i+12>>2]=0.0;}n=n+1|0;}while((n|0)!=(q|0));s=+g[f>>2];m=s;n=(g[j>>2]=s,c[j>>2]|0);}else{m=-3402823466385288598117041.0e14;n=-8388609;}k=+g[e>>2];if(!(k>m)){l=r;return}c[e>>2]=n;g[f>>2]=k;c[r>>2]=c[h>>2];c[r+4>>2]=c[h+4>>2];c[r+8>>2]=c[h+8>>2];c[r+12>>2]=c[h+12>>2];c[h>>2]=c[i>>2];c[h+4>>2]=c[i+4>>2];c[h+8>>2]=c[i+8>>2];c[h+12>>2]=c[i+12>>2];c[i>>2]=c[r>>2];c[i+4>>2]=c[r+4>>2];c[i+8>>2]=c[r+8>>2];c[i+12>>2]=c[r+12>>2];l=r;return}function Og(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,i=0,j=0;j=c[a+28>>2]|0;i=0;e=0.0;f=0.0;h=0.0;a:while(1){switch(i|0){case 0:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 1:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 2:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 3:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 4:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 5:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 6:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 7:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+72>>2]-+g[a+88>>2];break}default:{}}if((j|0)>0){d=c[a+36>>2]|0;b=0;do{if(+g[d+(b*36|0)+32>>2]+(e*+g[d+(b*36|0)+20>>2]+f*+g[d+(b*36|0)+24>>2]+h*+g[d+(b*36|0)+28>>2])>0.0){b=0;d=16;break a}b=b+1|0;}while((b|0)<(j|0))}i=i+1|0;if((i|0)>=8){b=1;d=16;break}}if((d|0)==16)return b|0;return 0}function Pg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0;m=l;l=l+32|0;j=(a[b+28>>0]|0)!=0;k=j?e:d;j=j?d:e;h=c[k+4>>2]|0;i=c[h+16>>2]|0;g=c[b+12>>2]|0;if((g|0)<(i|0)){if((c[b+16>>2]|0)<(i|0)){if(!i){d=0;f=g;}else{c[6436]=(c[6436]|0)+1;d=ic((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=c[b+12>>2]|0;}if((f|0)>0){e=0;do{c[d+(e<<2)>>2]=c[(c[b+20>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0))}e=c[b+20>>2]|0;if(e|0){if(a[b+24>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+20>>2]=0;}a[b+24>>0]=1;c[b+20>>2]=d;c[b+16>>2]=i;e=b+20|0;}else e=b+20|0;d=g;do{c[(c[e>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=(i|0))}c[b+12>>2]=i;if((i|0)<=0){l=m;return}d=0;do{if(!(c[h+64>>2]|0)){e=c[(c[h+24>>2]|0)+(d*80|0)+64>>2]|0;f=c[k+8>>2]|0;g=c[k+12>>2]|0;c[m>>2]=k;c[m+4>>2]=e;c[m+8>>2]=f;c[m+12>>2]=g;c[m+16>>2]=-1;c[m+20>>2]=d;g=c[b+4>>2]|0;g=tb[c[(c[g>>2]|0)+8>>2]&31](g,m,j,c[b+32>>2]|0)|0;c[(c[b+20>>2]|0)+(d<<2)>>2]=g;}else c[(c[b+20>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=(i|0));l=m;return}function Qg(a,b,e){a=a|0;b=b|0;e=e|0;Uh(a,b,e)|0;c[b+52>>2]=c[a+48>>2];c[b+56>>2]=c[a+52>>2];c[b+60>>2]=c[a+56>>2];c[b+64>>2]=c[a+60>>2];c[b+68>>2]=c[a+64>>2];c[b+72>>2]=c[a+68>>2];c[b+76>>2]=c[a+72>>2];c[b+80>>2]=c[a+76>>2];c[b+84>>2]=c[a+80>>2];c[b+88>>2]=c[a+84>>2];c[b+92>>2]=c[a+88>>2];c[b+96>>2]=c[a+92>>2];c[b+100>>2]=c[a+96>>2];c[b+104>>2]=c[a+100>>2];c[b+108>>2]=c[a+104>>2];c[b+112>>2]=c[a+108>>2];c[b+116>>2]=c[a+112>>2];c[b+120>>2]=c[a+116>>2];c[b+124>>2]=c[a+120>>2];c[b+128>>2]=c[a+124>>2];c[b+132>>2]=c[a+128>>2];c[b+136>>2]=c[a+132>>2];c[b+140>>2]=c[a+136>>2];c[b+144>>2]=c[a+140>>2];c[b+148>>2]=c[a+144>>2];c[b+152>>2]=c[a+148>>2];c[b+156>>2]=c[a+152>>2];c[b+160>>2]=c[a+156>>2];c[b+164>>2]=c[a+160>>2];c[b+168>>2]=c[a+164>>2];c[b+172>>2]=c[a+168>>2];c[b+176>>2]=c[a+172>>2];c[b+228>>2]=c[a+868>>2];c[b+212>>2]=c[a+872>>2];c[b+196>>2]=c[a+680>>2];c[b+180>>2]=c[a+696>>2];c[b+232>>2]=c[a+932>>2];c[b+216>>2]=c[a+936>>2];c[b+200>>2]=c[a+684>>2];c[b+184>>2]=c[a+700>>2];c[b+236>>2]=c[a+996>>2];c[b+220>>2]=c[a+1e3>>2];c[b+204>>2]=c[a+688>>2];c[b+188>>2]=c[a+704>>2];c[b+244>>2]=d[a+1300>>0];c[b+248>>2]=d[a+1301>>0];return 12533}function Rg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;e=c[b+32>>2]|0;if(!e)f=0;else f=c[b+40>>2]|0;i=c[b+52>>2]|0;if(!i)g=0;else g=c[b+60>>2]|0;d=c[b+72>>2]|0;if(!d)h=0;else h=c[b+80>>2]|0;j=c[b+8>>2]|0;+Mb[c[(c[j>>2]|0)+12>>2]&3](j,f,e,g,i,h,d,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);d=c[b+32>>2]|0;if((d|0)<0){if((c[b+36>>2]|0)<0){e=c[b+40>>2]|0;if(e|0){if(a[b+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+40>>2]=0;}a[b+44>>0]=1;c[b+40>>2]=0;c[b+36>>2]=0;}do{c[(c[b+40>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=0)}c[b+32>>2]=0;d=c[b+52>>2]|0;if((d|0)<0){if((c[b+56>>2]|0)<0){e=c[b+60>>2]|0;if(e|0){if(a[b+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+60>>2]=0;}a[b+64>>0]=1;c[b+60>>2]=0;c[b+56>>2]=0;}do{c[(c[b+60>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=0)}c[b+52>>2]=0;d=c[b+72>>2]|0;if((d|0)>=0){c[b+72>>2]=0;return}if((c[b+76>>2]|0)<0){e=c[b+80>>2]|0;if(e|0){if(a[b+84>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+80>>2]=0;}a[b+84>>0]=1;c[b+80>>2]=0;c[b+76>>2]=0;}do{c[(c[b+80>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=0);c[b+72>>2]=0;return}function Sg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[6436]=(c[6436]|0)+1;d=ic(39)|0;if(!d)g=0;else{c[(d+4+15&-16)+-4>>2]=d;g=d+4+15&-16;}h=g;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;if((c[b+872>>2]|0)>0){i=c[c[b+880>>2]>>2]|0;c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];c[g+8>>2]=c[i+8>>2];c[g+12>>2]=c[i+12>>2];c[g+16>>2]=c[i+16>>2];}else{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;}e=c[b+872>>2]|0;if((e|0)!=(c[b+876>>2]|0)){i=e;f=b+880|0;f=c[f>>2]|0;f=f+(i<<2)|0;c[f>>2]=h;i=i+1|0;c[b+872>>2]=i;return g|0}i=e|0?e<<1:1;if((e|0)>=(i|0)){i=e;f=b+880|0;f=c[f>>2]|0;f=f+(i<<2)|0;c[f>>2]=h;i=i+1|0;c[b+872>>2]=i;return g|0}if(!i)d=0;else{c[6436]=(c[6436]|0)+1;d=ic((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}e=c[b+872>>2]|0;}if((e|0)>0){f=0;do{c[d+(f<<2)>>2]=c[(c[b+880>>2]|0)+(f<<2)>>2];f=f+1|0;}while((f|0)!=(e|0))}f=c[b+880>>2]|0;if(f){if(a[b+884>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);e=c[b+872>>2]|0;}c[b+880>>2]=0;}a[b+884>>0]=1;c[b+880>>2]=d;c[b+876>>2]=i;i=e;f=b+880|0;f=c[f>>2]|0;f=f+(i<<2)|0;c[f>>2]=h;i=i+1|0;c[b+872>>2]=i;return g|0}function Tg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=c[b+4>>2]|0;if((e|0)==(c[b+8>>2]|0)){xf(b,e|0?e<<1:1);e=c[b+4>>2]|0;}o=c[b+12>>2]|0;j=o+(e*36|0)+16|0;a[j>>0]=1;k=o+(e*36|0)+12|0;c[k>>2]=0;n=o+(e*36|0)+4|0;c[n>>2]=0;l=o+(e*36|0)+8|0;c[l>>2]=0;p=c[d+4>>2]|0;if((p|0)<=0){c[n>>2]=p;p=o+(e*36|0)+20|0;d=d+20|0;c[p>>2]=c[d>>2];c[p+4>>2]=c[d+4>>2];c[p+8>>2]=c[d+8>>2];c[p+12>>2]=c[d+12>>2];d=c[b+4>>2]|0;d=d+1|0;c[b+4>>2]=d;return}c[6436]=(c[6436]|0)+1;f=ic((p<<2|3)+16|0)|0;if(!f)g=0;else{c[(f+4+15&-16)+-4>>2]=f;g=f+4+15&-16;}h=c[n>>2]|0;i=c[k>>2]|0;if((h|0)<=0){if(i|0)m=10;}else{f=0;do{c[g+(f<<2)>>2]=c[i+(f<<2)>>2];f=f+1|0;}while((f|0)!=(h|0));m=10;}if((m|0)==10?a[j>>0]|0:0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}a[j>>0]=1;c[k>>2]=g;c[l>>2]=p;Ik(g|0,0,p<<2|0)|0;h=c[k>>2]|0;c[n>>2]=p;g=c[d+12>>2]|0;f=0;do{c[h+(f<<2)>>2]=c[g+(f<<2)>>2];f=f+1|0;}while((f|0)!=(p|0));p=o+(e*36|0)+20|0;d=d+20|0;c[p>>2]=c[d>>2];c[p+4>>2]=c[d+4>>2];c[p+8>>2]=c[d+8>>2];c[p+12>>2]=c[d+12>>2];d=c[b+4>>2]|0;d=d+1|0;c[b+4>>2]=d;return}function Ug(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,k=0,l=0,m=0.0,n=0,o=0,p=0.0,q=0.0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,b,f,h);n=c[h>>2]|0;k=c[h+4>>2]|0;b=c[h+8>>2]|0;l=c[f>>2]|0;o=c[f+4>>2]|0;i=c[f+8>>2]|0;m=+g[d>>2];p=+g[d+4>>2];q=+g[d+8>>2];if(m>0.0)n=(g[j>>2]=(c[j>>2]=n,+g[j>>2])+m,c[j>>2]|0);else l=(g[j>>2]=(c[j>>2]=l,+g[j>>2])+m,c[j>>2]|0);if(p>0.0){d=o;k=(g[j>>2]=(c[j>>2]=k,+g[j>>2])+p,c[j>>2]|0);}else d=(g[j>>2]=(c[j>>2]=o,+g[j>>2])+p,c[j>>2]|0);if(q>0.0)b=(g[j>>2]=(c[j>>2]=b,+g[j>>2])+q,c[j>>2]|0);else i=(g[j>>2]=(c[j>>2]=i,+g[j>>2])+q,c[j>>2]|0);m=+g[e>>2];p=+g[e+4>>2];q=+g[e+8>>2];q=+G(+(m*m+p*p+q*q));q=q*+Db[c[(c[a>>2]|0)+16>>2]&15](a);c[f>>2]=l;c[f+4>>2]=d;c[f+8>>2]=i;g[f+12>>2]=0.0;c[h>>2]=n;c[h+4>>2]=k;c[h+8>>2]=b;g[h+12>>2]=0.0;g[f>>2]=+g[f>>2]-q;g[f+4>>2]=+g[f+4>>2]-q;g[f+8>>2]=+g[f+8>>2]-q;g[h>>2]=q+ +g[h>>2];g[h+4>>2]=q+ +g[h+4>>2];g[h+8>>2]=q+ +g[h+8>>2];return}function Vg(b,d,e){b=b|0;d=+d;e=e|0;var f=0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;j=c[b+712>>2]|0;if(e){if((j|0)>0){f=c[b+720>>2]|0;e=0;do{g[f+(e*104|0)+88>>2]=0.0;e=e+1|0;}while((e|0)!=(j|0))}i=c[b+752>>2]|0;if((i|0)>0){f=c[b+760>>2]|0;e=0;do{m=c[f+(e*44|0)+8>>2]|0;l=c[f+(e*44|0)+12>>2]|0;k=c[f+(e*44|0)+16>>2]|0;o=+g[m+8>>2];q=+g[m+12>>2];h=+g[m+16>>2];n=+g[l+8>>2]-o;r=+g[l+12>>2]-q;p=+g[l+16>>2]-h;o=+g[k+8>>2]-o;q=+g[k+12>>2]-q;h=+g[k+16>>2]-h;h=+G(+((n*q-r*o)*(n*q-r*o)+((r*h-p*q)*(r*h-p*q)+(p*o-n*h)*(p*o-n*h))));g[m+88>>2]=h+ +g[m+88>>2];g[l+88>>2]=h+ +g[l+88>>2];g[k+88>>2]=h+ +g[k+88>>2];e=e+1|0;}while((e|0)!=(i|0))}if((j|0)<=0){m=b+924|0;a[m>>0]=1;return}f=c[b+720>>2]|0;e=0;do{m=f+(e*104|0)+88|0;g[m>>2]=1.0/+g[m>>2];e=e+1|0;}while((e|0)!=(j|0))}if((j|0)<=0){m=b+924|0;a[m>>0]=1;return}f=c[b+720>>2]|0;e=0;h=0.0;do{r=+g[f+(e*104|0)+88>>2];h=h+(r>0.0?1.0/r:0.0);e=e+1|0;}while((e|0)!=(j|0));h=1.0/h*d;e=0;do{m=f+(e*104|0)+88|0;g[m>>2]=+g[m>>2]/h;e=e+1|0;}while((e|0)!=(j|0));m=b+924|0;a[m>>0]=1;return}function Wg(a,b){a=+a;b=+b;var d=0,e=0,f=0,h=0,i=0,k=0,l=0,m=0;l=(g[j>>2]=a,c[j>>2]|0);i=(g[j>>2]=b,c[j>>2]|0);a:do if((i<<1|0)!=0?!((l>>>23&255|0)==255|((gC(b)|0)&2147483647)>>>0>2139095040):0){if(l<<1>>>0<=i<<1>>>0)return +((l<<1|0)==(i<<1|0)?a*0.0:a);if(!(l>>>23&255)){if((l<<9|0)>-1){e=l<<9;d=0;do{d=d+-1|0;e=e<<1;}while((e|0)>-1)}else d=0;e=l<<1-d;}else{e=l&8388607|8388608;d=l>>>23&255;}if(!(i>>>23&255)){if((i<<9|0)>-1){f=0;h=i<<9;do{f=f+-1|0;h=h<<1;}while((h|0)>-1)}else f=0;k=f;i=i<<1-f;}else{k=i>>>23&255;i=i&8388607|8388608;}f=e-i|0;b:do if((d|0)>(k|0)){h=f;f=(f|0)>-1;while(1){if(f)if(!h)break;else e=h;e=e<<1;d=d+-1|0;f=e-i|0;if((d|0)>(k|0)){h=f;f=(f|0)>-1;}else{h=(f|0)>-1;break b}}b=a*0.0;break a}else h=(f|0)>-1;while(0);if(h)if(!f){b=a*0.0;break}else e=f;if(e>>>0<8388608)do{e=e<<1;d=d+-1|0;}while(e>>>0<8388608);if((d|0)>0)d=e+-8388608|d<<23;else d=e>>>(1-d|0);b=(c[j>>2]=d|l&-2147483648,+g[j>>2]);}else m=3;while(0);if((m|0)==3)b=a*b/(a*b);return +b}function Xg(a,b,d,e,f,h,i,j,k,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0.0,o=0.0;a=l;l=l+80|0;o=+g[h+52>>2]-+g[f+52>>2];n=+g[h+56>>2]-+g[f+56>>2];g[a+56>>2]=+g[h+48>>2]-+g[f+48>>2];g[a+56+4>>2]=o;g[a+56+8>>2]=n;g[a+56+12>>2]=0.0;if(Ac(d,f,e,h,a+56|0,a,1)|0){c[j>>2]=c[a+4>>2];c[j+4>>2]=c[a+4+4>>2];c[j+8>>2]=c[a+4+8>>2];c[j+12>>2]=c[a+4+12>>2];c[k>>2]=c[a+20>>2];c[k+4>>2]=c[a+20+4>>2];c[k+8>>2]=c[a+20+8>>2];c[k+12>>2]=c[a+20+12>>2];c[i>>2]=c[a+36>>2];c[i+4>>2]=c[a+36+4>>2];c[i+8>>2]=c[a+36+8>>2];c[i+12>>2]=c[a+36+12>>2];k=1;l=a;return k|0}if(!(vd(d,f,e,h,a+56|0,a)|0)){k=0;l=a;return k|0}c[j>>2]=c[a+4>>2];c[j+4>>2]=c[a+4+4>>2];c[j+8>>2]=c[a+4+8>>2];c[j+12>>2]=c[a+4+12>>2];c[k>>2]=c[a+20>>2];c[k+4>>2]=c[a+20+4>>2];c[k+8>>2]=c[a+20+8>>2];c[k+12>>2]=c[a+20+12>>2];c[i>>2]=c[a+36>>2];c[i+4>>2]=c[a+36+4>>2];c[i+8>>2]=c[a+36+8>>2];c[i+12>>2]=c[a+36+12>>2];k=0;l=a;return k|0}function Yg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0,k=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0;p=l;l=l+2048|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];if(e*e+h*h+f*f<9.999999747378752e-05){n=1.0;m=0.0;h=0.0;}else{q=1.0/+G(+(e*e+h*h+f*f));n=e*q;m=h*q;h=f*q;}if((pb[c[(c[b>>2]|0)+96>>2]&127](b)|0)<=0){l=p;return}k=0;f=-999999984306749440.0;while(1){if(((pb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-k|0)<128){d=(pb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-k|0;if((d|0)>0)o=8;else{e=-3402823466385288598117041.0e14;d=-1;}}else{d=128;o=8;}if((o|0)==8){o=0;i=0;do{Vb[c[(c[b>>2]|0)+108>>2]&127](b,i,p+(i<<4)|0);i=i+1|0;}while((i|0)!=(d|0));i=-1;j=0;e=-3402823466385288598117041.0e14;do{q=n*+g[p+(j<<4)>>2]+m*+g[p+(j<<4)+4>>2]+h*+g[p+(j<<4)+8>>2];r=q>e;i=r?j:i;e=r?q:e;j=j+1|0;}while((j|0)!=(d|0));d=i;}if(e>f){r=p+(d<<4)|0;c[a>>2]=c[r>>2];c[a+4>>2]=c[r+4>>2];c[a+8>>2]=c[r+8>>2];c[a+12>>2]=c[r+12>>2];}else e=f;k=k+128|0;if((k|0)>=(pb[c[(c[b>>2]|0)+96>>2]&127](b)|0))break;else f=e;}l=p;return}function Zg(b,e,f,h,i,j){b=b|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;var k=0;if((d[h+55>>0]|0|0)==(e|0)){h=0;return h|0}k=c[5100+(i<<2)>>2]|0;if(+g[h>>2]*+g[f+16>>2]+ +g[h+4>>2]*+g[f+20>>2]+ +g[h+8>>2]*+g[f+24>>2]-+g[h+16>>2]<-9.999999747378752e-06){e=cf(b,c[h+20+(k<<2)>>2]|0,c[h+20+(i<<2)>>2]|0,f,0)|0;if(!e){h=0;return h|0}a[e+52>>0]=i;c[e+32>>2]=h;a[h+52+i>>0]=0;c[h+32+(i<<2)>>2]=e;i=c[j>>2]|0;if(!i)c[j+4>>2]=e;else{a[i+53>>0]=2;c[i+36>>2]=e;a[e+54>>0]=1;c[e+40>>2]=i;}c[j>>2]=e;c[j+8>>2]=(c[j+8>>2]|0)+1;h=1;return h|0}i=c[5112+(i<<2)>>2]|0;a[h+55>>0]=e;if(!(Zg(b,e,f,c[h+32+(k<<2)>>2]|0,d[h+52+k>>0]|0,j)|0)){h=0;return h|0}if(!(Zg(b,e,f,c[h+32+(i<<2)>>2]|0,d[h+52+i>>0]|0,j)|0)){h=0;return h|0}i=c[h+48>>2]|0;if(i|0)c[i+44>>2]=c[h+44>>2];i=c[h+44>>2]|0;if(i|0)c[i+48>>2]=c[h+48>>2];if((c[b+9280>>2]|0)==(h|0))c[b+9280>>2]=c[h+48>>2];c[b+9284>>2]=(c[b+9284>>2]|0)+-1;c[h+44>>2]=0;c[h+48>>2]=c[b+9288>>2];i=c[b+9288>>2]|0;if(i|0)c[i+44>>2]=h;c[b+9288>>2]=h;c[b+9292>>2]=(c[b+9292>>2]|0)+1;h=1;return h|0}function _g(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0,j=0,k=0.0,l=0.0;e=c[d+204>>2]|0;if((e&3|0)==0?(c[d+504>>2]&1|0)==0:0){h=+g[d+344>>2];if(h!=0.0){l=1.0/h*+g[b+252>>2];k=1.0/h*+g[b+256>>2];g[d+364>>2]=1.0/h*+g[b+248>>2];g[d+368>>2]=l;g[d+372>>2]=k;g[d+376>>2]=0.0;}c[d+380>>2]=c[b+248>>2];c[d+380+4>>2]=c[b+248+4>>2];c[d+380+8>>2]=c[b+248+8>>2];c[d+380+12>>2]=c[b+248+12>>2];}if(!(c[d+192>>2]|0))return;if(e&1){if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=2;}else{f=c[b+232>>2]|0;if((f|0)==(c[b+236>>2]|0)?(j=f|0?f<<1:1,(f|0)<(j|0)):0){if(!j)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((j<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[b+232>>2]|0;}if((f|0)>0){i=0;do{c[e+(i<<2)>>2]=c[(c[b+240>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(f|0))}i=c[b+240>>2]|0;if(i){if(a[b+244>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);f=c[b+232>>2]|0;}c[b+240>>2]=0;}a[b+244>>0]=1;c[b+240>>2]=e;c[b+236>>2]=j;e=c[d+204>>2]|0;}c[(c[b+240>>2]|0)+(f<<2)>>2]=d;c[b+232>>2]=f+1;}j=(e&3|0)==0;Zb[c[(c[b>>2]|0)+36>>2]&127](b,d,j?1:2,j?-1:-3);return}function $g(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;i=c[a+68+(d<<2)>>2]|0;j=b[i+((f&65535)<<2)+-4>>1]|0;if((e[i+((f&65535)<<2)>>1]|0)>=(j&65535))return;k=c[a+60>>2]|0;m=k+((e[i+((f&65535)<<2)+2>>1]|0)<<6)+54+(d<<1)|0;h=i+((f&65535)<<2)+-4|0;l=i+((f&65535)<<2)|0;while(1){i=e[l+-2>>1]|0;if(!(j&1)){f=e[l+2>>1]|0;if(((((e[k+(f<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[k+(i<<6)+48+((1<<d&3)<<1)>>1]|0)?(e[k+(i<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[k+(f<<6)+48+((1<<d&3)<<1)>>1]|0):0)?(e[k+(f<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[k+(i<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(e[k+(i<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[k+(f<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(p=c[a+92>>2]|0,n=k+(f<<6)|0,o=k+(i<<6)|0,tb[c[(c[p>>2]|0)+12>>2]&31](p,n,o,g)|0,p=c[a+96>>2]|0,p|0):0)tb[c[(c[p>>2]|0)+12>>2]&31](p,n,o,g)|0;f=k+(i<<6)+48+(d<<1)|0;}else f=k+(i<<6)+54+(d<<1)|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16;b[m>>1]=(b[m>>1]|0)+-1<<16>>16;f=e[l>>1]|e[l+2>>1]<<16;j=e[h>>1]|e[h+2>>1]<<16;b[l>>1]=j;b[l+2>>1]=j>>>16;b[h>>1]=f;b[h+2>>1]=f>>>16;f=l+-4|0;h=h+-4|0;j=b[h>>1]|0;if((e[f>>1]|0)>=(j&65535))break;l=f;k=c[a+60>>2]|0;}return}function ah(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0,k=0,l=0,m=0.0,n=0.0;h=c[d+204>>2]|0;if((h&3|0)==0?(c[d+504>>2]&1|0)==0:0){i=+g[d+344>>2];if(i!=0.0){n=1.0/i*+g[b+252>>2];m=1.0/i*+g[b+256>>2];g[d+364>>2]=1.0/i*+g[b+248>>2];g[d+368>>2]=n;g[d+372>>2]=m;g[d+376>>2]=0.0;}c[d+380>>2]=c[b+248>>2];c[d+380+4>>2]=c[b+248+4>>2];c[d+380+8>>2]=c[b+248+8>>2];c[d+380+12>>2]=c[b+248+12>>2];}if(!(c[d+192>>2]|0))return;if(h&1){if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=2;}else{h=c[b+232>>2]|0;if((h|0)==(c[b+236>>2]|0)?(l=h|0?h<<1:1,(h|0)<(l|0)):0){if(!l)k=0;else{c[6436]=(c[6436]|0)+1;h=ic((l<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}k=h;h=c[b+232>>2]|0;}if((h|0)>0){j=0;do{c[k+(j<<2)>>2]=c[(c[b+240>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(h|0))}j=c[b+240>>2]|0;if(j){if(a[b+244>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);h=c[b+232>>2]|0;}c[b+240>>2]=0;}a[b+244>>0]=1;c[b+240>>2]=k;c[b+236>>2]=l;}c[(c[b+240>>2]|0)+(h<<2)>>2]=d;c[b+232>>2]=h+1;}Zb[c[(c[b>>2]|0)+36>>2]&127](b,d,e,f);return}function bh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0.0,k=0,l=0.0;l=+g[d>>2];if(+g[b>>2]<=l){j=+g[d+4>>2];if((((+g[b+4>>2]<=j?+g[b+8>>2]<=+g[d+8>>2]:0)?+g[b+16>>2]>=+g[d+16>>2]:0)?+g[b+20>>2]>=+g[d+20>>2]:0)?+g[b+24>>2]>=+g[d+24>>2]:0){d=0;return d|0}else h=d+4|0;}else{h=d+4|0;j=+g[d+4>>2];}g[d>>2]=l-f;g[h>>2]=j-f;g[d+8>>2]=+g[d+8>>2]-f;g[d+16>>2]=+g[d+16>>2]+f;g[d+20>>2]=+g[d+20>>2]+f;g[d+24>>2]=+g[d+24>>2]+f;l=+g[e>>2];k=l>0.0?d+16|0:d;g[k>>2]=l+ +g[k>>2];l=+g[e+4>>2];h=l>0.0?d+20|0:h;g[h>>2]=l+ +g[h>>2];l=+g[e+8>>2];h=l>0.0?d+24|0:d+8|0;g[h>>2]=l+ +g[h>>2];h=hg(a,b)|0;a:do if(h){k=c[a+8>>2]|0;if((k|0)<=-1){h=c[a>>2]|0;break}if(k){e=0;while(1){i=c[h+32>>2]|0;e=e+1|0;if(!i)break a;if((e|0)>=(k|0)){h=i;break}else h=i;}}}else h=0;while(0);c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];Fe(a,h,b);d=1;return d|0}function ch(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,G=0.0;o=(+g[a+32>>2]-+g[a+16>>2])*.5;l=(+g[a+36>>2]-+g[a+20>>2])*.5;i=(+g[a+40>>2]-+g[a+24>>2])*.5;n=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);i=i+ +Db[c[(c[a>>2]|0)+48>>2]&15](a);B=(+g[a+32>>2]+ +g[a+16>>2])*.5;z=(+g[a+36>>2]+ +g[a+20>>2])*.5;x=(+g[a+40>>2]+ +g[a+24>>2])*.5;G=+g[b>>2];w=+F(+G);E=+g[b+4>>2];v=+F(+E);t=+g[b+8>>2];u=+F(+t);D=+g[b+16>>2];s=+F(+D);C=+g[b+20>>2];r=+F(+C);p=+g[b+24>>2];q=+F(+p);A=+g[b+32>>2];m=+F(+A);y=+g[b+36>>2];j=+F(+y);f=+g[b+40>>2];h=+F(+f);t=B*G+z*E+x*t+ +g[b+48>>2];p=B*D+z*C+x*p+ +g[b+52>>2];f=B*A+z*y+x*f+ +g[b+56>>2];g[d>>2]=t-((o+n)*w+(l+k)*v+i*u);g[d+4>>2]=p-((o+n)*s+(l+k)*r+i*q);g[d+8>>2]=f-((o+n)*m+(l+k)*j+i*h);g[d+12>>2]=0.0;g[e>>2]=(o+n)*w+(l+k)*v+i*u+t;g[e+4>>2]=(o+n)*s+(l+k)*r+i*q+p;g[e+8>>2]=(o+n)*m+(l+k)*j+i*h+f;g[e+12>>2]=0.0;return}function dh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,G=0,H=0.0,I=0.0;I=+g[a+48>>2];z=+g[a+32>>2];H=+g[a+52>>2];x=+g[a+36>>2];E=+g[a+56>>2];v=+g[a+40>>2];G=(c[a+16>>2]|0)==0;m=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);m=(G?0.0:(I-z)*.5)+m;k=(G?0.0:(H-x)*.5)+k;i=(G?0.0:(E-v)*.5)+i;D=+g[b>>2];u=+F(+D);C=+g[b+4>>2];t=+F(+C);r=+g[b+8>>2];s=+F(+r);B=+g[b+16>>2];q=+F(+B);A=+g[b+20>>2];p=+F(+A);n=+g[b+24>>2];o=+F(+n);y=+g[b+32>>2];l=+F(+y);w=+g[b+36>>2];j=+F(+w);f=+g[b+40>>2];h=+F(+f);z=G?0.0:(I+z)*.5;x=G?0.0:(H+x)*.5;v=G?0.0:(E+v)*.5;r=z*D+x*C+v*r+ +g[b+48>>2];n=z*B+x*A+v*n+ +g[b+52>>2];f=z*y+x*w+v*f+ +g[b+56>>2];g[d>>2]=r-(m*u+k*t+i*s);g[d+4>>2]=n-(m*q+k*p+i*o);g[d+8>>2]=f-(m*l+k*j+i*h);g[d+12>>2]=0.0;g[e>>2]=m*u+k*t+i*s+r;g[e+4>>2]=m*q+k*p+i*o+n;g[e+8>>2]=m*l+k*j+i*h+f;g[e+12>>2]=0.0;return}function eh(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=c[a+68+(d<<2)>>2]|0;k=c[a+60>>2]|0;l=e[h+((f&65535)<<2)+2>>1]|0;i=b[h+((f&65535)<<2)+-4>>1]|0;if((e[h+((f&65535)<<2)>>1]|0)>=(i&65535))return;g=h+((f&65535)<<2)+-4|0;j=h+((f&65535)<<2)|0;h=k;while(1){f=e[j+-2>>1]|0;if(!(i&1))f=h+(f<<6)+48+(d<<1)|0;else{if(((((e[k+(l<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[h+(f<<6)+48+((1<<d&3)<<1)>>1]|0)?(e[h+(f<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[k+(l<<6)+48+((1<<d&3)<<1)>>1]|0):0)?(e[k+(l<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[h+(f<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(e[h+(f<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[k+(l<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(n=c[a+92>>2]|0,m=h+(f<<6)|0,zb[c[(c[n>>2]|0)+8>>2]&63](n,k+(l<<6)|0,m)|0,n=c[a+96>>2]|0,n|0):0)zb[c[(c[n>>2]|0)+8>>2]&63](n,k+(l<<6)|0,m)|0;f=h+(f<<6)+54+(d<<1)|0;}b[f>>1]=(b[f>>1]|0)+1<<16>>16;b[k+(l<<6)+48+(d<<1)>>1]=(b[k+(l<<6)+48+(d<<1)>>1]|0)+-1<<16>>16;f=e[j>>1]|e[j+2>>1]<<16;i=e[g>>1]|e[g+2>>1]<<16;b[j>>1]=i;b[j+2>>1]=i>>>16;b[g>>1]=f;b[g+2>>1]=f>>>16;f=j+-4|0;g=g+-4|0;i=b[g>>1]|0;if((e[f>>1]|0)>=(i&65535))break;j=f;h=c[a+60>>2]|0;}return}function fh(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;d=+g[(fH(a)|0)>>2];e=+g[(MG(a+16|0)|0)>>2];c=+g[(LG(a+32|0)|0)>>2];if(d+e+c>0.0){e=+TG(d+e+c+1.0);g[f+12>>2]=e*.5;d=+g[(MG(a+32|0)|0)>>2];g[f>>2]=(d-+g[(LG(a+16|0)|0)>>2])*(.5/e);d=+g[(LG(a)|0)>>2];g[f+4>>2]=(d-+g[(fH(a+32|0)|0)>>2])*(.5/e);d=+g[(fH(a+16|0)|0)>>2];g[f+8>>2]=(d-+g[(MG(a)|0)>>2])*(.5/e);i=f+4|0;h=f+8|0;a=f+12|0;j=f;lr(b,j,i,h,a);l=f;return}else{h=(d<e?e:d)<c?2:d<e&1;i=fH(a+(h<<4)|0)|0;e=+g[i+(h<<2)>>2];k=fH(a+((((h+1|0)>>>0)%3|0)<<4)|0)|0;e=e-+g[k+((((h+1|0)>>>0)%3|0)<<2)>>2];j=fH(a+((((h+2|0)>>>0)%3|0)<<4)|0)|0;e=+TG(e-+g[j+((((h+2|0)>>>0)%3|0)<<2)>>2]+1.0);g[f+(h<<2)>>2]=e*.5;g[f+12>>2]=(+g[j+((((h+1|0)>>>0)%3|0)<<2)>>2]-+g[k+((((h+2|0)>>>0)%3|0)<<2)>>2])*(.5/e);g[f+((((h+1|0)>>>0)%3|0)<<2)>>2]=(+g[k+(h<<2)>>2]+ +g[i+((((h+1|0)>>>0)%3|0)<<2)>>2])*(.5/e);g[f+((((h+2|0)>>>0)%3|0)<<2)>>2]=(+g[j+(h<<2)>>2]+ +g[i+((((h+2|0)>>>0)%3|0)<<2)>>2])*(.5/e);h=f+4|0;i=f+8|0;j=f+12|0;a=f;lr(b,a,h,i,j);l=f;return}}function gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+212>>2]|0;a:do if((f|0)>0){g=c[a+220>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+220>>2]|0)+(f+-1<<2)>>2]=b;c[a+212>>2]=f+-1;}}while(0);g=c[b+28>>2]|0;d=c[g+488>>2]|0;b:do if((d|0)>0){f=c[g+496>>2]|0;e=0;while(1){a=f+(e<<2)|0;if((c[a>>2]|0)==(b|0))break;e=e+1|0;if((e|0)>=(d|0))break b}if((e|0)<(d|0)){c[a>>2]=c[f+(d+-1<<2)>>2];c[(c[g+496>>2]|0)+(d+-1<<2)>>2]=b;c[g+488>>2]=d+-1;d=d+-1|0;}}while(0);c[g+256>>2]=(d|0)>0&1;g=c[b+32>>2]|0;d=c[g+488>>2]|0;if((d|0)<=0){b=d;b=(b|0)>0;b=b&1;h=g+256|0;c[h>>2]=b;return}f=c[g+496>>2]|0;e=0;while(1){a=f+(e<<2)|0;if((c[a>>2]|0)==(b|0))break;e=e+1|0;if((e|0)>=(d|0)){h=19;break}}if((h|0)==19){b=(d|0)>0;b=b&1;h=g+256|0;c[h>>2]=b;return}if((e|0)>=(d|0)){b=d;b=(b|0)>0;b=b&1;h=g+256|0;c[h>>2]=b;return}c[a>>2]=c[f+(d+-1<<2)>>2];c[(c[g+496>>2]|0)+(d+-1<<2)>>2]=b;c[g+488>>2]=d+-1;b=d+-1|0;b=(b|0)>0;b=b&1;h=g+256|0;c[h>>2]=b;return}function hh(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0;j=pb[c[(c[b>>2]|0)+28>>2]&127](b)|0;i=+g[j>>2]-+g[d>>2];h=+g[j+4>>2]-+g[d+4>>2];f=+g[j+8>>2]-+g[d+8>>2];if(!(i*i+h*h+f*f>1.1920928955078125e-07))return;Hg(b,d);if((a[b+61>>0]|0)!=0?(e=c[b+52>>2]|0,lb[c[c[e>>2]>>2]&511](e),e=c[b+52>>2]|0,(e|0)!=0):0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);e=b+52|0;}else e=b+52|0;c[6436]=(c[6436]|0)+1;d=ic(191)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}c[d+52>>2]=282;a[d+60>>0]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;a[d+100>>0]=1;c[d+96>>2]=0;c[d+88>>2]=0;c[d+92>>2]=0;a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;a[d+140>>0]=1;c[d+136>>2]=0;c[d+128>>2]=0;c[d+132>>2]=0;c[d+144>>2]=0;a[d+164>>0]=1;c[d+160>>2]=0;c[d+152>>2]=0;c[d+156>>2]=0;c[d+168>>2]=0;c[d+4>>2]=-8388609;c[d+8>>2]=-8388609;c[d+12>>2]=-8388609;g[d+16>>2]=0.0;c[d+20>>2]=2139095039;c[d+24>>2]=2139095039;c[d+28>>2]=2139095039;g[d+32>>2]=0.0;c[d>>2]=8104;c[e>>2]=d;$c(d,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;return}function ih(b,d){b=b|0;d=d|0;var e=0.0,f=0.0;if(a[b+1309>>0]|0){e=(+g[b+1256>>2]-+g[b+1316>>2])*+g[b+1340>>2];g[b+792>>2]=e*(+g[d>>2]*+g[b+1364>>2]/+(c[d+48>>2]|0));e=+F(+e);g[b+808>>2]=e/+g[d>>2];}if(a[b+1310>>0]|0){e=(+g[b+1260>>2]-+g[b+1320>>2])*+g[b+1344>>2];g[b+796>>2]=e*(+g[d>>2]*+g[b+1368>>2]/+(c[d+48>>2]|0));e=+F(+e);g[b+812>>2]=e/+g[d>>2];}if(a[b+1311>>0]|0){e=(+g[b+1264>>2]-+g[b+1324>>2])*+g[b+1348>>2];g[b+800>>2]=e*(+g[d>>2]*+g[b+1372>>2]/+(c[d+48>>2]|0));e=+F(+e);g[b+816>>2]=e/+g[d>>2];}if(a[b+1312>>0]|0){f=-((+g[b+1192>>2]-+g[b+1328>>2])*+g[b+1352>>2]);e=+g[d>>2];g[b+876>>2]=e*+g[b+1376>>2]/+(c[d+48>>2]|0)*f;g[b+880>>2]=+F(+f)/e;}if(a[b+1313>>0]|0){e=-((+g[b+1196>>2]-+g[b+1332>>2])*+g[b+1356>>2]);f=+g[d>>2];g[b+940>>2]=f*+g[b+1380>>2]/+(c[d+48>>2]|0)*e;g[b+944>>2]=+F(+e)/f;}if(!(a[b+1314>>0]|0)){Pf(b,d);return}e=-((+g[b+1200>>2]-+g[b+1336>>2])*+g[b+1360>>2]);f=+g[d>>2];g[b+1004>>2]=f*+g[b+1384>>2]/+(c[d+48>>2]|0)*e;g[b+1008>>2]=+F(+e)/f;Pf(b,d);return}function jh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0;e=l;l=l+160|0;c[e+136>>2]=0;c[e+136+4>>2]=0;c[e+136+8>>2]=0;c[e+136+12>>2]=0;c[e+136+16>>2]=0;c[e+32>>2]=7132;f=e+32+4|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;c[e+32+44>>2]=0;c[e+32+44+4>>2]=0;c[e+32+44+8>>2]=0;c[e+32+44+12>>2]=0;c[e+32+60>>2]=1065353216;c[e+32+64>>2]=0;c[e+32+68>>2]=c[e+136+4>>2];c[e+32+68+4>>2]=c[e+136+4+4>>2];c[e+32+68+8>>2]=c[e+136+4+8>>2];c[e+32+68+12>>2]=c[e+136+4+12>>2];g[e+32+84>>2]=-999999984306749440.0;j=+g[d>>2];i=+g[d+4>>2];h=+g[d+8>>2];g[e+32+88>>2]=j+i*0.0+h*0.0;g[e+32+92>>2]=j*0.0+i+h*0.0;g[e+32+96>>2]=j*0.0+i*0.0+h;g[e+32+100>>2]=0.0;c[e+16>>2]=1566444395;c[e+16+4>>2]=1566444395;c[e+16+8>>2]=1566444395;g[e+16+12>>2]=0.0;d=c[(c[b>>2]|0)+64>>2]|0;g[e>>2]=-999999984306749440.0;g[e+4>>2]=-999999984306749440.0;g[e+8>>2]=-999999984306749440.0;g[e+12>>2]=0.0;Zb[d&127](b,e+32|0,e,e+16|0);c[a>>2]=c[f>>2];c[a+4>>2]=c[f+4>>2];c[a+8>>2]=c[f+8>>2];c[a+12>>2]=c[f+12>>2];l=e;return}function kh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;q=l;l=l+16|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];if(e*e+f*f+h*h<9.999999747378752e-05){p=1.0;o=0.0;n=0.0;}else{n=1.0/+G(+(e*e+f*f+h*h));p=e*n;o=f*n;n=h*n;}d=c[b+52>>2]|0;m=+g[b+28+(((d+2|0)%3|0)<<2)>>2];c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+(d<<2)>>2]=c[b+28+(d<<2)>>2];j=p*m;k=o*m;m=n*m;e=j+ +g[q>>2];f=k+ +g[q+4>>2];i=m+ +g[q+8>>2];h=+Db[c[(c[b>>2]|0)+48>>2]&15](b);e=e-p*h;f=f-o*h;h=i-n*h;i=n*h+(p*e+o*f);if(i>-999999984306749440.0){g[a>>2]=e;g[a+4>>2]=f;g[a+8>>2]=h;g[a+12>>2]=0.0;}else i=-999999984306749440.0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;d=c[b+52>>2]|0;g[q+(d<<2)>>2]=-+g[b+28+(d<<2)>>2];e=j+ +g[q>>2];f=k+ +g[q+4>>2];m=m+ +g[q+8>>2];h=+Db[c[(c[b>>2]|0)+48>>2]&15](b);e=e-p*h;f=f-o*h;h=m-n*h;if(!(n*h+(p*e+o*f)>i)){l=q;return}g[a>>2]=e;g[a+4>>2]=f;g[a+8>>2]=h;g[a+12>>2]=0.0;l=q;return}function lh(a,b,d,e,f,h,i,j,k,m){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=+h;i=+i;j=+j;k=+k;m=+m;var n=0;n=l;l=l+128|0;c[n+80>>2]=c[a+4>>2];c[n+80+4>>2]=c[a+20>>2];c[n+80+8>>2]=c[a+36>>2];g[n+80+12>>2]=0.0;c[n+80+16>>2]=c[a+8>>2];c[n+80+20>>2]=c[a+24>>2];c[n+80+24>>2]=c[a+40>>2];g[n+80+28>>2]=0.0;c[n+80+32>>2]=c[a+12>>2];c[n+80+36>>2]=c[a+28>>2];c[n+80+40>>2]=c[a+44>>2];g[n+80+44>>2]=0.0;c[n+32>>2]=c[b+4>>2];c[n+32+4>>2]=c[b+20>>2];c[n+32+8>>2]=c[b+36>>2];g[n+32+12>>2]=0.0;c[n+32+16>>2]=c[b+8>>2];c[n+32+20>>2]=c[b+24>>2];c[n+32+24>>2]=c[b+40>>2];g[n+32+28>>2]=0.0;c[n+32+32>>2]=c[b+12>>2];c[n+32+36>>2]=c[b+28>>2];c[n+32+40>>2]=c[b+44>>2];g[n+32+44>>2]=0.0;h=h-+g[a+56>>2];i=i-+g[a+60>>2];g[n+16>>2]=f-+g[a+52>>2];g[n+16+4>>2]=h;g[n+16+8>>2]=i;g[n+16+12>>2]=0.0;i=k-+g[b+56>>2];m=m-+g[b+60>>2];g[n>>2]=j-+g[b+52>>2];g[n+4>>2]=i;g[n+8>>2]=m;g[n+12>>2]=0.0;yg(d,n+80|0,n+32|0,n+16|0,n,e,a+396|0,+g[a+344>>2],b+396|0,+g[b+344>>2]);l=n;return}function mh(b,d){b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0.0,k=0,l=0.0,m=0.0;if(a[b+48>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}c[d>>2]=4;c[d+4>>2]=2;Uc(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g[b+1088>>2]=0.0;a[b+297>>0]=0;e=+g[b+192>>2];h=+g[b+196>>2];do if(!(e<=h))k=0;else{m=+g[b+892>>2];l=+g[b+908>>2];i=+g[b+924>>2];i=+Ij(+O(+(+g[b+832>>2]*m+ +g[b+848>>2]*l+ +g[b+864>>2]*i),+(+g[b+828>>2]*m+ +g[b+844>>2]*l+ +g[b+860>>2]*i)),e,h);g[b+1084>>2]=i;if(!(i<e))if(i>h)e=h;else{k=0;break}g[b+1088>>2]=i-e;a[b+297>>0]=1;k=1;}while(0);a[b+296>>0]=0;f=c[b+1032>>2]|0;c[b+1080>>2]=f;e=+g[b+184>>2];h=+g[b+188>>2];i=(c[j>>2]=f,+g[j>>2]);do if(!(e<=h))f=10;else{if(!(i>h)){if(!(i<e)){f=10;break}}else e=h;g[b+1032>>2]=i-e;a[b+296>>0]=1;f=12;}while(0);if((f|0)==10?(g[b+1032>>2]=0.0,a[b+1096>>0]|0):0)f=12;if((f|0)==12){c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1;}if(k<<24>>24==0?(a[b+1112>>0]|0)==0:0)return;c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1;return}function nh(a,b,d,e,f){a=a|0;b=+b;d=+d;e=+e;f=f|0;var h=0,i=0,j=0,k=0,m=0.0,n=0.0;j=l;l=l+48|0;m=1.0/+G(+(b*b+d*d+e*e));g[f>>2]=m*b;g[f+4>>2]=m*d;g[f+8>>2]=m*e;g[f+12>>2]=0.0;h=c[a+120>>2]|0;k=c[a+124>>2]|0;i=(c[a>>2]|0)+(k>>1)|0;if(k&1)h=c[(c[i>>2]|0)+h>>2]|0;Vb[h&127](j,i,f);b=-+g[f>>2];d=-+g[f+4>>2];e=-+g[f+8>>2];h=c[a+120>>2]|0;k=c[a+124>>2]|0;i=(c[a+4>>2]|0)+(k>>1)|0;if(k&1)h=c[(c[i>>2]|0)+h>>2]|0;m=+g[a+24>>2]*b+ +g[a+28>>2]*d+ +g[a+32>>2]*e;n=+g[a+40>>2]*b+ +g[a+44>>2]*d+ +g[a+48>>2]*e;g[j+16>>2]=+g[a+8>>2]*b+ +g[a+12>>2]*d+ +g[a+16>>2]*e;g[j+16+4>>2]=m;g[j+16+8>>2]=n;g[j+16+12>>2]=0.0;Vb[h&127](j+32|0,i,j+16|0);n=+g[j+32>>2];b=+g[j+32+4>>2];d=+g[j+32+8>>2];e=+g[j+4>>2]-(n*+g[a+72>>2]+b*+g[a+76>>2]+d*+g[a+80>>2]+ +g[a+108>>2]);m=+g[j+8>>2]-(n*+g[a+88>>2]+b*+g[a+92>>2]+d*+g[a+96>>2]+ +g[a+112>>2]);g[f+16>>2]=+g[j>>2]-(n*+g[a+56>>2]+b*+g[a+60>>2]+d*+g[a+64>>2]+ +g[a+104>>2]);g[f+20>>2]=e;g[f+24>>2]=m;g[f+28>>2]=0.0;l=j;return}function oh(a,b,c,d,e,f,h,i,j,k,l,m,n,o){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=+j;k=+k;l=+l;m=+m;n=+n;o=+o;var p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;q=(j-f)*(n-h)-(k-h)*(m-f);r=(k-h)*(l-e)-(i-e)*(n-h);s=(i-e)*(m-f)-(j-f)*(l-e);if(+F(+(s*d+(q*b+r*c)))<1.1920928955078125e-07){s=-1.0;return +s}t=+g[a>>2];v=+g[a+4>>2];u=+g[a+8>>2];p=-(q*t+r*v+s*u-(s*h+(q*e+r*f)))/(s*d+(q*b+r*c));if(((p>1.1920928955078125e-06&p<o?s*((j-(v+p*c))*(e-(t+p*b))-(f-(v+p*c))*(i-(t+p*b)))+(q*((f-(v+p*c))*(k-(u+p*d))-(h-(u+p*d))*(j-(v+p*c)))+r*((h-(u+p*d))*(i-(t+p*b))-(k-(u+p*d))*(e-(t+p*b))))>-1.1920928955078125e-06:0)?s*((m-(v+p*c))*(i-(t+p*b))-(j-(v+p*c))*(l-(t+p*b)))+(q*((j-(v+p*c))*(n-(u+p*d))-(k-(u+p*d))*(m-(v+p*c)))+r*((k-(u+p*d))*(l-(t+p*b))-(n-(u+p*d))*(i-(t+p*b))))>-1.1920928955078125e-06:0)?s*((f-(v+p*c))*(l-(t+p*b))-(m-(v+p*c))*(e-(t+p*b)))+(q*((m-(v+p*c))*(h-(u+p*d))-(n-(u+p*d))*(f-(v+p*c)))+r*((n-(u+p*d))*(e-(t+p*b))-(h-(u+p*d))*(l-(t+p*b))))>-1.1920928955078125e-06:0){v=p;return +v}v=-1.0;return +v}function ph(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(a[b+165>>0]|0){if((c[b+92>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6436]=(c[6436]|0)+1,e=ic((d<<4|3)+16|0)|0,(e|0)!=0):0){c[(e+4+15&-16)+-4>>2]=e;g=e+4+15&-16;}else g=0;f=c[b+88>>2]|0;if((f|0)>0){e=0;do{i=g+(e<<4)|0;h=(c[b+96>>2]|0)+(e<<4)|0;c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];c[i+8>>2]=c[h+8>>2];c[i+12>>2]=c[h+12>>2];e=e+1|0;}while((e|0)!=(f|0))}e=c[b+96>>2]|0;if(e|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=g;c[b+92>>2]=d;return}if((c[b+112>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6436]=(c[6436]|0)+1,f=ic((d<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16;}else h=0;f=c[b+108>>2]|0;g=c[b+116>>2]|0;if((f|0)<=0)if(!g)e=b+120|0;else i=21;else{e=0;do{c[h+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0));i=21;}if((i|0)==21){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[b+116>>2]=0;e=b+120|0;}a[e>>0]=1;c[b+116>>2]=h;c[b+112>>2]=d;return}function qh(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;if(!(c[i+44>>2]|0))return;b=c[i+20>>2]|0;if(!(c[i+64>>2]&256)){if((b|0)<=0)return;e=0;do{d=c[a+28>>2]|0;if((d|0)>0){b=0;do{j=c[(c[a+116>>2]|0)+(b<<2)>>2]|0;h=c[a+36>>2]|0;g=c[a+16>>2]|0;ng(g+((c[h+(j*152|0)+144>>2]|0)*244|0)|0,g+((c[h+(j*152|0)+148>>2]|0)*244|0)|0,h+(j*152|0)|0);b=b+1|0;}while((b|0)!=(d|0));b=c[i+20>>2]|0;}e=e+1|0;}while((e|0)<(b|0));return}else{if((b|0)<=0)return;e=0;do{d=c[a+28>>2]|0;if((d|0)>0){b=0;do{j=c[(c[a+116>>2]|0)+(b<<2)>>2]|0;h=c[a+36>>2]|0;g=c[a+16>>2]|0;ng(g+((c[h+(j*152|0)+144>>2]|0)*244|0)|0,g+((c[h+(j*152|0)+148>>2]|0)*244|0)|0,h+(j*152|0)|0);b=b+1|0;}while((b|0)!=(d|0));b=c[i+20>>2]|0;}e=e+1|0;}while((e|0)<(b|0));return}}function rh(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(!(a[d+164>>0]|0)){if((c[d+152>>2]|0)>=(e|0))return;if((e|0)!=0?(c[6436]=(c[6436]|0)+1,g=ic((e<<1)+19|0)|0,(g|0)!=0):0){c[(g+4+15&-16)+-4>>2]=g;i=g+4+15&-16;}else i=0;g=c[d+148>>2]|0;h=c[d+156>>2]|0;if((g|0)<=0)if(!h)f=d+160|0;else j=22;else{f=0;do{b[i+(f<<1)>>1]=b[h+(f<<1)>>1]|0;f=f+1|0;}while((f|0)!=(g|0));j=22;}if((j|0)==22){if(a[d+160>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[d+156>>2]=0;f=d+160|0;}a[f>>0]=1;c[d+156>>2]=i;c[d+152>>2]=e;return}else{if((c[d+132>>2]|0)>=(e|0))return;if((e|0)!=0?(c[6436]=(c[6436]|0)+1,f=ic((e<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;i=f+4+15&-16;}else i=0;g=c[d+128>>2]|0;h=c[d+136>>2]|0;if((g|0)<=0)if(!h)f=d+140|0;else j=10;else{f=0;do{c[i+(f<<2)>>2]=c[h+(f<<2)>>2];f=f+1|0;}while((f|0)!=(g|0));j=10;}if((j|0)==10){if(a[d+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[d+136>>2]=0;f=d+140|0;}a[f>>0]=1;c[d+136>>2]=i;c[d+132>>2]=e;return}}function sh(a,b,d){a=a|0;b=b|0;d=d|0;Uh(a,b,d)|0;c[b+52>>2]=c[a+300>>2];c[b+56>>2]=c[a+304>>2];c[b+60>>2]=c[a+308>>2];c[b+64>>2]=c[a+312>>2];c[b+68>>2]=c[a+316>>2];c[b+72>>2]=c[a+320>>2];c[b+76>>2]=c[a+324>>2];c[b+80>>2]=c[a+328>>2];c[b+84>>2]=c[a+332>>2];c[b+88>>2]=c[a+336>>2];c[b+92>>2]=c[a+340>>2];c[b+96>>2]=c[a+344>>2];c[b+100>>2]=c[a+348>>2];c[b+104>>2]=c[a+352>>2];c[b+108>>2]=c[a+356>>2];c[b+112>>2]=c[a+360>>2];c[b+116>>2]=c[a+364>>2];c[b+120>>2]=c[a+368>>2];c[b+124>>2]=c[a+372>>2];c[b+128>>2]=c[a+376>>2];c[b+132>>2]=c[a+380>>2];c[b+136>>2]=c[a+384>>2];c[b+140>>2]=c[a+388>>2];c[b+144>>2]=c[a+392>>2];c[b+148>>2]=c[a+396>>2];c[b+152>>2]=c[a+400>>2];c[b+156>>2]=c[a+404>>2];c[b+160>>2]=c[a+408>>2];c[b+164>>2]=c[a+412>>2];c[b+168>>2]=c[a+416>>2];c[b+172>>2]=c[a+420>>2];c[b+176>>2]=c[a+424>>2];c[b+180>>2]=c[a+444>>2];c[b+184>>2]=c[a+448>>2];c[b+188>>2]=c[a+452>>2];c[b+192>>2]=c[a+428>>2];c[b+196>>2]=c[a+432>>2];c[b+200>>2]=c[a+436>>2];c[b+204>>2]=c[a+440>>2];return 12819}function th(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0.0,h=0.0,i=0.0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;j=l;l=l+32|0;n=+g[a+56>>2];r=+g[a+72>>2]-n;m=+g[a+60>>2];p=+g[a+76>>2]-m;k=+g[a+64>>2];s=+g[a+80>>2]-k;o=+g[a+88>>2]-n;q=+g[a+92>>2]-m;h=+g[a+96>>2]-k;i=1.0/+G(+((r*q-p*o)*(r*q-p*o)+((p*h-s*q)*(p*h-s*q)+(s*o-r*h)*(s*o-r*h))));f=i*(p*h-s*q);h=i*(s*o-r*h);i=(r*q-p*o)*i;k=i*+g[b+8>>2]+(+g[b>>2]*f+ +g[b+4>>2]*h)-(f*n+h*m+i*k);if(!(k>=-d)|!(k<=d)){b=0;l=j;return b|0}e=0;while(1){Zb[c[(c[a>>2]|0)+104>>2]&127](a,e,j+16|0,j);n=+g[j+16>>2];s=+g[j>>2]-n;p=+g[j+16+4>>2];o=+g[j+4>>2]-p;m=+g[j+16+8>>2];r=+g[j+8>>2]-m;q=1.0/+G(+((h*s-f*o)*(h*s-f*o)+((i*o-h*r)*(i*o-h*r)+(f*r-i*s)*(f*r-i*s))));e=e+1|0;if((h*s-f*o)*q*+g[b+8>>2]+(+g[b>>2]*q*(i*o-h*r)+ +g[b+4>>2]*q*(f*r-i*s))-(m*(h*s-f*o)*q+(n*q*(i*o-h*r)+p*q*(f*r-i*s)))<-d){e=0;a=5;break}if((e|0)>=3){e=1;a=5;break}}if((a|0)==5){l=j;return e|0}return 0}function uh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0;c[6436]=(c[6436]|0)+1;h=ic(55)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}c[j>>2]=d;c[j+4>>2]=e;c[j+8>>2]=f;c[j+12>>2]=-1;c[j+16>>2]=-1;c[j+20>>2]=-1;c[j+28>>2]=-1;g[j+32>>2]=0.0;f=j;d=c[b+4>>2]|0;c[j+24>>2]=d;if((d|0)!=(c[b+8>>2]|0)){i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}i=d|0?d<<1:1;if((d|0)>=(i|0)){i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}if(!i)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((i<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}d=c[b+4>>2]|0;}if((d|0)>0){e=0;do{c[h+(e<<2)>>2]=c[(c[b+12>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(d|0))}e=c[b+12>>2]|0;if(e){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+4>>2]|0;}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=h;c[b+8>>2]=i;i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}function vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;o=+Db[c[(c[a>>2]|0)+48>>2]&15](a);u=+g[a+72>>2];t=+g[a+56>>2];r=+g[a+76>>2];q=+g[a+60>>2];n=+g[a+80>>2];m=+g[a+64>>2];E=+g[b>>2];y=+F(+E);D=+g[b+4>>2];x=+F(+D);k=+g[b+8>>2];l=+F(+k);C=+g[b+16>>2];w=+F(+C);B=+g[b+20>>2];v=+F(+B);i=+g[b+24>>2];j=+F(+i);A=+g[b+32>>2];s=+F(+A);z=+g[b+36>>2];p=+F(+z);f=+g[b+40>>2];h=+F(+f);k=(u+t)*.5*E+(r+q)*.5*D+(n+m)*.5*k+ +g[b+48>>2];i=(u+t)*.5*C+(r+q)*.5*B+(n+m)*.5*i+ +g[b+52>>2];f=(u+t)*.5*A+(r+q)*.5*z+(n+m)*.5*f+ +g[b+56>>2];l=(o+(u-t)*.5)*y+(o+(r-q)*.5)*x+(o+(n-m)*.5)*l;j=(o+(u-t)*.5)*w+(o+(r-q)*.5)*v+(o+(n-m)*.5)*j;h=(o+(u-t)*.5)*s+(o+(r-q)*.5)*p+(o+(n-m)*.5)*h;g[d>>2]=k-l;g[d+4>>2]=i-j;g[d+8>>2]=f-h;g[d+12>>2]=0.0;g[e>>2]=l+k;g[e+4>>2]=j+i;g[e+8>>2]=h+f;g[e+12>>2]=0.0;return}function wh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0;f=l;l=l+16|0;y=c[a+52>>2]|0;z=c[a+28+(((y+2|0)%3|0)<<2)>>2]|0;c[f>>2]=z;c[f+4>>2]=z;c[f+8>>2]=z;g[f+12>>2]=0.0;g[f+(y<<2)>>2]=(c[j>>2]=z,+g[j>>2])+ +g[a+28+(y<<2)>>2];k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);o=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=k+ +g[f>>2];g[f>>2]=k;h=h+ +g[f+4>>2];g[f+4>>2]=h;o=o+ +g[f+8>>2];v=+F(+(+g[b>>2]));u=+F(+(+g[b+4>>2]));w=+F(+(+g[b+8>>2]));r=+F(+(+g[b+16>>2]));q=+F(+(+g[b+20>>2]));s=+F(+(+g[b+24>>2]));m=+F(+(+g[b+32>>2]));i=+F(+(+g[b+36>>2]));n=+F(+(+g[b+40>>2]));x=+g[b+48>>2];t=+g[b+52>>2];p=+g[b+56>>2];g[d>>2]=x-(o*w+(v*k+u*h));g[d+4>>2]=t-(o*s+(r*k+q*h));g[d+8>>2]=p-(o*n+(m*k+i*h));g[d+12>>2]=0.0;g[e>>2]=x+(o*w+(v*k+u*h));g[e+4>>2]=t+(o*s+(r*k+q*h));g[e+8>>2]=p+(o*n+(m*k+i*h));g[e+12>>2]=0.0;l=f;return}function xh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;if(a[d+32>>0]&1){f=c[b+4>>2]|0;if(f|0)Wk(f,d,e);f=c[b>>2]|0;if(f|0){n=+g[d>>2];l=+g[f+128>>2];m=+g[d+4>>2];k=+g[d+8>>2];h=+g[e+4>>2];p=+g[e+8>>2];o=+g[e>>2];j=+g[f+180>>2]*(k*h-m*p)+ +g[f+184>>2]*(n*p-k*o)+(m*o-n*h)*+g[f+188>>2];i=(k*h-m*p)*+g[f+196>>2]+(n*p-k*o)*+g[f+200>>2]+(m*o-n*h)*+g[f+204>>2];h=(k*h-m*p)*+g[f+212>>2]+(n*p-k*o)*+g[f+216>>2]+(m*o-n*h)*+g[f+220>>2];g[f+244>>2]=n*l+ +g[f+244>>2];g[f+248>>2]=l*m+ +g[f+248>>2];g[f+252>>2]=l*k+ +g[f+252>>2];g[f+316>>2]=n*l+ +g[f+316>>2];g[f+320>>2]=l*m+ +g[f+320>>2];g[f+324>>2]=l*k+ +g[f+324>>2];g[f+260>>2]=j+ +g[f+260>>2];g[f+264>>2]=i+ +g[f+264>>2];g[f+268>>2]=h+ +g[f+268>>2];g[f+332>>2]=j+ +g[f+332>>2];g[f+336>>2]=i+ +g[f+336>>2];g[f+340>>2]=h+ +g[f+340>>2];c[f+308>>2]=(c[f+308>>2]|0)+1;}}if(!(a[d+32>>0]&2))return;Ni(b,d+16|0,e);return}function yh(a){a=a|0;var b=0,d=0,e=0,f=0;d=l;l=l+16|0;aj(14392);lb[c[(c[a>>2]|0)+8>>2]&511](a);lb[c[(c[a>>2]|0)+12>>2]&511](a);b=c[a+24>>2]|0;aj(14426);if(b|0){f=c[(c[b>>2]|0)+32>>2]|0;e=c[a+68>>2]|0;e=pb[c[(c[e>>2]|0)+36>>2]&127](e)|0;Zb[f&127](b,e,a+28|0,c[a+24>>2]|0);}b=c[2388]|0;f=(c[b+16>>2]|0)+-1|0;c[b+16>>2]=f;do if(!f){if(c[b+4>>2]|0){Za(d|0,0)|0;a=c[6435]|0;g[b+8>>2]=+g[b+8>>2]+ +(((c[d+4>>2]|0)-(c[a+4>>2]|0)+(((c[d>>2]|0)-(c[a>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3;a=c[2388]|0;if(c[b+16>>2]|0)break}else a=b;a=c[a+20>>2]|0;c[2388]=a;}else a=b;while(0);b=a+16|0;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;if(f|0){l=d;return}do if(c[a+4>>2]|0){Za(d|0,0)|0;e=c[6435]|0;f=a+8|0;g[f>>2]=+g[f>>2]+ +(((c[d+4>>2]|0)-(c[e+4>>2]|0)+(((c[d>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[b>>2]|0)){a=c[2388]|0;break}else{l=d;return}}while(0);c[2388]=c[a+20>>2];l=d;return}function zh(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=8964;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=-1;c[b+16>>2]=0;c[b+20>>2]=0;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;c[b+72>>2]=-1;c[b+76>>2]=0;c[b+80>>2]=0;a[b+193>>0]=0;a[b+194>>0]=1;a[b+192>>0]=((d|0)!=0^1)&1;g[b+140>>2]=0.0;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+168>>2]=0;c[b+172>>2]=0;g[b+176>>2]=0.0;if(d|0){e=d;d=b+136|0;c[d>>2]=e;d=b+188|0;c[d>>2]=0;d=b+180|0;c[d>>2]=0;d=b+184|0;c[d>>2]=0;b=b+124|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}c[6436]=(c[6436]|0)+1;d=ic(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}mi(d);e=b+136|0;c[e>>2]=d;e=b+188|0;c[e>>2]=0;e=b+180|0;c[e>>2]=0;e=b+184|0;c[e>>2]=0;e=b+124|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;return}function Ah(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0;k=c[b>>2]|0;if((k|0)==(c[a+80>>2]|0)){j=1.0;return +j}if(c[k+204>>2]&4|0){j=1.0;return +j}f=+g[b+8>>2];h=+g[b+12>>2];e=+g[b+16>>2];if(d){i=f;j=h;}else{i=+g[k+4>>2]*f+ +g[k+8>>2]*h+ +g[k+12>>2]*e;j=f*+g[k+20>>2]+h*+g[k+24>>2]+e*+g[k+28>>2];e=f*+g[k+36>>2]+h*+g[k+40>>2]+e*+g[k+44>>2];}if(i*+g[a+84>>2]+j*+g[a+88>>2]+e*+g[a+92>>2]<+g[a+100>>2]){j=1.0;return +j}c[a+4>>2]=c[b+40>>2];c[a+76>>2]=k;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2];}else{e=+g[b+8>>2];f=+g[b+12>>2];h=+g[b+16>>2];i=e*+g[k+20>>2]+f*+g[k+24>>2]+h*+g[k+28>>2];j=e*+g[k+36>>2]+f*+g[k+40>>2]+h*+g[k+44>>2];g[a+44>>2]=+g[k+4>>2]*e+ +g[k+8>>2]*f+ +g[k+12>>2]*h;g[a+48>>2]=i;g[a+52>>2]=j;g[a+56>>2]=0.0;}c[a+60>>2]=c[b+24>>2];c[a+60+4>>2]=c[b+24+4>>2];c[a+60+8>>2]=c[b+24+8>>2];c[a+60+12>>2]=c[b+24+12>>2];j=+g[b+40>>2];return +j}function Bh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;d=c[b+40>>2]|0;if(d|0){if(a[b+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+40>>2]=0;}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+60>>2]=0;}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;if((c[b+12>>2]|0)>=2){yf(b);return}c[6436]=(c[6436]|0)+1;d=ic(43)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16;}e=c[b+8>>2]|0;if((e|0)>0){d=0;do{g=f+(d*12|0)|0;h=(c[b+16>>2]|0)+(d*12|0)|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];d=d+1|0;}while((d|0)!=(e|0))}d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;yf(b);return}function Ch(a,b,e){a=a|0;b=b|0;e=e|0;Uh(a,b,e)|0;c[b+52>>2]=c[a+52>>2];c[b+56>>2]=c[a+56>>2];c[b+60>>2]=c[a+60>>2];c[b+64>>2]=c[a+64>>2];c[b+68>>2]=c[a+68>>2];c[b+72>>2]=c[a+72>>2];c[b+76>>2]=c[a+76>>2];c[b+80>>2]=c[a+80>>2];c[b+84>>2]=c[a+84>>2];c[b+88>>2]=c[a+88>>2];c[b+92>>2]=c[a+92>>2];c[b+96>>2]=c[a+96>>2];c[b+100>>2]=c[a+100>>2];c[b+104>>2]=c[a+104>>2];c[b+108>>2]=c[a+108>>2];c[b+112>>2]=c[a+112>>2];c[b+116>>2]=c[a+116>>2];c[b+120>>2]=c[a+120>>2];c[b+124>>2]=c[a+124>>2];c[b+128>>2]=c[a+128>>2];c[b+132>>2]=c[a+132>>2];c[b+136>>2]=c[a+136>>2];c[b+140>>2]=c[a+140>>2];c[b+144>>2]=c[a+144>>2];c[b+148>>2]=c[a+148>>2];c[b+152>>2]=c[a+152>>2];c[b+156>>2]=c[a+156>>2];c[b+160>>2]=c[a+160>>2];c[b+164>>2]=c[a+164>>2];c[b+168>>2]=c[a+168>>2];c[b+172>>2]=c[a+172>>2];c[b+176>>2]=c[a+176>>2];c[b+180>>2]=c[a+188>>2];c[b+184>>2]=c[a+184>>2];c[b+188>>2]=c[a+196>>2];c[b+192>>2]=c[a+192>>2];c[b+196>>2]=d[a+180>>0];c[b+200>>2]=d[a+49>>0];return 12775}function Dh(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0;c[6436]=(c[6436]|0)+1;b=ic((h+2|0)>>>0>268435455?18:(h+2<<4|3)+16|0)|0;if(!b)j=0;else{c[(b+4+15&-16)+-4>>2]=b;j=b+4+15&-16;}k=YG((h+2|0)>>>0>1073741823?-1:h+2<<2)|0;if((h|0)>-2){b=0;do{o=+(b|0)/+(h+1|0);n=+g[e>>2];m=+g[e+4>>2];m=m+o*(+g[f+4>>2]-m);l=+g[e+8>>2];l=l+o*(+g[f+8>>2]-l);g[j+(b<<4)>>2]=n+o*(+g[f>>2]-n);g[j+(b<<4)+4>>2]=m;g[j+(b<<4)+8>>2]=l;g[j+(b<<4)+12>>2]=0.0;g[k+(b<<2)>>2]=1.0;b=b+1|0;}while((b|0)<(h+2|0))}c[6436]=(c[6436]|0)+1;b=ic(1271)|0;if(!b)e=0;else{c[(b+4+15&-16)+-4>>2]=b;e=b+4+15&-16;}tc(e,d,h+2|0,j,k);if(i&1|0){g[(c[e+720>>2]|0)+88>>2]=0.0;a[e+924>>0]=1;}if(i&2|0){g[(c[e+720>>2]|0)+((h+1|0)*104|0)+88>>2]=0.0;a[e+924>>0]=1;}if(j|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}ZG(k);if((h+2|0)>1)b=1;else return e|0;do{Ef(e,b+-1|0,b,0,0);b=b+1|0;}while((b|0)!=(h+2|0));return e|0}function Eh(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=+d;e=+e;f=+f;var h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;p=+g[c>>2];o=+g[c+16>>2];n=+g[c+32>>2];m=+g[c+4>>2];l=+g[c+20>>2];k=+g[c+36>>2];j=+g[c+8>>2];i=+g[c+24>>2];h=+g[c+40>>2];g[a>>2]=b-((p*0.0+o*-f+n*e)*0.0+(m*0.0+l*-f+k*e)*f+(j*0.0+i*-f+h*e)*-e);g[a+4>>2]=0.0-((p*0.0+o*-f+n*e)*-f+(m*0.0+l*-f+k*e)*0.0+(j*0.0+i*-f+h*e)*d);g[a+8>>2]=0.0-((p*0.0+o*-f+n*e)*e+(m*0.0+l*-f+k*e)*-d+(j*0.0+i*-f+h*e)*0.0);g[a+12>>2]=0.0;g[a+16>>2]=0.0-((p*f+o*0.0+n*-d)*0.0+(m*f+l*0.0+k*-d)*f+(j*f+i*0.0+h*-d)*-e);g[a+20>>2]=b-((p*f+o*0.0+n*-d)*-f+(m*f+l*0.0+k*-d)*0.0+(j*f+i*0.0+h*-d)*d);g[a+24>>2]=0.0-((p*f+o*0.0+n*-d)*e+(m*f+l*0.0+k*-d)*-d+(j*f+i*0.0+h*-d)*0.0);g[a+28>>2]=0.0;g[a+32>>2]=0.0-((p*-e+o*d+n*0.0)*0.0+(m*-e+l*d+k*0.0)*f+(j*-e+i*d+h*0.0)*-e);g[a+36>>2]=0.0-((p*-e+o*d+n*0.0)*-f+(m*-e+l*d+k*0.0)*0.0+(j*-e+i*d+h*0.0)*d);g[a+40>>2]=b-((p*-e+o*d+n*0.0)*e+(m*-e+l*d+k*0.0)*-d+(j*-e+i*d+h*0.0)*0.0);g[a+44>>2]=0.0;return}function Fh(){var b=0,d=0,e=0;b=Rr(288)|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b+236>>2]=4;c[b>>2]=5212;c[6436]=(c[6436]|0)+1;d=ic(95)|0;if(!d){e=0;mi(e);d=b+284|0;c[d>>2]=e;return b|0}c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;mi(d);e=b+284|0;c[e>>2]=d;return b|0}function Gh(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0.0,k=0.0,m=0.0;h=l;l=l+96|0;g[h+4>>2]=1.0;c[h+8>>2]=0;b[h+12>>1]=1;b[h+14>>1]=-1;c[h+16>>2]=0;c[h>>2]=2904;c[h+20>>2]=c[d>>2];c[h+20+4>>2]=c[d+4>>2];c[h+20+8>>2]=c[d+8>>2];c[h+20+12>>2]=c[d+12>>2];c[h+36>>2]=c[e>>2];c[h+36+4>>2]=c[e+4>>2];c[h+36+8>>2]=c[e+8>>2];c[h+36+12>>2]=c[e+12>>2];a=c[a+4>>2]|0;Zb[c[(c[a>>2]|0)+32>>2]&127](a,d,e,h);a=c[h+8>>2]|0;if(!a){f=0;l=h;return f|0}if(!(c[a+236>>2]&2)){f=0;l=h;return f|0}if(c[a+204>>2]&4|0){f=0;l=h;return f|0}c[f>>2]=c[h+68>>2];c[f+4>>2]=c[h+68+4>>2];c[f+8>>2]=c[h+68+8>>2];c[f+12>>2]=c[h+68+12>>2];c[f+16>>2]=c[h+52>>2];c[f+16+4>>2]=c[h+52+4>>2];c[f+16+8>>2]=c[h+52+8>>2];c[f+16+12>>2]=c[h+52+12>>2];m=+g[f+16>>2];k=+g[f+20>>2];j=+g[f+24>>2];i=1.0/+G(+(m*m+k*k+j*j));g[f+16>>2]=m*i;g[f+20>>2]=k*i;g[f+24>>2]=j*i;c[f+32>>2]=c[h+4>>2];f=a;l=h;return f|0}function Hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;lb[c[(c[b>>2]|0)+32>>2]&511](b);e=zb[c[(c[b>>2]|0)+16>>2]&63](b,104,1)|0;d=c[e+8>>2]|0;f=d;g=f+104|0;do{c[f>>2]=0;f=f+4|0;}while((f|0)<(g|0));c[d+88>>2]=c[a+248>>2];c[d+92>>2]=c[a+252>>2];c[d+96>>2]=c[a+256>>2];c[d+100>>2]=c[a+260>>2];c[d>>2]=c[a+92>>2];c[d+4>>2]=c[a+96>>2];c[d+8>>2]=c[a+100>>2];c[d+12>>2]=c[a+104>>2];c[d+16>>2]=c[a+108>>2];c[d+20>>2]=c[a+116>>2];c[d+24>>2]=c[a+120>>2];c[d+28>>2]=c[a+124>>2];c[d+32>>2]=c[a+128>>2];c[d+36>>2]=c[a+132>>2];c[d+40>>2]=c[a+140>>2];c[d+44>>2]=c[a+144>>2];c[d+48>>2]=c[a+148>>2];c[d+52>>2]=c[a+152>>2];c[d+56>>2]=c[a+168>>2];c[d+60>>2]=c[a+172>>2];c[d+64>>2]=c[a+112>>2];c[d+68>>2]=c[a+156>>2];c[d+72>>2]=c[a+160>>2];c[d+76>>2]=c[a+164>>2];c[d+80>>2]=c[a+136>>2];jb[c[(c[b>>2]|0)+20>>2]&31](b,e,12373,1145853764,d);Pi(a,b);dd(a,b);lb[c[(c[b>>2]|0)+36>>2]&511](b);return}function Ih(a){a=a|0;var b=0.0,d=0,e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=Gs()|0;c[e+8>>2]=0;c[e+12>>2]=1065353216;c[e+16>>2]=1065353216;c[e+20>>2]=1065353216;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e+52>>2]=0;c[e>>2]=7968;c[e+4>>2]=0;d=!(+g[a>>2]<+g[a+4>>2])&1;b=+g[a+((+g[a+(d<<2)>>2]<+g[a+8>>2]?d:2)<<2)>>2]*.10000000149011612;if(b<.03999999910593033){j=+IE(e);h=+Db[c[(c[e>>2]|0)+48>>2]&15](e);k=+Db[c[(c[e>>2]|0)+48>>2]&15](e);j=j+ +g[e+28>>2];h=h+ +g[e+32>>2];k=k+ +g[e+36>>2];g[e+44>>2]=b;i=+Db[c[(c[e>>2]|0)+48>>2]&15](e);f=+Db[c[(c[e>>2]|0)+48>>2]&15](e);b=k-+Db[c[(c[e>>2]|0)+48>>2]&15](e);g[e+28>>2]=j-i;g[e+32>>2]=h-f;g[e+36>>2]=b;g[e+40>>2]=0.0;d=c[e>>2]|0;}else d=7968;i=+Db[c[d+48>>2]&15](e);j=+Db[c[(c[e>>2]|0)+48>>2]&15](e);k=+Db[c[(c[e>>2]|0)+48>>2]&15](e);j=+g[a+4>>2]*+g[e+16>>2]-j;k=+g[a+8>>2]*+g[e+20>>2]-k;g[e+28>>2]=+g[a>>2]*+g[e+12>>2]-i;g[e+32>>2]=j;g[e+36>>2]=k;g[e+40>>2]=0.0;return e|0}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0;e=l;l=l+32|0;d=c[b+388>>2]|0;switch(c[a+388>>2]&48&d&63){case 32:{if((a|0)==(b|0)&(d&64|0)==0){l=e;return}g[e+4>>2]=1.0;c[e+8+4>>2]=0;c[e+8+4+4>>2]=0;c[e+8+4+8>>2]=0;c[e>>2]=3668;c[e+8>>2]=c[a+456>>2];d=c[a+192>>2]|0;f=+Db[c[(c[d>>2]|0)+48>>2]&15](d);d=c[b+192>>2]|0;g[e+12>>2]=f+ +Db[c[(c[d>>2]|0)+48>>2]&15](d);c[e+16>>2]=c[(+g[a+316>>2]<+g[b+316>>2]?a+316|0:b+316|0)>>2];c[e+24>>2]=a;c[e+28>>2]=b;te(c[a+1048>>2]|0,c[b+1048>>2]|0,e);l=e;return}case 16:{if((a|0)==(b|0)){l=e;return}c[e>>2]=3704;d=c[a+192>>2]|0;f=+Db[c[(c[d>>2]|0)+48>>2]&15](d);d=c[b+192>>2]|0;g[e+12>>2]=f+ +Db[c[(c[d>>2]|0)+48>>2]&15](d);c[e+4>>2]=a;c[e+8>>2]=b;te(c[a+928>>2]|0,c[b+988>>2]|0,e);c[e+4>>2]=b;c[e+8>>2]=a;te(c[b+928>>2]|0,c[a+988>>2]|0,e);l=e;return}default:{l=e;return}}}function Kh(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;c[a+4>>2]=35;c[a+8>>2]=0;c[a+12>>2]=1065353216;c[a+16>>2]=1065353216;c[a+20>>2]=1065353216;g[a+24>>2]=0.0;g[a+44>>2]=.03999999910593033;c[a>>2]=8264;c[a+52>>2]=1;e=!(+g[b>>2]<+g[b+4>>2])&1;d=+g[b+((+g[b+(e<<2)>>2]<+g[b+8>>2]?e:2)<<2)>>2]*.10000000149011612;if(d<.03999999910593033){j=+IE(a);h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);j=j+ +g[a+28>>2];h=h+ +g[a+32>>2];k=k+ +g[a+36>>2];g[a+44>>2]=d;i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);f=+Db[c[(c[a>>2]|0)+48>>2]&15](a);d=k-+Db[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=j-i;g[a+32>>2]=h-f;g[a+36>>2]=d;g[a+40>>2]=0.0;e=c[a>>2]|0;}else e=8264;i=+Db[c[e+48>>2]&15](a);j=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);j=+g[b+4>>2]*+g[a+16>>2]-j;k=+g[b+8>>2]*+g[a+20>>2]-k;g[a+28>>2]=+g[b>>2]*+g[a+12>>2]-i;g[a+32>>2]=j;g[a+36>>2]=k;g[a+40>>2]=0.0;c[a+4>>2]=13;return}function Lh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0;i=l;l=l+32|0;c[i+16>>2]=c[d>>2];c[i+16+4>>2]=c[d+4>>2];c[i+16+8>>2]=c[d+8>>2];c[i+16+12>>2]=c[d+12>>2];f=+g[i+16>>2];h=+g[i+16+4>>2];e=+g[i+16+8>>2];if(f*f+h*h+e*e<1.4210854715202004e-14){c[i+16>>2]=-1082130432;c[i+16+4>>2]=-1082130432;c[i+16+8>>2]=-1082130432;g[i+16+12>>2]=0.0;f=-1.0;h=-1.0;e=-1.0;}j=1.0/+G(+(f*f+h*h+e*e));g[i+16>>2]=f*j;g[i+16+4>>2]=h*j;g[i+16+8>>2]=e*j;rd(i,b,i+16|0);switch(c[b+4>>2]|0){case 8:{e=+g[b+28>>2]*+g[b+12>>2];break}case 0:{e=+g[b+44>>2];break}case 1:{e=+g[b+44>>2];break}case 13:{e=+g[b+44>>2];break}case 11:{e=+g[b+44>>2];break}case 10:{e=+g[b+44>>2];break}case 4:case 5:{e=+g[b+44>>2];break}default:e=+Db[c[(c[b>>2]|0)+48>>2]&15](b);}h=e*+g[i+16+4>>2]+ +g[i+4>>2];j=e*+g[i+16+8>>2]+ +g[i+8>>2];g[a>>2]=e*+g[i+16>>2]+ +g[i>>2];g[a+4>>2]=h;g[a+8>>2]=j;g[a+12>>2]=0.0;l=i;return}function Mh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,k=0,m=0,n=0,o=0.0;m=l;l=l+80|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];f=+g[d+4>>2];i=+g[d+8>>2];if(e*e+f*f+i*i<9.999999747378752e-05){k=1065353216;h=0;e=0.0;d=0;}else{o=1.0/+G(+(e*e+f*f+i*i));k=(g[j>>2]=e*o,c[j>>2]|0);n=(g[j>>2]=f*o,c[j>>2]|0);h=(g[j>>2]=i*o,c[j>>2]|0);e=+g[d+12>>2];d=n;}c[m+32>>2]=7948;n=m+32+4|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[m+32+20>>2]=-999999984306749440.0;c[m+32+24>>2]=k;c[m+32+28>>2]=d;c[m+32+32>>2]=h;g[m+32+36>>2]=e;c[m+16>>2]=1566444395;c[m+16+4>>2]=1566444395;c[m+16+8>>2]=1566444395;g[m+16+12>>2]=0.0;b=c[b+92>>2]|0;k=c[(c[b>>2]|0)+8>>2]|0;g[m>>2]=-999999984306749440.0;g[m+4>>2]=-999999984306749440.0;g[m+8>>2]=-999999984306749440.0;g[m+12>>2]=0.0;Zb[k&127](b,m+32|0,m,m+16|0);c[a>>2]=c[n>>2];c[a+4>>2]=c[n+4>>2];c[a+8>>2]=c[n+8>>2];c[a+12>>2]=c[n+12>>2];l=m;return}function Nh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];f=c[a+96>>2]|0;c[b+60>>2]=f;if(!f){c[b+52>>2]=0;c[b+56>>2]=0;return 17399}c[b+52>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+104>>2]|0)|0;c[b+56>>2]=0;g=zb[c[(c[d>>2]|0)+16>>2]&63](d,16,f)|0;if((f|0)>0){e=c[a+104>>2]|0;b=c[g+8>>2]|0;a=0;while(1){c[b>>2]=c[e+(a<<4)>>2];c[b+4>>2]=c[e+(a<<4)+4>>2];c[b+8>>2]=c[e+(a<<4)+8>>2];c[b+12>>2]=c[e+(a<<4)+12>>2];a=a+1|0;if((a|0)==(f|0))break;else b=b+16|0;}}else e=c[a+104>>2]|0;jb[c[(c[d>>2]|0)+20>>2]&31](d,g,19398,1497453121,e);return 17399}function Oh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0,i=0,j=0,k=0.0,l=0,m=0;m=c[a+4>>2]|0;a=c[a+64>>2]|0;do if(!m)if(!a){e=0;f=0.0;h=0;i=0;j=0;k=0.0;l=0;a=0;}else{e=c[a>>2]|0;f=+g[a+12>>2];h=c[a+16>>2]|0;i=c[a+20>>2]|0;j=c[a+24>>2]|0;k=+g[a+28>>2];l=c[a+4>>2]|0;a=c[a+8>>2]|0;}else if(!a){e=c[m>>2]|0;f=+g[m+12>>2];h=c[m+16>>2]|0;i=c[m+20>>2]|0;j=c[m+24>>2]|0;k=+g[m+28>>2];l=c[m+4>>2]|0;a=c[m+8>>2]|0;break}else{e=c[(+g[m>>2]<+g[a>>2]?m:a)>>2]|0;f=0.0;h=c[(+g[m+16>>2]>+g[a+16>>2]?m+16|0:a+16|0)>>2]|0;i=c[(+g[m+20>>2]>+g[a+20>>2]?m+16|0:a+16|0)+4>>2]|0;j=c[(+g[m+24>>2]>+g[a+24>>2]?m+16|0:a+16|0)+8>>2]|0;k=0.0;l=c[(+g[m+4>>2]<+g[a+4>>2]?m:a)+4>>2]|0;a=c[(+g[m+8>>2]<+g[a+8>>2]?m:a)+8>>2]|0;break}while(0);c[b>>2]=e;c[b+4>>2]=l;c[b+8>>2]=a;g[b+12>>2]=f;c[d>>2]=h;c[d+4>>2]=i;c[d+8>>2]=j;g[d+12>>2]=k;return}function Ph(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0.0;k=+g[b+60>>2]*.5;l=c[b+68>>2]|0;f=+g[d>>2];i=+g[d+4>>2];j=+g[d+8>>2];j=+G(+(f*f+i*i+j*j));h=c[b+64>>2]|0;do if(!(+g[d+(l<<2)>>2]>j*+g[b+52>>2])){f=+g[d+(h<<2)>>2];e=c[b+72>>2]|0;i=+g[d+(e<<2)>>2];j=+G(+(f*f+i*i));if(j>1.1920928955078125e-07){j=+g[b+56>>2]/j;g[a+(h<<2)>>2]=f*j;g[a+(l<<2)>>2]=-k;f=i*j;break}else{g[a+(h<<2)>>2]=0.0;g[a+(l<<2)>>2]=-k;f=0.0;break}}else{g[a+(h<<2)>>2]=0.0;g[a+(l<<2)>>2]=k;f=0.0;e=c[b+72>>2]|0;}while(0);g[a+(e<<2)>>2]=f;if(!(+Db[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0))return;i=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];m=i*i+j*j+k*k<1.4210854715202004e-14?-1.0:i;f=i*i+j*j+k*k<1.4210854715202004e-14?-1.0:j;k=i*i+j*j+k*k<1.4210854715202004e-14?-1.0:k;j=1.0/+G(+(k*k+(m*m+f*f)));i=+Db[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+i*j*m;g[a+4>>2]=i*j*f+ +g[a+4>>2];g[a+8>>2]=i*j*k+ +g[a+8>>2];return}function Qh(a,b,d){a=a|0;b=b|0;d=d|0;c[a+300>>2]=c[b>>2];c[a+300+4>>2]=c[b+4>>2];c[a+300+8>>2]=c[b+8>>2];c[a+300+12>>2]=c[b+12>>2];c[a+316>>2]=c[b+16>>2];c[a+316+4>>2]=c[b+16+4>>2];c[a+316+8>>2]=c[b+16+8>>2];c[a+316+12>>2]=c[b+16+12>>2];c[a+332>>2]=c[b+32>>2];c[a+332+4>>2]=c[b+32+4>>2];c[a+332+8>>2]=c[b+32+8>>2];c[a+332+12>>2]=c[b+32+12>>2];c[a+348>>2]=c[b+48>>2];c[a+348+4>>2]=c[b+48+4>>2];c[a+348+8>>2]=c[b+48+8>>2];c[a+348+12>>2]=c[b+48+12>>2];c[a+364>>2]=c[d>>2];c[a+364+4>>2]=c[d+4>>2];c[a+364+8>>2]=c[d+8>>2];c[a+364+12>>2]=c[d+12>>2];c[a+380>>2]=c[d+16>>2];c[a+380+4>>2]=c[d+16+4>>2];c[a+380+8>>2]=c[d+16+8>>2];c[a+380+12>>2]=c[d+16+12>>2];c[a+396>>2]=c[d+32>>2];c[a+396+4>>2]=c[d+32+4>>2];c[a+396+8>>2]=c[d+32+8>>2];c[a+396+12>>2]=c[d+32+12>>2];c[a+412>>2]=c[d+48>>2];c[a+412+4>>2]=c[d+48+4>>2];c[a+412+8>>2]=c[d+48+8>>2];c[a+412+12>>2]=c[d+48+12>>2];lb[c[(c[a>>2]|0)+8>>2]&511](a);return}function Rh(b){b=b|0;var d=0;d=c[b>>2]|0;if(d|0)Sm(b,d);d=c[b+4>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+4>>2]=0;c[b+8>>2]=-1;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+16>>2]=0;d=c[b+52>>2]|0;if(!d){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}if(!(a[b+56>>0]|0)){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);d=c[b+32>>2]|0;a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;if(!d){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}if(!((a[b+36>>0]|0)==0|(d|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function Sh(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;c=l;l=l+48|0;fh(a+364|0,c+16|0);h=-+g[c+16>>2];e=-+g[c+16+4>>2];m=-+g[c+16+8>>2];k=+g[c+16+12>>2];f=+g[b>>2];n=+g[b+12>>2];j=+g[b+8>>2];i=+g[b+4>>2];fh(a+300|0,c);p=+g[c>>2];q=+g[c+12>>2];d=+g[c+8>>2];o=+g[c+4>>2];g[c+32>>2]=(k*n-f*h-i*e-j*m)*p+(k*f+n*h+j*e-i*m)*q+(f*m+(n*e+k*i)-j*h)*d-(n*m+k*j+i*h-f*e)*o;g[c+32+4>>2]=p*(n*m+k*j+i*h-f*e)+(q*(f*m+(n*e+k*i)-j*h)+(k*n-f*h-i*e-j*m)*o)-(k*f+n*h+j*e-i*m)*d;g[c+32+8>>2]=(n*m+k*j+i*h-f*e)*q+(k*n-f*h-i*e-j*m)*d+(k*f+n*h+j*e-i*m)*o-p*(f*m+(n*e+k*i)-j*h);g[c+32+12>>2]=(k*n-f*h-i*e-j*m)*q-(k*f+n*h+j*e-i*m)*p-(f*m+(n*e+k*i)-j*h)*o-(n*m+k*j+i*h-f*e)*d;Le(a,c+32|0);l=c;return}function Th(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(!e)e=c[b+188>>2]|0;j=c[d>>2]|0;f=c[b+268>>2]|0;a:do if((f|0)>0){h=c[b+276>>2]|0;g=0;while(1){if((c[h+(g<<2)>>2]|0)==(j|0))break;g=g+1|0;if((g|0)>=(f|0))break a}if((g|0)!=(f|0))return}while(0);if((f|0)==(c[b+272>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6436]=(c[6436]|0)+1;f=ic((i<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=f;f=c[b+268>>2]|0;}if((f|0)>0){g=0;do{c[h+(g<<2)>>2]=c[(c[b+276>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0))}g=c[b+276>>2]|0;if(g){if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);f=c[b+268>>2]|0;}c[b+276>>2]=0;}a[b+280>>0]=1;c[b+276>>2]=h;c[b+272>>2]=i;}c[(c[b+276>>2]|0)+(f<<2)>>2]=j;c[b+268>>2]=f+1;b=c[b+284>>2]|0;zb[c[(c[b>>2]|0)+8>>2]&63](b,e,d)|0;return}function Uh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0;c[b>>2]=Kb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+28>>2]|0)|0;c[b+4>>2]=Kb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+32>>2]|0)|0;f=Kb[c[(c[e>>2]|0)+40>>2]&31](e,a)|0;g=Kb[c[(c[e>>2]|0)+28>>2]&31](e,f)|0;c[b+8>>2]=g;if(g|0)nb[c[(c[e>>2]|0)+48>>2]&127](e,f);c[b+12>>2]=c[a+4>>2];c[b+24>>2]=d[a+21>>0];c[b+40>>2]=c[a+24>>2];c[b+44>>2]=c[a+16>>2];c[b+48>>2]=d[a+20>>0];c[b+20>>2]=c[a+12>>2];c[b+16>>2]=c[a+8>>2];c[b+28>>2]=c[a+36>>2];c[b+32>>2]=c[a+40>>2];c[b+36>>2]=0;f=c[a+28>>2]|0;if((c[f+488>>2]|0)>0){e=0;do{if((c[(c[f+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;f=c[a+28>>2]|0;}e=e+1|0;}while((e|0)<(c[f+488>>2]|0))}f=c[a+32>>2]|0;if((c[f+488>>2]|0)>0)e=0;else return 12748;do{if((c[(c[f+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;f=c[a+32>>2]|0;}e=e+1|0;}while((e|0)<(c[f+488>>2]|0));return 12748}function Vh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192)return $a(b|0,d|0,e|0)|0;h=b|0;g=b+e|0;if((b&3)==(d&3)){while(b&3){if(!e)return h|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0;}e=g&-4|0;f=e-64|0;while((b|0)<=(f|0)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];c[b+32>>2]=c[d+32>>2];c[b+36>>2]=c[d+36>>2];c[b+40>>2]=c[d+40>>2];c[b+44>>2]=c[d+44>>2];c[b+48>>2]=c[d+48>>2];c[b+52>>2]=c[d+52>>2];c[b+56>>2]=c[d+56>>2];c[b+60>>2]=c[d+60>>2];b=b+64|0;d=d+64|0;}while((b|0)<(e|0)){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;}}else{e=g-4|0;while((b|0)<(e|0)){a[b>>0]=a[d>>0]|0;a[b+1>>0]=a[d+1>>0]|0;a[b+2>>0]=a[d+2>>0]|0;a[b+3>>0]=a[d+3>>0]|0;b=b+4|0;d=d+4|0;}}while((b|0)<(g|0)){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;}return h|0}function Wh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(pb[c[(c[d>>2]|0)+16>>2]&127](d)|0)return;i=c[b+712>>2]|0;h=pb[c[(c[d>>2]|0)+36>>2]&127](d)|0;if(pb[c[(c[d>>2]|0)+8>>2]&127](d)|0?(e=pb[c[(c[d>>2]|0)+20>>2]&127](d)|0,g=pb[c[(c[d>>2]|0)+24>>2]&127](d)|0,(i|0)>0):0){f=c[b+720>>2]|0;a=h+(e<<2)|0;e=0;while(1){k=c[f+(e*104|0)+12>>2]|0;j=c[f+(e*104|0)+16>>2]|0;c[a>>2]=c[f+(e*104|0)+8>>2];c[a+4>>2]=k;c[a+8>>2]=j;e=e+1|0;if((e|0)==(i|0))break;else a=a+(g<<2)|0;}}if(!(pb[c[(c[d>>2]|0)+12>>2]&127](d)|0))return;a=pb[c[(c[d>>2]|0)+28>>2]&127](d)|0;g=pb[c[(c[d>>2]|0)+32>>2]&127](d)|0;if((i|0)<=0)return;f=c[b+720>>2]|0;a=h+(a<<2)|0;e=0;while(1){j=c[f+(e*104|0)+76>>2]|0;k=c[f+(e*104|0)+80>>2]|0;c[a>>2]=c[f+(e*104|0)+72>>2];c[a+4>>2]=j;c[a+8>>2]=k;e=e+1|0;if((e|0)==(i|0))break;else a=a+(g<<2)|0;}return}function Xh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[b>>2]=9476;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;f=c[b+28>>2]|0;if((f|0)>0){d=0;do{g=c[b+36>>2]|0;h=g+(d*36|0)+4|0;i=g+(d*36|0)+12|0;j=c[i>>2]|0;e=g+(d*36|0)+16|0;if(j|0){if(a[e>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[i>>2]=0;}a[e>>0]=1;c[i>>2]=0;c[h>>2]=0;c[g+(d*36|0)+8>>2]=0;d=d+1|0;}while((d|0)!=(f|0))}d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function Yh(b){b=b|0;var d=0;c[b>>2]=8576;d=c[b+156>>2]|0;if(d|0){if(a[b+160>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+156>>2]=0;}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+136>>2]=0;}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+116>>2]=0;}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;c[b>>2]=9492;d=c[b+32>>2]|0;if(!d){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;b=b+28|0;c[b>>2]=0;return}if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;b=b+28|0;c[b>>2]=0;return}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;if((b|0)==0?1:(c[b+236>>2]|0)!=8){Aj(a,b);return}g=c[a+328>>2]|0;a:do if((g|0)>0){f=c[a+336>>2]|0;d=0;while(1){e=f+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(g|0))break a}if((d|0)<(g|0)){c[e>>2]=c[f+(g+-1<<2)>>2];c[(c[a+336>>2]|0)+(g+-1<<2)>>2]=b;c[a+328>>2]=g+-1;}}while(0);d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;Vb[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;Vb[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0;}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=17;break}}if((h|0)==17)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function _h(b){b=b|0;var d=0;c[b>>2]=9136;d=c[b+160>>2]|0;if(d|0){if(a[b+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+160>>2]=0;}a[b+164>>0]=1;c[b+160>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+136>>2]=0;}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+116>>2]=0;}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;d=c[b+76>>2]|0;if(!d){a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;b=b+72|0;c[b>>2]=0;return}if(a[b+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+76>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;b=b+72|0;c[b>>2]=0;return}function $h(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0,p=0;p=l;l=l+16|0;if((e|0)<=0){l=p;return}o=0;do{h=+g[a+60>>2]*.5;i=c[a+68>>2]|0;k=+g[b+(o<<4)>>2];m=+g[b+(o<<4)+4>>2];n=+g[b+(o<<4)+8>>2];n=+G(+(k*k+m*m+n*n));j=c[a+64>>2]|0;do if(!(+g[b+(o<<4)+(i<<2)>>2]>n*+g[a+52>>2])){k=+g[b+(o<<4)+(j<<2)>>2];f=c[a+72>>2]|0;m=+g[b+(o<<4)+(f<<2)>>2];n=+G(+(k*k+m*m));if(n>1.1920928955078125e-07){n=+g[a+56>>2]/n;g[p+(j<<2)>>2]=k*n;g[p+(i<<2)>>2]=-h;h=m*n;break}else{g[p+(j<<2)>>2]=0.0;g[p+(i<<2)>>2]=-h;h=0.0;break}}else{g[p+(j<<2)>>2]=0.0;g[p+(i<<2)>>2]=h;h=0.0;f=c[a+72>>2]|0;}while(0);g[p+(f<<2)>>2]=h;j=d+(o<<4)|0;c[j>>2]=c[p>>2];c[j+4>>2]=c[p+4>>2];c[j+8>>2]=c[p+8>>2];c[j+12>>2]=c[p+12>>2];o=o+1|0;}while((o|0)!=(e|0));l=p;return}function ai(b){b=b|0;var d=0;c[b>>2]=4944;d=c[b+144>>2]|0;if(d|0){if(a[b+148>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+144>>2]=0;}a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+76>>2]=0;}a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function bi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;o=(+g[a+32>>2]-+g[a+16>>2])*+g[a+108>>2]*.5;m=(+g[a+36>>2]-+g[a+20>>2])*+g[a+112>>2]*.5;k=(+g[a+40>>2]-+g[a+24>>2])*+g[a+116>>2]*.5;t=+F(+(+g[b>>2]));s=+F(+(+g[b+4>>2]));r=+F(+(+g[b+8>>2]));n=+F(+(+g[b+16>>2]));l=+F(+(+g[b+20>>2]));j=+F(+(+g[b+24>>2]));w=+F(+(+g[b+32>>2]));v=+F(+(+g[b+36>>2]));f=+F(+(+g[b+40>>2]));u=+g[b+48>>2];p=+g[b+52>>2];h=+g[b+56>>2];q=+Db[c[(c[a>>2]|0)+48>>2]&15](a);i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);f=o*w+m*v+k*f+ +Db[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=u-(o*t+m*s+k*r+q);g[d+4>>2]=p-(o*n+m*l+k*j+i);g[d+8>>2]=h-f;g[d+12>>2]=0.0;g[e>>2]=u+(o*t+m*s+k*r+q);g[e+4>>2]=p+(o*n+m*l+k*j+i);g[e+8>>2]=h+f;g[e+12>>2]=0.0;return}function ci(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;i=l;l=l+48|0;e=c[a+28>>2]|0;c[i+32>>2]=e;e=(c[a+20>>2]|0)-e|0;c[i+32+4>>2]=e;c[i+32+8>>2]=b;c[i+32+12>>2]=d;c[i>>2]=c[a+60>>2];c[i+4>>2]=i+32;c[i+8>>2]=2;f=gB(gb(146,i|0)|0)|0;a:do if((e+d|0)!=(f|0)){b=2;g=e+d|0;e=i+32|0;while(1){if((f|0)<0)break;g=g-f|0;j=c[e+4>>2]|0;k=f>>>0>j>>>0;e=k?e+8|0:e;b=(k<<31>>31)+b|0;j=f-(k?j:0)|0;c[e>>2]=(c[e>>2]|0)+j;c[e+4>>2]=(c[e+4>>2]|0)-j;c[i+16>>2]=c[a+60>>2];c[i+16+4>>2]=e;c[i+16+8>>2]=b;f=gB(gb(146,i+16|0)|0)|0;if((g|0)==(f|0)){h=3;break a}}c[a+16>>2]=0;c[a+28>>2]=0;c[a+20>>2]=0;c[a>>2]=c[a>>2]|32;if((b|0)==2)d=0;else d=d-(c[e+4>>2]|0)|0;}else h=3;while(0);if((h|0)==3){k=c[a+44>>2]|0;c[a+16>>2]=k+(c[a+48>>2]|0);c[a+28>>2]=k;c[a+20>>2]=k;}l=i;return d|0}function di(b){b=b|0;var d=0;if((a[22632]|0)==0?iy(22632)|0:0){if((a[22576]|0)==0?iy(22576)|0:0){if((a[22584]|0)==0?iy(22584)|0:0){c[5728]=1065353216;c[5729]=0;c[5730]=0;c[5731]=0;c[5732]=0;c[5733]=1065353216;c[5734]=0;c[5735]=0;c[5736]=0;c[5737]=0;c[5738]=1065353216;g[5739]=0.0;}c[5712]=c[5728];c[5713]=c[5729];c[5714]=c[5730];c[5715]=c[5731];c[5716]=c[5732];c[5717]=c[5733];c[5718]=c[5734];c[5719]=c[5735];c[5720]=c[5736];c[5721]=c[5737];c[5722]=c[5738];c[5723]=c[5739];c[5724]=0;c[5725]=0;c[5726]=0;c[5727]=0;}c[5768]=c[5712];c[5769]=c[5713];c[5770]=c[5714];c[5771]=c[5715];c[5772]=c[5716];c[5773]=c[5717];c[5774]=c[5718];c[5775]=c[5719];c[5776]=c[5720];c[5777]=c[5721];c[5778]=c[5722];c[5779]=c[5723];c[5780]=c[5724];c[5781]=c[5725];c[5782]=c[5726];c[5783]=c[5727];}d=c[b+8>>2]|0;if(!d){d=c[b>>2]|0;return ((d|0)==0?23072:d+60|0)|0}else return d+4|0;return 0}function ei(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=c[b>>2]|0;if((e|0)==(c[a+80>>2]|0)){f=1.0;return +f}if(c[e+204>>2]&4|0){f=1.0;return +f}if((+g[a+28>>2]-+g[a+12>>2])*+g[b+8>>2]+(+g[a+32>>2]-+g[a+16>>2])*+g[b+12>>2]+(+g[a+36>>2]-+g[a+20>>2])*+g[b+16>>2]>=-+g[a+84>>2]){f=1.0;return +f}c[a+4>>2]=c[b+40>>2];c[a+76>>2]=e;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2];}else{k=+g[b+8>>2];j=+g[b+12>>2];i=+g[b+16>>2];h=k*+g[e+20>>2]+j*+g[e+24>>2]+i*+g[e+28>>2];f=k*+g[e+36>>2]+j*+g[e+40>>2]+i*+g[e+44>>2];g[a+44>>2]=+g[e+4>>2]*k+ +g[e+8>>2]*j+ +g[e+12>>2]*i;g[a+48>>2]=h;g[a+52>>2]=f;g[a+56>>2]=0.0;}c[a+60>>2]=c[b+24>>2];c[a+60+4>>2]=c[b+24+4>>2];c[a+60+8>>2]=c[b+24+8>>2];c[a+60+12>>2]=c[b+24+12>>2];k=+g[b+40>>2];return +k}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0;i=l;l=l+80|0;if((e|0)>0)f=0;else{l=i;return}do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0;}while((f|0)!=(e|0));h=i+32+4|0;f=0;do{j=b+(f<<4)|0;c[i+32>>2]=7948;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[i+32+20>>2]=-999999984306749440.0;c[i+32+24>>2]=c[j>>2];c[i+32+24+4>>2]=c[j+4>>2];c[i+32+24+8>>2]=c[j+8>>2];c[i+32+24+12>>2]=c[j+12>>2];c[i+16>>2]=1566444395;c[i+16+4>>2]=1566444395;c[i+16+8>>2]=1566444395;g[i+16+12>>2]=0.0;j=c[a+92>>2]|0;k=c[(c[j>>2]|0)+8>>2]|0;g[i>>2]=-999999984306749440.0;g[i+4>>2]=-999999984306749440.0;g[i+8>>2]=-999999984306749440.0;g[i+12>>2]=0.0;Zb[k&127](j,i+32|0,i,i+16|0);j=d+(f<<4)|0;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[j+12>>2]=c[h+12>>2];f=f+1|0;}while((f|0)<(e|0));l=i;return}function gi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=c[b+96>>2]|0;if((f|0)==(c[b+100>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6436]=(c[6436]|0)+1;f=ic((i<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=f;f=c[b+96>>2]|0;}if((f|0)>0){g=0;do{j=h+(g<<4)|0;k=(c[b+104>>2]|0)+(g<<4)|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g=g+1|0;}while((g|0)!=(f|0))}f=c[b+104>>2]|0;if(f|0){if(a[b+108>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+104>>2]=0;}a[b+108>>0]=1;c[b+104>>2]=h;c[b+100>>2]=i;f=c[b+96>>2]|0;}k=(c[b+104>>2]|0)+(f<<4)|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];c[b+96>>2]=(c[b+96>>2]|0)+1;if(!e)return;dj(b);return}function hi(b){b=b|0;var d=0,e=0,f=0,h=0;c[b+32>>2]=262144;d=c[b+4>>2]|0;if((d|0)<2383){if((c[b+8>>2]|0)<2383){c[6436]=(c[6436]|0)+1;e=ic(9551)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16;}f=c[b+4>>2]|0;if((f|0)>0){e=0;do{c[h+(e<<2)>>2]=c[(c[b+12>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0))}e=c[b+12>>2]|0;if(e|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=h;c[b+8>>2]=2383;e=b+12|0;}else e=b+12|0;do{c[(c[e>>2]|0)+(d<<2)>>2]=0;d=d+1|0;}while((d|0)!=2383)}c[b+4>>2]=2383;e=0;do{h=(c[b+12>>2]|0)+(e<<2)|0;d=c[h>>2]|0;c[h>>2]=0;if(d|0)do{h=d;d=c[d+280>>2]|0;aH(h);}while((d|0)!=0);e=e+1|0;}while((e|0)!=2383);g[b+20>>2]=.25;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=1;c[b+40>>2]=1;return}function ii(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=l;l=l+96|0;b=c[b>>2]|0;if((b|0)==(c[a+4>>2]|0)){l=d;return 1}e=c[a+12>>2]|0;if(!(Kb[c[(c[e>>2]|0)+8>>2]&31](e,c[b+188>>2]|0)|0)){l=d;return 1}e=c[a+4>>2]|0;f=c[e+192>>2]|0;c[d+64>>2]=0;c[d+64+4>>2]=f;c[d+64+8>>2]=e;c[d+64+12>>2]=e+4;c[d+64+16>>2]=-1;c[d+64+20>>2]=-1;e=c[b+192>>2]|0;c[d+40>>2]=0;c[d+40+4>>2]=e;c[d+40+8>>2]=b;c[d+40+12>>2]=b+4;c[d+40+16>>2]=-1;c[d+40+20>>2]=-1;b=c[(c[a+8>>2]|0)+24>>2]|0;b=tb[c[(c[b>>2]|0)+8>>2]&31](b,d+64|0,d+40|0,0)|0;if(b|0){f=c[a+12>>2]|0;c[d+4>>2]=0;c[d+8>>2]=d+64;c[d+12>>2]=d+40;c[d>>2]=6100;c[d+32>>2]=f;jb[c[(c[b>>2]|0)+8>>2]&31](b,d+64|0,d+40|0,(c[a+8>>2]|0)+28|0,d);lb[c[c[b>>2]>>2]&511](b);f=c[(c[a+8>>2]|0)+24>>2]|0;nb[c[(c[f>>2]|0)+60>>2]&127](f,b);}l=d;return 1}function ji(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0,i=0,j=0,k=0;k=l;l=l+80|0;i=c[c[a>>2]>>2]|0;h=c[c[a+4>>2]>>2]|0;if(!(zb[c[(c[b>>2]|0)+24>>2]&63](b,i,h)|0)){l=k;return}f=c[i+192>>2]|0;c[k+56>>2]=0;c[k+56+4>>2]=f;c[k+56+8>>2]=i;c[k+56+12>>2]=i+4;c[k+56+16>>2]=-1;c[k+56+20>>2]=-1;f=c[h+192>>2]|0;c[k+32>>2]=0;c[k+32+4>>2]=f;c[k+32+8>>2]=h;c[k+32+12>>2]=h+4;c[k+32+16>>2]=-1;c[k+32+20>>2]=-1;f=c[a+8>>2]|0;if(!f){f=tb[c[(c[b>>2]|0)+8>>2]&31](b,k+56|0,k+32|0,0)|0;c[a+8>>2]=f;if(f|0)j=4;}else j=4;if((j|0)==4){c[k>>2]=5728;c[k+4>>2]=0;c[k+8>>2]=k+56;c[k+12>>2]=k+32;if((c[d+8>>2]|0)!=1){e=+xb[c[(c[f>>2]|0)+12>>2]&15](f,i,h,d,k);if(+g[d+12>>2]>e)g[d+12>>2]=e;}else jb[c[(c[f>>2]|0)+8>>2]&31](f,k+56|0,k+32|0,d,k);}l=k;return}function ki(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=c[d+4>>2]|0;f=c[b+24>>2]|0;if((f|0)<(i|0)){if((c[b+28>>2]|0)<(i|0)){if(!i){e=0;h=f;}else{c[6436]=(c[6436]|0)+1;e=ic((i<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}h=c[b+24>>2]|0;}if((h|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[b+32>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(h|0))}g=c[b+32>>2]|0;if(g|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=e;c[b+28>>2]=i;e=b+32|0;}else e=b+32|0;do{c[(c[e>>2]|0)+(f<<2)>>2]=0;f=f+1|0;}while((f|0)!=(i|0))}else e=b+32|0;c[b+24>>2]=i;f=c[e>>2]|0;if((i|0)<=0)return;e=0;do{c[f+(e<<2)>>2]=c[(c[d+12>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(i|0));return}function li(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+488>>2]|0;a:do if((e|0)>0){g=c[b+496>>2]|0;f=0;while(1){if((c[g+(f<<2)>>2]|0)==(d|0))break;f=f+1|0;if((f|0)>=(e|0))break a}if((f|0)!=(e|0)){d=b+256|0;c[d>>2]=1;return}}while(0);if((e|0)==(c[b+492>>2]|0)?(h=e|0?e<<1:1,(e|0)<(h|0)):0){if(!h)g=0;else{c[6436]=(c[6436]|0)+1;e=ic((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}g=e;e=c[b+488>>2]|0;}if((e|0)>0){f=0;do{c[g+(f<<2)>>2]=c[(c[b+496>>2]|0)+(f<<2)>>2];f=f+1|0;}while((f|0)!=(e|0))}f=c[b+496>>2]|0;if(f){if(a[b+500>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);e=c[b+488>>2]|0;}c[b+496>>2]=0;}a[b+500>>0]=1;c[b+496>>2]=g;c[b+492>>2]=h;}c[(c[b+496>>2]|0)+(e<<2)>>2]=d;c[b+488>>2]=e+1;d=b+256|0;c[d>>2]=1;return}function mi(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=8848;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=0;a[b+28>>0]=0;a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+72>>2]=0;c[6436]=(c[6436]|0)+1;d=ic(51)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16;}e=c[b+8>>2]|0;if((e|0)>0){d=0;do{g=c[b+16>>2]|0;c[f+(d<<4)>>2]=c[g+(d<<4)>>2];c[f+(d<<4)+4>>2]=c[g+(d<<4)+4>>2];c[f+(d<<4)+8>>2]=c[g+(d<<4)+8>>2];c[f+(d<<4)+12>>2]=c[g+(d<<4)+12>>2];d=d+1|0;}while((d|0)!=(e|0))}d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;vf(b);return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;vf(b);return}function ni(a,b,d){a=a|0;b=b|0;d=d|0;do if(!((b|0)==32&(d|0)==32)){if((b|0)==32){if((d|0)<20){a=a+96|0;break}if((d+-21|0)>>>0<9){a=a+104|0;break}}else{if((b|0)<20&(d|0)==32){a=a+100|0;break}if((b+-21|0)>>>0<9&(d|0)==32){a=a+108|0;break}if((b|0)==8&(d|0)==8){a=a+60|0;break}if((b|0)==8&(d|0)==1){a=a+76|0;break}if((b|0)==1&(d|0)==8){a=a+80|0;break}}if(!(d|b)){a=a+72|0;break}if((b|0)<20&(d|0)==28){a=a+88|0;break}if((b|0)==28&(d|0)<20){a=a+84|0;break}if((b|0)<20){if((d|0)<20){a=a+32|0;break}if((d+-21|0)>>>0<9){a=a+36|0;break}}else{if((d|0)<20&(b+-21|0)>>>0<9){a=a+40|0;break}if((b|0)==31)if((d|0)==31){a=a+48|0;break}else{a=a+44|0;break}}if((d|0)==31){a=a+52|0;break}else{a=a+56|0;break}}else a=a+92|0;while(0);return c[a>>2]|0}function oi(a,b,c,d,e,f,h,i,j,k,l){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=j|0;k=k|0;l=+l;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;x=+g[a>>2]*f+ +g[a+16>>2]*h+ +g[a+32>>2]*i;v=+g[a+4>>2]*f+ +g[a+20>>2]*h+ +g[a+36>>2]*i;t=+g[a+8>>2]*f+ +g[a+24>>2]*h+ +g[a+40>>2]*i;s=+g[b>>2]*f+ +g[b+16>>2]*h+ +g[b+32>>2]*i;q=+g[b+4>>2]*f+ +g[b+20>>2]*h+ +g[b+36>>2]*i;o=+g[b+8>>2]*f+ +g[b+24>>2]*h+ +g[b+40>>2]*i;w=+g[j+80>>2];u=+g[j+84>>2];p=+g[j+88>>2];r=+g[k+80>>2];m=+g[k+84>>2];n=+g[k+88>>2];p=x*(x<0.0?-w:w)+v*(v<0.0?-u:u)+t*(t<0.0?-p:p);n=s*(s<0.0?-r:r)+q*(q<0.0?-m:m)+o*(o<0.0?-n:n);o=+g[j+96>>2];m=+g[k+96>>2];m=(p>o?p:o)+(n>m?n:m);return !((c*f+d*h+e*i+m<m-(c*f+d*h+e*i)?c*f+d*h+e*i+m:m-(c*f+d*h+e*i))>l)|0}function pi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0.0,t=0;if((e|0)>0)f=0;else return;do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0;}while((f|0)!=(e|0));r=0;do{j=+g[a+12>>2];k=+g[b+(r<<4)>>2]*j;l=+g[a+16>>2];m=+g[b+(r<<4)+4>>2]*l;n=+g[a+20>>2];o=+g[b+(r<<4)+8>>2]*n;p=c[a+96>>2]|0;if((p|0)>0){q=c[a+104>>2]|0;f=-1;i=0;h=-3402823466385288598117041.0e14;do{s=k*+g[q+(i<<4)>>2]+m*+g[q+(i<<4)+4>>2]+o*+g[q+(i<<4)+8>>2];t=s>h;f=t?i:f;h=t?s:h;i=i+1|0;}while((i|0)!=(p|0));o=+g[q+(f<<4)+4>>2]*l;s=+g[q+(f<<4)+8>>2]*n;g[d+(r<<4)>>2]=+g[q+(f<<4)>>2]*j;g[d+(r<<4)+4>>2]=o;g[d+(r<<4)+8>>2]=s;}else h=-999999984306749440.0;g[d+(r<<4)+12>>2]=h;r=r+1|0;}while((r|0)!=(e|0));return}function qi(b){b=b|0;var d=0;d=Rr(616)|0;c[d+164>>2]=1065353216;c[d+168>>2]=1065353216;c[d+172>>2]=1065353216;g[d+176>>2]=0.0;c[d+180>>2]=0;g[d+184>>2]=999999984306749440.0;c[d+188>>2]=0;c[d+188+4>>2]=0;c[d+188+8>>2]=0;c[d+188+12>>2]=0;c[d+204>>2]=1;c[d+208>>2]=-1;c[d+212>>2]=-1;c[d+216>>2]=1;g[d+220>>2]=0.0;g[d+224>>2]=.5;g[d+228>>2]=0.0;g[d+232>>2]=0.0;c[d+236>>2]=1;c[d+240>>2]=0;g[d+244>>2]=1.0;c[d+248>>2]=0;c[d+248+4>>2]=0;c[d+248+8>>2]=0;c[d+248+12>>2]=0;c[d+4>>2]=1065353216;c[d+8>>2]=0;c[d+8+4>>2]=0;c[d+8+8>>2]=0;c[d+8+12>>2]=0;c[d+24>>2]=1065353216;c[d+28>>2]=0;c[d+28+4>>2]=0;c[d+28+8>>2]=0;c[d+28+12>>2]=0;c[d+44>>2]=1065353216;c[d+48>>2]=0;c[d+48+4>>2]=0;c[d+48+8>>2]=0;c[d+48+12>>2]=0;c[d+48+16>>2]=0;c[d>>2]=4236;a[d+500>>0]=1;c[d+496>>2]=0;c[d+488>>2]=0;c[d+492>>2]=0;xd(d,b);return d|0}function ri(a,b,d,e,f,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var m=0,n=0,o=0;o=l;l=l+16|0;aj(12916);Ib[c[(c[a>>2]|0)+32>>2]&1](a,b,d,e,f,h,i,j,k);m=c[a+184>>2]|0;n=c[j+20>>2]|0;n=(m|0)>(n|0)?m:n;if((n|0)>0){m=0;do{+Mb[c[(c[a>>2]|0)+40>>2]&3](a,m,b,d,e,f,h,i,j,k);m=m+1|0;}while((m|0)<(n|0))}m=c[2388]|0;k=(c[m+16>>2]|0)+-1|0;c[m+16>>2]=k;if(k|0){l=o;return 0.0}do if(c[m+4>>2]|0){Za(o|0,0)|0;k=c[6435]|0;g[m+8>>2]=+g[m+8>>2]+ +(((c[o+4>>2]|0)-(c[k+4>>2]|0)+(((c[o>>2]|0)-(c[k>>2]|0)|0)*1e6|0)-(c[m+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[m+16>>2]|0)){m=c[2388]|0;break}else{l=o;return 0.0}}while(0);c[2388]=c[m+20>>2];l=o;return 0.0}function si(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){m=c[a+12>>2]|0;n=c[m+(((b+d|0)/2|0)<<2)>>2]|0;f=b;e=d;while(1){l=c[n+740>>2]|0;l=c[((c[l+208>>2]|0)>-1?l:c[n+744>>2]|0)+208>>2]|0;while(1){h=m+(f<<2)|0;i=c[h>>2]|0;k=c[i+740>>2]|0;j=f+1|0;if((c[((c[k+208>>2]|0)>-1?k:c[i+744>>2]|0)+208>>2]|0)<(l|0))f=j;else break}while(1){g=c[m+(e<<2)>>2]|0;o=c[g+740>>2]|0;k=e+-1|0;if((l|0)<(c[((c[o+208>>2]|0)>-1?o:c[g+744>>2]|0)+208>>2]|0))e=k;else break}if((f|0)<=(e|0)){c[h>>2]=g;c[(c[a+12>>2]|0)+(e<<2)>>2]=i;f=j;e=k;}if((f|0)>(e|0))break;m=c[a+12>>2]|0;}if((e|0)>(b|0))si(a,b,e);if((f|0)<(d|0))b=f;else break}return}function ti(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=c[d>>2]|0;d=c[b+268>>2]|0;a:do if((d|0)>0){f=c[b+276>>2]|0;e=0;while(1){if((c[f+(e<<2)>>2]|0)==(g|0))break;e=e+1|0;if((e|0)>=(d|0))break a}if((e|0)!=(d|0))return}while(0);if((d|0)==(c[b+272>>2]|0)?(h=d|0?d<<1:1,(d|0)<(h|0)):0){if(!h)f=0;else{c[6436]=(c[6436]|0)+1;d=ic((h<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=d;d=c[b+268>>2]|0;}if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[b+276>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(d|0))}e=c[b+276>>2]|0;if(e){if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+268>>2]|0;}c[b+276>>2]=0;}a[b+280>>0]=1;c[b+276>>2]=f;c[b+272>>2]=h;}c[(c[b+276>>2]|0)+(d<<2)>>2]=g;c[b+268>>2]=d+1;return}function ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+232>>2]|0;a:do if((f|0)>0){g=c[a+240>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+240>>2]|0)+(f+-1<<2)>>2]=b;c[a+232>>2]=f+-1;}}while(0);d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;Vb[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;Vb[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0;}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=15;break}}if((h|0)==15)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function vi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){m=c[a+12>>2]|0;n=c[m+(((b+d|0)/2|0)<<2)>>2]|0;f=b;e=d;while(1){l=c[n+28>>2]|0;l=c[((c[l+208>>2]|0)>-1?l:c[n+32>>2]|0)+208>>2]|0;while(1){h=m+(f<<2)|0;i=c[h>>2]|0;k=c[i+28>>2]|0;j=f+1|0;if((c[((c[k+208>>2]|0)>-1?k:c[i+32>>2]|0)+208>>2]|0)<(l|0))f=j;else break}while(1){g=c[m+(e<<2)>>2]|0;o=c[g+28>>2]|0;k=e+-1|0;if((l|0)<(c[((c[o+208>>2]|0)>-1?o:c[g+32>>2]|0)+208>>2]|0))e=k;else break}if((f|0)<=(e|0)){c[h>>2]=g;c[(c[a+12>>2]|0)+(e<<2)>>2]=i;f=j;e=k;}if((f|0)>(e|0))break;m=c[a+12>>2]|0;}if((e|0)>(b|0))vi(a,b,e);if((f|0)<(d|0))b=f;else break}return}function wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+328>>2]|0;a:do if((f|0)>0){g=c[a+336>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+336>>2]|0)+(f+-1<<2)>>2]=b;c[a+328>>2]=f+-1;}}while(0);d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;Vb[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;Vb[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0;}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=15;break}}if((h|0)==15)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function xi(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;do if(!(JB(b,c[d+8>>2]|0)|0)){if(!(JB(b,c[d>>2]|0)|0)){h=c[b+8>>2]|0;jb[c[(c[h>>2]|0)+24>>2]&31](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4)break;a[d+52>>0]=0;a[d+53>>0]=0;f=c[b+8>>2]|0;Bb[c[(c[f>>2]|0)+20>>2]&7](f,d,e,e,1,g);if(a[d+53>>0]|0)if(!(a[d+52>>0]|0)){b=3;h=11;}else b=3;else{b=4;h=11;}if((h|0)==11){c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;}c[d+44>>2]=b;break}if((f|0)==1)c[d+32>>2]=1;}else ur(d,e,f);while(0);return}function yi(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0,i=0,k=0.0,m=0.0,n=0.0;i=l;l=l+16|0;c[i>>2]=c[a+28>>2];c[i+4>>2]=c[a+28+4>>2];c[i+8>>2]=c[a+28+8>>2];c[i+12>>2]=c[a+28+12>>2];n=+Db[c[(c[a>>2]|0)+48>>2]&15](a);m=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);g[i>>2]=n+ +g[i>>2];g[i+4>>2]=m+ +g[i+4>>2];g[i+8>>2]=k+ +g[i+8>>2];f=c[a+52>>2]|0;switch(f|0){case 0:{a=0;e=1;break}case 2:{a=2;e=0;break}default:{a=1;e=0;}}n=+g[i+(e<<2)>>2];m=+g[i+(a<<2)>>2];h=(g[j>>2]=b*.25*n*n+b/12.0*m*m*4.0,c[j>>2]|0);a=(g[j>>2]=b*.5*n*n,c[j>>2]|0);switch(f|0){case 0:{e=h;f=h;break}case 2:{e=a;f=h;a=h;break}default:{e=h;f=a;a=h;}}c[d>>2]=a;c[d+4>>2]=f;c[d+8>>2]=e;g[d+12>>2]=0.0;l=i;return}function zi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[a>>2]=3980;if((c[a+104>>2]|0)<=0){a=a+60|0;Si(a);Ui(a);return}k=0;do{j=c[(c[a+4>>2]|0)+684>>2]|0;h=(c[a+112>>2]|0)+(k<<3)+4|0;b=c[h>>2]|0;if((c[j+60>>2]|0)>0){g=0;do{i=(c[j+68>>2]|0)+(g<<2)|0;d=c[i>>2]|0;a:do if(d|0){e=0;do{f=e|0?e+280|0:i;e=d;while(1){d=c[e+280>>2]|0;if((c[e+276>>2]|0)!=(b|0))break;c[f>>2]=d;aH(e);if(!d)break a;else e=d;}}while((d|0)!=0)}while(0);g=g+1|0;}while((g|0)<(c[j+60>>2]|0));b=c[h>>2]|0;}if(b|0)lb[c[(c[b>>2]|0)+4>>2]&511](b);k=k+1|0;}while((k|0)<(c[a+104>>2]|0));a=a+60|0;Si(a);Ui(a);return}function Ai(b){b=b|0;var d=0,e=0;d=c[b+92>>2]|0;if(d|0){if(a[b+96>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+92>>2]=0;}a[b+96>>0]=1;c[b+92>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;d=c[b+64>>2]|0;if(d|0)do{c[b+64>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);d=c[b+64>>2]|0;}while((d|0)!=0);d=c[b+48>>2]|0;if(d|0)do{c[b+48>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);d=c[b+48>>2]|0;}while((d|0)!=0);d=c[b+32>>2]|0;if(!d)return;do{c[b+32>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);d=c[b+32>>2]|0;}while((d|0)!=0);return}function Bi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;i=c[d>>2]|0;i=Kb[c[(c[i>>2]|0)+56>>2]&31](i,28)|0;j=(a[b+4>>0]|0)==0;h=c[b+8>>2]|0;g=c[b+12>>2]|0;b=c[d>>2]|0;c[i+4>>2]=b;c[i>>2]=5604;a[i+8>>0]=0;c[i+12>>2]=0;if(j){a[i+16>>0]=0;c[i+20>>2]=h;c[i+24>>2]=g;if(!(zb[c[(c[b>>2]|0)+24>>2]&63](b,c[e+8>>2]|0,c[f+8>>2]|0)|0))return i|0;j=c[i+4>>2]|0;c[i+12>>2]=zb[c[(c[j>>2]|0)+12>>2]&63](j,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[i+8>>0]=1;return i|0}else{a[i+16>>0]=1;c[i+20>>2]=h;c[i+24>>2]=g;if(!(zb[c[(c[b>>2]|0)+24>>2]&63](b,c[f+8>>2]|0,c[e+8>>2]|0)|0))return i|0;j=c[i+4>>2]|0;c[i+12>>2]=zb[c[(c[j>>2]|0)+12>>2]&63](j,c[f+8>>2]|0,c[e+8>>2]|0)|0;a[i+8>>0]=1;return i|0}return 0}function Ci(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;if(JB(b,c[d+8>>2]|0)|0)Xk(d,e,f,g);else{j=a[d+52>>0]|0;k=a[d+53>>0]|0;l=c[b+12>>2]|0;a[d+52>>0]=0;a[d+53>>0]=0;pn(b+16|0,d,e,f,g,h);a:do if((l|0)>1){i=b+24|0;do{if(a[d+54>>0]|0)break a;if(!(a[d+52>>0]|0)){if(a[d+53>>0]|0?(c[b+8>>2]&1|0)==0:0)break a}else{if((c[d+24>>2]|0)==1)break a;if(!(c[b+8>>2]&2))break a}a[d+52>>0]=0;a[d+53>>0]=0;pn(i,d,e,f,g,h);i=i+8|0;}while(i>>>0<(b+16+(l<<3)|0)>>>0)}while(0);a[d+52>>0]=j;a[d+53>>0]=k;}return}function Di(){var b=0;b=Rr(284)|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;c[b>>2]=5168;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b+236>>2]=4;return b|0}function Ei(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=(c[b>>2]|0)+1794895138|0;f=Iz(c[b+8>>2]|0,n)|0;k=Iz(c[b+12>>2]|0,n)|0;m=Iz(c[b+16>>2]|0,n)|0;a:do if((f>>>0<d>>>2>>>0?k>>>0<(d-(f<<2)|0)>>>0&m>>>0<(d-(f<<2)|0)>>>0:0)?((m|k)&3|0)==0:0){j=0;while(1){i=f>>>1;l=j+i|0;g=Iz(c[b+((l<<1)+(k>>>2)<<2)>>2]|0,n)|0;h=Iz(c[b+((l<<1)+(k>>>2)+1<<2)>>2]|0,n)|0;if(!(h>>>0<d>>>0&g>>>0<(d-h|0)>>>0)){f=0;break a}if(a[b+(h+g)>>0]|0){f=0;break a}g=$n(e,b+h|0)|0;if(!g)break;if((f|0)==1){f=0;break a}else{j=(g|0)<0?j:l;f=(g|0)<0?i:f-i|0;}}g=Iz(c[b+((l<<1)+(m>>>2)<<2)>>2]|0,n)|0;f=Iz(c[b+((l<<1)+(m>>>2)+1<<2)>>2]|0,n)|0;if(f>>>0<d>>>0&g>>>0<(d-f|0)>>>0)f=(a[b+(f+g)>>0]|0)==0?b+f|0:0;else f=0;}else f=0;while(0);return f|0}function Fi(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0,m=0;f=l;l=l+48|0;if((c[b+136>>2]|0)<=0){l=f;return}e=0;do{m=c[b+144>>2]|0;c[f+32>>2]=(a[m+(e*284|0)+84>>0]|0)==0?1065353216:0;c[f+32+4>>2]=0;c[f+32+8>>2]=1065353216;g[f+32+12>>2]=0.0;k=m+(e*284|0)+140|0;c[f+16>>2]=c[k>>2];c[f+16+4>>2]=c[k+4>>2];c[f+16+8>>2]=c[k+8>>2];c[f+16+12>>2]=c[k+12>>2];k=c[b+120>>2]|0;h=c[(c[d>>2]|0)+8>>2]|0;j=+g[m+(e*284|0)+108+(k<<2)>>2]+ +g[f+16+4>>2];i=+g[m+(e*284|0)+124+(k<<2)>>2]+ +g[f+16+8>>2];g[f>>2]=+g[m+(e*284|0)+92+(k<<2)>>2]+ +g[f+16>>2];g[f+4>>2]=j;g[f+8>>2]=i;g[f+12>>2]=0.0;Zb[h&127](d,f+16|0,f,f+32|0);Zb[c[(c[d>>2]|0)+8>>2]&127](d,f+16|0,(c[b+144>>2]|0)+(e*284|0)+16|0,f+32|0);e=e+1|0;}while((e|0)<(c[b+136>>2]|0));l=f;return}function Gi(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(b|0){case 2:{if((e|0)<1){g[a+232>>2]=d;c[a+300>>2]=c[a+300>>2]|512;return}if((e|0)<3){g[a+264>>2]=d;c[a+300>>2]=c[a+300>>2]|32;return}if((e|0)==3){g[a+248>>2]=d;c[a+300>>2]=c[a+300>>2]|2048;return}if((e|0)>=6)return;g[a+280>>2]=d;c[a+300>>2]=c[a+300>>2]|128;return}case 3:{if((e|0)<1){g[a+212>>2]=d;c[a+300>>2]=c[a+300>>2]|1;return}if((e|0)!=3)return;g[a+228>>2]=d;c[a+300>>2]=c[a+300>>2]|4;return}case 4:{if((e|0)<1){g[a+244>>2]=d;c[a+300>>2]=c[a+300>>2]|256;return}if((e|0)<3){g[a+276>>2]=d;c[a+300>>2]=c[a+300>>2]|16;return}if((e|0)==3){g[a+260>>2]=d;c[a+300>>2]=c[a+300>>2]|1024;return}if((e|0)>=6)return;g[a+292>>2]=d;c[a+300>>2]=c[a+300>>2]|64;return}default:return}}function Hi(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0;e=l;l=l+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;k=e+32+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);i=(+g[e>>2]-+g[e+16>>2])*.5;h=(+g[e+4>>2]-+g[e+16+4>>2])*.5;j=(+g[e+8>>2]-+g[e+16+8>>2])*.5;f=+Db[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b*.0833333283662796*((h+f)*2.0*(h+f)*2.0+(j+f)*2.0*(j+f)*2.0);g[d+4>>2]=b*.0833333283662796*((i+f)*2.0*(i+f)*2.0+(j+f)*2.0*(j+f)*2.0);g[d+8>>2]=b*.0833333283662796*((i+f)*2.0*(i+f)*2.0+(h+f)*2.0*(h+f)*2.0);g[d+12>>2]=0.0;l=e;return}function Ii(){var b=0;b=gs()|0;c[b>>2]=1025;c[b+116>>2]=0;a[b+120>>0]=0;c[b+124>>2]=0;c[b+124+4>>2]=0;c[b+124+8>>2]=0;c[b+124+12>>2]=0;c[b+124+16>>2]=0;c[b+124+20>>2]=0;c[b+124+24>>2]=0;c[b+124+28>>2]=0;c[b+300>>2]=0;a[b+304>>0]=0;c[b+308>>2]=0;c[b+308+4>>2]=0;c[b+308+8>>2]=0;c[b+308+12>>2]=0;c[b+308+16>>2]=0;c[b+308+20>>2]=0;c[b+308+24>>2]=0;c[b+308+28>>2]=0;c[b+484>>2]=0;a[b+488>>0]=0;c[b+492>>2]=0;c[b+492+4>>2]=0;c[b+492+8>>2]=0;c[b+492+12>>2]=0;c[b+492+16>>2]=0;c[b+492+20>>2]=0;c[b+492+24>>2]=0;c[b+492+28>>2]=0;c[b+668>>2]=0;a[b+672>>0]=0;c[b+676>>2]=0;c[b+676+4>>2]=0;c[b+676+8>>2]=0;c[b+676+12>>2]=0;c[b+676+16>>2]=0;c[b+676+20>>2]=0;c[b+676+24>>2]=0;c[b+676+28>>2]=0;c[b+740>>2]=0;c[b+744>>2]=0;c[b+748>>2]=0;c[b+768>>2]=0;return b|0}function Ji(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;h=+g[b+52>>2];i=+g[b+56>>2];f=+g[b+60>>2];if(!(a[b+84>>0]|0)){c[b+32>>2]=c[b+204>>2];g[b>>2]=-h;g[b+4>>2]=-i;g[b+8>>2]=-f;g[b+12>>2]=0.0;h=0.0;i=1.0;d=b+272|0;g[d>>2]=h;d=b+268|0;g[d>>2]=i;return}else{m=+g[b>>2];l=+g[b+4>>2];k=+g[b+8>>2];n=+g[b+16>>2]-+g[d+52>>2];p=+g[b+20>>2]-+g[d+56>>2];q=+g[b+24>>2]-+g[d+60>>2];j=+g[d+332>>2];r=+g[d+336>>2];o=+g[d+328>>2];j=!(m*h+l*i+k*f>=-.10000000149011612)?-1.0/(m*h+l*i+k*f)*(m*(j*q-p*r+ +g[d+312>>2])+l*(+g[d+316>>2]+(n*r-q*o))+k*(p*o-n*j+ +g[d+320>>2])):0.0;i=!(m*h+l*i+k*f>=-.10000000149011612)?-1.0/(m*h+l*i+k*f):10.0;d=b+272|0;g[d>>2]=j;d=b+268|0;g[d>>2]=i;return}}function Ki(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0;e=l;l=l+96|0;j=+g[c>>2];k=+g[c+4>>2];m=+g[c+8>>2];Xp(e+80|0,j,k,m,+bx(j,k,m,+g[b>>2],+g[b+4>>2],+g[b+8>>2]));m=+g[e+80>>2];k=+g[e+80+4>>2];j=+g[e+80+8>>2];up(e+64|0,+g[b>>2],+g[b+4>>2],+g[b+8>>2],m,k,j);Fo(e+48|0,+g[c>>2],+g[c+4>>2],+g[c+8>>2],+g[b>>2],+g[b+4>>2],+g[b+8>>2]);i=+g[e+48>>2];h=+g[e+48+4>>2];f=+g[e+48+8>>2];n=+VG(d);Xp(e+16|0,+g[e+64>>2],+g[e+64+4>>2],+g[e+64+8>>2],n);sp(e+32|0,m,k,j,+g[e+16>>2],+g[e+16+4>>2],+g[e+16+8>>2]);Xp(e,i,h,f,+UG(d));sp(a,+g[e+32>>2],+g[e+32+4>>2],+g[e+32+8>>2],+g[e>>2],+g[e+4>>2],+g[e+8>>2]);l=e;return}function Li(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=c[b+212>>2]|0;if((f|0)==(c[b+216>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6436]=(c[6436]|0)+1;f=ic((i<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=f;f=c[b+212>>2]|0;}if((f|0)>0){g=0;do{c[h+(g<<2)>>2]=c[(c[b+220>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0))}g=c[b+220>>2]|0;if(g){if(a[b+224>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);f=c[b+212>>2]|0;}c[b+220>>2]=0;}a[b+224>>0]=1;c[b+220>>2]=h;c[b+216>>2]=i;}c[(c[b+220>>2]|0)+(f<<2)>>2]=d;c[b+212>>2]=f+1;if(!e)return;li(c[d+28>>2]|0,d);li(c[d+32>>2]|0,d);return}function Mi(a,b,d,e,f,h,i,j,k,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0;n=l;l=l+16|0;aj(12979);+Ob[c[(c[a>>2]|0)+44>>2]&3](a,b,d,e,f,h,i,j,k);+Ob[c[(c[a>>2]|0)+48>>2]&3](a,b,d,e,f,h,i,j,k);+Sb[c[(c[a>>2]|0)+36>>2]&1](a,b,d,j);m=c[2388]|0;k=(c[m+16>>2]|0)+-1|0;c[m+16>>2]=k;if(k|0){l=n;return 0.0}do if(c[m+4>>2]|0){Za(n|0,0)|0;k=c[6435]|0;g[m+8>>2]=+g[m+8>>2]+ +(((c[n+4>>2]|0)-(c[k+4>>2]|0)+(((c[n>>2]|0)-(c[k>>2]|0)|0)*1e6|0)-(c[m+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[m+16>>2]|0)){m=c[2388]|0;break}else{l=n;return 0.0}}while(0);c[2388]=c[m+20>>2];l=n;return 0.0}function Ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=c[a+4>>2]|0;if(e|0)Wk(e,b,d);a=c[a>>2]|0;if(!a)return;m=+g[b>>2];k=+g[a+128>>2];l=+g[b+4>>2];j=+g[b+8>>2];f=+g[d+4>>2];o=+g[d+8>>2];n=+g[d>>2];i=+g[a+180>>2]*(j*f-l*o)+ +g[a+184>>2]*(m*o-j*n)+(l*n-m*f)*+g[a+188>>2];h=(j*f-l*o)*+g[a+196>>2]+(m*o-j*n)*+g[a+200>>2]+(l*n-m*f)*+g[a+204>>2];f=(j*f-l*o)*+g[a+212>>2]+(m*o-j*n)*+g[a+216>>2]+(l*n-m*f)*+g[a+220>>2];g[a+276>>2]=m*k+ +g[a+276>>2];g[a+280>>2]=k*l+ +g[a+280>>2];g[a+284>>2]=k*j+ +g[a+284>>2];g[a+292>>2]=i+ +g[a+292>>2];g[a+296>>2]=h+ +g[a+296>>2];g[a+300>>2]=f+ +g[a+300>>2];c[a+312>>2]=(c[a+312>>2]|0)+1;return}function Oi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;v=+g[a+552>>2];u=+g[a+568>>2];t=+g[a+584>>2];s=+g[b>>2];r=+g[b+4>>2];q=+g[b+8>>2];o=+g[b+16>>2];n=+g[b+20>>2];m=+g[b+24>>2];k=+g[b+32>>2];i=+g[b+36>>2];f=+g[b+40>>2];j=+g[a+556>>2];h=+g[a+572>>2];e=+g[a+588>>2];x=+g[a+620>>2];w=+g[a+636>>2];d=+g[a+652>>2];p=x*+g[c>>2]+w*+g[c+4>>2]+d*+g[c+8>>2];l=x*+g[c+16>>2]+w*+g[c+20>>2]+d*+g[c+24>>2];d=x*+g[c+32>>2]+w*+g[c+36>>2]+d*+g[c+40>>2];d=+O(+((v*s+u*r+t*q)*p+(v*o+u*n+t*m)*l+(v*k+u*i+t*f)*d),+((s*j+r*h+q*e)*p+(o*j+n*h+m*e)*l+(k*j+i*h+f*e)*d));return +(d*+g[a+732>>2])}function Pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+8>>2]|0;if((d|0)>0){f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if(c[e+236>>2]&2){g=pb[c[(c[e>>2]|0)+16>>2]&127](e)|0;g=zb[c[(c[b>>2]|0)+16>>2]&63](b,g,1)|0;d=zb[c[(c[e>>2]|0)+20>>2]&63](e,c[g+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,g,d,1497645650,e);d=c[a+8>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}if((c[a+212>>2]|0)<=0)return;d=0;do{g=c[(c[a+220>>2]|0)+(d<<2)>>2]|0;e=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;e=zb[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;f=zb[c[(c[g>>2]|0)+40>>2]&63](g,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,f,1397641027,g);d=d+1|0;}while((d|0)<(c[a+212>>2]|0));return}function Qi(a){a=a|0;var b=0.0,d=0,e=0,f=0,h=0;e=l;l=l+32|0;c[a+32>>2]=1566444395;c[a+36>>2]=1566444395;c[a+40>>2]=1566444395;g[a+44>>2]=0.0;c[a+48>>2]=-581039253;c[a+52>>2]=-581039253;c[a+56>>2]=-581039253;g[a+60>>2]=0.0;if((c[a+16>>2]|0)<=0){l=e;return}d=0;do{f=c[a+24>>2]|0;h=c[f+(d*80|0)+64>>2]|0;Zb[c[(c[h>>2]|0)+8>>2]&127](h,f+(d*80|0)|0,e+16|0,e);b=+g[e+16>>2];if(+g[a+32>>2]>b)g[a+32>>2]=b;b=+g[e>>2];if(+g[a+48>>2]<b)g[a+48>>2]=b;b=+g[e+16+4>>2];if(+g[a+36>>2]>b)g[a+36>>2]=b;b=+g[e+4>>2];if(+g[a+52>>2]<b)g[a+52>>2]=b;b=+g[e+16+8>>2];if(+g[a+40>>2]>b)g[a+40>>2]=b;b=+g[e+8>>2];if(+g[a+56>>2]<b)g[a+56>>2]=b;d=d+1|0;}while((d|0)<(c[a+16>>2]|0));l=e;return}function Ri(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=l;l=l+64|0;h=c[d>>2]|0;g=d+(c[h+-8>>2]|0)|0;h=c[h+-4>>2]|0;c[i>>2]=e;c[i+4>>2]=d;c[i+8>>2]=2760;d=JB(h,e)|0;e=i+12|0;f=e+40|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(f|0));b[i+12+40>>1]=0;a[i+12+42>>0]=0;a:do if(d){c[i+48>>2]=1;Bb[c[(c[h>>2]|0)+20>>2]&7](h,i,g,g,1,0);d=(c[i+24>>2]|0)==1?g:0;}else{jb[c[(c[h>>2]|0)+24>>2]&31](h,i,g,1,0);switch(c[i+36>>2]|0){case 0:{d=((c[i+40>>2]|0)==1?(c[i+28>>2]|0)==1:0)&(c[i+32>>2]|0)==1?c[i+20>>2]|0:0;break a}case 1:break;default:{d=0;break a}}if((c[i+24>>2]|0)!=1?!(((c[i+40>>2]|0)==0?(c[i+28>>2]|0)==1:0)&(c[i+32>>2]|0)==1):0){d=0;break}d=c[i+16>>2]|0;}while(0);l=i;return d|0}function Si(b){b=b|0;var d=0;d=c[b+12>>2]|0;if(d|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;d=c[b+52>>2]|0;if(d|0){if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+52>>2]=0;}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;d=c[b+72>>2]|0;if(!d){a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;b=b+68|0;c[b>>2]=0;return}if(a[b+76>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+72>>2]=0;a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;b=b+68|0;c[b>>2]=0;return}function Ti(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0;e=l;l=l+96|0;i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;j=e+32+44|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);h=(i+(+g[e>>2]-+g[e+16>>2])*.5)*2.0;f=(i+(+g[e+4>>2]-+g[e+16+4>>2])*.5)*2.0;i=(i+(+g[e+8>>2]-+g[e+16+8>>2])*.5)*2.0;g[d>>2]=b*.0833333283662796*(f*f+i*i);g[d+4>>2]=b*.0833333283662796*(h*h+i*i);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);g[d+12>>2]=0.0;l=e;return}function Ui(b){b=b|0;var d=0;d=c[b+72>>2]|0;if(d|0){if(a[b+76>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+72>>2]=0;}a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;d=c[b+52>>2]|0;if(d|0){if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+52>>2]=0;}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;d=c[b+12>>2]|0;if(!d){a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+12>>2]=0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}function Vi(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=c[a+732>>2]|0;if((e|0)<=0)return;d=c[a+740>>2]|0;a=0;do{n=c[d+(a*52|0)+8>>2]|0;f=c[d+(a*52|0)+12>>2]|0;s=+g[n+40>>2];q=+g[n+44>>2];i=+g[n+48>>2];k=d+(a*52|0)+36|0;r=+g[k>>2];m=d+(a*52|0)+40|0;p=+g[m>>2];l=d+(a*52|0)+44|0;o=+g[l>>2];j=-(+g[d+(a*52|0)+32>>2]*((s-+g[f+40>>2])*r+(q-+g[f+44>>2])*p+(i-+g[f+48>>2])*o)*b);h=+g[n+88>>2]*j;g[n+40>>2]=s+r*h;g[n+44>>2]=q+p*h;g[n+48>>2]=o*h+i;j=+g[f+88>>2]*j;i=j*+g[m>>2];h=j*+g[l>>2];g[f+40>>2]=+g[f+40>>2]-+g[k>>2]*j;g[f+44>>2]=+g[f+44>>2]-i;g[f+48>>2]=+g[f+48>>2]-h;a=a+1|0;}while((a|0)!=(e|0));return}function Wi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+12>>2]|0;if(!e)return;if(!(a[b+8>>0]|0))return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[d+4>>2]|0;}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);f=c[d+4>>2]|0;}c[d+12>>2]=0;}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+12>>2]|0;}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function Xi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b+328>>2]|0;if((g|0)==(c[b+332>>2]|0)?(j=g|0?g<<1:1,(g|0)<(j|0)):0){if(!j)i=0;else{c[6436]=(c[6436]|0)+1;g=ic((j<<2|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16;}i=g;g=c[b+328>>2]|0;}if((g|0)>0){h=0;do{c[i+(h<<2)>>2]=c[(c[b+336>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(g|0))}h=c[b+336>>2]|0;if(h){if(a[b+340>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);g=c[b+328>>2]|0;}c[b+336>>2]=0;}a[b+340>>0]=1;c[b+336>>2]=i;c[b+332>>2]=j;}c[(c[b+336>>2]|0)+(g<<2)>>2]=d;c[b+328>>2]=g+1;c[d+284>>2]=c[b+452>>2];wg(b,d,e,f);return}function Yi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+20>>2]|0;if(!e)return;if(!(a[b+16>>0]|0))return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[d+4>>2]|0;}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);f=c[d+4>>2]|0;}c[d+12>>2]=0;}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+20>>2]|0;}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function Zi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;k=+g[a+24>>2];i=+g[a+28>>2];j=+g[a+32>>2];f=k*+g[b>>2]+i*+g[b+4>>2]+j*+g[b+8>>2];h=+g[a+20>>2];if(f>h){g[a+20>>2]=f;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2];}else f=h;h=k*+g[b+16>>2]+i*+g[b+20>>2]+j*+g[b+24>>2];if(h>f){g[a+20>>2]=h;c[a+4>>2]=c[b+16>>2];c[a+4+4>>2]=c[b+16+4>>2];c[a+4+8>>2]=c[b+16+8>>2];c[a+4+12>>2]=c[b+16+12>>2];}else h=f;f=k*+g[b+32>>2]+i*+g[b+36>>2]+j*+g[b+40>>2];if(!(f>h))return;g[a+20>>2]=f;c[a+4>>2]=c[b+32>>2];c[a+4+4>>2]=c[b+32+4>>2];c[a+4+8>>2]=c[b+32+8>>2];c[a+4+12>>2]=c[b+32+12>>2];return}function _i(b){b=b|0;var d=0;d=qs()|0;c[d+8>>2]=0;c[d>>2]=6416;a[d+28>>0]=1;c[d+24>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+32>>2]=1566444395;c[d+36>>2]=1566444395;c[d+40>>2]=1566444395;g[d+44>>2]=0.0;c[d+48>>2]=-581039253;c[d+52>>2]=-581039253;c[d+56>>2]=-581039253;g[d+60>>2]=0.0;c[d+64>>2]=0;c[d+68>>2]=1;g[d+72>>2]=0.0;c[d+76>>2]=1065353216;c[d+80>>2]=1065353216;c[d+84>>2]=1065353216;g[d+88>>2]=0.0;c[d+4>>2]=31;if(!b)return d|0;c[6436]=(c[6436]|0)+1;b=ic(79)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=-1;c[b+12>>2]=0;c[b+16>>2]=0;c[d+64>>2]=b;return d|0}function $i(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;k=+g[a+88>>2];i=+g[a+92>>2];j=+g[a+96>>2];f=k*+g[b>>2]+i*+g[b+4>>2]+j*+g[b+8>>2];h=+g[a+84>>2];if(f>h){g[a+84>>2]=f;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2];}else f=h;h=k*+g[b+16>>2]+i*+g[b+20>>2]+j*+g[b+24>>2];if(h>f){g[a+84>>2]=h;c[a+4>>2]=c[b+16>>2];c[a+4+4>>2]=c[b+16+4>>2];c[a+4+8>>2]=c[b+16+8>>2];c[a+4+12>>2]=c[b+16+12>>2];}else h=f;f=k*+g[b+32>>2]+i*+g[b+36>>2]+j*+g[b+40>>2];if(!(f>h))return;g[a+84>>2]=f;c[a+4>>2]=c[b+32>>2];c[a+4+4>>2]=c[b+32+4>>2];c[a+4+8>>2]=c[b+32+8>>2];c[a+4+12>>2]=c[b+32+12>>2];return}function aj(a){a=a|0;var b=0,d=0,e=0,f=0;f=l;l=l+16|0;d=c[2388]|0;if((c[d>>2]|0)==(a|0))b=d;else{b=c[d+24>>2]|0;a:do if(!b)e=5;else while(1){if((c[b>>2]|0)==(a|0))break a;b=c[b+28>>2]|0;if(!b){e=5;break}}while(0);if((e|0)==5){b=Er(36)|0;c[b>>2]=a;c[b+4>>2]=0;c[b+4+4>>2]=0;c[b+4+8>>2]=0;c[b+4+12>>2]=0;c[b+20>>2]=d;c[b+24>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;_q(b);c[b+28>>2]=c[d+24>>2];c[d+24>>2]=b;}c[2388]=b;}d=b+4|0;c[d>>2]=(c[d>>2]|0)+1;d=b+16|0;e=c[d>>2]|0;c[d>>2]=e+1;if(e|0){l=f;return}Za(f|0,0)|0;e=c[6435]|0;c[b+12>>2]=(c[f+4>>2]|0)-(c[e+4>>2]|0)+(((c[f>>2]|0)-(c[e>>2]|0)|0)*1e6|0);l=f;return}function bj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0;i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);m=i+ +g[a+28>>2];k=i+ +g[a+32>>2];i=i+ +g[a+36>>2];u=+F(+(+g[b>>2]));t=+F(+(+g[b+4>>2]));s=+F(+(+g[b+8>>2]));q=+F(+(+g[b+16>>2]));p=+F(+(+g[b+20>>2]));o=+F(+(+g[b+24>>2]));l=+F(+(+g[b+32>>2]));j=+F(+(+g[b+36>>2]));h=+F(+(+g[b+40>>2]));r=+g[b+48>>2];n=+g[b+52>>2];f=+g[b+56>>2];g[d>>2]=r-(m*u+k*t+i*s);g[d+4>>2]=n-(m*q+k*p+i*o);g[d+8>>2]=f-(m*l+k*j+i*h);g[d+12>>2]=0.0;g[e>>2]=m*u+k*t+i*s+r;g[e+4>>2]=m*q+k*p+i*o+n;g[e+8>>2]=m*l+k*j+i*h+f;g[e+12>>2]=0.0;return}function cj(b){b=b|0;var d=0;c[b>>2]=8708;if(c[b+108>>2]|0){d=c[b+112>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+112>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+108>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+108>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}}d=c[b+88>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+84>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+80>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+60>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}if(!(a[b+100>>0]|0))return;d=c[b+92>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+92>>2]|0;if(!d)return;c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);return}function dj(b){b=b|0;var d=0,e=0,f=0,h=0.0;e=l;l=l+96|0;a[b+88>>0]=1;if((a[22696]|0)==0?iy(22696)|0:0){c[6140]=1065353216;c[6141]=0;c[6142]=0;c[6143]=0;c[6144]=0;c[6145]=1065353216;c[6146]=0;c[6147]=0;c[6148]=0;c[6149]=0;c[6150]=1065353216;g[6151]=0.0;c[6152]=-1082130432;c[6153]=0;c[6154]=0;c[6155]=0;c[6156]=0;c[6157]=-1082130432;c[6158]=0;c[6159]=0;c[6160]=0;c[6161]=0;c[6162]=-1082130432;g[6163]=0.0;}d=e;f=d+96|0;do{c[d>>2]=0;d=d+4|0;}while((d|0)<(f|0));Zb[c[(c[b>>2]|0)+76>>2]&127](b,24560,e,6);h=+g[b+44>>2];g[b+72>>2]=+g[e>>2]+h;g[b+56>>2]=+g[e+48>>2]-h;g[b+76>>2]=+g[e+20>>2]+h;g[b+60>>2]=+g[e+68>>2]-h;g[b+80>>2]=+g[e+40>>2]+h;g[b+64>>2]=+g[e+88>>2]-h;l=e;return}function ej(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;while(1){i=c[a+12>>2]|0;k=c[i+(((b+d|0)/2|0)<<3)>>2]|0;f=d;e=b;while(1){while(1){j=e+1|0;if((c[i+(e<<3)>>2]|0)<(k|0))e=j;else break}while(1){g=i+(f<<3)|0;h=f+-1|0;if((k|0)<(c[g>>2]|0))f=h;else break}if((e|0)<=(f|0)){l=i+(e<<3)|0;i=c[l>>2]|0;e=c[l+4>>2]|0;m=c[g+4>>2]|0;c[l>>2]=c[g>>2];c[l+4>>2]=m;f=(c[a+12>>2]|0)+(f<<3)|0;c[f>>2]=i;c[f+4>>2]=e;f=h;e=j;}if((e|0)>(f|0))break;i=c[a+12>>2]|0;}if((f|0)>(b|0))ej(a,b,f);if((e|0)<(d|0))b=e;else break}return}function fj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+76>>2]|0;if(!e)return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[d+4>>2]|0;}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0;}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);f=c[d+4>>2]|0;}c[d+12>>2]=0;}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+76>>2]|0;}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function gj(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;f=c[a+732>>2]|0;if((f|0)<=0)return;e=c[a+740>>2]|0;a=0;do{d=+g[e+(a*52|0)+24>>2];if(d>0.0?(h=c[e+(a*52|0)+8>>2]|0,i=c[e+(a*52|0)+12>>2]|0,j=+g[h+8>>2],k=+g[i+8>>2]-j,l=+g[h+12>>2],m=+g[i+12>>2]-l,n=+g[h+16>>2],o=+g[i+16>>2]-n,p=+g[e+(a*52|0)+28>>2],p+(k*k+m*m+o*o)>1.1920928955078125e-07):0){d=(p-(k*k+m*m+o*o))/(d*(p+(k*k+m*m+o*o)))*b;q=d*+g[h+88>>2];g[h+8>>2]=j-k*q;g[h+12>>2]=l-m*q;g[h+16>>2]=n-o*q;d=d*+g[i+88>>2];g[i+8>>2]=+g[i+8>>2]+k*d;g[i+12>>2]=m*d+ +g[i+12>>2];g[i+16>>2]=o*d+ +g[i+16>>2];}a=a+1|0;}while((a|0)!=(f|0));return}function hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0;e=l;l=l+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;n=e+32+44|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);k=+g[e>>2];m=+g[e+16>>2];i=+g[e+4>>2];j=+g[e+16+4>>2];f=+g[e+8>>2];h=+g[e+16+8>>2];g[d>>2]=+G(+((k-m)*(k-m)+(i-j)*(i-j)+(f-h)*(f-h)))*.5;g[b>>2]=(m+k)*.5;g[b+4>>2]=(j+i)*.5;g[b+8>>2]=(h+f)*.5;g[b+12>>2]=0.0;l=e;return}function ij(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=c[d+48>>2]|0;if((c[d+60>>2]|0)==2){hg(b+64|0,h)|0;f=c[b+68>>2]|0;if(!f){f=b+68|0;g=1;}else{c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);f=b+68|0;g=1;}}else{hg(b+4|0,h)|0;f=c[b+8>>2]|0;if(!f){f=b+8|0;g=0;}else{c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);f=b+8|0;g=0;}}c[f>>2]=h;f=b+4+(g*60|0)+12|0;c[f>>2]=(c[f>>2]|0)+-1;f=c[d+52>>2]|0;c[((f|0)==0?b+124+(c[d+60>>2]<<2)|0:f+56|0)>>2]=c[d+56>>2];f=c[d+56>>2]|0;if(f|0)c[f+52>>2]=c[d+52>>2];h=c[b+136>>2]|0;Vb[c[(c[h>>2]|0)+16>>2]&127](h,d,e);c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);a[b+194>>0]=1;return}function jj(){var b=0,d=0;d=qs()|0;c[d+8>>2]=0;c[d>>2]=6416;a[d+28>>0]=1;c[d+24>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+32>>2]=1566444395;c[d+36>>2]=1566444395;c[d+40>>2]=1566444395;g[d+44>>2]=0.0;c[d+48>>2]=-581039253;c[d+52>>2]=-581039253;c[d+56>>2]=-581039253;g[d+60>>2]=0.0;c[d+64>>2]=0;c[d+68>>2]=1;g[d+72>>2]=0.0;c[d+76>>2]=1065353216;c[d+80>>2]=1065353216;c[d+84>>2]=1065353216;g[d+88>>2]=0.0;c[d+4>>2]=31;c[6436]=(c[6436]|0)+1;b=ic(79)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=-1;c[b+12>>2]=0;c[b+16>>2]=0;c[d+64>>2]=b;return d|0}function kj(a,d,f,h){a=a|0;d=d|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=c[a+108>>2]|0;if(i|0){Zb[c[(c[i>>2]|0)+28>>2]&127](i,d,f,h);return}i=b[a+56>>1]|0;if(!(i<<16>>16))return;m=1;k=1;do{j=c[a+68>>2]|0;if(b[j+(k<<2)>>1]&1){l=c[a+60>>2]|0;k=e[j+(k<<2)+2>>1]|0;if(!(+g[d>>2]>+g[l+(k<<6)+32>>2])?!(+g[f>>2]<+g[l+(k<<6)+16>>2]):0)j=1;else j=0;if(!(!(+g[d+8>>2]>+g[l+(k<<6)+40>>2])?!(+g[f+8>>2]<+g[l+(k<<6)+24>>2]):0))j=0;if(!(+g[d+4>>2]>+g[l+(k<<6)+36>>2])?!(+g[f+4>>2]<+g[l+(k<<6)+20>>2]|j^1):0){Kb[c[(c[h>>2]|0)+8>>2]&31](h,l+(k<<6)|0)|0;i=b[a+56>>1]|0;}}m=m+1<<16>>16;k=m&65535;}while(k>>>0<((i&65535)<<1|1)>>>0);return}function lj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0;h=+g[b>>2];i=+g[b+16>>2];j=h<i?h:i;f=+g[b+32>>2];if((j<f?j:f)>+g[a+24>>2])return;k=h>i?b:b+16|0;if(+g[(+g[k>>2]>f?k:b+32|0)>>2]<+g[a+8>>2])return;f=+g[b+8>>2];h=+g[b+24>>2];j=f<h?f:h;i=+g[b+40>>2];if((j<i?j:i)>+g[a+32>>2])return;k=f>h?b+8|0:b+24|0;if(+g[(+g[k>>2]>i?k:b+40|0)>>2]<+g[a+16>>2])return;f=+g[b+4>>2];h=+g[b+20>>2];j=f<h?f:h;i=+g[b+36>>2];if((j<i?j:i)>+g[a+28>>2])return;k=f>h?b+4|0:b+20|0;if(+g[(+g[k>>2]>i?k:b+36|0)>>2]<+g[a+12>>2])return;k=c[a+4>>2]|0;Zb[c[(c[k>>2]|0)+8>>2]&127](k,b,d,e);return}function mj(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0;if(!(a[b+738>>0]|0)){c[d>>2]=5;c[d+4>>2]=1;e=+Oi(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g[b+728>>2]=e;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;h=+g[b+692>>2];do if(!(h>=0.0))i=13;else{e=+Wg(e-+g[b+688>>2],6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465;}else e=e+6.2831854820251465;if(e<-h){a[b+716>>0]=1;f=1.0;e=-(e+h);}else{if(!(e>h)){i=13;break}a[b+716>>0]=1;f=-1.0;e=h-e;}g[b+708>>2]=e;g[b+712>>2]=f;}while(0);if((i|0)==13?(a[b+737>>0]|0)==0:0)return;c[d>>2]=6;b=d+4|0;}else{c[d>>2]=0;b=d+4|0;}c[b>>2]=0;return}function nj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0;f=l;l=l+16|0;c[a+4>>2]=c[b+24>>2];e=c[b>>2]|0;c[a+8>>2]=e;if(d){c[a+52>>2]=c[b+8>>2];c[a+52+4>>2]=c[b+8+4>>2];c[a+52+8>>2]=c[b+8+8>>2];c[a+52+12>>2]=c[b+8+12>>2];i=a+68|0;d=a+20|0;e=a+36|0;h=+g[b+24>>2];rp(i,d,e,h);h=+g[b+24>>2];l=f;return +h}else{d=fH(MG(e)|0)|0;Kl(f,d,+g[b+8>>2],+g[b+12>>2],+g[b+16>>2]);c[a+52>>2]=c[f>>2];c[a+52+4>>2]=c[f+4>>2];c[a+52+8>>2]=c[f+8>>2];c[a+52+12>>2]=c[f+12>>2];d=a+68|0;e=a+20|0;i=a+36|0;h=+g[b+24>>2];rp(d,e,i,h);h=+g[b+24>>2];l=f;return +h}return 0.0}function oj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0.0,j=0.0,k=0.0;h=l;l=l+16|0;g[b+32>>2]=f;c[b+8>>2]=c[d>>2];c[b+8+4>>2]=c[d+4>>2];c[b+8+8>>2]=c[d+8>>2];c[b+8+12>>2]=c[d+12>>2];i=+g[b+28>>2];k=+g[e+4>>2]-i*+g[d+4>>2];j=+g[e+8>>2]-i*+g[d+8>>2];g[h>>2]=+g[e>>2]-+g[d>>2]*i;g[h+4>>2]=k;g[h+8>>2]=j;g[h+12>>2]=0.0;f=+g[b+24>>2]+i+f;g[b+32>>2]=f;if(!(f<0.0)){b=b+4|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;Ub[e&15](b,d,h,f);l=h;return}a[b+36>>0]=1;b=b+4|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;Ub[e&15](b,d,h,f);l=h;return}function pj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=6352;d=c[b+8>>2]|0;g=c[d+8>>2]|0;if((g|0)>0){e=0;do{f=c[(c[d+16>>2]|0)+(e*12|0)+8>>2]|0;if(f|0){lb[c[c[f>>2]>>2]&511](f);h=c[b+4>>2]|0;nb[c[(c[h>>2]|0)+60>>2]&127](h,f);}e=e+1|0;}while((e|0)!=(g|0));d=c[b+8>>2]|0;}Bh(d);d=c[b+8>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+8>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+24>>2]|0;if(!d){a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;h=b+20|0;c[h>>2]=0;return}if(a[b+28>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+24>>2]=0;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;h=b+20|0;c[h>>2]=0;return}function qj(b,d){b=b|0;d=d|0;c[b+204>>2]=c[d+48>>2];c[b+208>>2]=c[d+52>>2];c[b+212>>2]=c[d+56>>2];c[b+216>>2]=c[d+60>>2];c[b+220>>2]=c[d+64>>2];c[b+224>>2]=c[d+68>>2];c[b+156>>2]=c[d>>2];c[b+156+4>>2]=c[d+4>>2];c[b+156+8>>2]=c[d+8>>2];c[b+156+12>>2]=c[d+12>>2];c[b+172>>2]=c[d+16>>2];c[b+172+4>>2]=c[d+16+4>>2];c[b+172+8>>2]=c[d+16+8>>2];c[b+172+12>>2]=c[d+16+12>>2];c[b+188>>2]=c[d+32>>2];c[b+188+4>>2]=c[d+32+4>>2];c[b+188+8>>2]=c[d+32+8>>2];c[b+188+12>>2]=c[d+32+12>>2];c[b+228>>2]=c[d+72>>2];g[b+232>>2]=0.0;g[b+252>>2]=0.0;g[b+236>>2]=0.0;g[b+240>>2]=0.0;g[b+256>>2]=0.0;g[b+244>>2]=.10000000149011612;a[b+260>>0]=a[d+80>>0]&1;c[b+248>>2]=c[d+76>>2];return}function rj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0;f=l;l=l+16|0;c[b+4>>2]=d;c[b>>2]=4560;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=e;if((a[22672]|0)==0?iy(22672)|0:0){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;bg(23272,0.0,0,0,f);}c[5869]=c[5869]|1;g[5904]=0.0;h=+g[5914]*0.0;i=+g[5915]*0.0;g[5909]=+g[5913]*0.0;g[5910]=h;g[5911]=i;g[5912]=0.0;c[5917]=0;c[5918]=0;c[5919]=0;c[5920]=0;i=+g[5906]*0.0;h=+g[5907]*0.0;g[5958]=+g[5905]*0.0;g[5959]=i;g[5960]=h;g[5961]=0.0;c[b+32>>2]=23272;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;l=f;return}function sj(a){a=a|0;var b=0;c[a>>2]=3196;b=c[a+92>>2]|0;lb[c[c[b>>2]>>2]&511](b);b=c[a+92>>2]|0;if(b|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}b=c[a+96>>2]|0;lb[c[c[b>>2]>>2]&511](b);b=c[a+96>>2]|0;if(b|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}b=c[a+100>>2]|0;lb[c[c[b>>2]>>2]&511](b);b=c[a+100>>2]|0;if(b|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}b=c[a+104>>2]|0;lb[c[c[b>>2]>>2]&511](b);b=c[a+104>>2]|0;if(b|0){c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);}b=c[a+108>>2]|0;lb[c[c[b>>2]>>2]&511](b);b=c[a+108>>2]|0;if(!b){Ye(a);return}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);Ye(a);return}function tj(b,d){b=b|0;d=d|0;var e=0,f=0;a:do if((d|0)!=0&(b&3|0)!=0){e=d;while(1){if(!(a[b>>0]|0))break a;b=b+1|0;d=e+-1|0;if((d|0)!=0&(b&3|0)!=0)e=d;else{e=d;d=(d|0)!=0;f=4;break}}}else{e=d;d=(d|0)!=0;f=4;}while(0);b:do if((f|0)==4)if(d){if(a[b>>0]|0){c:do if(e>>>0>3)while(1){d=c[b>>2]|0;if((d&-2139062144^-2139062144)&d+-16843009|0)break;b=b+4|0;e=e+-4|0;if(e>>>0<=3){f=10;break c}}else f=10;while(0);if((f|0)==10)if(!e){e=0;break}while(1){if(!(a[b>>0]|0))break b;b=b+1|0;e=e+-1|0;if(!e){e=0;break}}}}else e=0;while(0);return (e|0?b:0)|0}function uj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0;m=c[b+52>>2]|0;l=c[m+32>>2]|0;b=c[l>>2]|0;m=c[m+24>>2]|0;if((m|0)<=1){m=b;m=m+8|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];return}j=+g[d>>2];k=+g[d+4>>2];i=+g[d+8>>2];d=0;h=1;e=j*+g[b+8>>2]+k*+g[b+12>>2]+i*+g[b+16>>2];while(1){b=c[l+(h<<2)>>2]|0;f=j*+g[b+8>>2]+k*+g[b+12>>2]+i*+g[b+16>>2];b=f>e;d=b?h:d;h=h+1|0;if((h|0)==(m|0))break;else e=b?f:e;}m=c[l+(d<<2)>>2]|0;m=m+8|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];return}function vj(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+g[a+4>>2];h=+g[a+396>>2];m=+g[a+8>>2];e=+g[a+400>>2];l=+g[a+12>>2];c=+g[a+404>>2];k=+g[a+20>>2];j=+g[a+24>>2];i=+g[a+28>>2];f=+g[a+36>>2];d=+g[a+40>>2];b=+g[a+44>>2];g[a+264>>2]=n*h*n+m*e*m+l*c*l;g[a+268>>2]=n*h*k+m*e*j+l*c*i;g[a+272>>2]=n*h*f+m*e*d+l*c*b;g[a+276>>2]=0.0;g[a+280>>2]=h*k*n+e*j*m+c*i*l;g[a+284>>2]=h*k*k+e*j*j+c*i*i;g[a+288>>2]=h*k*f+e*j*d+c*i*b;g[a+292>>2]=0.0;g[a+296>>2]=h*f*n+e*d*m+c*b*l;g[a+300>>2]=h*f*k+e*d*j+c*b*i;g[a+304>>2]=h*f*f+e*d*d+c*b*b;g[a+308>>2]=0.0;return}function wj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0;h=l;l=l+16|0;if((e|0)<=0){l=h;return}f=0;do{p=+g[b+(f<<4)>>2];o=+g[b+(f<<4)+4>>2];n=+g[b+(f<<4)+8>>2];m=p*+g[a+56>>2]+o*+g[a+60>>2]+n*+g[a+64>>2];k=p*+g[a+72>>2]+o*+g[a+76>>2]+n*+g[a+80>>2];n=p*+g[a+88>>2]+o*+g[a+92>>2]+n*+g[a+96>>2];g[h>>2]=m;g[h+4>>2]=k;g[h+8>>2]=n;g[h+12>>2]=0.0;j=a+56+((+g[h+((m<k&1)<<2)>>2]<n?2:m<k&1)<<4)|0;i=d+(f<<4)|0;c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];f=f+1|0;}while((f|0)!=(e|0));l=h;return}function xj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=5756;e=c[b+8>>2]|0;d=c[b+16>>2]|0;if((e|0)>0){h=0;do{f=(c[d+(h<<2)>>2]|0)+188|0;g=c[f>>2]|0;if(g){e=c[b+68>>2]|0;e=pb[c[(c[e>>2]|0)+36>>2]&127](e)|0;Vb[c[(c[e>>2]|0)+40>>2]&127](e,g,c[b+24>>2]|0);e=c[b+68>>2]|0;Vb[c[(c[e>>2]|0)+12>>2]&127](e,g,c[b+24>>2]|0);c[f>>2]=0;e=c[b+8>>2]|0;d=c[b+16>>2]|0;}h=h+1|0;}while((h|0)<(e|0))}if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function yj(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,i=0.0,j=0.0;c[a+248>>2]=c[b>>2];c[a+248+4>>2]=c[b+4>>2];c[a+248+8>>2]=c[b+8>>2];c[a+248+12>>2]=c[b+12>>2];d=c[a+232>>2]|0;if((d|0)<=0)return;h=0;do{f=c[(c[a+240>>2]|0)+(h<<2)>>2]|0;switch(c[f+216>>2]|0){case 2:case 5:break;default:if(!(c[f+504>>2]&1)){e=+g[f+344>>2];if(e!=0.0){j=1.0/e*+g[b+4>>2];i=1.0/e*+g[b+8>>2];g[f+364>>2]=1.0/e*+g[b>>2];g[f+368>>2]=j;g[f+372>>2]=i;g[f+376>>2]=0.0;}c[f+380>>2]=c[b>>2];c[f+380+4>>2]=c[b+4>>2];c[f+380+8>>2]=c[b+8>>2];c[f+380+12>>2]=c[b+12>>2];d=c[a+232>>2]|0;}}h=h+1|0;}while((h|0)<(d|0));return}function zj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+96|0;g=c[b+192>>2]|0;c[f+64>>2]=0;c[f+64+4>>2]=g;c[f+64+8>>2]=b;c[f+64+12>>2]=b+4;c[f+64+16>>2]=-1;c[f+64+20>>2]=-1;b=c[d+192>>2]|0;c[f+40>>2]=0;c[f+40+4>>2]=b;c[f+40+8>>2]=d;c[f+40+12>>2]=d+4;c[f+40+16>>2]=-1;c[f+40+20>>2]=-1;b=c[a+24>>2]|0;b=tb[c[(c[b>>2]|0)+8>>2]&31](b,f+64|0,f+40|0,0)|0;if(!b){l=f;return}c[f+4>>2]=0;c[f+8>>2]=f+64;c[f+12>>2]=f+40;c[f>>2]=6100;c[f+32>>2]=e;jb[c[(c[b>>2]|0)+8>>2]&31](b,f+64|0,f+40|0,a+28|0,f);lb[c[c[b>>2]>>2]&511](b);g=c[a+24>>2]|0;nb[c[(c[g>>2]|0)+60>>2]&127](g,b);l=f;return}function Aj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;if(!((b|0)==0?1:(c[b+236>>2]&2|0)==0)){nb[c[(c[a>>2]|0)+92>>2]&127](a,b);return}d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;Vb[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;Vb[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0;}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=11;break}}if((h|0)==11)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function Bj(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0.0,i=0.0,k=0.0;e=c[a+204>>2]|0;if(b==0.0){c[a+204>>2]=e|1;h=0.0;}else{c[a+204>>2]=e&-2;h=1.0/b;}g[a+344>>2]=h;k=+g[a+384>>2]*b;i=+g[a+388>>2]*b;g[a+364>>2]=+g[a+380>>2]*b;g[a+368>>2]=k;g[a+372>>2]=i;g[a+376>>2]=0.0;b=+g[d>>2];f=b!=0.0?(g[j>>2]=1.0/b,c[j>>2]|0):0;b=+g[d+4>>2];e=b!=0.0?(g[j>>2]=1.0/b,c[j>>2]|0):0;b=+g[d+8>>2];d=b!=0.0?(g[j>>2]=1.0/b,c[j>>2]|0):0;c[a+396>>2]=f;c[a+400>>2]=e;c[a+404>>2]=d;g[a+408>>2]=0.0;i=h*+g[a+352>>2];k=h*+g[a+356>>2];g[a+560>>2]=+g[a+348>>2]*h;g[a+564>>2]=i;g[a+568>>2]=k;g[a+572>>2]=0.0;return}function Cj(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0;f=l;l=l+256|0;e=c[b+212>>2]|0;if((e|0)>-1){a=e;l=f;return a|0}h=(c[b+236>>2]&2|0)==0;e=h?0:b;do if(!h){if(!(+g[e+344>>2]!=0.0)?(c[e+204>>2]&2|0)==0:0)break;h=c[a+8>>2]|0;Ik(f|0,0,244)|0;ye(qf(a+4|0,f)|0,b,d);c[b+212>>2]=h;l=f;return h|0}while(0);e=c[a+188>>2]|0;if((e|0)>=0){h=e;l=f;return h|0}c[a+188>>2]=c[a+8>>2];Ik(f|0,0,244)|0;ye(qf(a+4|0,f)|0,0,d);h=c[a+188>>2]|0;l=f;return h|0}function Dj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0;k=+g[b+60>>2]*.5;l=c[b+68>>2]|0;e=+g[d>>2];f=+g[d+4>>2];i=+g[d+8>>2];i=+G(+(e*e+f*f+i*i));h=c[b+64>>2]|0;if(+g[d+(l<<2)>>2]>i*+g[b+52>>2]){g[a+(h<<2)>>2]=0.0;g[a+(l<<2)>>2]=k;k=0.0;l=c[b+72>>2]|0;l=a+(l<<2)|0;g[l>>2]=k;return}i=+g[d+(h<<2)>>2];j=c[b+72>>2]|0;e=+g[d+(j<<2)>>2];f=+G(+(i*i+e*e));if(f>1.1920928955078125e-07){f=+g[b+56>>2]/f;g[a+(h<<2)>>2]=i*f;g[a+(l<<2)>>2]=-k;k=e*f;l=j;l=a+(l<<2)|0;g[l>>2]=k;return}else{g[a+(h<<2)>>2]=0.0;g[a+(l<<2)>>2]=-k;k=0.0;l=j;l=a+(l<<2)|0;g[l>>2]=k;return}}function Ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+280>>2]|0;if((e|0)==(c[b+284>>2]|0)?(h=e|0?e<<1:1,(e|0)<(h|0)):0){if(!h)g=0;else{c[6436]=(c[6436]|0)+1;e=ic((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}g=e;e=c[b+280>>2]|0;}if((e|0)>0){f=0;do{c[g+(f<<2)>>2]=c[(c[b+288>>2]|0)+(f<<2)>>2];f=f+1|0;}while((f|0)!=(e|0))}f=c[b+288>>2]|0;if(f){if(a[b+292>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);e=c[b+280>>2]|0;}c[b+288>>2]=0;}a[b+292>>0]=1;c[b+288>>2]=g;c[b+284>>2]=h;}c[(c[b+288>>2]|0)+(e<<2)>>2]=d;c[b+280>>2]=e+1;return}function Fj(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0;e=l;l=l+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;j=e+32+44|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);h=(+g[e>>2]-+g[e+16>>2])*.5*2.0;f=(+g[e+4>>2]-+g[e+16+4>>2])*.5*2.0;i=(+g[e+8>>2]-+g[e+16+8>>2])*.5*2.0;g[d>>2]=b/12.0*(f*f+i*i);g[d+4>>2]=b/12.0*(h*h+i*i);g[d+8>>2]=b/12.0*(h*h+f*f);l=e;return}function Gj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0;n=c[b+96>>2]|0;if((n|0)<=0){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;n=a+12|0;g[n>>2]=0.0;return}o=+g[b+12>>2];p=+g[d>>2]*o;k=+g[b+16>>2];l=+g[d+4>>2]*k;m=+g[b+20>>2];j=+g[d+8>>2]*m;f=c[b+104>>2]|0;d=-1;b=0;e=-3402823466385288598117041.0e14;while(1){h=p*+g[f+(b<<4)>>2]+l*+g[f+(b<<4)+4>>2]+j*+g[f+(b<<4)+8>>2];i=h>e;d=i?b:d;b=b+1|0;if((b|0)==(n|0))break;else e=i?h:e;}l=+g[f+(d<<4)+4>>2]*k;p=+g[f+(d<<4)+8>>2]*m;g[a>>2]=+g[f+(d<<4)>>2]*o;g[a+4>>2]=l;g[a+8>>2]=p;n=a+12|0;g[n>>2]=0.0;return}function Hj(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=cs()|0;rj(e,3,b);c[e>>2]=4672;c[e+300>>2]=c[d>>2];c[e+300+4>>2]=c[d+4>>2];c[e+300+8>>2]=c[d+8>>2];c[e+300+12>>2]=c[d+12>>2];k=+g[d>>2];j=+g[d+4>>2];i=+g[d+8>>2];h=k*+g[b+20>>2]+j*+g[b+24>>2]+i*+g[b+28>>2]+ +g[b+56>>2];f=k*+g[b+36>>2]+j*+g[b+40>>2]+i*+g[b+44>>2]+ +g[b+60>>2];g[e+316>>2]=k*+g[b+4>>2]+j*+g[b+8>>2]+i*+g[b+12>>2]+ +g[b+52>>2];g[e+320>>2]=h;g[e+324>>2]=f;g[e+328>>2]=0.0;c[e+332>>2]=0;a[e+344>>0]=0;g[e+348>>2]=.30000001192092896;g[e+352>>2]=1.0;g[e+356>>2]=0.0;return e|0}function Ij(a,b,c){a=+a;b=+b;c=+c;var d=0.0,e=0.0,f=0;if(b>=c)return +a;if(a<b){d=+Wg(b-a,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465;}else d=d+6.2831854820251465;e=+F(+d);d=+Wg(c-a,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465;}else d=d+6.2831854820251465;f=e<+F(+d);a=f?a:a+6.2831854820251465;return +a}if(!(a>c))return +a;d=+Wg(a-c,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465;}else d=d+6.2831854820251465;e=+F(+d);d=+Wg(a-b,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465;}else d=d+6.2831854820251465;f=+F(+d)<e;a=f?a+-6.2831854820251465:a;return +a}function Jj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=l;l=l+16|0;Vb[c[(c[b>>2]|0)+68>>2]&127](e,b,d);c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];if(!(+Db[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0)){l=e;return}i=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];k=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:i;j=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:h;f=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:f;h=1.0/+G(+(f*f+(k*k+j*j)));i=+Db[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+i*h*k;g[a+4>>2]=i*h*j+ +g[a+4>>2];g[a+8>>2]=i*h*f+ +g[a+8>>2];l=e;return}function Kj(a,b,d){a=a|0;b=+b;d=+d;var e=0.0,f=0.0,h=0.0;f=+g[a+692>>2];do if(f>0.0){h=+g[a+688>>2];e=+Wg(b-h,6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465;}else e=e+6.2831854820251465;if(!(!(e<-f)&e<=f))if(e>0.0){b=+Wg(f+h,6.2831854820251465);if(b<-3.1415927410125732){b=b+6.2831854820251465;break}if(!(b>3.1415927410125732))break;b=b+-6.2831854820251465;break}else{b=+Wg(h-f,6.2831854820251465);if(b<-3.1415927410125732){b=b+6.2831854820251465;break}if(!(b>3.1415927410125732))break;b=b+-6.2831854820251465;break}}while(0);g[a+680>>2]=(b-+Oi(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0))/d;return}function Lj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(b|0){case 2:{if((c|0)<1){d=+g[a+232>>2];break a}if((c|0)<3){d=+g[a+264>>2];break a}if((c|0)==3){d=+g[a+248>>2];break a}if((c|0)<6)d=+g[a+280>>2];else d=3402823466385288598117041.0e14;break}case 3:{if((c|0)<1){d=+g[a+212>>2];break a}if((c|0)==3)d=+g[a+228>>2];else d=3402823466385288598117041.0e14;break}case 4:{if((c|0)<1){d=+g[a+244>>2];break a}if((c|0)<3){d=+g[a+276>>2];break a}if((c|0)==3){d=+g[a+260>>2];break a}if((c|0)<6)d=+g[a+292>>2];else d=3402823466385288598117041.0e14;break}default:d=3402823466385288598117041.0e14;}while(0);return +d}function Mj(){var b=0;b=Mr()|0;c[b>>2]=4884;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;a[b+180>>0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;c[b+192>>2]=0;return b|0}function Nj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;c[6167]=(c[6167]|0)+1;e=(c[b+12>>2]|0)>(c[d+12>>2]|0);f=c[(e?d:b)+12>>2]|0;e=c[(e?b:d)+12>>2]|0;b=((e<<16|f)+~((e<<16|f)<<15)>>10^(e<<16|f)+~((e<<16|f)<<15))*9|0;b=((b>>6^b)+~((b>>6^b)<<11)>>16^(b>>6^b)+~((b>>6^b)<<11))&(c[a+12>>2]|0)+-1;if((b|0)>=(c[a+36>>2]|0)){g=0;return g|0}b=c[(c[a+44>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){g=0;return g|0}d=c[a+16>>2]|0;while(1){if((c[(c[d+(b<<4)>>2]|0)+12>>2]|0)==(f|0)?(c[(c[d+(b<<4)+4>>2]|0)+12>>2]|0)==(e|0):0)break;b=c[(c[a+64>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){b=0;g=8;break}}if((g|0)==8)return b|0;g=d+(b<<4)|0;return g|0}function Oj(b){b=b|0;var d=0;c[b>>2]=4e3;if(a[b+456>>0]|0?(d=c[b+452>>2]|0,lb[c[c[d>>2]>>2]&511](d),d=c[b+452>>2]|0,d|0):0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+420>>2]|0;if(d|0){if(a[b+424>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+420>>2]=0;}a[b+424>>0]=1;c[b+420>>2]=0;c[b+412>>2]=0;c[b+416>>2]=0;d=c[b+336>>2]|0;if(!d){a[b+340>>0]=1;c[b+336>>2]=0;c[b+328>>2]=0;d=b+332|0;c[d>>2]=0;xg(b);return}if(a[b+340>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+336>>2]=0;a[b+340>>0]=1;c[b+336>>2]=0;c[b+328>>2]=0;d=b+332|0;c[d>>2]=0;xg(b);return}function Pj(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0;d=l;l=l+64|0;c[d+48>>2]=0;c[d+48+4>>2]=0;c[d+48+8>>2]=0;c[d+48+12>>2]=0;i=+g[b>>2];f=+g[b+4>>2];m=+g[b+8>>2];j=+g[b+12>>2];h=i*(2.0/(i*i+f*f+m*m+j*j));e=f*(2.0/(i*i+f*f+m*m+j*j));k=m*(2.0/(i*i+f*f+m*m+j*j));g[d>>2]=1.0-(f*e+m*k);g[d+4>>2]=i*e-j*k;g[d+8>>2]=i*k+j*e;g[d+12>>2]=0.0;g[d+16>>2]=i*e+j*k;g[d+20>>2]=1.0-(i*h+m*k);g[d+24>>2]=f*k-j*h;g[d+28>>2]=0.0;g[d+32>>2]=i*k-j*e;g[d+36>>2]=f*k+j*h;g[d+40>>2]=1.0-(i*h+f*e);g[d+44>>2]=0.0;Bd(a,d);l=d;return}function Qj(a,b){a=a|0;b=+b;var d=0,e=0,f=0;e=l;l=l+16|0;aj(12024);if((c[a+280>>2]|0)>0){d=0;do{f=c[(c[a+288>>2]|0)+(d<<2)>>2]|0;Xb[c[(c[f>>2]|0)+8>>2]&7](f,a,b);d=d+1|0;}while((d|0)<(c[a+280>>2]|0))}d=c[2388]|0;f=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=f;if(f|0){l=e;return}do if(c[d+4>>2]|0){Za(e|0,0)|0;f=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[e+4>>2]|0)-(c[f+4>>2]|0)+(((c[e>>2]|0)-(c[f>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=e;return}}while(0);c[2388]=c[d+20>>2];l=e;return}function Rj(b,d,e,f){b=b|0;d=d|0;e=+e;f=f|0;var h=0;h=Pr()|0;c[h>>2]=5e3;a[h+144>>0]=1;c[h+140>>2]=0;c[h+132>>2]=0;c[h+136>>2]=0;c[h+176>>2]=f;g[h+56>>2]=.019999999552965164;c[h+60>>2]=0;c[h+60+4>>2]=0;c[h+60+8>>2]=0;c[h+60+12>>2]=0;a[h+170>>0]=1;c[h+8>>2]=b;g[h+52>>2]=e;g[h+48>>2]=0.0;c[h+12>>2]=d;a[h+171>>0]=1;g[h+172>>2]=0.0;g[h+16>>2]=0.0;g[h+20>>2]=0.0;g[h+44>>2]=29.399999618530273;g[h+24>>2]=55.0;g[h+28>>2]=10.0;a[h+168>>0]=0;a[h+169>>0]=0;a[h+180>>0]=1;g[h+36>>2]=.7853981852531433;g[h+40>>2]=.7071067690849304;g[h+108>>2]=0.0;a[h+181>>0]=0;a[h+182>>0]=0;return h|0}function Sj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,k=0.0,m=0,n=0,o=0;f=l;l=l+48|0;Vb[c[(c[a>>2]|0)+124>>2]&127](a,f+32|0,e);o=c[f+32>>2]|0;n=c[f+32+4>>2]|0;m=c[f+32+8>>2]|0;c[b>>2]=o;c[b+4>>2]=n;c[b+8>>2]=m;g[b+12>>2]=0.0;e=c[(c[a>>2]|0)+64>>2]|0;k=-(c[j>>2]=o,+g[j>>2]);i=-(c[j>>2]=n,+g[j>>2]);h=-(c[j>>2]=m,+g[j>>2]);g[f>>2]=k;g[f+4>>2]=i;g[f+8>>2]=h;g[f+12>>2]=0.0;Vb[e&127](f+16|0,a,f);c[d>>2]=c[f+16>>2];c[d+4>>2]=c[f+16+4>>2];c[d+8>>2]=c[f+16+8>>2];c[d+12>>2]=c[f+16+12>>2];l=f;return}function Tj(a,b,d){a=a|0;b=b|0;d=d|0;do if(!((b|0)==8&(d|0)==8)){if((b|0)==8&(d|0)==1){a=a+76|0;break}if((b|0)==1&(d|0)==8){a=a+80|0;break}if(!(d|b)){a=a+72|0;break}if((b|0)<20&(d|0)==28){a=a+88|0;break}if((b|0)==28&(d|0)<20){a=a+84|0;break}if((b|0)<20){if((d|0)<20){a=a+32|0;break}if((d+-21|0)>>>0<9){a=a+36|0;break}}else{if((d|0)<20&(b+-21|0)>>>0<9){a=a+40|0;break}if((b|0)==31)if((d|0)==31){a=a+48|0;break}else{a=a+44|0;break}}if((d|0)==31){a=a+52|0;break}else{a=a+56|0;break}}else a=a+60|0;while(0);return c[a>>2]|0}function Uj(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0;h=l;l=l+48|0;c[h+32>>2]=e;c[h+32+4>>2]=f;n=+g[b>>2];m=+g[b+4>>2];i=+g[b+8>>2];k=+g[a+56>>2]*n+ +g[a+60>>2]*m+ +g[a+64>>2]*i;j=n*+g[a+72>>2]+m*+g[a+76>>2]+i*+g[a+80>>2];i=n*+g[a+88>>2]+m*+g[a+92>>2]+i*+g[a+96>>2];c[h>>2]=c[a+48>>2];c[h+4>>2]=h+32;g[h+8>>2]=k;g[h+12>>2]=j;g[h+16>>2]=i;g[h+20>>2]=0.0;g[h+24>>2]=d;f=c[a+44>>2]|0;d=+Lb[c[(c[f>>2]|0)+12>>2]&15](f,h,1);l=h;return +d}function Vj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;f=l;l=l+16|0;c[a+4>>2]=c[b+40>>2];e=c[b>>2]|0;c[a+76>>2]=e;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2];}else{e=fH(MG(e)|0)|0;Kl(f,e,+g[b+8>>2],+g[b+12>>2],+g[b+16>>2]);c[a+44>>2]=c[f>>2];c[a+44+4>>2]=c[f+4>>2];c[a+44+8>>2]=c[f+8>>2];c[a+44+12>>2]=c[f+12>>2];}c[a+60>>2]=c[b+24>>2];c[a+60+4>>2]=c[b+24+4>>2];c[a+60+8>>2]=c[b+24+8>>2];c[a+60+12>>2]=c[b+24+12>>2];l=f;return +(+g[b+40>>2])}function Wj(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if(e>>>0<3)switch(b|0){case 2:{g[a+756+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|4<<e*3;return}case 4:{g[a+772+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|2<<e*3;return}case 3:{g[a+740+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|1<<e*3;return}default:return}if((e+-3|0)>>>0>=3)return;switch(b|0){case 2:{g[a+868+(e+-3<<6)+32>>2]=d;c[a+1304>>2]=c[a+1304>>2]|4<<e*3;return}case 4:{g[a+868+(e+-3<<6)+36>>2]=d;c[a+1304>>2]=c[a+1304>>2]|2<<e*3;return}case 3:{g[a+868+(e+-3<<6)+28>>2]=d;c[a+1304>>2]=c[a+1304>>2]|1<<e*3;return}default:return}}function Xj(b,d,e){b=b|0;d=d|0;e=+e;var f=0;f=Pr()|0;c[f>>2]=5e3;a[f+144>>0]=1;c[f+140>>2]=0;c[f+132>>2]=0;c[f+136>>2]=0;c[f+176>>2]=1;g[f+56>>2]=.019999999552965164;c[f+60>>2]=0;c[f+60+4>>2]=0;c[f+60+8>>2]=0;c[f+60+12>>2]=0;a[f+170>>0]=1;c[f+8>>2]=b;g[f+52>>2]=e;g[f+48>>2]=0.0;c[f+12>>2]=d;a[f+171>>0]=1;g[f+172>>2]=0.0;g[f+16>>2]=0.0;g[f+20>>2]=0.0;g[f+44>>2]=29.399999618530273;g[f+24>>2]=55.0;g[f+28>>2]=10.0;a[f+168>>0]=0;a[f+169>>0]=0;a[f+180>>0]=1;g[f+36>>2]=.7853981852531433;g[f+40>>2]=.7071067690849304;g[f+108>>2]=0.0;a[f+181>>0]=0;a[f+182>>0]=0;return f|0}function Yj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=cs()|0;c[h+4>>2]=3;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4672;c[h+300>>2]=c[e>>2];c[h+300+4>>2]=c[e+4>>2];c[h+300+8>>2]=c[e+8>>2];c[h+300+12>>2]=c[e+12>>2];c[h+316>>2]=c[f>>2];c[h+316+4>>2]=c[f+4>>2];c[h+316+8>>2]=c[f+8>>2];c[h+316+12>>2]=c[f+12>>2];c[h+332>>2]=0;a[h+344>>0]=0;g[h+348>>2]=.30000001192092896;g[h+352>>2]=1.0;g[h+356>>2]=0.0;return h|0}function Zj(b){b=b|0;var d=0;c[b>>2]=4484;d=c[b+80>>2]|0;if(d|0){if(a[b+84>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+80>>2]=0;}a[b+84>>0]=1;c[b+80>>2]=0;c[b+72>>2]=0;c[b+76>>2]=0;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+60>>2]=0;}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;d=c[b+40>>2]|0;if(!d){a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;b=b+36|0;c[b>>2]=0;return}if(a[b+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+40>>2]=0;a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;b=b+36|0;c[b>>2]=0;return}function _j(b){b=b|0;var d=0;c[b>>2]=8848;d=c[b+64>>2]|0;if(d|0){if(a[b+68>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+64>>2]=0;}a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;d=c[b+44>>2]|0;if(d|0){if(a[b+48>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+44>>2]=0;}a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function $j(b){b=b|0;var d=0;c[b>>2]=5580;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){d=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[d>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;d=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[d>>2]=0;return}function ak(b){b=b|0;var d=0;c[b>>2]=9448;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+60>>2]=0;}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;d=c[b+40>>2]|0;if(d|0){if(a[b+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+40>>2]=0;}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function bk(){var a=0,b=0,d=0,e=0;e=l;l=l+48|0;a=xr()|0;if(a|0?(d=c[a>>2]|0,d|0):0){b=c[d+48>>2]|0;a=c[d+48+4>>2]|0;if(!((b&-256|0)==1126902528&(a|0)==1129074247)){c[e+24>>2]=22073;Cv(22023,e+24|0);}if((b|0)==1126902529&(a|0)==1129074247)a=c[d+44>>2]|0;else a=d+80|0;c[e+36>>2]=a;d=c[d>>2]|0;a=c[d+4>>2]|0;if(Zk(2736,d,e+36|0)|0){d=c[e+36>>2]|0;d=pb[c[(c[d>>2]|0)+8>>2]&127](d)|0;c[e>>2]=22073;c[e+4>>2]=a;c[e+8>>2]=d;Cv(21937,e);}else{c[e+16>>2]=22073;c[e+16+4>>2]=a;Cv(21982,e+16|0);}}Cv(22061,e+32|0);}function ck(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,156)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=3768;a[b+8>>0]=1;c[b+12>>2]=3980;c[b+60>>2]=d;c[b+64>>2]=0;a[b+88>>0]=1;c[b+84>>2]=0;c[b+76>>2]=0;c[b+80>>2]=0;a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;a[b+128>>0]=1;c[b+124>>2]=0;c[b+116>>2]=0;c[b+120>>2]=0;a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+16>>2]=c[f+8>>2];c[b+20>>2]=c[e+8>>2];Si(b+72|0);return b|0}function dk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,156)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=3768;a[b+8>>0]=0;c[b+12>>2]=3980;c[b+60>>2]=d;c[b+64>>2]=0;a[b+88>>0]=1;c[b+84>>2]=0;c[b+76>>2]=0;c[b+80>>2]=0;a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;a[b+128>>0]=1;c[b+124>>2]=0;c[b+116>>2]=0;c[b+120>>2]=0;a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+16>>2]=c[e+8>>2];c[b+20>>2]=c[f+8>>2];Si(b+72|0);return b|0}function ek(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var i=0;i=l;l=l+64|0;c[i+48>>2]=f;c[i+48+4>>2]=h;f=c[a+212>>2]|0;if(!(+g[f+4>>2]>=e)){l=i;return +e}c[i>>2]=c[a+216>>2];c[i+4>>2]=i+48;c[i+8>>2]=c[b>>2];c[i+8+4>>2]=c[b+4>>2];c[i+8+8>>2]=c[b+8>>2];c[i+8+12>>2]=c[b+12>>2];c[i+24>>2]=c[d>>2];c[i+24+4>>2]=c[d+4>>2];c[i+24+8>>2]=c[d+8>>2];c[i+24+12>>2]=c[d+12>>2];g[i+40>>2]=e;e=+Lb[c[(c[f>>2]|0)+12>>2]&15](f,i,0);l=i;return +e}function fk(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var i=0;i=l;l=l+64|0;c[i+48>>2]=f;c[i+48+4>>2]=h;f=c[a+212>>2]|0;if(!(+g[f+4>>2]>=e)){l=i;return +e}c[i>>2]=c[a+216>>2];c[i+4>>2]=i+48;c[i+8>>2]=c[b>>2];c[i+8+4>>2]=c[b+4>>2];c[i+8+8>>2]=c[b+8>>2];c[i+8+12>>2]=c[b+12>>2];c[i+24>>2]=c[d>>2];c[i+24+4>>2]=c[d+4>>2];c[i+24+8>>2]=c[d+8>>2];c[i+24+12>>2]=c[d+12>>2];g[i+40>>2]=e;e=+Lb[c[(c[f>>2]|0)+12>>2]&15](f,i,1);l=i;return +e}function gk(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;i=Qr()|0;xe(i,b,d,e,f,h);c[i>>2]=4612;c[i+4>>2]=9;a[i+1309>>0]=0;g[i+1316>>2]=0.0;g[i+1340>>2]=0.0;g[i+1364>>2]=1.0;a[i+1310>>0]=0;g[i+1320>>2]=0.0;g[i+1344>>2]=0.0;g[i+1368>>2]=1.0;a[i+1311>>0]=0;g[i+1324>>2]=0.0;g[i+1348>>2]=0.0;g[i+1372>>2]=1.0;a[i+1312>>0]=0;g[i+1328>>2]=0.0;g[i+1352>>2]=0.0;g[i+1376>>2]=1.0;a[i+1313>>0]=0;g[i+1332>>2]=0.0;g[i+1356>>2]=0.0;g[i+1380>>2]=1.0;a[i+1314>>0]=0;g[i+1336>>2]=0.0;g[i+1360>>2]=0.0;g[i+1384>>2]=1.0;return i|0}function hk(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0;c=l;l=l+48|0;d=2.0/+MD(b);f=+g[(fH(b)|0)>>2];e=+g[(MG(b)|0)>>2];i=+g[(LG(b)|0)>>2];h=+g[(KG(b)|0)>>2];g[c+32>>2]=1.0-(e*e*d+i*i*d);g[c+28>>2]=f*e*d-h*i*d;g[c+24>>2]=f*i*d+h*e*d;g[c+20>>2]=f*e*d+h*i*d;g[c+16>>2]=1.0-(f*f*d+i*i*d);g[c+12>>2]=e*i*d-h*f*d;g[c+8>>2]=f*i*d-h*e*d;g[c+4>>2]=e*i*d+h*f*d;g[c>>2]=1.0-(f*f*d+e*e*d);Qo(a,c+32|0,c+28|0,c+24|0,c+20|0,c+16|0,c+12|0,c+8|0,c+4|0,c);l=c;return}function ik(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[e+16>>2]|0;if(!f){if(!(ho(e)|0)){g=c[e+16>>2]|0;h=5;}}else{g=f;h=5;}a:do if((h|0)==5){f=c[e+20>>2]|0;if((g-f|0)>>>0<d>>>0){zb[c[e+36>>2]&63](e,b,d)|0;break}b:do if((a[e+75>>0]|0)>-1){h=d;while(1){if(!h){g=b;break b}g=h+-1|0;if((a[b+g>>0]|0)==10)break;else h=g;}if((zb[c[e+36>>2]&63](e,b,h)|0)>>>0<h>>>0)break a;g=b+h|0;d=d-h|0;f=c[e+20>>2]|0;}else g=b;while(0);Vh(f|0,g|0,d|0)|0;c[e+20>>2]=(c[e+20>>2]|0)+d;}while(0);return}function jk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=l;l=l+16|0;Vb[c[(c[b>>2]|0)+68>>2]&127](e,b,d);c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];i=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];k=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:i;j=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:h;f=i*i+h*h+f*f<1.4210854715202004e-14?-1.0:f;h=1.0/+G(+(f*f+(k*k+j*j)));i=+Db[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+i*h*k;g[a+4>>2]=i*h*j+ +g[a+4>>2];g[a+8>>2]=i*h*f+ +g[a+8>>2];l=e;return}function kk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=l;l=l+48|0;e=bF(b,0)|0;g[d+32>>2]=+Io(c,e);g[d+28>>2]=+ko(c,e);g[d+24>>2]=+jo(c,e);e=bF(b,1)|0;g[d+20>>2]=+Io(c,e);g[d+16>>2]=+ko(c,e);g[d+12>>2]=+jo(c,e);b=bF(b,2)|0;g[d+8>>2]=+Io(c,b);g[d+4>>2]=+ko(c,b);g[d>>2]=+jo(c,b);_p(a,d+32|0,d+28|0,d+24|0,d+20|0,d+16|0,d+12|0,d+8|0,d+4|0,d);l=d;return}function lk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=pb[c[(c[g>>2]|0)+36>>2]&127](g)|0;Vb[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;Vb[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0;}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=9;break}}if((h|0)==9)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function mk(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;i=+I(+c);h=+J(+c);c=+g[b+444>>2];if(+F(+i)>1.1920928955078125e-07){j=+g[b+448>>2];e=h*h;f=i*i;c=+G(+((h*h/(i*i)+1.0)/(1.0/(j*j)+h*h/(i*i)/(c*c))));}else{e=h*h;f=i*i;}c=c*.5;j=+J(+c)/+G(+(f+0.0+e));c=+I(+c);k=c*d+i*j*0.0-h*j*-0.0;f=c*0.0-h*j*d-j*0.0*0.0;e=c*0.0+j*0.0*0.0-i*j*d;d=-(j*0.0*d)-i*j*0.0-h*j*-0.0;g[a>>2]=h*j*f+(c*k+d*-(j*0.0))-e*-(i*j);g[a+4>>2]=e*-(j*0.0)+(c*f+d*-(i*j))-h*j*k;g[a+8>>2]=k*-(i*j)+(h*j*d+c*e)-f*-(j*0.0);g[a+12>>2]=0.0;return}function nk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0;g[b+16>>2]=0.0;g[b+20>>2]=0.0;a[b+168>>0]=0;a[b+169>>0]=0;g[b+172>>2]=0.0;c[b+60>>2]=0;c[b+60+4>>2]=0;c[b+60+8>>2]=0;c[b+60+12>>2]=0;b=c[(c[b+8>>2]|0)+284>>2]|0;if((c[(pb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+4>>2]|0)<=0)return;do{f=c[b>>2]|0;h=c[f+12>>2]|0;f=c[c[(pb[c[f+28>>2]&127](b)|0)+12>>2]>>2]|0;e=c[(c[(pb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+12>>2]|0)+4>>2]|0;tb[h&31](b,f,e,c[d+24>>2]|0)|0;}while((c[(pb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+4>>2]|0)>0);return}function ok(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[6139]=(c[6139]|0)+-1;nb[c[(c[a>>2]|0)+20>>2]&127](a,b);e=c[b+768>>2]|0;d=(c[a+12>>2]|0)+-1|0;g=c[a+20>>2]|0;f=c[g+(e<<2)>>2]|0;c[g+(e<<2)>>2]=c[g+(d<<2)>>2];c[(c[a+20>>2]|0)+(d<<2)>>2]=f;c[(c[(c[a+20>>2]|0)+(e<<2)>>2]|0)+768>>2]=e;c[a+12>>2]=d;a=c[a+68>>2]|0;if(!b)return;g=c[a+16>>2]|0;if(g>>>0<=b>>>0?(g+(S(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;return}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}
function zd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var i=0,j=0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0;i=l;l=l+464|0;aj(15827);c[i+128>>2]=c[d>>2];c[i+128+4>>2]=c[d+4>>2];c[i+128+8>>2]=c[d+8>>2];c[i+128+12>>2]=c[d+12>>2];c[i+128+16>>2]=c[d+16>>2];c[i+128+16+4>>2]=c[d+16+4>>2];c[i+128+16+8>>2]=c[d+16+8>>2];c[i+128+16+12>>2]=c[d+16+12>>2];c[i+128+32>>2]=c[d+32>>2];c[i+128+32+4>>2]=c[d+32+4>>2];c[i+128+32+8>>2]=c[d+32+8>>2];c[i+128+32+12>>2]=c[d+32+12>>2];k=i+128+48|0;c[k>>2]=c[d+48>>2];c[k+4>>2]=c[d+48+4>>2];c[k+8>>2]=c[d+48+8>>2];c[k+12>>2]=c[d+48+12>>2];c[i+64>>2]=c[e>>2];c[i+64+4>>2]=c[e+4>>2];c[i+64+8>>2]=c[e+8>>2];c[i+64+12>>2]=c[e+12>>2];c[i+64+16>>2]=c[e+16>>2];c[i+64+16+4>>2]=c[e+16+4>>2];c[i+64+16+8>>2]=c[e+16+8>>2];c[i+64+16+12>>2]=c[e+16+12>>2];c[i+64+32>>2]=c[e+32>>2];c[i+64+32+4>>2]=c[e+32+4>>2];c[i+64+32+8>>2]=c[e+32+8>>2];c[i+64+32+12>>2]=c[e+32+12>>2];j=i+64+48|0;c[j>>2]=c[e+48>>2];c[j+4>>2]=c[e+48+4>>2];c[j+8>>2]=c[e+48+8>>2];c[j+12>>2]=c[e+48+12>>2];tf(i+128|0,i+64|0,i+256|0,i+192|0);t=+g[i+192>>2];m=t*+g[i+256+4>>2];r=t*+g[i+256+8>>2];g[i+16>>2]=+g[i+256>>2]*t;g[i+16+4>>2]=m;g[i+16+8>>2]=r;g[i+16+12>>2]=0.0;c[i+256>>2]=0;c[i+256+4>>2]=0;c[i+256+8>>2]=0;c[i+256+12>>2]=0;c[i+192+48>>2]=0;c[i+192+48+4>>2]=0;c[i+192+48+8>>2]=0;c[i+192+48+12>>2]=0;fh(i+128|0,i);r=+g[i>>2];m=+g[i+4>>2];t=+g[i+8>>2];q=+g[i+12>>2];o=r*(2.0/(r*r+m*m+t*t+q*q));n=m*(2.0/(r*r+m*m+t*t+q*q));p=t*(2.0/(r*r+m*m+t*t+q*q));g[i+192>>2]=1.0-(m*n+t*p);g[i+192+4>>2]=r*n-q*p;g[i+192+8>>2]=r*p+q*n;g[i+192+12>>2]=0.0;g[i+192+16>>2]=r*n+q*p;g[i+192+20>>2]=1.0-(r*o+t*p);g[i+192+24>>2]=m*p-q*o;g[i+192+28>>2]=0.0;g[i+192+32>>2]=r*p-q*n;g[i+192+36>>2]=m*p+q*o;g[i+192+40>>2]=1.0-(r*o+m*n);g[i+192+44>>2]=0.0;Ug(b,i+192|0,i+256|0,i+16|0,i+48|0,i+32|0);c[i+256>>2]=6060;c[i+256+36>>2]=c[d>>2];c[i+256+36+4>>2]=c[d+4>>2];c[i+256+36+8>>2]=c[d+8>>2];c[i+256+36+12>>2]=c[d+12>>2];c[i+256+52>>2]=c[d+16>>2];c[i+256+52+4>>2]=c[d+16+4>>2];c[i+256+52+8>>2]=c[d+16+8>>2];c[i+256+52+12>>2]=c[d+16+12>>2];c[i+256+68>>2]=c[d+32>>2];c[i+256+68+4>>2]=c[d+32+4>>2];c[i+256+68+8>>2]=c[d+32+8>>2];c[i+256+68+12>>2]=c[d+32+12>>2];s=i+256+84|0;c[s>>2]=c[d+48>>2];c[s+4>>2]=c[d+48+4>>2];c[s+8>>2]=c[d+48+8>>2];c[s+12>>2]=c[d+48+12>>2];c[i+256+100>>2]=c[e>>2];c[i+256+100+4>>2]=c[e+4>>2];c[i+256+100+8>>2]=c[e+8>>2];c[i+256+100+12>>2]=c[e+12>>2];c[i+256+116>>2]=c[e+16>>2];c[i+256+116+4>>2]=c[e+16+4>>2];c[i+256+116+8>>2]=c[e+16+8>>2];c[i+256+116+12>>2]=c[e+16+12>>2];c[i+256+132>>2]=c[e+32>>2];c[i+256+132+4>>2]=c[e+32+4>>2];c[i+256+132+8>>2]=c[e+32+8>>2];c[i+256+132+12>>2]=c[e+32+12>>2];d=i+256+148|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];c[i+256+180>>2]=a;c[i+256+184>>2]=f;g[i+256+188>>2]=h;c[i+256+192>>2]=b;n=+g[d>>2]-+g[s>>2];m=+g[i+256+152>>2]-+g[i+256+88>>2];o=+g[i+256+156>>2]-+g[i+256+92>>2];h=1.0/+G(+(n*n+m*m+o*o));r=n*h==0.0?999999984306749440.0:1.0/(n*h);g[i+256+4>>2]=r;q=m*h==0.0?999999984306749440.0:1.0/(m*h);g[i+256+8>>2]=q;p=o*h==0.0?999999984306749440.0:1.0/(o*h);g[i+256+12>>2]=p;c[i+256+20>>2]=r<0.0&1;c[i+256+24>>2]=q<0.0&1;c[i+256+28>>2]=p<0.0&1;g[i+256+32>>2]=o*o*h+(n*n*h+m*m*h);a=c[a+68>>2]|0;Bb[c[(c[a>>2]|0)+24>>2]&7](a,k,j,i+256|0,i+48|0,i+32|0);a=c[2388]|0;f=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=f;if(f|0){l=i;return}do if(c[a+4>>2]|0){Za(i+256|0,0)|0;s=c[6435]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[i+256+4>>2]|0)-(c[s+4>>2]|0)+(((c[i+256>>2]|0)-(c[s>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2388]|0;break}else{l=i;return}}while(0);c[2388]=c[a+20>>2];l=i;return}function Ad(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;t=l;l=l+32|0;g=pb[c[(c[d>>2]|0)+28>>2]&127](d)|0;c[e+20>>2]=g;c[e>>2]=0;if(!g){s=d+4|0;f=e+4|0;s=c[s>>2]|0;c[f>>2]=s;f=d+8|0;f=c[f>>2]|0;s=e+8|0;c[s>>2]=f;s=d+12|0;s=c[s>>2]|0;f=e+12|0;c[f>>2]=s;d=d+16|0;d=c[d>>2]|0;f=e+16|0;c[f>>2]=d;l=t;return 19452}s=zb[c[(c[f>>2]|0)+16>>2]&63](f,32,g)|0;g=c[s+8>>2]|0;c[e>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;r=pb[c[(c[d>>2]|0)+28>>2]&127](d)|0;a:do if((r|0)>0){q=0;while(1){Jb[c[(c[d>>2]|0)+16>>2]&3](d,t+28|0,t+4|0,t+16|0,t+8|0,t+24|0,t+20|0,t,t+12|0,q);i=c[t>>2]|0;c[g+24>>2]=i;c[g+28>>2]=c[t+4>>2];j=g+12|0;m=g+16|0;p=g+4|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;switch(c[t+12>>2]|0){case 2:{if(i|0){j=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,i*3|0)|0;k=c[j+8>>2]|0;c[g+8>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,k)|0;if((c[t>>2]|0)>0){m=c[t+24>>2]|0;i=0;do{n=m+(S(c[t+20>>2]|0,i)|0)|0;o=i*3|0;c[k+(o<<2)>>2]=c[n>>2];c[k+(o+1<<2)>>2]=c[n+4>>2];c[k+(o+2<<2)>>2]=c[n+8>>2];i=i+1|0;}while((i|0)<(c[t>>2]|0))}jb[c[(c[f>>2]|0)+20>>2]&31](f,j,19333,1497453121,c[j+8>>2]|0);}break}case 3:{if(i|0){n=zb[c[(c[f>>2]|0)+16>>2]&63](f,8,i)|0;o=c[n+8>>2]|0;c[j>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,o)|0;j=c[t>>2]|0;if((j|0)>0){k=c[t+24>>2]|0;m=c[t+20>>2]|0;i=0;do{u=k+(S(m,i)|0)|0;b[o+(i<<3)>>1]=b[u>>1]|0;b[o+(i<<3)+2>>1]=b[u+2>>1]|0;b[o+(i<<3)+4>>1]=b[u+4>>1]|0;i=i+1|0;}while((i|0)!=(j|0))}jb[c[(c[f>>2]|0)+20>>2]&31](f,n,19348,1497453121,c[n+8>>2]|0);}break}case 5:{if(i|0){j=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,i)|0;k=c[j+8>>2]|0;c[m>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,k)|0;if((c[t>>2]|0)>0){i=0;do{u=(c[t+24>>2]|0)+(S(c[t+20>>2]|0,i)|0)|0;a[k+(i<<2)>>0]=a[u>>0]|0;a[k+(i<<2)+1>>0]=a[u+1>>0]|0;a[k+(i<<2)+2>>0]=a[u+2>>0]|0;i=i+1|0;}while((i|0)<(c[t>>2]|0))}jb[c[(c[f>>2]|0)+20>>2]&31](f,j,19375,1497453121,c[j+8>>2]|0);}break}default:{}}switch(c[t+16>>2]|0){case 0:{i=c[t+4>>2]|0;if(i|0){j=zb[c[(c[f>>2]|0)+16>>2]&63](f,16,i)|0;k=c[j+8>>2]|0;c[g>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,k)|0;m=c[t+4>>2]|0;if((m|0)>0){n=c[t+28>>2]|0;o=c[t+8>>2]|0;i=0;do{u=n+(S(o,i)|0)|0;c[k+(i<<4)>>2]=c[u>>2];c[k+(i<<4)+4>>2]=c[u+4>>2];c[k+(i<<4)+8>>2]=c[u+8>>2];i=i+1|0;}while((i|0)!=(m|0))}jb[c[(c[f>>2]|0)+20>>2]&31](f,j,19398,1497453121,c[j+8>>2]|0);}break}case 1:{i=c[t+4>>2]|0;if(i|0){n=zb[c[(c[f>>2]|0)+16>>2]&63](f,32,i)|0;o=c[n+8>>2]|0;c[p>>2]=Kb[c[(c[f>>2]|0)+28>>2]&31](f,o)|0;j=c[t+4>>2]|0;if((j|0)>0){k=c[t+28>>2]|0;m=c[t+8>>2]|0;i=0;do{u=k+(S(m,i)|0)|0;h[o+(i<<5)>>3]=+h[u>>3];h[o+(i<<5)+8>>3]=+h[u+8>>3];h[o+(i<<5)+16>>3]=+h[u+16>>3];i=i+1|0;}while((i|0)!=(j|0))}jb[c[(c[f>>2]|0)+20>>2]&31](f,n,19417,1497453121,c[n+8>>2]|0);}break}default:{}}nb[c[(c[d>>2]|0)+24>>2]&127](d,q);q=q+1|0;if((q|0)==(r|0)){g=f;break a}else g=g+32|0;}}else g=f;while(0);jb[c[(c[g>>2]|0)+20>>2]&31](f,s,19437,1497453121,c[s+8>>2]|0);u=d+4|0;f=e+4|0;u=c[u>>2]|0;c[f>>2]=u;f=d+8|0;f=c[f>>2]|0;u=e+8|0;c[u>>2]=f;u=d+12|0;u=c[u>>2]|0;f=e+12|0;c[f>>2]=u;f=d+16|0;f=c[f>>2]|0;u=e+16|0;c[u>>2]=f;l=t;return 19452}function Bd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;o=c[a+192>>2]|0;n=+Db[c[(c[o>>2]|0)+48>>2]&15](o);o=c[a+712>>2]|0;if((o|0)>0){i=0;do{m=c[a+720>>2]|0;f=m+(i*104|0)+8|0;q=+g[f>>2];h=m+(i*104|0)+12|0;p=+g[h>>2];d=m+(i*104|0)+16|0;l=+g[d>>2];j=q*+g[b>>2]+p*+g[b+4>>2]+l*+g[b+8>>2]+ +g[b+48>>2];k=q*+g[b+16>>2]+p*+g[b+20>>2]+l*+g[b+24>>2]+ +g[b+52>>2];l=q*+g[b+32>>2]+p*+g[b+36>>2]+l*+g[b+40>>2]+ +g[b+56>>2];g[f>>2]=j;g[h>>2]=k;g[d>>2]=l;g[m+(i*104|0)+20>>2]=0.0;d=m+(i*104|0)+24|0;p=+g[d>>2];h=m+(i*104|0)+28|0;q=+g[h>>2];f=m+(i*104|0)+32|0;r=+g[f>>2];s=p*+g[b+16>>2]+q*+g[b+20>>2]+r*+g[b+24>>2]+ +g[b+52>>2];t=p*+g[b+32>>2]+q*+g[b+36>>2]+r*+g[b+40>>2]+ +g[b+56>>2];g[d>>2]=p*+g[b>>2]+q*+g[b+4>>2]+r*+g[b+8>>2]+ +g[b+48>>2];g[h>>2]=s;g[f>>2]=t;g[m+(i*104|0)+36>>2]=0.0;f=m+(i*104|0)+72|0;t=+g[f>>2];h=m+(i*104|0)+76|0;s=+g[h>>2];d=m+(i*104|0)+80|0;r=+g[d>>2];q=t*+g[b+16>>2]+s*+g[b+20>>2]+r*+g[b+24>>2];p=t*+g[b+32>>2]+s*+g[b+36>>2]+r*+g[b+40>>2];g[f>>2]=+g[b>>2]*t+ +g[b+4>>2]*s+ +g[b+8>>2]*r;g[h>>2]=q;g[d>>2]=p;g[m+(i*104|0)+84>>2]=0.0;m=c[m+(i*104|0)+96>>2]|0;d=hg(a+928|0,m)|0;a:do if(d){h=c[a+936>>2]|0;if((h|0)<=-1){d=c[a+928>>2]|0;break}if(h){e=0;while(1){f=c[d+32>>2]|0;e=e+1|0;if(!f)break a;if((e|0)>=(h|0)){d=f;break}else d=f;}}}else d=0;while(0);g[m>>2]=j-n;g[m+4>>2]=k-n;g[m+8>>2]=l-n;g[m+12>>2]=0.0;g[m+16>>2]=n+j;g[m+20>>2]=n+k;g[m+24>>2]=n+l;g[m+28>>2]=0.0;Fe(a+928|0,d,m);i=i+1|0;}while((i|0)!=(o|0))}jg(a);d=c[a+928>>2]|0;if(d){o=c[a+192>>2]|0;r=+Db[c[(c[o>>2]|0)+48>>2]&15](o);t=+g[d+4>>2]-r;s=+g[d+8>>2]-r;g[a+892>>2]=+g[d>>2]-r;g[a+896>>2]=t;g[a+900>>2]=s;g[a+904>>2]=0.0;s=r+ +g[d+20>>2];t=r+ +g[d+24>>2];g[a+908>>2]=r+ +g[d+16>>2];g[a+912>>2]=s;g[a+916>>2]=t;g[a+920>>2]=0.0;d=c[a+188>>2]|0;if(d|0){o=c[a+684>>2]|0;m=c[o+32>>2]|0;jb[c[(c[m>>2]|0)+16>>2]&31](m,d,a+892|0,a+908|0,c[o+36>>2]|0);}}else{c[a+892>>2]=0;c[a+892+4>>2]=0;c[a+892+8>>2]=0;c[a+892+12>>2]=0;c[a+892+16>>2]=0;c[a+892+20>>2]=0;c[a+892+24>>2]=0;c[a+892+28>>2]=0;}e=c[a+732>>2]|0;if((e|0)<=0){Ff(a);o=a+1148|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=b+16|0;m=a+1164|0;c[m>>2]=c[o>>2];c[m+4>>2]=c[o+4>>2];c[m+8>>2]=c[o+8>>2];c[m+12>>2]=c[o+12>>2];m=b+32|0;o=a+1180|0;c[o>>2]=c[m>>2];c[o+4>>2]=c[m+4>>2];c[o+8>>2]=c[m+8>>2];c[o+12>>2]=c[m+12>>2];o=b+48|0;b=a+1196|0;c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];c[b+12>>2]=c[o+12>>2];return}f=c[a+740>>2]|0;d=0;do{m=c[f+(d*52|0)+8>>2]|0;o=c[f+(d*52|0)+12>>2]|0;r=+g[m+8>>2]-+g[o+8>>2];s=+g[m+12>>2]-+g[o+12>>2];t=+g[m+16>>2]-+g[o+16>>2];t=+G(+(r*r+s*s+t*t));g[f+(d*52|0)+16>>2]=t;g[f+(d*52|0)+28>>2]=t*t;d=d+1|0;}while((d|0)!=(e|0));d=0;do{g[f+(d*52|0)+24>>2]=(+g[(c[f+(d*52|0)+8>>2]|0)+88>>2]+ +g[(c[f+(d*52|0)+12>>2]|0)+88>>2])/+g[(c[f+(d*52|0)+4>>2]|0)+4>>2];d=d+1|0;}while((d|0)!=(e|0));Ff(a);o=a+1148|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=b+16|0;m=a+1164|0;c[m>>2]=c[o>>2];c[m+4>>2]=c[o+4>>2];c[m+8>>2]=c[o+8>>2];c[m+12>>2]=c[o+12>>2];m=b+32|0;o=a+1180|0;c[o>>2]=c[m>>2];c[o+4>>2]=c[m+4>>2];c[o+8>>2]=c[m+8>>2];c[o+12>>2]=c[m+12>>2];o=b+48|0;b=a+1196|0;c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];c[b+12>>2]=c[o+12>>2];return}function Cd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0;if(a[b+165>>0]|0){h=c[b+88>>2]|0;a:do if((h|0)>0&e){f=c[b+96>>2]|0;j=+g[d>>2];k=+g[d+4>>2];l=+g[d+8>>2];m=+g[b+168>>2];e=0;while(1){s=+g[f+(e<<4)>>2]-j;r=+g[f+(e<<4)+4>>2]-k;q=+g[f+(e<<4)+8>>2]-l;if(s*s+r*r+q*q<=m)break;e=e+1|0;if((e|0)>=(h|0))break a}return e|0}while(0);p=(c[b+32>>2]|0)+12|0;c[p>>2]=(c[p>>2]|0)+1;if((h|0)==(c[b+92>>2]|0)?(i=h|0?h<<1:1,(h|0)<(i|0)):0){if(!i)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((i<<4|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}h=c[b+88>>2]|0;}if((h|0)>0){f=0;do{p=e+(f<<4)|0;o=(c[b+96>>2]|0)+(f<<4)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];f=f+1|0;}while((f|0)!=(h|0))}f=c[b+96>>2]|0;if(f|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=e;c[b+92>>2]=i;e=c[b+88>>2]|0;}else e=h;p=(c[b+96>>2]|0)+(e<<4)|0;c[p>>2]=c[d>>2];c[p+4>>2]=c[d+4>>2];c[p+8>>2]=c[d+8>>2];c[p+12>>2]=c[d+12>>2];d=c[b+88>>2]|0;c[b+88>>2]=d+1;c[(c[b+32>>2]|0)+16>>2]=c[b+96>>2];return d|0}h=c[b+108>>2]|0;b:do if((h|0)>0&e){f=c[b+116>>2]|0;j=+g[d>>2];k=+g[d+4>>2];l=+g[d+8>>2];m=+g[b+168>>2];e=0;while(1){q=+g[f+(e<<2)>>2]-j;r=+g[f+(e+1<<2)>>2]-k;s=+g[f+(e+2<<2)>>2]-l;i=e+3|0;if(q*q+r*r+s*s<=m)break;if((i|0)<(h|0))e=i;else break b}d=(e|0)/3|0;return d|0}while(0);e=c[b+112>>2]|0;if((h|0)==(e|0)){n=h|0?h<<1:1;if((h|0)<(n|0)){if(!n)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}h=c[b+108>>2]|0;}i=c[b+116>>2]|0;if((h|0)<=0)if(!i)f=b+120|0;else p=34;else{f=0;do{c[e+(f<<2)>>2]=c[i+(f<<2)>>2];f=f+1|0;}while((f|0)!=(h|0));p=34;}if((p|0)==34){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+116>>2]=0;f=b+120|0;}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;f=c[b+108>>2]|0;i=n;}else{f=h;i=h;}}else{f=h;i=e;}h=c[b+116>>2]|0;c[h+(f<<2)>>2]=c[d>>2];e=f+1|0;c[b+108>>2]=e;if((e|0)==(i|0)){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}i=c[b+108>>2]|0;h=c[b+116>>2]|0;}if((i|0)<=0)if(!h)f=b+120|0;else p=48;else{f=0;do{c[e+(f<<2)>>2]=c[h+(f<<2)>>2];f=f+1|0;}while((f|0)!=(i|0));p=48;}if((p|0)==48){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+116>>2]=0;f=b+120|0;}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;o=e;f=c[b+108>>2]|0;i=n;}else{o=h;f=i;e=h;}}else{o=h;f=e;e=h;}c[o+(f<<2)>>2]=c[d+4>>2];f=f+1|0;c[b+108>>2]=f;if((f|0)==(i|0)){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n){e=0;h=o;}else{c[6436]=(c[6436]|0)+1;e=ic((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}i=c[b+108>>2]|0;h=c[b+116>>2]|0;}if((i|0)<=0)if(!h)f=b+120|0;else p=62;else{f=0;do{c[e+(f<<2)>>2]=c[h+(f<<2)>>2];f=f+1|0;}while((f|0)!=(i|0));p=62;}if((p|0)==62){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+116>>2]=0;f=b+120|0;}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;h=e;f=c[b+108>>2]|0;}else{h=o;f=i;}}else h=o;c[h+(f<<2)>>2]=c[d+8>>2];d=f+1|0;c[b+108>>2]=d;b=c[b+32>>2]|0;c[b+12>>2]=(c[b+12>>2]|0)+1;c[b+16>>2]=e;d=((d|0)/3|0)+-1|0;return d|0}function Dd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0,j=0,k=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0;p=l;l=l+128|0;c[b+68>>2]=(c[b+68>>2]|0)+1;c[p>>2]=c[d>>2];c[p+4>>2]=c[d+4>>2];c[p+8>>2]=c[d+8>>2];c[p+12>>2]=c[d+12>>2];c[p+16>>2]=c[d+16>>2];c[p+16+4>>2]=c[d+16+4>>2];c[p+16+8>>2]=c[d+16+8>>2];c[p+16+12>>2]=c[d+16+12>>2];c[p+32>>2]=c[d+32>>2];c[p+32+4>>2]=c[d+32+4>>2];c[p+32+8>>2]=c[d+32+8>>2];c[p+32+12>>2]=c[d+32+12>>2];c[p+48>>2]=c[d+48>>2];c[p+48+4>>2]=c[d+48+4>>2];c[p+48+8>>2]=c[d+48+8>>2];c[p+48+12>>2]=c[d+48+12>>2];n=c[e+4>>2]|0;o=+Db[c[(c[e>>2]|0)+48>>2]&15](e);Zb[c[(c[e>>2]|0)+8>>2]&127](e,d,p+112|0,p+96|0);f=+g[p+112>>2];if(+g[b+32>>2]>f)g[b+32>>2]=f;f=+g[p+96>>2];if(+g[b+48>>2]<f)g[b+48>>2]=f;f=+g[p+112+4>>2];if(+g[b+36>>2]>f)g[b+36>>2]=f;f=+g[p+96+4>>2];if(+g[b+52>>2]<f)g[b+52>>2]=f;f=+g[p+112+8>>2];if(+g[b+40>>2]>f)g[b+40>>2]=f;f=+g[p+96+8>>2];if(+g[b+56>>2]<f)g[b+56>>2]=f;k=c[b+64>>2]|0;if(!k){k=b+16|0;j=0;}else{c[p+64>>2]=c[p+112>>2];c[p+64+4>>2]=c[p+112+4>>2];c[p+64+8>>2]=c[p+112+8>>2];c[p+64+12>>2]=c[p+112+12>>2];c[p+64+16>>2]=c[p+96>>2];c[p+64+16+4>>2]=c[p+96+4>>2];c[p+64+16+8>>2]=c[p+96+8>>2];c[p+64+16+12>>2]=c[p+96+12>>2];j=c[b+16>>2]|0;d=c[k+4>>2]|0;if(!d){c[6436]=(c[6436]|0)+1;d=ic(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}h=d;i=h+44|0;do{c[h>>2]=0;h=h+4|0;}while((h|0)<(i|0))}else c[k+4>>2]=0;c[d+32>>2]=0;c[d+36>>2]=j;c[d+40>>2]=0;c[d>>2]=c[p+64>>2];c[d+4>>2]=c[p+64+4>>2];c[d+8>>2]=c[p+64+8>>2];c[d+12>>2]=c[p+64+12>>2];c[d+16>>2]=c[p+64+16>>2];c[d+20>>2]=c[p+64+20>>2];c[d+24>>2]=c[p+64+24>>2];c[d+28>>2]=c[p+64+28>>2];Fe(k,c[k>>2]|0,d);c[k+12>>2]=(c[k+12>>2]|0)+1;k=b+16|0;j=d;}d=c[k>>2]|0;if((d|0)==(c[b+20>>2]|0)?(m=d|0?d<<1:1,(d|0)<(m|0)):0){if(!m)i=0;else{c[6436]=(c[6436]|0)+1;d=ic((m*80|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=d;d=c[k>>2]|0;}if((d|0)>0){h=0;do{q=i+(h*80|0)|0;r=c[b+24>>2]|0;s=r+(h*80|0)|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=r+(h*80|0)+16|0;s=i+(h*80|0)+16|0;c[s>>2]=c[q>>2];c[s+4>>2]=c[q+4>>2];c[s+8>>2]=c[q+8>>2];c[s+12>>2]=c[q+12>>2];s=r+(h*80|0)+32|0;q=i+(h*80|0)+32|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=i+(h*80|0)+48|0;s=r+(h*80|0)+48|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=i+(h*80|0)+64|0;r=r+(h*80|0)+64|0;c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];h=h+1|0;}while((h|0)!=(d|0))}d=c[b+24>>2]|0;if(d|0){if(a[b+28>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+24>>2]=0;}a[b+28>>0]=1;c[b+24>>2]=i;c[b+20>>2]=m;d=c[k>>2]|0;}s=c[b+24>>2]|0;r=s+(d*80|0)|0;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];c[r+12>>2]=c[p+12>>2];r=s+(d*80|0)+16|0;c[r>>2]=c[p+16>>2];c[r+4>>2]=c[p+16+4>>2];c[r+8>>2]=c[p+16+8>>2];c[r+12>>2]=c[p+16+12>>2];r=s+(d*80|0)+32|0;c[r>>2]=c[p+32>>2];c[r+4>>2]=c[p+32+4>>2];c[r+8>>2]=c[p+32+8>>2];c[r+12>>2]=c[p+32+12>>2];r=s+(d*80|0)+48|0;c[r>>2]=c[p+48>>2];c[r+4>>2]=c[p+48+4>>2];c[r+8>>2]=c[p+48+8>>2];c[r+12>>2]=c[p+48+12>>2];s=s+(d*80|0)+64|0;c[s>>2]=e;c[s+4>>2]=n;g[s+8>>2]=o;c[s+12>>2]=j;c[k>>2]=(c[k>>2]|0)+1;l=p;return}function Ed(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,m=0,n=0.0,o=0.0;m=l;l=l+384|0;f=c[d+36>>2]|0;d=c[e+36>>2]|0;e=c[b+24>>2]|0;if(((e|0)==(c[b+28>>2]|0)?c[e+1132>>2]|0:0)?(j=(S(c[d+380>>2]|0,c[e+1112>>2]|0)|0)+(c[f+380>>2]|0)|0,a[(c[e+1140>>2]|0)+j>>0]|0):0){c[5803]=(c[5803]|0)+1;l=m;return}c[m+328+4>>2]=35;c[m+328+8>>2]=0;c[m+328+12>>2]=1065353216;c[m+328+16>>2]=1065353216;c[m+328+20>>2]=1065353216;g[m+328+24>>2]=0.0;c[m+328>>2]=3564;c[m+328+52>>2]=f;g[m+328+44>>2]=0.0;c[m+272+4>>2]=35;c[m+272+8>>2]=0;c[m+272+12>>2]=1065353216;c[m+272+16>>2]=1065353216;c[m+272+20>>2]=1065353216;g[m+272+24>>2]=0.0;c[m+272>>2]=3564;c[m+272+52>>2]=d;g[m+272+44>>2]=0.0;if((a[22576]|0)==0?iy(22576)|0:0){if((a[22584]|0)==0?iy(22584)|0:0){c[5728]=1065353216;c[5729]=0;c[5730]=0;c[5731]=0;c[5732]=0;c[5733]=1065353216;c[5734]=0;c[5735]=0;c[5736]=0;c[5737]=0;c[5738]=1065353216;g[5739]=0.0;}c[5712]=c[5728];c[5713]=c[5729];c[5714]=c[5730];c[5715]=c[5731];c[5716]=c[5732];c[5717]=c[5733];c[5718]=c[5734];c[5719]=c[5735];c[5720]=c[5736];c[5721]=c[5737];c[5722]=c[5738];c[5723]=c[5739];c[5724]=0;c[5725]=0;c[5726]=0;c[5727]=0;}if((a[22576]|0)==0?iy(22576)|0:0){if((a[22584]|0)==0?iy(22584)|0:0){c[5728]=1065353216;c[5729]=0;c[5730]=0;c[5731]=0;c[5732]=0;c[5733]=1065353216;c[5734]=0;c[5735]=0;c[5736]=0;c[5737]=0;c[5738]=1065353216;g[5739]=0.0;}c[5712]=c[5728];c[5713]=c[5729];c[5714]=c[5730];c[5715]=c[5731];c[5716]=c[5732];c[5717]=c[5733];c[5718]=c[5734];c[5719]=c[5735];c[5720]=c[5736];c[5721]=c[5737];c[5722]=c[5738];c[5723]=c[5739];c[5724]=0;c[5725]=0;c[5726]=0;c[5727]=0;}o=+g[f+232>>2]-+g[d+232>>2];n=+g[f+236>>2]-+g[d+236>>2];g[m>>2]=+g[f+228>>2]-+g[d+228>>2];g[m+4>>2]=o;g[m+8>>2]=n;g[m+12>>2]=0.0;if(!(!(vd(m+328|0,22848,m+272|0,22848,m,m+216|0)|0)?!(Ac(m+328|0,22848,m+272|0,22848,m,m+216|0,0)|0):0))h=19;if((h|0)==19?(c[m+4>>2]=0,c[m+4+4>>2]=0,c[m+4+8>>2]=0,c[m+4+12>>2]=0,c[m+4+16>>2]=0,c[m+4+20>>2]=0,a[m+152>>0]=0,c[m>>2]=3384,nd(b,m+216|0,f,0,0,d,0,0,m)|0):0){c[6436]=(c[6436]|0)+1;d=ic(235)|0;if(!d)j=0;else{c[(d+4+15&-16)+-4>>2]=d;j=d+4+15&-16;}e=j+4|0;d=j+152|0;Ik(e|0,0,212)|0;c[j>>2]=3384;f=m+4|0;h=e+100|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0;}while((e|0)<(h|0));e=j+104|0;c[e>>2]=c[m+104>>2];c[e+4>>2]=c[m+104+4>>2];c[e+8>>2]=c[m+104+8>>2];c[e+12>>2]=c[m+104+12>>2];e=j+120|0;c[e>>2]=c[m+120>>2];c[e+4>>2]=c[m+120+4>>2];c[e+8>>2]=c[m+120+8>>2];c[e+12>>2]=c[m+120+12>>2];e=j+136|0;c[e>>2]=c[m+136>>2];c[e+4>>2]=c[m+136+4>>2];c[e+8>>2]=c[m+136+8>>2];c[e+12>>2]=c[m+136+12>>2];a[d>>0]=a[m+152>>0]|0;e=j+156|0;f=m+156|0;h=e+60|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0;}while((e|0)<(h|0));h=c[b+24>>2]|0;i=j;d=c[h+852>>2]|0;if((d|0)==(c[h+856>>2]|0)?(k=d|0?d<<1:1,(d|0)<(k|0)):0){if(!k)f=0;else{c[6436]=(c[6436]|0)+1;d=ic((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=d;d=c[h+852>>2]|0;}if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[h+860>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(d|0))}e=c[h+860>>2]|0;if(e){if(a[h+864>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[h+852>>2]|0;}c[h+860>>2]=0;}a[h+864>>0]=1;c[h+860>>2]=f;c[h+856>>2]=k;}c[(c[h+860>>2]|0)+(d<<2)>>2]=i;c[h+852>>2]=d+1;i=c[b+24>>2]|0;k=c[b+28>>2]|0;n=+g[i+348>>2];o=+g[k+348>>2];b=j+64|0;g[b>>2]=+g[b>>2]*(n>o?n:o);b=j+68|0;g[b>>2]=+g[b>>2]*(+g[i+360>>2]+ +g[k+360>>2])*.5;}l=m;return}function Fd(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0;m=l;l=l+16|0;if(!(a[b+1308>>0]|0)){l=m;return}g[b+928>>2]=0.0;g[b+992>>2]=0.0;g[b+1056>>2]=0.0;c[b+712>>2]=0;c[b+712+4>>2]=0;c[b+712+8>>2]=0;c[b+712+12>>2]=0;cd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);lb[c[(c[b>>2]|0)+44>>2]&511](b);e=+g[b+1284>>2];f=+g[b+1288>>2];h=+g[b+1292>>2];if(+g[b+696>>2]>=+g[b+680>>2]){d=(a[b+1300>>0]|0)==0?b+1128|0:b+1064|0;i=c[d+16>>2]|0;k=c[d+32>>2]|0;c[m>>2]=c[d>>2];c[m+4>>2]=i;c[m+8>>2]=k;g[m+12>>2]=0.0;lh(c[b+28>>2]|0,c[b+32>>2]|0,b+176|0,m,e,f,h,e,f,h);}if(+g[b+700>>2]>=+g[b+684>>2]){d=(a[b+1300>>0]|0)==0?b+1128|0:b+1064|0;i=c[d+20>>2]|0;k=c[d+36>>2]|0;c[m>>2]=c[d+4>>2];c[m+4>>2]=i;c[m+8>>2]=k;g[m+12>>2]=0.0;lh(c[b+28>>2]|0,c[b+32>>2]|0,b+260|0,m,e,f,h,e,f,h);}if(+g[b+704>>2]>=+g[b+688>>2]){d=(a[b+1300>>0]|0)==0?b+1128|0:b+1064|0;i=c[d+24>>2]|0;k=c[d+40>>2]|0;c[m>>2]=c[d+8>>2];c[m+4>>2]=i;c[m+8>>2]=k;g[m+12>>2]=0.0;lh(c[b+28>>2]|0,c[b+32>>2]|0,b+344|0,m,e,f,h,e,f,h);}k=0;do{f=+g[b+868+(k<<6)>>2];h=+g[b+868+(k<<6)+4>>2];j=+Ij(+g[b+1192+(k<<2)>>2],f,h);g[b+868+(k<<6)+52>>2]=j;do if(!(f>h)){if(f>j){c[b+868+(k<<6)+56>>2]=1;d=b+868+(k<<6)+48|0;g[d>>2]=j-f;if(!(j-f>3.1415927410125732))if(j-f<-3.1415927410125732)e=6.2831854820251465;else{i=16;break}else e=-6.2831854820251465;g[d>>2]=j-f+e;i=16;break}d=b+868+(k<<6)+56|0;if(h<j){c[d>>2]=2;d=b+868+(k<<6)+48|0;g[d>>2]=j-h;if(!(j-h>3.1415927410125732))if(j-h<-3.1415927410125732)e=6.2831854820251465;else{i=16;break}else e=-6.2831854820251465;g[d>>2]=j-h+e;i=16;}else i=15;}else{d=b+868+(k<<6)+56|0;i=15;}while(0);if((i|0)==15?(i=0,c[d>>2]=0,a[b+868+(k<<6)+44>>0]|0):0)i=16;if((i|0)==16){K=b+1208+(k<<4)|0;c[m>>2]=c[K>>2];c[m+4>>2]=c[K+4>>2];c[m+8>>2]=c[K+8>>2];c[m+12>>2]=c[K+12>>2];K=b+428+(k*84|0)|0;d=c[b+28>>2]|0;J=+g[d+4>>2];I=+g[d+20>>2];H=+g[d+36>>2];F=+g[d+8>>2];E=+g[d+24>>2];D=+g[d+40>>2];B=+g[d+12>>2];A=+g[d+28>>2];z=+g[d+44>>2];i=c[b+32>>2]|0;x=+g[i+4>>2];w=+g[i+20>>2];v=+g[i+36>>2];t=+g[i+8>>2];s=+g[i+24>>2];r=+g[i+40>>2];p=+g[i+12>>2];n=+g[i+28>>2];f=+g[i+44>>2];c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;o=+g[m>>2];e=+g[m+4>>2];h=+g[m+8>>2];g[b+428+(k*84|0)+16>>2]=J*o+I*e+H*h;g[b+428+(k*84|0)+20>>2]=F*o+E*e+D*h;g[b+428+(k*84|0)+24>>2]=B*o+A*e+z*h;g[b+428+(k*84|0)+28>>2]=0.0;g[b+428+(k*84|0)+32>>2]=x*-o+w*-e+v*-h;g[b+428+(k*84|0)+36>>2]=t*-o+s*-e+r*-h;g[b+428+(k*84|0)+40>>2]=p*-o+n*-e+f*-h;g[b+428+(k*84|0)+44>>2]=0.0;G=(J*o+I*e+H*h)*+g[d+396>>2];C=(F*o+E*e+D*h)*+g[d+400>>2];y=(B*o+A*e+z*h)*+g[d+404>>2];g[b+428+(k*84|0)+48>>2]=G;g[b+428+(k*84|0)+52>>2]=C;g[b+428+(k*84|0)+56>>2]=y;g[b+428+(k*84|0)+60>>2]=0.0;u=(x*-o+w*-e+v*-h)*+g[i+396>>2];q=(t*-o+s*-e+r*-h)*+g[i+400>>2];j=(p*-o+n*-e+f*-h)*+g[i+404>>2];g[b+428+(k*84|0)+64>>2]=u;g[b+428+(k*84|0)+68>>2]=q;g[b+428+(k*84|0)+72>>2]=j;g[b+428+(k*84|0)+76>>2]=0.0;g[b+428+(k*84|0)+80>>2]=(J*o+I*e+H*h)*G+(F*o+E*e+D*h)*C+(B*o+A*e+z*h)*y+((x*-o+w*-e+v*-h)*u+(t*-o+s*-e+r*-h)*q+(p*-o+n*-e+f*-h)*j);}k=k+1|0;}while((k|0)!=3);l=m;return}function Gd(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,i=0,j=0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;F=l;l=l+16|0;aj(11170);E=c[a+712>>2]|0;if((E|0)>0){c[6436]=(c[6436]|0)+1;d=ic((E<<4|3)+16|0)|0;if(!d)h=0;else{c[(d+4+15&-16)+-4>>2]=d;h=d+4+15&-16;}Ik(h|0,0,E<<4|0)|0;f=c[a+712>>2]|0;if((f|0)>0){c[6436]=(c[6436]|0)+1;d=ic((f<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}Ik(d|0,0,f<<2|0)|0;C=d;D=h;B=d;A=h;}else{C=0;D=h;B=0;A=h;}}else{C=0;D=0;B=0;A=0;}z=c[a+1112>>2]|0;if(b){if((z|0)>0){i=c[a+1120>>2]|0;d=0;do{f=c[i+(d<<2)>>2]|0;h=c[f+312>>2]|0;if(h|0){g[f+276>>2]=1.0/+(h|0)*+g[f+276>>2];g[f+280>>2]=1.0/+(h|0)*+g[f+280>>2];g[f+284>>2]=1.0/+(h|0)*+g[f+284>>2];g[f+292>>2]=+g[f+292>>2]*(1.0/+(h|0));g[f+296>>2]=1.0/+(h|0)*+g[f+296>>2];g[f+300>>2]=1.0/+(h|0)*+g[f+300>>2];}d=d+1|0;}while((d|0)!=(z|0));i=11;}}else i=11;if((i|0)==11?(z|0)>0:0){k=c[a+1120>>2]|0;if(b){f=0;do{h=c[k+(f<<2)>>2]|0;if((c[h+312>>2]|0)>0?(x=+g[a+452>>2],s=+g[h+276>>2]*x,t=x*+g[h+280>>2],u=x*+g[h+284>>2],v=x*+g[h+292>>2],w=x*+g[h+296>>2],x=x*+g[h+300>>2],y=c[h+24>>2]|0,(y|0)>0):0){i=c[h+32>>2]|0;b=c[a+720>>2]|0;j=c[h+12>>2]|0;d=0;do{r=c[i+(d<<2)>>2]|0;q=+g[j+(d<<2)>>2];p=+g[r+8>>2]-+g[h+228>>2];o=+g[r+12>>2]-+g[h+232>>2];n=+g[r+16>>2]-+g[h+236>>2];G=D+(((r-b|0)/104|0)<<4)|0;g[G>>2]=+g[G>>2]+q*(s+(w*n-x*o));G=D+(((r-b|0)/104|0)<<4)+4|0;g[G>>2]=+g[G>>2]+q*(t+(x*p-v*n));G=D+(((r-b|0)/104|0)<<4)+8|0;g[G>>2]=q*(u+(v*o-w*p))+ +g[G>>2];r=C+(((r-b|0)/104|0)<<2)|0;g[r>>2]=q+ +g[r>>2];d=d+1|0;}while((d|0)!=(y|0))}f=f+1|0;}while((f|0)!=(z|0))}else{f=0;do{h=c[k+(f<<2)>>2]|0;if((c[h+308>>2]|0)>0?(q=+g[a+452>>2],e=+g[h+244>>2]*q,m=q*+g[h+248>>2],n=q*+g[h+252>>2],o=q*+g[h+260>>2],p=q*+g[h+264>>2],q=q*+g[h+268>>2],r=c[h+24>>2]|0,(r|0)>0):0){i=c[h+32>>2]|0;b=c[a+720>>2]|0;j=c[h+12>>2]|0;d=0;do{G=c[i+(d<<2)>>2]|0;x=+g[j+(d<<2)>>2];w=+g[G+8>>2]-+g[h+228>>2];v=+g[G+12>>2]-+g[h+232>>2];u=+g[G+16>>2]-+g[h+236>>2];y=D+(((G-b|0)/104|0)<<4)|0;g[y>>2]=+g[y>>2]+x*(e+(p*u-q*v));y=D+(((G-b|0)/104|0)<<4)+4|0;g[y>>2]=+g[y>>2]+x*(m+(q*w-o*u));y=D+(((G-b|0)/104|0)<<4)+8|0;g[y>>2]=x*(n+(o*v-p*w))+ +g[y>>2];G=C+(((G-b|0)/104|0)<<2)|0;g[G>>2]=x+ +g[G>>2];d=d+1|0;}while((d|0)!=(r|0))}f=f+1|0;}while((f|0)!=(z|0))}}if((E|0)>0){d=0;do{e=+g[C+(d<<2)>>2];if(e>0.0){w=1.0/e*+g[D+(d<<4)+4>>2];x=1.0/e*+g[D+(d<<4)+8>>2];G=c[a+720>>2]|0;z=G+(d*104|0)+8|0;g[z>>2]=1.0/e*+g[D+(d<<4)>>2]+ +g[z>>2];z=G+(d*104|0)+12|0;g[z>>2]=w+ +g[z>>2];G=G+(d*104|0)+16|0;g[G>>2]=x+ +g[G>>2];}d=d+1|0;}while((d|0)!=(E|0))}if(!((C|0)==0|(B|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}if(!((D|0)==0|(A|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[A+-4>>2]|0);}d=c[2388]|0;G=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=G;if(G|0){l=F;return}do if(c[d+4>>2]|0){Za(F|0,0)|0;G=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[F+4>>2]|0)-(c[G+4>>2]|0)+(((c[F>>2]|0)-(c[G>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=F;return}}while(0);c[2388]=c[d+20>>2];l=F;return}function Hd(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var k=0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0;C=l;l=l+272|0;z=+g[e+48>>2]-+g[d+48>>2];A=+g[e+52>>2]-+g[d+52>>2];B=+g[e+56>>2]-+g[d+56>>2];tf(d,e,C+256|0,C+208|0);v=+g[C+208>>2];t=+g[C+256>>2]*v;u=v*+g[C+256+4>>2];v=v*+g[C+256+8>>2];g[C+192>>2]=t;g[C+192+4>>2]=u;g[C+192+8>>2]=v;g[C+192+12>>2]=0.0;w=+g[h+48>>2]-+g[f+48>>2];x=+g[h+52>>2]-+g[f+52>>2];y=+g[h+56>>2]-+g[f+56>>2];tf(f,h,C+256|0,C+208|0);r=+g[C+208>>2];p=+g[C+256>>2]*r;q=r*+g[C+256+4>>2];r=r*+g[C+256+8>>2];g[C+176>>2]=p;g[C+176+4>>2]=q;g[C+176+8>>2]=r;g[C+176+12>>2]=0.0;e=c[b+12>>2]|0;s=+Db[c[(c[e>>2]|0)+16>>2]&15](e);e=c[b+16>>2]|0;if(!e)m=0.0;else m=+Db[c[(c[e>>2]|0)+16>>2]&15](e);s=s*+G(+(t*t+u*u+v*v))+m*+G(+(p*p+q*q+r*r));if(s+ +G(+((w-z)*(w-z)+(x-A)*(x-A)+(y-B)*(y-B)))==0.0){i=0;l=C;return i|0}c[C+208>>2]=9284;g[C+208+36>>2]=999999984306749440.0;a[C+208+40>>0]=0;yd(b,d,f,C+208|0);h=(a[C+208+40>>0]|0)==0;c[C+256>>2]=c[C+208+20>>2];c[C+256+4>>2]=c[C+208+20+4>>2];c[C+256+8>>2]=c[C+208+20+8>>2];c[C+256+12>>2]=c[C+208+20+12>>2];a:do if(!h?(o=c[C+208+4>>2]|0,k=c[C+208+8>>2]|0,n=c[C+208+12>>2]|0,v=(w-z)*(c[j>>2]=o,+g[j>>2]),v=v+(x-A)*(c[j>>2]=k,+g[j>>2]),!(s+(v+(y-B)*(c[j>>2]=n,+g[j>>2]))<=1.1920928955078125e-07)):0){m=+g[C+208+16>>2];p=+g[C+208+36>>2]+ +g[i+172>>2];b:do if(p>1.0000000474974513e-03){h=0;q=0.0;r=p;while(1){e=c[i+168>>2]|0;if(e|0){D=c[(c[e>>2]|0)+20>>2]|0;c[C+112>>2]=1065353216;c[C+112+4>>2]=1065353216;c[C+112+8>>2]=1065353216;g[C+112+12>>2]=0.0;qb[D&7](e,C+256|0,.20000000298023224,C+112|0);}m=(w-z)*(c[j>>2]=o,+g[j>>2]);m=m+(x-A)*(c[j>>2]=k,+g[j>>2]);m=s+(m+(y-B)*(c[j>>2]=n,+g[j>>2]));if(m<=1.1920928955078125e-07){k=0;break a}p=q+r/m;if(!(!(p<=q)&(!(p<0.0)&!(p>1.0)))){k=0;break a}Gg(d,z,A,B,C+192|0,p,C+112|0);Gg(f,w,x,y,C+176|0,p,C+48|0);k=c[i+168>>2]|0;if(k|0){D=c[(c[k>>2]|0)+20>>2]|0;c[C>>2]=1065353216;c[C+4>>2]=0;c[C+8>>2]=0;g[C+12>>2]=0.0;qb[D&7](k,C+112+48|0,.20000000298023224,C);}kb[c[c[i>>2]>>2]&31](i,p);c[C>>2]=9284;g[C+36>>2]=999999984306749440.0;a[C+40>>0]=0;yd(b,C+112|0,C+48|0,C);if(!(a[C+40>>0]|0)){k=15;break}m=+g[C+36>>2];q=+g[i+172>>2];c[C+256>>2]=c[C+20>>2];c[C+256+4>>2]=c[C+20+4>>2];c[C+256+8>>2]=c[C+20+8>>2];c[C+256+12>>2]=c[C+20+12>>2];e=h+1|0;if((h|0)>63){k=16;break}n=c[C+12>>2]|0;k=c[C+8>>2]|0;o=c[C+4>>2]|0;r=m+q;if(!(r>1.0000000474974513e-03)){m=+g[C+16>>2];break b}else{h=e;q=p;}}if((k|0)==15)Vb[c[(c[i>>2]|0)+8>>2]&127](i,-1,h);else if((k|0)==16)Vb[c[(c[i>>2]|0)+8>>2]&127](i,-2,e);k=0;break a}else p=0.0;while(0);g[i+164>>2]=p;c[i+132>>2]=o;c[i+136>>2]=k;c[i+140>>2]=n;g[i+144>>2]=m;c[i+148>>2]=c[C+256>>2];c[i+148+4>>2]=c[C+256+4>>2];c[i+148+8>>2]=c[C+256+8>>2];c[i+148+12>>2]=c[C+256+12>>2];k=1;}else k=0;while(0);D=k;l=C;return D|0}function Id(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var i=0,j=0,k=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0;D=l;l=l+80|0;o=+g[e+4>>2];p=+g[e+20>>2];q=+g[e+36>>2];r=+g[e+8>>2];s=+g[e+24>>2];t=+g[e+40>>2];u=+g[e+12>>2];v=+g[e+28>>2];w=+g[e+44>>2];x=-+g[e+52>>2];y=-+g[e+56>>2];z=-+g[e+60>>2];k=c[b+720>>2]|0;A=+g[k+(d*104|0)+8>>2];B=+g[k+(d*104|0)+12>>2];C=+g[k+(d*104|0)+16>>2];a:do if(f){f=c[b+268>>2]|0;b:do if((f|0)>0){j=c[b+276>>2]|0;i=0;while(1){if((c[j+(i<<2)>>2]|0)==(e|0))break;i=i+1|0;if((i|0)>=(f|0))break b}if((i|0)!=(f|0)){f=k;break a}}while(0);if((f|0)==(c[b+272>>2]|0)?(m=f|0?f<<1:1,(f|0)<(m|0)):0){if(!m)j=0;else{c[6436]=(c[6436]|0)+1;f=ic((m<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}j=f;f=c[b+268>>2]|0;}if((f|0)>0){i=0;do{c[j+(i<<2)>>2]=c[(c[b+276>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(f|0))}i=c[b+276>>2]|0;if(i){if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);f=c[b+268>>2]|0;}c[b+276>>2]=0;}a[b+280>>0]=1;c[b+276>>2]=j;c[b+272>>2]=m;}c[(c[b+276>>2]|0)+(f<<2)>>2]=e;c[b+268>>2]=f+1;f=c[b+720>>2]|0;}else f=k;while(0);k=f+(d*104|0)|0;f=f+(d*104|0)+100|0;a[f>>0]=a[f>>0]|1;f=c[b+792>>2]|0;if((f|0)==(c[b+796>>2]|0)?(n=f|0?f<<1:1,(f|0)<(n|0)):0){if(!n)j=0;else{c[6436]=(c[6436]|0)+1;f=ic(n*96|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}j=f;f=c[b+792>>2]|0;}if((f|0)>0){i=0;do{d=j+(i*96|0)|0;m=c[b+800>>2]|0;E=m+(i*96|0)|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];c[d+16>>2]=c[E+16>>2];c[d+20>>2]=c[E+20>>2];c[d+24>>2]=c[E+24>>2];d=j+(i*96|0)+28|0;E=m+(i*96|0)+28|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];d=m+(i*96|0)+44|0;E=j+(i*96|0)+44|0;c[E>>2]=c[d>>2];c[E+4>>2]=c[d+4>>2];c[E+8>>2]=c[d+8>>2];c[E+12>>2]=c[d+12>>2];E=m+(i*96|0)+60|0;d=j+(i*96|0)+60|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];d=j+(i*96|0)+76|0;m=m+(i*96|0)+76|0;c[d>>2]=c[m>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];c[d+16>>2]=c[m+16>>2];i=i+1|0;}while((i|0)!=(f|0))}f=c[b+800>>2]|0;if(f|0){if(a[b+804>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+800>>2]=0;}a[b+804>>0]=1;c[b+800>>2]=j;c[b+796>>2]=n;f=c[b+792>>2]|0;}E=c[b+800>>2]|0;c[E+(f*96|0)>>2]=k;g[E+(f*96|0)+4>>2]=o*x+p*y+q*z+(o*A+p*B+q*C);g[E+(f*96|0)+8>>2]=r*x+s*y+t*z+(r*A+s*B+t*C);g[E+(f*96|0)+12>>2]=u*x+v*y+w*z+(u*A+v*B+w*C);g[E+(f*96|0)+16>>2]=0.0;c[E+(f*96|0)+20>>2]=e;g[E+(f*96|0)+24>>2]=h;e=E+(f*96|0)+28|0;c[e>>2]=c[D+56>>2];c[e+4>>2]=c[D+56+4>>2];c[e+8>>2]=c[D+56+8>>2];c[e+12>>2]=c[D+56+12>>2];e=E+(f*96|0)+44|0;c[e>>2]=c[D+40>>2];c[e+4>>2]=c[D+40+4>>2];c[e+8>>2]=c[D+40+8>>2];c[e+12>>2]=c[D+40+12>>2];e=E+(f*96|0)+60|0;c[e>>2]=c[D+24>>2];c[e+4>>2]=c[D+24+4>>2];c[e+8>>2]=c[D+24+8>>2];c[e+12>>2]=c[D+24+12>>2];E=E+(f*96|0)+76|0;c[E>>2]=c[D>>2];c[E+4>>2]=c[D+4>>2];c[E+8>>2]=c[D+8>>2];c[E+12>>2]=c[D+12>>2];c[E+16>>2]=c[D+16>>2];c[b+792>>2]=(c[b+792>>2]|0)+1;l=D;return}function Jd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0;E=l;l=l+32|0;A=+g[b+48>>2]-+g[b+112>>2];h=+g[b+52>>2]-+g[b+116>>2];D=+g[b+56>>2]-+g[b+120>>2];B=A*+g[b+64>>2]+h*+g[b+80>>2]+D*+g[b+96>>2];C=A*+g[b+68>>2]+h*+g[b+84>>2]+D*+g[b+100>>2];D=A*+g[b+72>>2]+h*+g[b+88>>2]+D*+g[b+104>>2];e=c[a+8>>2]|0;z=c[a+4>>2]|0;h=+g[z+28>>2]*+g[z+12>>2];A=h+ +g[a+12>>2];p=+g[e+72>>2];q=+g[e+56>>2];r=+g[e+76>>2];s=+g[e+60>>2];t=+g[e+80>>2];u=+g[e+64>>2];v=+g[e+88>>2];w=+g[e+92>>2];x=+g[e+96>>2];j=(r-s)*(x-u)-(t-u)*(w-s);k=(t-u)*(v-q)-(p-q)*(x-u);o=(p-q)*(w-s)-(r-s)*(v-q);n=1.0/+G(+(o*o+(j*j+k*k)));i=(B-q)*n*j+(C-s)*n*k+n*o*(D-u);if(i<0.0){i=-i;m=-(n*j);j=-(n*k);k=-(n*o);}else{m=n*j;j=n*k;k=n*o;}if(!(i<A)){l=E;return}o=(D-u)*(j*(p-q)-m*(r-s))+((B-q)*(k*(r-s)-j*(t-u))+(C-s)*(m*(t-u)-k*(p-q)));y=(D-t)*(j*(v-p)-m*(w-r))+((B-p)*(k*(w-r)-j*(x-t))+(C-r)*(m*(x-t)-k*(v-p)));x=(D-x)*(j*(q-v)-m*(s-w))+((B-v)*(k*(s-w)-j*(u-x))+(C-w)*(m*(u-x)-k*(q-v)));if(!(x>0.0&(o>0.0&y>0.0)|x<=0.0&(o<=0.0&y<=0.0))){if((pb[c[(c[e>>2]|0)+100>>2]&127](e)|0)<=0){l=E;return}e=0;z=0;o=0.0;n=0.0;i=0.0;do{F=c[a+8>>2]|0;Zb[c[(c[F>>2]|0)+104>>2]&127](F,z,E+16|0,E);s=+g[E+16>>2];x=+g[E+16+4>>2];u=+g[E+16+8>>2];t=+g[E>>2]-s;y=+g[E+4>>2]-x;v=+g[E+8>>2]-u;do if((B-s)*t+(C-x)*y+(D-u)*v>0.0)if((B-s)*t+(C-x)*y+(D-u)*v<t*t+y*y+v*v){r=((B-s)*t+(C-x)*y+(D-u)*v)/(t*t+y*y+v*v);w=r;p=B-s-t*r;q=C-x-y*r;r=D-u-v*r;break}else{w=1.0;p=B-s-t;q=C-x-y;r=D-u-v;break}else{w=0.0;p=B-s;q=C-x;r=D-u;}while(0);if(p*p+q*q+r*r<A*A){e=1;o=s+t*w;n=u+v*w;i=x+y*w;}z=z+1|0;F=c[a+8>>2]|0;}while((z|0)<(pb[c[(c[F>>2]|0)+100>>2]&127](F)|0));if(!(e&1)){l=E;return}else{p=A*A;s=o;r=n;q=i;}}else{p=A*A;s=B-i*m;r=D-i*k;q=C-i*j;}n=B-s;o=C-q;i=D-r;if(!(n*n+o*o+i*i<p)){l=E;return}if(n*n+o*o+i*i>1.1920928955078125e-07){j=+G(+(n*n+o*o+i*i));h=h-j;m=n*(1.0/j);k=i*(1.0/j);j=o*(1.0/j);}i=-h;h=+g[b+64>>2];if(f){y=+g[b+68>>2];A=+g[b+72>>2];B=h*m+y*j+A*k;p=+g[b+80>>2];t=+g[b+84>>2];u=+g[b+88>>2];C=m*p+j*t+k*u;v=+g[b+96>>2];w=+g[b+100>>2];x=+g[b+104>>2];D=m*v+j*w+k*x;g[E+16>>2]=-B;g[E+16+4>>2]=-C;g[E+16+8>>2]=-D;g[E+16+12>>2]=0.0;C=s*p+q*t+r*u+ +g[b+116>>2]+C*i;D=s*v+q*w+r*x+ +g[b+120>>2]+D*i;g[E>>2]=s*h+q*y+r*A+ +g[b+112>>2]+B*i;g[E+4>>2]=C;g[E+8>>2]=D;g[E+12>>2]=0.0;Ub[c[(c[d>>2]|0)+16>>2]&15](d,E+16|0,E,i);l=E;return}else{F=c[(c[d>>2]|0)+16>>2]|0;A=+g[b+68>>2];B=+g[b+72>>2];v=+g[b+80>>2];w=+g[b+84>>2];C=+g[b+88>>2];x=+g[b+96>>2];y=+g[b+100>>2];D=+g[b+104>>2];g[E+16>>2]=h*m+A*j+B*k;g[E+16+4>>2]=m*v+j*w+k*C;g[E+16+8>>2]=m*x+j*y+k*D;g[E+16+12>>2]=0.0;C=s*v+q*w+r*C+ +g[b+116>>2];D=s*x+q*y+r*D+ +g[b+120>>2];g[E>>2]=s*h+q*A+r*B+ +g[b+112>>2];g[E+4>>2]=C;g[E+8>>2]=D;g[E+12>>2]=0.0;Ub[F&15](d,E+16|0,E,i);l=E;return}}function Kd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=5348;c[6436]=(c[6436]|0)+1;e=ic(379)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}g[e+308>>2]=9.999999747378752e-05;l=e+332|0;a[l>>0]=a[l>>0]&-16;c[b+24>>2]=e;l=(c[d+20>>2]|0)==0?9196:9244;c[6436]=(c[6436]|0)+1;e=ic(23)|0;c[(e+4+15&-16)+-4>>2]=e;c[(e+4+15&-16)>>2]=l;c[b+28>>2]=e+4+15&-16;c[6436]=(c[6436]|0)+1;e=ic(43)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}k=c[b+24>>2]|0;l=c[b+28>>2]|0;a[e+4>>0]=0;c[e>>2]=6156;c[e+16>>2]=0;c[e+20>>2]=3;c[e+12>>2]=k;c[e+8>>2]=l;c[b+32>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5380;c[b+36>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5400;c[b+40>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5420;c[b+44>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5440;c[b+48>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5460;c[b+52>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5480;c[b+56>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5500;c[b+60>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5520;c[b+76>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=5520;c[b+80>>2]=e;a[e+4>>0]=1;c[6436]=(c[6436]|0)+1;e=ic(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5540;c[b+72>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(35)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}a[e+4>>0]=0;c[e>>2]=5560;c[e+8>>2]=1;c[e+12>>2]=0;c[b+88>>2]=e;c[6436]=(c[6436]|0)+1;e=ic(35)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=5560;c[e+8>>2]=1;c[e+12>>2]=0;c[b+84>>2]=e;a[e+4>>0]=1;l=c[d+16>>2]|0;l=(l|0)>80?l:80;e=c[d>>2]|0;if(!e){a[b+12>>0]=1;c[6436]=(c[6436]|0)+1;e=ic(39)|0;if(!e)k=0;else{c[(e+4+15&-16)+-4>>2]=e;k=e+4+15&-16;}e=c[d+8>>2]|0;c[k>>2]=772;f=k+4|0;c[f>>2]=e;c[6436]=(c[6436]|0)+1;e=ic((e*772|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[k+16>>2]=e;c[k+12>>2]=e;f=c[f>>2]|0;c[k+8>>2]=f;if(f+-1|0){h=c[k>>2]|0;i=e;j=f+-1|0;do{m=i;i=i+h|0;c[m>>2]=i;j=j+-1|0;}while((j|0)!=0);e=e+(S(h,f+-1|0)|0)|0;}c[e>>2]=0;c[b+8>>2]=k;}else{a[b+12>>0]=0;c[b+8>>2]=e;}e=c[d+4>>2]|0;if(e|0){a[b+20>>0]=0;c[b+16>>2]=e;return}a[b+20>>0]=1;c[6436]=(c[6436]|0)+1;e=ic(39)|0;if(!e)k=0;else{c[(e+4+15&-16)+-4>>2]=e;k=e+4+15&-16;}e=c[d+12>>2]|0;c[k>>2]=l;f=k+4|0;c[f>>2]=e;e=S(e,l)|0;c[6436]=(c[6436]|0)+1;e=ic(e+19|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[k+16>>2]=e;c[k+12>>2]=e;f=c[f>>2]|0;c[k+8>>2]=f;if(f+-1|0){h=c[k>>2]|0;i=e;j=f+-1|0;do{m=i;i=i+h|0;c[m>>2]=i;j=j+-1|0;}while((j|0)!=0);e=e+(S(h,f+-1|0)|0)|0;}c[e>>2]=0;c[b+16>>2]=k;return}function Ld(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;i=l;l=l+16|0;if((a[22672]|0)==0?iy(22672)|0:0){c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;bg(23272,0.0,0,0,i);}c[5869]=c[5869]|1;g[5904]=0.0;j=+g[5914]*0.0;k=+g[5915]*0.0;g[5909]=+g[5913]*0.0;g[5910]=j;g[5911]=k;g[5912]=0.0;c[5917]=0;c[5918]=0;c[5919]=0;c[5920]=0;k=+g[5906]*0.0;j=+g[5907]*0.0;g[5958]=+g[5905]*0.0;g[5959]=k;g[5960]=j;g[5961]=0.0;c[b+4>>2]=6;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=23272;c[b+32>>2]=d;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4504;c[b+112>>2]=c[e>>2];c[b+112+4>>2]=c[e+4>>2];c[b+112+8>>2]=c[e+8>>2];c[b+112+12>>2]=c[e+12>>2];c[b+128>>2]=c[e+16>>2];c[b+128+4>>2]=c[e+16+4>>2];c[b+128+8>>2]=c[e+16+8>>2];c[b+128+12>>2]=c[e+16+12>>2];c[b+144>>2]=c[e+32>>2];c[b+144+4>>2]=c[e+32+4>>2];c[b+144+8>>2]=c[e+32+8>>2];c[b+144+12>>2]=c[e+32+12>>2];c[b+160>>2]=c[e+48>>2];c[b+160+4>>2]=c[e+48+4>>2];c[b+160+8>>2]=c[e+48+8>>2];c[b+160+12>>2]=c[e+48+12>>2];e=b+680|0;h=e+48|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(h|0));c[b+740>>2]=0;c[b+740+4>>2]=0;c[b+740+8>>2]=0;c[b+740+12>>2]=0;c[b+756>>2]=1045220557;c[b+760>>2]=1045220557;c[b+764>>2]=1045220557;c[b+768>>2]=0;c[b+768+4>>2]=0;c[b+768+8>>2]=0;c[b+768+12>>2]=0;c[b+768+16>>2]=0;g[b+728>>2]=.699999988079071;g[b+732>>2]=1.0;g[b+736>>2]=.5;a[b+788>>0]=0;g[b+792>>2]=0.0;g[b+808>>2]=0.0;a[b+789>>0]=0;g[b+796>>2]=0.0;g[b+812>>2]=0.0;a[b+790>>0]=0;g[b+800>>2]=0.0;g[b+816>>2]=0.0;g[b+928>>2]=0.0;g[b+876>>2]=0.0;g[b+880>>2]=.10000000149011612;g[b+884>>2]=300.0;g[b+868>>2]=1.0;g[b+872>>2]=-1.0;g[b+896>>2]=0.0;g[b+900>>2]=.20000000298023224;g[b+904>>2]=0.0;g[b+908>>2]=0.0;g[b+888>>2]=1.0;g[b+892>>2]=.5;c[b+924>>2]=0;g[b+916>>2]=0.0;a[b+912>>0]=0;g[b+992>>2]=0.0;g[b+940>>2]=0.0;g[b+944>>2]=.10000000149011612;g[b+948>>2]=300.0;g[b+932>>2]=1.0;g[b+936>>2]=-1.0;g[b+960>>2]=0.0;g[b+964>>2]=.20000000298023224;g[b+968>>2]=0.0;g[b+972>>2]=0.0;g[b+952>>2]=1.0;g[b+956>>2]=.5;c[b+988>>2]=0;g[b+980>>2]=0.0;a[b+976>>0]=0;g[b+1056>>2]=0.0;g[b+1004>>2]=0.0;g[b+1008>>2]=.10000000149011612;g[b+1012>>2]=300.0;g[b+996>>2]=1.0;g[b+1e3>>2]=-1.0;g[b+1024>>2]=0.0;g[b+1028>>2]=.20000000298023224;g[b+1032>>2]=0.0;g[b+1036>>2]=0.0;g[b+1016>>2]=1.0;g[b+1020>>2]=.5;c[b+1052>>2]=0;g[b+1044>>2]=0.0;a[b+1040>>0]=0;a[b+1300>>0]=f&1;a[b+1301>>0]=1;c[b+1304>>2]=0;a[b+1308>>0]=0;y=+g[b+112>>2];E=+g[d+4>>2];x=+g[b+128>>2];D=+g[d+8>>2];w=+g[b+144>>2];C=+g[d+12>>2];v=+g[b+116>>2];u=+g[b+132>>2];t=+g[b+148>>2];s=+g[b+120>>2];q=+g[b+136>>2];o=+g[b+152>>2];B=+g[d+20>>2];A=+g[d+24>>2];z=+g[d+28>>2];r=+g[d+36>>2];p=+g[d+40>>2];n=+g[d+44>>2];G=+g[b+160>>2];F=+g[b+164>>2];k=+g[b+168>>2];m=+g[d+52>>2]+(E*G+D*F+C*k);j=B*G+A*F+z*k+ +g[d+56>>2];k=r*G+p*F+n*k+ +g[d+60>>2];g[b+48>>2]=y*E+x*D+w*C;g[b+52>>2]=E*v+D*u+C*t;g[b+56>>2]=E*s+D*q+C*o;g[b+60>>2]=0.0;g[b+64>>2]=y*B+x*A+w*z;g[b+68>>2]=v*B+u*A+t*z;g[b+72>>2]=s*B+q*A+o*z;g[b+76>>2]=0.0;g[b+80>>2]=y*r+x*p+w*n;g[b+84>>2]=v*r+u*p+t*n;g[b+88>>2]=s*r+q*p+o*n;g[b+92>>2]=0.0;g[b+96>>2]=m;g[b+100>>2]=j;g[b+104>>2]=k;g[b+108>>2]=0.0;cd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);l=i;return}function Md(b,d,e,f,h,i,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;i=+i;j=j|0;k=k|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=l;l=l+288|0;c[w+208>>2]=c[d>>2];c[w+208+4>>2]=c[d+4>>2];c[w+208+8>>2]=c[d+8>>2];c[w+208+12>>2]=c[d+12>>2];o=w+208+16|0;c[o>>2]=c[e>>2];c[o+4>>2]=c[e+4>>2];c[o+8>>2]=c[e+8>>2];c[o+12>>2]=c[e+12>>2];e=w+208+32|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];v=c[j>>2]|0;q=c[j+4>>2]|0;r=c[j+8>>2]|0;s=c[j+16>>2]|0;t=c[j+12>>2]|0;p=c[j+20>>2]|0;c[w+156>>2]=c[w+208>>2];c[w+156+4>>2]=c[w+208+4>>2];c[w+156+8>>2]=c[w+208+8>>2];c[w+156+12>>2]=c[w+208+12>>2];c[w+172>>2]=c[o>>2];c[w+172+4>>2]=c[o+4>>2];c[w+172+8>>2]=c[o+8>>2];c[w+172+12>>2]=c[o+12>>2];c[w+188>>2]=c[e>>2];c[w+188+4>>2]=c[e+4>>2];c[w+188+8>>2]=c[e+8>>2];c[w+188+12>>2]=c[e+12>>2];e=c[b+136>>2]|0;if((e|0)==(c[b+140>>2]|0)?(u=e|0?e<<1:1,(e|0)<(u|0)):0){if(!u)d=0;else{c[6436]=(c[6436]|0)+1;d=ic((u*284|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}e=c[b+136>>2]|0;}if((e|0)>0){f=0;do{j=c[b+144>>2]|0;m=d+(f*284|0)|0;n=j+(f*284|0)|0;o=m+92|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0;}while((m|0)<(o|0));m=d+(f*284|0)+92|0;n=j+(f*284|0)+92|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=j+(f*284|0)+108|0;n=d+(f*284|0)+108|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];n=j+(f*284|0)+124|0;m=d+(f*284|0)+124|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(f*284|0)+140|0;n=j+(f*284|0)+140|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(f*284|0)+156|0;n=j+(f*284|0)+156|0;o=m+128|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0;}while((m|0)<(o|0));f=f+1|0;}while((f|0)!=(e|0))}e=c[b+144>>2]|0;if(e|0){if(a[b+148>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+144>>2]=0;}a[b+148>>0]=1;c[b+144>>2]=d;c[b+140>>2]=u;e=c[b+136>>2]|0;}d=c[b+144>>2]|0;m=d+(e*284|0)|0;n=w;o=m+92|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0;}while((m|0)<(o|0));m=d+(e*284|0)+92|0;c[m>>2]=c[w+92>>2];c[m+4>>2]=c[w+92+4>>2];c[m+8>>2]=c[w+92+8>>2];c[m+12>>2]=c[w+92+12>>2];m=d+(e*284|0)+108|0;c[m>>2]=c[w+108>>2];c[m+4>>2]=c[w+108+4>>2];c[m+8>>2]=c[w+108+8>>2];c[m+12>>2]=c[w+108+12>>2];m=d+(e*284|0)+124|0;c[m>>2]=c[w+124>>2];c[m+4>>2]=c[w+124+4>>2];c[m+8>>2]=c[w+124+8>>2];c[m+12>>2]=c[w+124+12>>2];m=d+(e*284|0)+140|0;c[m>>2]=c[w+140>>2];c[m+4>>2]=c[w+140+4>>2];c[m+8>>2]=c[w+140+8>>2];c[m+12>>2]=c[w+140+12>>2];d=d+(e*284|0)+156|0;m=d;n=w+156|0;o=m+48|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0;}while((m|0)<(o|0));g[d+48>>2]=h;c[d+52>>2]=t;g[d+56>>2]=i;c[d+60>>2]=v;c[d+64>>2]=q;c[d+68>>2]=r;c[d+72>>2]=s;g[d+76>>2]=0.0;g[d+80>>2]=0.0;g[d+84>>2]=0.0;g[d+88>>2]=.10000000149011612;c[d+92>>2]=p;g[d+96>>2]=0.0;g[d+100>>2]=0.0;a[d+104>>0]=k&1;m=d+105|0;n=w+256|0;o=m+23|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0;}while((m|0)<(o|0));k=c[b+136>>2]|0;c[b+136>>2]=k+1;k=(c[b+144>>2]|0)+(k*284|0)|0;zg(c[b+116>>2]|0,k,0);me(c[b+116>>2]|0,c[b+144>>2]|0,(c[b+136>>2]|0)+-1|0,0);l=w;return k|0}function Nd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((h|0)<0){o=c[b+8>>2]|0;+Mb[c[(c[o>>2]|0)+12>>2]&3](o,d,e,f,g,c[b+12>>2]|0,c[b+16>>2]|0,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);return}l=c[b+16>>2]|0;a:do if((l|0)>0){j=c[b+12>>2]|0;i=0;while(1){k=j+(i<<2)|0;o=c[k>>2]|0;n=c[o+28>>2]|0;if((c[((c[n+208>>2]|0)>-1?n:c[o+32>>2]|0)+208>>2]|0)==(h|0)){o=k;break a}i=i+1|0;if((i|0)>=(l|0)){o=0;break}}}else{i=0;o=0;}while(0);if((i|0)<(l|0)){k=c[b+12>>2]|0;j=0;do{n=c[k+(i<<2)>>2]|0;m=c[n+28>>2]|0;j=((c[((c[m+208>>2]|0)>-1?m:c[n+32>>2]|0)+208>>2]|0)==(h|0)&1)+j|0;i=i+1|0;}while((i|0)!=(l|0));n=j;}else n=0;i=c[b+4>>2]|0;if((c[i+72>>2]|0)<2){m=c[b+8>>2]|0;+Mb[c[(c[m>>2]|0)+12>>2]&3](m,d,e,f,g,o,n,i,c[b+20>>2]|0,c[b+24>>2]|0);return}if((e|0)>0){l=0;i=c[b+32>>2]|0;j=c[b+36>>2]|0;do{m=d+(l<<2)|0;if((i|0)==(j|0)){h=j|0?j<<1:1;if((j|0)<(h|0)){if(!h)i=0;else{c[6436]=(c[6436]|0)+1;i=ic((h<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}j=c[b+32>>2]|0;}if((j|0)>0){k=0;do{c[i+(k<<2)>>2]=c[(c[b+40>>2]|0)+(k<<2)>>2];k=k+1|0;}while((k|0)!=(j|0))}k=c[b+40>>2]|0;if(k){if(a[b+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);j=c[b+32>>2]|0;}c[b+40>>2]=0;}a[b+44>>0]=1;c[b+40>>2]=i;c[b+36>>2]=h;i=j;j=h;}else i=j;}c[(c[b+40>>2]|0)+(i<<2)>>2]=c[m>>2];i=i+1|0;c[b+32>>2]=i;l=l+1|0;}while((l|0)!=(e|0))}if((g|0)>0){l=0;i=c[b+52>>2]|0;j=c[b+56>>2]|0;do{m=f+(l<<2)|0;if((i|0)==(j|0)){h=j|0?j<<1:1;if((j|0)<(h|0)){if(!h)i=0;else{c[6436]=(c[6436]|0)+1;i=ic((h<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}j=c[b+52>>2]|0;}if((j|0)>0){k=0;do{c[i+(k<<2)>>2]=c[(c[b+60>>2]|0)+(k<<2)>>2];k=k+1|0;}while((k|0)!=(j|0))}k=c[b+60>>2]|0;if(k){if(a[b+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);j=c[b+52>>2]|0;}c[b+60>>2]=0;}a[b+64>>0]=1;c[b+60>>2]=i;c[b+56>>2]=h;i=j;j=h;}else i=j;}c[(c[b+60>>2]|0)+(i<<2)>>2]=c[m>>2];i=i+1|0;c[b+52>>2]=i;l=l+1|0;}while((l|0)!=(g|0))}if((n|0)>0){m=0;i=c[b+72>>2]|0;j=c[b+76>>2]|0;do{l=o+(m<<2)|0;if((i|0)==(j|0)){h=j|0?j<<1:1;if((j|0)<(h|0)){if(!h){k=0;i=j;}else{c[6436]=(c[6436]|0)+1;i=ic((h<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}k=i;i=c[b+72>>2]|0;}if((i|0)>0){j=0;do{c[k+(j<<2)>>2]=c[(c[b+80>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0))}j=c[b+80>>2]|0;if(j){if(a[b+84>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);i=c[b+72>>2]|0;}c[b+80>>2]=0;}a[b+84>>0]=1;c[b+80>>2]=k;c[b+76>>2]=h;j=h;}else i=j;}c[(c[b+80>>2]|0)+(i<<2)>>2]=c[l>>2];i=i+1|0;c[b+72>>2]=i;m=m+1|0;}while((m|0)!=(n|0))}else i=c[b+72>>2]|0;if(((c[b+52>>2]|0)+i|0)<=(c[(c[b+4>>2]|0)+72>>2]|0))return;Rg(b);return}function Od(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=d;g[b+28>>2]=0.0;c[b+32>>2]=0;c[b+36>>2]=1;g[b+40>>2]=1.0;a[b+44>>0]=1;c[b+48>>2]=0;a[b+52>>0]=0;a[b+53>>0]=1;a[b+54>>0]=1;g[b+56>>2]=.03999999910593033;a[b+60>>0]=0;g[b+64>>2]=0.0;c[b+68>>2]=e;c[b+72>>2]=0;a[b+76>>0]=1;c[b+80>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;g[b+92>>2]=.6000000238418579;g[b+96>>2]=1.0;g[b+100>>2]=.30000001192092896;g[b+104>>2]=.01666666753590107;g[b+108>>2]=0.0;g[b+116>>2]=20.0;c[b+112>>2]=10;g[b+124>>2]=.20000000298023224;g[b+128>>2]=.800000011920929;g[b+132>>2]=0.0;g[b+120>>2]=1.0;c[b+136>>2]=1;g[b+140>>2]=-.03999999910593033;g[b+144>>2]=.10000000149011612;g[b+148>>2]=0.0;g[b+152>>2]=.8500000238418579;c[b+156>>2]=260;c[b+160>>2]=2;c[b+164>>2]=128;g[b+168>>2]=100.0;g[b+172>>2]=1000000015047466219876688.0e6;c[b>>2]=4272;a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;c[b+184>>2]=0;c[b+196>>2]=0;c[b+200>>2]=f;a[b+224>>0]=1;c[b+220>>2]=0;c[b+212>>2]=0;c[b+216>>2]=0;a[b+244>>0]=1;c[b+240>>2]=0;c[b+232>>2]=0;c[b+236>>2]=0;c[b+248>>2]=0;c[b+252>>2]=-1054867456;a[b+274>>0]=0;a[b+275>>0]=0;c[b+256>>2]=0;c[b+256+4>>2]=0;c[b+256+8>>2]=0;c[b+256+12>>2]=0;a[b+292>>0]=1;c[b+288>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;c[b+296>>2]=0;a[b+300>>0]=1;a[b+320>>0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;if(!f){c[6436]=(c[6436]|0)+1;e=ic(215)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=4884;a[e+20>>0]=1;c[e+16>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+40>>0]=1;c[e+36>>2]=0;c[e+28>>2]=0;c[e+32>>2]=0;a[e+60>>0]=1;c[e+56>>2]=0;c[e+48>>2]=0;c[e+52>>2]=0;a[e+80>>0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100>>0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120>>0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140>>0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;a[e+160>>0]=1;c[e+156>>2]=0;c[e+148>>2]=0;c[e+152>>2]=0;a[e+180>>0]=1;c[e+176>>2]=0;c[e+168>>2]=0;c[e+172>>2]=0;c[e+192>>2]=0;c[b+200>>2]=e;e=1;}else e=0;a[b+273>>0]=e;c[6436]=(c[6436]|0)+1;e=ic(87)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}c[e>>2]=5580;a[e+20>>0]=1;c[e+16>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+40>>0]=1;c[e+36>>2]=0;c[e+28>>2]=0;c[e+32>>2]=0;a[e+60>>0]=1;c[e+56>>2]=0;c[e+48>>2]=0;c[e+52>>2]=0;a[e+64>>0]=1;c[b+204>>2]=e;a[b+272>>0]=1;c[6436]=(c[6436]|0)+1;e=ic(107)|0;if(!e){f=0;h=c[b+200>>2]|0;c[f>>2]=4484;e=f+4|0;c[e>>2]=0;e=f+8|0;c[e>>2]=h;e=f+12|0;c[e>>2]=0;e=f+16|0;c[e>>2]=0;e=f+20|0;c[e>>2]=0;e=f+24|0;c[e>>2]=d;d=f+44|0;a[d>>0]=1;d=f+40|0;c[d>>2]=0;d=f+32|0;c[d>>2]=0;d=f+36|0;c[d>>2]=0;d=f+64|0;a[d>>0]=1;d=f+60|0;c[d>>2]=0;d=f+52|0;c[d>>2]=0;d=f+56|0;c[d>>2]=0;d=f+84|0;a[d>>0]=1;d=f+80|0;c[d>>2]=0;d=f+72|0;c[d>>2]=0;d=f+76|0;c[d>>2]=0;c[b+196>>2]=f;return}c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16;e=c[b+200>>2]|0;c[h>>2]=4484;f=h+4|0;c[f>>2]=0;f=h+8|0;c[f>>2]=e;f=h+12|0;c[f>>2]=0;f=h+16|0;c[f>>2]=0;f=h+20|0;c[f>>2]=0;f=h+24|0;c[f>>2]=d;d=h+44|0;a[d>>0]=1;d=h+40|0;c[d>>2]=0;d=h+32|0;c[d>>2]=0;d=h+36|0;c[d>>2]=0;d=h+64|0;a[d>>0]=1;d=h+60|0;c[d>>2]=0;d=h+52|0;c[d>>2]=0;d=h+56|0;c[d>>2]=0;d=h+84|0;a[d>>0]=1;d=h+80|0;c[d>>2]=0;d=h+72|0;c[d>>2]=0;d=h+76|0;c[d>>2]=0;c[b+196>>2]=h;return}function Pd(d,f,h,i){d=d|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;w=l;l=l+80|0;v=c[d+48>>2]|0;c[w>>2]=6988;c[w+4>>2]=v;c[w+8>>2]=f;v=c[d+52>>2]|0;if(!(a[v+60>>0]|0)){f=c[v+56>>2]|0;if((f|0)>0){p=0;d=0;o=c[v+96>>2]|0;while(1){d=d+1|0;if(!(+g[h>>2]>+g[o+16>>2])?!(+g[i>>2]<+g[o>>2]):0)j=1;else j=0;if(!(!(+g[h+8>>2]>+g[o+24>>2])?!(+g[i+8>>2]<+g[o+8>>2]):0))j=0;if(!(+g[h+4>>2]>+g[o+20>>2])?!(+g[i+4>>2]<+g[o+4>>2]):0){k=c[o+32>>2]|0;if(j&(k|0)==-1){Vb[c[(c[w>>2]|0)+8>>2]&127](w,c[o+36>>2]|0,c[o+40>>2]|0);f=c[v+56>>2]|0;n=43;}else{m=(k|0)==-1;n=42;}}else{k=c[o+32>>2]|0;j=0;m=(k|0)==-1;n=42;}if((n|0)==42){n=0;if(m|j)n=43;else{m=o+(k<<6)|0;j=k+p|0;}}if((n|0)==43){m=o+64|0;j=p+1|0;}if((j|0)<(f|0)){p=j;o=m;}else break}}else d=0;if((c[6168]|0)>=(d|0)){l=w;return}c[6168]=d;l=w;return}z=+g[h>>2];D=+g[h+4>>2];H=+g[h+8>>2];G=+g[v+4>>2];z=z<G?G:z;C=+g[v+8>>2];D=D<C?C:D;y=+g[v+12>>2];H=H<y?y:H;I=+g[v+20>>2];E=+g[v+24>>2];A=+g[v+28>>2];F=+g[v+36>>2];B=+g[v+40>>2];x=+g[v+44>>2];s=~~(((I<z?I:z)-G)*F)&65535&-2;b[w+66>>1]=s;t=~~(((E<D?E:D)-C)*B)&65535&-2;u=~~(((A<H?A:H)-y)*x)&65535&-2;b[w+66+2>>1]=t;b[w+66+4>>1]=u;H=+g[i>>2];D=+g[i+4>>2];z=+g[i+8>>2];H=H<G?G:H;D=D<C?C:D;z=z<y?y:z;i=~~(((I<H?I:H)-G)*F+1.0)&65535|1;b[w+60>>1]=i;q=~~(((E<D?E:D)-C)*B+1.0)&65535|1;r=~~(((A<z?A:z)-y)*x+1.0)&65535|1;b[w+60+2>>1]=q;b[w+60+4>>1]=r;switch(c[v+144>>2]|0){case 0:{o=c[v+56>>2]|0;if((o|0)>0){d=0;f=c[v+136>>2]|0;j=0;do{d=d+1|0;k=((i&65535)>=(e[f>>1]|0)?(s&65535)<=(e[f+6>>1]|0):0)&(u&65535)<=(e[f+10>>1]|0)&(r&65535)>=(e[f+4>>1]|0)&(t&65535)<=(e[f+8>>1]|0)&(q&65535)>=(e[f+2>>1]|0);m=f+12|0;n=c[m>>2]|0;if((n|0)>-1&k)Vb[c[(c[w>>2]|0)+8>>2]&127](w,n>>>21,n&2097151);if(k|(n|0)>-1){j=j+1|0;f=f+16|0;}else{v=c[m>>2]|0;j=j-v|0;f=f+(0-v<<4)|0;}}while((j|0)<(o|0))}else d=0;if((c[6168]|0)<(d|0))c[6168]=d;break}case 1:{if((c[v+152>>2]|0)>0){h=0;do{d=c[v+160>>2]|0;if(((i&65535)>=(e[d+(h<<5)>>1]|0)?(s&65535)<=(e[d+(h<<5)+6>>1]|0):0)&(u&65535)<=(e[d+(h<<5)+10>>1]|0)&(r&65535)>=(e[d+(h<<5)+4>>1]|0)&(t&65535)<=(e[d+(h<<5)+8>>1]|0)&(q&65535)>=(e[d+(h<<5)+2>>1]|0)){p=c[d+(h<<5)+12>>2]|0;o=c[d+(h<<5)+16>>2]|0;if((o|0)>0){d=0;f=(c[v+136>>2]|0)+(p<<4)|0;j=p;do{d=d+1|0;k=((i&65535)>=(e[f>>1]|0)?(s&65535)<=(e[f+6>>1]|0):0)&(u&65535)<=(e[f+10>>1]|0)&(r&65535)>=(e[f+4>>1]|0)&(t&65535)<=(e[f+8>>1]|0)&(q&65535)>=(e[f+2>>1]|0);m=f+12|0;n=c[m>>2]|0;if((n|0)>-1&k)Vb[c[(c[w>>2]|0)+8>>2]&127](w,n>>>21,n&2097151);if(k|(n|0)>-1){j=j+1|0;f=f+16|0;}else{n=c[m>>2]|0;j=j-n|0;f=f+(0-n<<4)|0;}}while((j|0)<(o+p|0))}else d=0;if((c[6168]|0)<(d|0))c[6168]=d;}h=h+1|0;}while((h|0)<(c[v+152>>2]|0))}break}case 2:{qk(c[v+136>>2]|0,w,w+66|0,w+60|0);break}default:{}}l=w;return}function Qd(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,i=0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0;s=l;l=l+80|0;f=c[b+8>>2]|0;if(!f){f=c[b+4>>2]|0;if(!f){k=0.0;o=0.0;m=0.0;d=0.0;j=0.0;n=0.0;}else{r=+g[f+336>>2];j=+g[b+172>>2];t=+g[f+340>>2];p=+g[b+168>>2];n=+g[b+164>>2];q=+g[f+332>>2];k=+g[f+316>>2];o=+g[f+320>>2];m=+g[f+324>>2];d=r*j-t*p;j=t*n-j*q;n=p*q-r*n;}}else{t=+g[f+332>>2];j=+g[b+172>>2];p=+g[f+336>>2];q=+g[b+168>>2];n=+g[b+164>>2];r=+g[f+328>>2];k=+g[f+312>>2];o=+g[f+316>>2];m=+g[f+320>>2];d=t*j-p*q;j=p*n-j*r;n=q*r-t*n;}p=k+d;r=o+j;q=m+n;f=c[b+20>>2]|0;if(!f){f=c[b+16>>2]|0;if(!f){k=0.0;n=0.0;m=0.0;d=0.0;j=0.0;o=0.0;}else{t=+g[f+336>>2];j=+g[b+188>>2];w=+g[f+340>>2];v=+g[b+184>>2];o=+g[b+180>>2];u=+g[f+332>>2];k=+g[f+316>>2];n=+g[f+320>>2];m=+g[f+324>>2];d=t*j-w*v;j=w*o-j*u;o=v*u-t*o;}}else{w=+g[f+332>>2];j=+g[b+188>>2];t=+g[f+336>>2];u=+g[b+184>>2];o=+g[b+180>>2];v=+g[f+328>>2];k=+g[f+312>>2];n=+g[f+316>>2];m=+g[f+320>>2];d=w*j-t*u;j=t*o-j*v;o=u*v-w*o;}p=p-(k+d);n=r-(n+j);d=q-(m+o);j=+g[b+196>>2];k=+g[b+200>>2];m=+g[b+204>>2];a[s+36+32>>0]=1;c[s+36+16>>2]=0;c[s+36+16+4>>2]=0;c[s+36+16+8>>2]=0;c[s+36+16+12>>2]=0;c[s+36>>2]=c[b+72>>2];c[s+36+4>>2]=c[b+72+4>>2];c[s+36+8>>2]=c[b+72+8>>2];c[s+36+12>>2]=c[b+72+12>>2];if(j*p+n*k+d*m<0.0){u=+g[b+212>>2];v=+g[s+36>>2]+((j*p+n*k+d*m)*j+(p-(j*p+n*k+d*m)*j)*u);g[s+36>>2]=v;w=(j*p+n*k+d*m)*k+u*(n-(j*p+n*k+d*m)*k)+ +g[s+36+4>>2];g[s+36+4>>2]=w;k=(j*p+n*k+d*m)*m+u*(d-(j*p+n*k+d*m)*m)+ +g[s+36+8>>2];g[s+36+8>>2]=k;f=s+36+4|0;h=s+36+8|0;i=s+36|0;d=v;j=w;}else{f=s+36+4|0;h=s+36+8|0;i=s+36|0;d=+g[s+36>>2];j=+g[s+36+4>>2];k=+g[s+36+8>>2];}m=(+g[b+104>>2]*d+ +g[b+108>>2]*j+ +g[b+112>>2]*k)*e;n=(d*+g[b+120>>2]+j*+g[b+124>>2]+k*+g[b+128>>2])*e;d=(d*+g[b+136>>2]+j*+g[b+140>>2]+k*+g[b+144>>2])*e;g[i>>2]=m;g[f>>2]=n;g[h>>2]=d;g[s+36+12>>2]=0.0;f=c[b+4>>2]|0;if((f|0)!=(c[b+16>>2]|0)){f=s;h=s+36|0;i=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0;}while((f|0)<(i|0));w=-+g[s+4>>2];v=-+g[s+8>>2];g[s>>2]=-+g[s>>2];g[s+4>>2]=w;g[s+8>>2]=v;g[s+12>>2]=0.0;v=-+g[s+20>>2];w=-+g[s+24>>2];g[s+16>>2]=-+g[s+16>>2];g[s+20>>2]=v;g[s+24>>2]=w;g[s+28>>2]=0.0;xh(b+4|0,s,b+164|0);xh(b+16|0,s+36|0,b+180|0);l=s;return}if(!(m==m&n==n&(d==d&0.0==0.0))){l=s;return}w=+G(+(m*m+n*n+d*d));if(w<+g[f+368>>2]){l=s;return}h=c[s+36+32>>2]|0;w=+g[f+372>>2];g[s+12>>2]=0.0;g[s+28>>2]=0.0;c[s+32>>2]=h;g[s>>2]=-(m*w);g[s+4>>2]=-(n*w);g[s+8>>2]=-(d*w);g[s+16>>2]=w*-0.0;g[s+20>>2]=w*-0.0;g[s+24>>2]=w*-0.0;xh(b+4|0,s,b+164|0);d=+g[(c[b+4>>2]|0)+372>>2];f=s;h=s+36|0;i=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0;}while((f|0)<(i|0));g[s>>2]=d*+g[s>>2];g[s+4>>2]=d*+g[s+4>>2];g[s+8>>2]=d*+g[s+8>>2];g[s+16>>2]=d*+g[s+16>>2];g[s+20>>2]=d*+g[s+20>>2];g[s+24>>2]=d*+g[s+24>>2];xh(b+16|0,s,b+180|0);l=s;return}function Rd(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0,i=0,j=0.0,k=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0;u=l;l=l+96|0;s=c[b+12>>2]|0;Zb[c[(c[s>>2]|0)+8>>2]&127](s,(c[b+8>>2]|0)+4|0,u+80|0,u+64|0);s=c[d+68>>2]|0;jb[c[(c[s>>2]|0)+16>>2]&31](s,c[(c[b+8>>2]|0)+188>>2]|0,u+80|0,u+64|0,c[d+24>>2]|0);s=c[d+24>>2]|0;Zb[c[(c[s>>2]|0)+32>>2]&127](s,c[(c[b+8>>2]|0)+284>>2]|0,d+28|0,s);s=c[b+8>>2]|0;c[b+92>>2]=c[s+52>>2];c[b+92+4>>2]=c[s+52+4>>2];c[b+92+8>>2]=c[s+52+8>>2];c[b+92+12>>2]=c[s+52+12>>2];s=c[s+284>>2]|0;if((pb[c[(c[s>>2]|0)+36>>2]&127](s)|0)>0){d=0;f=0.0;s=0;do{e=c[b+132>>2]|0;if((e|0)<0){if((c[b+136>>2]|0)<0){h=c[b+140>>2]|0;if(h|0){if(a[b+144>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+140>>2]=0;}a[b+144>>0]=1;c[b+140>>2]=0;c[b+136>>2]=0;}do{c[(c[b+140>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[b+132>>2]=0;e=c[(c[b+8>>2]|0)+284>>2]|0;e=c[(pb[c[(c[e>>2]|0)+28>>2]&127](e)|0)+12>>2]|0;r=c[c[e+(s<<4)>>2]>>2]|0;h=c[c[e+(s<<4)+4>>2]>>2]|0;if(!((r|0)!=0?(c[r+204>>2]&4|0)!=0:0))t=14;do if((t|0)==14){t=0;if(h|0?c[h+204>>2]&4|0:0)break;e=c[e+(s<<4)+8>>2]|0;if(e|0)nb[c[(c[e>>2]|0)+16>>2]&127](e,b+128|0);r=c[b+132>>2]|0;if((r|0)>0){p=c[b+140>>2]|0;q=c[b+8>>2]|0;o=0;do{m=c[p+(o<<2)>>2]|0;n=(c[m+740>>2]|0)==(q|0)?-1.0:1.0;e=c[m+748>>2]|0;if((e|0)>0){k=0;do{j=+g[m+4+(k*184|0)+80>>2];if(j<0.0){i=m+4+(k*184|0)+64|0;if(j<f){d=m+4+(k*184|0)+68|0;v=n*+g[d>>2];h=m+4+(k*184|0)+72|0;f=n*+g[h>>2];g[b+152>>2]=n*+g[i>>2];g[b+156>>2]=v;g[b+160>>2]=f;g[b+164>>2]=0.0;f=j;e=c[m+748>>2]|0;}else{d=m+4+(k*184|0)+68|0;h=m+4+(k*184|0)+72|0;}w=j*n*+g[d>>2]*.20000000298023224;v=j*n*+g[h>>2]*.20000000298023224;g[b+92>>2]=j*n*+g[i>>2]*.20000000298023224+ +g[b+92>>2];g[b+96>>2]=w+ +g[b+96>>2];g[b+100>>2]=v+ +g[b+100>>2];d=1;}k=k+1|0;}while((k|0)<(e|0))}o=o+1|0;}while((o|0)!=(r|0))}}while(0);s=s+1|0;r=c[(c[b+8>>2]|0)+284>>2]|0;}while((s|0)<(pb[c[(c[r>>2]|0)+36>>2]&127](r)|0))}else d=0;t=c[b+8>>2]|0;c[u>>2]=c[t+4>>2];c[u+4>>2]=c[t+4+4>>2];c[u+8>>2]=c[t+4+8>>2];c[u+12>>2]=c[t+4+12>>2];c[u+16>>2]=c[t+20>>2];c[u+16+4>>2]=c[t+20+4>>2];c[u+16+8>>2]=c[t+20+8>>2];c[u+16+12>>2]=c[t+20+12>>2];c[u+32>>2]=c[t+36>>2];c[u+32+4>>2]=c[t+36+4>>2];c[u+32+8>>2]=c[t+36+8>>2];c[u+32+12>>2]=c[t+36+12>>2];c[u+48>>2]=c[b+92>>2];c[u+48+4>>2]=c[b+92+4>>2];c[u+48+8>>2]=c[b+92+8>>2];c[u+48+12>>2]=c[b+92+12>>2];c[t+260>>2]=(c[t+260>>2]|0)+1;c[t+4>>2]=c[u>>2];c[t+4+4>>2]=c[u+4>>2];c[t+4+8>>2]=c[u+8>>2];c[t+4+12>>2]=c[u+12>>2];c[t+20>>2]=c[u+16>>2];c[t+20+4>>2]=c[u+16+4>>2];c[t+20+8>>2]=c[u+16+8>>2];c[t+20+12>>2]=c[u+16+12>>2];c[t+36>>2]=c[u+32>>2];c[t+36+4>>2]=c[u+32+4>>2];c[t+36+8>>2]=c[u+32+8>>2];c[t+36+12>>2]=c[u+32+12>>2];c[t+52>>2]=c[u+48>>2];c[t+52+4>>2]=c[u+48+4>>2];c[t+52+8>>2]=c[u+48+8>>2];c[t+52+12>>2]=c[u+48+12>>2];l=u;return d|0}function Sd(d,e,f,h,i){d=d|0;e=e|0;f=+f;h=+h;i=+i;var j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;q=l;l=l+240|0;o=+g[d+96>>2]+h;p=+g[d+100>>2]+i;g[d+112>>2]=+g[d+92>>2]+f;g[d+116>>2]=o;g[d+120>>2]=p;g[d+124>>2]=0.0;c[q+168>>2]=1065353216;c[q+168+4>>2]=0;c[q+168+4+4>>2]=0;c[q+168+4+8>>2]=0;c[q+168+4+12>>2]=0;c[q+168+20>>2]=1065353216;c[q+168+24>>2]=0;c[q+168+24+4>>2]=0;c[q+168+24+8>>2]=0;c[q+168+24+12>>2]=0;c[q+168+40>>2]=1065353216;j=q+168+44|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[q+104>>2]=1065353216;c[q+104+4>>2]=0;c[q+104+4+4>>2]=0;c[q+104+4+8>>2]=0;c[q+104+4+12>>2]=0;c[q+104+20>>2]=1065353216;c[q+104+24>>2]=0;c[q+104+24+4>>2]=0;c[q+104+24+8>>2]=0;c[q+104+24+12>>2]=0;c[q+104+40>>2]=1065353216;j=q+104+44|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;p=1.0;j=10;while(1){if((j|0)<=0){j=14;break}j=j+-1|0;c[q+168+48>>2]=c[d+92>>2];c[q+168+48+4>>2]=c[d+92+4>>2];c[q+168+48+8>>2]=c[d+92+8>>2];c[q+168+48+12>>2]=c[d+92+12>>2];c[q+104+48>>2]=c[d+112>>2];c[q+104+48+4>>2]=c[d+112+4>>2];c[q+104+48+8>>2]=c[d+112+8>>2];c[q+104+48+12>>2]=c[d+112+12>>2];n=+g[d+92>>2]-+g[d+112>>2];o=+g[d+96>>2]-+g[d+116>>2];f=+g[d+100>>2]-+g[d+120>>2];r=c[d+8>>2]|0;g[q+4>>2]=1.0;c[q+76>>2]=0;c[q+12>>2]=0;c[q+12+4>>2]=0;c[q+12+8>>2]=0;c[q+12+12>>2]=0;c[q+12+16>>2]=0;c[q+12+20>>2]=0;c[q+12+24>>2]=0;c[q+12+28>>2]=0;c[q>>2]=5064;c[q+80>>2]=r;g[q+84>>2]=n;g[q+88>>2]=o;g[q+92>>2]=f;g[q+96>>2]=0.0;g[q+100>>2]=0.0;r=c[r+188>>2]|0;b[q+8>>1]=b[r+4>>1]|0;b[q+10>>1]=b[r+6>>1]|0;r=c[d+12>>2]|0;f=+Db[c[(c[r>>2]|0)+48>>2]&15](r);r=c[d+12>>2]|0;kb[c[(c[r>>2]|0)+44>>2]&31](r,f+ +g[d+56>>2]);if(!(a[d+170>>0]|0))zd(e,c[d+12>>2]|0,q+168|0,q+104|0,q,+g[e+56>>2]);else gd(c[d+8>>2]|0,c[d+12>>2]|0,q+168|0,q+104|0,q,+g[e+56>>2]);r=c[d+12>>2]|0;kb[c[(c[r>>2]|0)+44>>2]&31](r,f);o=+g[q+4>>2];p=p-o;if(o<1.0){h=+g[d+112>>2];m=+g[d+92>>2];i=+g[d+116>>2];n=+g[d+96>>2];k=+g[d+120>>2];o=+g[d+100>>2];f=+G(+((h-m)*(h-m)+(i-n)*(i-n)+(k-o)*(k-o)));if(f>1.1920928955078125e-07){v=+g[q+44>>2];t=+g[q+48>>2];x=+g[q+52>>2];w=((h-m)*(1.0/f)*v+(i-n)*(1.0/f)*t+(k-o)*(1.0/f)*x)*2.0;u=(h-m)*(1.0/f)-v*w;s=(i-n)*(1.0/f)-t*w;w=(k-o)*(1.0/f)-x*w;k=1.0/+G(+(w*w+(u*u+s*s)));c[d+112>>2]=c[d+92>>2];c[d+112+4>>2]=c[d+92+4>>2];c[d+112+8>>2]=c[d+92+8>>2];c[d+112+12>>2]=c[d+92+12>>2];h=f*(k*u-v*(x*k*w+(v*k*u+t*k*s)))+ +g[d+112>>2];g[d+112>>2]=h;i=f*(k*s-t*(x*k*w+(v*k*u+t*k*s)))+ +g[d+116>>2];g[d+116>>2]=i;k=f*(k*w-x*(x*k*w+(v*k*u+t*k*s)))+ +g[d+120>>2];g[d+120>>2]=k;f=i;}else f=i;i=h-m;h=f-n;f=k-o;if(!(i*i+h*h+f*f>1.1920928955078125e-07)){j=11;break}x=1.0/+G(+(i*i+h*h+f*f));if(+g[d+76>>2]*i*x+h*x*+g[d+80>>2]+f*x*+g[d+84>>2]<=0.0){j=11;break}}else{c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2];}if(!(p>.009999999776482582)){j=14;break}}if((j|0)==11){l=q;return}else if((j|0)==14){l=q;return}}function Td(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0;s=l;l=l+48|0;c[s+16>>2]=c[e>>2];c[s+16+4>>2]=c[e+4>>2];c[s+16+8>>2]=c[e+8>>2];c[s+16+12>>2]=c[e+12>>2];c[s+16+16>>2]=c[f>>2];c[s+16+16+4>>2]=c[f+4>>2];c[s+16+16+8>>2]=c[f+8>>2];c[s+16+16+12>>2]=c[f+12>>2];do if((c[d+60>>2]|0)==2){h=c[d+48>>2]|0;hg(b+64|0,h)|0;i=c[b+68>>2]|0;if(i|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+68>>2]=h;c[b+76>>2]=(c[b+76>>2]|0)+-1;h=c[b+8>>2]|0;if(!h){c[6436]=(c[6436]|0)+1;h=ic(63)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}i=h;j=i+44|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(j|0))}else c[b+8>>2]=0;c[h+32>>2]=0;c[h+36>>2]=d;c[h+40>>2]=0;c[h>>2]=c[s+16>>2];c[h+4>>2]=c[s+16+4>>2];c[h+8>>2]=c[s+16+8>>2];c[h+12>>2]=c[s+16+12>>2];c[h+16>>2]=c[s+16+16>>2];c[h+20>>2]=c[s+16+20>>2];c[h+24>>2]=c[s+16+24>>2];c[h+28>>2]=c[s+16+28>>2];Fe(b+4|0,c[b+4>>2]|0,h);c[b+16>>2]=(c[b+16>>2]|0)+1;c[d+48>>2]=h;h=1;}else{c[b+168>>2]=(c[b+168>>2]|0)+1;r=c[d+48>>2]|0;if(((((+g[r>>2]<=+g[s+16+16>>2]?+g[r+16>>2]>=+g[s+16>>2]:0)?+g[r+4>>2]<=+g[s+16+20>>2]:0)?+g[r+20>>2]>=+g[s+16+4>>2]:0)?+g[r+8>>2]<=+g[s+16+24>>2]:0)?+g[r+24>>2]>=+g[s+16+8>>2]:0){k=+g[d+16>>2];t=+g[e>>2]-k;m=+g[d+20>>2];p=+g[e+4>>2]-m;n=+g[d+24>>2];q=+g[e+8>>2]-n;u=+g[b+140>>2];k=(+g[d+32>>2]-k)*.5*u;m=(+g[d+36>>2]-m)*.5*u;n=u*(+g[d+40>>2]-n)*.5;g[s>>2]=k;g[s+4>>2]=m;g[s+8>>2]=n;g[s+12>>2]=0.0;if(t<0.0)g[s>>2]=-k;if(p<0.0)g[s+4>>2]=-m;if(q<0.0)g[s+8>>2]=-n;if(bh(b+4|0,r,s+16|0,s,.05000000074505806)|0){c[b+172>>2]=(c[b+172>>2]|0)+1;h=1;}else h=0;break}h=hg(b+4|0,r)|0;a:do if(h){o=c[b+12>>2]|0;if((o|0)<=-1){h=c[b+4>>2]|0;break}if(o){i=0;while(1){j=c[h+32>>2]|0;i=i+1|0;if(!j)break a;if((i|0)>=(o|0)){h=j;break}else h=j;}}}else h=0;while(0);c[r>>2]=c[s+16>>2];c[r+4>>2]=c[s+16+4>>2];c[r+8>>2]=c[s+16+8>>2];c[r+12>>2]=c[s+16+12>>2];c[r+16>>2]=c[s+16+16>>2];c[r+20>>2]=c[s+16+20>>2];c[r+24>>2]=c[s+16+24>>2];c[r+28>>2]=c[s+16+28>>2];Fe(b+4|0,h,r);c[b+172>>2]=(c[b+172>>2]|0)+1;h=1;}while(0);i=c[d+52>>2]|0;c[((i|0)==0?b+124+(c[d+60>>2]<<2)|0:i+56|0)>>2]=c[d+56>>2];i=c[d+56>>2]|0;if(i|0)c[i+52>>2]=c[d+52>>2];c[d+16>>2]=c[e>>2];c[d+16+4>>2]=c[e+4>>2];c[d+16+8>>2]=c[e+8>>2];c[d+16+12>>2]=c[e+12>>2];c[d+32>>2]=c[f>>2];c[d+32+4>>2]=c[f+4>>2];c[d+32+8>>2]=c[f+8>>2];c[d+32+12>>2]=c[f+12>>2];i=c[b+144>>2]|0;c[d+60>>2]=i;c[d+52>>2]=0;c[d+56>>2]=c[b+124+(i<<2)>>2];j=c[b+124+(i<<2)>>2]|0;if(j|0)c[j+52>>2]=d;c[b+124+(i<<2)>>2]=d;if(!h){l=s;return}a[b+194>>0]=1;if(a[b+193>>0]|0){l=s;return}c[s>>2]=9028;c[s+4>>2]=b;ce(b+64|0,c[b+64>>2]|0,c[d+48>>2]|0,s);ce(b+4|0,c[b+4>>2]|0,c[d+48>>2]|0,s);l=s;return}function Ud(b){b=b|0;var d=0.0,e=0,f=0,h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0;q=l;l=l+80|0;if((pb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(j=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(pb[c[(c[j>>2]|0)+48>>2]&127](j)|0)&8|0):0)?(h=c[b+24>>2]|0,h=pb[c[(c[h>>2]|0)+36>>2]&127](h)|0,c[q+64>>2]=1065353216,c[q+64+4>>2]=1065353216,c[q+64+8>>2]=0,g[q+64+12>>2]=0.0,(h|0)>0):0){e=0;do{i=c[b+24>>2]|0;i=Kb[c[(c[i>>2]|0)+40>>2]&31](i,e)|0;j=c[i+748>>2]|0;if((j|0)>0){f=0;do{r=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;mb[c[(c[r>>2]|0)+32>>2]&0](r,i+4+(f*184|0)+32|0,i+4+(f*184|0)+64|0,+g[i+4+(f*184|0)+80>>2],c[i+4+(f*184|0)+148>>2]|0,q+64|0);f=f+1|0;}while((f|0)!=(j|0))}e=e+1|0;}while((e|0)!=(h|0))}if(!(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0)){l=q;return}r=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;if(!((pb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&3)){l=q;return}if((c[b+8>>2]|0)<=0){l=q;return}j=0;do{i=c[(c[b+16>>2]|0)+(j<<2)>>2]|0;if(!(c[i+204>>2]&32)){if(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(r=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(pb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&1|0):0){c[q+64>>2]=1065353216;c[q+64+4>>2]=1065353216;c[q+64+8>>2]=1065353216;g[q+64+12>>2]=0.0;switch(c[i+216>>2]|0){case 1:{e=1065353216;f=1065353216;h=1065353216;break}case 2:{e=0;f=1065353216;h=0;break}case 3:{e=1065353216;f=1065353216;h=0;break}case 4:{e=0;f=0;h=1065353216;break}case 5:{e=0;f=1065353216;h=1065353216;break}default:{e=0;f=0;h=1065353216;}}c[q+64>>2]=h;c[q+64+4>>2]=f;c[q+64+8>>2]=e;g[q+64+12>>2]=0.0;Zb[c[(c[b>>2]|0)+28>>2]&127](b,i+4|0,c[i+192>>2]|0,q+64|0);}e=c[b+72>>2]|0;if(e|0?(pb[c[(c[e>>2]|0)+48>>2]&127](e)|0)&2|0:0){c[q+32>>2]=1065353216;c[q+32+4>>2]=0;c[q+32+8>>2]=0;g[q+32+12>>2]=0.0;r=c[i+192>>2]|0;Zb[c[(c[r>>2]|0)+8>>2]&127](r,i+4|0,q+64|0,q+48|0);g[q+64>>2]=+g[q+64>>2]+-.019999999552965164;g[q+64+4>>2]=+g[q+64+4>>2]+-.019999999552965164;g[q+64+8>>2]=+g[q+64+8>>2]+-.019999999552965164;g[q+48>>2]=+g[q+48>>2]+.019999999552965164;g[q+48+4>>2]=+g[q+48+4>>2]+.019999999552965164;g[q+48+8>>2]=+g[q+48+8>>2]+.019999999552965164;do if((a[b+44>>0]|0?(c[i+236>>2]|0)==2:0)?(c[i+204>>2]&3|0)==0:0){r=c[i+192>>2]|0;Zb[c[(c[r>>2]|0)+8>>2]&127](r,i+68|0,q+16|0,q);d=+g[q+16>>2]+-.019999999552965164;g[q+16>>2]=d;k=+g[q+16+4>>2]+-.019999999552965164;g[q+16+4>>2]=k;m=+g[q+16+8>>2]+-.019999999552965164;g[q+16+8>>2]=m;n=+g[q>>2]+.019999999552965164;g[q>>2]=n;o=+g[q+4>>2]+.019999999552965164;g[q+4>>2]=o;p=+g[q+8>>2]+.019999999552965164;g[q+8>>2]=p;if(d<+g[q+64>>2])g[q+64>>2]=d;if(k<+g[q+64+4>>2])g[q+64+4>>2]=k;if(m<+g[q+64+8>>2])g[q+64+8>>2]=m;d=+g[q+16+12>>2];if(d<+g[q+64+12>>2])g[q+64+12>>2]=d;if(+g[q+48>>2]<n)g[q+48>>2]=n;if(+g[q+48+4>>2]<o)g[q+48+4>>2]=o;if(+g[q+48+8>>2]<p)g[q+48+8>>2]=p;d=+g[q+12>>2];if(!(+g[q+48+12>>2]<d))break;g[q+48+12>>2]=d;}while(0);r=c[b+72>>2]|0;Zb[c[(c[r>>2]|0)+52>>2]&127](r,q+64|0,q+48|0,q+32|0);}}j=j+1|0;}while((j|0)<(c[b+8>>2]|0));l=q;return}function Vd(b,d,e,f,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0;if((j|0)<2|(k|0)<2){m=0;return m|0}u=S(k,j)|0;c[6436]=(c[6436]|0)+1;b=ic(u>>>0>268435455?18:(u<<4|3)+16|0)|0;if(!b)q=0;else{c[(b+4+15&-16)+-4>>2]=b;q=b+4+15&-16;}s=YG(u>>>0>1073741823?-1:u<<2)|0;if((k|0)>0?(j|0)>0:0){b=0;do{z=+(b|0)/+(k+-1|0);r=+g[e>>2];r=r+z*(+g[h>>2]-r);t=+g[e+4>>2];t=t+z*(+g[h+4>>2]-t);v=+g[e+8>>2];v=v+z*(+g[h+8>>2]-v);w=+g[f>>2];x=+g[f+4>>2];y=+g[f+8>>2];w=w+z*(+g[i>>2]-w)-r;x=x+z*(+g[i+4>>2]-x)-t;y=y+z*(+g[i+8>>2]-y)-v;p=S(b,j)|0;o=0;do{z=+(o|0)/+(j+-1|0);A=o+p|0;g[q+(A<<4)>>2]=r+w*z;g[q+(A<<4)+4>>2]=t+x*z;g[q+(A<<4)+8>>2]=v+y*z;g[q+(A<<4)+12>>2]=0.0;g[s+(A<<2)>>2]=1.0;o=o+1|0;}while((o|0)!=(j|0));b=b+1|0;}while((b|0)!=(k|0))}c[6436]=(c[6436]|0)+1;b=ic(1271)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}tc(b,d,u,q,s);if(l&1|0){g[(c[b+720>>2]|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&2|0){g[(c[b+720>>2]|0)+((j+-1|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&4|0){A=S(k+-1|0,j)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&8|0){A=j+-1+(S(k+-1|0,j)|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&16|0){g[(c[b+720>>2]|0)+(((j+-1|0)/2|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&32|0){A=S((k+-1|0)/2|0,j)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&64|0){A=j+-1+(S((k+-1|0)/2|0,j)|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&128|0){A=(S(k+-1|0,j)|0)+((j+-1|0)/2|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&256|0){A=(S((k+-1|0)/2|0,j)|0)+((j+-1|0)/2|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(q|0){c[6437]=(c[6437]|0)+1;Tc(c[q+-4>>2]|0);}ZG(s);if((k|0)<=0){A=b;return A|0}o=0;u=0;d=j+-1|0;while(1){p=u;u=u+1|0;a:do if((j|0)>0){i=S(p,j)|0;h=S(u,j)|0;t=1.0/+(k+-1|0)*+(k+-1-p|0);r=1.0/+(k+-1|0)*+(k+-2-p|0);if((u|0)<(k|0)){p=0;q=o;}else{p=0;while(1){q=p;p=p+1|0;if((p|0)<(j|0))Ef(b,q+i|0,p+i|0,0,0);if((p|0)==(j|0))break a}}while(1){e=p+1|0;s=p+i|0;f=p+h|0;if((p|0)==(j+-1|0))break;Ef(b,s,e+i|0,0,0);Ef(b,s,f,0,0);Nf(b,s,f,e+h|0,0);if(!n)Nf(b,e+h|0,e+i|0,s,0);else{z=1.0/+(j+-1|0)*+(p|0);g[n+(q<<2)>>2]=z;g[n+(q+1<<2)>>2]=t;g[n+(q+2<<2)>>2]=z;g[n+(q+3<<2)>>2]=r;y=1.0/+(j+-1|0)*+(e|0);g[n+(q+4<<2)>>2]=y;g[n+(q+5<<2)>>2]=r;Nf(b,e+h|0,e+i|0,s,0);g[n+(q+6<<2)>>2]=y;g[n+(q+7<<2)>>2]=r;g[n+(q+8<<2)>>2]=y;g[n+(q+9<<2)>>2]=t;g[n+(q+10<<2)>>2]=z;g[n+(q+11<<2)>>2]=t;}if(m)Ef(b,s,e+h|0,0,0);p=e;q=q+12|0;}Ef(b,d,f,0,0);o=(j*12|0)+-12+o|0;}while(0);if((u|0)==(k|0))break;else d=d+j|0;}return b|0}function Wd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0;p=l;l=l+144|0;if((c[a+16>>2]|0)<=0){o=a+76|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=c[a>>2]|0;o=o+68|0;o=c[o>>2]|0;lb[o&511](a);l=p;return}j=p+16+16|0;k=p+16+32|0;m=p+16+48|0;i=0;do{o=c[a+24>>2]|0;n=o+(i*80|0)|0;c[p+16>>2]=c[n>>2];c[p+16+4>>2]=c[n+4>>2];c[p+16+8>>2]=c[n+8>>2];c[p+16+12>>2]=c[n+12>>2];n=o+(i*80|0)+16|0;c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];c[j+12>>2]=c[n+12>>2];n=o+(i*80|0)+32|0;c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];c[k+12>>2]=c[n+12>>2];n=o+(i*80|0)+48|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];o=c[o+(i*80|0)+64>>2]|0;o=pb[c[(c[o>>2]|0)+28>>2]&127](o)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];q=+g[p+4>>2]*+g[b+4>>2]/+g[a+80>>2];r=+g[p+8>>2]*+g[b+8>>2]/+g[a+84>>2];g[p>>2]=+g[p>>2]*+g[b>>2]/+g[a+76>>2];g[p+4>>2]=q;g[p+8>>2]=r;g[p+12>>2]=0.0;o=c[(c[a+24>>2]|0)+(i*80|0)+64>>2]|0;nb[c[(c[o>>2]|0)+24>>2]&127](o,p);r=+g[p+16+52>>2]*+g[b+4>>2]/+g[a+80>>2];q=+g[p+16+56>>2]*+g[b+8>>2]/+g[a+84>>2];g[p+16+48>>2]=+g[m>>2]*+g[b>>2]/+g[a+76>>2];g[p+16+52>>2]=r;g[p+16+56>>2]=q;g[p+16+60>>2]=0.0;o=c[a+24>>2]|0;n=o+(i*80|0)|0;c[n>>2]=c[p+16>>2];c[n+4>>2]=c[p+16+4>>2];c[n+8>>2]=c[p+16+8>>2];c[n+12>>2]=c[p+16+12>>2];n=o+(i*80|0)+16|0;c[n>>2]=c[j>>2];c[n+4>>2]=c[j+4>>2];c[n+8>>2]=c[j+8>>2];c[n+12>>2]=c[j+12>>2];n=o+(i*80|0)+32|0;c[n>>2]=c[k>>2];c[n+4>>2]=c[k+4>>2];c[n+8>>2]=c[k+8>>2];c[n+12>>2]=c[k+12>>2];o=o+(i*80|0)+48|0;c[o>>2]=c[m>>2];c[o+4>>2]=c[m+4>>2];c[o+8>>2]=c[m+8>>2];c[o+12>>2]=c[m+12>>2];if(c[a+64>>2]|0){n=c[(c[a+24>>2]|0)+(i*80|0)+64>>2]|0;Zb[c[(c[n>>2]|0)+8>>2]&127](n,p+16|0,p+128|0,p+112|0);c[p+80>>2]=c[p+128>>2];c[p+80+4>>2]=c[p+128+4>>2];c[p+80+8>>2]=c[p+128+8>>2];c[p+80+12>>2]=c[p+128+12>>2];c[p+80+16>>2]=c[p+112>>2];c[p+80+16+4>>2]=c[p+112+4>>2];c[p+80+16+8>>2]=c[p+112+8>>2];c[p+80+16+12>>2]=c[p+112+12>>2];n=c[a+64>>2]|0;o=c[(c[a+24>>2]|0)+(i*80|0)+76>>2]|0;d=hg(n,o)|0;a:do if(d){h=c[n+8>>2]|0;if((h|0)<=-1){d=c[n>>2]|0;break}if(h){e=0;while(1){f=c[d+32>>2]|0;e=e+1|0;if(!f)break a;if((e|0)>=(h|0)){d=f;break}else d=f;}}}else d=0;while(0);c[o>>2]=c[p+80>>2];c[o+4>>2]=c[p+80+4>>2];c[o+8>>2]=c[p+80+8>>2];c[o+12>>2]=c[p+80+12>>2];c[o+16>>2]=c[p+80+16>>2];c[o+20>>2]=c[p+80+20>>2];c[o+24>>2]=c[p+80+24>>2];c[o+28>>2]=c[p+80+28>>2];Fe(n,d,o);}i=i+1|0;}while((i|0)<(c[a+16>>2]|0));o=a+76|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=c[a>>2]|0;o=o+68|0;o=c[o>>2]|0;lb[o&511](a);l=p;return}function Xd(d,f,h,i,j,k){d=d|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0.0,m=0.0,n=0.0;c[d>>2]=8708;b[d+4>>1]=-2;b[d+6>>1]=-1;c[d+92>>2]=j;c[d+96>>2]=0;a[d+100>>0]=0;c[d+104>>2]=0;c[d+108>>2]=0;if(!j){c[6436]=(c[6436]|0)+1;j=ic(95)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}mi(j);c[d+92>>2]=j;a[d+100>>0]=1;}if(!k){c[6436]=(c[6436]|0)+1;j=ic(43)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}k=j+4|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[j>>2]=8772;a[j+20>>0]=1;c[j+16>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[d+112>>2]=j;c[6436]=(c[6436]|0)+1;j=ic(215)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}zh(j,c[d+112>>2]|0);c[d+108>>2]=j;a[j+193>>0]=1;}c[d+8>>2]=c[f>>2];c[d+8+4>>2]=c[f+4>>2];c[d+8+8>>2]=c[f+8>>2];c[d+8+12>>2]=c[f+12>>2];c[d+24>>2]=c[h>>2];c[d+24+4>>2]=c[h+4>>2];c[d+24+8>>2]=c[h+8>>2];c[d+24+12>>2]=c[h+12>>2];n=+(e[d+6>>1]|0);m=n/(+g[d+28>>2]-+g[d+12>>2]);l=n/(+g[d+32>>2]-+g[d+16>>2]);g[d+40>>2]=n/(+g[d+24>>2]-+g[d+8>>2]);g[d+44>>2]=m;g[d+48>>2]=l;g[d+52>>2]=0.0;h=(i&65535)+1&65535;c[6436]=(c[6436]|0)+1;j=ic(h<<6|19)|0;if(!j)f=0;else{c[(j+4+15&-16)+-4>>2]=j;f=j+4+15&-16;}if(h|0){j=f+(h<<6)|0;k=f;do{c[k>>2]=0;c[k+8>>2]=0;k=k+64|0;}while((k|0)!=(j|0))}c[d+60>>2]=f;b[d+58>>1]=(i&65535)+1;b[d+56>>1]=0;b[d+64>>1]=1;if(h>>>0>1){j=1;k=1;do{b[f+(k<<6)+48>>1]=k+1;j=j+1<<16>>16;k=j&65535;}while(k>>>0<h>>>0)}b[f+(h+-1<<6)+48>>1]=0;c[6436]=(c[6436]|0)+1;j=ic((h<<3|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}c[d+80>>2]=j;c[d+68>>2]=j;c[6436]=(c[6436]|0)+1;j=ic((h<<3|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}c[d+84>>2]=j;c[d+72>>2]=j;c[6436]=(c[6436]|0)+1;j=ic((h<<3|3)+16|0)|0;if(!j){f=0;i=d+88|0;c[i>>2]=f;i=d+76|0;c[i>>2]=f;f=c[d+60>>2]|0;c[f>>2]=0;h=f+48|0;b[h>>1]=0;h=f+54|0;b[h>>1]=1;h=c[d+68>>2]|0;b[h>>1]=0;k=h+2|0;b[k>>1]=0;k=b[d+6>>1]|0;j=h+4|0;b[j>>1]=k;h=h+6|0;b[h>>1]=0;h=f+50|0;b[h>>1]=0;h=f+56|0;b[h>>1]=1;h=c[d+72>>2]|0;b[h>>1]=0;j=h+2|0;b[j>>1]=0;j=b[d+6>>1]|0;k=h+4|0;b[k>>1]=j;h=h+6|0;b[h>>1]=0;h=f+52|0;b[h>>1]=0;f=f+58|0;b[f>>1]=1;i=c[i>>2]|0;b[i>>1]=0;f=i+2|0;b[f>>1]=0;f=b[d+6>>1]|0;h=i+4|0;b[h>>1]=f;i=i+6|0;b[i>>1]=0;c[d>>2]=8644;return}c[(j+4+15&-16)+-4>>2]=j;f=j+4+15&-16;i=d+88|0;c[i>>2]=f;i=d+76|0;c[i>>2]=f;f=c[d+60>>2]|0;c[f>>2]=0;h=f+48|0;b[h>>1]=0;h=f+54|0;b[h>>1]=1;h=c[d+68>>2]|0;b[h>>1]=0;k=h+2|0;b[k>>1]=0;k=b[d+6>>1]|0;j=h+4|0;b[j>>1]=k;h=h+6|0;b[h>>1]=0;h=f+50|0;b[h>>1]=0;h=f+56|0;b[h>>1]=1;h=c[d+72>>2]|0;b[h>>1]=0;j=h+2|0;b[j>>1]=0;j=b[d+6>>1]|0;k=h+4|0;b[k>>1]=j;h=h+6|0;b[h>>1]=0;h=f+52|0;b[h>>1]=0;f=f+58|0;b[f>>1]=1;i=c[i>>2]|0;b[i>>1]=0;f=i+2|0;b[f>>1]=0;f=b[d+6>>1]|0;h=i+4|0;b[h>>1]=f;i=i+6|0;b[i>>1]=0;c[d>>2]=8644;return}function Yd(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0.0,Y=0.0;W=l;l=l+240|0;f=(a[b+8>>0]|0)!=0;h=f?e:d;f=f?d:e;S=+g[h+116>>2]-+g[h+52>>2];T=+g[h+120>>2]-+g[h+56>>2];U=+g[h+124>>2]-+g[h+60>>2];V=+g[h+252>>2];if(S*S+T*T+U*U<V*V){X=1.0;l=W;return +X}H=+g[f+4>>2];I=+g[f+20>>2];J=+g[f+36>>2];K=+g[f+8>>2];L=+g[f+24>>2];M=+g[f+40>>2];N=+g[f+12>>2];O=+g[f+28>>2];P=+g[f+44>>2];j=-+g[f+52>>2];k=-+g[f+56>>2];m=-+g[f+60>>2];Q=+g[h+4>>2];R=+g[h+20>>2];S=+g[h+36>>2];T=+g[h+8>>2];U=+g[h+24>>2];V=+g[h+40>>2];p=+g[h+12>>2];q=+g[h+28>>2];r=+g[h+44>>2];w=+g[h+52>>2];v=+g[h+56>>2];u=+g[h+60>>2];s=H*j+I*k+J*m+(H*w+I*v+J*u);t=K*j+L*k+M*m+(K*w+L*v+M*u);u=N*j+O*k+P*m+(N*w+O*v+P*u);v=+g[h+68>>2];w=+g[h+84>>2];x=+g[h+100>>2];y=+g[h+72>>2];z=+g[h+88>>2];A=+g[h+104>>2];B=+g[h+76>>2];C=+g[h+92>>2];D=+g[h+108>>2];n=+g[h+116>>2];o=+g[h+120>>2];G=+g[h+124>>2];E=H*j+I*k+J*m+(H*n+I*o+J*G);F=K*j+L*k+M*m+(K*n+L*o+M*G);G=N*j+O*k+P*m+(N*n+O*o+P*G);f=c[f+192>>2]|0;if(((c[f+4>>2]|0)+-21|0)>>>0>=9){X=1.0;l=W;return +X}g[W+224>>2]=s;g[W+224+4>>2]=t;g[W+224+8>>2]=u;g[W+224+12>>2]=0.0;if(E<s){g[W+224>>2]=E;i=E;}else i=s;if(F<t){g[W+224+4>>2]=F;j=F;}else j=t;if(G<u){g[W+224+8>>2]=G;k=G;}else k=u;g[W+208>>2]=s;g[W+208+4>>2]=t;g[W+208+8>>2]=u;g[W+208+12>>2]=0.0;if(s<E){g[W+208>>2]=E;m=E;}else m=s;if(t<F){g[W+208+4>>2]=F;n=F;}else n=t;if(u<G){g[W+208+8>>2]=G;o=G;}else o=u;Y=+g[h+248>>2];g[W+224>>2]=i-Y;g[W+224+4>>2]=j-Y;g[W+224+8>>2]=k-Y;g[W+208>>2]=Y+m;g[W+208+4>>2]=Y+n;g[W+208+8>>2]=Y+o;c[W>>2]=3796;g[W+4>>2]=H*Q+I*R+J*S;g[W+8>>2]=H*T+I*U+J*V;g[W+12>>2]=H*p+I*q+J*r;g[W+16>>2]=0.0;g[W+20>>2]=K*Q+L*R+M*S;g[W+24>>2]=K*T+L*U+M*V;g[W+28>>2]=K*p+L*q+M*r;g[W+32>>2]=0.0;g[W+36>>2]=N*Q+O*R+P*S;g[W+40>>2]=N*T+O*U+P*V;g[W+44>>2]=N*p+O*q+P*r;g[W+48>>2]=0.0;g[W+52>>2]=s;g[W+56>>2]=t;g[W+60>>2]=u;g[W+64>>2]=0.0;g[W+68>>2]=H*v+I*w+J*x;g[W+72>>2]=H*y+I*z+J*A;g[W+76>>2]=H*B+I*C+J*D;g[W+80>>2]=0.0;g[W+84>>2]=K*v+L*w+M*x;g[W+88>>2]=K*y+L*z+M*A;g[W+92>>2]=K*B+L*C+M*D;g[W+96>>2]=0.0;g[W+100>>2]=N*v+O*w+P*x;g[W+104>>2]=N*y+O*z+P*A;g[W+108>>2]=N*B+O*C+P*D;g[W+112>>2]=0.0;g[W+116>>2]=E;g[W+120>>2]=F;g[W+124>>2]=G;g[W+128>>2]=0.0;g[W+196>>2]=Y;c[W+200>>2]=c[h+244>>2];if(f|0?(Zb[c[(c[f>>2]|0)+64>>2]&127](f,W,W+224|0,W+208|0),X=+g[W+200>>2],X<+g[h+244>>2]):0){g[h+244>>2]=X;Y=X;l=W;return +Y}Y=1.0;l=W;return +Y}function Zd(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0.0,Y=0.0;W=l;l=l+240|0;f=(a[b+8>>0]|0)!=0;h=f?e:d;f=f?d:e;S=+g[h+116>>2]-+g[h+52>>2];T=+g[h+120>>2]-+g[h+56>>2];U=+g[h+124>>2]-+g[h+60>>2];V=+g[h+252>>2];if(S*S+T*T+U*U<V*V){X=1.0;l=W;return +X}H=+g[f+4>>2];I=+g[f+20>>2];J=+g[f+36>>2];K=+g[f+8>>2];L=+g[f+24>>2];M=+g[f+40>>2];N=+g[f+12>>2];O=+g[f+28>>2];P=+g[f+44>>2];j=-+g[f+52>>2];k=-+g[f+56>>2];m=-+g[f+60>>2];Q=+g[h+4>>2];R=+g[h+20>>2];S=+g[h+36>>2];T=+g[h+8>>2];U=+g[h+24>>2];V=+g[h+40>>2];p=+g[h+12>>2];q=+g[h+28>>2];r=+g[h+44>>2];w=+g[h+52>>2];v=+g[h+56>>2];u=+g[h+60>>2];s=H*j+I*k+J*m+(H*w+I*v+J*u);t=K*j+L*k+M*m+(K*w+L*v+M*u);u=N*j+O*k+P*m+(N*w+O*v+P*u);v=+g[h+68>>2];w=+g[h+84>>2];x=+g[h+100>>2];y=+g[h+72>>2];z=+g[h+88>>2];A=+g[h+104>>2];B=+g[h+76>>2];C=+g[h+92>>2];D=+g[h+108>>2];n=+g[h+116>>2];o=+g[h+120>>2];G=+g[h+124>>2];E=H*j+I*k+J*m+(H*n+I*o+J*G);F=K*j+L*k+M*m+(K*n+L*o+M*G);G=N*j+O*k+P*m+(N*n+O*o+P*G);f=c[f+192>>2]|0;if(((c[f+4>>2]|0)+-21|0)>>>0>=9){X=1.0;l=W;return +X}g[W+224>>2]=s;g[W+224+4>>2]=t;g[W+224+8>>2]=u;g[W+224+12>>2]=0.0;if(E<s){g[W+224>>2]=E;i=E;}else i=s;if(F<t){g[W+224+4>>2]=F;j=F;}else j=t;if(G<u){g[W+224+8>>2]=G;k=G;}else k=u;g[W+208>>2]=s;g[W+208+4>>2]=t;g[W+208+8>>2]=u;g[W+208+12>>2]=0.0;if(s<E){g[W+208>>2]=E;m=E;}else m=s;if(t<F){g[W+208+4>>2]=F;n=F;}else n=t;if(u<G){g[W+208+8>>2]=G;o=G;}else o=u;Y=+g[h+248>>2];g[W+224>>2]=i-Y;g[W+224+4>>2]=j-Y;g[W+224+8>>2]=k-Y;g[W+208>>2]=Y+m;g[W+208+4>>2]=Y+n;g[W+208+8>>2]=Y+o;c[W>>2]=5660;g[W+4>>2]=H*Q+I*R+J*S;g[W+8>>2]=H*T+I*U+J*V;g[W+12>>2]=H*p+I*q+J*r;g[W+16>>2]=0.0;g[W+20>>2]=K*Q+L*R+M*S;g[W+24>>2]=K*T+L*U+M*V;g[W+28>>2]=K*p+L*q+M*r;g[W+32>>2]=0.0;g[W+36>>2]=N*Q+O*R+P*S;g[W+40>>2]=N*T+O*U+P*V;g[W+44>>2]=N*p+O*q+P*r;g[W+48>>2]=0.0;g[W+52>>2]=s;g[W+56>>2]=t;g[W+60>>2]=u;g[W+64>>2]=0.0;g[W+68>>2]=H*v+I*w+J*x;g[W+72>>2]=H*y+I*z+J*A;g[W+76>>2]=H*B+I*C+J*D;g[W+80>>2]=0.0;g[W+84>>2]=K*v+L*w+M*x;g[W+88>>2]=K*y+L*z+M*A;g[W+92>>2]=K*B+L*C+M*D;g[W+96>>2]=0.0;g[W+100>>2]=N*v+O*w+P*x;g[W+104>>2]=N*y+O*z+P*A;g[W+108>>2]=N*B+O*C+P*D;g[W+112>>2]=0.0;g[W+116>>2]=E;g[W+120>>2]=F;g[W+124>>2]=G;g[W+128>>2]=0.0;g[W+196>>2]=Y;c[W+200>>2]=c[h+244>>2];if(f|0?(Zb[c[(c[f>>2]|0)+64>>2]&127](f,W,W+224|0,W+208|0),X=+g[W+200>>2],X<+g[h+244>>2]):0){g[h+244>>2]=X;Y=X;l=W;return +Y}Y=1.0;l=W;return +Y}function _d(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0;v=l;l=l+192|0;u=c[b+4>>2]|0;i=+g[u+752>>2];if(i<f){l=v;return}s=c[u+740>>2]|0;q=(c[b+8>>2]|0)+8|0;t=c[q>>2]|0;B=+g[e>>2];w=+g[d>>2]*f+B;A=+g[e+4>>2];j=+g[d+4>>2]*f+A;x=+g[e+8>>2];k=+g[d+8>>2]*f+x;r=(c[b+12>>2]|0)+8|0;p=c[r>>2]|0;h=(s|0)!=(t|0)?p:s;p=(s|0)!=(t|0)?t:p;y=w-+g[h+52>>2];z=j-+g[h+56>>2];o=k-+g[h+60>>2];m=y*+g[h+4>>2]+z*+g[h+20>>2]+o*+g[h+36>>2];n=y*+g[h+8>>2]+z*+g[h+24>>2]+o*+g[h+40>>2];o=y*+g[h+12>>2]+z*+g[h+28>>2]+o*+g[h+44>>2];B=B-+g[p+52>>2];A=A-+g[p+56>>2];x=x-+g[p+60>>2];z=B*+g[p+4>>2]+A*+g[p+20>>2]+x*+g[p+36>>2];y=B*+g[p+8>>2]+A*+g[p+24>>2]+x*+g[p+40>>2];x=B*+g[p+12>>2]+A*+g[p+28>>2]+x*+g[p+44>>2];g[v>>2]=m;g[v+4>>2]=n;g[v+8>>2]=o;g[v+12>>2]=0.0;g[v+16>>2]=z;g[v+20>>2]=y;g[v+24>>2]=x;g[v+28>>2]=0.0;c[v+64>>2]=c[d>>2];c[v+64+4>>2]=c[d+4>>2];c[v+64+8>>2]=c[d+8>>2];c[v+64+12>>2]=c[d+12>>2];g[v+80>>2]=f;g[v+84>>2]=0.0;g[v+88>>2]=0.0;g[v+92>>2]=0.0;c[v+112>>2]=0;a[v+116>>0]=0;c[v+120>>2]=0;c[v+120+4>>2]=0;c[v+120+8>>2]=0;c[v+120+12>>2]=0;c[v+120+16>>2]=0;c[v+120+20>>2]=0;c[v+120+24>>2]=0;c[v+120+28>>2]=0;g[v+48>>2]=w;g[v+52>>2]=j;g[v+56>>2]=k;g[v+60>>2]=0.0;c[v+32>>2]=c[e>>2];c[v+32+4>>2]=c[e+4>>2];c[v+32+8>>2]=c[e+8>>2];c[v+32+12>>2]=c[e+12>>2];p=c[u+748>>2]|0;if((p|0)>0){d=-1;h=0;f=i*i;while(1){i=+g[u+4+(h*184|0)>>2]-m;j=+g[u+4+(h*184|0)+4>>2]-n;k=+g[u+4+(h*184|0)+8>>2]-o;e=i*i+j*j+k*k<f;d=e?h:d;h=h+1|0;if((h|0)==(p|0)){p=d;break}else f=e?i*i+j*j+k*k:f;}}else p=-1;q=c[q>>2]|0;r=c[r>>2]|0;f=+g[q+224>>2]*+g[r+224>>2];f=f<-10.0?-10.0:f;g[v+84>>2]=f>10.0?10.0:f;g[v+92>>2]=+g[q+228>>2]*+g[r+228>>2];f=+g[q+232>>2]*+g[r+232>>2];f=f<-10.0?-10.0:f;g[v+88>>2]=f>10.0?10.0:f;f=+g[v+72>>2];r=+F(+f)>.7071067690849304;k=+g[v+68>>2];if(r){j=1.0/+G(+(f*f+k*k));o=+g[v+64>>2];m=-(j*f);n=o*-(j*f);o=-(j*k*o);i=(f*f+k*k)*j;j=j*k;f=0.0;}else{i=+g[v+64>>2];B=1.0/+G(+(i*i+k*k));m=B*i;n=(i*i+k*k)*B;o=f*-(k*B);i=-(B*i*f);j=0.0;f=-(k*B);}g[v+152>>2]=f;g[v+156>>2]=m;g[v+160>>2]=j;g[v+168>>2]=i;g[v+172>>2]=o;g[v+176>>2]=n;e=c[b+20>>2]|0;d=c[b+16>>2]|0;if((s|0)!=(t|0)){c[v+96>>2]=e;h=b+28|0;e=d;d=b+24|0;}else{c[v+96>>2]=d;h=b+24|0;d=b+28|0;}b=c[h>>2]|0;c[v+100>>2]=e;c[v+104>>2]=b;c[v+108>>2]=c[d>>2];if((p|0)>-1){b=u+4+(p*184|0)+148|0;t=c[b>>2]|0;e=u+4+(p*184|0)+120|0;d=c[e>>2]|0;q=u+4+(p*184|0)+124|0;h=c[q>>2]|0;s=u+4+(p*184|0)+128|0;r=c[s>>2]|0;C=u+4+(p*184|0)+112|0;D=c[C>>2]|0;Vh(u+4+(p*184|0)|0,v|0,184)|0;c[C>>2]=D;c[e>>2]=d;c[q>>2]=h;c[s>>2]=r;c[b>>2]=t;}else af(u,v)|0;l=v;return}function $d(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var i=0,k=0,l=0,m=0.0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0;p=+g[e>>2];i=(g[j>>2]=p,c[j>>2]|0);u=p<999999984306749440.0?i:1566444395;m=+g[e+4>>2];l=(g[j>>2]=m,c[j>>2]|0);v=m<999999984306749440.0?l:1566444395;y=+g[e+8>>2];o=(g[j>>2]=y,c[j>>2]|0);w=y<999999984306749440.0?o:1566444395;i=p>-999999984306749440.0?i:-581039253;l=m>-999999984306749440.0?l:-581039253;o=y>-999999984306749440.0?o:-581039253;y=+g[e+16>>2];t=y<(c[j>>2]=u,+g[j>>2]);k=(g[j>>2]=y,c[j>>2]|0);u=t?k:u;m=+g[e+20>>2];t=m<(c[j>>2]=v,+g[j>>2]);n=(g[j>>2]=m,c[j>>2]|0);v=t?n:v;p=+g[e+24>>2];t=p<(c[j>>2]=w,+g[j>>2]);q=(g[j>>2]=p,c[j>>2]|0);w=t?q:w;k=(c[j>>2]=i,+g[j>>2])<y?k:i;i=(c[j>>2]=l,+g[j>>2])<m?n:l;o=(c[j>>2]=o,+g[j>>2])<p?q:o;y=+g[e+32>>2];q=y<(c[j>>2]=u,+g[j>>2]);r=(g[j>>2]=y,c[j>>2]|0);m=+g[e+36>>2];s=m<(c[j>>2]=v,+g[j>>2]);t=(g[j>>2]=m,c[j>>2]|0);p=+g[e+40>>2];l=p<(c[j>>2]=w,+g[j>>2]);n=(g[j>>2]=p,c[j>>2]|0);k=(c[j>>2]=k,+g[j>>2])<y?r:k;i=(c[j>>2]=i,+g[j>>2])<m?t:i;o=(c[j>>2]=o,+g[j>>2])<p?n:o;G=(c[j>>2]=k,+g[j>>2]);H=(c[j>>2]=q?r:u,+g[j>>2]);C=(c[j>>2]=i,+g[j>>2]);D=(c[j>>2]=s?t:v,+g[j>>2]);m=(c[j>>2]=o,+g[j>>2]);z=(c[j>>2]=l?n:w,+g[j>>2]);o=c[d+8>>2]|0;F=+g[o+4>>2];B=+g[o+8>>2];p=+g[o+12>>2];E=+g[o+36>>2];A=+g[o+40>>2];y=+g[o+44>>2];o=~~(((G-H<2.0000000949949026e-03?H+-1.0000000474974513e-03:H)-F)*E)&65535&-2;q=~~(((C-D<2.0000000949949026e-03?D+-1.0000000474974513e-03:D)-B)*A)&65535&-2;r=~~(((m-z<2.0000000949949026e-03?z+-1.0000000474974513e-03:z)-p)*y)&65535&-2;s=~~(((G-H<2.0000000949949026e-03?G+1.0000000474974513e-03:G)-F)*E+1.0)&65535|1;t=~~(((C-D<2.0000000949949026e-03?C+1.0000000474974513e-03:C)-B)*A+1.0)&65535|1;e=~~(((m-z<2.0000000949949026e-03?m+1.0000000474974513e-03:m)-p)*y+1.0)&65535|1;n=c[d+4>>2]|0;i=c[n+4>>2]|0;if((i|0)==(c[n+8>>2]|0)?(x=i|0?i<<1:1,(i|0)<(x|0)):0){if(!x)l=0;else{c[6436]=(c[6436]|0)+1;i=ic((x<<4|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}l=i;i=c[n+4>>2]|0;}if((i|0)>0){k=0;do{d=l+(k<<4)|0;w=(c[n+12>>2]|0)+(k<<4)|0;c[d>>2]=c[w>>2];c[d+4>>2]=c[w+4>>2];c[d+8>>2]=c[w+8>>2];c[d+12>>2]=c[w+12>>2];k=k+1|0;}while((k|0)!=(i|0))}i=c[n+12>>2]|0;if(i|0){if(a[n+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[n+12>>2]=0;}a[n+16>>0]=1;c[n+12>>2]=l;c[n+8>>2]=x;i=c[n+4>>2]|0;}x=c[n+12>>2]|0;b[x+(i<<4)>>1]=o;b[x+(i<<4)+2>>1]=q;b[x+(i<<4)+4>>1]=r;b[x+(i<<4)+6>>1]=s;b[x+(i<<4)+8>>1]=t;b[x+(i<<4)+10>>1]=e;c[x+(i<<4)+12>>2]=f<<21|h;c[n+4>>2]=(c[n+4>>2]|0)+1;return}function ae(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=c[b>>2]|0;m=c[b+4>>2]|0;i=c[b+8>>2]|0;n=c[a+4>>2]|0;p=uh(a,d,m,i)|0;c[p+12>>2]=c[b+12>>2];c[p+16>>2]=n+1;c[p+20>>2]=n+2;h=c[(c[a+12>>2]|0)+(c[b+12>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if(!((e|0)==(m|0)&(f|0)==(i|0))){if((e|0)==(i|0)?(f|0)==(m|0):0){e=h+12+8|0;break}g=c[h+8>>2]|0;if(!((f|0)==(m|0)&(g|0)==(i|0)))if(!((f|0)==(i|0)&(g|0)==(m|0)))if((g|0)!=(m|0)|(e|0)==(i|0)^1){if((g|0)==(i|0)?(e|0)==(m|0):0){e=h+12+4|0;break}e=9556;}else{e=1;o=2;}else e=h+12|0;else{e=0;o=2;}}else{e=2;o=2;}while(0);if((o|0)==2)e=h+12+(e<<2)|0;c[e>>2]=n;k=uh(a,d,i,l)|0;c[k+12>>2]=c[b+12+4>>2];c[k+16>>2]=n+2;c[k+20>>2]=n;h=c[(c[a+12>>2]|0)+(c[b+12+4>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if(!((e|0)==(i|0)&(f|0)==(l|0))){if((e|0)==(l|0)?(f|0)==(i|0):0){e=h+12+8|0;break}g=c[h+8>>2]|0;if(!((f|0)==(i|0)&(g|0)==(l|0)))if(!((f|0)==(l|0)&(g|0)==(i|0)))if((g|0)!=(i|0)|(e|0)==(l|0)^1){if((g|0)==(l|0)?(e|0)==(i|0):0){e=h+12+4|0;break}e=9556;}else{e=1;o=12;}else e=h+12|0;else{e=0;o=12;}}else{e=2;o=12;}while(0);if((o|0)==12)e=h+12+(e<<2)|0;c[e>>2]=n+1;j=uh(a,d,l,m)|0;c[j+12>>2]=c[b+12+8>>2];c[j+16>>2]=n;c[j+20>>2]=n+1;e=c[a+12>>2]|0;i=c[e+(c[b+12+8>>2]<<2)>>2]|0;f=c[i>>2]|0;g=c[i+4>>2]|0;do if(!((f|0)==(l|0)&(g|0)==(m|0))){if((f|0)==(m|0)?(g|0)==(l|0):0){f=i+12+8|0;break}h=c[i+8>>2]|0;if(!((g|0)==(l|0)&(h|0)==(m|0)))if(!((g|0)==(m|0)&(h|0)==(l|0)))if((h|0)!=(l|0)|(f|0)==(m|0)^1){if((h|0)==(m|0)?(f|0)==(l|0):0){f=i+12+4|0;break}f=9556;}else{f=1;o=22;}else f=i+12|0;else{f=0;o=22;}}else{f=2;o=22;}while(0);if((o|0)==22)f=i+12+(f<<2)|0;c[f>>2]=n+2;f=c[e+(c[p+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){ee(e,p,f);c[(c[a+12>>2]|0)+(c[p+24>>2]<<2)>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}e=c[a+12>>2]|0;}f=c[e+(c[k+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){ee(e,k,f);c[(c[a+12>>2]|0)+(c[k+24>>2]<<2)>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}e=c[a+12>>2]|0;}f=c[e+(c[j+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){ee(e,j,f);c[(c[a+12>>2]|0)+(c[j+24>>2]<<2)>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}e=c[a+12>>2]|0;}c[e+(c[b+24>>2]<<2)>>2]=0;if(!b)return;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function be(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0,i=0,j=0,k=0,m=0,n=0;n=l;l=l+336|0;h=c[d+36>>2]|0;c[n+272+4>>2]=35;c[n+272+8>>2]=0;c[n+272+12>>2]=1065353216;c[n+272+16>>2]=1065353216;c[n+272+20>>2]=1065353216;g[n+272+24>>2]=0.0;c[n+272>>2]=3564;c[n+272+52>>2]=h;g[n+272+44>>2]=0.0;k=c[b+28>>2]|0;d=c[k+4>>2]|0;if(c[(c[k+8>>2]|0)+204>>2]&3|0?a[h+376>>0]|0:0){l=n;return}if((a[22576]|0)==0?iy(22576)|0:0){if((a[22584]|0)==0?iy(22584)|0:0){c[5728]=1065353216;c[5729]=0;c[5730]=0;c[5731]=0;c[5732]=0;c[5733]=1065353216;c[5734]=0;c[5735]=0;c[5736]=0;c[5737]=0;c[5738]=1065353216;g[5739]=0.0;}c[5712]=c[5728];c[5713]=c[5729];c[5714]=c[5730];c[5715]=c[5731];c[5716]=c[5732];c[5717]=c[5733];c[5718]=c[5734];c[5719]=c[5735];c[5720]=c[5736];c[5721]=c[5737];c[5722]=c[5738];c[5723]=c[5739];c[5724]=0;c[5725]=0;c[5726]=0;c[5727]=0;}e=c[(c[b+28>>2]|0)+12>>2]|0;c[n>>2]=1065353216;c[n+4>>2]=0;c[n+8>>2]=0;g[n+12>>2]=0.0;if(!(!(vd(n+272|0,22848,d,e,n,n+216|0)|0)?!(Ac(n+272|0,22848,d,e,n,n+216|0,0)|0):0))i=12;if((i|0)==12?(c[n+4>>2]=0,c[n+4+4>>2]=0,c[n+4+8>>2]=0,c[n+4+12>>2]=0,c[n+4+16>>2]=0,c[n+4+20>>2]=0,a[n+152>>0]=0,c[n>>2]=3384,k=c[(c[b+28>>2]|0)+8>>2]|0,nd(b,n+216|0,h,0,0,0,(c[k+236>>2]&2|0)==0?0:k,k,n)|0):0){c[6436]=(c[6436]|0)+1;d=ic(235)|0;if(!d)k=0;else{c[(d+4+15&-16)+-4>>2]=d;k=d+4+15&-16;}e=k+4|0;d=k+152|0;Ik(e|0,0,212)|0;c[k>>2]=3384;h=n+4|0;i=e+100|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0;}while((e|0)<(i|0));e=k+104|0;c[e>>2]=c[n+104>>2];c[e+4>>2]=c[n+104+4>>2];c[e+8>>2]=c[n+104+8>>2];c[e+12>>2]=c[n+104+12>>2];e=k+120|0;c[e>>2]=c[n+120>>2];c[e+4>>2]=c[n+120+4>>2];c[e+8>>2]=c[n+120+8>>2];c[e+12>>2]=c[n+120+12>>2];e=k+136|0;c[e>>2]=c[n+136>>2];c[e+4>>2]=c[n+136+4>>2];c[e+8>>2]=c[n+136+8>>2];c[e+12>>2]=c[n+136+12>>2];a[d>>0]=a[n+152>>0]|0;e=k+156|0;h=n+156|0;i=e+60|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0;}while((e|0)<(i|0));i=c[b+24>>2]|0;j=k;d=c[i+852>>2]|0;if((d|0)==(c[i+856>>2]|0)?(m=d|0?d<<1:1,(d|0)<(m|0)):0){if(!m)h=0;else{c[6436]=(c[6436]|0)+1;d=ic((m<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}h=d;d=c[i+852>>2]|0;}if((d|0)>0){e=0;do{c[h+(e<<2)>>2]=c[(c[i+860>>2]|0)+(e<<2)>>2];e=e+1|0;}while((e|0)!=(d|0))}e=c[i+860>>2]|0;if(e){if(a[i+864>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[i+852>>2]|0;}c[i+860>>2]=0;}a[i+864>>0]=1;c[i+860>>2]=h;c[i+856>>2]=m;}c[(c[i+860>>2]|0)+(d<<2)>>2]=j;c[i+852>>2]=d+1;d=c[b+24>>2]|0;e=k+64|0;f=+g[e>>2];if(!(c[(c[(c[b+28>>2]|0)+8>>2]|0)+204>>2]&3)){g[e>>2]=f*+g[d+340>>2];d=d+352|0;}else{g[e>>2]=f*+g[d+344>>2];d=d+356|0;}b=k+68|0;g[b>>2]=+g[d>>2]*+g[b>>2];}l=n;return}function ce(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!((d|0)!=0&(e|0)!=0))return;if((c[b+24>>2]|0)<128?(c[b+28>>2]|0)<128:0){c[6436]=(c[6436]|0)+1;h=ic(1043)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}i=c[b+24>>2]|0;if((i|0)>0){h=0;do{k=(c[b+32>>2]|0)+(h<<3)|0;l=c[k+4>>2]|0;m=j+(h<<3)|0;c[m>>2]=c[k>>2];c[m+4>>2]=l;h=h+1|0;}while((h|0)!=(i|0))}h=c[b+32>>2]|0;if(h|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=j;c[b+28>>2]=128;}c[b+24>>2]=128;h=c[b+32>>2]|0;c[h>>2]=d;c[h+4>>2]=e;h=1;i=124;do{m=h+-1|0;j=c[b+32>>2]|0;k=c[j+(m<<3)>>2]|0;l=c[j+(m<<3)+4>>2]|0;if((m|0)>(i|0)){e=c[b+24>>2]|0;if((e|0)<(e<<1|0)?(c[b+28>>2]|0)<(e<<1|0):0){if(e){c[6436]=(c[6436]|0)+1;i=ic((e<<4|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}d=c[b+24>>2]|0;if((d|0)>0){j=0;do{p=(c[b+32>>2]|0)+(j<<3)|0;o=c[p+4>>2]|0;n=i+(j<<3)|0;c[n>>2]=c[p>>2];c[n+4>>2]=o;j=j+1|0;}while((j|0)!=(d|0))}}else i=0;j=c[b+32>>2]|0;if(j|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=i;c[b+28>>2]=e<<1;j=i;}c[b+24>>2]=e<<1;i=(e<<1)+-4|0;}do if((k|0)==(l|0))if(!(c[k+40>>2]|0))h=m;else{o=c[k+36>>2]|0;c[j+(m<<3)>>2]=o;c[j+(m<<3)+4>>2]=o;o=c[k+40>>2]|0;p=h+1|0;n=c[b+32>>2]|0;c[n+(h<<3)>>2]=o;c[n+(h<<3)+4>>2]=o;n=c[k+40>>2]|0;o=c[b+32>>2]|0;c[o+(p<<3)>>2]=c[k+36>>2];c[o+(p<<3)+4>>2]=n;h=h+2|0;}else if(((((+g[k>>2]<=+g[l+16>>2]?+g[k+16>>2]>=+g[l>>2]:0)?+g[k+4>>2]<=+g[l+20>>2]:0)?+g[k+20>>2]>=+g[l+4>>2]:0)?+g[k+8>>2]<=+g[l+24>>2]:0)?+g[k+24>>2]>=+g[l+8>>2]:0){d=(c[l+40>>2]|0)!=0;if(!(c[k+40>>2]|0))if(d){o=c[l+36>>2]|0;c[j+(m<<3)>>2]=k;c[j+(m<<3)+4>>2]=o;o=c[l+40>>2]|0;p=c[b+32>>2]|0;c[p+(h<<3)>>2]=k;c[p+(h<<3)+4>>2]=o;h=h+1|0;break}else{Vb[c[(c[f>>2]|0)+8>>2]&127](f,k,l);h=m;break}else{e=c[k+36>>2]|0;if(d){p=c[l+36>>2]|0;c[j+(m<<3)>>2]=e;c[j+(m<<3)+4>>2]=p;p=c[l+36>>2]|0;n=h+1|0;m=c[b+32>>2]|0;c[m+(h<<3)>>2]=c[k+40>>2];c[m+(h<<3)+4>>2]=p;m=c[l+40>>2]|0;p=h+2|0;o=c[b+32>>2]|0;c[o+(n<<3)>>2]=c[k+36>>2];c[o+(n<<3)+4>>2]=m;n=c[l+40>>2]|0;o=c[b+32>>2]|0;c[o+(p<<3)>>2]=c[k+40>>2];c[o+(p<<3)+4>>2]=n;h=h+3|0;break}else{c[j+(m<<3)>>2]=e;c[j+(m<<3)+4>>2]=l;p=c[b+32>>2]|0;c[p+(h<<3)>>2]=c[k+40>>2];c[p+(h<<3)+4>>2]=l;h=h+1|0;break}}}else h=m;while(0)}while((h|0)!=0);return}function de(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;h=l;l=l+16|0;f=is()|0;if((a[22672]|0)==0?iy(22672)|0:0){c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;bg(23272,0.0,0,0,h);}c[5869]=c[5869]|1;g[5904]=0.0;x=+g[5914]*0.0;D=+g[5915]*0.0;g[5909]=+g[5913]*0.0;g[5910]=x;g[5911]=D;g[5912]=0.0;c[5917]=0;c[5918]=0;c[5919]=0;c[5920]=0;D=+g[5906]*0.0;x=+g[5907]*0.0;g[5958]=+g[5905]*0.0;g[5959]=D;g[5960]=x;g[5961]=0.0;c[f+4>>2]=7;c[f+8>>2]=-1;c[f+12>>2]=-1;g[f+16>>2]=3402823466385288598117041.0e14;a[f+20>>0]=1;a[f+21>>0]=0;c[f+24>>2]=-1;c[f+28>>2]=23272;c[f+32>>2]=b;g[f+36>>2]=0.0;g[f+40>>2]=.30000001192092896;c[f+44>>2]=0;c[f>>2]=4724;a[f+48>>0]=0;c[f+116>>2]=c[d>>2];c[f+116+4>>2]=c[d+4>>2];c[f+116+8>>2]=c[d+8>>2];c[f+116+12>>2]=c[d+12>>2];c[f+132>>2]=c[d+16>>2];c[f+132+4>>2]=c[d+16+4>>2];c[f+132+8>>2]=c[d+16+8>>2];c[f+132+12>>2]=c[d+16+12>>2];c[f+148>>2]=c[d+32>>2];c[f+148+4>>2]=c[d+32+4>>2];c[f+148+8>>2]=c[d+32+8>>2];c[f+148+12>>2]=c[d+32+12>>2];c[f+164>>2]=c[d+48>>2];c[f+164+4>>2]=c[d+48+4>>2];c[f+164+8>>2]=c[d+48+8>>2];c[f+164+12>>2]=c[d+48+12>>2];a[f+180>>0]=e&1;x=+g[f+116>>2];D=+g[b+4>>2];w=+g[f+132>>2];C=+g[b+8>>2];v=+g[f+148>>2];B=+g[b+12>>2];u=+g[f+120>>2];t=+g[f+136>>2];s=+g[f+152>>2];r=+g[f+124>>2];p=+g[f+140>>2];n=+g[f+156>>2];A=+g[b+20>>2];z=+g[b+24>>2];y=+g[b+28>>2];q=+g[b+36>>2];o=+g[b+40>>2];m=+g[b+44>>2];F=+g[f+164>>2];E=+g[f+168>>2];i=+g[f+172>>2];k=+g[b+52>>2]+(D*F+C*E+B*i);j=A*F+z*E+y*i+ +g[b+56>>2];i=q*F+o*E+m*i+ +g[b+60>>2];g[f+52>>2]=x*D+w*C+v*B;g[f+56>>2]=D*u+C*t+B*s;g[f+60>>2]=D*r+C*p+B*n;g[f+64>>2]=0.0;g[f+68>>2]=x*A+w*z+v*y;g[f+72>>2]=u*A+t*z+s*y;g[f+76>>2]=r*A+p*z+n*y;g[f+80>>2]=0.0;g[f+84>>2]=x*q+w*o+v*m;g[f+88>>2]=u*q+t*o+s*m;g[f+92>>2]=r*q+p*o+n*m;g[f+96>>2]=0.0;g[f+100>>2]=k;g[f+104>>2]=j;g[f+108>>2]=i;g[f+112>>2]=0.0;g[f+184>>2]=1.0;g[f+188>>2]=-1.0;g[f+192>>2]=0.0;g[f+196>>2]=0.0;g[f+200>>2]=1.0;g[f+204>>2]=.699999988079071;g[f+208>>2]=0.0;g[f+212>>2]=0.0;g[f+216>>2]=1.0;g[f+220>>2]=.699999988079071;g[f+224>>2]=0.0;g[f+228>>2]=0.0;g[f+264>>2]=1.0;g[f+268>>2]=.699999988079071;g[f+272>>2]=1.0;g[f+276>>2]=0.0;g[f+280>>2]=1.0;g[f+284>>2]=.699999988079071;g[f+288>>2]=1.0;g[f+292>>2]=0.0;g[f+232>>2]=1.0;g[f+236>>2]=.699999988079071;g[f+240>>2]=1.0;g[f+244>>2]=0.0;g[f+248>>2]=1.0;g[f+252>>2]=.699999988079071;g[f+256>>2]=1.0;g[f+260>>2]=0.0;a[f+1096>>0]=0;g[f+1116>>2]=0.0;g[f+1120>>2]=0.0;g[f+1124>>2]=0.0;c[f+300>>2]=0;c[f+1100>>2]=0;c[f+1100+4>>2]=0;c[f+1100+8>>2]=0;a[f+1100+12>>0]=0;a[f+49>>0]=1;Uc(f,(c[f+28>>2]|0)+4|0,(c[f+32>>2]|0)+4|0);l=h;return f|0}function ee(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=0;do{k=l;l=l+1|0;m=(l|0)==3;j=c[b+((m?0:l)<<2)>>2]|0;k=c[b+(((k+2|0)%3|0)<<2)>>2]|0;e=c[d>>2]|0;f=c[d+4>>2]|0;if(!((e|0)==(k|0)&(f|0)==(j|0)))if(!((e|0)==(j|0)&(f|0)==(k|0))){g=c[d+8>>2]|0;if(!((f|0)==(k|0)&(g|0)==(j|0)))if(!((f|0)==(j|0)&(g|0)==(k|0)))if((g|0)!=(k|0)|(e|0)==(j|0)^1)e=(g|0)!=(j|0)|(e|0)==(k|0)^1?9556:d+12+4|0;else{e=1;n=3;}else e=d+12|0;else{e=0;n=3;}}else e=d+12+8|0;else{e=2;n=3;}if((n|0)==3){n=0;e=d+12+(e<<2)|0;}i=c[e>>2]|0;e=c[b>>2]|0;f=c[b+4>>2]|0;if(!((e|0)==(j|0)&(f|0)==(k|0)))if(!((e|0)==(k|0)&(f|0)==(j|0))){g=c[b+8>>2]|0;if(!((f|0)==(j|0)&(g|0)==(k|0)))if(!((f|0)==(k|0)&(g|0)==(j|0)))if((g|0)!=(j|0)|(e|0)==(k|0)^1)e=(g|0)!=(k|0)|(e|0)==(j|0)^1?9556:b+12+4|0;else{e=1;n=10;}else e=b+12|0;else{e=0;n=10;}}else e=b+12+8|0;else{e=2;n=10;}if((n|0)==10){n=0;e=b+12+(e<<2)|0;}h=c[a+(c[e>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if(!((e|0)==(k|0)&(f|0)==(j|0))){if((e|0)==(j|0)?(f|0)==(k|0):0){e=h+12+8|0;break}g=c[h+8>>2]|0;if(!((f|0)==(k|0)&(g|0)==(j|0)))if(!((f|0)==(j|0)&(g|0)==(k|0)))if((g|0)!=(k|0)|(e|0)==(j|0)^1){if((g|0)==(j|0)?(e|0)==(k|0):0){e=h+12+4|0;break}e=9556;}else{e=1;n=17;}else e=h+12|0;else{e=0;n=17;}}else{e=2;n=17;}while(0);if((n|0)==17){n=0;e=h+12+(e<<2)|0;}c[e>>2]=i;e=c[b>>2]|0;f=c[b+4>>2]|0;if(!((e|0)==(j|0)&(f|0)==(k|0)))if(!((e|0)==(k|0)&(f|0)==(j|0))){g=c[b+8>>2]|0;if(!((f|0)==(j|0)&(g|0)==(k|0)))if(!((f|0)==(k|0)&(g|0)==(j|0)))if((g|0)!=(j|0)|(e|0)==(k|0)^1)e=(g|0)!=(k|0)|(e|0)==(j|0)^1?9556:b+12+4|0;else{e=1;n=27;}else e=b+12|0;else{e=0;n=27;}}else e=b+12+8|0;else{e=2;n=27;}if((n|0)==27){n=0;e=b+12+(e<<2)|0;}i=c[e>>2]|0;e=c[d>>2]|0;f=c[d+4>>2]|0;if(!((e|0)==(k|0)&(f|0)==(j|0)))if(!((e|0)==(j|0)&(f|0)==(k|0))){g=c[d+8>>2]|0;if(!((f|0)==(k|0)&(g|0)==(j|0)))if(!((f|0)==(j|0)&(g|0)==(k|0)))if((g|0)!=(k|0)|(e|0)==(j|0)^1)e=(g|0)!=(j|0)|(e|0)==(k|0)^1?9556:d+12+4|0;else{e=1;n=34;}else e=d+12|0;else{e=0;n=34;}}else e=d+12+8|0;else{e=2;n=34;}if((n|0)==34){n=0;e=d+12+(e<<2)|0;}h=c[a+(c[e>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if(!((e|0)==(j|0)&(f|0)==(k|0))){if((e|0)==(k|0)?(f|0)==(j|0):0){e=h+12+8|0;break}g=c[h+8>>2]|0;if(!((f|0)==(j|0)&(g|0)==(k|0)))if(!((f|0)==(k|0)&(g|0)==(j|0)))if((g|0)!=(j|0)|(e|0)==(k|0)^1){if((g|0)==(k|0)?(e|0)==(j|0):0){e=h+12+4|0;break}e=9556;}else{e=1;n=41;}else e=h+12|0;else{e=0;n=41;}}else{e=2;n=41;}while(0);if((n|0)==41){n=0;e=h+12+(e<<2)|0;}c[e>>2]=i;}while(!m);return}function fe(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=c[b+92>>2]|0;if(!(pb[c[(c[o>>2]|0)+56>>2]&127](o)|0))return;o=c[b+92>>2]|0;o=pb[c[(c[o>>2]|0)+28>>2]&127](o)|0;f=c[o+4>>2]|0;if((f|0)>1){je(o,0,f+-1|0);j=c[o+4>>2]|0;}else j=f;m=c[b+104>>2]|0;f=j-m|0;if((m|0)<0){if((c[o+8>>2]|0)<(f|0)){if(!f){g=0;i=j;}else{c[6436]=(c[6436]|0)+1;g=ic((f<<4|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16;}i=c[o+4>>2]|0;}if((i|0)>0){h=0;do{m=c[o+12>>2]|0;c[g+(h<<4)>>2]=c[m+(h<<4)>>2];c[g+(h<<4)+4>>2]=c[m+(h<<4)+4>>2];c[g+(h<<4)+8>>2]=c[m+(h<<4)+8>>2];c[g+(h<<4)+12>>2]=c[m+(h<<4)+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[o+12>>2]|0;if(h|0){if(a[o+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[o+12>>2]=0;}a[o+16>>0]=1;c[o+12>>2]=g;c[o+8>>2]=f;h=o+12|0;}else h=o+12|0;g=j;do{m=(c[h>>2]|0)+(g<<4)|0;g=g+1|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;}while((g|0)!=(f|0))}c[o+4>>2]=f;c[b+104>>2]=0;if((f|0)>0){l=0;m=0;g=0;h=0;do{k=c[o+12>>2]|0;j=k+(l<<4)|0;p=m;m=c[j>>2]|0;k=k+(l<<4)+4|0;i=c[k>>2]|0;if(!((m|0)==(p|0)&(i|0)==(g|0))){p=m+54|0;g=m+48|0;if((((((e[p>>1]|0)>=(e[i+48>>1]|0)?(e[i+54>>1]|0)>=(e[g>>1]|0):0)?(e[p+2>>1]|0)>=(e[i+48+2>>1]|0):0)?(e[i+54+2>>1]|0)>=(e[g+2>>1]|0):0)?(e[p+4>>1]|0)>=(e[i+52>>1]|0):0)?(e[i+54+4>>1]|0)>=(e[m+52>>1]|0):0)g=i;else{f=i;n=29;}}else{f=g;n=29;}if((n|0)==29){n=0;h=c[b+92>>2]|0;Vb[c[(c[h>>2]|0)+32>>2]&127](h,j,d);c[j>>2]=0;c[k>>2]=0;h=(c[b+104>>2]|0)+1|0;c[b+104>>2]=h;c[6164]=(c[6164]|0)+-1;g=f;f=c[o+4>>2]|0;}l=l+1|0;}while((l|0)<(f|0));if((f|0)>1){je(o,0,f+-1|0);h=c[b+104>>2]|0;g=c[o+4>>2]|0;}else g=f;f=g-h|0;if((h|0)<0){if((c[o+8>>2]|0)<(f|0)){if(!f){h=0;j=g;}else{c[6436]=(c[6436]|0)+1;h=ic((f<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}j=c[o+4>>2]|0;}if((j|0)>0){i=0;do{p=c[o+12>>2]|0;c[h+(i<<4)>>2]=c[p+(i<<4)>>2];c[h+(i<<4)+4>>2]=c[p+(i<<4)+4>>2];c[h+(i<<4)+8>>2]=c[p+(i<<4)+8>>2];c[h+(i<<4)+12>>2]=c[p+(i<<4)+12>>2];i=i+1|0;}while((i|0)!=(j|0))}i=c[o+12>>2]|0;if(i|0){if(a[o+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[o+12>>2]=0;}a[o+16>>0]=1;c[o+12>>2]=h;c[o+8>>2]=f;}do{p=(c[o+12>>2]|0)+(g<<4)|0;g=g+1|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;}while((g|0)!=(f|0))}}c[o+4>>2]=f;c[b+104>>2]=0;return}function ge(b){b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0;u=l;l=l+176|0;if(!(a[b+527>>0]|0)){l=u;return}g[b+36>>2]=0.0;g[b+520>>2]=0.0;g[b+516>>2]=0.0;c[b+576>>2]=0;c[b+576+4>>2]=0;c[b+576+8>>2]=0;c[b+576+12>>2]=0;if(!(a[b+524>>0]|0)){d=c[b+28>>2]|0;j=+g[b+348>>2];k=+g[b+352>>2];q=+g[b+356>>2];s=j*+g[d+20>>2]+k*+g[d+24>>2]+q*+g[d+28>>2]+ +g[d+56>>2];e=c[b+32>>2]|0;m=+g[b+412>>2];n=+g[b+416>>2];r=+g[b+420>>2];t=m*+g[e+20>>2]+n*+g[e+24>>2]+r*+g[e+28>>2]+ +g[e+56>>2];o=m*+g[e+36>>2]+n*+g[e+40>>2]+r*+g[e+44>>2]+ +g[e+60>>2];p=j*+g[d+4>>2]+k*+g[d+8>>2]+q*+g[d+12>>2]+ +g[d+52>>2];q=j*+g[d+36>>2]+k*+g[d+40>>2]+q*+g[d+44>>2]+ +g[d+60>>2];r=m*+g[e+4>>2]+n*+g[e+8>>2]+r*+g[e+12>>2]+ +g[e+52>>2];if((r-p)*(r-p)+(t-s)*(t-s)+(o-q)*(o-q)>1.1920928955078125e-07){h=1.0/+G(+((r-p)*(r-p)+(t-s)*(t-s)+(o-q)*(o-q)));g[u+128>>2]=(r-p)*h;g[u+128+4>>2]=(t-s)*h;g[u+128+8>>2]=(o-q)*h;c[u+128+12>>2]=0;m=(o-q)*h;f=(t-s)*h;h=(r-p)*h;}else{c[u+128>>2]=1065353216;c[u+128+4>>2]=0;c[u+128+8>>2]=0;g[u+128+12>>2]=0.0;m=0.0;f=0.0;h=1.0;}if(+F(+m)>.7071067690849304){w=m*m+f*f;v=1.0/+G(+w);j=-(v*m);m=v*f;n=-(m*h);i=h*j;k=0.0;f=w*v;h=m;}else{j=h*h+f*f;i=1.0/+G(+j);k=-(f*i);f=i*h;n=m*k;i=j*i;j=f;f=-(f*m);h=0.0;}g[u+128+16>>2]=k;g[u+128+20>>2]=j;g[u+128+24>>2]=h;g[u+128+32>>2]=f;g[u+128+36>>2]=n;g[u+128+40>>2]=i;d=0;while(1){x=c[b+28>>2]|0;c[u+80>>2]=c[x+4>>2];c[u+80+4>>2]=c[x+20>>2];c[u+80+8>>2]=c[x+36>>2];g[u+80+12>>2]=0.0;c[u+80+16>>2]=c[x+8>>2];c[u+80+20>>2]=c[x+24>>2];c[u+80+24>>2]=c[x+40>>2];g[u+80+28>>2]=0.0;c[u+80+32>>2]=c[x+12>>2];c[u+80+36>>2]=c[x+28>>2];c[u+80+40>>2]=c[x+44>>2];g[u+80+44>>2]=0.0;c[u+32>>2]=c[e+4>>2];c[u+32+4>>2]=c[e+20>>2];c[u+32+8>>2]=c[e+36>>2];g[u+32+12>>2]=0.0;c[u+32+16>>2]=c[e+8>>2];c[u+32+20>>2]=c[e+24>>2];c[u+32+24>>2]=c[e+40>>2];g[u+32+28>>2]=0.0;c[u+32+32>>2]=c[e+12>>2];c[u+32+36>>2]=c[e+28>>2];c[u+32+40>>2]=c[e+44>>2];g[u+32+44>>2]=0.0;w=s-+g[x+56>>2];v=q-+g[x+60>>2];g[u+16>>2]=p-+g[x+52>>2];g[u+16+4>>2]=w;g[u+16+8>>2]=v;g[u+16+12>>2]=0.0;v=t-+g[e+56>>2];w=o-+g[e+60>>2];g[u>>2]=r-+g[e+52>>2];g[u+4>>2]=v;g[u+8>>2]=w;g[u+12>>2]=0.0;x=c[b+28>>2]|0;e=c[b+32>>2]|0;yg(b+48+(d*84|0)|0,u+80|0,u+32|0,u+16|0,u,u+128+(d<<4)|0,x+396|0,+g[x+344>>2],e+396|0,+g[e+344>>2]);d=d+1|0;if((d|0)==3)break;e=c[b+32>>2]|0;}d=b+32|0;}else d=b+32|0;e=c[b+28>>2]|0;x=c[d>>2]|0;pc(b,e+4|0,x+4|0,e+264|0,x+264|0);l=u;return}function he(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=l;l=l+64|0;if((h|0)>0){b=0;j=0;do{s=c[f+(j<<2)>>2]|0;b=(s|0)>(b|0)?s:b;j=j+1|0;}while((j|0)<(h*3|0))}else b=0;p=b+1|0;k=S(p,p)|0;if(!k)j=0;else{c[6436]=(c[6436]|0)+1;j=ic(k+19|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}Ik(j|0,0,k|0)|0;}if((b|0)>-1){c[6436]=(c[6436]|0)+1;b=ic((p<<4|3)+16|0)|0;if(!b)m=0;else{c[(b+4+15&-16)+-4>>2]=b;m=b+4+15&-16;}b=0;do{s=m+(b<<4)|0;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];c[s+12>>2]=c[t+12>>2];b=b+1|0;}while((b|0)!=(p|0));b=0;k=0;while(1){r=c[e+(k+1<<2)>>2]|0;s=c[e+(k+2<<2)>>2]|0;c[m+(b<<4)>>2]=c[e+(k<<2)>>2];c[m+(b<<4)+4>>2]=r;c[m+(b<<4)+8>>2]=s;g[m+(b<<4)+12>>2]=0.0;k=k+3|0;if((k|0)>=(p*3|0)){s=m;r=m;break}else b=b+1|0;}}else{s=0;r=0;}c[6436]=(c[6436]|0)+1;b=ic(1271)|0;if(!b)q=0;else{c[(b+4+15&-16)+-4>>2]=b;q=b+4+15&-16;}tc(q,d,p,s,0);if((h|0)>0){e=0;do{d=c[f+(e<<2)>>2]|0;n=c[f+(e+1<<2)>>2]|0;o=c[f+(e+2<<2)>>2]|0;k=S(d,p)|0;b=j+(k+o)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[j+((S(o,p)|0)+d)>>0]=1;Ef(q,o,d,0,0);}m=S(n,p)|0;b=j+(m+d)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[j+(k+n)>>0]=1;Ef(q,d,n,0,0);}b=j+((S(o,p)|0)+n)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[j+(m+o)>>0]=1;Ef(q,n,o,0,0);}Nf(q,d,n,o,0);e=e+3|0;}while((e|0)<(h*3|0))}if(i){m=c[q+732>>2]|0;if((m|0)>0){e=q+740|0;b=243703;k=0;do{d=c[e>>2]|0;n=d+(k*52|0)|0;b=(S(b,1664525)|0)+1013904223|0;o=t;p=n;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));o=n;p=d+(((b>>>0)%(m>>>0)|0)*52|0)|0;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));o=d+(((b>>>0)%(m>>>0)|0)*52|0)|0;p=t;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));k=k+1|0;}while((k|0)!=(m|0))}else b=243703;d=c[q+752>>2]|0;if((d|0)>0){n=q+760|0;k=0;do{e=c[n>>2]|0;m=e+(k*44|0)|0;b=(S(b,1664525)|0)+1013904223|0;e=e+(((b>>>0)%(d>>>0)|0)*44|0)|0;o=t;p=m;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));o=m;p=e;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));o=e;p=t;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0;}while((o|0)<(f|0));k=k+1|0;}while((k|0)!=(d|0))}}if(!((s|0)==0|(r|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[r+-4>>2]|0);}if(!j){l=t;return q|0}c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);l=t;return q|0}function ie(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=l;l=l+80|0;c[a+68>>2]=(c[a+68>>2]|0)+1;f=c[a+64>>2]|0;if(f|0){d=c[(c[a+24>>2]|0)+(b*80|0)+76>>2]|0;hg(f,d)|0;e=c[f+4>>2]|0;if(e|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[f+4>>2]=d;c[f+12>>2]=(c[f+12>>2]|0)+-1;}f=(c[a+16>>2]|0)+-1|0;e=c[a+24>>2]|0;c[g>>2]=c[e+(b*80|0)>>2];c[g+4>>2]=c[e+(b*80|0)+4>>2];c[g+8>>2]=c[e+(b*80|0)+8>>2];c[g+12>>2]=c[e+(b*80|0)+12>>2];c[g+16>>2]=c[e+(b*80|0)+16>>2];c[g+16+4>>2]=c[e+(b*80|0)+16+4>>2];c[g+16+8>>2]=c[e+(b*80|0)+16+8>>2];c[g+16+12>>2]=c[e+(b*80|0)+16+12>>2];c[g+32>>2]=c[e+(b*80|0)+32>>2];c[g+32+4>>2]=c[e+(b*80|0)+32+4>>2];c[g+32+8>>2]=c[e+(b*80|0)+32+8>>2];c[g+32+12>>2]=c[e+(b*80|0)+32+12>>2];c[g+48>>2]=c[e+(b*80|0)+48>>2];c[g+48+4>>2]=c[e+(b*80|0)+48+4>>2];c[g+48+8>>2]=c[e+(b*80|0)+48+8>>2];c[g+48+12>>2]=c[e+(b*80|0)+48+12>>2];c[g+64>>2]=c[e+(b*80|0)+64>>2];c[g+64+4>>2]=c[e+(b*80|0)+64+4>>2];c[g+64+8>>2]=c[e+(b*80|0)+64+8>>2];c[g+64+12>>2]=c[e+(b*80|0)+64+12>>2];c[e+(b*80|0)>>2]=c[e+(f*80|0)>>2];c[e+(b*80|0)+4>>2]=c[e+(f*80|0)+4>>2];c[e+(b*80|0)+8>>2]=c[e+(f*80|0)+8>>2];c[e+(b*80|0)+12>>2]=c[e+(f*80|0)+12>>2];c[e+(b*80|0)+16>>2]=c[e+(f*80|0)+16>>2];c[e+(b*80|0)+16+4>>2]=c[e+(f*80|0)+16+4>>2];c[e+(b*80|0)+16+8>>2]=c[e+(f*80|0)+16+8>>2];c[e+(b*80|0)+16+12>>2]=c[e+(f*80|0)+16+12>>2];c[e+(b*80|0)+32>>2]=c[e+(f*80|0)+32>>2];c[e+(b*80|0)+32+4>>2]=c[e+(f*80|0)+32+4>>2];c[e+(b*80|0)+32+8>>2]=c[e+(f*80|0)+32+8>>2];c[e+(b*80|0)+32+12>>2]=c[e+(f*80|0)+32+12>>2];c[e+(b*80|0)+48>>2]=c[e+(f*80|0)+48>>2];c[e+(b*80|0)+48+4>>2]=c[e+(f*80|0)+48+4>>2];c[e+(b*80|0)+48+8>>2]=c[e+(f*80|0)+48+8>>2];c[e+(b*80|0)+48+12>>2]=c[e+(f*80|0)+48+12>>2];c[e+(b*80|0)+64>>2]=c[e+(f*80|0)+64>>2];c[e+(b*80|0)+64+4>>2]=c[e+(f*80|0)+64+4>>2];c[e+(b*80|0)+64+8>>2]=c[e+(f*80|0)+64+8>>2];c[e+(b*80|0)+64+12>>2]=c[e+(f*80|0)+64+12>>2];e=c[a+24>>2]|0;c[e+(f*80|0)>>2]=c[g>>2];c[e+(f*80|0)+4>>2]=c[g+4>>2];c[e+(f*80|0)+8>>2]=c[g+8>>2];c[e+(f*80|0)+12>>2]=c[g+12>>2];c[e+(f*80|0)+16>>2]=c[g+16>>2];c[e+(f*80|0)+16+4>>2]=c[g+16+4>>2];c[e+(f*80|0)+16+8>>2]=c[g+16+8>>2];c[e+(f*80|0)+16+12>>2]=c[g+16+12>>2];c[e+(f*80|0)+32>>2]=c[g+32>>2];c[e+(f*80|0)+32+4>>2]=c[g+32+4>>2];c[e+(f*80|0)+32+8>>2]=c[g+32+8>>2];c[e+(f*80|0)+32+12>>2]=c[g+32+12>>2];c[e+(f*80|0)+48>>2]=c[g+48>>2];c[e+(f*80|0)+48+4>>2]=c[g+48+4>>2];c[e+(f*80|0)+48+8>>2]=c[g+48+8>>2];c[e+(f*80|0)+48+12>>2]=c[g+48+12>>2];c[e+(f*80|0)+64>>2]=c[g+64>>2];c[e+(f*80|0)+64+4>>2]=c[g+64+4>>2];c[e+(f*80|0)+64+8>>2]=c[g+64+8>>2];c[e+(f*80|0)+64+12>>2]=c[g+64+12>>2];if(!(c[a+64>>2]|0)){f=c[a+16>>2]|0;f=f+-1|0;c[a+16>>2]=f;l=g;return}c[(c[(c[a+24>>2]|0)+(b*80|0)+76>>2]|0)+36>>2]=b;f=c[a+16>>2]|0;f=f+-1|0;c[a+16>>2]=f;l=g;return}function je(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;while(1){m=c[a+12>>2]|0;o=(b+d|0)/2|0;p=c[m+(o<<4)>>2]|0;n=c[m+(o<<4)+4>>2]|0;o=c[m+(o<<4)+8>>2]|0;e=d;f=b;while(1){a:do if(!p)while(1){j=c[m+(f<<4)>>2]|0;if(!j)g=-1;else g=c[j+12>>2]|0;k=c[m+(f<<4)+4>>2]|0;if(!k)h=-1;else h=c[k+12>>2]|0;if(!n)i=-1;else i=c[n+12>>2]|0;do if((g|0)<=-1){g=(h|0)>(i|0);if(g|(j|0)==0^1)if((j|0)==0&g)break;else break a;if((k|0)!=(n|0))break a;if((c[m+(f<<4)+8>>2]|0)>>>0<=o>>>0)break a}while(0);f=f+1|0;}else{l=c[p+12>>2]|0;while(1){j=c[m+(f<<4)>>2]|0;if(!j)g=-1;else g=c[j+12>>2]|0;k=c[m+(f<<4)+4>>2]|0;if(!k)h=-1;else h=c[k+12>>2]|0;if(!n)i=-1;else i=c[n+12>>2]|0;do if((g|0)<=(l|0)){g=(h|0)>(i|0);if(g|(j|0)==(p|0)^1)if((j|0)==(p|0)&g)break;else break a;if((k|0)!=(n|0))break a;if((c[m+(f<<4)+8>>2]|0)>>>0<=o>>>0)break a}while(0);f=f+1|0;}}while(0);b:do if(!p)while(1){j=c[m+(e<<4)>>2]|0;if(!j)g=-1;else g=c[j+12>>2]|0;if(!n)h=-1;else h=c[n+12>>2]|0;k=c[m+(e<<4)+4>>2]|0;if(!k)i=-1;else i=c[k+12>>2]|0;do if((g|0)>=-1){g=(h|0)>(i|0);if(g|(j|0)==0^1)if((j|0)==0&g)break;else break b;if((n|0)!=(k|0))break b;if(o>>>0<=(c[m+(e<<4)+8>>2]|0)>>>0)break b}while(0);e=e+-1|0;}else{l=c[p+12>>2]|0;while(1){j=c[m+(e<<4)>>2]|0;if(!j)i=-1;else i=c[j+12>>2]|0;if(!n)g=-1;else g=c[n+12>>2]|0;k=c[m+(e<<4)+4>>2]|0;if(!k)h=-1;else h=c[k+12>>2]|0;do if((l|0)<=(i|0)){g=(g|0)>(h|0);if(g|(p|0)==(j|0)^1)if((p|0)==(j|0)&g)break;else break b;if((n|0)!=(k|0))break b;if(o>>>0<=(c[m+(e<<4)+8>>2]|0)>>>0)break b}while(0);e=e+-1|0;}}while(0);if((f|0)<=(e|0)){h=m+(f<<4)|0;i=c[h>>2]|0;j=c[m+(f<<4)+4>>2]|0;k=c[m+(f<<4)+8>>2]|0;l=c[m+(f<<4)+12>>2]|0;m=m+(e<<4)|0;c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];m=c[a+12>>2]|0;c[m+(e<<4)>>2]=i;c[m+(e<<4)+4>>2]=j;c[m+(e<<4)+8>>2]=k;c[m+(e<<4)+12>>2]=l;e=e+-1|0;f=f+1|0;}if((f|0)>(e|0))break;m=c[a+12>>2]|0;}if((e|0)>(b|0))je(a,b,e);if((f|0)<(d|0))b=f;else break}return}function ke(a,d,f,h,i,j,k,m,n){a=a|0;d=d|0;f=f|0;h=+h;i=+i;j=+j;k=k|0;m=m|0;n=n|0;var o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0,E=0.0,F=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0;W=l;l=l+32|0;T=+g[f>>2];E=+g[f+4>>2];L=+g[f+8>>2];M=1.0/+G(+((h-T)*(h-T)+(i-E)*(i-E)+(j-L)*(j-L)));Q=(h-T)*M==0.0?999999984306749440.0:1.0/((h-T)*M);R=(i-E)*M==0.0?999999984306749440.0:1.0/((i-E)*M);S=(j-L)*M==0.0?999999984306749440.0:1.0/((j-L)*M);fa=(T>h?h:T)+ +g[k>>2];ea=(E>i?i:E)+ +g[k+4>>2];da=(L>j?j:L)+ +g[k+8>>2];ba=(T<h?h:T)+ +g[m>>2];Z=(E<i?i:E)+ +g[m+4>>2];r=(L<j?j:L)+ +g[m+8>>2];aa=+g[a+4>>2];fa=fa<aa?aa:fa;Y=+g[a+8>>2];ea=ea<Y?Y:ea;s=+g[a+12>>2];da=da<s?s:da;ca=+g[a+20>>2];_=+g[a+24>>2];q=+g[a+28>>2];$=+g[a+36>>2];X=+g[a+40>>2];t=+g[a+44>>2];U=~~(((ca<fa?ca:fa)-aa)*$)&65535&-2;F=~~(((_<ea?_:ea)-Y)*X)&65535&-2;H=~~(((q<da?q:da)-s)*t)&65535&-2;ba=ba<aa?aa:ba;Z=Z<Y?Y:Z;r=r<s?s:r;I=~~(((ca<ba?ca:ba)-aa)*$+1.0)&65535|1;J=~~(((_<Z?_:Z)-Y)*X+1.0)&65535|1;K=~~(((q<r?q:r)-s)*t+1.0)&65535|1;if((n|0)>0){B=0;o=0;D=c[a+136>>2]|0;while(1){o=o+1|0;p=D+6|0;u=b[D>>1]|0;v=D+10|0;w=b[D+4>>1]|0;x=D+8|0;y=b[D+2>>1]|0;z=D+12|0;A=(c[z>>2]|0)>-1;do if(((I&65535)>=(u&65535)?(U&65535)<=(e[p>>1]|0):0)&(H&65535)<=(e[v>>1]|0)&(K&65535)>=(w&65535)&(F&65535)<=(e[x>>1]|0)&(J&65535)>=(y&65535)){ba=+g[a+36>>2];da=+g[a+40>>2];fa=+g[a+44>>2];ca=+g[a+4>>2];ea=+g[a+8>>2];s=+g[a+12>>2];g[W+12>>2]=0.0;t=+(e[p>>1]|0)/ba+ca;q=+(e[x>>1]|0)/da+ea;r=+(e[v>>1]|0)/fa+s;g[W+28>>2]=0.0;g[W>>2]=+(u&65535)/ba+ca-+g[m>>2];g[W+4>>2]=+(y&65535)/da+ea-+g[m+4>>2];g[W+8>>2]=+(w&65535)/fa+s-+g[m+8>>2];g[W+16>>2]=t-+g[k>>2];g[W+20>>2]=q-+g[k+4>>2];g[W+24>>2]=r-+g[k+8>>2];r=+g[f>>2];q=Q*(+g[W+((Q<0.0&1)<<4)>>2]-r);r=Q*(+g[W+((Q<0.0^1)<<4)>>2]-r);t=+g[f+4>>2];s=R*(+g[W+((R<0.0&1)<<4)+4>>2]-t);t=R*(+g[W+((R<0.0^1)<<4)+4>>2]-t);if(!(s>r|q>t)?(N=s>q?s:q,C=t<r?t:r,P=+g[f+8>>2],O=S*(+g[W+((S<0.0&1)<<4)+8>>2]-P),P=S*(+g[W+((S<0.0^1)<<4)+8>>2]-P),!(O>C|N>P)):0){p=(P<C?P:C)>0.0?(O>N?O:N)<(j-L)*(j-L)*M+((h-T)*(h-T)*M+(i-E)*(i-E)*M):0;if(!(A&p)){V=9;break}p=c[z>>2]|0;Vb[c[(c[d>>2]|0)+8>>2]&127](d,p>>21,p&2097151);p=1;break}p=0;V=9;}else{p=0;V=9;}while(0);if((V|0)==9){V=0;if(A|p)p=1;else p=0-(c[z>>2]|0)|0;}B=p+B|0;if((B|0)>=(n|0))break;else D=D+(p<<4)|0;}}else o=0;if((c[6168]|0)>=(o|0)){l=W;return}c[6168]=o;l=W;return}function le(b,d){b=b|0;d=+d;var e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0;p=l;l=l+16|0;o=c[b+452>>2]|0;Vb[c[(c[o>>2]|0)+16>>2]&127](o,b+324|0,0);o=c[b+452>>2]|0;pb[c[(c[o>>2]|0)+12>>2]&127](o)|0;Lc(b,d);aj(11760);o=c[b+328>>2]|0;if((o|0)>0){f=c[b+336>>2]|0;e=0;k=0;do{n=c[(c[f+(e<<2)>>2]|0)+384>>2]|0;k=(k|0)>(n|0)?k:n;e=e+1|0;}while((e|0)!=(o|0));e=0;while(1){h=c[f+(e<<2)>>2]|0;if((c[h+852>>2]|0)>0){f=0;do{n=c[(c[h+860>>2]|0)+(f<<2)>>2]|0;ub[c[(c[n>>2]|0)+8>>2]&15](n,+g[h+452>>2],k);f=f+1|0;}while((f|0)<(c[h+852>>2]|0))}e=e+1|0;if((e|0)==(o|0))break;f=c[b+336>>2]|0;}if((k|0)>0){h=0;do{e=0;do{i=c[(c[b+336>>2]|0)+(e<<2)>>2]|0;j=c[i+852>>2]|0;if((j|0)>0){f=0;do{n=c[(c[i+860>>2]|0)+(f<<2)>>2]|0;yb[c[(c[n>>2]|0)+12>>2]&7](n,+g[i+452>>2],1.0);f=f+1|0;}while((f|0)!=(j|0))}e=e+1|0;}while((e|0)!=(o|0));h=h+1|0;}while((h|0)!=(k|0));m=0;}else m=0;do{n=c[(c[b+336>>2]|0)+(m<<2)>>2]|0;if((c[n+852>>2]|0)>0){e=0;do{f=c[(c[n+860>>2]|0)+(e<<2)>>2]|0;kb[c[(c[f>>2]|0)+16>>2]&31](f,+g[n+452>>2]);f=c[n+860>>2]|0;h=c[f+(e<<2)>>2]|0;a:do if(a[h+152>>0]|0){if(!h)k=f;else{c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);k=c[n+860>>2]|0;}j=e+-1|0;f=c[n+852>>2]|0;if((f|0)>0){i=c[k+(e<<2)>>2]|0;e=0;while(1){h=k+(e<<2)|0;if((c[h>>2]|0)==(i|0))break;e=e+1|0;if((e|0)>=(f|0)){e=j;break a}}if((e|0)<(f|0)){c[h>>2]=c[k+(f+-1<<2)>>2];c[(c[n+860>>2]|0)+(f+-1<<2)>>2]=i;c[n+852>>2]=f+-1;e=j;f=f+-1|0;}else e=j;}else e=j;}else f=c[n+852>>2]|0;while(0);e=e+1|0;}while((e|0)<(f|0))}m=m+1|0;}while((m|0)!=(o|0))}e=c[b+452>>2]|0;kb[c[(c[e>>2]|0)+28>>2]&31](e,+g[e+12>>2]*d);e=c[2388]|0;o=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=o;do if(!o){if(c[e+4>>2]|0){Za(p|0,0)|0;o=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[p+4>>2]|0)-(c[o+4>>2]|0)+(((c[p>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2388]|0;}c[2388]=c[e+20>>2];}while(0);if((c[b+328>>2]|0)<=0){b=c[b+452>>2]|0;o=c[b>>2]|0;o=o+32|0;o=c[o>>2]|0;lb[o&511](b);l=p;return}e=0;do{o=c[(c[b+336>>2]|0)+(e<<2)>>2]|0;Jh(o,o);e=e+1|0;}while((e|0)<(c[b+328>>2]|0));b=c[b+452>>2]|0;o=c[b>>2]|0;o=o+32|0;o=c[o>>2]|0;lb[o&511](b);l=p;return}function me(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0;zg(a,b+(c*284|0)|0,d);m=+g[b+(c*284|0)+52>>2];h=+g[b+(c*284|0)+56>>2];q=+g[b+(c*284|0)+60>>2];H=+g[b+(c*284|0)+76>>2];x=+g[b+(c*284|0)+72>>2];z=+g[b+(c*284|0)+68>>2];w=1.0/+G(+((x*-m-z*-h)*(x*-m-z*-h)+((H*-h-x*-q)*(H*-h-x*-q)+(z*-q-H*-m)*(z*-q-H*-m))));v=(H*-h-x*-q)*w;u=w*(z*-q-H*-m);w=w*(x*-m-z*-h);e=+g[b+(c*284|0)+232>>2]*.5;k=+J(+e)/+G(+(m*m+h*h+q*q));e=+I(+e);l=2.0/(e*e+(k*-q*k*-q+(k*-m*k*-m+k*-h*k*-h)));E=1.0-(k*-h*k*-h*l+k*-q*k*-q*l);D=k*-m*k*-h*l-e*k*-q*l;F=k*-m*k*-q*l+e*k*-h*l;B=k*-m*k*-h*l+e*k*-q*l;A=1.0-(k*-m*k*-m*l+k*-q*k*-q*l);C=k*-h*k*-q*l-e*k*-m*l;j=k*-m*k*-q*l-e*k*-h*l;e=k*-h*k*-q*l+e*k*-m*l;l=1.0-(k*-m*k*-m*l+k*-h*k*-h*l);k=+g[b+(c*284|0)+236>>2]*-.5;y=+J(+k)/+G(+(H*H+(x*x+z*z)));k=+I(+k);r=2.0/(k*k+(H*y*H*y+(z*y*z*y+x*y*x*y)));n=1.0-(x*y*x*y*r+H*y*H*y*r);i=z*y*x*y*r-k*H*y*r;t=z*y*H*y*r+k*x*y*r;o=z*y*x*y*r+k*H*y*r;f=1.0-(z*y*z*y*r+H*y*H*y*r);s=x*y*H*y*r-k*z*y*r;p=z*y*H*y*r-k*x*y*r;k=x*y*H*y*r+k*z*y*r;r=1.0-(z*y*z*y*r+x*y*x*y*r);y=+g[b+(c*284|0)+68>>2];x=+g[b+(c*284|0)+72>>2];z=+g[b+(c*284|0)+76>>2];g[b+(c*284|0)+92>>2]=z*(E*t+D*s+F*r)+(y*(F*p+(D*o+E*n))+x*(F*k+(E*i+D*f)));g[b+(c*284|0)+96>>2]=w*(E*t+D*s+F*r)+(v*(F*p+(D*o+E*n))+u*(F*k+(E*i+D*f)));g[b+(c*284|0)+100>>2]=(E*t+D*s+F*r)*-q+((F*p+(D*o+E*n))*-m+(F*k+(E*i+D*f))*-h);g[b+(c*284|0)+104>>2]=0.0;g[b+(c*284|0)+108>>2]=z*(B*t+A*s+C*r)+(y*(C*p+(A*o+B*n))+x*(C*k+(B*i+A*f)));g[b+(c*284|0)+112>>2]=w*(B*t+A*s+C*r)+(v*(C*p+(A*o+B*n))+u*(C*k+(B*i+A*f)));g[b+(c*284|0)+116>>2]=(B*t+A*s+C*r)*-q+((C*p+(A*o+B*n))*-m+(C*k+(B*i+A*f))*-h);g[b+(c*284|0)+120>>2]=0.0;g[b+(c*284|0)+124>>2]=z*(j*t+e*s+l*r)+(y*(l*p+(e*o+j*n))+x*(l*k+(j*i+e*f)));g[b+(c*284|0)+128>>2]=w*(j*t+e*s+l*r)+(v*(l*p+(e*o+j*n))+u*(l*k+(j*i+e*f)));g[b+(c*284|0)+132>>2]=(j*t+e*s+l*r)*-q+((l*p+(e*o+j*n))*-m+(l*k+(j*i+e*f))*-h);g[b+(c*284|0)+136>>2]=0.0;h=+g[b+(c*284|0)+32>>2];f=h*+g[b+(c*284|0)+56>>2]+ +g[b+(c*284|0)+40>>2];e=h*+g[b+(c*284|0)+60>>2]+ +g[b+(c*284|0)+44>>2];g[b+(c*284|0)+140>>2]=+g[b+(c*284|0)+52>>2]*h+ +g[b+(c*284|0)+36>>2];g[b+(c*284|0)+144>>2]=f;g[b+(c*284|0)+148>>2]=e;g[b+(c*284|0)+152>>2]=0.0;return}function ne(b,d,e,f,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;j=j|0;k=k|0;m=m|0;var n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0;D=l;l=l+32|0;if(!d){l=D;return}n=c[b+44>>2]|0;if((n|0)<128){if((c[b+48>>2]|0)<128){c[6436]=(c[6436]|0)+1;o=ic(531)|0;if(!o)q=0;else{c[(o+4+15&-16)+-4>>2]=o;q=o+4+15&-16;}p=c[b+44>>2]|0;if((p|0)>0){o=0;do{c[q+(o<<2)>>2]=c[(c[b+52>>2]|0)+(o<<2)>>2];o=o+1|0;}while((o|0)!=(p|0))}o=c[b+52>>2]|0;if(o|0){if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);}c[b+52>>2]=0;}a[b+56>>0]=1;c[b+52>>2]=q;c[b+48>>2]=128;o=b+52|0;}else o=b+52|0;do{c[(c[o>>2]|0)+(n<<2)>>2]=0;n=n+1|0;}while((n|0)!=128);y=b+48|0;}else{o=b+52|0;y=b+48|0;}c[b+44>>2]=128;c[c[o>>2]>>2]=d;p=1;n=126;do{w=p+-1|0;q=c[o>>2]|0;x=c[q+(w<<2)>>2]|0;u=+g[x+4>>2]-+g[k+4>>2];s=+g[x+8>>2]-+g[k+8>>2];g[D>>2]=+g[x>>2]-+g[k>>2];g[D+4>>2]=u;g[D+8>>2]=s;g[D+12>>2]=0.0;s=+g[x+20>>2]-+g[j+4>>2];u=+g[x+24>>2]-+g[j+8>>2];g[D+16>>2]=+g[x+16>>2]-+g[j>>2];g[D+20>>2]=s;g[D+24>>2]=u;g[D+28>>2]=0.0;v=c[h>>2]|0;u=+g[e>>2];s=+g[f>>2];t=(+g[D+(v<<4)>>2]-u)*s;u=s*(+g[D+(1-v<<4)>>2]-u);v=c[h+4>>2]|0;s=+g[e+4>>2];E=+g[f+4>>2];r=(+g[D+(v<<4)+4>>2]-s)*E;s=E*(+g[D+(1-v<<4)+4>>2]-s);do if((!(r>u|t>s)?(A=r>t?r:t,z=s<u?s:u,v=c[h+8>>2]|0,C=+g[e+8>>2],E=+g[f+8>>2],B=(+g[D+(v<<4)+8>>2]-C)*E,C=E*(+g[D+(1-v<<4)+8>>2]-C),!(B>z|A>C)):0)?((C<z?C:z)>0.0?(B>A?B:A)<i:0):0){if(!(c[x+40>>2]|0)){nb[c[(c[m>>2]|0)+12>>2]&127](m,x);p=w;break}if((w|0)>(n|0)){v=c[b+44>>2]|0;if((v|0)<(v<<1|0)){if((c[y>>2]|0)<(v<<1|0)){if(v){c[6436]=(c[6436]|0)+1;n=ic((v<<3|3)+16|0)|0;if(!n)q=0;else{c[(n+4+15&-16)+-4>>2]=n;q=n+4+15&-16;}d=c[b+44>>2]|0;if((d|0)>0){n=0;do{c[q+(n<<2)>>2]=c[(c[o>>2]|0)+(n<<2)>>2];n=n+1|0;}while((n|0)!=(d|0))}}else q=0;n=c[o>>2]|0;if(n|0){if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[o>>2]=0;}a[b+56>>0]=1;c[o>>2]=q;c[y>>2]=v<<1;n=v;}else n=v;do{c[q+(n<<2)>>2]=0;n=n+1|0;q=c[o>>2]|0;}while((n|0)!=(v<<1|0))}c[b+44>>2]=v<<1;n=(v<<1)+-2|0;}c[q+(w<<2)>>2]=c[x+36>>2];c[(c[o>>2]|0)+(p<<2)>>2]=c[x+40>>2];p=p+1|0;}else p=w;while(0)}while((p|0)!=0);l=D;return}function oe(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,k=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0.0;D=l;l=l+32|0;q=+g[d>>2];h=(g[j>>2]=q,c[j>>2]|0);t=q<999999984306749440.0?h:1566444395;p=+g[d+4>>2];k=(g[j>>2]=p,c[j>>2]|0);u=p<999999984306749440.0?k:1566444395;E=+g[d+8>>2];n=(g[j>>2]=E,c[j>>2]|0);w=E<999999984306749440.0?n:1566444395;r=+g[d+12>>2];y=r<0.0?r:0.0;h=q>-999999984306749440.0?h:-581039253;k=p>-999999984306749440.0?k:-581039253;n=E>-999999984306749440.0?n:-581039253;r=r>0.0?r:0.0;E=+g[d+16>>2];B=E<(c[j>>2]=t,+g[j>>2]);i=(g[j>>2]=E,c[j>>2]|0);t=B?i:t;p=+g[d+20>>2];B=p<(c[j>>2]=u,+g[j>>2]);m=(g[j>>2]=p,c[j>>2]|0);u=B?m:u;q=+g[d+24>>2];B=q<(c[j>>2]=w,+g[j>>2]);o=(g[j>>2]=q,c[j>>2]|0);w=B?o:w;s=+g[d+28>>2];y=s<y?s:y;x=(c[j>>2]=h,+g[j>>2])<E?i:h;v=(c[j>>2]=k,+g[j>>2])<p?m:k;m=(c[j>>2]=n,+g[j>>2])<q?o:n;s=r<s?s:r;E=+g[d+32>>2];B=E<(c[j>>2]=t,+g[j>>2]);h=(g[j>>2]=E,c[j>>2]|0);B=B?h:t;q=+g[d+36>>2];A=q<(c[j>>2]=u,+g[j>>2]);i=(g[j>>2]=q,c[j>>2]|0);A=A?i:u;r=+g[d+40>>2];z=r<(c[j>>2]=w,+g[j>>2]);k=(g[j>>2]=r,c[j>>2]|0);z=z?k:w;p=+g[d+44>>2];y=p<y?p:y;w=(c[j>>2]=x,+g[j>>2])<E?h:x;v=(c[j>>2]=v,+g[j>>2])<q?i:v;u=(c[j>>2]=m,+g[j>>2])<r?k:m;p=s<p?p:s;t=c[b+4>>2]|0;h=c[t+4>>2]|0;if((h|0)==(c[t+8>>2]|0)?(C=h|0?h<<1:1,(h|0)<(C|0)):0){if(!C)o=0;else{c[6436]=(c[6436]|0)+1;h=ic(C<<6|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}o=h;h=c[t+4>>2]|0;}if((h|0)>0){i=0;do{k=o+(i<<6)|0;m=(c[t+12>>2]|0)+(i<<6)|0;n=k+64|0;do{c[k>>2]=c[m>>2];k=k+4|0;m=m+4|0;}while((k|0)<(n|0));i=i+1|0;}while((i|0)!=(h|0))}h=c[t+12>>2]|0;if(h|0){if(a[t+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[t+12>>2]=0;}a[t+16>>0]=1;c[t+12>>2]=o;c[t+8>>2]=C;h=c[t+4>>2]|0;}C=c[t+12>>2]|0;c[C+(h<<6)>>2]=B;c[C+(h<<6)+4>>2]=A;c[C+(h<<6)+8>>2]=z;g[C+(h<<6)+12>>2]=y;c[C+(h<<6)+16>>2]=w;c[C+(h<<6)+20>>2]=v;c[C+(h<<6)+24>>2]=u;g[C+(h<<6)+28>>2]=p;c[C+(h<<6)+32>>2]=-1;c[C+(h<<6)+36>>2]=e;c[C+(h<<6)+40>>2]=f;f=C+(h<<6)+44|0;c[f>>2]=c[D>>2];c[f+4>>2]=c[D+4>>2];c[f+8>>2]=c[D+8>>2];c[f+12>>2]=c[D+12>>2];c[f+16>>2]=c[D+16>>2];c[t+4>>2]=(c[t+4>>2]|0)+1;l=D;return}function pe(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0;r=l;l=l+64|0;aj(15075);d=c[b+8>>2]|0;if((d|0)>0){o=0;do{n=c[(c[b+16>>2]|0)+(o<<2)>>2]|0;if(!(a[b+76>>0]|0))switch(c[n+216>>2]|0){case 2:case 5:break;default:q=11;}else q=11;if((q|0)==11){q=0;d=c[n+192>>2]|0;Zb[c[(c[d>>2]|0)+8>>2]&127](d,n+4|0,r+48|0,r+32|0);e=+g[r+48>>2]+-.019999999552965164;g[r+48>>2]=e;f=+g[r+48+4>>2]+-.019999999552965164;g[r+48+4>>2]=f;h=+g[r+48+8>>2]+-.019999999552965164;g[r+48+8>>2]=h;i=+g[r+32>>2]+.019999999552965164;g[r+32>>2]=i;j=+g[r+32+4>>2]+.019999999552965164;g[r+32+4>>2]=j;k=+g[r+32+8>>2]+.019999999552965164;g[r+32+8>>2]=k;if(((a[b+44>>0]|0)!=0?(c[n+236>>2]|0)==2:0)?(c[n+204>>2]&3|0)==0:0){d=c[n+192>>2]|0;Zb[c[(c[d>>2]|0)+8>>2]&127](d,n+68|0,r+16|0,r);f=+g[r+16>>2]+-.019999999552965164;g[r+16>>2]=f;h=+g[r+16+4>>2]+-.019999999552965164;g[r+16+4>>2]=h;i=+g[r+16+8>>2]+-.019999999552965164;g[r+16+8>>2]=i;j=+g[r>>2]+.019999999552965164;g[r>>2]=j;k=+g[r+4>>2]+.019999999552965164;g[r+4>>2]=k;m=+g[r+8>>2]+.019999999552965164;g[r+8>>2]=m;e=+g[r+48>>2];if(f<e){g[r+48>>2]=f;e=f;}f=+g[r+48+4>>2];if(h<f){g[r+48+4>>2]=h;f=h;}h=+g[r+48+8>>2];if(i<h){g[r+48+8>>2]=i;h=i;}i=+g[r+16+12>>2];if(i<+g[r+48+12>>2])g[r+48+12>>2]=i;i=+g[r+32>>2];if(i<j){g[r+32>>2]=j;i=j;}j=+g[r+32+4>>2];if(j<k){g[r+32+4>>2]=k;j=k;}k=+g[r+32+8>>2];if(k<m){g[r+32+8>>2]=m;k=m;}m=+g[r+12>>2];if(+g[r+32+12>>2]<m)g[r+32+12>>2]=m;}d=c[b+68>>2]|0;if((c[n+204>>2]&1|0)==0?(i=i-e,j=j-f,m=k-h,!(i*i+j*j+m*m<999999995904.0)):0){if((c[n+216>>2]&-2|0)!=4)c[n+216>>2]=5;if(a[15087]|0?(p=c[b+72>>2]|0,p|0):0){a[15087]=0;nb[c[(c[p>>2]|0)+36>>2]&127](p,15088);n=c[b+72>>2]|0;nb[c[(c[n>>2]|0)+36>>2]&127](n,15137);n=c[b+72>>2]|0;nb[c[(c[n>>2]|0)+36>>2]&127](n,15205);n=c[b+72>>2]|0;nb[c[(c[n>>2]|0)+36>>2]&127](n,15270);}}else jb[c[(c[d>>2]|0)+16>>2]&31](d,c[n+188>>2]|0,r+48|0,r+32|0,c[b+24>>2]|0);d=c[b+8>>2]|0;}o=o+1|0;}while((o|0)<(d|0))}d=c[2388]|0;q=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=q;if(q|0){l=r;return}do if(c[d+4>>2]|0){Za(r+48|0,0)|0;q=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[r+48+4>>2]|0)-(c[q+4>>2]|0)+(((c[r+48>>2]|0)-(c[q>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=r;return}}while(0);c[2388]=c[d+20>>2];l=r;return}function qe(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;o=l;l=l+16|0;n=+g[d>>2];i=+g[d+4>>2];j=+g[d+8>>2];k=+g[e>>2];m=+g[e+4>>2];h=+g[e+8>>2];if(!(a[b+228>>0]|0)){z=+g[b+100>>2];w=+g[b+116>>2];C=+g[b+132>>2];y=+g[b+104>>2];u=+g[b+120>>2];B=+g[b+136>>2];x=+g[b+108>>2];s=+g[b+124>>2];A=+g[b+140>>2];F=-+g[b+148>>2];E=-+g[b+152>>2];D=-+g[b+156>>2];J=+g[b+164>>2];I=+g[b+168>>2];r=+g[b+172>>2];H=+g[b+180>>2];G=+g[b+184>>2];q=+g[b+188>>2];v=+g[b+196>>2];t=+g[b+200>>2];p=+g[b+204>>2];r=h*(C*J+B*I+A*r)+(k*(z*J+y*I+x*r)+m*(w*J+u*I+s*r))+(J*(z*F+w*E+C*D)+(y*F+u*E+B*D)*I+(x*F+s*E+A*D)*r+ +g[b+212>>2]);q=h*(C*H+B*G+A*q)+(k*(z*H+y*G+x*q)+m*(w*H+u*G+s*q))+((z*F+w*E+C*D)*H+(y*F+u*E+B*D)*G+(x*F+s*E+A*D)*q+ +g[b+216>>2]);p=(z*F+w*E+C*D)*v+(y*F+u*E+B*D)*t+(x*F+s*E+A*D)*p+ +g[b+220>>2]+(h*(C*v+B*t+A*p)+(k*(z*v+y*t+x*p)+m*(w*v+u*t+s*p)));g[o>>2]=r;g[o+4>>2]=q;g[o+8>>2]=p;n=(n*f+k-r)*+g[d>>2]+(i*f+m-q)*+g[d+4>>2]+(j*f+h-p)*+g[d+8>>2];e=o+12|0;g[e>>2]=0.0;b=b+32|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;Ub[e&15](b,d,o,n);l=o;return}else{z=+g[b+36>>2];C=+g[b+52>>2];w=+g[b+68>>2];A=+g[b+40>>2];E=+g[b+56>>2];x=+g[b+72>>2];B=+g[b+44>>2];G=+g[b+60>>2];y=+g[b+76>>2];t=-+g[b+84>>2];u=-+g[b+88>>2];v=-+g[b+92>>2];p=+g[b+164>>2];q=+g[b+168>>2];H=+g[b+172>>2];r=+g[b+180>>2];s=+g[b+184>>2];I=+g[b+188>>2];D=+g[b+196>>2];F=+g[b+200>>2];J=+g[b+204>>2];H=(j*f+h)*(w*p+x*q+y*H)+((n*f+k)*(z*p+A*q+B*H)+(i*f+m)*(C*p+E*q+G*H))+(p*(z*t+C*u+w*v)+(A*t+E*u+x*v)*q+(B*t+G*u+y*v)*H+ +g[b+212>>2]);I=(j*f+h)*(w*r+x*s+y*I)+((n*f+k)*(z*r+A*s+B*I)+(i*f+m)*(C*r+E*s+G*I))+((z*t+C*u+w*v)*r+(A*t+E*u+x*v)*s+(B*t+G*u+y*v)*I+ +g[b+216>>2]);J=(z*t+C*u+w*v)*D+(A*t+E*u+x*v)*F+(B*t+G*u+y*v)*J+ +g[b+220>>2]+((j*f+h)*(w*D+x*F+y*J)+((n*f+k)*(z*D+A*F+B*J)+(i*f+m)*(C*D+E*F+G*J)));g[o>>2]=H+n*(n*(H-k)+i*(I-m)+j*(J-h));g[o+4>>2]=I+i*(n*(H-k)+i*(I-m)+j*(J-h));g[o+8>>2]=J+j*(n*(H-k)+i*(I-m)+j*(J-h));J=n*(H-k)+i*(I-m)+j*(J-h);e=o+12|0;g[e>>2]=0.0;b=b+32|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;Ub[e&15](b,d,o,J);l=o;return}}function re(b,d,e,f,h,i,k,l){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;k=k|0;l=l|0;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;c[b+4>>2]=4;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=d;c[b+32>>2]=e;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4832;g[b+688>>2]=0.0;g[b+692>>2]=-1.0;g[b+696>>2]=.8999999761581421;g[b+700>>2]=.30000001192092896;g[b+704>>2]=1.0;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;a[b+736>>0]=0;a[b+737>>0]=0;a[b+738>>0]=0;a[b+739>>0]=1;a[b+740>>0]=l&1;c[b+748>>2]=0;c[b+600>>2]=c[f>>2];c[b+600+4>>2]=c[f+4>>2];c[b+600+8>>2]=c[f+8>>2];c[b+600+12>>2]=c[f+12>>2];m=+g[d+4>>2];n=+g[d+20>>2];o=+g[d+36>>2];p=+g[i>>2];q=+g[i+4>>2];r=+g[i+8>>2];do if(!(m*p+n*q+o*r>=.9999998807907104))if(!(m*p+n*q+o*r<=-.9999998807907104)){e=(g[j>>2]=o*q-n*r,c[j>>2]|0);s=(g[j>>2]=m*r-o*p,c[j>>2]|0);f=(g[j>>2]=n*p-m*q,c[j>>2]|0);x=r*(m*r-o*p)-q*(n*p-m*q);y=p*(n*p-m*q)-r*(o*q-n*r);w=q*(o*q-n*r)-p*(m*r-o*p);break}else{e=c[d+8>>2]|0;f=c[d+40>>2]|0;s=c[d+24>>2]|0;x=+g[d+12>>2];y=+g[d+28>>2];w=+g[d+44>>2];break}else{e=c[d+8>>2]|0;f=c[d+40>>2]|0;s=c[d+24>>2]|0;x=-+g[d+12>>2];y=-+g[d+28>>2];w=-+g[d+44>>2];}while(0);g[b+552>>2]=x;c[b+556>>2]=e;c[b+560>>2]=c[i>>2];g[b+564>>2]=0.0;g[b+568>>2]=y;c[b+572>>2]=s;c[b+576>>2]=c[i+4>>2];g[b+580>>2]=0.0;g[b+584>>2]=w;c[b+588>>2]=f;c[b+592>>2]=c[i+8>>2];g[b+596>>2]=0.0;p=+g[i+4>>2];t=+g[k+8>>2];q=+g[i+8>>2];u=+g[k+4>>2];v=+g[k>>2];m=+g[i>>2];do if(t*q+(p*u+v*m)<-.9999998807907104)if(+F(+q)>.7071067690849304){n=1.0/+G(+(p*p+q*q));o=-(q*n);r=0.0;n=p*n;m=0.0;break}else{q=1.0/+G(+(p*p+m*m));o=m*q;r=0.0;n=0.0;m=-(p*q);break}else{z=+G(+((t*q+(p*u+v*m)+1.0)*2.0));o=(q*v-t*m)*(1.0/z);r=z*.5;n=(u*m-p*v)*(1.0/z);m=(p*t-q*u)*(1.0/z);}while(0);B=w*o+x*r-y*n;q=x*n+y*r-w*m;p=y*m+w*r-x*o;A=-(x*m)-y*o-w*n;x=-m;o=-o;w=-n;z=q*w+(A*x+r*B)-p*o;y=p*x+(A*o+r*q)-B*w;x=B*o+(A*w+r*p)-q*x;c[b+664>>2]=c[h>>2];c[b+664+4>>2]=c[h+4>>2];c[b+664+8>>2]=c[h+8>>2];c[b+664+12>>2]=c[h+12>>2];g[b+616>>2]=z;g[b+620>>2]=u*x-t*y;c[b+624>>2]=c[k>>2];g[b+628>>2]=0.0;g[b+632>>2]=y;g[b+636>>2]=t*z-v*x;c[b+640>>2]=c[k+4>>2];g[b+644>>2]=0.0;g[b+648>>2]=x;g[b+652>>2]=v*y-u*z;c[b+656>>2]=c[k+8>>2];g[b+660>>2]=0.0;g[b+732>>2]=l?-1.0:1.0;return}function se(b,d){b=b|0;d=+d;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;r=l;l=l+32|0;e=c[b+136>>2]|0;if((e|0)>0){f=0;do{me(c[b+116>>2]|0,c[b+144>>2]|0,f,0);f=f+1|0;e=c[b+136>>2]|0;}while((f|0)<(e|0))}q=c[b+116>>2]|0;m=+g[q+312>>2];n=+g[q+316>>2];h=+g[q+320>>2];h=+G(+(m*m+n*n+h*h))*3.5999999046325684;g[b+112>>2]=h;p=c[b+128>>2]|0;if(+g[q+4+(p<<2)>>2]*+g[q+312>>2]+ +g[q+20+(p<<2)>>2]*+g[q+316>>2]+ +g[q+36+(p<<2)>>2]*+g[q+320>>2]<0.0)g[b+112>>2]=-h;if((e|0)>0){e=0;do{+mf(b,(c[b+144>>2]|0)+(e*284|0)|0);e=e+1|0;f=c[b+136>>2]|0;}while((e|0)<(f|0));i=1.0/+g[(c[b+116>>2]|0)+344>>2];if((f|0)>0){f=0;do{e=c[b+144>>2]|0;if(!(a[e+(f*284|0)+84>>0]|0))h=0.0;else{h=+g[e+(f*284|0)+272>>2];h=i*(+g[e+(f*284|0)+216>>2]*(+g[e+(f*284|0)+204>>2]-+g[e+(f*284|0)+32>>2])*+g[e+(f*284|0)+268>>2]-h*+g[(h<0.0?e+(f*284|0)+220|0:e+(f*284|0)+224|0)>>2]);h=h<0.0?0.0:h;}g[e+(f*284|0)+276>>2]=h;f=f+1|0;e=c[b+136>>2]|0;}while((f|0)<(e|0));if((e|0)>0){e=0;do{p=c[b+144>>2]|0;k=+g[p+(e*284|0)+276>>2];n=+g[p+(e*284|0)+248>>2];k=k>n?n:k;n=k*+g[p+(e*284|0)+4>>2]*d;m=k*+g[p+(e*284|0)+8>>2]*d;g[r+16>>2]=+g[p+(e*284|0)>>2]*k*d;g[r+16+4>>2]=n;g[r+16+8>>2]=m;g[r+16+12>>2]=0.0;q=c[b+116>>2]|0;m=+g[p+(e*284|0)+20>>2]-+g[q+56>>2];n=+g[p+(e*284|0)+24>>2]-+g[q+60>>2];g[r>>2]=+g[p+(e*284|0)+16>>2]-+g[q+52>>2];g[r+4>>2]=m;g[r+8>>2]=n;g[r+12>>2]=0.0;Wk(q,r+16|0,r);e=e+1|0;}while((e|0)<(c[b+136>>2]|0))}}}kb[c[(c[b>>2]|0)+20>>2]&31](b,d);o=c[b+136>>2]|0;if((o|0)<=0){l=r;return}p=c[b+144>>2]|0;q=c[b+116>>2]|0;f=0;do{h=+g[p+(f*284|0)+36>>2]-+g[q+52>>2];i=+g[p+(f*284|0)+40>>2]-+g[q+56>>2];j=+g[p+(f*284|0)+44>>2]-+g[q+60>>2];k=+g[q+332>>2];m=+g[q+336>>2];n=+g[q+328>>2];if(!(a[p+(f*284|0)+84>>0]|0)){s=p+(f*284|0)+240|0;e=s;h=+g[s>>2];}else{e=c[b+128>>2]|0;y=+g[q+4+(e<<2)>>2];w=+g[q+20+(e<<2)>>2];u=+g[q+36+(e<<2)>>2];x=+g[p+(f*284|0)>>2];v=+g[p+(f*284|0)+4>>2];t=+g[p+(f*284|0)+8>>2];h=((i*n-h*k+ +g[q+320>>2])*(u-t*(y*x+w*v+u*t))+((k*j-i*m+ +g[q+312>>2])*(y-x*(y*x+w*v+u*t))+(h*m-j*n+ +g[q+316>>2])*(w-v*(y*x+w*v+u*t))))*d/+g[p+(f*284|0)+212>>2];e=p+(f*284|0)+240|0;g[e>>2]=h;}s=p+(f*284|0)+236|0;g[s>>2]=h+ +g[s>>2];g[e>>2]=h*.9900000095367432;f=f+1|0;}while((f|0)!=(o|0));l=r;return}function te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;if(!((a|0)!=0&(b|0)!=0))return;c[6436]=(c[6436]|0)+1;e=ic(1043)|0;if(!e)f=0;else{c[(e+4+15&-16)+-4>>2]=e;f=e+4+15&-16;}c[f>>2]=a;c[f+4>>2]=b;e=1;b=124;h=128;a=f;l=128;k=f;i=f;o=f;while(1){r=e+-1|0;p=c[a+(r<<3)>>2]|0;q=c[a+(r<<3)+4>>2]|0;if((r|0)>(b|0)){n=l<<1;do if((l|0)<(n|0)&(h|0)<(n|0)){if(l){c[6436]=(c[6436]|0)+1;b=ic((l<<4|3)+16|0)|0;if(!b)f=0;else{c[(b+4+15&-16)+-4>>2]=b;f=b+4+15&-16;}if((l|0)>0){b=0;do{j=a+(b<<3)|0;k=c[j+4>>2]|0;m=f+(b<<3)|0;c[m>>2]=c[j>>2];c[m+4>>2]=k;b=b+1|0;}while((b|0)!=(l|0));h=f;a=f;}else{h=f;b=f;s=12;}}else{h=0;b=0;s=12;}if((s|0)==12){s=0;if(!a){j=n;a=b;f=h;i=h;b=h;break}else a=b;}if(!o){j=n;f=h;i=h;b=h;}else{c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);j=n;f=h;i=h;b=h;}}else{j=h;f=k;b=o;}while(0);m=n+-4|0;h=j;l=n;k=f;j=b;}else{m=b;j=o;}do if((p|0)==(q|0))if(!(c[p+40>>2]|0))e=r;else{q=c[p+36>>2]|0;c[a+(r<<3)>>2]=q;c[a+(r<<3)+4>>2]=q;q=c[p+40>>2]|0;r=e+1|0;c[a+(e<<3)>>2]=q;c[a+(e<<3)+4>>2]=q;q=c[p+40>>2]|0;c[a+(r<<3)>>2]=c[p+36>>2];c[a+(r<<3)+4>>2]=q;e=e+2|0;}else if(((((+g[p>>2]<=+g[q+16>>2]?+g[p+16>>2]>=+g[q>>2]:0)?+g[p+4>>2]<=+g[q+20>>2]:0)?+g[p+20>>2]>=+g[q+4>>2]:0)?+g[p+8>>2]<=+g[q+24>>2]:0)?+g[p+24>>2]>=+g[q+8>>2]:0){b=(c[q+40>>2]|0)!=0;if(!(c[p+40>>2]|0))if(b){o=c[q+36>>2]|0;c[a+(r<<3)>>2]=p;c[a+(r<<3)+4>>2]=o;r=c[q+40>>2]|0;c[a+(e<<3)>>2]=p;c[a+(e<<3)+4>>2]=r;e=e+1|0;break}else{Vb[c[(c[d>>2]|0)+8>>2]&127](d,p,q);e=r;break}else{f=c[p+36>>2]|0;if(b){n=c[q+36>>2]|0;c[a+(r<<3)>>2]=f;c[a+(r<<3)+4>>2]=n;n=c[q+36>>2]|0;o=e+1|0;c[a+(e<<3)>>2]=c[p+40>>2];c[a+(e<<3)+4>>2]=n;n=c[q+40>>2]|0;r=e+2|0;c[a+(o<<3)>>2]=c[p+36>>2];c[a+(o<<3)+4>>2]=n;q=c[q+40>>2]|0;c[a+(r<<3)>>2]=c[p+40>>2];c[a+(r<<3)+4>>2]=q;e=e+3|0;break}else{c[a+(r<<3)>>2]=f;c[a+(r<<3)+4>>2]=q;c[a+(e<<3)>>2]=c[p+40>>2];c[a+(e<<3)+4>>2]=q;e=e+1|0;break}}}else e=r;while(0);if(!e)break;else{b=m;o=j;}}if((a|0)==0|(k|0)==0)return;c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);return}function ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,H=0.0,I=0.0,J=0.0;d=l;l=l+96|0;k=+g[b>>2];m=+g[a+28>>2];n=+g[b+4>>2];o=+g[a+32>>2];p=+g[b+8>>2];q=+g[a+36>>2];r=+g[a+44>>2];s=+g[a+48>>2];t=+g[a+52>>2];u=+g[a+60>>2];v=+g[a+64>>2];w=+g[a+68>>2];x=+g[a+76>>2];y=+g[a+80>>2];z=+g[a+84>>2];g[d+80>>2]=k*m+n*o+p*q+x;g[d+80+4>>2]=k*r+n*s+p*t+y;g[d+80+8>>2]=k*u+n*v+p*w+z;g[d+80+12>>2]=0.0;A=+g[b+16>>2];B=+g[b+20>>2];C=+g[b+24>>2];g[d+64>>2]=A*m+B*o+C*q+x;g[d+64+4>>2]=A*r+B*s+C*t+y;g[d+64+8>>2]=A*u+B*v+C*w+z;g[d+64+12>>2]=0.0;D=+g[b+32>>2];E=+g[b+36>>2];j=+g[b+40>>2];g[d+48>>2]=D*m+E*o+j*q+x;g[d+48+4>>2]=D*r+E*s+j*t+y;g[d+48+8>>2]=D*u+E*v+j*w+z;g[d+48+12>>2]=0.0;f=(k*m+n*o+p*q+x+(A*m+B*o+C*q+x)+(D*m+E*o+j*q+x))*.3333333432674408;h=(k*r+n*s+p*t+y+(A*r+B*s+C*t+y)+(D*r+E*s+j*t+y))*.3333333432674408;i=(k*u+n*v+p*w+z+(A*u+B*v+C*w+z)+(D*u+E*v+j*w+z))*.3333333432674408;g[d+32>>2]=f;g[d+32+4>>2]=h;g[d+32+8>>2]=i;g[d+32+12>>2]=0.0;b=c[a+8>>2]|0;if(!((pb[c[(c[b>>2]|0)+48>>2]&127](b)|0)&16384)){e=c[a+8>>2]|0;F=c[e>>2]|0;F=F+8|0;F=c[F>>2]|0;b=a+12|0;Zb[F&127](e,d+80|0,d+64|0,b);e=c[a+8>>2]|0;F=c[e>>2]|0;F=F+8|0;F=c[F>>2]|0;Zb[F&127](e,d+64|0,d+48|0,b);a=c[a+8>>2]|0;e=c[a>>2]|0;e=e+8|0;e=c[e>>2]|0;Zb[e&127](a,d+48|0,d+80|0,b);l=d;return}J=+g[d+80>>2];I=A*r+B*s+C*t+y-(k*r+n*s+p*t+y);H=A*u+B*v+C*w+z-(k*u+n*v+p*w+z);y=D*r+E*s+j*t+y-(k*r+n*s+p*t+y);w=D*u+E*v+j*w+z-(k*u+n*v+p*w+z);z=H*(D*m+E*o+j*q+x-J)-(A*m+B*o+C*q+x-J)*w;E=(A*m+B*o+C*q+x-J)*y-I*(D*m+E*o+j*q+x-J);D=1.0/+G(+(E*E+((I*w-H*y)*(I*w-H*y)+z*z)));c[d+16>>2]=1065353216;c[d+16+4>>2]=1065353216;c[d+16+8>>2]=0;g[d+16+12>>2]=0.0;b=c[a+8>>2]|0;e=c[(c[b>>2]|0)+8>>2]|0;g[d>>2]=D*(I*w-H*y)+f;g[d+4>>2]=D*z+h;g[d+8>>2]=D*E+i;g[d+12>>2]=0.0;Zb[e&127](b,d+32|0,d,d+16|0);b=c[a+8>>2]|0;e=c[b>>2]|0;e=e+8|0;e=c[e>>2]|0;F=a+12|0;Zb[e&127](b,d+80|0,d+64|0,F);b=c[a+8>>2]|0;e=c[b>>2]|0;e=e+8|0;e=c[e>>2]|0;Zb[e&127](b,d+64|0,d+48|0,F);a=c[a+8>>2]|0;b=c[a>>2]|0;b=b+8|0;b=c[b>>2]|0;Zb[b&127](a,d+48|0,d+80|0,F);l=d;return}function ve(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0,K=0;K=l;l=l+32|0;if(!a){l=K;return}E=+g[d>>2]-+g[b>>2];D=+g[d+4>>2]-+g[b+4>>2];x=+g[d+8>>2]-+g[b+8>>2];y=1.0/+G(+(E*E+D*D+x*x));z=E*y==0.0?999999984306749440.0:1.0/(E*y);A=D*y==0.0?999999984306749440.0:1.0/(D*y);B=x*y==0.0?999999984306749440.0:1.0/(x*y);c[6436]=(c[6436]|0)+1;d=ic(531)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}Ik(d+4|0,0,508)|0;c[d>>2]=a;q=1;p=126;o=128;s=d;t=128;w=d;m=d;f=d;while(1){u=q+-1|0;v=c[s+(u<<2)>>2]|0;c[K>>2]=c[v>>2];c[K+4>>2]=c[v+4>>2];c[K+8>>2]=c[v+8>>2];c[K+12>>2]=c[v+12>>2];c[K+16>>2]=c[v+16>>2];c[K+16+4>>2]=c[v+16+4>>2];c[K+16+8>>2]=c[v+16+8>>2];c[K+16+12>>2]=c[v+16+12>>2];i=+g[b>>2];h=z*(+g[K+((z<0.0&1)<<4)>>2]-i);i=z*(+g[K+((z<0.0^1)<<4)>>2]-i);k=+g[b+4>>2];j=A*(+g[K+((A<0.0&1)<<4)+4>>2]-k);k=A*(+g[K+((A<0.0^1)<<4)+4>>2]-k);do if((!(j>i|h>k)?(F=j>h?j:h,C=k<i?k:i,I=+g[b+8>>2],H=B*(+g[K+((B<0.0&1)<<4)+8>>2]-I),I=B*(+g[K+((B<0.0^1)<<4)+8>>2]-I),!(H>C|F>I)):0)?((I<C?I:C)>0.0?(H>F?H:F)<E*y*E+D*y*D+x*y*x:0):0){if(!(c[v+40>>2]|0)){nb[c[(c[e>>2]|0)+12>>2]&127](e,v);q=u;d=s;n=t;a=w;break}if((u|0)>(p|0)){r=t<<1;if((t|0)<(r|0)){do if((o|0)<(r|0)){if(t){c[6436]=(c[6436]|0)+1;d=ic((t<<3|3)+16|0)|0;if(!d)a=0;else{c[(d+4+15&-16)+-4>>2]=d;a=d+4+15&-16;}if((t|0)>0){d=0;do{c[a+(d<<2)>>2]=c[s+(d<<2)>>2];d=d+1|0;}while((d|0)!=(t|0));f=a;d=a;}else{f=a;d=a;J=17;}}else{f=0;d=0;J=17;}if((J|0)==17){J=0;if(!s){o=r;m=f;n=f;a=f;break}}if(!w){o=r;m=f;n=f;a=f;}else{c[6437]=(c[6437]|0)+1;Tc(c[w+-4>>2]|0);o=r;m=f;n=f;a=f;}}else{d=s;n=f;a=w;}while(0);Ik(d+(t<<2)|0,0,t<<2|0)|0;f=n;}else{d=s;a=w;}p=r+-2|0;n=r;}else{d=s;n=t;a=w;}c[d+(u<<2)>>2]=c[v+36>>2];c[d+(q<<2)>>2]=c[v+40>>2];q=q+1|0;}else{q=u;d=s;n=t;a=w;}while(0);if(!q)break;else{s=d;t=n;w=a;}}if((d|0)==0|(m|0)==0){l=K;return}c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);l=K;return}function we(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0,j=0.0;a=l;l=l+144|0;switch(c[b+388>>2]&15){case 1:{c[a+112>>2]=3492;h=c[d+8>>2]|0;h=(c[h+236>>2]&2|0)==0?0:h;i=c[d+12>>2]|0;j=+g[i+48>>2];e=+g[i+52>>2];f=+g[i+56>>2];f=+G(+((j-j)*(j-j)+(e-e)*(e-e)+(f-f)*(f-f)));i=c[b+192>>2]|0;e=+Db[c[(c[i>>2]|0)+48>>2]&15](i);i=c[d+4>>2]|0;Zb[c[(c[i>>2]|0)+8>>2]&127](i,c[d+12>>2]|0,a+96|0,a+64|0);c[a>>2]=c[a+96>>2];c[a+4>>2]=c[a+96+4>>2];c[a+8>>2]=c[a+96+8>>2];c[a+12>>2]=c[a+96+12>>2];c[a+16>>2]=c[a+64>>2];c[a+16+4>>2]=c[a+64+4>>2];c[a+16+8>>2]=c[a+64+8>>2];c[a+16+12>>2]=c[a+64+12>>2];c[a+32>>2]=c[a>>2];c[a+32+4>>2]=c[a+4>>2];c[a+32+8>>2]=c[a+8>>2];c[a+32+12>>2]=c[a+12>>2];c[a+32+16>>2]=c[a+16>>2];c[a+32+20>>2]=c[a+20>>2];c[a+32+24>>2]=c[a+24>>2];c[a+32+28>>2]=c[a+28>>2];g[a+32>>2]=+g[a+32>>2]-e;g[a+32+4>>2]=+g[a+32+4>>2]-e;g[a+32+8>>2]=+g[a+32+8>>2]-e;g[a+32+16>>2]=e+ +g[a+32+16>>2];g[a+32+20>>2]=e+ +g[a+32+20>>2];g[a+32+24>>2]=e+ +g[a+32+24>>2];c[a+112+4>>2]=b;c[a+112+8>>2]=d;c[a+112+12>>2]=h;g[a+112+16>>2]=f+e;g[a+112+20>>2]=e;Xe(c[b+928>>2]|0,a+32|0,a+112|0);l=a;return}case 2:{g[a+4>>2]=1.0;c[a+8+4>>2]=0;c[a+8+4+4>>2]=0;c[a+8+4+8>>2]=0;c[a>>2]=3528;c[a+24>>2]=b;c[a+28>>2]=d;c[a+8>>2]=c[b+456>>2];i=c[d+4>>2]|0;j=+Db[c[(c[i>>2]|0)+48>>2]&15](i);i=c[b+192>>2]|0;j=j+ +Db[c[(c[i>>2]|0)+48>>2]&15](i);g[a+12>>2]=j;f=+g[(c[d+8>>2]|0)+224>>2];g[a+112>>2]=f;c[a+16>>2]=c[(+g[b+316>>2]<f?b+316|0:a+112|0)>>2];i=c[d+4>>2]|0;Zb[c[(c[i>>2]|0)+8>>2]&127](i,c[d+12>>2]|0,a+112|0,a+96|0);c[a+32>>2]=c[a+112>>2];c[a+32+4>>2]=c[a+112+4>>2];c[a+32+8>>2]=c[a+112+8>>2];c[a+32+12>>2]=c[a+112+12>>2];c[a+32+16>>2]=c[a+96>>2];c[a+32+16+4>>2]=c[a+96+4>>2];c[a+32+16+8>>2]=c[a+96+8>>2];c[a+32+16+12>>2]=c[a+96+12>>2];c[a+64>>2]=c[a+32>>2];c[a+64+4>>2]=c[a+32+4>>2];c[a+64+8>>2]=c[a+32+8>>2];c[a+64+12>>2]=c[a+32+12>>2];c[a+64+16>>2]=c[a+32+16>>2];c[a+64+20>>2]=c[a+32+20>>2];c[a+64+24>>2]=c[a+32+24>>2];c[a+64+28>>2]=c[a+32+28>>2];g[a+64>>2]=+g[a+64>>2]-j;g[a+64+4>>2]=+g[a+64+4>>2]-j;g[a+64+8>>2]=+g[a+64+8>>2]-j;g[a+64+16>>2]=j+ +g[a+64+16>>2];g[a+64+20>>2]=j+ +g[a+64+20>>2];g[a+64+24>>2]=j+ +g[a+64+24>>2];Xe(c[b+1048>>2]|0,a+64|0,a);l=a;return}default:{l=a;return}}}function xe(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;c[b+4>>2]=6;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=d;c[b+32>>2]=e;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4504;c[b+48>>2]=c[f>>2];c[b+48+4>>2]=c[f+4>>2];c[b+48+8>>2]=c[f+8>>2];c[b+48+12>>2]=c[f+12>>2];c[b+64>>2]=c[f+16>>2];c[b+64+4>>2]=c[f+16+4>>2];c[b+64+8>>2]=c[f+16+8>>2];c[b+64+12>>2]=c[f+16+12>>2];c[b+80>>2]=c[f+32>>2];c[b+80+4>>2]=c[f+32+4>>2];c[b+80+8>>2]=c[f+32+8>>2];c[b+80+12>>2]=c[f+32+12>>2];c[b+96>>2]=c[f+48>>2];c[b+96+4>>2]=c[f+48+4>>2];c[b+96+8>>2]=c[f+48+8>>2];c[b+96+12>>2]=c[f+48+12>>2];c[b+112>>2]=c[h>>2];c[b+112+4>>2]=c[h+4>>2];c[b+112+8>>2]=c[h+8>>2];c[b+112+12>>2]=c[h+12>>2];c[b+128>>2]=c[h+16>>2];c[b+128+4>>2]=c[h+16+4>>2];c[b+128+8>>2]=c[h+16+8>>2];c[b+128+12>>2]=c[h+16+12>>2];c[b+144>>2]=c[h+32>>2];c[b+144+4>>2]=c[h+32+4>>2];c[b+144+8>>2]=c[h+32+8>>2];c[b+144+12>>2]=c[h+32+12>>2];c[b+160>>2]=c[h+48>>2];c[b+160+4>>2]=c[h+48+4>>2];c[b+160+8>>2]=c[h+48+8>>2];c[b+160+12>>2]=c[h+48+12>>2];d=b+680|0;e=d+48|0;do{c[d>>2]=0;d=d+4|0;}while((d|0)<(e|0));c[b+740>>2]=0;c[b+740+4>>2]=0;c[b+740+8>>2]=0;c[b+740+12>>2]=0;c[b+756>>2]=1045220557;c[b+760>>2]=1045220557;c[b+764>>2]=1045220557;c[b+768>>2]=0;c[b+768+4>>2]=0;c[b+768+8>>2]=0;c[b+768+12>>2]=0;c[b+768+16>>2]=0;g[b+728>>2]=.699999988079071;g[b+732>>2]=1.0;g[b+736>>2]=.5;a[b+788>>0]=0;g[b+792>>2]=0.0;g[b+808>>2]=0.0;a[b+789>>0]=0;g[b+796>>2]=0.0;g[b+812>>2]=0.0;a[b+790>>0]=0;g[b+800>>2]=0.0;g[b+816>>2]=0.0;g[b+928>>2]=0.0;g[b+876>>2]=0.0;g[b+880>>2]=.10000000149011612;g[b+884>>2]=300.0;g[b+868>>2]=1.0;g[b+872>>2]=-1.0;g[b+896>>2]=0.0;g[b+900>>2]=.20000000298023224;g[b+904>>2]=0.0;g[b+908>>2]=0.0;g[b+888>>2]=1.0;g[b+892>>2]=.5;c[b+924>>2]=0;g[b+916>>2]=0.0;a[b+912>>0]=0;g[b+992>>2]=0.0;g[b+940>>2]=0.0;g[b+944>>2]=.10000000149011612;g[b+948>>2]=300.0;g[b+932>>2]=1.0;g[b+936>>2]=-1.0;g[b+960>>2]=0.0;g[b+964>>2]=.20000000298023224;g[b+968>>2]=0.0;g[b+972>>2]=0.0;g[b+952>>2]=1.0;g[b+956>>2]=.5;c[b+988>>2]=0;g[b+980>>2]=0.0;a[b+976>>0]=0;g[b+1056>>2]=0.0;g[b+1004>>2]=0.0;g[b+1008>>2]=.10000000149011612;g[b+1012>>2]=300.0;g[b+996>>2]=1.0;g[b+1e3>>2]=-1.0;g[b+1024>>2]=0.0;g[b+1028>>2]=.20000000298023224;g[b+1032>>2]=0.0;g[b+1036>>2]=0.0;g[b+1016>>2]=1.0;g[b+1020>>2]=.5;c[b+1052>>2]=0;g[b+1044>>2]=0.0;a[b+1040>>0]=0;a[b+1300>>0]=i&1;a[b+1301>>0]=1;c[b+1304>>2]=0;a[b+1308>>0]=0;cd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);return}function ye(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0;if(!b)b=0;else b=(c[b+236>>2]&2|0)==0?0:b;c[a+64>>2]=0;c[a+64+4>>2]=0;c[a+64+8>>2]=0;c[a+64+12>>2]=0;c[a+64+16>>2]=0;c[a+64+20>>2]=0;c[a+64+24>>2]=0;c[a+64+28>>2]=0;c[a+144>>2]=0;c[a+144+4>>2]=0;c[a+144+8>>2]=0;c[a+144+12>>2]=0;c[a+144+16>>2]=0;c[a+144+20>>2]=0;c[a+144+24>>2]=0;c[a+144+28>>2]=0;if(!b){c[a>>2]=1065353216;c[a+4>>2]=0;c[a+4+4>>2]=0;c[a+4+8>>2]=0;c[a+4+12>>2]=0;c[a+20>>2]=1065353216;c[a+24>>2]=0;c[a+24+4>>2]=0;c[a+24+8>>2]=0;c[a+24+12>>2]=0;c[a+40>>2]=1065353216;c[a+44>>2]=0;c[a+44+4>>2]=0;c[a+44+8>>2]=0;c[a+44+12>>2]=0;c[a+44+16>>2]=0;c[a+240>>2]=0;c[a+128>>2]=0;c[a+128+4>>2]=0;c[a+128+8>>2]=0;c[a+128+12>>2]=0;c[a+96>>2]=1065353216;c[a+100>>2]=1065353216;c[a+104>>2]=1065353216;g[a+108>>2]=0.0;c[a+112>>2]=1065353216;c[a+116>>2]=1065353216;c[a+120>>2]=1065353216;g[a+124>>2]=0.0;b=a+176|0;e=b+60|0;do{c[b>>2]=0;b=b+4|0;}while((b|0)<(e|0));a=a+236|0;g[a>>2]=0.0;return}else{e=b+4|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];e=b+20|0;c[a+16>>2]=c[e>>2];c[a+16+4>>2]=c[e+4>>2];c[a+16+8>>2]=c[e+8>>2];c[a+16+12>>2]=c[e+12>>2];e=b+36|0;c[a+32>>2]=c[e>>2];c[a+32+4>>2]=c[e+4>>2];c[a+32+8>>2]=c[e+8>>2];c[a+32+12>>2]=c[e+12>>2];e=b+52|0;c[a+48>>2]=c[e>>2];c[a+48+4>>2]=c[e+4>>2];c[a+48+8>>2]=c[e+8>>2];c[a+48+12>>2]=c[e+12>>2];e=b+344|0;k=+g[e>>2];l=b+348|0;j=k*+g[b+352>>2];i=k*+g[b+356>>2];g[a+128>>2]=k*+g[l>>2];g[a+132>>2]=j;g[a+136>>2]=i;g[a+140>>2]=0.0;c[a+240>>2]=b;m=b+544|0;c[a+96>>2]=c[m>>2];c[a+96+4>>2]=c[m+4>>2];c[a+96+8>>2]=c[m+8>>2];c[a+96+12>>2]=c[m+12>>2];c[a+112>>2]=c[l>>2];c[a+112+4>>2]=c[l+4>>2];c[a+112+8>>2]=c[l+8>>2];c[a+112+12>>2]=c[l+12>>2];l=b+312|0;c[a+176>>2]=c[l>>2];c[a+176+4>>2]=c[l+4>>2];c[a+176+8>>2]=c[l+8>>2];c[a+176+12>>2]=c[l+12>>2];l=b+328|0;c[a+192>>2]=c[l>>2];c[a+192+4>>2]=c[l+4>>2];c[a+192+8>>2]=c[l+8>>2];c[a+192+12>>2]=c[l+12>>2];i=+g[e>>2];j=i*+g[b+416>>2]*d;k=i*+g[b+420>>2]*d;g[a+208>>2]=i*+g[b+412>>2]*d;g[a+212>>2]=j;g[a+216>>2]=k;g[a+220>>2]=0.0;k=+g[b+428>>2];j=+g[b+432>>2];i=+g[b+436>>2];h=(k*+g[b+268>>2]+j*+g[b+284>>2]+i*+g[b+300>>2])*d;f=(k*+g[b+272>>2]+j*+g[b+288>>2]+i*+g[b+304>>2])*d;g[a+224>>2]=(+g[b+264>>2]*k+ +g[b+280>>2]*j+ +g[b+296>>2]*i)*d;g[a+228>>2]=h;g[a+232>>2]=f;a=a+236|0;g[a>>2]=0.0;return}}function ze(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,k=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0;M=l;l=l+64|0;c[M+48>>2]=a;c[M+48+4>>2]=b;c[M+48+8>>2]=d;L=+g[a>>2];z=+g[b>>2];A=+g[a+4>>2];B=+g[b+4>>2];C=+g[a+8>>2];D=+g[b+8>>2];g[M>>2]=L-z;g[M+4>>2]=A-B;g[M+8>>2]=C-D;g[M+12>>2]=0.0;E=+g[d>>2];F=+g[d+4>>2];H=+g[d+8>>2];g[M+16>>2]=z-E;g[M+20>>2]=B-F;g[M+24>>2]=D-H;g[M+28>>2]=0.0;g[M+32>>2]=E-L;g[M+36>>2]=F-A;g[M+40>>2]=H-C;g[M+44>>2]=0.0;I=(A-B)*(D-H)-(C-D)*(B-F);J=(C-D)*(z-E)-(D-H)*(L-z);K=(B-F)*(L-z)-(A-B)*(z-E);if(K*K+(I*I+J*J)>0.0){k=0;x=-1.0;y=0;m=0;h=0;o=A-B;p=C-D;i=L-z;u=L;v=A;w=C;}else{L=-1.0;l=M;return +L}while(1){if(u*(K*o-J*p)+v*(I*p-K*i)+(J*i-I*o)*w>0.0){n=c[5100+(y<<2)>>2]|0;N=c[M+48+(n<<2)>>2]|0;r=+g[N>>2];i=r-u;s=+g[N+4>>2];p=s-v;t=+g[N+8>>2];q=t-w;do if(i*i+p*p+q*q>0.0){o=-(u*i+v*p+w*q)/(i*i+p*p+q*q);if(o>=1.0){k=2;i=r*r+s*s+t*t;m=0;h=1065353216;break}if(!(o<=0.0)){h=(g[j>>2]=o,c[j>>2]|0);u=u+i*o;i=v+p*o;w=w+q*o;k=3;i=w*w+(u*u+i*i);m=(g[j>>2]=1.0-o,c[j>>2]|0);break}else{k=1;i=u*u+v*v+w*w;m=1065353216;h=0;break}}else i=-1.0;while(0);if(x<0.0|i<x){c[f>>2]=(k&1|0?1<<y:0)+(k&2|0?1<<n:0);c[e+(y<<2)>>2]=m;c[e+(n<<2)>>2]=h;g[e+(c[5100+(n<<2)>>2]<<2)>>2]=0.0;}else i=x;}else i=x;n=y+1|0;if((n|0)==3)break;N=c[M+48+(n<<2)>>2]|0;x=i;y=n;o=+g[M+(n<<4)+4>>2];p=+g[M+(n<<4)+8>>2];i=+g[M+(n<<4)>>2];u=+g[N>>2];v=+g[N+4>>2];w=+g[N+8>>2];}if(!(i<0.0)){L=i;l=M;return +L}w=+G(+(K*K+(I*I+J*J)));x=(I*+g[a>>2]+J*+g[a+4>>2]+K*+g[a+8>>2])/(K*K+(I*I+J*J));c[f>>2]=7;u=+g[b>>2]-I*x;t=+g[b+4>>2]-J*x;v=+g[b+8>>2]-K*x;D=+G(+((t*(z-E)-u*(B-F))*(t*(z-E)-u*(B-F))+(((B-F)*v-t*(D-H))*((B-F)*v-t*(D-H))+(u*(D-H)-v*(z-E))*(u*(D-H)-v*(z-E)))))/w;g[e>>2]=D;z=+g[d>>2]-I*x;v=+g[d+4>>2]-J*x;B=+g[d+8>>2]-K*x;L=+G(+((v*(E-L)-z*(F-A))*(v*(E-L)-z*(F-A))+(((F-A)*B-v*(H-C))*((F-A)*B-v*(H-C))+(z*(H-C)-B*(E-L))*(z*(H-C)-B*(E-L)))))/w;g[e+4>>2]=L;g[e+8>>2]=1.0-(L+D);L=K*x*K*x+(I*x*I*x+J*x*J*x);l=M;return +L}function Ae(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;c[e+16>>2]=c[a+20>>2];c[e+20>>2]=c[a+24>>2];c[e+24>>2]=c[a+28>>2];c[e+28>>2]=c[a+32>>2];c[e>>2]=c[a+4>>2];c[e+4>>2]=c[a+8>>2];c[e+8>>2]=c[a+12>>2];c[e+12>>2]=c[a+16>>2];c[e+32>>2]=c[a+36>>2];c[e+36>>2]=c[a+40>>2];c[e+40>>2]=c[a+44>>2];c[e+44>>2]=c[a+48>>2];c[e+48>>2]=c[a+56>>2];c[e+52>>2]=d[a+60>>0];k=c[a+88>>2]|0;c[e+56>>2]=k;if(k){k=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+96>>2]|0)|0;c[e+64>>2]=k;if(k|0){j=c[a+88>>2]|0;k=zb[c[(c[f>>2]|0)+16>>2]&63](f,48,j)|0;if((j|0)>0){g=c[a+96>>2]|0;h=c[k+8>>2]|0;i=0;while(1){c[h+16>>2]=c[g+(i<<6)+16>>2];c[h+20>>2]=c[g+(i<<6)+20>>2];c[h+24>>2]=c[g+(i<<6)+24>>2];c[h+28>>2]=c[g+(i<<6)+28>>2];c[h>>2]=c[g+(i<<6)>>2];c[h+4>>2]=c[g+(i<<6)+4>>2];c[h+8>>2]=c[g+(i<<6)+8>>2];c[h+12>>2]=c[g+(i<<6)+12>>2];c[h+32>>2]=c[g+(i<<6)+32>>2];c[h+36>>2]=c[g+(i<<6)+36>>2];c[h+40>>2]=c[g+(i<<6)+40>>2];i=i+1|0;if((i|0)==(j|0))break;else h=h+48|0;}}else g=c[a+96>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,k,18560,1497453121,g);}}else c[e+64>>2]=0;k=c[a+128>>2]|0;c[e+60>>2]=k;if(k){k=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+136>>2]|0)|0;c[e+68>>2]=k;if(k|0){j=c[a+128>>2]|0;k=zb[c[(c[f>>2]|0)+16>>2]&63](f,16,j)|0;if((j|0)>0){g=c[a+136>>2]|0;h=c[k+8>>2]|0;i=0;while(1){c[h+12>>2]=c[g+(i<<4)+12>>2];b[h+6>>1]=b[g+(i<<4)+6>>1]|0;b[h+8>>1]=b[g+(i<<4)+8>>1]|0;b[h+10>>1]=b[g+(i<<4)+10>>1]|0;b[h>>1]=b[g+(i<<4)>>1]|0;b[h+2>>1]=b[g+(i<<4)+2>>1]|0;b[h+4>>1]=b[g+(i<<4)+4>>1]|0;i=i+1|0;if((i|0)==(j|0))break;else h=h+16|0;}}else g=c[a+136>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,k,18583,1497453121,g);}}else c[e+68>>2]=0;c[e+76>>2]=c[a+144>>2];k=c[a+152>>2]|0;c[e+80>>2]=k;if(!k){c[e+72>>2]=0;return 18627}k=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+160>>2]|0)|0;c[e+72>>2]=k;if(!k)return 18627;j=c[a+152>>2]|0;k=zb[c[(c[f>>2]|0)+16>>2]&63](f,20,j)|0;if((j|0)>0){g=c[a+160>>2]|0;h=c[k+8>>2]|0;i=0;while(1){b[h+14>>1]=b[g+(i<<5)+6>>1]|0;b[h+16>>1]=b[g+(i<<5)+8>>1]|0;b[h+18>>1]=b[g+(i<<5)+10>>1]|0;b[h+8>>1]=b[g+(i<<5)>>1]|0;b[h+10>>1]=b[g+(i<<5)+2>>1]|0;b[h+12>>1]=b[g+(i<<5)+4>>1]|0;c[h>>2]=c[g+(i<<5)+12>>2];c[h+4>>2]=c[g+(i<<5)+16>>2];i=i+1|0;if((i|0)==(j|0))break;else h=h+20|0;}}else g=c[a+160>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,k,18606,1497453121,g);return 18627}function Be(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=l;l=l+144|0;g[a+36>>2]=0.0;c[d+128>>2]=0;c[d+128+4>>2]=0;c[d+128+8>>2]=0;c[d+128+12>>2]=0;b=0;do{e=d+128+(b<<2)|0;g[e>>2]=1.0;A=c[a+28>>2]|0;I=c[A+4>>2]|0;c[d+80>>2]=I;F=c[A+20>>2]|0;c[d+80+4>>2]=F;C=c[A+36>>2]|0;c[d+80+8>>2]=C;g[d+80+12>>2]=0.0;H=c[A+8>>2]|0;c[d+80+16>>2]=H;E=c[A+24>>2]|0;c[d+80+20>>2]=E;B=c[A+40>>2]|0;c[d+80+24>>2]=B;g[d+80+28>>2]=0.0;G=c[A+12>>2]|0;c[d+80+32>>2]=G;D=c[A+28>>2]|0;c[d+80+36>>2]=D;z=c[A+44>>2]|0;c[d+80+40>>2]=z;g[d+80+44>>2]=0.0;f=c[a+32>>2]|0;y=c[f+4>>2]|0;c[d+32>>2]=y;v=c[f+20>>2]|0;c[d+32+4>>2]=v;s=c[f+36>>2]|0;c[d+32+8>>2]=s;g[d+32+12>>2]=0.0;x=c[f+8>>2]|0;c[d+32+16>>2]=x;u=c[f+24>>2]|0;c[d+32+20>>2]=u;r=c[f+40>>2]|0;c[d+32+24>>2]=r;g[d+32+28>>2]=0.0;w=c[f+12>>2]|0;c[d+32+32>>2]=w;t=c[f+28>>2]|0;c[d+32+36>>2]=t;h=c[f+44>>2]|0;c[d+32+40>>2]=h;g[d+32+44>>2]=0.0;p=+g[a+300>>2];m=p*(c[j>>2]=I,+g[j>>2]);i=+g[a+304>>2];m=m+i*(c[j>>2]=H,+g[j>>2]);k=+g[a+308>>2];m=m+k*(c[j>>2]=G,+g[j>>2]);q=p*(c[j>>2]=F,+g[j>>2]);q=q+i*(c[j>>2]=E,+g[j>>2]);q=q+k*(c[j>>2]=D,+g[j>>2]);p=p*(c[j>>2]=C,+g[j>>2]);i=p+i*(c[j>>2]=B,+g[j>>2]);p=+g[A+52>>2];o=+g[A+56>>2];n=+g[A+60>>2];n=i+k*(c[j>>2]=z,+g[j>>2])+n-n;g[d+16>>2]=m+p-p;g[d+16+4>>2]=q+o-o;g[d+16+8>>2]=n;g[d+16+12>>2]=0.0;n=+g[a+316>>2];o=n*(c[j>>2]=y,+g[j>>2]);q=+g[a+320>>2];o=o+q*(c[j>>2]=x,+g[j>>2]);p=+g[a+324>>2];o=o+p*(c[j>>2]=w,+g[j>>2]);m=n*(c[j>>2]=v,+g[j>>2]);m=m+q*(c[j>>2]=u,+g[j>>2]);m=m+p*(c[j>>2]=t,+g[j>>2]);n=n*(c[j>>2]=s,+g[j>>2]);q=n+q*(c[j>>2]=r,+g[j>>2]);n=+g[f+52>>2];k=+g[f+56>>2];i=+g[f+60>>2];i=q+p*(c[j>>2]=h,+g[j>>2])+i-i;g[d>>2]=o+n-n;g[d+4>>2]=m+k-k;g[d+8>>2]=i;g[d+12>>2]=0.0;h=c[a+28>>2]|0;f=c[a+32>>2]|0;yg(a+48+(b*84|0)|0,d+80|0,d+32|0,d+16|0,d,d+128|0,h+396|0,+g[h+344>>2],f+396|0,+g[f+344>>2]);g[e>>2]=0.0;b=b+1|0;}while((b|0)!=3);l=d;return}function Ce(a,b,d){a=a|0;b=b|0;d=d|0;var f=0.0,i=0.0,j=0.0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;r=l;l=l+80|0;n=c[a+4>>2]|0;Jb[c[(c[n>>2]|0)+16>>2]&3](n,r+28|0,r+24|0,r+20|0,r+16|0,r+12|0,r+8|0,r+4|0,r,b);n=(c[r+12>>2]|0)+(S(c[r+8>>2]|0,d)|0)|0;q=c[a+4>>2]|0;p=(c[r+20>>2]|0)==0;o=c[r+28>>2]|0;do if((c[r>>2]|0)==3){m=c[r+16>>2]|0;k=o+(S(m,e[n+4>>1]|0)|0)|0;if(p){i=+g[k+4>>2]*+g[q+8>>2];j=+g[k>>2]*+g[q+4>>2];f=+g[k+8>>2];}else{i=+h[k+8>>3]*+g[q+8>>2];j=+h[k>>3]*+g[q+4>>2];f=+h[k+16>>3];}f=f*+g[q+12>>2];g[r+32+32>>2]=j;g[r+32+36>>2]=i;g[r+32+40>>2]=f;g[r+32+44>>2]=0.0;k=o+(S(m,e[n+2>>1]|0)|0)|0;if(p){i=+g[k+4>>2]*+g[q+8>>2];j=+g[k>>2]*+g[q+4>>2];f=+g[k+8>>2];}else{i=+h[k+8>>3]*+g[q+8>>2];j=+h[k>>3]*+g[q+4>>2];f=+h[k+16>>3];}f=f*+g[q+12>>2];g[r+32+16>>2]=j;g[r+32+20>>2]=i;g[r+32+24>>2]=f;g[r+32+28>>2]=0.0;k=o+(S(m,e[n>>1]|0)|0)|0;if(p){i=+g[k+4>>2]*+g[q+8>>2];j=+g[k>>2]*+g[q+4>>2];f=+g[k+8>>2];break}else{i=+h[k+8>>3]*+g[q+8>>2];j=+h[k>>3]*+g[q+4>>2];f=+h[k+16>>3];break}}else{k=c[r+16>>2]|0;m=o+(S(k,c[n+8>>2]|0)|0)|0;if(p){i=+g[m+4>>2]*+g[q+8>>2];j=+g[m+8>>2]*+g[q+12>>2];g[r+32+32>>2]=+g[m>>2]*+g[q+4>>2];g[r+32+36>>2]=i;g[r+32+40>>2]=j;g[r+32+44>>2]=0.0;p=o+(S(k,c[n+4>>2]|0)|0)|0;j=+g[p+4>>2]*+g[q+8>>2];i=+g[p+8>>2]*+g[q+12>>2];g[r+32+16>>2]=+g[p>>2]*+g[q+4>>2];g[r+32+20>>2]=j;g[r+32+24>>2]=i;g[r+32+28>>2]=0.0;p=o+(S(k,c[n>>2]|0)|0)|0;i=+g[p+4>>2]*+g[q+8>>2];j=+g[p>>2]*+g[q+4>>2];f=+g[p+8>>2];break}else{i=+h[m+8>>3]*+g[q+8>>2];j=+h[m+16>>3]*+g[q+12>>2];g[r+32+32>>2]=+h[m>>3]*+g[q+4>>2];g[r+32+36>>2]=i;g[r+32+40>>2]=j;g[r+32+44>>2]=0.0;p=o+(S(k,c[n+4>>2]|0)|0)|0;j=+h[p+8>>3]*+g[q+8>>2];i=+h[p+16>>3]*+g[q+12>>2];g[r+32+16>>2]=+h[p>>3]*+g[q+4>>2];g[r+32+20>>2]=j;g[r+32+24>>2]=i;g[r+32+28>>2]=0.0;p=o+(S(k,c[n>>2]|0)|0)|0;i=+h[p+8>>3]*+g[q+8>>2];j=+h[p>>3]*+g[q+4>>2];f=+h[p+16>>3];break}}while(0);f=f*+g[q+12>>2];g[r+32>>2]=j;g[r+32+4>>2]=i;g[r+32+8>>2]=f;g[r+32+12>>2]=0.0;q=c[a+8>>2]|0;Zb[c[(c[q>>2]|0)+8>>2]&127](q,r+32|0,b,d);q=c[a+4>>2]|0;nb[c[(c[q>>2]|0)+24>>2]&127](q,b);l=r;return}function De(b,d,e,f,h,i,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;if((j|0)<2|(k|0)<2){m=0;return m|0}r=S(k,j)|0;c[6436]=(c[6436]|0)+1;b=ic(r>>>0>268435455?18:(r<<4|3)+16|0)|0;if(!b)p=0;else{c[(b+4+15&-16)+-4>>2]=b;p=b+4+15&-16;}q=YG(r>>>0>1073741823?-1:r<<2)|0;if((k|0)>0?(j|0)>0:0){b=0;do{y=+(b|0)/+(k+-1|0);s=+g[e>>2];s=s+y*(+g[h>>2]-s);t=+g[e+4>>2];t=t+y*(+g[h+4>>2]-t);u=+g[e+8>>2];u=u+y*(+g[h+8>>2]-u);v=+g[f>>2];w=+g[f+4>>2];x=+g[f+8>>2];v=v+y*(+g[i>>2]-v)-s;w=w+y*(+g[i+4>>2]-w)-t;x=x+y*(+g[i+8>>2]-x)-u;o=S(b,j)|0;n=0;do{y=+(n|0)/+(j+-1|0);z=n+o|0;g[p+(z<<4)>>2]=s+v*y;g[p+(z<<4)+4>>2]=t+w*y;g[p+(z<<4)+8>>2]=u+x*y;g[p+(z<<4)+12>>2]=0.0;g[q+(z<<2)>>2]=1.0;n=n+1|0;}while((n|0)!=(j|0));b=b+1|0;}while((b|0)!=(k|0))}c[6436]=(c[6436]|0)+1;b=ic(1271)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}tc(b,d,r,p,q);if(l&1|0){g[(c[b+720>>2]|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&2|0){g[(c[b+720>>2]|0)+((j+-1|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&4|0){z=S(k+-1|0,j)|0;g[(c[b+720>>2]|0)+(z*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(l&8|0){z=j+-1+(S(k+-1|0,j)|0)|0;g[(c[b+720>>2]|0)+(z*104|0)+88>>2]=0.0;a[b+924>>0]=1;}if(p|0){c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);}ZG(q);if((k|0)<=0){z=b;return z|0}i=0;do{p=i;i=i+1|0;a:do if((j|0)>0){r=S(p,j)|0;e=S(i,j)|0;if((i|0)<(k|0))n=0;else{n=0;while(1){o=n;n=n+1|0;if((n|0)<(j|0))Ef(b,o+r|0,n+r|0,0,0);if((n|0)==(j|0))break a}}do{q=n+r|0;o=n;n=n+1|0;do if((n|0)<(j|0)){f=n+r|0;Ef(b,q,f,0,0);Ef(b,q,o+e|0,0,0);if(!(o+p&1)){Nf(b,o+e|0,q,f,0);Nf(b,o+e|0,f,n+e|0,0);if(!m)break;Ef(b,f,o+e|0,0,0);break}else{h=n+e|0;Nf(b,q,f,h,0);Nf(b,q,h,o+e|0,0);if(!m)break;Ef(b,q,h,0,0);break}}else Ef(b,q,o+e|0,0,0);while(0)}while((n|0)!=(j|0))}while(0)}while((i|0)!=(k|0));return b|0}function Ee(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;if(!(c[a+204>>2]&2)){c[a+68>>2]=c[b>>2];c[a+68+4>>2]=c[b+4>>2];c[a+68+8>>2]=c[b+8>>2];c[a+68+12>>2]=c[b+12>>2];c[a+84>>2]=c[b+16>>2];c[a+84+4>>2]=c[b+16+4>>2];c[a+84+8>>2]=c[b+16+8>>2];c[a+84+12>>2]=c[b+16+12>>2];c[a+100>>2]=c[b+32>>2];c[a+100+4>>2]=c[b+32+4>>2];c[a+100+8>>2]=c[b+32+8>>2];c[a+100+12>>2]=c[b+32+12>>2];c[a+116>>2]=c[b+48>>2];c[a+116+4>>2]=c[b+48+4>>2];c[a+116+8>>2]=c[b+48+8>>2];c[a+116+12>>2]=c[b+48+12>>2];d=a+20|0;e=b+16|0;f=a+36|0;h=b+32|0;i=a+52|0;j=b+48|0;k=a+4|0;}else{c[a+68>>2]=c[a+4>>2];c[a+68+4>>2]=c[a+4+4>>2];c[a+68+8>>2]=c[a+4+8>>2];c[a+68+12>>2]=c[a+4+12>>2];c[a+84>>2]=c[a+20>>2];c[a+84+4>>2]=c[a+20+4>>2];c[a+84+8>>2]=c[a+20+8>>2];c[a+84+12>>2]=c[a+20+12>>2];c[a+100>>2]=c[a+36>>2];c[a+100+4>>2]=c[a+36+4>>2];c[a+100+8>>2]=c[a+36+8>>2];c[a+100+12>>2]=c[a+36+12>>2];c[a+116>>2]=c[a+52>>2];c[a+116+4>>2]=c[a+52+4>>2];c[a+116+8>>2]=c[a+52+8>>2];c[a+116+12>>2]=c[a+52+12>>2];d=a+20|0;e=b+16|0;f=a+36|0;h=b+32|0;i=a+52|0;j=b+48|0;k=a+4|0;}c[a+132>>2]=c[a+312>>2];c[a+132+4>>2]=c[a+312+4>>2];c[a+132+8>>2]=c[a+312+8>>2];c[a+132+12>>2]=c[a+312+12>>2];c[a+148>>2]=c[a+328>>2];c[a+148+4>>2]=c[a+328+4>>2];c[a+148+8>>2]=c[a+328+8>>2];c[a+148+12>>2]=c[a+328+12>>2];c[k>>2]=c[b>>2];c[k+4>>2]=c[b+4>>2];c[k+8>>2]=c[b+8>>2];c[k+12>>2]=c[b+12>>2];c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];c[f+12>>2]=c[h+12>>2];c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];w=+g[a+4>>2];q=+g[a+396>>2];v=+g[a+8>>2];o=+g[a+400>>2];u=+g[a+12>>2];m=+g[a+404>>2];t=+g[a+20>>2];s=+g[a+24>>2];r=+g[a+28>>2];p=+g[a+36>>2];n=+g[a+40>>2];l=+g[a+44>>2];g[a+264>>2]=w*w*q+v*v*o+u*u*m;g[a+268>>2]=w*q*t+v*o*s+u*m*r;g[a+272>>2]=w*q*p+v*o*n+u*m*l;g[a+276>>2]=0.0;g[a+280>>2]=w*q*t+v*o*s+u*m*r;g[a+284>>2]=t*q*t+s*o*s+r*m*r;g[a+288>>2]=q*t*p+o*s*n+m*r*l;g[a+292>>2]=0.0;g[a+296>>2]=w*q*p+v*o*n+u*m*l;g[a+300>>2]=t*q*p+s*o*n+r*m*l;g[a+304>>2]=p*q*p+n*o*n+l*m*l;g[a+308>>2]=0.0;return}function Fe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;if(!(c[a>>2]|0)){c[a>>2]=d;c[d+32>>2]=0;return}f=c[b+40>>2]|0;if(!f)q=b;else{e=+g[d>>2]+ +g[d+16>>2];h=+g[d+4>>2]+ +g[d+20>>2];k=+g[d+8>>2]+ +g[d+24>>2];do{t=c[b+36>>2]|0;l=+F(+(e-(+g[t>>2]+ +g[t+16>>2])))+ +F(+(h-(+g[t+4>>2]+ +g[t+20>>2])))+ +F(+(k-(+g[t+8>>2]+ +g[t+24>>2])));b=c[b+36+((!(l<+F(+(e-(+g[f>>2]+ +g[f+16>>2])))+ +F(+(h-(+g[f+4>>2]+ +g[f+20>>2])))+ +F(+(k-(+g[f+8>>2]+ +g[f+24>>2]))))&1)<<2)>>2]|0;f=c[b+40>>2]|0;}while((f|0)!=0);q=b;}s=q+32|0;t=c[s>>2]|0;b=c[a+4>>2]|0;if(!b){c[6436]=(c[6436]|0)+1;b=ic(63)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}f=b;i=f+44|0;do{c[f>>2]=0;f=f+4|0;}while((f|0)<(i|0))}else c[a+4>>2]=0;c[b+32>>2]=t;c[b+36>>2]=0;n=b+40|0;c[n>>2]=0;o=q+16|0;f=c[(+g[d>>2]<+g[q>>2]?d:q)>>2]|0;c[b>>2]=f;i=c[(+g[d+16>>2]>+g[q+16>>2]?d+16|0:o)>>2]|0;c[b+16>>2]=i;r=c[(+g[d+4>>2]<+g[q+4>>2]?d:q)+4>>2]|0;c[b+4>>2]=r;m=c[(+g[d+20>>2]>+g[q+20>>2]?d+16|0:o)+4>>2]|0;c[b+20>>2]=m;p=c[(+g[d+8>>2]<+g[q+8>>2]?d:q)+8>>2]|0;c[b+8>>2]=p;o=c[(+g[d+24>>2]>+g[q+24>>2]?d+16|0:o)+8>>2]|0;c[b+24>>2]=o;if(!t){c[b+36>>2]=q;c[s>>2]=b;c[n>>2]=d;c[d+32>>2]=b;c[a>>2]=b;return}c[t+36+(((c[(c[s>>2]|0)+40>>2]|0)==(q|0)&1)<<2)>>2]=b;c[b+36>>2]=q;c[s>>2]=b;c[n>>2]=d;c[d+32>>2]=b;b=p;n=r;while(1){u=(c[j>>2]=f,+g[j>>2]);l=(c[j>>2]=b,+g[j>>2]);k=(c[j>>2]=i,+g[j>>2]);h=(c[j>>2]=m,+g[j>>2]);e=(c[j>>2]=o,+g[j>>2]);if(+g[t>>2]<=u){b=t+4|0;if((((+g[b>>2]<=(c[j>>2]=n,+g[j>>2])?+g[t+8>>2]<=l:0)?+g[t+16>>2]>=k:0)?+g[t+20>>2]>=h:0)?+g[t+24>>2]>=e:0){b=22;break}}else b=t+4|0;d=c[t+36>>2]|0;o=c[t+40>>2]|0;f=c[(+g[d>>2]<+g[o>>2]?d:o)>>2]|0;c[t>>2]=f;i=c[(+g[d+16>>2]>+g[o+16>>2]?d+16|0:o+16|0)>>2]|0;c[t+16>>2]=i;n=c[(+g[d+4>>2]<+g[o+4>>2]?d:o)+4>>2]|0;c[b>>2]=n;m=c[(+g[d+20>>2]>+g[o+20>>2]?d+16|0:o+16|0)+4>>2]|0;c[t+20>>2]=m;b=c[(+g[d+8>>2]<+g[o+8>>2]?d:o)+8>>2]|0;c[t+8>>2]=b;o=c[(+g[d+24>>2]>+g[o+24>>2]?d+16|0:o+16|0)+8>>2]|0;c[t+24>>2]=o;t=c[t+32>>2]|0;if(!t){b=22;break}}if((b|0)==22)return}function Ge(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;h=l;l=l+160|0;e=c[a+4>>2]|0;f=c[e+12>>2]|0;D=+g[f>>2];C=+g[f+4>>2];B=+g[f+8>>2];A=+g[f+16>>2];z=+g[f+20>>2];y=+g[f+24>>2];r=+g[f+32>>2];p=+g[f+36>>2];n=+g[f+40>>2];e=c[(c[e+4>>2]|0)+24>>2]|0;x=+g[e+(d*80|0)>>2];w=+g[e+(d*80|0)+16>>2];v=+g[e+(d*80|0)+32>>2];u=+g[e+(d*80|0)+4>>2];t=+g[e+(d*80|0)+20>>2];s=+g[e+(d*80|0)+36>>2];q=+g[e+(d*80|0)+8>>2];o=+g[e+(d*80|0)+24>>2];m=+g[e+(d*80|0)+40>>2];F=+g[e+(d*80|0)+48>>2];E=+g[e+(d*80|0)+52>>2];i=+g[e+(d*80|0)+56>>2];k=+g[f+48>>2]+(D*F+C*E+B*i);j=+g[f+52>>2]+(A*F+z*E+y*i);i=+g[f+56>>2]+(r*F+p*E+n*i);g[h+88>>2]=D*x+C*w+B*v;g[h+88+4>>2]=D*u+C*t+B*s;g[h+88+8>>2]=D*q+C*o+B*m;g[h+88+12>>2]=0.0;g[h+88+16>>2]=A*x+z*w+y*v;g[h+88+20>>2]=A*u+z*t+y*s;g[h+88+24>>2]=A*q+z*o+y*m;g[h+88+28>>2]=0.0;g[h+88+32>>2]=r*x+p*w+n*v;g[h+88+36>>2]=r*u+p*t+n*s;g[h+88+40>>2]=r*q+p*o+n*m;g[h+88+44>>2]=0.0;g[h+88+48>>2]=k;g[h+88+52>>2]=j;g[h+88+56>>2]=i;g[h+88+60>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,h+88|0,h+72|0,h+56|0);f=c[a+8>>2]|0;e=c[f+4>>2]|0;Zb[c[(c[e>>2]|0)+8>>2]&127](e,c[f+12>>2]|0,h+40|0,h+24|0);if(!(+g[h+72>>2]>+g[h+24>>2])?!(+g[h+56>>2]<+g[h+40>>2]):0)e=1;else e=0;if(!(!(+g[h+72+8>>2]>+g[h+24+8>>2])?!(+g[h+56+8>>2]<+g[h+40+8>>2]):0))e=0;if(+g[h+72+4>>2]>+g[h+24+4>>2]){l=h;return}if(+g[h+56+4>>2]<+g[h+40+4>>2]|e^1){l=h;return}e=c[a+4>>2]|0;f=c[e+8>>2]|0;c[h>>2]=e;c[h+4>>2]=b;c[h+8>>2]=f;c[h+12>>2]=h+88;c[h+16>>2]=-1;c[h+20>>2]=d;if(!(c[(c[a+24>>2]|0)+(d<<2)>>2]|0)){f=c[a+12>>2]|0;f=tb[c[(c[f>>2]|0)+8>>2]&31](f,h,c[a+8>>2]|0,c[a+28>>2]|0)|0;c[(c[a+24>>2]|0)+(d<<2)>>2]=f;f=c[a+4>>2]|0;}else f=e;b=c[a+20>>2]|0;e=c[b+8>>2]|0;if((c[e+8>>2]|0)==(c[f+8>>2]|0)){c[b+8>>2]=h;Vb[c[(c[b>>2]|0)+8>>2]&127](b,-1,d);}else{e=c[b+12>>2]|0;c[b+12>>2]=h;Vb[c[(c[b>>2]|0)+12>>2]&127](b,-1,d);}d=c[(c[a+24>>2]|0)+(d<<2)>>2]|0;jb[c[(c[d>>2]|0)+8>>2]&31](d,h,c[a+8>>2]|0,c[a+16>>2]|0,c[a+20>>2]|0);d=c[a+20>>2]|0;c[((c[(c[d+8>>2]|0)+8>>2]|0)==(c[(c[a+4>>2]|0)+8>>2]|0)?d+8|0:d+12|0)>>2]=e;l=h;return}function He(){if(a[22704]|0)return;if(!(iy(22704)|0))return;c[6169]=0;c[6170]=-2147483648;c[6171]=-1082130432;g[6172]=0.0;c[6173]=1060716128;c[6174]=-1090087446;c[6175]=-1092290076;g[6176]=0.0;c[6177]=-1098022214;c[6178]=-1084636126;c[6179]=-1092290076;g[6180]=0.0;c[6181]=-1083901670;c[6182]=-2147483648;c[6183]=-1092290177;g[6184]=0.0;c[6185]=-1098022214;c[6186]=1062847522;c[6187]=-1092290043;g[6188]=0.0;c[6189]=1060716128;c[6190]=1057396202;c[6191]=-1092290076;g[6192]=0.0;c[6193]=1049461434;c[6194]=-1084636126;c[6195]=1055193605;g[6196]=0.0;c[6197]=-1086767520;c[6198]=-1090087446;c[6199]=1055193572;g[6200]=0.0;c[6201]=-1086767520;c[6202]=1057396202;c[6203]=1055193572;g[6204]=0.0;c[6205]=1049461434;c[6206]=1062847522;c[6207]=1055193572;g[6208]=0.0;c[6209]=1063581978;c[6210]=0;c[6211]=1055193471;g[6212]=0.0;c[6213]=-2147483648;c[6214]=0;c[6215]=1065353216;g[6216]=0.0;c[6217]=1054458864;c[6218]=-1096927567;c[6219]=-1084636042;g[6220]=0.0;c[6221]=-1104782626;c[6222]=-1090519208;c[6223]=-1084636042;g[6224]=0.0;c[6225]=1049007812;c[6226]=-1085334679;c[6227]=-1090087228;g[6228]=0.0;c[6229]=1054458864;c[6230]=1050556081;c[6231]=-1084636042;g[6232]=0.0;c[6233]=1062847505;c[6234]=-2147483648;c[6235]=-1090087262;g[6236]=0.0;c[6237]=-1090087362;c[6238]=-2147483648;c[6239]=-1084636076;g[6240]=0.0;c[6241]=-1087361736;c[6242]=-1090519141;c[6243]=-1090087262;g[6244]=0.0;c[6245]=-1104782626;c[6246]=1056964440;c[6247]=-1084636042;g[6248]=0.0;c[6249]=-1087361736;c[6250]=1056964507;c[6251]=-1090087262;g[6252]=0.0;c[6253]=1049007812;c[6254]=1062148969;c[6255]=-1090087228;g[6256]=0.0;c[6257]=1064532105;c[6258]=1050556148;c[6259]=0;g[6260]=0.0;c[6261]=1064532105;c[6262]=-1096927500;c[6263]=0;g[6264]=0.0;c[6265]=1058437413;c[6266]=-1085334595;c[6267]=0;g[6268]=0.0;c[6269]=0;c[6270]=-1082130432;c[6271]=0;g[6272]=0.0;c[6273]=-1089046235;c[6274]=-1085334595;c[6275]=0;g[6276]=0.0;c[6277]=-1082951543;c[6278]=-1096927500;c[6279]=-2147483648;g[6280]=0.0;c[6281]=-1082951543;c[6282]=1050556148;c[6283]=-2147483648;g[6284]=0.0;c[6285]=-1089046235;c[6286]=1062149053;c[6287]=-2147483648;g[6288]=0.0;c[6289]=-2147483648;c[6290]=1065353216;c[6291]=-2147483648;g[6292]=0.0;c[6293]=1058437413;c[6294]=1062149053;c[6295]=-2147483648;g[6296]=0.0;c[6297]=1060121912;c[6298]=-1090519141;c[6299]=1057396386;g[6300]=0.0;c[6301]=-1098475836;c[6302]=-1085334679;c[6303]=1057396420;g[6304]=0.0;c[6305]=-1084636143;c[6306]=0;c[6307]=1057396386;g[6308]=0.0;c[6309]=-1098475836;c[6310]=1062148969;c[6311]=1057396420;g[6312]=0.0;c[6313]=1060121912;c[6314]=1056964507;c[6315]=1057396386;g[6316]=0.0;c[6317]=1057396286;c[6318]=0;c[6319]=1062847572;g[6320]=0.0;c[6321]=1042701022;c[6322]=-1090519208;c[6323]=1062847606;g[6324]=0.0;c[6325]=-1093024784;c[6326]=-1096927567;c[6327]=1062847606;g[6328]=0.0;c[6329]=-1093024784;c[6330]=1050556081;c[6331]=1062847606;g[6332]=0.0;c[6333]=1042701022;c[6334]=1056964440;c[6335]=1062847606;g[6336]=0.0;return}function Ie(a,b,d,e,f,h,i,j){a=a|0;b=b|0;d=d|0;e=+e;f=+f;h=+h;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,V=0;V=l;l=l+32|0;z=+g[d>>2];B=+g[d+4>>2];A=+g[d+8>>2];v=+g[i>>2];t=+g[i+4>>2];r=+g[i+8>>2];q=+g[j>>2];s=+g[j+4>>2];u=+g[j+8>>2];K=1.0/+G(+((e-z)*(e-z)+(f-B)*(f-B)+(h-A)*(h-A)));L=(e-z)*K==0.0?999999984306749440.0:1.0/((e-z)*K);M=(f-B)*K==0.0?999999984306749440.0:1.0/((f-B)*K);N=(h-A)*K==0.0?999999984306749440.0:1.0/((h-A)*K);O=(z>e?e:z)+v;P=(B>f?f:B)+t;Q=(A>h?h:A)+r;R=(z<e?e:z)+q;S=(B<f?f:B)+s;T=(A<h?h:A)+u;o=c[a+56>>2]|0;a:do if((o|0)>0){x=c[a+96>>2]|0;k=0;w=0;while(1){k=k+1|0;c[V>>2]=c[x>>2];c[V+4>>2]=c[x+4>>2];c[V+8>>2]=c[x+8>>2];c[V+12>>2]=c[x+12>>2];p=x+16|0;c[V+16>>2]=c[p>>2];c[V+16+4>>2]=c[p+4>>2];c[V+16+8>>2]=c[p+8>>2];c[V+16+12>>2]=c[p+12>>2];g[V>>2]=+g[V>>2]-q;g[V+4>>2]=+g[V+4>>2]-s;g[V+8>>2]=+g[V+8>>2]-u;g[V+16>>2]=+g[V+16>>2]-v;g[V+20>>2]=+g[V+20>>2]-t;g[V+24>>2]=+g[V+24>>2]-r;if(!(O>+g[p>>2])?!(R<+g[x>>2]):0)m=1;else m=0;if(!(!(Q>+g[x+24>>2])?!(T<+g[x+8>>2]):0))m=0;if(((!(P>+g[x+20>>2])?!(S<+g[x+4>>2]|m^1):0)?(D=+g[d>>2],C=L*(+g[V+((L<0.0&1)<<4)>>2]-D),D=L*(+g[V+((L<0.0^1)<<4)>>2]-D),F=+g[d+4>>2],E=M*(+g[V+((M<0.0&1)<<4)+4>>2]-F),F=M*(+g[V+((M<0.0^1)<<4)+4>>2]-F),!(E>D|C>F)):0)?(H=E>C?E:C,y=F<D?F:D,J=+g[d+8>>2],I=N*(+g[V+((N<0.0&1)<<4)+8>>2]-J),J=N*(+g[V+((N<0.0^1)<<4)+8>>2]-J),!(I>y|H>J)):0){m=(J<y?J:y)>0.0?(I>H?I:H)<(h-A)*(h-A)*K+((e-z)*(e-z)*K+(f-B)*(f-B)*K):0;n=c[x+32>>2]|0;if(m&(n|0)==-1){Vb[c[(c[b>>2]|0)+8>>2]&127](b,c[x+36>>2]|0,c[x+40>>2]|0);n=1;o=c[a+56>>2]|0;}else{p=(n|0)==-1;U=16;}}else{n=c[x+32>>2]|0;m=0;p=(n|0)==-1;U=16;}if((U|0)==16){U=0;n=p|m?1:n;}m=n+w|0;if((m|0)>=(o|0))break a;x=x+(n<<6)|0;w=m;q=+g[j>>2];s=+g[j+4>>2];u=+g[j+8>>2];v=+g[i>>2];t=+g[i+4>>2];r=+g[i+8>>2];}}else k=0;while(0);if((c[6168]|0)>=(k|0)){l=V;return}c[6168]=k;l=V;return}function Je(a,b,d,e,f,h){a=a|0;b=b|0;d=+d;e=+e;f=+f;h=h|0;var i=0,j=0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0;a:while(1){if((b|0)>0){i=-1;j=0;do{do if(c[h+(j<<2)>>2]|0){if((i|0)!=-1?!(+g[a+(j<<4)>>2]*d+ +g[a+(j<<4)+4>>2]*e+ +g[a+(j<<4)+8>>2]*f>+g[a+(i<<4)>>2]*d+ +g[a+(i<<4)+4>>2]*e+ +g[a+(i<<4)+8>>2]*f):0)break;i=j;}while(0);j=j+1|0;}while((j|0)!=(b|0))}else i=-1;A=h+(i<<2)|0;if((c[A>>2]|0)==3){B=36;break}k=+G(+((e-f*0.0)*(e-f*0.0)+(f*0.0-d)*(f*0.0-d)+(d*0.0-e*0.0)*(d*0.0-e*0.0)));l=+G(+((d-e*0.0)*(d-e*0.0)+((e*0.0-f)*(e*0.0-f)+(f*0.0-d*0.0)*(f*0.0-d*0.0))));if(k>l){y=(d*0.0-e*0.0)*(1.0/k);z=(f*0.0-d)*(1.0/k);s=(e-f*0.0)*(1.0/k);}else{y=(d-e*0.0)*(1.0/l);z=(f*0.0-d*0.0)*(1.0/l);s=(e*0.0-f)*(1.0/l);}t=z*f-y*e;u=y*d-s*f;v=s*e-z*d;w=(i|0)==-1;r=0;j=-1;while(1){x=+(r|0);q=+J(+(x*.01745329238474369));o=+I(+(x*.01745329238474369));k=(s*q+t*o)*.02500000037252903+d;l=(z*q+u*o)*.02500000037252903+e;o=(y*q+v*o)*.02500000037252903+f;if((b|0)>0){m=-1;n=0;do{do if(c[h+(n<<2)>>2]|0){if((m|0)!=-1?!(k*+g[a+(n<<4)>>2]+l*+g[a+(n<<4)+4>>2]+o*+g[a+(n<<4)+8>>2]>k*+g[a+(m<<4)>>2]+l*+g[a+(m<<4)+4>>2]+o*+g[a+(m<<4)+8>>2]):0)break;m=n;}while(0);n=n+1|0;}while((n|0)!=(b|0))}else m=-1;if((j|0)==(i|0)&(m|0)==(i|0))break a;b:do if(!((j|0)==-1|(j|0)==(m|0))?x+-40.0<=x:0){if((b|0)>0)q=x+-40.0;else{k=x+-40.0;while(1){if((j|0)==(i|0)&w){i=-1;break a}k=k+5.0;if(!(k<=x))break b;else j=-1;}}while(1){o=q*.01745329238474369;C=+J(+o);o=+I(+o);k=(s*C+t*o)*.02500000037252903+d;l=(z*C+u*o)*.02500000037252903+e;o=(y*C+v*o)*.02500000037252903+f;n=-1;p=0;do{do if(c[h+(p<<2)>>2]|0){if((n|0)!=-1?!(k*+g[a+(p<<4)>>2]+l*+g[a+(p<<4)+4>>2]+o*+g[a+(p<<4)+8>>2]>k*+g[a+(n<<4)>>2]+l*+g[a+(n<<4)+4>>2]+o*+g[a+(n<<4)+8>>2]):0)break;n=p;}while(0);p=p+1|0;}while((p|0)!=(b|0));if((j|0)==(i|0)&(n|0)==(i|0))break a;q=q+5.0;if(!(q<=x))break;else j=n;}}while(0);r=r+45|0;if((r|0)>360)break;else j=m;}c[A>>2]=0;}if((B|0)==36)return i|0;c[h+(i<<2)>>2]=3;B=i;return B|0}function Ke(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0,n=0.0,o=0;o=c[a+192>>2]|0;n=+Db[c[(c[o>>2]|0)+48>>2]&15](o);o=c[a+712>>2]|0;if((o|0)>0){i=0;do{m=c[a+720>>2]|0;d=m+(i*104|0)+8|0;j=+g[b>>2]*+g[d>>2];g[d>>2]=j;d=m+(i*104|0)+12|0;k=+g[b+4>>2]*+g[d>>2];g[d>>2]=k;d=m+(i*104|0)+16|0;l=+g[b+8>>2]*+g[d>>2];g[d>>2]=l;d=m+(i*104|0)+24|0;g[d>>2]=+g[b>>2]*+g[d>>2];d=m+(i*104|0)+28|0;g[d>>2]=+g[b+4>>2]*+g[d>>2];d=m+(i*104|0)+32|0;g[d>>2]=+g[b+8>>2]*+g[d>>2];m=c[m+(i*104|0)+96>>2]|0;d=hg(a+928|0,m)|0;a:do if(d){h=c[a+936>>2]|0;if((h|0)<=-1){d=c[a+928>>2]|0;break}if(h){e=0;while(1){f=c[d+32>>2]|0;e=e+1|0;if(!f)break a;if((e|0)>=(h|0)){d=f;break}else d=f;}}}else d=0;while(0);g[m>>2]=j-n;g[m+4>>2]=k-n;g[m+8>>2]=l-n;g[m+12>>2]=0.0;g[m+16>>2]=n+j;g[m+20>>2]=n+k;g[m+24>>2]=n+l;g[m+28>>2]=0.0;Fe(a+928|0,d,m);i=i+1|0;}while((i|0)!=(o|0))}jg(a);d=c[a+928>>2]|0;if(d){o=c[a+192>>2]|0;k=+Db[c[(c[o>>2]|0)+48>>2]&15](o);n=+g[d+4>>2]-k;l=+g[d+8>>2]-k;g[a+892>>2]=+g[d>>2]-k;g[a+896>>2]=n;g[a+900>>2]=l;g[a+904>>2]=0.0;l=k+ +g[d+20>>2];n=k+ +g[d+24>>2];g[a+908>>2]=k+ +g[d+16>>2];g[a+912>>2]=l;g[a+916>>2]=n;g[a+920>>2]=0.0;d=c[a+188>>2]|0;if(d|0){o=c[a+684>>2]|0;m=c[o+32>>2]|0;jb[c[(c[m>>2]|0)+16>>2]&31](m,d,a+892|0,a+908|0,c[o+36>>2]|0);}}else{c[a+892>>2]=0;c[a+892+4>>2]=0;c[a+892+8>>2]=0;c[a+892+12>>2]=0;c[a+892+16>>2]=0;c[a+892+20>>2]=0;c[a+892+24>>2]=0;c[a+892+28>>2]=0;}e=c[a+732>>2]|0;if((e|0)<=0){Ff(a);return}f=c[a+740>>2]|0;d=0;do{m=c[f+(d*52|0)+8>>2]|0;o=c[f+(d*52|0)+12>>2]|0;k=+g[m+8>>2]-+g[o+8>>2];l=+g[m+12>>2]-+g[o+12>>2];n=+g[m+16>>2]-+g[o+16>>2];n=+G(+(k*k+l*l+n*n));g[f+(d*52|0)+16>>2]=n;g[f+(d*52|0)+28>>2]=n*n;d=d+1|0;}while((d|0)!=(e|0));d=0;do{g[f+(d*52|0)+24>>2]=(+g[(c[f+(d*52|0)+8>>2]|0)+88>>2]+ +g[(c[f+(d*52|0)+12>>2]|0)+88>>2])/+g[(c[f+(d*52|0)+4>>2]|0)+4>>2];d=d+1|0;}while((d|0)!=(e|0));Ff(a);return}function Le(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;c[a+556>>2]=c[b>>2];c[a+556+4>>2]=c[b+4>>2];c[a+556+8>>2]=c[b+8>>2];c[a+556+12>>2]=c[b+12>>2];k=+g[a+568>>2];l=+g[a+560>>2];i=+g[a+564>>2];j=+g[a+556>>2];d=-j-l*0.0-i*0.0;e=(i+k*0.0-j*0.0)*-i+(k*(k+l*0.0-i*0.0)+d*-j)-(k*0.0+j*0.0-l)*-l;f=(k*0.0+j*0.0-l)*-j+(k*(i+k*0.0-j*0.0)+d*-l)-(k+l*0.0-i*0.0)*-i;d=(k+l*0.0-i*0.0)*-l+(d*-i+k*(k*0.0+j*0.0-l))-(i+k*0.0-j*0.0)*-j;if(d*0.0+(f*0.0+e)<-.9999998807907104){h=1.0;d=-0.0;e=0.0;f=0.0;}else{s=+G(+((d*0.0+(f*0.0+e)+1.0)*2.0));h=(e*0.0-d)*(1.0/s);d=(d*0.0-f*0.0)*(1.0/s);e=(f-e*0.0)*(1.0/s);f=s*.5;}m=1.0/+G(+(d*d+h*h+e*e+f*f));o=d*m;n=h*m;p=e*m;m=f*m;r=1.0/+G(+((m*k-j*-o-l*-n-i*-p)*(m*k-j*-o-l*-n-i*-p)+((k*-p+m*i+l*-o-j*-n)*(k*-p+m*i+l*-o-j*-n)+((j*m+k*-o+i*-n-l*-p)*(j*m+k*-o+i*-n-l*-p)+(j*-p+(k*-n+m*l)-i*-o)*(j*-p+(k*-n+m*l)-i*-o)))));h=(j*m+k*-o+i*-n-l*-p)*r;s=r*(j*-p+(k*-n+m*l)-i*-o);f=r*(k*-p+m*i+l*-o-j*-n);r=r*(m*k-j*-o-l*-n-i*-p);e=+g[a+444>>2];if(e>=.05000000074505806?(q=+g[a+448>>2],q>=.05000000074505806):0){d=m<-1.0?-1.0:m;d=+L(+(d>1.0?1.0:d))*2.0;if(d>1.1920928955078125e-07){i=1.0/+G(+(p*p+(o*o+n*n)));if(+F(+(n*i))>1.1920928955078125e-07){k=o*i;j=n*i;l=p*i;e=+G(+((p*i*p*i/(n*i*n*i)+1.0)/(1.0/(q*q)+p*i*p*i/(n*i*n*i)/(e*e))));}else{k=o*i;j=n*i;l=p*i;}}else{k=0.0;j=0.0;l=0.0;e=0.0;}if(+F(+d)>1.1920928955078125e-07){if(!(d>e)){e=-e;if(d<e)d=e;}else d=e;m=d*.5;q=+J(+m)/+G(+(k*k+j*j+l*l));n=j*q;m=+I(+m);o=k*q;l=l*q;}else l=p;}else l=p;k=+g[a+452>>2];if(k>=.05000000074505806){d=r<-1.0?-1.0:r;d=+L(+(d>1.0?1.0:d))*2.0;if(d>3.1415927410125732){d=-r<-1.0?-1.0:-r;d=+L(+(d>1.0?1.0:d))*2.0;e=-h;i=-s;j=-f;}else{e=h;i=s;j=f;}if(d>1.1920928955078125e-07){q=1.0/+G(+(e*e+i*i+j*j));e=e*q;i=i*q;j=j*q;}if(+F(+d)>1.1920928955078125e-07){if(!(d>k)){if(d<-k)d=-k;}else d=k;s=d*.5;d=+J(+s)/+G(+(j*j+(i*i+e*e)));h=e*d;f=j*d;e=+I(+s);d=i*d;}else{e=r;d=s;}}else{e=r;d=s;}g[a+556>>2]=n*f+(m*h+o*e)-l*d;g[a+560>>2]=l*h+(m*d+n*e)-o*f;g[a+564>>2]=o*d+(m*f+l*e)-n*h;g[a+568>>2]=m*e-o*h-n*d-l*f;return}function Me(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0,B=0;j=l;l=l+192|0;i=c[(c[b+4>>2]|0)+740>>2]|0;h=c[(c[b+8>>2]|0)+8>>2]|0;z=+g[e>>2];n=+g[d>>2]*f+z;y=+g[e+4>>2];m=+g[d+4>>2]*f+y;o=+g[e+8>>2];k=+g[d+8>>2]*f+o;x=c[(c[b+12>>2]|0)+8>>2]|0;t=(i|0)!=(h|0)?x:i;x=(i|0)!=(h|0)?h:x;w=n-+g[t+52>>2];v=m-+g[t+56>>2];u=k-+g[t+60>>2];s=w*+g[t+8>>2]+v*+g[t+24>>2]+u*+g[t+40>>2];r=w*+g[t+12>>2]+v*+g[t+28>>2]+u*+g[t+44>>2];z=z-+g[x+52>>2];y=y-+g[x+56>>2];o=o-+g[x+60>>2];q=z*+g[x+4>>2]+y*+g[x+20>>2]+o*+g[x+36>>2];p=z*+g[x+8>>2]+y*+g[x+24>>2]+o*+g[x+40>>2];o=z*+g[x+12>>2]+y*+g[x+28>>2]+o*+g[x+44>>2];g[j>>2]=w*+g[t+4>>2]+v*+g[t+20>>2]+u*+g[t+36>>2];g[j+4>>2]=s;g[j+8>>2]=r;g[j+12>>2]=0.0;g[j+16>>2]=q;g[j+20>>2]=p;g[j+24>>2]=o;g[j+28>>2]=0.0;c[j+64>>2]=c[d>>2];c[j+64+4>>2]=c[d+4>>2];c[j+64+8>>2]=c[d+8>>2];c[j+64+12>>2]=c[d+12>>2];g[j+80>>2]=f;g[j+84>>2]=0.0;g[j+88>>2]=0.0;g[j+92>>2]=0.0;c[j+112>>2]=0;a[j+116>>0]=0;c[j+120>>2]=0;c[j+120+4>>2]=0;c[j+120+8>>2]=0;c[j+120+12>>2]=0;c[j+120+16>>2]=0;c[j+120+20>>2]=0;c[j+120+24>>2]=0;c[j+120+28>>2]=0;g[j+48>>2]=n;g[j+52>>2]=m;g[j+56>>2]=k;g[j+60>>2]=0.0;c[j+32>>2]=c[e>>2];c[j+32+4>>2]=c[e+4>>2];c[j+32+8>>2]=c[e+8>>2];c[j+32+12>>2]=c[e+12>>2];d=c[b+16>>2]|0;e=c[b+20>>2]|0;if((i|0)!=(h|0)){c[j+96>>2]=e;A=b+28|0;t=d;x=b+24|0;d=e;e=c[A>>2]|0;A=j+100|0;c[A>>2]=t;A=j+104|0;c[A>>2]=e;x=c[x>>2]|0;A=j+108|0;c[A>>2]=x;A=(i|0)!=(h|0)?b+12|0:b+8|0;A=c[A>>2]|0;i=(i|0)!=(h|0)?b+8|0:b+12|0;i=c[i>>2]|0;h=b+32|0;h=c[h>>2]|0;b=c[h>>2]|0;b=b+12|0;b=c[b>>2]|0;+vb[b&1](h,j,A,d,e,i,t,x);l=j;return}else{c[j+96>>2]=d;B=b+24|0;x=e;A=b+28|0;e=c[B>>2]|0;B=j+100|0;c[B>>2]=x;B=j+104|0;c[B>>2]=e;A=c[A>>2]|0;B=j+108|0;c[B>>2]=A;B=(i|0)!=(h|0)?b+12|0:b+8|0;B=c[B>>2]|0;t=(i|0)!=(h|0)?b+8|0:b+12|0;t=c[t>>2]|0;i=b+32|0;i=c[i>>2]|0;h=c[i>>2]|0;h=h+12|0;h=c[h>>2]|0;+vb[h&1](i,j,B,d,e,t,x,A);l=j;return}}function Ne(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=l;l=l+48|0;c[b+8>>2]=0;g[b+12>>2]=0.0;c[b>>2]=7048;c[b+48>>2]=d;c[b+4>>2]=21;if(pb[c[(c[d>>2]|0)+40>>2]&127](d)|0)Vb[c[(c[d>>2]|0)+48>>2]&127](d,b+16|0,b+32|0);else{d=h+32+4|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;g[h+32>>2]=1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+32>>2]=+g[h+16>>2]+ +g[b+12>>2];g[h+32>>2]=-1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+16>>2]=+g[h+16>>2]-+g[b+12>>2];c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;g[d>>2]=1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+36>>2]=+g[h+16+4>>2]+ +g[b+12>>2];g[d>>2]=-1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+20>>2]=+g[h+16+4>>2]-+g[b+12>>2];c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;g[h+32+8>>2]=1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+40>>2]=+g[h+16+8>>2]+ +g[b+12>>2];g[h+32+8>>2]=-1.0;Vb[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+24>>2]=+g[h+16+8>>2]-+g[b+12>>2];}c[b>>2]=6896;c[b+52>>2]=0;c[b+56>>2]=0;a[b+60>>0]=e&1;a[b+61>>0]=0;c[b+4>>2]=21;if(!f){l=h;return}c[6436]=(c[6436]|0)+1;d=ic(191)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}c[d+52>>2]=282;a[d+60>>0]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;a[d+100>>0]=1;c[d+96>>2]=0;c[d+88>>2]=0;c[d+92>>2]=0;a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;a[d+140>>0]=1;c[d+136>>2]=0;c[d+128>>2]=0;c[d+132>>2]=0;c[d+144>>2]=0;a[d+164>>0]=1;c[d+160>>2]=0;c[d+152>>2]=0;c[d+156>>2]=0;c[d+168>>2]=0;c[d+4>>2]=-8388609;c[d+8>>2]=-8388609;c[d+12>>2]=-8388609;g[d+16>>2]=0.0;c[d+20>>2]=2139095039;c[d+24>>2]=2139095039;c[d+28>>2]=2139095039;g[d+32>>2]=0.0;c[d>>2]=8104;c[b+52>>2]=d;$c(d,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;l=h;return}function Oe(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!b)if(!e){if(f|0){c[f>>2]=(a>>>0)%(d>>>0);c[f+4>>2]=0;}e=0;f=(a>>>0)/(d>>>0)>>>0;return (D=e,f)|0}else{if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;e=0;f=0;return (D=e,f)|0}do if(d){if(e|0){h=(V(e|0)|0)-(V(b|0)|0)|0;if(h>>>0<=31){n=h+1|0;i=a>>>((h+1|0)>>>0)&h-31>>31|b<<31-h;m=b>>>((h+1|0)>>>0)&h-31>>31;g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (D=e,f)|0}if(d-1&d|0){h=(V(d|0)|0)+33-(V(b|0)|0)|0;n=h;i=32-h-1>>31&b>>>((h-32|0)>>>0)|(b<<32-h|a>>>(h>>>0))&h-32>>31;m=h-32>>31&b>>>(h>>>0);g=a<<64-h&32-h>>31;h=(b<<64-h|a>>>((h-32|0)>>>0))&32-h>>31|a<<32-h&h-33>>31;break}if(f|0){c[f>>2]=d-1&a;c[f+4>>2]=0;}if((d|0)==1){e=b|b&0;f=a|0|0;return (D=e,f)|0}else{f=Bp(d|0)|0;e=b>>>(f>>>0)|0;f=b<<32-f|a>>>(f>>>0)|0;return (D=e,f)|0}}else{if(!e){if(f|0){c[f>>2]=(b>>>0)%(d>>>0);c[f+4>>2]=0;}e=0;f=(b>>>0)/(d>>>0)>>>0;return (D=e,f)|0}if(!a){if(f|0){c[f>>2]=0;c[f+4>>2]=(b>>>0)%(e>>>0);}d=0;f=(b>>>0)/(e>>>0)>>>0;return (D=d,f)|0}if(!(e-1&e)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=e-1&b|b&0;}d=0;f=b>>>((Bp(e|0)|0)>>>0);return (D=d,f)|0}h=(V(e|0)|0)-(V(b|0)|0)|0;if(h>>>0<=30){n=h+1|0;i=b<<31-h|a>>>((h+1|0)>>>0);m=b>>>((h+1|0)>>>0);g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (D=e,f)|0}while(0);if(!n){j=h;b=m;a=0;h=0;}else{k=xv(d|0|0,e|e&0|0,-1,-1)|0;l=D;j=h;b=m;a=n;h=0;do{p=j;j=g>>>31|j<<1;g=h|g<<1;p=i<<1|p>>>31|0;o=i>>>31|b<<1|0;Wt(k|0,l|0,p|0,o|0)|0;n=D;m=n>>31|((n|0)<0?-1:0)<<1;h=m&1;i=Wt(p|0,o|0,m&(d|0)|0,(((n|0)<0?-1:0)>>31|((n|0)<0?-1:0)<<1)&(e|e&0)|0)|0;b=D;a=a-1|0;}while((a|0)!=0);a=0;}if(f|0){c[f>>2]=i;c[f+4>>2]=b;}o=(g|0)>>>31|j<<1|(0<<1|g>>>31)&0|a;p=(g<<1|0>>>31)&-2|h;return (D=o,p)|0}function Pe(b){b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0;p=l;l=l+16|0;aj(12203);k=c[b+204>>2]|0;Vb[c[(c[k>>2]|0)+8>>2]&127](k,b,c[b+24>>2]|0);k=c[b+308>>2]|0;if((k|0)>0){m=c[b+316>>2]|0;j=0;do{e=c[m+(j<<2)>>2]|0;d=c[e+740>>2]|0;e=c[e+744>>2]|0;if((d|0?(e|0?(c[d+204>>2]&3|0)==0:0):0)?(c[e+204>>2]&3|0)==0:0){h=c[d+208>>2]|0;d=c[e+208>>2]|0;i=c[(c[b+204>>2]|0)+16>>2]|0;e=c[i+(h<<3)>>2]|0;if((e|0)!=(h|0)){f=i+(h<<3)|0;do{h=i+(e<<3)|0;c[f>>2]=c[h>>2];h=c[h>>2]|0;f=i+(h<<3)|0;e=c[f>>2]|0;}while((h|0)!=(e|0))}e=c[i+(d<<3)>>2]|0;if((e|0)!=(d|0)){f=i+(d<<3)|0;do{d=i+(e<<3)|0;c[f>>2]=c[d>>2];d=c[d>>2]|0;f=i+(d<<3)|0;e=c[f>>2]|0;}while((d|0)!=(e|0))}if((h|0)!=(d|0)){c[i+(h<<3)>>2]=d;f=i+(d<<3)+4|0;c[f>>2]=(c[f>>2]|0)+(c[i+(h<<3)+4>>2]|0);}}j=j+1|0;}while((j|0)!=(k|0))}m=c[b+212>>2]|0;if((m|0)>0){k=c[b+220>>2]|0;j=0;do{d=c[k+(j<<2)>>2]|0;if((a[d+20>>0]|0?(n=c[d+28>>2]|0,(c[n+204>>2]&3|0)==0):0)?(o=c[d+32>>2]|0,(c[o+204>>2]&3|0)==0):0){e=c[n+208>>2]|0;d=c[o+208>>2]|0;i=c[(c[b+204>>2]|0)+16>>2]|0;f=c[i+(e<<3)>>2]|0;if((f|0)==(e|0))h=e;else{h=i+(e<<3)|0;do{e=i+(f<<3)|0;c[h>>2]=c[e>>2];e=c[e>>2]|0;h=i+(e<<3)|0;f=c[h>>2]|0;}while((e|0)!=(f|0));h=e;}e=c[i+(d<<3)>>2]|0;if((e|0)!=(d|0)){f=i+(d<<3)|0;do{d=i+(e<<3)|0;c[f>>2]=c[d>>2];d=c[d>>2]|0;f=i+(d<<3)|0;e=c[f>>2]|0;}while((d|0)!=(e|0))}if((h|0)!=(d|0)){c[i+(h<<3)>>2]=d;f=i+(d<<3)+4|0;c[f>>2]=(c[f>>2]|0)+(c[i+(h<<3)+4>>2]|0);}}j=j+1|0;}while((j|0)!=(m|0))}d=c[b+204>>2]|0;nb[c[(c[d>>2]|0)+12>>2]&127](d,b);d=c[2388]|0;o=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=o;if(o|0){l=p;return}do if(c[d+4>>2]|0){Za(p|0,0)|0;o=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[p+4>>2]|0)-(c[o+4>>2]|0)+(((c[p>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=p;return}}while(0);c[2388]=c[d+20>>2];l=p;return}function Qe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;k=l;l=l+128|0;a=c[a+16>>2]|0;n=+g[a+892>>2];x=+g[a+896>>2];v=+g[a+900>>2];w=+g[a+908>>2];f=+g[a+912>>2];i=+g[a+916>>2];z=+g[b>>2];m=+g[b+4>>2];p=v*+g[b+8>>2];q=+g[b+16>>2];r=+g[b+20>>2];t=v*+g[b+24>>2];u=+g[b+32>>2];o=+g[b+36>>2];s=+g[b+40>>2];y=+g[b+48>>2];j=+g[b+52>>2];h=+g[b+56>>2];g[k>>2]=n*z+x*m+p+y;g[k+4>>2]=n*q+x*r+t+j;g[k+8>>2]=n*u+x*o+v*s+h;g[k+12>>2]=0.0;g[k+16>>2]=w*z+x*m+p+y;g[k+20>>2]=w*q+x*r+t+j;g[k+24>>2]=w*u+x*o+v*s+h;g[k+28>>2]=0.0;g[k+32>>2]=w*z+f*m+p+y;g[k+36>>2]=w*q+f*r+t+j;g[k+40>>2]=w*u+f*o+v*s+h;g[k+44>>2]=0.0;g[k+48>>2]=n*z+f*m+p+y;g[k+52>>2]=n*q+f*r+t+j;g[k+56>>2]=n*u+f*o+v*s+h;g[k+60>>2]=0.0;v=+g[b>>2];u=+g[b+4>>2];t=i*+g[b+8>>2];r=+g[b+16>>2];q=+g[b+20>>2];p=i*+g[b+24>>2];m=+g[b+32>>2];g[k+64>>2]=n*v+x*u+t+y;g[k+68>>2]=n*r+x*q+p+j;g[k+72>>2]=n*m+x*o+i*s+h;g[k+76>>2]=0.0;h=+g[b+36>>2];i=i*+g[b+40>>2];s=+g[b+48>>2];o=+g[b+52>>2];j=+g[b+56>>2];g[k+80>>2]=w*v+x*u+t+s;g[k+84>>2]=w*r+x*q+p+o;g[k+88>>2]=w*m+x*h+i+j;g[k+92>>2]=0.0;g[k+96>>2]=w*v+f*u+t+s;g[k+100>>2]=w*r+f*q+p+o;g[k+104>>2]=w*m+f*h+i+j;g[k+108>>2]=0.0;g[k+112>>2]=n*v+f*u+t+s;g[k+116>>2]=n*r+f*q+p+o;g[k+120>>2]=n*m+f*h+i+j;g[k+124>>2]=0.0;c[e>>2]=c[k>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];c[d>>2]=c[k>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2];c[d+12>>2]=c[k+12>>2];a=1;do{f=+g[k+(a<<4)>>2];if(f<+g[d>>2])g[d>>2]=f;h=+g[k+(a<<4)+4>>2];if(h<+g[d+4>>2])g[d+4>>2]=h;i=+g[k+(a<<4)+8>>2];if(i<+g[d+8>>2])g[d+8>>2]=i;j=+g[k+(a<<4)+12>>2];if(j<+g[d+12>>2])g[d+12>>2]=j;if(+g[e>>2]<f)g[e>>2]=f;if(+g[e+4>>2]<h)g[e+4>>2]=h;if(+g[e+8>>2]<i)g[e+8>>2]=i;if(+g[e+12>>2]<j)g[e+12>>2]=j;a=a+1|0;}while((a|0)!=8);l=k;return}function Re(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;j=l;l=l+64|0;k=(a[b+8>>0]|0)!=0;i=k?e:d;d=k?d:e;e=c[d+4>>2]|0;if(((c[e+4>>2]|0)+-21|0)>>>0>=9){l=j;return}if((c[(c[i+4>>2]|0)+4>>2]|0)>=20){l=j;return}m=+Db[c[(c[e>>2]|0)+48>>2]&15](e);c[h+4>>2]=c[b+76>>2];c[b+16>>2]=i;c[b+20>>2]=d;c[b+64>>2]=f;g[b+68>>2]=m;c[b+56>>2]=h;k=c[d+12>>2]|0;B=+g[k>>2];A=+g[k+16>>2];z=+g[k+32>>2];y=+g[k+4>>2];x=+g[k+20>>2];w=+g[k+36>>2];s=+g[k+8>>2];q=+g[k+24>>2];o=+g[k+40>>2];v=-+g[k+48>>2];u=-+g[k+52>>2];t=-+g[k+56>>2];k=c[i+12>>2]|0;K=+g[k>>2];J=+g[k+16>>2];I=+g[k+32>>2];H=+g[k+4>>2];G=+g[k+20>>2];F=+g[k+36>>2];E=+g[k+8>>2];D=+g[k+24>>2];C=+g[k+40>>2];r=+g[k+48>>2];p=+g[k+52>>2];n=+g[k+56>>2];g[j>>2]=B*K+A*J+z*I;g[j+4>>2]=B*H+A*G+z*F;g[j+8>>2]=B*E+A*D+z*C;g[j+12>>2]=0.0;g[j+16>>2]=y*K+x*J+w*I;g[j+20>>2]=y*H+x*G+w*F;g[j+24>>2]=y*E+x*D+w*C;g[j+28>>2]=0.0;g[j+32>>2]=s*K+q*J+o*I;g[j+36>>2]=s*H+q*G+o*F;g[j+40>>2]=s*E+q*D+o*C;g[j+44>>2]=0.0;g[j+48>>2]=B*v+A*u+z*t+(B*r+A*p+z*n);g[j+52>>2]=y*v+x*u+w*t+(y*r+x*p+w*n);g[j+56>>2]=s*v+q*u+o*t+(s*r+q*p+o*n);g[j+60>>2]=0.0;k=c[(c[b+16>>2]|0)+4>>2]|0;Zb[c[(c[k>>2]|0)+8>>2]&127](k,j,b+24|0,b+40|0);g[b+40>>2]=+g[b+40>>2]+m;g[b+44>>2]=+g[b+44>>2]+m;g[b+48>>2]=+g[b+48>>2]+m;g[b+24>>2]=+g[b+24>>2]-m;g[b+28>>2]=+g[b+28>>2]-m;g[b+32>>2]=+g[b+32>>2]-m;k=c[b+76>>2]|0;f=c[d+8>>2]|0;c[k+740>>2]=c[i+8>>2];c[k+744>>2]=f;Zb[c[(c[e>>2]|0)+64>>2]&127](e,b+12|0,b+24|0,b+40|0);e=c[h+4>>2]|0;do if(c[e+748>>2]|0){f=c[e+740>>2]|0;i=c[(c[h+8>>2]|0)+8>>2]|0;d=c[(c[h+12>>2]|0)+8>>2]|0;if((f|0)==(i|0)){Ue(e,f+4|0,d+4|0);break}else{Ue(e,d+4|0,i+4|0);break}}while(0);c[b+16>>2]=0;c[b+20>>2]=0;l=j;return}function Se(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0,m=0,n=0,o=0,p=0.0,q=0;o=l;l=l+128|0;i=+g[b>>2];j=+g[b+16>>2];p=i<j?i:j;h=+g[b+32>>2];if((p<h?p:h)>+g[a+28>>2]){l=o;return}m=i>j?b:b+16|0;if(+g[(+g[m>>2]>h?m:b+32|0)>>2]<+g[a+12>>2]){l=o;return}h=+g[b+8>>2];i=+g[b+24>>2];p=h<i?h:i;j=+g[b+40>>2];if((p<j?p:j)>+g[a+36>>2]){l=o;return}m=h>i?b+8|0:b+24|0;if(+g[(+g[m>>2]>j?m:b+40|0)>>2]<+g[a+20>>2]){l=o;return}h=+g[b+4>>2];i=+g[b+20>>2];p=h<i?h:i;j=+g[b+36>>2];if((p<j?p:j)>+g[a+32>>2]){l=o;return}m=h>i?b+4|0:b+20|0;if(+g[(+g[m>>2]>j?m:b+36|0)>>2]<+g[a+16>>2]){l=o;return}f=c[a+4>>2]|0;if((c[(c[f+4>>2]|0)+4>>2]|0)>=20){l=o;return}m=c[a+48>>2]|0;c[o+24+8>>2]=0;c[o+24+12>>2]=1065353216;c[o+24+16>>2]=1065353216;c[o+24+20>>2]=1065353216;g[o+24+24>>2]=0.0;c[o+24+52>>2]=0;c[o+24>>2]=3844;c[o+24+4>>2]=1;c[o+24+56>>2]=c[b>>2];c[o+24+56+4>>2]=c[b+4>>2];c[o+24+56+8>>2]=c[b+8>>2];c[o+24+56+12>>2]=c[b+12>>2];c[o+24+72>>2]=c[b+16>>2];c[o+24+72+4>>2]=c[b+16+4>>2];c[o+24+72+8>>2]=c[b+16+8>>2];c[o+24+72+12>>2]=c[b+16+12>>2];c[o+24+88>>2]=c[b+32>>2];c[o+24+88+4>>2]=c[b+32+4>>2];c[o+24+88+8>>2]=c[b+32+8>>2];c[o+24+88+12>>2]=c[b+32+12>>2];c[o+24+44>>2]=c[a+56>>2];q=c[a+8>>2]|0;b=c[q+8>>2]|0;k=c[q+12>>2]|0;c[o>>2]=q;c[o+4>>2]=o+24;c[o+8>>2]=b;c[o+12>>2]=k;c[o+16>>2]=d;c[o+20>>2]=e;k=tb[c[(c[m>>2]|0)+8>>2]&31](m,f,o,c[a+64>>2]|0)|0;b=c[a+44>>2]|0;f=c[b+8>>2]|0;if((c[f+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0)){c[b+8>>2]=o;Vb[c[(c[b>>2]|0)+8>>2]&127](b,d,e);}else{f=c[b+12>>2]|0;c[b+12>>2]=o;Vb[c[(c[b>>2]|0)+12>>2]&127](b,d,e);}jb[c[(c[k>>2]|0)+8>>2]&31](k,c[a+4>>2]|0,o,c[a+52>>2]|0,c[a+44>>2]|0);q=c[a+44>>2]|0;c[((c[(c[q+8>>2]|0)+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0)?q+8|0:q+12|0)>>2]=f;lb[c[c[k>>2]>>2]&511](k);nb[c[(c[m>>2]|0)+60>>2]&127](m,k);c[o+24>>2]=7248;f=c[o+24+52>>2]|0;if(f|0?(lb[c[c[f>>2]>>2]&511](f),n=c[o+24+52>>2]|0,n|0):0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}l=o;return}function Te(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0;v=a[h+16>>0]&-16;a[h+16>>0]=v;w=+g[e>>2];x=+g[d>>2];n=+g[e+4>>2];o=+g[d+4>>2];p=+g[e+8>>2];q=+g[d+8>>2];r=+g[f>>2];s=+g[f+4>>2];t=+g[f+8>>2];l=+g[b>>2];m=+g[b+4>>2];i=+g[b+8>>2];y=(w-x)*(l-x)+(n-o)*(m-o)+(p-q)*(i-q);z=(r-x)*(l-x)+(s-o)*(m-o)+(t-q)*(i-q);do if(y<=0.0&z<=0.0){c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];a[h+16>>0]=v|1;j=0.0;k=0.0;i=1.0;}else{u=(w-x)*(l-w)+(n-o)*(m-n)+(p-q)*(i-p);k=(r-x)*(l-w)+(s-o)*(m-n)+(t-q)*(i-p);if(!(!(u>=0.0)|!(k<=u))){c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];a[h+16>>0]=v|2;j=0.0;k=1.0;i=0.0;break}if(u<=0.0&(y>=0.0?y*k-u*z<=0.0:0)){g[h>>2]=x+(w-x)*(y/(y-u));g[h+4>>2]=o+(n-o)*(y/(y-u));g[h+8>>2]=q+(p-q)*(y/(y-u));g[h+12>>2]=0.0;a[h+16>>0]=v|3;j=0.0;k=y/(y-u);i=1.0-y/(y-u);break}j=(w-x)*(l-r)+(n-o)*(m-s)+(p-q)*(i-t);i=(r-x)*(l-r)+(s-o)*(m-s)+(t-q)*(i-t);if(!(!(i>=0.0)|!(j<=i))){c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];a[h+16>>0]=v|4;j=1.0;k=0.0;i=0.0;break}if(i<=0.0&(z>=0.0?j*z-y*i<=0.0:0)){g[h>>2]=x+(r-x)*(z/(z-i));g[h+4>>2]=o+(s-o)*(z/(z-i));g[h+8>>2]=q+(t-q)*(z/(z-i));g[h+12>>2]=0.0;a[h+16>>0]=v|5;j=z/(z-i);k=0.0;i=1.0-z/(z-i);break}if((u*i-j*k<=0.0?k-u>=0.0:0)?j-i>=0.0:0){k=(k-u)/(k-u+(j-i));g[h>>2]=w+(r-w)*k;g[h+4>>2]=n+(s-n)*k;g[h+8>>2]=p+(t-p)*k;g[h+12>>2]=0.0;a[h+16>>0]=v|6;j=k;k=1.0-k;i=0.0;break}l=1.0/(y*k-u*z+(u*i-j*k+(j*z-y*i)));m=(j*z-y*i)*l;i=(y*k-u*z)*l;g[h>>2]=(r-x)*i+((w-x)*m+x);g[h+4>>2]=(s-o)*i+((n-o)*m+o);g[h+8>>2]=(t-q)*i+((p-q)*m+q);g[h+12>>2]=0.0;a[h+16>>0]=v|7;j=i;k=m;i=1.0-m-i;}while(0);g[h+20>>2]=i;g[h+24>>2]=k;g[h+28>>2]=j;g[h+32>>2]=0.0;return}function Ue(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;f=c[b+748>>2]|0;if((f|0)<=0)return;do{k=f;f=f+-1|0;q=+g[b+4+(f*184|0)>>2];r=+g[b+4+(f*184|0)+4>>2];h=+g[b+4+(f*184|0)+8>>2];p=q*+g[d>>2]+r*+g[d+4>>2]+h*+g[d+8>>2]+ +g[d+48>>2];n=q*+g[d+16>>2]+r*+g[d+20>>2]+h*+g[d+24>>2]+ +g[d+52>>2];h=q*+g[d+32>>2]+r*+g[d+36>>2]+h*+g[d+40>>2]+ +g[d+56>>2];g[b+4+(f*184|0)+48>>2]=p;g[b+4+(f*184|0)+52>>2]=n;g[b+4+(f*184|0)+56>>2]=h;g[b+4+(f*184|0)+60>>2]=0.0;r=+g[b+4+(f*184|0)+16>>2];q=+g[b+4+(f*184|0)+20>>2];i=+g[b+4+(f*184|0)+24>>2];o=r*+g[e>>2]+q*+g[e+4>>2]+i*+g[e+8>>2]+ +g[e+48>>2];m=r*+g[e+16>>2]+q*+g[e+20>>2]+i*+g[e+24>>2]+ +g[e+52>>2];i=r*+g[e+32>>2]+q*+g[e+36>>2]+i*+g[e+40>>2]+ +g[e+56>>2];g[b+4+(f*184|0)+32>>2]=o;g[b+4+(f*184|0)+36>>2]=m;g[b+4+(f*184|0)+40>>2]=i;g[b+4+(f*184|0)+44>>2]=0.0;g[b+4+(f*184|0)+80>>2]=(p-o)*+g[b+4+(f*184|0)+64>>2]+(n-m)*+g[b+4+(f*184|0)+68>>2]+(h-i)*+g[b+4+(f*184|0)+72>>2];j=b+4+(f*184|0)+148|0;c[j>>2]=(c[j>>2]|0)+1;}while((k|0)>1);f=c[b+748>>2]|0;if((f|0)<=0)return;k=f;do{j=k;k=k+-1|0;e=b+4+(k*184|0)|0;h=+g[b+4+(k*184|0)+80>>2];i=+g[b+752>>2];if(!(h<=i)){d=f+-1|0;if((d|0)==(k|0))l=12;else{Vh(e|0,b+4+(d*184|0)|0,184)|0;c[b+4+(d*184|0)+112>>2]=0;g[b+4+(d*184|0)+120>>2]=0.0;a[b+4+(d*184|0)+116>>0]=0;g[b+4+(d*184|0)+124>>2]=0.0;g[b+4+(d*184|0)+128>>2]=0.0;c[b+4+(d*184|0)+148>>2]=0;f=c[b+748>>2]|0;l=12;}}else{p=+g[b+4+(k*184|0)+32>>2]-(+g[b+4+(k*184|0)+48>>2]-+g[b+4+(k*184|0)+64>>2]*h);q=+g[b+4+(k*184|0)+36>>2]-(+g[b+4+(k*184|0)+52>>2]-h*+g[b+4+(k*184|0)+68>>2]);r=+g[b+4+(k*184|0)+40>>2]-(+g[b+4+(k*184|0)+56>>2]-h*+g[b+4+(k*184|0)+72>>2]);if(p*p+q*q+r*r>i*i){d=f+-1|0;if((d|0)==(k|0))l=12;else{Vh(e|0,b+4+(d*184|0)|0,184)|0;c[b+4+(d*184|0)+112>>2]=0;g[b+4+(d*184|0)+120>>2]=0.0;a[b+4+(d*184|0)+116>>0]=0;g[b+4+(d*184|0)+124>>2]=0.0;g[b+4+(d*184|0)+128>>2]=0.0;c[b+4+(d*184|0)+148>>2]=0;f=c[b+748>>2]|0;l=12;}}}if((l|0)==12){l=0;f=f+-1|0;c[b+748>>2]=f;}}while((j|0)>1);return}function Ve(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;f=l;l=l+256|0;aj(11815);c[f+32>>2]=4188;k=f+32+36|0;c[k>>2]=c[b>>2];c[k+4>>2]=c[b+4>>2];c[k+8>>2]=c[b+8>>2];c[k+12>>2]=c[b+12>>2];m=f+32+52|0;c[m>>2]=c[d>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];c[f+32+212>>2]=a;c[f+32+216>>2]=e;c[f+32+68>>2]=1065353216;c[f+32+72>>2]=0;c[f+32+72+4>>2]=0;c[f+32+72+8>>2]=0;c[f+32+72+12>>2]=0;c[f+32+88>>2]=1065353216;c[f+32+92>>2]=0;c[f+32+92+4>>2]=0;c[f+32+92+8>>2]=0;c[f+32+92+12>>2]=0;c[f+32+108>>2]=1065353216;c[f+32+112>>2]=0;c[f+32+116>>2]=c[k>>2];c[f+32+116+4>>2]=c[k+4>>2];c[f+32+116+8>>2]=c[k+8>>2];c[f+32+116+12>>2]=c[k+12>>2];c[f+32+132>>2]=1065353216;c[f+32+136>>2]=0;c[f+32+136+4>>2]=0;c[f+32+136+8>>2]=0;c[f+32+136+12>>2]=0;c[f+32+152>>2]=1065353216;c[f+32+156>>2]=0;c[f+32+156+4>>2]=0;c[f+32+156+8>>2]=0;c[f+32+156+12>>2]=0;c[f+32+172>>2]=1065353216;c[f+32+176>>2]=0;c[f+32+180>>2]=c[d>>2];c[f+32+180+4>>2]=c[d+4>>2];c[f+32+180+8>>2]=c[d+8>>2];c[f+32+180+12>>2]=c[d+12>>2];n=+g[d>>2]-+g[b>>2];j=+g[d+4>>2]-+g[b+4>>2];i=+g[d+8>>2]-+g[b+8>>2];h=1.0/+G(+(n*n+j*j+i*i));q=n*h==0.0?1000000015047466219876688.0e6:1.0/(n*h);g[f+32+4>>2]=q;p=j*h==0.0?1000000015047466219876688.0e6:1.0/(j*h);g[f+32+8>>2]=p;o=i*h==0.0?1000000015047466219876688.0e6:1.0/(i*h);g[f+32+12>>2]=o;c[f+32+20>>2]=q<0.0&1;c[f+32+24>>2]=p<0.0&1;c[f+32+28>>2]=o<0.0&1;g[f+32+32>>2]=n*h*(+g[m>>2]-+g[k>>2])+j*h*(+g[f+32+56>>2]-+g[f+32+40>>2])+i*h*(+g[f+32+60>>2]-+g[f+32+44>>2]);a=c[a+68>>2]|0;e=c[(c[a>>2]|0)+24>>2]|0;c[f+16>>2]=0;c[f+16+4>>2]=0;c[f+16+8>>2]=0;c[f+16+12>>2]=0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Bb[e&7](a,b,d,f+32|0,f+16|0,f);a=c[2388]|0;e=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=e;if(e|0){l=f;return}do if(c[a+4>>2]|0){Za(f+32|0,0)|0;m=c[6435]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[f+32+4>>2]|0)-(c[m+4>>2]|0)+(((c[f+32>>2]|0)-(c[m>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2388]|0;break}else{l=f;return}}while(0);c[2388]=c[a+20>>2];l=f;return}function We(b,d){b=b|0;d=+d;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0;s=l;l=l+16|0;aj(12308);e=c[b+232>>2]|0;if((e|0)>0){r=0;do{q=c[(c[b+240>>2]|0)+(r<<2)>>2]|0;if(!(c[q+204>>2]&3)){n=+g[q+444>>2];f=+H(+(1.0-n),+d);i=f*+g[q+312>>2];g[q+312>>2]=i;h=f*+g[q+316>>2];g[q+316>>2]=h;f=f*+g[q+320>>2];g[q+320>>2]=f;p=+g[q+448>>2];m=+H(+(1.0-p),+d);j=m*+g[q+328>>2];g[q+328>>2]=j;k=m*+g[q+332>>2];g[q+332>>2]=k;m=m*+g[q+336>>2];g[q+336>>2]=m;do if(a[q+452>>0]|0){if(m*m+(j*j+k*k)<+g[q+464>>2]?i*i+h*h+f*f<+g[q+460>>2]:0){t=+g[q+456>>2];g[q+328>>2]=j*t;g[q+332>>2]=t*k;g[q+336>>2]=t*m;g[q+312>>2]=t*i;g[q+316>>2]=t*h;g[q+320>>2]=t*f;h=t*h;f=t*f;o=j*t;k=t*k;m=t*m;i=t*i;}else o=j;j=+G(+(i*i+h*h+f*f));do if(j<n)if(j>.004999999888241291){i=i-i*(1.0/j)*.004999999888241291;g[q+312>>2]=i;h=h-h*(1.0/j)*.004999999888241291;g[q+316>>2]=h;f=f-f*(1.0/j)*.004999999888241291;g[q+320>>2]=f;break}else{c[q+312>>2]=0;c[q+312+4>>2]=0;c[q+312+8>>2]=0;c[q+312+12>>2]=0;i=0.0;h=0.0;f=0.0;break}while(0);j=+G(+(o*o+k*k+m*m));if(j<p)if(j>.004999999888241291){g[q+328>>2]=o-o*(1.0/j)*.004999999888241291;g[q+332>>2]=k-k*(1.0/j)*.004999999888241291;g[q+336>>2]=m-m*(1.0/j)*.004999999888241291;break}else{c[q+328>>2]=0;c[q+328+4>>2]=0;c[q+328+8>>2]=0;c[q+328+12>>2]=0;break}}while(0);Gg(q+4|0,i,h,f,q+328|0,d,q+68|0);e=c[b+232>>2]|0;}r=r+1|0;}while((r|0)<(e|0))}e=c[2388]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){l=s;return}do if(c[e+4>>2]|0){Za(s|0,0)|0;b=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[s+4>>2]|0)-(c[b+4>>2]|0)+(((c[s>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2388]|0;break}else{l=s;return}}while(0);c[2388]=c[e+20>>2];l=s;return}function Xe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0;if(!a)return;p=+g[b>>2];q=+g[b+4>>2];r=+g[b+8>>2];s=+g[b+16>>2];t=+g[b+20>>2];o=+g[b+24>>2];c[6436]=(c[6436]|0)+1;b=ic(275)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;}c[b>>2]=a;a=64;n=1;f=b;i=b;h=b;e=b;j=b;while(1){k=n+-1|0;l=c[f+(k<<2)>>2]|0;do if(((((+g[l>>2]<=s?+g[l+16>>2]>=p:0)?+g[l+4>>2]<=t:0)?+g[l+20>>2]>=q:0)?+g[l+8>>2]<=o:0)?+g[l+24>>2]>=r:0){if(!(c[l+40>>2]|0)){nb[c[(c[d>>2]|0)+12>>2]&127](d,l);b=j;break}m=c[l+36>>2]|0;do if((k|0)==(a|0)?(u=a|0?a<<1:1,(n|0)<=(u|0)):0){if((u|0)!=0?(c[6436]=(c[6436]|0)+1,v=ic((u<<2|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;e=v+4+15&-16;}else e=0;if((n|0)>1){b=0;do{c[e+(b<<2)>>2]=c[f+(b<<2)>>2];b=b+1|0;}while((b|0)!=(a|0));if(!j){a=u;f=e;i=e;h=e;b=e;j=e;break}}else if((f|0)==0|(j|0)==0){a=u;f=e;i=e;h=e;b=e;j=e;break}c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);a=u;f=e;i=e;h=e;b=e;j=e;}else{b=j;j=e;}while(0);c[f+(k<<2)>>2]=m;k=c[l+40>>2]|0;do if((n|0)==(a|0)){a=n|0?n<<1:1;if((n|0)<(a|0)){if((a|0)!=0?(c[6436]=(c[6436]|0)+1,w=ic((a<<2|3)+16|0)|0,(w|0)!=0):0){c[(w+4+15&-16)+-4>>2]=w;e=w+4+15&-16;}else e=0;if((n|0)>0){b=0;do{c[e+(b<<2)>>2]=c[f+(b<<2)>>2];b=b+1|0;}while((b|0)!=(n|0));if(!j){f=e;i=e;h=e;j=e;b=e;break}}else if((f|0)==0|(j|0)==0){f=e;i=e;h=e;j=e;b=e;break}c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);f=e;i=e;h=e;j=e;b=e;}else a=n;}while(0);c[f+(n<<2)>>2]=k;k=n+1|0;e=j;}else b=j;while(0);if((k|0)>0){n=k;j=b;}else break}if((f|0)==0|(i|0)==0)return;c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);return}function Ye(b){b=b|0;var d=0,e=0;c[b>>2]=5348;if(a[b+20>>0]|0){d=c[b+16>>2]|0;e=c[d+16>>2]|0;if(e){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+16>>2]|0;}if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}}if(a[b+12>>0]|0){d=c[b+8>>2]|0;e=c[d+16>>2]|0;if(e){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+8>>2]|0;}if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}}d=c[b+32>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+32>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+36>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+36>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+40>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+40>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+44>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+44>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+48>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+48>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+52>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+52>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+56>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+56>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+60>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+60>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+76>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+76>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+80>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+80>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+72>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+72>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+88>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+88>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+84>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+84>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+24>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}d=c[b+28>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+28>>2]|0;if(!d)return;c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);return}function Ze(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;a:do if(!(JB(b,c[d+8>>2]|0)|0)){if(!(JB(b,c[d>>2]|0)|0)){i=c[b+12>>2]|0;Gn(b+16|0,d,e,f,g);if((i|0)<=1)break;h=c[b+8>>2]|0;if((h&2|0)==0?(c[d+36>>2]|0)!=1:0){if(!(h&1)){h=b+24|0;while(1){if(a[d+54>>0]|0)break a;if((c[d+36>>2]|0)==1)break a;Gn(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}else h=b+24|0;while(1){if(a[d+54>>0]|0)break a;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==1:0)break a;Gn(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}else h=b+24|0;while(1){if(a[d+54>>0]|0)break a;Gn(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4)break;j=b+16+(c[b+12>>2]<<3)|0;h=0;i=b+16|0;k=0;b:while(1){if(i>>>0>=j>>>0){f=18;break}a[d+52>>0]=0;a[d+53>>0]=0;pn(i,d,e,e,1,g);if(a[d+54>>0]|0){f=18;break}do if(a[d+53>>0]|0){if(!(a[d+52>>0]|0))if(!(c[b+8>>2]&1)){h=1;f=18;break b}else{h=1;f=k;break}if((c[d+24>>2]|0)==1){f=23;break b}if(!(c[b+8>>2]&2)){f=23;break b}else{h=1;f=1;}}else f=k;while(0);i=i+8|0;k=f;}do if((f|0)==18){if((!k?(c[d+20>>2]=e,c[d+40>>2]=(c[d+40>>2]|0)+1,(c[d+36>>2]|0)==1):0)?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(h){f=23;break}else{h=4;break}}if(h)f=23;else h=4;}while(0);if((f|0)==23)h=3;c[d+44>>2]=h;break}if((f|0)==1)c[d+32>>2]=1;}else ur(d,e,f);while(0);return}function _e(a,b,f){a=a|0;b=b|0;f=f|0;var i=0,j=0.0,k=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;t=l;l=l+32|0;n=c[a+4>>2]|0;Jb[c[(c[n>>2]|0)+16>>2]&3](n,t+28|0,t+24|0,t+20|0,t+16|0,t+12|0,t+8|0,t+4|0,t,b);n=(c[t+12>>2]|0)+(S(c[t+8>>2]|0,f)|0)|0;r=c[a+4>>2]|0;o=c[t>>2]|0;switch(o|0){case 3:{i=e[n+4>>1]|0;break}case 2:{i=c[n+8>>2]|0;break}default:i=d[n+2>>0]|0;}s=(c[t+20>>2]|0)==0;p=c[t+16>>2]|0;q=c[t+28>>2]|0;i=q+(S(p,i)|0)|0;if(s){k=+g[i+4>>2]*+g[r+8>>2];m=+g[i>>2]*+g[r+4>>2];j=+g[i+8>>2];}else{k=+h[i+8>>3]*+g[r+8>>2];m=+h[i>>3]*+g[r+4>>2];j=+h[i+16>>3];}j=j*+g[r+12>>2];g[a+44>>2]=m;g[a+48>>2]=k;g[a+52>>2]=j;g[a+56>>2]=0.0;switch(o|0){case 3:{i=e[n+2>>1]|0;break}case 2:{i=c[n+4>>2]|0;break}default:i=d[n+1>>0]|0;}i=q+(S(p,i)|0)|0;if(s){k=+g[i+4>>2]*+g[r+8>>2];m=+g[i>>2]*+g[r+4>>2];j=+g[i+8>>2];}else{k=+h[i+8>>3]*+g[r+8>>2];m=+h[i>>3]*+g[r+4>>2];j=+h[i+16>>3];}j=j*+g[r+12>>2];g[a+28>>2]=m;g[a+32>>2]=k;g[a+36>>2]=j;g[a+40>>2]=0.0;switch(o|0){case 3:{i=e[n>>1]|0;break}case 2:{i=c[n>>2]|0;break}default:i=d[n>>0]|0;}i=q+(S(p,i)|0)|0;if(s){k=+g[i+4>>2]*+g[r+8>>2];j=+g[i>>2]*+g[r+4>>2];u=+g[i+8>>2];m=+g[r+12>>2];m=u*m;r=a+12|0;g[r>>2]=j;r=a+16|0;g[r>>2]=k;r=a+20|0;g[r>>2]=m;r=a+24|0;g[r>>2]=0.0;r=a+8|0;r=c[r>>2]|0;q=c[r>>2]|0;q=q+8|0;q=c[q>>2]|0;s=a+12|0;Zb[q&127](r,s,b,f);s=c[a+4>>2]|0;r=c[s>>2]|0;r=r+24|0;r=c[r>>2]|0;nb[r&127](s,b);l=t;return}else{m=+h[i+8>>3]*+g[r+8>>2];k=+h[i>>3]*+g[r+4>>2];j=+h[i+16>>3];u=+g[r+12>>2];u=j*u;r=a+12|0;g[r>>2]=k;r=a+16|0;g[r>>2]=m;r=a+20|0;g[r>>2]=u;r=a+24|0;g[r>>2]=0.0;r=a+8|0;r=c[r>>2]|0;q=c[r>>2]|0;q=q+8|0;q=c[q>>2]|0;s=a+12|0;Zb[q&127](r,s,b,f);s=c[a+4>>2]|0;r=c[s>>2]|0;r=r+24|0;r=c[r>>2]|0;nb[r&127](s,b);l=t;return}}function $e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;c[b+16>>2]=c[a+4>>2];c[b+20>>2]=c[a+8>>2];c[b+24>>2]=c[a+12>>2];c[b+28>>2]=c[a+16>>2];c[b+32>>2]=c[a+20>>2];c[b+36>>2]=c[a+24>>2];c[b+40>>2]=c[a+28>>2];c[b+44>>2]=c[a+32>>2];c[b+48>>2]=c[a+36>>2];c[b+52>>2]=c[a+40>>2];c[b+56>>2]=c[a+44>>2];c[b+60>>2]=c[a+48>>2];c[b+64>>2]=c[a+52>>2];c[b+68>>2]=c[a+56>>2];c[b+72>>2]=c[a+60>>2];c[b+76>>2]=c[a+64>>2];c[b+80>>2]=c[a+68>>2];c[b+84>>2]=c[a+72>>2];c[b+88>>2]=c[a+76>>2];c[b+92>>2]=c[a+80>>2];c[b+96>>2]=c[a+84>>2];c[b+100>>2]=c[a+88>>2];c[b+104>>2]=c[a+92>>2];c[b+108>>2]=c[a+96>>2];c[b+112>>2]=c[a+100>>2];c[b+116>>2]=c[a+104>>2];c[b+120>>2]=c[a+108>>2];c[b+124>>2]=c[a+112>>2];c[b+128>>2]=c[a+116>>2];c[b+132>>2]=c[a+120>>2];c[b+136>>2]=c[a+124>>2];c[b+140>>2]=c[a+128>>2];c[b+144>>2]=c[a+132>>2];c[b+148>>2]=c[a+136>>2];c[b+152>>2]=c[a+140>>2];c[b+156>>2]=c[a+144>>2];c[b+160>>2]=c[a+148>>2];c[b+164>>2]=c[a+152>>2];c[b+168>>2]=c[a+156>>2];c[b+172>>2]=c[a+160>>2];c[b+176>>2]=c[a+164>>2];c[b+180>>2]=c[a+168>>2];c[b+184>>2]=c[a+172>>2];c[b+188>>2]=c[a+176>>2];c[b+224>>2]=c[a+180>>2];c[b+192>>2]=c[a+184>>2];c[b>>2]=0;c[b+4>>2]=Kb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+192>>2]|0)|0;c[b+8>>2]=0;c[b+228>>2]=c[a+204>>2];c[b+232>>2]=c[a+208>>2];c[b+236>>2]=c[a+212>>2];c[b+240>>2]=c[a+216>>2];c[b+196>>2]=c[a+220>>2];c[b+200>>2]=c[a+224>>2];c[b+204>>2]=c[a+232>>2];c[b+208>>2]=c[a+228>>2];c[b+244>>2]=c[a+236>>2];e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b+12>>2]=f;if(!f){f=a+244|0;f=c[f>>2]|0;d=b+212|0;c[d>>2]=f;d=a+248|0;d=c[d>>2]|0;f=b+216|0;c[f>>2]=d;f=a+252|0;f=c[f>>2]|0;d=b+220|0;c[d>>2]=f;d=a+256|0;d=c[d>>2]|0;f=b+248|0;c[f>>2]=d;return 13268}nb[c[(c[d>>2]|0)+48>>2]&127](d,e);f=a+244|0;f=c[f>>2]|0;d=b+212|0;c[d>>2]=f;d=a+248|0;d=c[d>>2]|0;f=b+216|0;c[f>>2]=d;f=a+252|0;f=c[f>>2]|0;d=b+220|0;c[d>>2]=f;d=a+256|0;d=c[d>>2]|0;f=b+248|0;c[f>>2]=d;return 13268}function af(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;d=c[a+748>>2]|0;if((d|0)!=4){c[a+748>>2]=d+1;x=d;w=(x|0)>0;x=w?x:0;a=a+4+(x*184|0)|0;Vh(a|0,b|0,184)|0;return x|0}y=+g[b+80>>2];v=+g[a+84>>2];u=v<y?v:y;t=+g[a+268>>2];s=t<u?t:u;r=+g[a+452>>2];w=+g[a+636>>2]<(r<s?r:s);d=w?3:r<s?2:t<u?1:(v<y^1)<<31>>31;y=+g[b>>2];if(d){e=+g[a+188>>2];f=+g[b+4>>2];h=+g[a+192>>2];k=+g[b+8>>2];m=+g[a+196>>2];l=+g[a+556>>2];t=+g[a+372>>2];r=+g[a+560>>2];o=+g[a+376>>2];s=+g[a+564>>2];j=+g[a+380>>2];i=((y-e)*(r-o)-(f-h)*(l-t))*((y-e)*(r-o)-(f-h)*(l-t))+(((f-h)*(s-j)-(k-m)*(r-o))*((f-h)*(s-j)-(k-m)*(r-o))+((k-m)*(l-t)-(y-e)*(s-j))*((k-m)*(l-t)-(y-e)*(s-j)));if((d|0)==1){n=+g[a+12>>2];u=k;v=e;q=l;p=h;h=0.0;k=+g[a+4>>2];l=+g[a+8>>2];x=7;}else{p=h;u=k;q=l;x=6;}}else{e=+g[a+188>>2];p=+g[a+192>>2];m=+g[a+196>>2];i=0.0;f=+g[b+4>>2];u=+g[b+8>>2];t=+g[a+372>>2];q=+g[a+556>>2];o=+g[a+376>>2];r=+g[a+560>>2];j=+g[a+380>>2];s=+g[a+564>>2];x=6;}if((x|0)==6){k=+g[a+4>>2];l=+g[a+8>>2];B=f-l;n=+g[a+12>>2];z=u-n;v=q-t;A=r-o;h=s-j;h=((y-k)*A-B*v)*((y-k)*A-B*v)+((B*h-z*A)*(B*h-z*A)+(z*v-(y-k)*h)*(z*v-(y-k)*h));if((d|0)==2){r=e;q=t;e=0.0;x=8;}else{v=e;x=7;}}if((x|0)==7){B=y-k;C=f-l;z=u-n;A=q-v;r=r-p;e=s-m;e=(B*r-C*A)*(B*r-C*A)+((C*e-z*r)*(C*e-z*r)+(z*A-B*e)*(z*A-B*e));if(w)f=0.0;else{r=v;q=t;x=8;}}if((x|0)==8){C=y-k;y=f-l;A=u-n;B=q-r;z=o-p;f=j-m;f=(C*z-y*B)*(C*z-y*B)+((y*f-A*z)*(y*f-A*z)+(A*B-C*f)*(A*B-C*f));}C=+F(+i);A=+F(+h);y=+F(+e);v=+F(+f);B=C>-999999984306749440.0?C:-999999984306749440.0;z=A>B?A:B;x=v>(y>z?y:z)?3:y>z?2:A>B?1:(C>-999999984306749440.0^1)<<31>>31;w=(x|0)>0;x=w?x:0;a=a+4+(x*184|0)|0;Vh(a|0,b|0,184)|0;return x|0}function bf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0;h=c[d+8>>2]|0;if((h|0)>0){i=c[d+16>>2]|0;f=0;e=0;do{j=c[i+(f<<2)>>2]|0;if(!(c[j+204>>2]&3)){c[j+208>>2]=e;e=e+1|0;}c[j+212>>2]=-1;g[j+244>>2]=1.0;f=f+1|0;}while((f|0)!=(h|0));j=e;}else j=0;i=c[b+8>>2]|0;if((i|0)<(j|0)){if((c[b+12>>2]|0)<(j|0)){if(!j){e=0;h=i;}else{c[6436]=(c[6436]|0)+1;e=ic((j<<3|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}h=c[b+8>>2]|0;}if((h|0)>0){f=0;do{m=(c[b+16>>2]|0)+(f<<3)|0;k=c[m+4>>2]|0;l=e+(f<<3)|0;c[l>>2]=c[m>>2];c[l+4>>2]=k;f=f+1|0;}while((f|0)!=(h|0))}f=c[b+16>>2]|0;if(f|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=e;c[b+12>>2]=j;f=b+16|0;}else f=b+16|0;e=i;do{m=(c[f>>2]|0)+(e<<3)|0;c[m>>2]=0;c[m+4>>2]=0;e=e+1|0;}while((e|0)!=(j|0))}c[b+8>>2]=j;if((j|0)>0){f=c[b+16>>2]|0;e=0;do{c[f+(e<<3)>>2]=e;c[f+(e<<3)+4>>2]=1;e=e+1|0;}while((e|0)!=(j|0))}e=c[d+68>>2]|0;e=pb[c[(c[e>>2]|0)+36>>2]&127](e)|0;l=pb[c[(c[e>>2]|0)+36>>2]&127](e)|0;if(!l)return;k=pb[c[(c[e>>2]|0)+20>>2]&127](e)|0;if((l|0)<=0)return;d=0;do{e=c[c[k+(d<<4)>>2]>>2]|0;f=c[c[k+(d<<4)+4>>2]>>2]|0;if((e|0?(f|0?(c[e+204>>2]&7|0)==0:0):0)?(c[f+204>>2]&7|0)==0:0){i=c[e+208>>2]|0;e=c[f+208>>2]|0;j=c[b+16>>2]|0;f=c[j+(i<<3)>>2]|0;if((f|0)!=(i|0)){h=j+(i<<3)|0;do{i=j+(f<<3)|0;c[h>>2]=c[i>>2];i=c[i>>2]|0;h=j+(i<<3)|0;f=c[h>>2]|0;}while((i|0)!=(f|0))}f=c[j+(e<<3)>>2]|0;if((f|0)!=(e|0)){h=j+(e<<3)|0;do{e=j+(f<<3)|0;c[h>>2]=c[e>>2];e=c[e>>2]|0;h=j+(e<<3)|0;f=c[h>>2]|0;}while((e|0)!=(f|0))}if((i|0)!=(e|0)){c[j+(i<<3)>>2]=e;m=j+(e<<3)+4|0;c[m>>2]=(c[m>>2]|0)+(c[j+(i<<3)+4>>2]|0);}}d=d+1|0;}while((d|0)!=(l|0));return}function cf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;q=c[b+9288>>2]|0;if(!q){c[b>>2]=5;q=0;return q|0}i=c[q+48>>2]|0;if(i|0)c[i+44>>2]=c[q+44>>2];i=c[q+44>>2]|0;if(i|0)c[i+48>>2]=c[q+48>>2];if((c[b+9288>>2]|0)==(q|0))c[b+9288>>2]=c[q+48>>2];c[b+9292>>2]=(c[b+9292>>2]|0)+-1;c[q+44>>2]=0;c[q+48>>2]=c[b+9280>>2];i=c[b+9280>>2]|0;if(i|0)c[i+44>>2]=q;c[b+9280>>2]=q;c[b+9284>>2]=(c[b+9284>>2]|0)+1;a[q+55>>0]=0;c[q+20>>2]=d;c[q+24>>2]=e;c[q+28>>2]=f;m=+g[d+16>>2];j=+g[e+16>>2]-m;n=+g[d+20>>2];k=+g[e+20>>2]-n;o=+g[d+24>>2];l=+g[e+24>>2]-o;m=+g[f+16>>2]-m;n=+g[f+20>>2]-n;o=+g[f+24>>2]-o;g[q>>2]=k*o-l*n;g[q+4>>2]=l*m-j*o;g[q+8>>2]=j*n-k*m;g[q+12>>2]=0.0;p=+G(+((k*o-l*n)*(k*o-l*n)+(l*m-j*o)*(l*m-j*o)+(j*n-k*m)*(j*n-k*m)));if(p>9.999999747378752e-05){if((!(Jk(k*o-l*n,l*m-j*o,j*n-k*m,+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],q+16|0)|0)?!(Jk(+g[q>>2],+g[q+4>>2],+g[q+8>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],q+16|0)|0):0)?!(Jk(+g[q>>2],+g[q+4>>2],+g[q+8>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],q+16|0)|0):0)g[q+16>>2]=(+g[d+16>>2]*+g[q>>2]+ +g[d+20>>2]*+g[q+4>>2]+ +g[d+24>>2]*+g[q+8>>2])/p;g[q>>2]=1.0/p*+g[q>>2];g[q+4>>2]=1.0/p*+g[q+4>>2];g[q+8>>2]=1.0/p*+g[q+8>>2];if(h)return q|0;if(!(+g[q+16>>2]>=-9.999999747378752e-06))i=3;else return q|0}else i=2;c[b>>2]=i;i=c[q+48>>2]|0;if(i|0)c[i+44>>2]=c[q+44>>2];i=c[q+44>>2]|0;if(i|0)c[i+48>>2]=c[q+48>>2];if((c[b+9280>>2]|0)==(q|0))c[b+9280>>2]=c[q+48>>2];c[b+9284>>2]=(c[b+9284>>2]|0)+-1;c[q+44>>2]=0;c[q+48>>2]=c[b+9288>>2];i=c[b+9288>>2]|0;if(i|0)c[i+44>>2]=q;c[b+9288>>2]=q;c[b+9292>>2]=(c[b+9292>>2]|0)+1;q=0;return q|0}function df(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;u=+g[b>>2];t=+g[b+4>>2];s=+g[b+8>>2];r=1.0/+G(+(u*u+t*t+s*s));y=+g[d>>2];x=+g[d+4>>2];w=+g[d+8>>2];v=1.0/+G(+(y*y+x*x+w*w));B=s*r*x*v-t*r*w*v;A=u*r*w*v-s*r*y*v;z=t*r*y*v-u*r*x*v;d=c[a+28>>2]|0;e=+g[d+4>>2];h=+g[d+20>>2];j=+g[d+36>>2];f=+g[d+8>>2];i=+g[d+24>>2];k=+g[d+40>>2];l=+g[d+12>>2];n=+g[d+28>>2];p=+g[d+44>>2];m=-+g[d+52>>2];o=-+g[d+56>>2];q=-+g[d+60>>2];g[a+48>>2]=z*j+(e*B+h*A);g[a+52>>2]=e*y*v+x*v*h+w*v*j;g[a+56>>2]=u*r*e+t*r*h+s*r*j;g[a+60>>2]=0.0;g[a+64>>2]=B*f+A*i+z*k;g[a+68>>2]=y*v*f+x*v*i+w*v*k;g[a+72>>2]=u*r*f+t*r*i+s*r*k;g[a+76>>2]=0.0;g[a+80>>2]=B*l+A*n+z*p;g[a+84>>2]=y*v*l+x*v*n+w*v*p;g[a+88>>2]=u*r*l+t*r*n+s*r*p;g[a+92>>2]=0.0;g[a+96>>2]=e*0.0+h*0.0+j*0.0+(e*m+h*o+j*q);g[a+100>>2]=f*0.0+i*0.0+k*0.0+(f*m+i*o+k*q);g[a+104>>2]=l*0.0+n*0.0+p*0.0+(l*m+n*o+p*q);g[a+108>>2]=0.0;d=c[a+32>>2]|0;q=+g[d+4>>2];p=+g[d+20>>2];o=+g[d+36>>2];n=+g[d+8>>2];m=+g[d+24>>2];l=+g[d+40>>2];k=+g[d+12>>2];i=+g[d+28>>2];f=+g[d+44>>2];j=-+g[d+52>>2];h=-+g[d+56>>2];e=-+g[d+60>>2];g[a+112>>2]=B*q+A*p+z*o;g[a+116>>2]=y*v*q+x*v*p+w*v*o;g[a+120>>2]=u*r*q+t*r*p+s*r*o;g[a+124>>2]=0.0;g[a+128>>2]=B*n+A*m+z*l;g[a+132>>2]=y*v*n+x*v*m+w*v*l;g[a+136>>2]=u*r*n+t*r*m+s*r*l;g[a+140>>2]=0.0;g[a+144>>2]=B*k+A*i+z*f;g[a+148>>2]=y*v*k+x*v*i+w*v*f;g[a+152>>2]=u*r*k+t*r*i+s*r*f;g[a+156>>2]=0.0;g[a+160>>2]=q*0.0+p*0.0+o*0.0+(q*j+p*h+o*e);g[a+164>>2]=n*0.0+m*0.0+l*0.0+(n*j+m*h+l*e);g[a+168>>2]=k*0.0+i*0.0+f*0.0+(k*j+i*h+f*e);g[a+172>>2]=0.0;cd(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0);return}function ef(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=c[a+108>>2]|0;if(g|0)Vb[c[(c[g>>2]|0)+12>>2]&127](g,c[d+60>>2]|0,f);o=c[d+12>>2]|0;p=c[a+60>>2]|0;n=c[a+92>>2]|0;if(!(pb[c[(c[n>>2]|0)+56>>2]&127](n)|0)){n=c[a+92>>2]|0;Vb[c[(c[n>>2]|0)+16>>2]&127](n,p+((o&65535)<<6)|0,f);}m=e[a+56>>1]|0;l=c[a+60>>2]|0;b[l+54>>1]=(e[l+54>>1]|0)+65534;b[l+56>>1]=(e[l+56>>1]|0)+65534;b[l+58>>1]=(e[l+58>>1]|0)+65534;l=0;d=b[a+6>>1]|0;do{k=a+68+(l<<2)|0;n=c[k>>2]|0;g=e[p+((o&65535)<<6)+54+(l<<1)>>1]|0;b[n+(g<<2)>>1]=d;f=b[n+(g<<2)+6>>1]|0;if(!(f<<16>>16))f=n;else{j=(c[a+60>>2]|0)+((e[n+(g<<2)+2>>1]|0)<<6)+54+(l<<1)|0;i=n+(g<<2)|0;while(1){h=i;i=i+4|0;g=b[i>>1]|0;if((d&65535)<(g&65535))break;q=c[a+60>>2]|0;d=f&65535;d=(g&1)==0?q+(d<<6)+48+(l<<1)|0:q+(d<<6)+54+(l<<1)|0;b[d>>1]=(b[d>>1]|0)+-1<<16>>16;b[j>>1]=(b[j>>1]|0)+1<<16>>16;d=e[h>>1]|e[h+2>>1]<<16;g=e[i>>1]|e[i+2>>1]<<16;b[h>>1]=g;b[h+2>>1]=g>>>16;b[i>>1]=d;b[i+2>>1]=d>>>16;f=b[h+10>>1]|0;if(!(f<<16>>16))break;else d=d&65535;}d=b[a+6>>1]|0;f=c[k>>2]|0;}g=e[p+((o&65535)<<6)+48+(l<<1)>>1]|0;b[n+(g<<2)>>1]=d;i=f+(g<<2)|0;h=b[i+6>>1]|0;if(h<<16>>16){k=(c[a+60>>2]|0)+((e[f+(g<<2)+2>>1]|0)<<6)+48+(l<<1)|0;j=i;f=b[i>>1]|0;while(1){g=j;j=j+4|0;d=b[j>>1]|0;if((f&65535)<(d&65535))break;i=c[a+60>>2]|0;q=h&65535;d=(d&1)==0?i+(q<<6)+48+(l<<1)|0:i+(q<<6)+54+(l<<1)|0;b[d>>1]=(b[d>>1]|0)+-1<<16>>16;b[k>>1]=(b[k>>1]|0)+1<<16>>16;d=e[g>>1]|e[g+2>>1]<<16;q=e[j>>1]|e[j+2>>1]<<16;b[g>>1]=q;b[g+2>>1]=q>>>16;b[j>>1]=d;b[j+2>>1]=d>>>16;h=b[g+10>>1]|0;if(!(h<<16>>16))break;else f=d&65535;}d=b[a+6>>1]|0;}b[n+((m<<1)+-1<<2)+2>>1]=0;b[n+((m<<1)+-1<<2)>>1]=d;l=l+1|0;}while((l|0)!=3);b[(c[a+60>>2]|0)+((o&65535)<<6)+48>>1]=b[a+64>>1]|0;b[a+64>>1]=o;b[a+56>>1]=(b[a+56>>1]|0)+-1<<16>>16;return}function ff(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6166]=(c[6166]|0)+1;g=c[d+24>>2]|0;if(!g){if(!((b[f+6>>1]&b[e+4>>1])<<16>>16)){d=0;return d|0}if(!((b[e+6>>1]&b[f+4>>1])<<16>>16)){d=0;return d|0}}else if(!(zb[c[(c[g>>2]|0)+8>>2]&63](g,e,f)|0)){d=0;return d|0}l=(c[e+12>>2]|0)>(c[f+12>>2]|0);m=l?f:e;h=c[m+12>>2]|0;l=l?e:f;e=c[l+12>>2]|0;j=((e<<16|h)+~((e<<16|h)<<15)>>10^(e<<16|h)+~((e<<16|h)<<15))*9|0;j=(j>>6^j)+~((j>>6^j)<<11)>>16^(j>>6^j)+~((j>>6^j)<<11);k=c[d+12>>2]|0;g=c[(c[d+44>>2]|0)+((j&k+-1)<<2)>>2]|0;a:do if((g|0)!=-1){f=c[d+16>>2]|0;while(1){if((c[(c[f+(g<<4)>>2]|0)+12>>2]|0)==(h|0)?(c[(c[f+(g<<4)+4>>2]|0)+12>>2]|0)==(e|0):0)break;g=c[(c[d+64>>2]|0)+(g<<2)>>2]|0;if((g|0)==-1)break a}g=f+(g<<4)|0;if(g|0){d=g;return d|0}}while(0);i=c[d+8>>2]|0;if((i|0)==(k|0)){h=k|0?k<<1:1;if((k|0)<(h|0)){if(!h){g=0;e=k;}else{c[6436]=(c[6436]|0)+1;g=ic((h<<4|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16;}e=c[d+8>>2]|0;}if((e|0)>0){f=0;do{n=c[d+16>>2]|0;c[g+(f<<4)>>2]=c[n+(f<<4)>>2];c[g+(f<<4)+4>>2]=c[n+(f<<4)+4>>2];c[g+(f<<4)+8>>2]=c[n+(f<<4)+8>>2];c[g+(f<<4)+12>>2]=c[n+(f<<4)+12>>2];f=f+1|0;}while((f|0)!=(e|0))}f=c[d+16>>2]|0;if(f){if(a[d+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);e=c[d+8>>2]|0;}c[d+16>>2]=0;}a[d+20>>0]=1;c[d+16>>2]=g;c[d+12>>2]=h;g=h;}else{e=k;g=k;}}else{e=i;g=k;}c[d+8>>2]=e+1;f=c[d+16>>2]|0;e=c[d+72>>2]|0;if(e){zb[c[(c[e>>2]|0)+8>>2]&63](e,m,l)|0;g=c[d+12>>2]|0;}if((k|0)<(g|0)){vf(d);g=(c[d+12>>2]|0)+-1&j;}else g=j&k+-1;n=(c[m+12>>2]|0)<(c[l+12>>2]|0);c[f+(i<<4)>>2]=n?m:l;c[f+(i<<4)+4>>2]=n?l:m;c[f+(i<<4)+8>>2]=0;c[f+(i<<4)+8+4>>2]=0;n=(c[d+44>>2]|0)+(g<<2)|0;c[(c[d+64>>2]|0)+(i<<2)>>2]=c[n>>2];c[n>>2]=i;n=f+(i<<4)|0;return n|0}function gf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0,x=0;w=l;l=l+32|0;q=c[a+12>>2]|0;r=+g[q+(((e+d|0)/2|0)*24|0)>>2];t=+g[q+(((e+d|0)/2|0)*24|0)+4>>2];u=+g[q+(((e+d|0)/2|0)*24|0)+8>>2];v=+g[q+(((e+d|0)/2|0)*24|0)+16>>2];s=c[q+(((e+d|0)/2|0)*24|0)+20>>2]|0;f=e;h=d;while(1){m=+g[b>>2];n=+g[b+4>>2];o=+g[b+8>>2];p=(r-m)*(r-m)+(t-n)*(t-n)+(u-o)*(u-o);a:while(1){i=+g[q+(h*24|0)+16>>2];do if(i!=v){if(!(i<v))break a}else{i=+g[q+(h*24|0)>>2]-m;j=+g[q+(h*24|0)+4>>2]-n;k=+g[q+(h*24|0)+8>>2]-o;if(i*i+j*j+k*k!=p)if(i*i+j*j+k*k<p)break;else break a;else if((c[q+(h*24|0)+20>>2]|0)<(s|0))break;else break a}while(0);h=h+1|0;}b:while(1){i=+g[q+(f*24|0)+16>>2];do if(v!=i){if(!(v<i))break b}else{i=+g[q+(f*24|0)>>2]-m;j=+g[q+(f*24|0)+4>>2]-n;k=+g[q+(f*24|0)+8>>2]-o;if(p!=i*i+j*j+k*k)if(p<i*i+j*j+k*k)break;else break b;else if((s|0)<(c[q+(f*24|0)+20>>2]|0))break;else break b}while(0);f=f+-1|0;}if((h|0)<=(f|0)){x=q+(h*24|0)|0;c[w>>2]=c[x>>2];c[w+4>>2]=c[x+4>>2];c[w+8>>2]=c[x+8>>2];c[w+12>>2]=c[x+12>>2];c[w+16>>2]=c[x+16>>2];c[w+20>>2]=c[x+20>>2];q=q+(f*24|0)|0;c[x>>2]=c[q>>2];c[x+4>>2]=c[q+4>>2];c[x+8>>2]=c[q+8>>2];c[x+12>>2]=c[q+12>>2];c[x+16>>2]=c[q+16>>2];c[x+20>>2]=c[q+20>>2];q=(c[a+12>>2]|0)+(f*24|0)|0;c[q>>2]=c[w>>2];c[q+4>>2]=c[w+4>>2];c[q+8>>2]=c[w+8>>2];c[q+12>>2]=c[w+12>>2];c[q+16>>2]=c[w+16>>2];c[q+20>>2]=c[w+20>>2];f=f+-1|0;h=h+1|0;}if((h|0)>(f|0))break;q=c[a+12>>2]|0;}if((f|0)>(d|0))gf(a,b,d,f);if((h|0)>=(e|0)){l=w;return}gf(a,b,h,e);l=w;return}function hf(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0.0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;j=c[a+28>>2]|0;k=c[a+32>>2]|0;e=c[b+8>>2]|0;g[e>>2]=1.0;h=c[b+24>>2]|0;g[e+(h+1<<2)>>2]=1.0;g[e+((h<<1)+2<<2)>>2]=1.0;l=+g[a+300>>2];q=+g[a+304>>2];f=+g[a+308>>2];o=+g[j+4>>2]*l+ +g[j+8>>2]*q+ +g[j+12>>2]*f;m=l*+g[j+20>>2]+q*+g[j+24>>2]+f*+g[j+28>>2];f=l*+g[j+36>>2]+q*+g[j+40>>2]+f*+g[j+44>>2];e=c[b+12>>2]|0;c[e>>2]=0;g[e+4>>2]=f;g[e+8>>2]=-m;g[e+12>>2]=0.0;g[e+(h<<2)>>2]=-f;c[e+(h<<2)+4>>2]=0;g[e+(h<<2)+8>>2]=o;g[e+(h<<2)+12>>2]=0.0;g[e+(h<<1<<2)>>2]=m;g[e+(h<<1<<2)+4>>2]=-o;c[e+(h<<1<<2)+8>>2]=0;g[e+(h<<1<<2)+12>>2]=0.0;e=c[b+16>>2]|0;g[e>>2]=-1.0;g[e+(h+1<<2)>>2]=-1.0;g[e+((h<<1)+2<<2)>>2]=-1.0;q=+g[a+316>>2];l=+g[a+320>>2];d=+g[a+324>>2];p=+g[k+4>>2]*q+ +g[k+8>>2]*l+ +g[k+12>>2]*d;n=q*+g[k+20>>2]+l*+g[k+24>>2]+d*+g[k+28>>2];d=q*+g[k+36>>2]+l*+g[k+40>>2]+d*+g[k+44>>2];h=c[b+20>>2]|0;e=c[b+24>>2]|0;c[h>>2]=0;g[h+4>>2]=-d;g[h+8>>2]=n;g[h+12>>2]=0.0;g[h+(e<<2)>>2]=d;c[h+(e<<2)+4>>2]=0;g[h+(e<<2)+8>>2]=-p;g[h+(e<<2)+12>>2]=0.0;g[h+(e<<1<<2)>>2]=-n;g[h+(e<<1<<2)+4>>2]=p;c[h+(e<<1<<2)+8>>2]=0;g[h+(e<<1<<2)+12>>2]=0.0;h=c[a+332>>2]|0;l=+g[(h&1|0?a+336|0:b+4|0)>>2]*+g[b>>2];i=c[b+28>>2]|0;g[i>>2]=l*(p+ +g[k+52>>2]-o-+g[j+52>>2]);g[i+(e<<2)>>2]=l*(n+ +g[k+56>>2]-m-+g[j+56>>2]);g[i+(e<<1<<2)>>2]=l*(d+ +g[k+60>>2]-f-+g[j+60>>2]);if(h&2|0){k=c[b+32>>2]|0;c[k>>2]=c[a+340>>2];c[k+(e<<2)>>2]=c[a+340>>2];c[k+(e<<1<<2)>>2]=c[a+340>>2];}f=+g[a+356>>2];if(f>0.0){g[c[b+36>>2]>>2]=-f;g[c[b+40>>2]>>2]=f;d=+g[a+356>>2];}else d=f;if(d>0.0){g[(c[b+36>>2]|0)+(e<<2)>>2]=-f;g[(c[b+40>>2]|0)+(e<<2)>>2]=f;d=+g[a+356>>2];}if(!(d>0.0)){j=a+352|0;j=c[j>>2]|0;k=b+52|0;c[k>>2]=j;return}g[(c[b+36>>2]|0)+(e<<1<<2)>>2]=-f;g[(c[b+40>>2]|0)+(e<<1<<2)>>2]=f;j=a+352|0;j=c[j>>2]|0;k=b+52|0;c[k>>2]=j;return}function jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;q=l;l=l+32|0;a[q+16>>0]=1;c[q+12>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;e=c[b+8>>2]|0;if((e|0)>0){o=0;i=0;h=0;g=0;f=0;while(1){m=c[b+16>>2]|0;n=m+(o<<4)|0;if((g|0)==(f|0)){j=f|0?f<<1:1;if((f|0)<(j|0)){if(j){c[6436]=(c[6436]|0)+1;e=ic((j<<4|3)+16|0)|0;if(!e){i=0;f=g;}else{c[(e+4+15&-16)+-4>>2]=e;i=e+4+15&-16;f=g;}}else i=0;if((f|0)>0){e=0;do{k=c[q+12>>2]|0;c[i+(e<<4)>>2]=c[k+(e<<4)>>2];c[i+(e<<4)+4>>2]=c[k+(e<<4)+4>>2];c[i+(e<<4)+8>>2]=c[k+(e<<4)+8>>2];c[i+(e<<4)+12>>2]=c[k+(e<<4)+12>>2];e=e+1|0;}while((e|0)!=(f|0))}e=c[q+12>>2]|0;if(!e)g=f;else{c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);c[q+12>>2]=0;}c[q+12>>2]=i;k=j;h=j;j=g;f=i;e=c[b+8>>2]|0;}else{k=f;j=f;f=i;}}else{k=f;j=g;f=i;}c[f+(j<<4)>>2]=c[n>>2];c[f+(j<<4)+4>>2]=c[m+(o<<4)+4>>2];c[f+(j<<4)+8>>2]=c[m+(o<<4)+8>>2];c[f+(j<<4)+12>>2]=c[m+(o<<4)+12>>2];g=j+1|0;o=o+1|0;if((o|0)>=(e|0))break;else{i=f;f=k;}}c[q+4>>2]=g;a[q+16>>0]=1;c[q+8>>2]=h;if((j|0)>-1){f=c[q+12>>2]|0;e=0;while(1){tb[c[(c[b>>2]|0)+12>>2]&31](b,c[f+(e<<4)>>2]|0,c[f+(e<<4)+4>>2]|0,d)|0;if((e|0)<(j|0))e=e+1|0;else break}}}else g=0;if((c[b+56>>2]|0)>0){f=c[b+64>>2]|0;e=0;do{c[f+(e<<2)>>2]=-1;e=e+1|0;}while((e|0)<(c[b+56>>2]|0))}if((g|0)<=1)if((g|0)<=0){e=c[q+12>>2]|0;if(!e){l=q;return}}else p=23;else{je(q,0,g+-1|0);p=23;}if((p|0)==23){e=c[q+12>>2]|0;f=0;do{zb[c[(c[b>>2]|0)+8>>2]&63](b,c[e+(f<<4)>>2]|0,c[e+(f<<4)+4>>2]|0)|0;f=f+1|0;}while((f|0)<(g|0))}c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);c[q+12>>2]=0;l=q;return}function kf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;B=(a[b+28>>0]|0)!=0;C=B?e:d;B=B?d:e;z=c[b+12>>2]|0;if((z|0)<=0){x=1.0;return +x}A=(c[C+192>>2]|0)+24|0;j=+g[C+4>>2];u=+g[C+8>>2];v=+g[C+12>>2];w=c[C+16>>2]|0;x=+g[C+20>>2];k=+g[C+24>>2];l=+g[C+28>>2];e=c[C+32>>2]|0;m=+g[C+36>>2];n=+g[C+40>>2];o=+g[C+44>>2];p=c[C+48>>2]|0;q=+g[C+52>>2];r=+g[C+56>>2];s=+g[C+60>>2];t=c[C+64>>2]|0;i=1.0;d=0;y=c[C+260>>2]|0;do{E=c[A>>2]|0;P=+g[E+(d*80|0)>>2];O=+g[E+(d*80|0)+16>>2];N=+g[E+(d*80|0)+32>>2];M=+g[E+(d*80|0)+4>>2];L=+g[E+(d*80|0)+20>>2];K=+g[E+(d*80|0)+36>>2];J=+g[E+(d*80|0)+8>>2];I=+g[E+(d*80|0)+24>>2];H=+g[E+(d*80|0)+40>>2];G=+g[E+(d*80|0)+48>>2];F=+g[E+(d*80|0)+52>>2];D=+g[E+(d*80|0)+56>>2];c[C+260>>2]=y+1;g[C+4>>2]=j*P+u*O+v*N;g[C+8>>2]=j*M+u*L+v*K;g[C+12>>2]=j*J+u*I+v*H;g[C+16>>2]=0.0;g[C+20>>2]=x*P+k*O+l*N;g[C+24>>2]=x*M+k*L+l*K;g[C+28>>2]=x*J+k*I+l*H;g[C+32>>2]=0.0;g[C+36>>2]=m*P+n*O+o*N;g[C+40>>2]=m*M+n*L+o*K;g[C+44>>2]=m*J+n*I+o*H;g[C+48>>2]=0.0;g[C+52>>2]=q+(j*G+u*F+v*D);g[C+56>>2]=r+(x*G+k*F+l*D);g[C+60>>2]=s+(m*G+n*F+o*D);g[C+64>>2]=0.0;E=c[(c[b+20>>2]|0)+(d<<2)>>2]|0;D=+xb[c[(c[E>>2]|0)+12>>2]&15](E,C,B,f,h);i=D<i?D:i;y=(c[C+260>>2]|0)+1|0;c[C+260>>2]=y;g[C+4>>2]=j;g[C+8>>2]=u;g[C+12>>2]=v;c[C+16>>2]=w;g[C+20>>2]=x;g[C+24>>2]=k;g[C+28>>2]=l;c[C+32>>2]=e;g[C+36>>2]=m;g[C+40>>2]=n;g[C+44>>2]=o;c[C+48>>2]=p;g[C+52>>2]=q;g[C+56>>2]=r;g[C+60>>2]=s;c[C+64>>2]=t;d=d+1|0;}while((d|0)!=(z|0));return +i}function lf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;i=is()|0;c[i+4>>2]=7;c[i+8>>2]=-1;c[i+12>>2]=-1;g[i+16>>2]=3402823466385288598117041.0e14;a[i+20>>0]=1;a[i+21>>0]=0;c[i+24>>2]=-1;c[i+28>>2]=b;c[i+32>>2]=d;g[i+36>>2]=0.0;g[i+40>>2]=.30000001192092896;c[i+44>>2]=0;c[i>>2]=4724;a[i+48>>0]=0;c[i+52>>2]=c[e>>2];c[i+52+4>>2]=c[e+4>>2];c[i+52+8>>2]=c[e+8>>2];c[i+52+12>>2]=c[e+12>>2];c[i+68>>2]=c[e+16>>2];c[i+68+4>>2]=c[e+16+4>>2];c[i+68+8>>2]=c[e+16+8>>2];c[i+68+12>>2]=c[e+16+12>>2];c[i+84>>2]=c[e+32>>2];c[i+84+4>>2]=c[e+32+4>>2];c[i+84+8>>2]=c[e+32+8>>2];c[i+84+12>>2]=c[e+32+12>>2];c[i+100>>2]=c[e+48>>2];c[i+100+4>>2]=c[e+48+4>>2];c[i+100+8>>2]=c[e+48+8>>2];c[i+100+12>>2]=c[e+48+12>>2];c[i+116>>2]=c[f>>2];c[i+116+4>>2]=c[f+4>>2];c[i+116+8>>2]=c[f+8>>2];c[i+116+12>>2]=c[f+12>>2];c[i+132>>2]=c[f+16>>2];c[i+132+4>>2]=c[f+16+4>>2];c[i+132+8>>2]=c[f+16+8>>2];c[i+132+12>>2]=c[f+16+12>>2];c[i+148>>2]=c[f+32>>2];c[i+148+4>>2]=c[f+32+4>>2];c[i+148+8>>2]=c[f+32+8>>2];c[i+148+12>>2]=c[f+32+12>>2];c[i+164>>2]=c[f+48>>2];c[i+164+4>>2]=c[f+48+4>>2];c[i+164+8>>2]=c[f+48+8>>2];c[i+164+12>>2]=c[f+48+12>>2];a[i+180>>0]=h&1;g[i+184>>2]=1.0;g[i+188>>2]=-1.0;g[i+192>>2]=0.0;g[i+196>>2]=0.0;g[i+200>>2]=1.0;g[i+204>>2]=.699999988079071;g[i+208>>2]=0.0;g[i+212>>2]=0.0;g[i+216>>2]=1.0;g[i+220>>2]=.699999988079071;g[i+224>>2]=0.0;g[i+228>>2]=0.0;g[i+264>>2]=1.0;g[i+268>>2]=.699999988079071;g[i+272>>2]=1.0;g[i+276>>2]=0.0;g[i+280>>2]=1.0;g[i+284>>2]=.699999988079071;g[i+288>>2]=1.0;g[i+292>>2]=0.0;g[i+232>>2]=1.0;g[i+236>>2]=.699999988079071;g[i+240>>2]=1.0;g[i+244>>2]=0.0;g[i+248>>2]=1.0;g[i+252>>2]=.699999988079071;g[i+256>>2]=1.0;g[i+260>>2]=0.0;a[i+1096>>0]=0;g[i+1116>>2]=0.0;g[i+1120>>2]=0.0;g[i+1124>>2]=0.0;c[i+300>>2]=0;c[i+1100>>2]=0;c[i+1100+4>>2]=0;c[i+1100+8>>2]=0;a[i+1100+12>>0]=0;a[i+49>>0]=1;Uc(i,(c[i+28>>2]|0)+4|0,(c[i+32>>2]|0)+4|0);return i|0}function mf(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;j=l;l=l+64|0;zg(c[b+116>>2]|0,d,0);e=+g[d+204>>2]+ +g[d+212>>2];h=e*+g[d+56>>2]+ +g[d+40>>2];i=e*+g[d+60>>2]+ +g[d+44>>2];g[d+16>>2]=+g[d+52>>2]*e+ +g[d+36>>2];g[d+20>>2]=h;g[d+24>>2]=i;g[d+28>>2]=0.0;g[j+32>>2]=-1.0;k=c[b+100>>2]|0;k=tb[c[(c[k>>2]|0)+8>>2]&31](k,d+36|0,d+16|0,j)|0;c[d+88>>2]=0;if(!k){c[d+32>>2]=c[d+204>>2];g[d+272>>2]=0.0;h=-+g[d+56>>2];i=-+g[d+60>>2];g[d>>2]=-+g[d+52>>2];g[d+4>>2]=h;g[d+8>>2]=i;g[d+12>>2]=0.0;i=-1.0;h=1.0;k=d+268|0;g[k>>2]=h;l=j;return +i}f=e*+g[j+32>>2];c[d>>2]=c[j+16>>2];c[d+4>>2]=c[j+16+4>>2];c[d+8>>2]=c[j+16+8>>2];c[d+12>>2]=c[j+16+12>>2];a[d+84>>0]=1;if((a[22680]|0)==0?iy(22680)|0:0){c[j+40>>2]=0;c[j+40+4>>2]=0;c[j+40+8>>2]=0;c[j+40+12>>2]=0;bg(23892,0.0,0,0,j+40|0);}c[6024]=c[6024]|1;g[6059]=0.0;e=+g[6069]*0.0;h=+g[6070]*0.0;g[6064]=+g[6068]*0.0;g[6065]=e;g[6066]=h;g[6067]=0.0;c[6072]=0;c[6073]=0;c[6074]=0;c[6075]=0;h=+g[6061]*0.0;e=+g[6062]*0.0;g[6113]=+g[6060]*0.0;g[6114]=h;g[6115]=e;g[6116]=0.0;c[d+88>>2]=23892;e=f-+g[d+212>>2];g[d+32>>2]=e;h=+g[d+204>>2];i=+g[d+208>>2]*.009999999776482582;if(e<h-i){g[d+32>>2]=h-i;e=h-i;}if(e>h+i)g[d+32>>2]=h+i;c[d+16>>2]=c[j>>2];c[d+16+4>>2]=c[j+4>>2];c[d+16+8>>2]=c[j+8>>2];c[d+16+12>>2]=c[j+12>>2];s=+g[d>>2];r=+g[d+4>>2];o=+g[d+8>>2];h=s*+g[d+52>>2]+r*+g[d+56>>2]+o*+g[d+60>>2];k=c[b+116>>2]|0;e=+g[d+16>>2]-+g[k+52>>2];n=+g[d+20>>2]-+g[k+56>>2];p=+g[d+24>>2]-+g[k+60>>2];i=+g[k+332>>2];q=+g[k+336>>2];m=+g[k+328>>2];g[d+272>>2]=!(h>=-.10000000149011612)?-1.0/h*(s*(i*p-n*q+ +g[k+312>>2])+r*(+g[k+316>>2]+(e*q-p*m))+o*(n*m-e*i+ +g[k+320>>2])):0.0;i=f;h=!(h>=-.10000000149011612)?-1.0/h:10.0;k=d+268|0;g[k>>2]=h;l=j;return +i}function nf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0.0;c[6139]=(c[6139]|0)+1;if(!(c[b+4>>2]&2))j=.019999999552965164;else{k=c[d+192>>2]|0;i=+Pb[c[(c[k>>2]|0)+20>>2]&1](k,.019999999552965164);k=c[e+192>>2]|0;j=+Pb[c[(c[k>>2]|0)+20>>2]&1](k,.019999999552965164);j=i<j?i:j;}m=+g[d+184>>2];i=+g[e+184>>2];i=m<i?m:i;f=c[b+68>>2]|0;h=c[f+8>>2]|0;if(!h){if(c[b+4>>2]&4|0){b=0;return b|0}c[6436]=(c[6436]|0)+1;f=ic(791)|0;if(!f)k=0;else{c[(f+4+15&-16)+-4>>2]=f;k=f+4+15&-16;}}else{k=c[f+12>>2]|0;c[f+12>>2]=c[k>>2];c[f+8>>2]=h+-1;}c[k>>2]=1025;c[k+116>>2]=0;a[k+120>>0]=0;f=k+124|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[k+300>>2]=0;a[k+304>>0]=0;f=k+308|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[k+484>>2]=0;a[k+488>>0]=0;f=k+492|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[k+668>>2]=0;a[k+672>>0]=0;f=k+676|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[k+740>>2]=d;c[k+744>>2]=e;c[k+748>>2]=0;g[k+752>>2]=j;g[k+756>>2]=i;e=k;f=c[b+12>>2]|0;c[k+768>>2]=f;if((f|0)==(c[b+16>>2]|0)?(l=f|0?f<<1:1,(f|0)<(l|0)):0){if(!l)d=0;else{c[6436]=(c[6436]|0)+1;f=ic((l<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}d=f;f=c[b+12>>2]|0;}if((f|0)>0){h=0;do{c[d+(h<<2)>>2]=c[(c[b+20>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(f|0))}h=c[b+20>>2]|0;if(h){if(a[b+24>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);f=c[b+12>>2]|0;}c[b+20>>2]=0;}a[b+24>>0]=1;c[b+20>>2]=d;c[b+16>>2]=l;}c[(c[b+20>>2]|0)+(f<<2)>>2]=e;c[b+12>>2]=f+1;b=k;return b|0}function of(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;i=Rr(460)|0;Od(i,b,d,e);c[i>>2]=4e3;a[i+340>>0]=1;c[i+336>>2]=0;c[i+328>>2]=0;c[i+332>>2]=0;g[i+352>>2]=1.2000000476837158;g[i+356>>2]=0.0;g[i+360>>2]=0.0;g[i+364>>2]=1.0e3;c[i+368>>2]=0;c[i+368+4>>2]=0;c[i+368+8>>2]=0;c[i+368+12>>2]=0;c[i+368+16>>2]=0;c[i+368+20>>2]=0;c[i+368+24>>2]=0;c[i+396>>2]=-1054867456;c[i+400>>2]=0;g[i+404>>2]=0.0;a[i+424>>0]=1;c[i+420>>2]=0;c[i+412>>2]=0;c[i+416>>2]=0;c[i+452>>2]=h;a[i+456>>0]=0;if(!h){c[6436]=(c[6436]|0)+1;f=ic(59)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}g[f+12>>2]=1.0;c[f+8>>2]=0;c[f+4>>2]=5;c[f>>2]=3124;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+16>>0]=1;c[i+452>>2]=f;a[i+456>>0]=1;}c[i+344>>2]=4302;a[i+348>>0]=1;a[i+349>>0]=0;a[i+350>>0]=0;c[i+384>>2]=d;c[i+388>>2]=b;hi(i+408|0);h=c[i+412>>2]|0;if((h|0)>0)e=0;else{d=i+428|0;g[d>>2]=.25;d=i+432|0;c[d>>2]=0;d=i+436|0;c[d>>2]=0;d=i+444|0;c[d>>2]=1;d=i+448|0;c[d>>2]=1;g[i+352>>2]=1.2000000476837158;g[i+356>>2]=0.0;g[i+360>>2]=0.0;d=i+392|0;c[d>>2]=0;c[i+368>>2]=0;c[i+368+4>>2]=0;c[i+368+8>>2]=0;c[i+368+12>>2]=0;c[i+396>>2]=-1054867456;c[i+400>>2]=0;g[i+404>>2]=0.0;hi(i+408|0);return i|0}do{d=(c[i+420>>2]|0)+(e<<2)|0;f=c[d>>2]|0;c[d>>2]=0;if(f|0)do{d=f;f=c[f+280>>2]|0;aH(d);}while((f|0)!=0);e=e+1|0;}while((e|0)!=(h|0));d=i+428|0;g[d>>2]=.25;d=i+432|0;c[d>>2]=0;d=i+436|0;c[d>>2]=0;d=i+444|0;c[d>>2]=1;d=i+448|0;c[d>>2]=1;g[i+352>>2]=1.2000000476837158;g[i+356>>2]=0.0;g[i+360>>2]=0.0;d=i+392|0;c[d>>2]=0;c[i+368>>2]=0;c[i+368+4>>2]=0;c[i+368+8>>2]=0;c[i+368+12>>2]=0;c[i+396>>2]=-1054867456;c[i+400>>2]=0;g[i+404>>2]=0.0;hi(i+408|0);return i|0}function pf(a,b,e){a=a|0;b=b|0;e=e|0;Uh(a,b,e)|0;c[b+52>>2]=c[a+48>>2];c[b+56>>2]=c[a+52>>2];c[b+60>>2]=c[a+56>>2];c[b+64>>2]=c[a+60>>2];c[b+68>>2]=c[a+64>>2];c[b+72>>2]=c[a+68>>2];c[b+76>>2]=c[a+72>>2];c[b+80>>2]=c[a+76>>2];c[b+84>>2]=c[a+80>>2];c[b+88>>2]=c[a+84>>2];c[b+92>>2]=c[a+88>>2];c[b+96>>2]=c[a+92>>2];c[b+100>>2]=c[a+96>>2];c[b+104>>2]=c[a+100>>2];c[b+108>>2]=c[a+104>>2];c[b+112>>2]=c[a+108>>2];c[b+116>>2]=c[a+112>>2];c[b+120>>2]=c[a+116>>2];c[b+124>>2]=c[a+120>>2];c[b+128>>2]=c[a+124>>2];c[b+132>>2]=c[a+128>>2];c[b+136>>2]=c[a+132>>2];c[b+140>>2]=c[a+136>>2];c[b+144>>2]=c[a+140>>2];c[b+148>>2]=c[a+144>>2];c[b+152>>2]=c[a+148>>2];c[b+156>>2]=c[a+152>>2];c[b+160>>2]=c[a+156>>2];c[b+164>>2]=c[a+160>>2];c[b+168>>2]=c[a+164>>2];c[b+172>>2]=c[a+168>>2];c[b+176>>2]=c[a+172>>2];c[b+228>>2]=c[a+868>>2];c[b+212>>2]=c[a+872>>2];c[b+196>>2]=c[a+680>>2];c[b+180>>2]=c[a+696>>2];c[b+232>>2]=c[a+932>>2];c[b+216>>2]=c[a+936>>2];c[b+200>>2]=c[a+684>>2];c[b+184>>2]=c[a+700>>2];c[b+236>>2]=c[a+996>>2];c[b+220>>2]=c[a+1e3>>2];c[b+204>>2]=c[a+688>>2];c[b+188>>2]=c[a+704>>2];c[b+244>>2]=d[a+1300>>0];c[b+248>>2]=d[a+1301>>0];c[b+276>>2]=c[a+1316>>2];c[b+324>>2]=c[a+1364>>2];c[b+252>>2]=d[a+1309>>0];c[b+300>>2]=c[a+1340>>2];c[b+280>>2]=c[a+1320>>2];c[b+328>>2]=c[a+1368>>2];c[b+256>>2]=d[a+1310>>0];c[b+304>>2]=c[a+1344>>2];c[b+284>>2]=c[a+1324>>2];c[b+332>>2]=c[a+1372>>2];c[b+260>>2]=d[a+1311>>0];c[b+308>>2]=c[a+1348>>2];c[b+288>>2]=c[a+1328>>2];c[b+336>>2]=c[a+1376>>2];c[b+264>>2]=d[a+1312>>0];c[b+312>>2]=c[a+1352>>2];c[b+292>>2]=c[a+1332>>2];c[b+340>>2]=c[a+1380>>2];c[b+268>>2]=d[a+1313>>0];c[b+316>>2]=c[a+1356>>2];c[b+296>>2]=c[a+1336>>2];c[b+344>>2]=c[a+1384>>2];c[b+272>>2]=d[a+1314>>0];c[b+320>>2]=c[a+1360>>2];return 12623}function qf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=c[b+4>>2]|0;if((i|0)==(c[b+8>>2]|0)?(h=i|0?i<<1:1,(i|0)<(h|0)):0){if(!h){e=0;g=i;}else{c[6436]=(c[6436]|0)+1;e=ic((h*244|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}g=c[b+4>>2]|0;}if((g|0)>0){f=0;do{k=e+(f*244|0)|0;j=c[b+12>>2]|0;l=j+(f*244|0)|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=j+(f*244|0)+16|0;l=e+(f*244|0)+16|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];l=j+(f*244|0)+32|0;k=e+(f*244|0)+32|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=e+(f*244|0)+48|0;l=j+(f*244|0)+48|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];Vh(e+(f*244|0)+64|0,j+(f*244|0)+64|0,180)|0;f=f+1|0;}while((f|0)!=(g|0))}f=c[b+12>>2]|0;if(f|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=e;c[b+8>>2]=h;e=c[b+4>>2]|0;}else e=i;c[b+4>>2]=e+1;l=c[b+12>>2]|0;c[l+(i*244|0)>>2]=c[d>>2];c[l+(i*244|0)+4>>2]=c[d+4>>2];c[l+(i*244|0)+8>>2]=c[d+8>>2];c[l+(i*244|0)+12>>2]=c[d+12>>2];c[l+(i*244|0)+16>>2]=c[d+16>>2];c[l+(i*244|0)+16+4>>2]=c[d+16+4>>2];c[l+(i*244|0)+16+8>>2]=c[d+16+8>>2];c[l+(i*244|0)+16+12>>2]=c[d+16+12>>2];c[l+(i*244|0)+32>>2]=c[d+32>>2];c[l+(i*244|0)+32+4>>2]=c[d+32+4>>2];c[l+(i*244|0)+32+8>>2]=c[d+32+8>>2];c[l+(i*244|0)+32+12>>2]=c[d+32+12>>2];c[l+(i*244|0)+48>>2]=c[d+48>>2];c[l+(i*244|0)+48+4>>2]=c[d+48+4>>2];c[l+(i*244|0)+48+8>>2]=c[d+48+8>>2];c[l+(i*244|0)+48+12>>2]=c[d+48+12>>2];Vh(l+(i*244|0)+64|0,d+64|0,180)|0;return (c[b+12>>2]|0)+(i*244|0)|0}function rf(a,b,e){a=a|0;b=b|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0;Uh(a,b,e)|0;c[b+52>>2]=c[a+552>>2];c[b+56>>2]=c[a+556>>2];c[b+60>>2]=c[a+560>>2];c[b+64>>2]=c[a+564>>2];c[b+68>>2]=c[a+568>>2];c[b+72>>2]=c[a+572>>2];c[b+76>>2]=c[a+576>>2];c[b+80>>2]=c[a+580>>2];c[b+84>>2]=c[a+584>>2];c[b+88>>2]=c[a+588>>2];c[b+92>>2]=c[a+592>>2];c[b+96>>2]=c[a+596>>2];c[b+100>>2]=c[a+600>>2];c[b+104>>2]=c[a+604>>2];c[b+108>>2]=c[a+608>>2];c[b+112>>2]=c[a+612>>2];c[b+116>>2]=c[a+616>>2];c[b+120>>2]=c[a+620>>2];c[b+124>>2]=c[a+624>>2];c[b+128>>2]=c[a+628>>2];c[b+132>>2]=c[a+632>>2];c[b+136>>2]=c[a+636>>2];c[b+140>>2]=c[a+640>>2];c[b+144>>2]=c[a+644>>2];c[b+148>>2]=c[a+648>>2];c[b+152>>2]=c[a+652>>2];c[b+156>>2]=c[a+656>>2];c[b+160>>2]=c[a+660>>2];c[b+164>>2]=c[a+664>>2];c[b+168>>2]=c[a+668>>2];c[b+172>>2]=c[a+672>>2];c[b+176>>2]=c[a+676>>2];c[b+184>>2]=d[a+736>>0];c[b+188>>2]=d[a+737>>0];c[b+196>>2]=c[a+684>>2];c[b+192>>2]=c[a+680>>2];c[b+180>>2]=d[a+740>>0];h=+g[a+688>>2];i=+g[a+692>>2];f=+Wg(h-i,6.2831854820251465);if(!(f<-3.1415927410125732)){if(f>3.1415927410125732)f=f+-6.2831854820251465;}else f=f+6.2831854820251465;g[b+200>>2]=f;f=+Wg(h+i,6.2831854820251465);if(f<-3.1415927410125732){i=f+6.2831854820251465;e=b+204|0;g[e>>2]=i;e=a+696|0;e=c[e>>2]|0;j=b+208|0;c[j>>2]=e;j=a+700|0;j=c[j>>2]|0;e=b+212|0;c[e>>2]=j;a=a+704|0;a=c[a>>2]|0;b=b+216|0;c[b>>2]=a;return 12869}if(!(f>3.1415927410125732)){i=f;j=b+204|0;g[j>>2]=i;j=a+696|0;j=c[j>>2]|0;e=b+208|0;c[e>>2]=j;e=a+700|0;e=c[e>>2]|0;j=b+212|0;c[j>>2]=e;a=a+704|0;a=c[a>>2]|0;j=b+216|0;c[j>>2]=a;return 12869}i=f+-6.2831854820251465;j=b+204|0;g[j>>2]=i;j=a+696|0;j=c[j>>2]|0;e=b+208|0;c[e>>2]=j;e=a+700|0;e=c[e>>2]|0;j=b+212|0;c[j>>2]=e;a=a+704|0;a=c[a>>2]|0;j=b+216|0;c[j>>2]=a;return 12869}function sf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6165]=(c[6165]|0)+1;k=(c[b+12>>2]|0)>(c[d+12>>2]|0);n=k?d:b;h=c[n+12>>2]|0;k=k?b:d;f=c[k+12>>2]|0;j=((f<<16|h)+~((f<<16|h)<<15)>>10^(f<<16|h)+~((f<<16|h)<<15))*9|0;j=((j>>6^j)+~((j>>6^j)<<11)>>16^(j>>6^j)+~((j>>6^j)<<11))&(c[a+12>>2]|0)+-1;b=c[(c[a+44>>2]|0)+(j<<2)>>2]|0;if((b|0)==-1){a=0;return a|0}g=c[a+16>>2]|0;d=b;while(1){if((c[(c[g+(d<<4)>>2]|0)+12>>2]|0)==(h|0)?(c[(c[g+(d<<4)+4>>2]|0)+12>>2]|0)==(f|0):0)break;b=c[(c[a+64>>2]|0)+(d<<2)>>2]|0;if((b|0)==-1){b=0;i=22;break}else d=b;}if((i|0)==22)return b|0;b=g+(d<<4)|0;if(!b){a=0;return a|0}Vb[c[(c[a>>2]|0)+32>>2]&127](a,b,e);m=c[g+(d<<4)+12>>2]|0;l=b-(c[a+16>>2]|0)>>4;d=j;f=-1;b=a+44|0;while(1){b=c[(c[b>>2]|0)+(d<<2)>>2]|0;if((b|0)==(l|0))break;else{d=b;f=b;b=a+64|0;}}d=c[a+64>>2]|0;if((f|0)==-1)b=(c[a+44>>2]|0)+(j<<2)|0;else b=d+(f<<2)|0;c[b>>2]=c[d+(l<<2)>>2];i=(c[a+8>>2]|0)+-1|0;b=c[a+72>>2]|0;if(b|0)tb[c[(c[b>>2]|0)+12>>2]&31](b,n,k,e)|0;if((i|0)==(l|0)){c[a+8>>2]=(c[a+8>>2]|0)+-1;a=m;return a|0}h=c[a+16>>2]|0;g=c[(c[h+(i<<4)+4>>2]|0)+12>>2]<<16|c[(c[h+(i<<4)>>2]|0)+12>>2];g=(g+~(g<<15)>>10^g+~(g<<15))*9|0;g=((g>>6^g)+~((g>>6^g)<<11)>>16^(g>>6^g)+~((g>>6^g)<<11))&(c[a+12>>2]|0)+-1;d=g;f=-1;b=a+44|0;while(1){b=c[(c[b>>2]|0)+(d<<2)>>2]|0;if((b|0)==(i|0))break;else{d=b;f=b;b=a+64|0;}}d=c[a+64>>2]|0;if((f|0)==-1)b=(c[a+44>>2]|0)+(g<<2)|0;else b=d+(f<<2)|0;c[b>>2]=c[d+(i<<2)>>2];c[h+(l<<4)>>2]=c[h+(i<<4)>>2];c[h+(l<<4)+4>>2]=c[h+(i<<4)+4>>2];c[h+(l<<4)+8>>2]=c[h+(i<<4)+8>>2];c[h+(l<<4)+12>>2]=c[h+(i<<4)+12>>2];e=(c[a+44>>2]|0)+(g<<2)|0;c[(c[a+64>>2]|0)+(l<<2)>>2]=c[e>>2];c[e>>2]=l;c[a+8>>2]=(c[a+8>>2]|0)+-1;a=m;return a|0}function tf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;k=l;l=l+64|0;n=+g[a+20>>2];u=+g[a+40>>2];p=+g[a+24>>2];s=+g[a+36>>2];t=+g[a+32>>2];m=+g[a+16>>2];j=+g[a>>2];i=+g[a+4>>2];q=+g[a+8>>2];h=1.0/((n*u-p*s)*j+i*(p*t-u*m)+(s*m-n*t)*q);z=+g[b>>2];y=+g[b+4>>2];A=+g[b+8>>2];x=+g[b+16>>2];w=+g[b+20>>2];v=+g[b+24>>2];r=+g[b+32>>2];o=+g[b+36>>2];f=+g[b+40>>2];g[k+16>>2]=A*(s*m-n*t)*h+(z*(n*u-p*s)*h+y*(p*t-u*m)*h);g[k+16+4>>2]=A*(t*i-s*j)*h+(z*(s*q-u*i)*h+y*(u*j-t*q)*h);g[k+16+8>>2]=A*(n*j-m*i)*h+(z*(p*i-n*q)*h+y*(m*q-p*j)*h);g[k+16+12>>2]=0.0;g[k+16+16>>2]=(n*u-p*s)*h*x+(p*t-u*m)*h*w+(s*m-n*t)*h*v;g[k+16+20>>2]=(s*q-u*i)*h*x+(u*j-t*q)*h*w+(t*i-s*j)*h*v;g[k+16+24>>2]=(p*i-n*q)*h*x+(m*q-p*j)*h*w+(n*j-m*i)*h*v;g[k+16+28>>2]=0.0;g[k+16+32>>2]=(n*u-p*s)*h*r+(p*t-u*m)*h*o+(s*m-n*t)*h*f;g[k+16+36>>2]=(s*q-u*i)*h*r+(u*j-t*q)*h*o+(t*i-s*j)*h*f;g[k+16+40>>2]=(p*i-n*q)*h*r+(m*q-p*j)*h*o+(n*j-m*i)*h*f;g[k+16+44>>2]=0.0;fh(k+16|0,k);f=+g[k>>2];h=+g[k+4>>2];i=+g[k+8>>2];m=+g[k+12>>2];j=1.0/+G(+(f*f+h*h+i*i+m*m));g[k>>2]=f*j;g[k+4>>2]=h*j;g[k+8>>2]=i*j;g[k+12>>2]=m*j;m=m*j<-1.0?-1.0:m*j;g[e>>2]=+L(+(m>1.0?1.0:m))*2.0;g[d>>2]=f*j;g[d+4>>2]=h*j;g[d+8>>2]=i*j;g[d+12>>2]=0.0;if(f*j*f*j+h*j*h*j+i*j*i*j<1.4210854715202004e-14){c[d>>2]=1065353216;c[d+4>>2]=0;c[d+8>>2]=0;g[d+12>>2]=0.0;l=k;return}else{A=1.0/+G(+(f*j*f*j+h*j*h*j+i*j*i*j));g[d>>2]=f*j*A;g[d+4>>2]=A*h*j;g[d+8>>2]=A*i*j;l=k;return}}function uf(a,b,d){a=a|0;b=+b;d=+d;var e=0.0,f=0,h=0,i=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0.0;v=c[a+832>>2]|0;if((v|0)<=0)return;q=c[a+840>>2]|0;a=0;do{u=c[q+(a*56|0)>>2]|0;j=c[q+(a*56|0)+4>>2]|0;y=c[j+8>>2]|0;x=c[j+12>>2]|0;w=c[j+16>>2]|0;f=q+(a*56|0)+8|0;s=+g[f>>2];h=q+(a*56|0)+12|0;r=+g[h>>2];i=q+(a*56|0)+16|0;p=+g[i>>2];b=+g[y+8>>2]*s+ +g[x+8>>2]*r+ +g[w+8>>2]*p;d=+g[y+12>>2]*s+ +g[x+12>>2]*r+ +g[w+12>>2]*p;e=+g[y+16>>2]*s+ +g[x+16>>2]*r+ +g[w+16>>2]*p;k=+g[u+8>>2];l=+g[u+12>>2];m=+g[u+16>>2];n=k-+g[u+24>>2]-(b-(s*+g[y+24>>2]+r*+g[x+24>>2]+p*+g[w+24>>2]));o=l-+g[u+28>>2]-(d-(s*+g[y+28>>2]+r*+g[x+28>>2]+p*+g[w+28>>2]));p=m-+g[u+32>>2]-(e-(s*+g[y+32>>2]+r*+g[x+32>>2]+p*+g[w+32>>2]));r=+g[q+(a*56|0)+24>>2];s=+g[q+(a*56|0)+28>>2];t=+g[q+(a*56|0)+32>>2];if(n*r+o*s+p*t<0.0){e=+g[q+(a*56|0)+40>>2]-(k*r+l*s+m*t-(b*r+d*s+e*t));b=r*e+0.0;d=s*e+0.0;e=t*e+0.0;}else{b=0.0;d=0.0;e=0.0;}z=+g[q+(a*56|0)+44>>2];b=b-z*(n-r*(n*r+o*s+p*t));d=d-z*(o-s*(n*r+o*s+p*t));s=e-z*(p-t*(n*r+o*s+p*t));t=+g[q+(a*56|0)+48>>2];g[u+8>>2]=k+t*b;g[u+12>>2]=l+t*d;g[u+16>>2]=t*s+m;y=q+(a*56|0)+52|0;t=+g[y>>2]*+g[f>>2];x=c[j+8>>2]|0;g[x+8>>2]=+g[x+8>>2]-b*t;g[x+12>>2]=+g[x+12>>2]-d*t;g[x+16>>2]=+g[x+16>>2]-s*t;t=+g[y>>2]*+g[h>>2];x=c[j+12>>2]|0;g[x+8>>2]=+g[x+8>>2]-b*t;g[x+12>>2]=+g[x+12>>2]-d*t;g[x+16>>2]=+g[x+16>>2]-s*t;t=+g[y>>2]*+g[i>>2];y=c[j+16>>2]|0;g[y+8>>2]=+g[y+8>>2]-b*t;g[y+12>>2]=+g[y+12>>2]-d*t;g[y+16>>2]=+g[y+16>>2]-s*t;a=a+1|0;}while((a|0)!=(v|0));return}function vf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=c[b+12>>2]|0;l=c[b+36>>2]|0;if((l|0)>=(k|0))return;if((c[b+40>>2]|0)<(k|0)){if(!k){d=0;f=l;}else{c[6436]=(c[6436]|0)+1;d=ic((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=c[b+36>>2]|0;}g=c[b+44>>2]|0;if((f|0)<=0)if(!g)e=b+48|0;else j=12;else{e=0;do{c[d+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0));j=12;}if((j|0)==12)if(!(a[b+48>>0]|0))e=b+48|0;else{c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);e=b+48|0;}a[e>>0]=1;c[b+44>>2]=d;c[b+40>>2]=k;i=b+44|0;}else{i=b+44|0;d=c[b+44>>2]|0;}Ik(d+(l<<2)|0,0,(k<<2)-(l<<2)|0)|0;c[b+36>>2]=k;h=c[b+56>>2]|0;if((h|0)<(k|0)){if((c[b+60>>2]|0)<(k|0)){if(!k){d=0;f=h;}else{c[6436]=(c[6436]|0)+1;d=ic((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=c[b+56>>2]|0;}g=c[b+64>>2]|0;if((f|0)<=0)if(!g)e=b+68|0;else j=26;else{e=0;do{c[d+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0;}while((e|0)!=(f|0));j=26;}if((j|0)==26)if(!(a[b+68>>0]|0))e=b+68|0;else{c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);e=b+68|0;}a[e>>0]=1;c[b+64>>2]=d;c[b+60>>2]=k;}else d=c[b+64>>2]|0;Ik(d+(h<<2)|0,0,(k<<2)-(h<<2)|0)|0;}c[b+56>>2]=k;if((k|0)>0){Ik(c[i>>2]|0,-1,k<<2|0)|0;Ik(c[b+64>>2]|0,-1,k<<2|0)|0;}if((l|0)<=0)return;g=c[b+16>>2]|0;e=c[i>>2]|0;f=c[b+64>>2]|0;d=0;do{k=c[(c[g+(d<<4)+4>>2]|0)+12>>2]<<16|c[(c[g+(d<<4)>>2]|0)+12>>2];k=(k+~(k<<15)>>10^k+~(k<<15))*9|0;k=e+((((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11))&(c[b+12>>2]|0)+-1)<<2)|0;c[f+(d<<2)>>2]=c[k>>2];c[k>>2]=d;d=d+1|0;}while((d|0)!=(l|0));return}
function ic(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;H=l;l=l+16|0;do if(a>>>0<245){r=a>>>0<11?16:a+11&-8;q=c[6454]|0;if(q>>>(r>>>3)&3|0){a=25856+((q>>>(r>>>3)&1^1)+(r>>>3)<<1<<2)|0;b=c[a+8>>2]|0;d=c[b+8>>2]|0;do if((a|0)!=(d|0)){if(d>>>0<(c[6458]|0)>>>0)Ua();if((c[d+12>>2]|0)==(b|0)){c[d+12>>2]=a;c[a+8>>2]=d;break}else Ua();}else c[6454]=q&~(1<<(q>>>(r>>>3)&1^1)+(r>>>3));while(0);G=(q>>>(r>>>3)&1^1)+(r>>>3)<<3;c[b+4>>2]=G|3;c[b+G+4>>2]=c[b+G+4>>2]|1;G=b+8|0;l=H;return G|0}p=c[6456]|0;if(r>>>0>p>>>0){if(q>>>(r>>>3)|0){a=q>>>(r>>>3)<<(r>>>3)&(2<<(r>>>3)|0-(2<<(r>>>3)));e=((a&0-a)+-1|0)>>>(((a&0-a)+-1|0)>>>12&16);d=e>>>(e>>>5&8)>>>(e>>>(e>>>5&8)>>>2&4);d=(e>>>5&8|((a&0-a)+-1|0)>>>12&16|e>>>(e>>>5&8)>>>2&4|d>>>1&2|d>>>(d>>>1&2)>>>1&1)+(d>>>(d>>>1&2)>>>(d>>>(d>>>1&2)>>>1&1))|0;e=c[25856+(d<<1<<2)+8>>2]|0;a=c[e+8>>2]|0;do if((25856+(d<<1<<2)|0)!=(a|0)){if(a>>>0<(c[6458]|0)>>>0)Ua();if((c[a+12>>2]|0)==(e|0)){c[a+12>>2]=25856+(d<<1<<2);c[25856+(d<<1<<2)+8>>2]=a;f=q;break}else Ua();}else{c[6454]=q&~(1<<d);f=q&~(1<<d);}while(0);c[e+4>>2]=r|3;c[e+r+4>>2]=(d<<3)-r|1;c[e+r+((d<<3)-r)>>2]=(d<<3)-r;if(p|0){b=c[6459]|0;if(f&1<<(p>>>3)){a=c[25856+(p>>>3<<1<<2)+8>>2]|0;if(a>>>0<(c[6458]|0)>>>0)Ua();else{h=a;i=25856+(p>>>3<<1<<2)+8|0;}}else{c[6454]=f|1<<(p>>>3);h=25856+(p>>>3<<1<<2)|0;i=25856+(p>>>3<<1<<2)+8|0;}c[i>>2]=b;c[h+12>>2]=b;c[b+8>>2]=h;c[b+12>>2]=25856+(p>>>3<<1<<2);}c[6456]=(d<<3)-r;c[6459]=e+r;G=e+8|0;l=H;return G|0}k=c[6455]|0;if(k){b=((k&0-k)+-1|0)>>>(((k&0-k)+-1|0)>>>12&16);a=b>>>(b>>>5&8)>>>(b>>>(b>>>5&8)>>>2&4);a=c[26120+((b>>>5&8|((k&0-k)+-1|0)>>>12&16|b>>>(b>>>5&8)>>>2&4|a>>>1&2|a>>>(a>>>1&2)>>>1&1)+(a>>>(a>>>1&2)>>>(a>>>(a>>>1&2)>>>1&1))<<2)>>2]|0;b=(c[a+4>>2]&-8)-r|0;d=c[a+16+(((c[a+16>>2]|0)==0&1)<<2)>>2]|0;if(!d){j=a;h=b;}else{do{F=(c[d+4>>2]&-8)-r|0;G=F>>>0<b>>>0;b=G?F:b;a=G?d:a;d=c[d+16+(((c[d+16>>2]|0)==0&1)<<2)>>2]|0;}while((d|0)!=0);j=a;h=b;}f=c[6458]|0;if(j>>>0<f>>>0)Ua();i=j+r|0;if(j>>>0>=i>>>0)Ua();g=c[j+24>>2]|0;a=c[j+12>>2]|0;do if((a|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){m=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d;}}if(b>>>0<f>>>0)Ua();else{c[b>>2]=0;m=a;break}}else{b=c[j+8>>2]|0;if(b>>>0<f>>>0)Ua();if((c[b+12>>2]|0)!=(j|0))Ua();if((c[a+8>>2]|0)==(j|0)){c[b+12>>2]=a;c[a+8>>2]=b;m=a;break}else Ua();}while(0);a:do if(g|0){a=c[j+28>>2]|0;do if((j|0)==(c[26120+(a<<2)>>2]|0)){c[26120+(a<<2)>>2]=m;if(!m){c[6455]=k&~(1<<a);break a}}else if(g>>>0>=(c[6458]|0)>>>0){c[g+16+(((c[g+16>>2]|0)!=(j|0)&1)<<2)>>2]=m;if(!m)break a;else break}else Ua();while(0);b=c[6458]|0;if(m>>>0<b>>>0)Ua();c[m+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Ua();else{c[m+16>>2]=a;c[a+24>>2]=m;break}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[6458]|0)>>>0)Ua();else{c[m+20>>2]=a;c[a+24>>2]=m;break}}while(0);if(h>>>0<16){G=h+r|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1;}else{c[j+4>>2]=r|3;c[i+4>>2]=h|1;c[i+h>>2]=h;if(p|0){b=c[6459]|0;if(q&1<<(p>>>3)){a=c[25856+(p>>>3<<1<<2)+8>>2]|0;if(a>>>0<(c[6458]|0)>>>0)Ua();else{n=a;o=25856+(p>>>3<<1<<2)+8|0;}}else{c[6454]=q|1<<(p>>>3);n=25856+(p>>>3<<1<<2)|0;o=25856+(p>>>3<<1<<2)+8|0;}c[o>>2]=b;c[n+12>>2]=b;c[b+8>>2]=n;c[b+12>>2]=25856+(p>>>3<<1<<2);}c[6456]=h;c[6459]=i;}G=j+8|0;l=H;return G|0}}}else if(a>>>0<=4294967231){r=a+11&-8;k=c[6455]|0;if(k){if((a+11|0)>>>8)if(r>>>0>16777215)i=31;else{i=(a+11|0)>>>8<<((((a+11|0)>>>8)+1048320|0)>>>16&8);i=14-((i+520192|0)>>>16&4|(((a+11|0)>>>8)+1048320|0)>>>16&8|((i<<((i+520192|0)>>>16&4))+245760|0)>>>16&2)+(i<<((i+520192|0)>>>16&4)<<(((i<<((i+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;i=r>>>(i+7|0)&1|i<<1;}else i=0;b=c[26120+(i<<2)>>2]|0;b:do if(!b){b=0;a=0;d=0-r|0;z=81;}else{a=0;d=0-r|0;h=r<<((i|0)==31?0:25-(i>>>1)|0);f=0;while(1){e=(c[b+4>>2]&-8)-r|0;if(e>>>0<d>>>0)if(!e){a=b;d=0;e=b;z=85;break b}else{a=b;d=e;}e=c[b+20>>2]|0;b=c[b+16+(h>>>31<<2)>>2]|0;f=(e|0)==0|(e|0)==(b|0)?f:e;e=(b|0)==0;if(e){b=f;z=81;break}else h=h<<((e^1)&1);}}while(0);if((z|0)==81){if((b|0)==0&(a|0)==0){a=2<<i;if(!(k&(a|0-a)))break;n=(k&(a|0-a)&0-(k&(a|0-a)))+-1|0;o=n>>>(n>>>12&16)>>>(n>>>(n>>>12&16)>>>5&8);b=o>>>(o>>>2&4)>>>(o>>>(o>>>2&4)>>>1&2);a=0;b=c[26120+((n>>>(n>>>12&16)>>>5&8|n>>>12&16|o>>>2&4|o>>>(o>>>2&4)>>>1&2|b>>>1&1)+(b>>>(b>>>1&1))<<2)>>2]|0;}if(!b){j=a;i=d;}else{e=b;z=85;}}if((z|0)==85)while(1){z=0;b=(c[e+4>>2]&-8)-r|0;o=b>>>0<d>>>0;b=o?b:d;a=o?e:a;e=c[e+16+(((c[e+16>>2]|0)==0&1)<<2)>>2]|0;if(!e){j=a;i=b;break}else{d=b;z=85;}}if((j|0)!=0?i>>>0<((c[6456]|0)-r|0)>>>0:0){f=c[6458]|0;if(j>>>0<f>>>0)Ua();h=j+r|0;if(j>>>0>=h>>>0)Ua();g=c[j+24>>2]|0;a=c[j+12>>2]|0;do if((a|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){p=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d;}}if(b>>>0<f>>>0)Ua();else{c[b>>2]=0;p=a;break}}else{b=c[j+8>>2]|0;if(b>>>0<f>>>0)Ua();if((c[b+12>>2]|0)!=(j|0))Ua();if((c[a+8>>2]|0)==(j|0)){c[b+12>>2]=a;c[a+8>>2]=b;p=a;break}else Ua();}while(0);c:do if(g){a=c[j+28>>2]|0;do if((j|0)==(c[26120+(a<<2)>>2]|0)){c[26120+(a<<2)>>2]=p;if(!p){c[6455]=k&~(1<<a);w=k&~(1<<a);break c}}else if(g>>>0>=(c[6458]|0)>>>0){c[g+16+(((c[g+16>>2]|0)!=(j|0)&1)<<2)>>2]=p;if(!p){w=k;break c}else break}else Ua();while(0);b=c[6458]|0;if(p>>>0<b>>>0)Ua();c[p+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Ua();else{c[p+16>>2]=a;c[a+24>>2]=p;break}while(0);a=c[j+20>>2]|0;if(a)if(a>>>0<(c[6458]|0)>>>0)Ua();else{c[p+20>>2]=a;c[a+24>>2]=p;w=k;break}else w=k;}else w=k;while(0);do if(i>>>0>=16){c[j+4>>2]=r|3;c[h+4>>2]=i|1;c[h+i>>2]=i;b=i>>>3;if(i>>>0<256){a=c[6454]|0;if(a&1<<b){a=c[25856+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[6458]|0)>>>0)Ua();else{q=a;v=25856+(b<<1<<2)+8|0;}}else{c[6454]=a|1<<b;q=25856+(b<<1<<2)|0;v=25856+(b<<1<<2)+8|0;}c[v>>2]=h;c[q+12>>2]=h;c[h+8>>2]=q;c[h+12>>2]=25856+(b<<1<<2);break}a=i>>>8;if(a)if(i>>>0>16777215)a=31;else{G=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);a=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(G+245760|0)>>>16&2)+(G<<((G+245760|0)>>>16&2)>>>15)|0;a=i>>>(a+7|0)&1|a<<1;}else a=0;d=26120+(a<<2)|0;c[h+28>>2]=a;c[h+16+4>>2]=0;c[h+16>>2]=0;b=1<<a;if(!(w&b)){c[6455]=w|b;c[d>>2]=h;c[h+24>>2]=d;c[h+12>>2]=h;c[h+8>>2]=h;break}b=i<<((a|0)==31?0:25-(a>>>1)|0);e=c[d>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(i|0)){z=139;break}d=e+16+(b>>>31<<2)|0;a=c[d>>2]|0;if(!a){z=136;break}else{b=b<<1;e=a;}}if((z|0)==136)if(d>>>0<(c[6458]|0)>>>0)Ua();else{c[d>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}else if((z|0)==139){a=e+8|0;b=c[a>>2]|0;G=c[6458]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=h;c[a>>2]=h;c[h+8>>2]=b;c[h+12>>2]=e;c[h+24>>2]=0;break}else Ua();}}else{G=i+r|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1;}while(0);G=j+8|0;l=H;return G|0}}}else r=-1;while(0);d=c[6456]|0;if(d>>>0>=r>>>0){a=d-r|0;b=c[6459]|0;if(a>>>0>15){G=b+r|0;c[6459]=G;c[6456]=a;c[G+4>>2]=a|1;c[G+a>>2]=a;c[b+4>>2]=r|3;}else{c[6456]=0;c[6459]=0;c[b+4>>2]=d|3;c[b+d+4>>2]=c[b+d+4>>2]|1;}G=b+8|0;l=H;return G|0}f=c[6457]|0;if(f>>>0>r>>>0){E=f-r|0;c[6457]=E;G=c[6460]|0;F=G+r|0;c[6460]=F;c[F+4>>2]=E|1;c[G+4>>2]=r|3;G=G+8|0;l=H;return G|0}if(!(c[6572]|0)){c[6574]=4096;c[6573]=4096;c[6575]=-1;c[6576]=-1;c[6577]=0;c[6565]=0;c[H>>2]=H&-16^1431655768;c[6572]=H&-16^1431655768;a=4096;}else a=c[6574]|0;h=r+48|0;i=r+47|0;k=a+i|0;j=0-a|0;if((k&j)>>>0<=r>>>0){G=0;l=H;return G|0}a=c[6564]|0;if(a|0?(w=c[6562]|0,(w+(k&j)|0)>>>0<=w>>>0?1:(w+(k&j)|0)>>>0>a>>>0):0){G=0;l=H;return G|0}d:do if(!(c[6565]&4)){d=c[6460]|0;e:do if(d){b=26264;while(1){a=c[b>>2]|0;if(a>>>0<=d>>>0?(s=b+4|0,(a+(c[s>>2]|0)|0)>>>0>d>>>0):0)break;a=c[b+8>>2]|0;if(!a){z=163;break e}else b=a;}if((k-f&j)>>>0<2147483647){a=fo(k-f&j|0)|0;if((a|0)==((c[b>>2]|0)+(c[s>>2]|0)|0))if((a|0)==(-1|0))a=k-f&j;else{h=k-f&j;g=a;z=180;break d}else{e=a;d=k-f&j;z=171;}}else a=0;}else z=163;while(0);do if((z|0)==163){b=fo(0)|0;if((b|0)!=(-1|0)?(u=c[6573]|0,u=((u+-1&b|0)==0?0:(u+-1+b&0-u)-b|0)+(k&j)|0,t=c[6562]|0,u>>>0>r>>>0&u>>>0<2147483647):0){w=c[6564]|0;if(w|0?(u+t|0)>>>0<=t>>>0|(u+t|0)>>>0>w>>>0:0){a=0;break}a=fo(u|0)|0;if((a|0)==(b|0)){h=u;g=b;z=180;break d}else{e=a;d=u;z=171;}}else a=0;}while(0);do if((z|0)==171){b=0-d|0;if(!(h>>>0>d>>>0&(d>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){a=0;break}else{h=d;g=e;z=180;break d}a=c[6574]|0;a=i-d+a&0-a;if(a>>>0>=2147483647){h=d;g=e;z=180;break d}if((fo(a|0)|0)==(-1|0)){fo(b|0)|0;a=0;break}else{h=a+d|0;g=e;z=180;break d}}while(0);c[6565]=c[6565]|4;z=178;}else{a=0;z=178;}while(0);if(((z|0)==178?(k&j)>>>0<2147483647:0)?(g=fo(k&j|0)|0,x=fo(0)|0,y=(x-g|0)>>>0>(r+40|0)>>>0,!((g|0)==(-1|0)|y^1|g>>>0<x>>>0&((g|0)!=(-1|0)&(x|0)!=(-1|0))^1)):0){h=y?x-g|0:a;z=180;}if((z|0)==180){a=(c[6562]|0)+h|0;c[6562]=a;if(a>>>0>(c[6563]|0)>>>0)c[6563]=a;i=c[6460]|0;do if(i){a=26264;while(1){b=c[a>>2]|0;d=a+4|0;e=c[d>>2]|0;if((g|0)==(b+e|0)){z=190;break}f=c[a+8>>2]|0;if(!f)break;else a=f;}if(((z|0)==190?(c[a+12>>2]&8|0)==0:0)?i>>>0<g>>>0&i>>>0>=b>>>0:0){c[d>>2]=e+h;F=(i+8&7|0)==0?0:0-(i+8)&7;G=(c[6457]|0)+(h-F)|0;c[6460]=i+F;c[6457]=G;c[i+F+4>>2]=G|1;c[i+F+G+4>>2]=40;c[6461]=c[6576];break}a=c[6458]|0;if(g>>>0<a>>>0){c[6458]=g;j=g;}else j=a;d=g+h|0;a=26264;while(1){if((c[a>>2]|0)==(d|0)){z=198;break}b=c[a+8>>2]|0;if(!b)break;else a=b;}if((z|0)==198?(c[a+12>>2]&8|0)==0:0){c[a>>2]=g;m=a+4|0;c[m>>2]=(c[m>>2]|0)+h;m=g+8|0;m=g+((m&7|0)==0?0:0-m&7)|0;a=d+((d+8&7|0)==0?0:0-(d+8)&7)|0;k=m+r|0;f=a-m-r|0;c[m+4>>2]=r|3;do if((a|0)!=(i|0)){if((a|0)==(c[6459]|0)){G=(c[6456]|0)+f|0;c[6456]=G;c[6459]=k;c[k+4>>2]=G|1;c[k+G>>2]=G;break}i=c[a+4>>2]|0;if((i&3|0)==1){f:do if(i>>>0>=256){h=c[a+24>>2]|0;b=c[a+12>>2]|0;do if((b|0)==(a|0)){b=c[a+16+4>>2]|0;if(!b){b=c[a+16>>2]|0;if(!b){E=0;break}else g=a+16|0;}else g=a+16+4|0;while(1){d=b+20|0;e=c[d>>2]|0;if(e|0){b=e;g=d;continue}d=b+16|0;e=c[d>>2]|0;if(!e)break;else{b=e;g=d;}}if(g>>>0<j>>>0)Ua();else{c[g>>2]=0;E=b;break}}else{d=c[a+8>>2]|0;if(d>>>0<j>>>0)Ua();if((c[d+12>>2]|0)!=(a|0))Ua();if((c[b+8>>2]|0)==(a|0)){c[d+12>>2]=b;c[b+8>>2]=d;E=b;break}else Ua();}while(0);if(!h)break;b=c[a+28>>2]|0;do if((a|0)!=(c[26120+(b<<2)>>2]|0))if(h>>>0>=(c[6458]|0)>>>0){c[h+16+(((c[h+16>>2]|0)!=(a|0)&1)<<2)>>2]=E;if(!E)break f;else break}else Ua();else{c[26120+(b<<2)>>2]=E;if(E|0)break;c[6455]=c[6455]&~(1<<b);break f}while(0);d=c[6458]|0;if(E>>>0<d>>>0)Ua();c[E+24>>2]=h;b=c[a+16>>2]|0;do if(b|0)if(b>>>0<d>>>0)Ua();else{c[E+16>>2]=b;c[b+24>>2]=E;break}while(0);b=c[a+16+4>>2]|0;if(!b)break;if(b>>>0<(c[6458]|0)>>>0)Ua();else{c[E+20>>2]=b;c[b+24>>2]=E;break}}else{b=c[a+8>>2]|0;d=c[a+12>>2]|0;do if((b|0)!=(25856+(i>>>3<<1<<2)|0)){if(b>>>0<j>>>0)Ua();if((c[b+12>>2]|0)==(a|0))break;Ua();}while(0);if((d|0)==(b|0)){c[6454]=c[6454]&~(1<<(i>>>3));break}do if((d|0)==(25856+(i>>>3<<1<<2)|0))D=d+8|0;else{if(d>>>0<j>>>0)Ua();if((c[d+8>>2]|0)==(a|0)){D=d+8|0;break}Ua();}while(0);c[b+12>>2]=d;c[D>>2]=b;}while(0);a=a+(i&-8)|0;f=(i&-8)+f|0;}b=a+4|0;c[b>>2]=c[b>>2]&-2;c[k+4>>2]=f|1;c[k+f>>2]=f;b=f>>>3;if(f>>>0<256){a=c[6454]|0;do if(!(a&1<<b)){c[6454]=a|1<<b;F=25856+(b<<1<<2)|0;G=25856+(b<<1<<2)+8|0;}else{a=c[25856+(b<<1<<2)+8>>2]|0;if(a>>>0>=(c[6458]|0)>>>0){F=a;G=25856+(b<<1<<2)+8|0;break}Ua();}while(0);c[G>>2]=k;c[F+12>>2]=k;c[k+8>>2]=F;c[k+12>>2]=25856+(b<<1<<2);break}a=f>>>8;do if(!a)a=0;else{if(f>>>0>16777215){a=31;break}G=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);a=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(G+245760|0)>>>16&2)+(G<<((G+245760|0)>>>16&2)>>>15)|0;a=f>>>(a+7|0)&1|a<<1;}while(0);e=26120+(a<<2)|0;c[k+28>>2]=a;c[k+16+4>>2]=0;c[k+16>>2]=0;b=c[6455]|0;d=1<<a;if(!(b&d)){c[6455]=b|d;c[e>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}b=f<<((a|0)==31?0:25-(a>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){z=265;break}d=e+16+(b>>>31<<2)|0;a=c[d>>2]|0;if(!a){z=262;break}else{b=b<<1;e=a;}}if((z|0)==262)if(d>>>0<(c[6458]|0)>>>0)Ua();else{c[d>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}else if((z|0)==265){a=e+8|0;b=c[a>>2]|0;G=c[6458]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=k;c[a>>2]=k;c[k+8>>2]=b;c[k+12>>2]=e;c[k+24>>2]=0;break}else Ua();}}else{G=(c[6457]|0)+f|0;c[6457]=G;c[6460]=k;c[k+4>>2]=G|1;}while(0);G=m+8|0;l=H;return G|0}a=26264;while(1){b=c[a>>2]|0;if(b>>>0<=i>>>0?(A=b+(c[a+4>>2]|0)|0,A>>>0>i>>>0):0)break;a=c[a+8>>2]|0;}f=A+-47+((A+-47+8&7|0)==0?0:0-(A+-47+8)&7)|0;f=f>>>0<(i+16|0)>>>0?i:f;a=g+8|0;a=(a&7|0)==0?0:0-a&7;G=g+a|0;a=h+-40-a|0;c[6460]=G;c[6457]=a;c[G+4>>2]=a|1;c[G+a+4>>2]=40;c[6461]=c[6576];c[f+4>>2]=27;c[f+8>>2]=c[6566];c[f+8+4>>2]=c[6567];c[f+8+8>>2]=c[6568];c[f+8+12>>2]=c[6569];c[6566]=g;c[6567]=h;c[6569]=0;c[6568]=f+8;a=f+24|0;do{G=a;a=a+4|0;c[a>>2]=7;}while((G+8|0)>>>0<A>>>0);if((f|0)!=(i|0)){c[f+4>>2]=c[f+4>>2]&-2;c[i+4>>2]=f-i|1;c[f>>2]=f-i;if((f-i|0)>>>0<256){b=25856+((f-i|0)>>>3<<1<<2)|0;a=c[6454]|0;if(a&1<<((f-i|0)>>>3)){a=c[b+8>>2]|0;if(a>>>0<(c[6458]|0)>>>0)Ua();else{B=a;C=b+8|0;}}else{c[6454]=a|1<<((f-i|0)>>>3);B=b;C=b+8|0;}c[C>>2]=i;c[B+12>>2]=i;c[i+8>>2]=B;c[i+12>>2]=b;break}if((f-i|0)>>>8)if((f-i|0)>>>0>16777215)a=31;else{a=(f-i|0)>>>8<<((((f-i|0)>>>8)+1048320|0)>>>16&8);a=14-((a+520192|0)>>>16&4|(((f-i|0)>>>8)+1048320|0)>>>16&8|((a<<((a+520192|0)>>>16&4))+245760|0)>>>16&2)+(a<<((a+520192|0)>>>16&4)<<(((a<<((a+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;a=(f-i|0)>>>(a+7|0)&1|a<<1;}else a=0;e=26120+(a<<2)|0;c[i+28>>2]=a;c[i+20>>2]=0;c[i+16>>2]=0;b=c[6455]|0;d=1<<a;if(!(b&d)){c[6455]=b|d;c[e>>2]=i;c[i+24>>2]=e;c[i+12>>2]=i;c[i+8>>2]=i;break}b=f-i<<((a|0)==31?0:25-(a>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f-i|0)){z=292;break}d=e+16+(b>>>31<<2)|0;a=c[d>>2]|0;if(!a){z=289;break}else{b=b<<1;e=a;}}if((z|0)==289)if(d>>>0<(c[6458]|0)>>>0)Ua();else{c[d>>2]=i;c[i+24>>2]=e;c[i+12>>2]=i;c[i+8>>2]=i;break}else if((z|0)==292){a=e+8|0;b=c[a>>2]|0;G=c[6458]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=i;c[a>>2]=i;c[i+8>>2]=b;c[i+12>>2]=e;c[i+24>>2]=0;break}else Ua();}}}else{G=c[6458]|0;if((G|0)==0|g>>>0<G>>>0)c[6458]=g;c[6566]=g;c[6567]=h;c[6569]=0;c[6463]=c[6572];c[6462]=-1;a=0;do{G=25856+(a<<1<<2)|0;c[G+12>>2]=G;c[G+8>>2]=G;a=a+1|0;}while((a|0)!=32);G=g+8|0;G=(G&7|0)==0?0:0-G&7;F=g+G|0;G=h+-40-G|0;c[6460]=F;c[6457]=G;c[F+4>>2]=G|1;c[F+G+4>>2]=40;c[6461]=c[6576];}while(0);a=c[6457]|0;if(a>>>0>r>>>0){E=a-r|0;c[6457]=E;G=c[6460]|0;F=G+r|0;c[6460]=F;c[F+4>>2]=E|1;c[G+4>>2]=r|3;G=G+8|0;l=H;return G|0}}c[6581]=12;G=0;l=H;return G|0}function jc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0;Q=l;l=l+448|0;if(!(a[b+527>>0]|0)){l=Q;return}P=c[b+28>>2]|0;C=+g[b+348>>2];B=+g[b+352>>2];J=+g[b+356>>2];D=+g[P+52>>2];E=C*+g[P+4>>2]+B*+g[P+8>>2]+J*+g[P+12>>2]+D;F=+g[P+56>>2];H=C*+g[P+20>>2]+B*+g[P+24>>2]+J*+g[P+28>>2]+F;I=+g[P+60>>2];J=C*+g[P+36>>2]+B*+g[P+40>>2]+J*+g[P+44>>2]+I;P=c[b+32>>2]|0;B=+g[b+412>>2];C=+g[b+416>>2];r=+g[b+420>>2];k=+g[P+52>>2];m=B*+g[P+4>>2]+C*+g[P+8>>2]+r*+g[P+12>>2]+k;n=+g[P+56>>2];o=B*+g[P+20>>2]+C*+g[P+24>>2]+r*+g[P+28>>2]+n;q=+g[P+60>>2];r=B*+g[P+36>>2]+C*+g[P+40>>2]+r*+g[P+44>>2]+q;if(!(a[b+524>>0]|0)){A=+g[d+192>>2]+ +g[d+80>>2];B=+g[d+196>>2]+ +g[d+84>>2];z=+g[d+200>>2]+ +g[d+88>>2];C=+g[e+192>>2]+ +g[e+80>>2];y=+g[e+196>>2]+ +g[e+84>>2];w=+g[e+200>>2]+ +g[e+88>>2];s=+g[d+176>>2]+ +g[d+64>>2]+((J-I)*B-(H-F)*z)-(+g[e+176>>2]+ +g[e+64>>2]+((r-q)*y-(o-n)*w));w=+g[d+180>>2]+ +g[d+68>>2]+((E-D)*z-(J-I)*A)-(+g[e+180>>2]+ +g[e+68>>2]+((m-k)*w-(r-q)*C));y=+g[d+184>>2]+ +g[d+72>>2]+((H-F)*A-(E-D)*B)-(+g[e+184>>2]+ +g[e+72>>2]+((o-n)*C-(m-k)*y));t=(c[d+240>>2]|0)==0;p=0;do{C=1.0/+g[b+48+(p*84|0)+80>>2];u=b+48+(p*84|0)|0;B=+g[u>>2];v=b+48+(p*84|0)+4|0;A=+g[v>>2];x=b+48+(p*84|0)+8|0;z=+g[x>>2];z=C*(((E-m)*B+(H-o)*A+(J-r)*z)*-.30000001192092896/f)-C*(s*B+w*A+y*z);g[b+36>>2]=+g[b+36>>2]+z;A=+g[x>>2];B=+g[v>>2];C=+g[u>>2];h=c[b+28>>2]|0;i=+g[h+344>>2];if(!t){T=((H-F)*A-(J-I)*B)*+g[h+296>>2]+((J-I)*C-(E-D)*A)*+g[h+300>>2]+((E-D)*B-(H-F)*C)*+g[h+304>>2];R=((H-F)*A-(J-I)*B)*+g[h+280>>2]+((J-I)*C-(E-D)*A)*+g[h+284>>2]+((E-D)*B-(H-F)*C)*+g[h+288>>2];S=((H-F)*A-(J-I)*B)*+g[h+264>>2]+((J-I)*C-(E-D)*A)*+g[h+268>>2]+((E-D)*B-(H-F)*C)*+g[h+272>>2];V=z*B*i*+g[d+116>>2];U=z*A*i*+g[d+120>>2];g[d+64>>2]=z*C*i*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=V+ +g[d+68>>2];g[d+72>>2]=U+ +g[d+72>>2];R=R*z*+g[d+100>>2];i=T*z*+g[d+104>>2];g[d+80>>2]=S*z*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=R+ +g[d+84>>2];g[d+88>>2]=i+ +g[d+88>>2];}h=c[b+32>>2]|0;i=+g[h+344>>2];if(c[e+240>>2]|0){V=((o-n)*A-(r-q)*B)*+g[h+296>>2]+((r-q)*C-(m-k)*A)*+g[h+300>>2]+((m-k)*B-(o-n)*C)*+g[h+304>>2];U=((o-n)*A-(r-q)*B)*+g[h+280>>2]+((r-q)*C-(m-k)*A)*+g[h+284>>2]+((m-k)*B-(o-n)*C)*+g[h+288>>2];T=((o-n)*A-(r-q)*B)*+g[h+264>>2]+((r-q)*C-(m-k)*A)*+g[h+268>>2]+((m-k)*B-(o-n)*C)*+g[h+272>>2];R=i*+g[v>>2]*-z*+g[e+116>>2];S=i*+g[x>>2]*-z*+g[e+120>>2];g[e+64>>2]=+g[e+112>>2]*i*+g[u>>2]*-z+ +g[e+64>>2];g[e+68>>2]=R+ +g[e+68>>2];g[e+72>>2]=S+ +g[e+72>>2];U=U*+g[e+100>>2]*-z;V=V*+g[e+104>>2]*-z;g[e+80>>2]=T*+g[e+96>>2]*-z+ +g[e+80>>2];g[e+84>>2]=U+ +g[e+84>>2];g[e+88>>2]=V+ +g[e+88>>2];}p=p+1|0;}while((p|0)!=3)}do if(!(a[b+552>>0]|0)){i=+g[b+440>>2];if(!(i>1.1920928955078125e-07)){K=d+80|0;p=d+196|0;L=d+84|0;t=d+200|0;M=d+88|0;u=e+192|0;N=e+80|0;v=e+196|0;O=e+84|0;x=e+200|0;P=e+88|0;h=d+192|0;break}k=+g[e+192>>2]+ +g[e+80>>2]-(+g[d+192>>2]+ +g[d+80>>2]);m=+g[e+196>>2]+ +g[e+84>>2]-(+g[d+196>>2]+ +g[d+84>>2]);n=+g[e+200>>2]+ +g[e+88>>2]-(+g[d+200>>2]+ +g[d+88>>2]);if(k*k+m*m+n*n>1.1920928955078125e-07){D=1.0/+G(+(k*k+m*m+n*n));h=c[b+28>>2]|0;q=+g[h+264>>2];r=+g[h+280>>2];s=+g[h+296>>2];w=+g[h+268>>2];y=+g[h+284>>2];z=+g[h+300>>2];A=+g[h+272>>2];B=+g[h+288>>2];C=+g[h+304>>2];h=c[b+32>>2]|0;i=i*(1.0/(k*D*(q*k*D+m*D*r+n*D*s)+m*D*(k*D*w+m*D*y+n*D*z)+n*D*(k*D*A+m*D*B+n*D*C)+(k*D*(k*D*+g[h+264>>2]+m*D*+g[h+280>>2]+n*D*+g[h+296>>2])+m*D*(k*D*+g[h+268>>2]+m*D*+g[h+284>>2]+n*D*+g[h+300>>2])+n*D*(k*D*+g[h+272>>2]+m*D*+g[h+288>>2]+n*D*+g[h+304>>2]))));D=+G(+(n*i*n*i+(k*i*k*i+m*i*m*i)));o=1.0/D*k*i;k=1.0/D*m*i;i=1.0/D*n*i;if(c[d+240>>2]|0){V=D*0.0*+g[d+116>>2];U=D*0.0*+g[d+120>>2];g[d+64>>2]=D*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=V+ +g[d+68>>2];g[d+72>>2]=U+ +g[d+72>>2];U=(o*r+k*y+i*B)*D*+g[d+100>>2];V=(o*s+k*z+i*C)*D*+g[d+104>>2];g[d+80>>2]=(o*q+k*w+i*A)*D*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=U+ +g[d+84>>2];g[d+88>>2]=V+ +g[d+88>>2];h=c[b+32>>2]|0;}if(c[e+240>>2]|0){V=o*+g[h+296>>2]+k*+g[h+300>>2]+i*+g[h+304>>2];U=o*+g[h+280>>2]+k*+g[h+284>>2]+i*+g[h+288>>2];T=o*+g[h+264>>2]+k*+g[h+268>>2]+i*+g[h+272>>2];R=D*-0.0*+g[e+116>>2];S=D*-0.0*+g[e+120>>2];g[e+64>>2]=D*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=R+ +g[e+68>>2];g[e+72>>2]=S+ +g[e+72>>2];U=U*+g[e+100>>2]*-D;V=V*+g[e+104>>2]*-D;g[e+80>>2]=T*+g[e+96>>2]*-D+ +g[e+80>>2];g[e+84>>2]=U+ +g[e+84>>2];g[e+88>>2]=V+ +g[e+88>>2];K=d+80|0;p=d+196|0;L=d+84|0;t=d+200|0;M=d+88|0;u=e+192|0;N=e+80|0;v=e+196|0;O=e+84|0;x=e+200|0;P=e+88|0;h=d+192|0;}else{K=d+80|0;p=d+196|0;L=d+84|0;t=d+200|0;M=d+88|0;u=e+192|0;N=e+80|0;v=e+196|0;O=e+84|0;x=e+200|0;P=e+88|0;h=d+192|0;}}else{K=d+80|0;p=d+196|0;L=d+84|0;t=d+200|0;M=d+88|0;u=e+192|0;N=e+80|0;v=e+196|0;O=e+84|0;x=e+200|0;P=e+88|0;h=d+192|0;}}else{O=c[b+28>>2]|0;c[Q+352>>2]=c[O+4>>2];c[Q+352+4>>2]=c[O+4+4>>2];c[Q+352+8>>2]=c[O+4+8>>2];c[Q+352+12>>2]=c[O+4+12>>2];c[Q+352+16>>2]=c[O+20>>2];c[Q+352+16+4>>2]=c[O+20+4>>2];c[Q+352+16+8>>2]=c[O+20+8>>2];c[Q+352+16+12>>2]=c[O+20+12>>2];c[Q+352+32>>2]=c[O+36>>2];c[Q+352+32+4>>2]=c[O+36+4>>2];c[Q+352+32+8>>2]=c[O+36+8>>2];c[Q+352+32+12>>2]=c[O+36+12>>2];c[Q+352+48>>2]=c[O+52>>2];c[Q+352+48+4>>2]=c[O+52+4>>2];c[Q+352+48+8>>2]=c[O+52+8>>2];c[Q+352+48+12>>2]=c[O+52+12>>2];O=c[b+32>>2]|0;c[Q+288>>2]=c[O+4>>2];c[Q+288+4>>2]=c[O+4+4>>2];c[Q+288+8>>2]=c[O+4+8>>2];c[Q+288+12>>2]=c[O+4+12>>2];c[Q+288+16>>2]=c[O+20>>2];c[Q+288+16+4>>2]=c[O+20+4>>2];c[Q+288+16+8>>2]=c[O+20+8>>2];c[Q+288+16+12>>2]=c[O+20+12>>2];c[Q+288+32>>2]=c[O+36>>2];c[Q+288+32+4>>2]=c[O+36+4>>2];c[Q+288+32+8>>2]=c[O+36+8>>2];c[Q+288+32+12>>2]=c[O+36+12>>2];c[Q+288+48>>2]=c[O+52>>2];c[Q+288+48+4>>2]=c[O+52+4>>2];c[Q+288+48+8>>2]=c[O+52+8>>2];c[Q+288+48+12>>2]=c[O+52+12>>2];T=+g[d+196>>2]+ +g[d+84>>2];s=+g[d+200>>2]+ +g[d+88>>2];g[Q+272>>2]=+g[d+192>>2]+ +g[d+80>>2];g[Q+272+4>>2]=T;g[Q+272+8>>2]=s;g[Q+272+12>>2]=0.0;s=+g[e+196>>2]+ +g[e+84>>2];T=+g[e+200>>2]+ +g[e+88>>2];g[Q+256>>2]=+g[e+192>>2]+ +g[e+80>>2];g[Q+256+4>>2]=s;g[Q+256+8>>2]=T;g[Q+256+12>>2]=0.0;c[Q+192>>2]=1065353216;O=Q+192+4|0;c[O>>2]=0;c[O+4>>2]=0;c[O+8>>2]=0;c[O+12>>2]=0;c[Q+192+20>>2]=1065353216;P=Q+192+24|0;c[P>>2]=0;c[P+4>>2]=0;c[P+8>>2]=0;c[P+12>>2]=0;c[Q+192+40>>2]=1065353216;M=Q+192+44|0;c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[M+16>>2]=0;Gg(Q+352|0,0.0,0.0,0.0,Q+272|0,f,Q+192|0);c[Q+128>>2]=1065353216;M=Q+128+4|0;c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[Q+128+20>>2]=1065353216;N=Q+128+24|0;c[N>>2]=0;c[N+4>>2]=0;c[N+8>>2]=0;c[N+12>>2]=0;c[Q+128+40>>2]=1065353216;L=Q+128+44|0;c[L>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;c[L+16>>2]=0;Gg(Q+288|0,0.0,0.0,0.0,Q+256|0,f,Q+128|0);T=+g[b+556>>2];s=+g[b+560>>2];U=+g[b+564>>2];w=+g[b+568>>2];H=T*(2.0/(T*T+s*s+U*U+w*w));B=s*(2.0/(T*T+s*s+U*U+w*w));I=U*(2.0/(T*T+s*s+U*U+w*w));X=+g[b+364>>2];W=+g[b+368>>2];_=+g[b+372>>2];k=_*(T*I-w*B)+(W*(T*B+w*I)+X*(1.0-(s*B+U*I)));m=_*(s*I+w*H)+(X*(T*B-w*I)+W*(1.0-(T*H+U*I)));n=X*(T*I+w*B)+W*(s*I-w*H)+_*(1.0-(T*H+s*B));i=+g[b+380>>2];F=+g[b+384>>2];C=+g[b+388>>2];o=(T*I-w*B)*C+(F*(T*B+w*I)+i*(1.0-(s*B+U*I)));q=(s*I+w*H)*C+(i*(T*B-w*I)+F*(1.0-(T*H+U*I)));r=i*(T*I+w*B)+F*(s*I-w*H)+C*(1.0-(T*H+s*B));R=+g[b+396>>2];D=+g[b+400>>2];A=+g[b+404>>2];S=(1.0-(s*B+U*I))*R+(T*B+w*I)*D+(T*I-w*B)*A;U=(T*B-w*I)*R+(1.0-(T*H+U*I))*D+(s*I+w*H)*A;B=(T*I+w*B)*R+(s*I-w*H)*D+(1.0-(T*H+s*B))*A;s=+g[b+300>>2];H=+g[b+316>>2];T=+g[b+332>>2];w=+g[b+304>>2];I=+g[b+320>>2];V=+g[b+336>>2];E=+g[b+308>>2];J=+g[b+324>>2];z=+g[b+340>>2];y=-+g[b+348>>2];ba=-+g[b+352>>2];Z=-+g[b+356>>2];_=X*0.0+W*0.0+_*0.0+ +g[b+412>>2]+(n*(E*y+J*ba+z*Z)+(k*(s*y+H*ba+T*Z)+m*(w*y+I*ba+V*Z)));C=i*0.0+F*0.0+C*0.0+ +g[b+416>>2]+(r*(E*y+J*ba+z*Z)+(o*(s*y+H*ba+T*Z)+q*(w*y+I*ba+V*Z)));Z=R*0.0+D*0.0+A*0.0+ +g[b+420>>2]+(B*(E*y+J*ba+z*Z)+(S*(s*y+H*ba+T*Z)+U*(w*y+I*ba+V*Z)));ba=+g[Q+128>>2];y=+g[M>>2];A=+g[Q+128+8>>2];D=+g[Q+128+16>>2];R=+g[Q+128+20>>2];F=+g[N>>2];i=+g[Q+128+32>>2];W=+g[Q+128+36>>2];X=+g[Q+128+40>>2];Y=A*Z+(ba*_+y*C)+ +g[Q+128+48>>2];$=D*_+C*R+Z*F+ +g[Q+128+52>>2];aa=_*i+C*W+Z*X+ +g[Q+128+56>>2];g[Q+64>>2]=(k*s+m*w+n*E)*ba+(o*s+q*w+r*E)*y+(S*s+U*w+B*E)*A;g[Q+64+4>>2]=(k*H+m*I+n*J)*ba+(o*H+q*I+r*J)*y+(S*H+U*I+B*J)*A;g[Q+64+8>>2]=(k*T+m*V+n*z)*ba+(o*T+q*V+r*z)*y+(S*T+U*V+B*z)*A;g[Q+64+12>>2]=0.0;g[Q+64+16>>2]=(k*s+m*w+n*E)*D+(o*s+q*w+r*E)*R+(S*s+U*w+B*E)*F;g[Q+64+20>>2]=(k*H+m*I+n*J)*D+(o*H+q*I+r*J)*R+(S*H+U*I+B*J)*F;g[Q+64+24>>2]=(k*T+m*V+n*z)*D+(o*T+q*V+r*z)*R+(S*T+U*V+B*z)*F;g[Q+64+28>>2]=0.0;g[Q+64+32>>2]=(k*s+m*w+n*E)*i+(o*s+q*w+r*E)*W+(S*s+U*w+B*E)*X;g[Q+64+36>>2]=(k*H+m*I+n*J)*i+(o*H+q*I+r*J)*W+(S*H+U*I+B*J)*X;g[Q+64+40>>2]=(k*T+m*V+n*z)*i+(o*T+q*V+r*z)*W+(S*T+U*V+B*z)*X;g[Q+64+44>>2]=0.0;g[Q+64+48>>2]=Y;g[Q+64+52>>2]=$;g[Q+64+56>>2]=aa;g[Q+64+60>>2]=0.0;aa=(S*s+U*w+B*E)*-Z+((k*s+m*w+n*E)*-_+(o*s+q*w+r*E)*-C);$=(S*H+U*I+B*J)*-Z+((k*H+m*I+n*J)*-_+(o*H+q*I+r*J)*-C);C=(S*T+U*V+B*z)*-Z+((k*T+m*V+n*z)*-_+(o*T+q*V+r*z)*-C);_=+g[Q+192>>2];Z=+g[O>>2];Y=+g[Q+192+8>>2];X=+g[Q+192+16>>2];W=+g[Q+192+20>>2];i=+g[P>>2];F=+g[Q+192+32>>2];R=+g[Q+192+36>>2];D=+g[Q+192+40>>2];A=aa*_+$*Z+C*Y+ +g[Q+192+48>>2];y=aa*X+$*W+C*i+ +g[Q+192+52>>2];C=aa*F+$*R+C*D+ +g[Q+192+56>>2];g[Q>>2]=(k*s+m*w+n*E)*_+(k*H+m*I+n*J)*Z+(k*T+m*V+n*z)*Y;g[Q+4>>2]=(o*s+q*w+r*E)*_+(o*H+q*I+r*J)*Z+(o*T+q*V+r*z)*Y;g[Q+8>>2]=(S*s+U*w+B*E)*_+(S*H+U*I+B*J)*Z+(S*T+U*V+B*z)*Y;g[Q+12>>2]=0.0;g[Q+16>>2]=(k*s+m*w+n*E)*X+(k*H+m*I+n*J)*W+(k*T+m*V+n*z)*i;g[Q+20>>2]=(o*s+q*w+r*E)*X+(o*H+q*I+r*J)*W+(o*T+q*V+r*z)*i;g[Q+24>>2]=(S*s+U*w+B*E)*X+(S*H+U*I+B*J)*W+(S*T+U*V+B*z)*i;g[Q+28>>2]=0.0;g[Q+32>>2]=(k*s+m*w+n*E)*F+(k*H+m*I+n*J)*R+(k*T+m*V+n*z)*D;g[Q+36>>2]=(o*s+q*w+r*E)*F+(o*H+q*I+r*J)*R+(o*T+q*V+r*z)*D;g[Q+40>>2]=(S*s+U*w+B*E)*F+(S*H+U*I+B*J)*R+(S*T+U*V+B*z)*D;g[Q+44>>2]=0.0;g[Q+48>>2]=A;g[Q+52>>2]=y;g[Q+56>>2]=C;g[Q+60>>2]=0.0;tf(Q+352|0,Q+64|0,Q+424|0,Q+416|0);C=+g[Q+416>>2];y=1.0/f*+g[Q+424>>2]*C;A=1.0/f*C*+g[Q+424+4>>2];C=1.0/f*C*+g[Q+424+8>>2];tf(Q+288|0,Q,Q+424|0,Q+416|0);D=+g[Q+416>>2];y=y-+g[Q+272>>2];A=A-+g[Q+272+4>>2];C=C-+g[Q+272+8>>2];z=1.0/f*+g[Q+424>>2]*D-+g[Q+256>>2];B=1.0/f*D*+g[Q+424+4>>2]-+g[Q+256+4>>2];D=1.0/f*D*+g[Q+424+8>>2]-+g[Q+256+8>>2];if(y*y+A*A+C*C>1.1920928955078125e-07){s=1.0/+G(+(y*y+A*A+C*C));P=c[b+28>>2]|0;o=y*s*(+g[P+264>>2]*y*s+A*s*+g[P+280>>2]+C*s*+g[P+296>>2])+A*s*(y*s*+g[P+268>>2]+A*s*+g[P+284>>2]+C*s*+g[P+300>>2])+C*s*(y*s*+g[P+272>>2]+A*s*+g[P+288>>2]+C*s*+g[P+304>>2]);k=y*s;n=A*s;s=C*s;}else{o=0.0;k=0.0;n=0.0;s=0.0;}if(z*z+B*B+D*D>1.1920928955078125e-07){r=1.0/+G(+(z*z+B*B+D*D));P=c[b+32>>2]|0;q=z*r*(+g[P+264>>2]*z*r+B*r*+g[P+280>>2]+D*r*+g[P+296>>2])+B*r*(z*r*+g[P+268>>2]+B*r*+g[P+284>>2]+D*r*+g[P+300>>2])+D*r*(z*r*+g[P+272>>2]+B*r*+g[P+288>>2]+D*r*+g[P+304>>2]);i=z*r;m=B*r;r=D*r;}else{q=0.0;i=0.0;m=0.0;r=0.0;}w=o*k+q*i;k=o*n+q*m;i=o*s+q*r;if(w*w+k*k+i*i>1.1920928955078125e-07){n=1.0/+G(+(w*w+k*k+i*i));p=c[b+28>>2]|0;m=w*n*(+g[p+264>>2]*w*n+k*n*+g[p+280>>2]+i*n*+g[p+296>>2])+k*n*(w*n*+g[p+268>>2]+k*n*+g[p+284>>2]+i*n*+g[p+300>>2])+i*n*(w*n*+g[p+272>>2]+k*n*+g[p+288>>2]+i*n*+g[p+304>>2]);h=c[b+32>>2]|0;n=w*n*(w*n*+g[h+264>>2]+k*n*+g[h+280>>2]+i*n*+g[h+296>>2])+k*n*(w*n*+g[h+268>>2]+k*n*+g[h+284>>2]+i*n*+g[h+300>>2])+i*n*(w*n*+g[h+272>>2]+k*n*+g[h+288>>2]+i*n*+g[h+304>>2]);w=(y*m-z*n)*(1.0/((m+n)*(m+n)));i=(A*m-B*n)*(1.0/((m+n)*(m+n)));n=(C*m-D*n)*(1.0/((m+n)*(m+n)));k=+g[b+572>>2];if(!(k>=0.0))k=w;else{m=(a[b+553>>0]|0)==0?k:k/m;q=+g[b+576>>2];r=+g[b+580>>2];s=+g[b+584>>2];o=+G(+((w+q)*(w+q)+(i+r)*(i+r)+(n+s)*(n+s)));if(o>m){k=m*(w+q)*(1.0/o)-q;n=m*(n+s)*(1.0/o)-s;i=m*(i+r)*(1.0/o)-r;}else k=w;g[b+576>>2]=k+q;g[b+580>>2]=i+r;g[b+584>>2]=n+s;}o=+G(+(k*k+i*i+n*n));m=k*(1.0/o);k=i*(1.0/o);i=n*(1.0/o);if(c[d+240>>2]|0){ba=m*+g[p+296>>2]+k*+g[p+300>>2]+i*+g[p+304>>2];aa=m*+g[p+280>>2]+k*+g[p+284>>2]+i*+g[p+288>>2];$=m*+g[p+264>>2]+k*+g[p+268>>2]+i*+g[p+272>>2];Z=o*0.0*+g[d+116>>2];_=o*0.0*+g[d+120>>2];g[d+64>>2]=o*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Z+ +g[d+68>>2];g[d+72>>2]=_+ +g[d+72>>2];aa=aa*o*+g[d+100>>2];ba=ba*o*+g[d+104>>2];g[d+80>>2]=$*o*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=aa+ +g[d+84>>2];g[d+88>>2]=ba+ +g[d+88>>2];h=c[b+32>>2]|0;}if(c[e+240>>2]|0){ba=m*+g[h+296>>2]+k*+g[h+300>>2]+i*+g[h+304>>2];aa=m*+g[h+280>>2]+k*+g[h+284>>2]+i*+g[h+288>>2];$=m*+g[h+264>>2]+k*+g[h+268>>2]+i*+g[h+272>>2];Z=o*-0.0*+g[e+116>>2];_=o*-0.0*+g[e+120>>2];g[e+64>>2]=o*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Z+ +g[e+68>>2];g[e+72>>2]=_+ +g[e+72>>2];aa=aa*+g[e+100>>2]*-o;ba=ba*+g[e+104>>2]*-o;g[e+80>>2]=$*+g[e+96>>2]*-o+ +g[e+80>>2];g[e+84>>2]=aa+ +g[e+84>>2];g[e+88>>2]=ba+ +g[e+88>>2];}}K=d+80|0;p=d+196|0;L=d+84|0;t=d+200|0;M=d+88|0;u=e+192|0;N=e+80|0;v=e+196|0;O=e+84|0;x=e+200|0;P=e+88|0;h=d+192|0;}while(0);z=+g[h>>2]+ +g[K>>2];y=+g[p>>2]+ +g[L>>2];w=+g[t>>2]+ +g[M>>2];s=+g[u>>2]+ +g[N>>2];r=+g[v>>2]+ +g[O>>2];q=+g[x>>2]+ +g[P>>2];if(a[b+526>>0]|0){k=+g[b+528>>2];i=k*+g[b+504>>2]*+g[b+432>>2]/f;m=+g[b+460>>2];n=+g[b+464>>2];o=+g[b+468>>2];if((s-z)*m+(r-y)*n+(q-w)*o>0.0)i=i+k*((s-z)*m+(r-y)*n+(q-w)*o)*+g[b+436>>2];aa=+g[b+516>>2];_=aa+i*+g[b+492>>2];g[Q+424>>2]=_;g[Q+416>>2]=0.0;h=c[(_>0.0?Q+424|0:Q+416|0)>>2]|0;c[b+516>>2]=h;aa=(c[j>>2]=h,+g[j>>2])-aa;_=+g[b+536>>2];$=+g[b+540>>2];i=+g[b+544>>2];k=aa*m-_*(aa*m*_+aa*n*$+aa*o*i);ba=aa*n-$*(aa*m*_+aa*n*$+aa*o*i);n=aa*o-i*(aa*m*_+aa*n*$+aa*o*i);i=+G(+(n*n+(k*k+ba*ba)));k=1.0/i*k;m=1.0/i*ba;n=1.0/i*n;h=c[b+28>>2]|0;if(c[d+240>>2]|0){ba=k*+g[h+296>>2]+m*+g[h+300>>2]+n*+g[h+304>>2];aa=k*+g[h+280>>2]+m*+g[h+284>>2]+n*+g[h+288>>2];$=k*+g[h+264>>2]+m*+g[h+268>>2]+n*+g[h+272>>2];Z=i*0.0*+g[d+116>>2];_=i*0.0*+g[d+120>>2];g[d+64>>2]=i*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Z+ +g[d+68>>2];g[d+72>>2]=_+ +g[d+72>>2];aa=aa*i*+g[d+100>>2];ba=ba*i*+g[d+104>>2];g[K>>2]=$*i*+g[d+96>>2]+ +g[K>>2];g[L>>2]=aa+ +g[L>>2];g[M>>2]=ba+ +g[M>>2];}h=c[b+32>>2]|0;if(c[e+240>>2]|0){ba=k*+g[h+296>>2]+m*+g[h+300>>2]+n*+g[h+304>>2];aa=k*+g[h+280>>2]+m*+g[h+284>>2]+n*+g[h+288>>2];$=k*+g[h+264>>2]+m*+g[h+268>>2]+n*+g[h+272>>2];Z=i*-0.0*+g[e+116>>2];_=i*-0.0*+g[e+120>>2];g[e+64>>2]=i*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Z+ +g[e+68>>2];g[e+72>>2]=_+ +g[e+72>>2];aa=aa*+g[e+100>>2]*-i;ba=ba*+g[e+104>>2]*-i;g[N>>2]=$*+g[e+96>>2]*-i+ +g[N>>2];g[O>>2]=aa+ +g[O>>2];g[P>>2]=ba+ +g[P>>2];}}if(!(a[b+525>>0]|0)){l=Q;return}o=+g[b+532>>2];n=o*+g[b+508>>2]*+g[b+432>>2]/f;m=+g[b+476>>2];k=+g[b+480>>2];i=+g[b+484>>2];if((s-z)*m+(r-y)*k+(q-w)*i>0.0)n=n+o*((s-z)*m+(r-y)*k+(q-w)*i)*+g[b+436>>2];ba=+g[b+520>>2];n=ba+n*+g[b+496>>2];g[Q+424>>2]=n;g[Q+416>>2]=0.0;h=c[(n>0.0?Q+424|0:Q+416|0)>>2]|0;c[b+520>>2]=h;n=(c[j>>2]=h,+g[j>>2])-ba;h=c[b+28>>2]|0;if(c[d+240>>2]|0){ba=m*+g[h+296>>2]+k*+g[h+300>>2]+i*+g[h+304>>2];aa=m*+g[h+280>>2]+k*+g[h+284>>2]+i*+g[h+288>>2];i=m*+g[h+264>>2]+k*+g[h+268>>2]+i*+g[h+272>>2];m=n*0.0*+g[d+116>>2];k=n*0.0*+g[d+120>>2];g[d+64>>2]=n*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=m+ +g[d+68>>2];g[d+72>>2]=k+ +g[d+72>>2];k=aa*n*+g[d+100>>2];m=ba*n*+g[d+104>>2];g[K>>2]=i*n*+g[d+96>>2]+ +g[K>>2];g[L>>2]=k+ +g[L>>2];g[M>>2]=m+ +g[M>>2];m=+g[b+476>>2];k=+g[b+480>>2];i=+g[b+484>>2];}h=c[b+32>>2]|0;if(!(c[e+240>>2]|0)){l=Q;return}ba=m*+g[h+296>>2]+k*+g[h+300>>2]+i*+g[h+304>>2];aa=m*+g[h+280>>2]+k*+g[h+284>>2]+i*+g[h+288>>2];$=m*+g[h+264>>2]+k*+g[h+268>>2]+i*+g[h+272>>2];Z=n*-0.0*+g[e+116>>2];_=n*-0.0*+g[e+120>>2];g[e+64>>2]=n*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Z+ +g[e+68>>2];g[e+72>>2]=_+ +g[e+72>>2];aa=aa*+g[e+100>>2]*-n;ba=ba*+g[e+104>>2]*-n;g[N>>2]=$*+g[e+96>>2]*-n+ +g[N>>2];g[O>>2]=aa+ +g[O>>2];g[P>>2]=ba+ +g[P>>2];l=Q;return}function kc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0,E=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0,Z=0.0,_=0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0,fa=0.0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0;Ea=l;l=l+528|0;c[Ea+56>>2]=c[b>>2];c[Ea+8>>2]=c[b+64>>2];k=Ea+56+4|0;c[k>>2]=c[b+4>>2];c[Ea+8+4>>2]=c[b+68>>2];c[Ea+56+8>>2]=c[b+8>>2];c[Ea+8+8>>2]=c[b+72>>2];c[Ea+56+16>>2]=c[b+16>>2];c[Ea+8+16>>2]=c[b+80>>2];c[Ea+56+20>>2]=c[b+20>>2];c[Ea+8+20>>2]=c[b+84>>2];c[Ea+56+24>>2]=c[b+24>>2];c[Ea+8+24>>2]=c[b+88>>2];c[Ea+56+32>>2]=c[b+32>>2];c[Ea+8+32>>2]=c[b+96>>2];c[Ea+56+36>>2]=c[b+36>>2];c[Ea+8+36>>2]=c[b+100>>2];c[Ea+56+40>>2]=c[b+40>>2];c[Ea+8+40>>2]=c[b+104>>2];Aa=c[a+4>>2]|0;ia=+g[Aa+28>>2];ja=+g[Aa+32>>2];ma=+g[Aa+36>>2];ka=+Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa);la=+Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa);ma=(ma+ +Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa))*2.0;Aa=c[a+8>>2]|0;qa=+g[Aa+28>>2];ra=+g[Aa+32>>2];wa=+g[Aa+36>>2];ta=+Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa);sa=+Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa);wa=(wa+ +Db[c[(c[Aa>>2]|0)+48>>2]&15](Aa))*2.0;R=+g[b+112>>2]-+g[b+48>>2];S=+g[b+116>>2]-+g[b+52>>2];T=+g[b+120>>2]-+g[b+56>>2];da=+g[Ea+56>>2];ba=+g[Ea+56+16>>2];ca=+g[Ea+56+32>>2];aa=+g[k>>2];Z=+g[Ea+56+20>>2];$=+g[Ea+56+36>>2];fa=+g[Ea+56+8>>2];ha=+g[Ea+56+24>>2];na=+g[Ea+56+40>>2];g[Ea+412>>2]=(ia+ka)*2.0*.5;g[Ea+412+4>>2]=(ja+la)*2.0*.5;g[Ea+412+8>>2]=ma*.5;g[Ea+400>>2]=(qa+ta)*2.0*.5;g[Ea+400+4>>2]=(ra+sa)*2.0*.5;g[Ea+400+8>>2]=wa*.5;za=+g[Ea+8>>2];pa=+g[Ea+8+16>>2];va=+g[Ea+8+32>>2];ya=+g[Ea+8+4>>2];oa=+g[Ea+8+20>>2];ua=+g[Ea+8+36>>2];xa=+g[Ea+8+8>>2];Ba=+g[Ea+8+24>>2];Ca=+g[Ea+8+40>>2];B=+F(+(da*za+ba*pa+ca*va));N=+F(+(da*ya+ba*oa+ca*ua));U=+F(+(da*xa+ba*Ba+ca*Ca));M=+F(+(za*aa+pa*Z+va*$));P=+F(+(ya*aa+oa*Z+ua*$));V=+F(+(xa*aa+Ba*Z+Ca*$));W=+F(+(za*fa+pa*ha+va*na));X=+F(+(ya*fa+oa*ha+ua*na));Q=+F(+(xa*fa+Ba*ha+Ca*na));i=+F(+(R*da+S*ba+T*ca))-(wa*.5*U+((ia+ka)*2.0*.5+B*(qa+ta)*2.0*.5+N*(ra+sa)*2.0*.5));if(i>0.0){l=Ea;return}if(i>-3402823466385288598117041.0e14){a=Ea+56|0;e=1;f=R*da+S*ba+T*ca<0.0&1;}else{a=0;e=0;f=0;i=-3402823466385288598117041.0e14;}h=+F(+(R*aa+S*Z+T*$))-((ja+la)*2.0*.5+M*(qa+ta)*2.0*.5+P*(ra+sa)*2.0*.5+V*wa*.5);if(h>0.0){l=Ea;return}if(h>i){a=k;e=2;f=R*aa+S*Z+T*$<0.0&1;i=h;}h=+F(+(R*fa+S*ha+T*na))-(ma*.5+W*(qa+ta)*2.0*.5+X*(ra+sa)*2.0*.5+Q*wa*.5);if(h>0.0){l=Ea;return}if(h>i){a=Ea+56+8|0;e=3;f=R*fa+S*ha+T*na<0.0&1;i=h;}h=+F(+(R*za+S*pa+T*va))-((qa+ta)*2.0*.5+(B*(ia+ka)*2.0*.5+M*(ja+la)*2.0*.5+W*ma*.5));if(h>0.0){l=Ea;return}if(h>i){a=Ea+8|0;e=4;f=R*za+S*pa+T*va<0.0&1;i=h;}h=+F(+(R*ya+S*oa+T*ua))-((ra+sa)*2.0*.5+(N*(ia+ka)*2.0*.5+P*(ja+la)*2.0*.5+X*ma*.5));if(h>0.0){l=Ea;return}if(h>i){a=Ea+8+4|0;e=5;f=R*ya+S*oa+T*ua<0.0&1;i=h;}h=+F(+(R*xa+S*Ba+T*Ca))-(wa*.5+(U*(ia+ka)*2.0*.5+V*(ja+la)*2.0*.5+Q*ma*.5));if(h>0.0){l=Ea;return}if(h>i){a=Ea+8+8|0;e=6;f=R*xa+S*Ba+T*Ca<0.0&1;i=h;}h=(R*fa+S*ha+T*na)*(za*aa+pa*Z+va*$)-(R*aa+S*Z+T*$)*(za*fa+pa*ha+va*na);n=+F(+h)-((W+9.999999747378752e-06)*(ja+la)*2.0*.5+(M+9.999999747378752e-06)*ma*.5+(U+9.999999747378752e-06)*(ra+sa)*2.0*.5+(N+9.999999747378752e-06)*wa*.5);if(n>1.1920928955078125e-07){l=Ea;return}s=(za*fa+pa*ha+va*na)*(za*fa+pa*ha+va*na)+0.0;x=(za*aa+pa*Z+va*$)*(za*aa+pa*Z+va*$);q=+G(+(x+s));if(q>1.1920928955078125e-07?n/q*1.0499999523162842>i:0){a=0;e=7;f=h<0.0&1;i=n/q;p=0.0/q;o=-(za*fa+pa*ha+va*na)/q;h=(za*aa+pa*Z+va*$)/q;}else{p=0.0;o=0.0;h=0.0;}n=(R*fa+S*ha+T*na)*(ya*aa+oa*Z+ua*$)-(R*aa+S*Z+T*$)*(ya*fa+oa*ha+ua*na);q=+F(+n)-((X+9.999999747378752e-06)*(ja+la)*2.0*.5+(P+9.999999747378752e-06)*ma*.5+(U+9.999999747378752e-06)*(qa+ta)*2.0*.5+(B+9.999999747378752e-06)*wa*.5);if(q>1.1920928955078125e-07){l=Ea;return}t=(ya*fa+oa*ha+ua*na)*(ya*fa+oa*ha+ua*na)+0.0;y=(ya*aa+oa*Z+ua*$)*(ya*aa+oa*Z+ua*$);r=+G(+(y+t));if(r>1.1920928955078125e-07?q/r*1.0499999523162842>i:0){a=0;e=8;f=n<0.0&1;i=q/r;p=0.0/r;o=-(ya*fa+oa*ha+ua*na)/r;h=(ya*aa+oa*Z+ua*$)/r;}n=(R*fa+S*ha+T*na)*(xa*aa+Ba*Z+Ca*$)-(R*aa+S*Z+T*$)*(xa*fa+Ba*ha+Ca*na);q=+F(+n)-((Q+9.999999747378752e-06)*(ja+la)*2.0*.5+(V+9.999999747378752e-06)*ma*.5+(N+9.999999747378752e-06)*(qa+ta)*2.0*.5+(B+9.999999747378752e-06)*(ra+sa)*2.0*.5);if(q>1.1920928955078125e-07){l=Ea;return}v=(xa*fa+Ba*ha+Ca*na)*(xa*fa+Ba*ha+Ca*na)+0.0;z=(xa*aa+Ba*Z+Ca*$)*(xa*aa+Ba*Z+Ca*$);r=+G(+(z+v));if(r>1.1920928955078125e-07?q/r*1.0499999523162842>i:0){a=0;e=9;f=n<0.0&1;i=q/r;p=0.0/r;o=-(xa*fa+Ba*ha+Ca*na)/r;h=(xa*aa+Ba*Z+Ca*$)/r;}n=(R*da+S*ba+T*ca)*(za*fa+pa*ha+va*na)-(R*fa+S*ha+T*na)*(da*za+ba*pa+ca*va);q=+F(+n)-((W+9.999999747378752e-06)*(ia+ka)*2.0*.5+(B+9.999999747378752e-06)*ma*.5+(V+9.999999747378752e-06)*(ra+sa)*2.0*.5+(P+9.999999747378752e-06)*wa*.5);if(q>1.1920928955078125e-07){l=Ea;return}w=(da*za+ba*pa+ca*va)*(da*za+ba*pa+ca*va);r=+G(+(w+s));do if(r>1.1920928955078125e-07){if(!(q/r*1.0499999523162842>i))break;a=0;e=10;f=n<0.0&1;i=q/r;p=(za*fa+pa*ha+va*na)/r;o=0.0/r;h=-(da*za+ba*pa+ca*va)/r;}while(0);n=(R*da+S*ba+T*ca)*(ya*fa+oa*ha+ua*na)-(R*fa+S*ha+T*na)*(da*ya+ba*oa+ca*ua);q=+F(+n)-((X+9.999999747378752e-06)*(ia+ka)*2.0*.5+(N+9.999999747378752e-06)*ma*.5+(V+9.999999747378752e-06)*(qa+ta)*2.0*.5+(M+9.999999747378752e-06)*wa*.5);if(q>1.1920928955078125e-07){l=Ea;return}u=(da*ya+ba*oa+ca*ua)*(da*ya+ba*oa+ca*ua);r=+G(+(u+t));do if(r>1.1920928955078125e-07){if(!(q/r*1.0499999523162842>i))break;a=0;e=11;f=n<0.0&1;i=q/r;p=(ya*fa+oa*ha+ua*na)/r;o=0.0/r;h=-(da*ya+ba*oa+ca*ua)/r;}while(0);n=(R*da+S*ba+T*ca)*(xa*fa+Ba*ha+Ca*na)-(R*fa+S*ha+T*na)*(da*xa+ba*Ba+ca*Ca);q=+F(+n)-((Q+9.999999747378752e-06)*(ia+ka)*2.0*.5+(U+9.999999747378752e-06)*ma*.5+(P+9.999999747378752e-06)*(qa+ta)*2.0*.5+(M+9.999999747378752e-06)*(ra+sa)*2.0*.5);if(q>1.1920928955078125e-07){l=Ea;return}s=(da*xa+ba*Ba+ca*Ca)*(da*xa+ba*Ba+ca*Ca);r=+G(+(s+v));do if(r>1.1920928955078125e-07){if(!(q/r*1.0499999523162842>i))break;a=0;e=12;f=n<0.0&1;i=q/r;p=(xa*fa+Ba*ha+Ca*na)/r;o=0.0/r;h=-(da*xa+ba*Ba+ca*Ca)/r;}while(0);q=(R*aa+S*Z+T*$)*(da*za+ba*pa+ca*va)-(R*da+S*ba+T*ca)*(za*aa+pa*Z+va*$);n=+F(+q)-((M+9.999999747378752e-06)*(ia+ka)*2.0*.5+(B+9.999999747378752e-06)*(ja+la)*2.0*.5+(Q+9.999999747378752e-06)*(ra+sa)*2.0*.5+(X+9.999999747378752e-06)*wa*.5);if(n>1.1920928955078125e-07){l=Ea;return}r=+G(+(w+x+0.0));do if(r>1.1920928955078125e-07){if(!(n/r*1.0499999523162842>i))break;a=0;e=13;f=q<0.0&1;i=n/r;p=-(za*aa+pa*Z+va*$)/r;o=(da*za+ba*pa+ca*va)/r;h=0.0/r;}while(0);r=(R*aa+S*Z+T*$)*(da*ya+ba*oa+ca*ua)-(R*da+S*ba+T*ca)*(ya*aa+oa*Z+ua*$);n=+F(+r)-((P+9.999999747378752e-06)*(ia+ka)*2.0*.5+(N+9.999999747378752e-06)*(ja+la)*2.0*.5+(Q+9.999999747378752e-06)*(qa+ta)*2.0*.5+(W+9.999999747378752e-06)*wa*.5);if(n>1.1920928955078125e-07){l=Ea;return}q=+G(+(u+y+0.0));do if(q>1.1920928955078125e-07){if(!(n/q*1.0499999523162842>i))break;a=0;e=14;f=r<0.0&1;i=n/q;p=-(ya*aa+oa*Z+ua*$)/q;o=(da*ya+ba*oa+ca*ua)/q;h=0.0/q;}while(0);r=(R*aa+S*Z+T*$)*(da*xa+ba*Ba+ca*Ca)-(R*da+S*ba+T*ca)*(xa*aa+Ba*Z+Ca*$);n=+F(+r)-((V+9.999999747378752e-06)*(ia+ka)*2.0*.5+(U+9.999999747378752e-06)*(ja+la)*2.0*.5+(X+9.999999747378752e-06)*(qa+ta)*2.0*.5+(W+9.999999747378752e-06)*(ra+sa)*2.0*.5);if(n>1.1920928955078125e-07){l=Ea;return}q=+G(+(s+z+0.0));do if(q>1.1920928955078125e-07){if(!(n/q*1.0499999523162842>i)){Aa=55;break}e=15;f=r<0.0&1;i=n/q;p=-(xa*aa+Ba*Z+Ca*$)/q;o=(da*xa+ba*Ba+ca*Ca)/q;h=0.0/q;Aa=58;}else Aa=55;while(0);do if((Aa|0)==55){if(!e){l=Ea;return}if(!a){Aa=58;break}m=c[a>>2]|0;c[Ea>>2]=m;ga=c[a+16>>2]|0;n=(c[j>>2]=m,+g[j>>2]);m=e;B=i;e=ga;i=(c[j>>2]=ga,+g[j>>2]);h=+g[a+32>>2];}while(0);if((Aa|0)==58){n=p*+g[Ea+56>>2]+o*+g[k>>2]+h*fa;g[Ea>>2]=n;Da=p*+g[Ea+56+16>>2]+o*+g[Ea+56+20>>2]+h*ha;m=e;B=i;e=(g[j>>2]=Da,c[j>>2]|0);i=Da;h=p*+g[Ea+56+32>>2]+o*+g[Ea+56+36>>2]+h*na;}if(!f)Da=h;else{n=-n;g[Ea>>2]=n;Da=-h;e=(g[j>>2]=-i,c[j>>2]|0);}if((m|0)>6){z=(c[j>>2]=e,+g[j>>2]);i=+g[Ea+56>>2];t=+g[Ea+56+16>>2];v=+g[Ea+56+32>>2];u=(n*i+z*t+Da*v>0.0?1.0:-1.0)*(ia+ka)*2.0*.5;y=+g[k>>2];x=+g[Ea+56+20>>2];h=+g[Ea+56+36>>2];s=(n*y+z*x+Da*h>0.0?1.0:-1.0)*(ja+la)*2.0*.5;w=(n*fa+z*ha+Da*na>0.0?1.0:-1.0)*ma*.5;y=+g[b+48>>2]+u*i+s*y+w*fa;x=+g[b+52>>2]+u*t+s*x+w*ha;w=+g[b+56>>2]+u*v+s*h+w*na;c[Ea+456>>2]=c[b+112>>2];c[Ea+456+4>>2]=c[b+112+4>>2];c[Ea+456+8>>2]=c[b+112+8>>2];h=(n*za+z*pa+Da*va>0.0?-1.0:1.0)*(qa+ta)*2.0*.5;s=(n*ya+z*oa+Da*ua>0.0?-1.0:1.0)*(ra+sa)*2.0*.5;v=+g[Ea+456+4>>2]+h*pa+s*oa;u=+g[Ea+456+8>>2]+h*va+s*ua;t=(n*xa+z*Ba+Da*Ca>0.0?-1.0:1.0)*wa*.5;s=+g[Ea+456>>2]+h*za+s*ya+t*xa;g[Ea+456>>2]=s;g[Ea+456+4>>2]=v+t*Ba;g[Ea+456+8>>2]=u+t*Ca;Aa=m+-7|0;h=+g[Ea+56+(((Aa|0)/3|0)<<2)>>2];i=+g[Ea+56+(((Aa|0)/3|0)+4<<2)>>2];n=+g[Ea+56+(((Aa|0)/3|0)+8<<2)>>2];p=+g[Ea+8+(((Aa|0)%3|0)<<2)>>2];q=+g[Ea+8+(((Aa|0)%3|0)+4<<2)>>2];r=+g[Ea+8+(((Aa|0)%3|0)+8<<2)>>2];o=1.0-(h*p+i*q+n*r)*(h*p+i*q+n*r);if(!(o<=9.999999747378752e-05))h=(((s-y)*h+(v+t*Ba-x)*i+(u+t*Ca-w)*n)*(h*p+i*q+n*r)-((s-y)*p+(v+t*Ba-x)*q+(u+t*Ca-w)*r))*(1.0/o);else h=0.0;g[Ea+456>>2]=s+h*p;g[Ea+456+4>>2]=v+t*Ba+h*q;g[Ea+456+8>>2]=u+t*Ca+h*r;Aa=c[(c[d>>2]|0)+16>>2]|0;g[Ea+424>>2]=-+g[Ea>>2];g[Ea+424+4>>2]=-z;g[Ea+424+8>>2]=-Da;g[Ea+424+12>>2]=0.0;Ub[Aa&15](d,Ea+424|0,Ea+456|0,B);l=Ea;return}ea=(m|0)<4;ga=ea?b+48|0:b+112|0;f=ea?b+112|0:b+48|0;a=ea?Ea+56|0:Ea+8|0;_=ea?Ea+8|0:Ea+56|0;L=ea?Ea+412|0:Ea+400|0;k=ea?Ea+400|0:Ea+412|0;fa=(c[j>>2]=e,+g[j>>2]);if(ea){da=Da;ba=n;ca=fa;}else{da=-Da;ba=-n;ca=-fa;}U=ba*+g[_>>2]+ca*+g[_+16>>2]+da*+g[_+32>>2];g[Ea+384>>2]=U;V=ba*+g[_+4>>2]+ca*+g[_+20>>2]+da*+g[_+36>>2];g[Ea+384+4>>2]=V;W=ba*+g[_+8>>2]+ca*+g[_+24>>2]+da*+g[_+40>>2];g[Ea+384+8>>2]=W;U=+F(+U);V=+F(+V);W=+F(+W);e=V>U?(V>W?1:2):U>W?0:2;Y=(V>U?V>W:U>W)?2:1;n=+g[k+(e<<2)>>2];h=+g[f>>2]-+g[ga>>2];i=n*+g[_+(e<<2)>>2];o=+g[f+4>>2];p=+g[ga+4>>2];if(+g[Ea+384+(e<<2)>>2]<0.0){aa=+g[f+8>>2]-+g[ga+8>>2]+n*+g[_+((e|8)<<2)>>2];$=h+i;Z=o-p+n*+g[_+((e|4)<<2)>>2];}else{aa=+g[f+8>>2]-+g[ga+8>>2]-n*+g[_+((e|8)<<2)>>2];$=h-i;Z=o-p-n*+g[_+((e|4)<<2)>>2];}J=(ea?-1:-4)+m|0;switch(J|0){case 0:{e=2;f=1;break}case 1:{e=2;f=0;break}default:{e=1;f=0;}}K=a+(f<<2)|0;T=+g[K>>2];R=+g[K+16>>2];S=+g[K+32>>2];X=$*T+Z*R+aa*S;K=a+(e<<2)|0;M=+g[K>>2];v=+g[K+16>>2];w=+g[K+32>>2];Q=$*M+Z*v+aa*w;K=_+((U>W&(V>U^1)&1)<<2)|0;P=+g[K>>2];z=+g[K+16>>2];B=+g[K+32>>2];N=+g[_+(Y<<2)>>2];x=+g[_+(Y<<2)+16>>2];y=+g[_+(Y<<2)+32>>2];Ba=+g[k+((U>W&(V>U^1)&1)<<2)>>2];Ca=+g[k+(Y<<2)>>2];za=(T*N+R*x+S*y)*Ca;Ca=(M*N+v*x+w*y)*Ca;g[Ea+352>>2]=X-(T*P+R*z+S*B)*Ba-za;g[Ea+352+4>>2]=Q-(M*P+v*z+w*B)*Ba-Ca;g[Ea+352+8>>2]=X-(T*P+R*z+S*B)*Ba+za;g[Ea+352+12>>2]=Q-(M*P+v*z+w*B)*Ba+Ca;g[Ea+352+16>>2]=X+(T*P+R*z+S*B)*Ba+za;g[Ea+352+20>>2]=Q+(M*P+v*z+w*B)*Ba+Ca;g[Ea+352+24>>2]=X+(T*P+R*z+S*B)*Ba-za;g[Ea+352+28>>2]=Q+(M*P+v*z+w*B)*Ba-Ca;c[Ea+344>>2]=c[L+(f<<2)>>2];c[Ea+344+4>>2]=c[L+(e<<2)>>2];H=0;I=Ea+280|0;e=Ea+352|0;f=4;a:while(1){D=Ea+344+(H<<2)|0;E=1-H|0;do if((f|0)>0){a=I;C=e;k=0;while(1){m=C+(H<<2)|0;h=+g[m>>2];i=+g[D>>2];if(i>-h){c[a>>2]=c[C>>2];c[a+4>>2]=c[C+4>>2];k=k+1|0;if(k&8|0){e=I;f=k;break a}a=a+8|0;h=+g[m>>2];i=+g[D>>2];}A=(f|0)>1;m=C;C=C+8|0;b=A?C:e;n=+g[b+(H<<2)>>2];if(i>-h^i>-n){Ca=+g[m+(E<<2)>>2];g[a+(E<<2)>>2]=Ca+(-i-h)*((+g[b+(E<<2)>>2]-Ca)/(n-h));g[a+(H<<2)>>2]=-+g[D>>2];k=k+1|0;if(!(k&8))a=a+8|0;else{e=I;f=k;break a}}if(!A)break;else f=f+-1|0;}e=(I|0)==(Ea+280|0)?Ea+456|0:Ea+280|0;if((k|0)<=0){f=0;break}a=e;C=I;f=0;while(1){m=C+(H<<2)|0;i=+g[m>>2];h=+g[D>>2];if(i<h){c[a>>2]=c[C>>2];c[a+4>>2]=c[C+4>>2];f=f+1|0;if(f&8|0)break a;a=a+8|0;h=+g[D>>2];i=+g[m>>2];}A=(k|0)>1;m=C;C=C+8|0;b=A?C:I;n=+g[b+(H<<2)>>2];if(i<h^n<h){Ca=+g[m+(E<<2)>>2];g[a+(E<<2)>>2]=Ca+(h-i)*((+g[b+(E<<2)>>2]-Ca)/(n-i));c[a+(H<<2)>>2]=c[D>>2];f=f+1|0;if(!(f&8))a=a+8|0;else break a}if(!A)break;else k=k+-1|0;}}else{f=0;e=(I|0)==(Ea+280|0)?Ea+456|0:Ea+280|0;}while(0);H=H+1|0;if((H|0)>=2)break;else I=(e|0)==(Ea+280|0)?Ea+456|0:Ea+280|0;}if((e|0)!=(Ea+280|0))Vh(Ea+280|0,e|0,f<<3|0)|0;if((f|0)>=1){u=1.0/((T*P+R*z+S*B)*(M*N+v*x+w*y)-(M*P+v*z+w*B)*(T*N+R*x+S*y));t=+g[L+(J<<2)>>2];p=+g[K>>2];q=+g[_+(Y<<2)>>2];r=+g[_+((U>W&(V>U^1)&1|4)<<2)>>2];s=+g[_+((Y|4)<<2)>>2];o=+g[_+((U>W&(V>U^1)&1|8)<<2)>>2];n=+g[_+((Y|8)<<2)>>2];b=0;a=0;do{e=a<<1;i=+g[Ea+280+(e<<2)>>2];h=+g[Ea+280+((e|1)<<2)>>2];ya=(M*N+v*x+w*y)*u*(i-X)-(T*N+R*x+S*y)*u*(h-Q);Ca=(T*P+R*z+S*B)*u*(h-Q)-(M*P+v*z+w*B)*u*(i-X);e=b*3|0;za=$+ya*p+Ca*q;g[Ea+184+(e<<2)>>2]=za;Ba=Z+ya*r+Ca*s;g[Ea+184+(e+1<<2)>>2]=Ba;Ca=aa+ya*o+Ca*n;g[Ea+184+(e+2<<2)>>2]=Ca;Ca=t-(ba*za+ca*Ba+da*Ca);g[Ea+152+(b<<2)>>2]=Ca;e=b<<1;if(Ca>=0.0){g[Ea+280+(e<<2)>>2]=i;g[Ea+280+((e|1)<<2)>>2]=h;b=b+1|0;}a=a+1|0;}while((a|0)!=(f|0));b:do if((b|0)>=1){A=(b|0)<4?b:4;C=(A|0)>1?A:1;if((b|0)<=(C|0))if(ea){h=-Da;e=0;while(1){Aa=e*3|0;g[Ea+456>>2]=+g[Ea+184+(Aa<<2)>>2]+ +g[ga>>2];g[Ea+456+4>>2]=+g[Ea+184+(Aa+1<<2)>>2]+ +g[ga+4>>2];g[Ea+456+8>>2]=+g[Ea+184+(Aa+2<<2)>>2]+ +g[ga+8>>2];Aa=c[(c[d>>2]|0)+16>>2]|0;g[Ea+424>>2]=-+g[Ea>>2];g[Ea+424+4>>2]=-fa;g[Ea+424+8>>2]=h;g[Ea+424+12>>2]=0.0;Ub[Aa&15](d,Ea+424|0,Ea+456|0,-+g[Ea+152+(e<<2)>>2]);e=e+1|0;if((e|0)==(b|0))break b}}else{h=-Da;e=0;while(1){Aa=e*3|0;Ca=+g[Ea+152+(e<<2)>>2];Ba=+g[Ea>>2];g[Ea+456>>2]=+g[Ea+184+(Aa<<2)>>2]+ +g[ga>>2]-Ba*Ca;g[Ea+456+4>>2]=+g[Ea+184+(Aa+1<<2)>>2]+ +g[ga+4>>2]-fa*Ca;g[Ea+456+8>>2]=+g[Ea+184+(Aa+2<<2)>>2]+ +g[ga+8>>2]-Da*Ca;Aa=c[(c[d>>2]|0)+16>>2]|0;g[Ea+424>>2]=-Ba;g[Ea+424+4>>2]=-fa;g[Ea+424+8>>2]=h;g[Ea+424+12>>2]=0.0;Ub[Aa&15](d,Ea+424|0,Ea+456|0,-Ca);e=e+1|0;if((e|0)==(b|0))break b}}c:do if((b|0)>1){h=+g[Ea+152>>2];e=0;f=1;while(1){i=+g[Ea+152+(f<<2)>>2];a=i>h;e=a?f:e;f=f+1|0;if((f|0)==(b|0))break;else h=a?i:h;}switch(b|0){case 1:{f=1;a=Ea+120|0;k=Ea+120|0;Aa=111;break c}case 2:{h=(+g[Ea+280+4>>2]+ +g[Ea+280+12>>2])*.5;i=(+g[Ea+280>>2]+ +g[Ea+280+8>>2])*.5;f=2;a=Ea+120|0;k=Ea+120|0;Aa=114;break c}default:{}}a=b+-1|0;r=0.0;s=0.0;h=0.0;f=0;do{_=f<<1;ya=+g[Ea+280+(_<<2)>>2];za=+g[Ea+280+(_+3<<2)>>2];Ba=+g[Ea+280+(_+2<<2)>>2];Ca=+g[Ea+280+((_|1)<<2)>>2];h=h+(ya*za-Ba*Ca);s=s+(ya+Ba)*(ya*za-Ba*Ca);r=r+(za+Ca)*(ya*za-Ba*Ca);f=f+1|0;}while((f|0)!=(a|0));_=b<<1;n=+g[Ea+280+(_+-2<<2)>>2];o=+g[Ea+280+4>>2];p=+g[Ea+280>>2];q=+g[Ea+280+(_+-1<<2)>>2];i=h+(n*o-p*q);_=+F(+i)>1.1920928955078125e-07;i=_?1.0/(i*3.0):999999984306749440.0;if((b|0)>0){h=i*(r+(n*o-p*q)*(q+o));i=i*(s+(n*o-p*q)*(n+p));a=Ea+120|0;k=Ea+120|0;m=Ea+456|0;Aa=117;break}m=e;e=Ea+120|0;f=0;}else{e=0;f=b;a=Ea+120|0;k=Ea+120|0;Aa=111;}while(0);if((Aa|0)==111){h=+g[Ea+280+4>>2];i=+g[Ea+280>>2];Aa=114;}if((Aa|0)==114){b=f;m=Ea+456|0;Aa=117;}if((Aa|0)==117){f=0;do{Aa=f<<1;g[Ea+456+(f<<2)>>2]=+O(+(+g[Ea+280+((Aa|1)<<2)>>2]-h),+(+g[Ea+280+(Aa<<2)>>2]-i));f=f+1|0;}while((f|0)!=(b|0));f=0;do{c[Ea+424+(f<<2)>>2]=1;f=f+1|0;}while((f|0)!=(b|0));m=e;e=a;f=1;}a=Ea+424+(m<<2)|0;c[a>>2]=0;c[e>>2]=m;d:do if((A|0)>1){o=+g[Ea+456+(m<<2)>>2];if(f){f=1;a=Ea+120+4|0;}else{e=1;f=Ea+120+4|0;while(1){c[f>>2]=m;c[a>>2]=0;e=e+1|0;if((e|0)==(C|0))break d;else f=f+4|0;}}while(1){n=6.2831854820251465/+(C|0)*+(f|0)+o;n=n>3.1415927410125732?n+-6.2831854820251465:n;c[a>>2]=m;i=1.0e9;k=0;e=m;while(1){do if(!(c[Ea+424+(k<<2)>>2]|0))h=i;else{h=+F(+(+g[Ea+456+(k<<2)>>2]-n));h=h>3.1415927410125732?6.2831854820251465-h:h;if(!(h<i)){h=i;break}c[a>>2]=k;e=k;}while(0);k=k+1|0;if((k|0)==(b|0))break;else i=h;}c[Ea+424+(e<<2)>>2]=0;f=f+1|0;if((f|0)==(C|0))break;else a=a+4|0;}}while(0);if((C|0)>0){h=-Da;if(ea){e=0;do{Aa=c[Ea+120+(e<<2)>>2]|0;g[Ea+456>>2]=+g[Ea+184+(Aa*3<<2)>>2]+ +g[ga>>2];g[Ea+456+4>>2]=+g[Ea+184+((Aa*3|0)+1<<2)>>2]+ +g[ga+4>>2];g[Ea+456+8>>2]=+g[Ea+184+((Aa*3|0)+2<<2)>>2]+ +g[ga+8>>2];ea=c[(c[d>>2]|0)+16>>2]|0;g[Ea+424>>2]=-+g[Ea>>2];g[Ea+424+4>>2]=-fa;g[Ea+424+8>>2]=h;g[Ea+424+12>>2]=0.0;Ub[ea&15](d,Ea+424|0,Ea+456|0,-+g[Ea+152+(Aa<<2)>>2]);e=e+1|0;}while((e|0)<(C|0))}else{e=0;do{ea=c[Ea+120+(e<<2)>>2]|0;xa=+g[Ea+184+(ea*3<<2)>>2]+ +g[ga>>2];g[Ea+456>>2]=xa;za=+g[Ea+184+((ea*3|0)+1<<2)>>2]+ +g[ga+4>>2];g[Ea+456+4>>2]=za;Ba=+g[Ea+184+((ea*3|0)+2<<2)>>2]+ +g[ga+8>>2];g[Ea+456+8>>2]=Ba;Aa=c[(c[d>>2]|0)+16>>2]|0;ya=+g[Ea>>2];g[Ea+424>>2]=-ya;g[Ea+424+4>>2]=-fa;g[Ea+424+8>>2]=h;g[Ea+424+12>>2]=0.0;Ca=+g[Ea+152+(ea<<2)>>2];g[Ea+104>>2]=xa-ya*Ca;g[Ea+104+4>>2]=za-Ca*fa;g[Ea+104+8>>2]=Ba-Ca*Da;g[Ea+104+12>>2]=0.0;Ub[Aa&15](d,Ea+424|0,Ea+104|0,-Ca);e=e+1|0;}while((e|0)<(C|0))}}}while(0)}l=Ea;return}function lc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;V=c[e>>2]|0;fa=c[f>>2]|0;if(V|0)g=c[V+12>>2]|0;else g=b;h=c[g+88>>2]|0;i=c[g+92>>2]|0;j=c[g+96>>2]|0;if(!fa)g=d;else g=c[fa+12>>2]|0;r=c[g+88>>2]|0;p=c[g+92>>2]|0;q=c[g+96>>2]|0;Z=c[b+88>>2]|0;da=(c[d+88>>2]|0)-Z|0;u=c[b+92>>2]|0;ea=(c[d+92>>2]|0)-u|0;l=c[b+96>>2]|0;W=(c[d+96>>2]|0)-l|0;Y=c[(V|0?V:fa)+12>>2]|0;_=(c[Y+88>>2]|0)-Z|0;U=(c[Y+92>>2]|0)-u|0;Y=(c[Y+96>>2]|0)-l|0;X=(S(U,W)|0)-(S(Y,ea)|0)|0;Y=(S(Y,da)|0)-(S(_,W)|0)|0;U=(S(_,ea)|0)-(S(U,da)|0)|0;Z=_r(X|0,((X|0)<0)<<31>>31|0,Z|0,((Z|0)<0)<<31>>31|0)|0;_=D;u=_r(Y|0,((Y|0)<0)<<31>>31|0,u|0,((u|0)<0)<<31>>31|0)|0;t=D;l=_r(U|0,((U|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;l=xv(Z|0,_|0,l|0,D|0)|0;t=xv(l|0,D|0,u|0,t|0)|0;u=D;l=_r(U|0,((U|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;_=D;Z=_r(Y|0,((Y|0)<0)<<31>>31|0,W|0,((W|0)<0)<<31>>31|0)|0;Z=Wt(l|0,_|0,Z|0,D|0)|0;_=D;l=_r(X|0,((X|0)<0)<<31>>31|0,W|0,((W|0)<0)<<31>>31|0)|0;aa=D;$=_r(U|0,((U|0)<0)<<31>>31|0,da|0,((da|0)<0)<<31>>31|0)|0;$=Wt(l|0,aa|0,$|0,D|0)|0;aa=D;l=_r(Y|0,((Y|0)<0)<<31>>31|0,da|0,((da|0)<0)<<31>>31|0)|0;ca=D;ba=_r(X|0,((X|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;ba=Wt(l|0,ca|0,ba|0,D|0)|0;ca=D;l=_r(Z|0,_|0,h|0,((h|0)<0)<<31>>31|0)|0;T=D;k=_r($|0,aa|0,i|0,((i|0)<0)<<31>>31|0)|0;T=xv(k|0,D|0,l|0,T|0)|0;l=D;k=_r(ba|0,ca|0,j|0,((j|0)<0)<<31>>31|0)|0;k=xv(T|0,l|0,k|0,D|0)|0;l=D;if((V|0)!=0?(c[V+12>>2]|0)!=0:0){g=h;b=i;d=j;n=V;o=l;m=k;while(1){n=c[(c[n+8>>2]|0)+4>>2]|0;l=n+12|0;j=c[l>>2]|0;h=c[j+88>>2]|0;R=_r(h|0,((h|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;Q=D;i=c[j+92>>2]|0;T=_r(i|0,((i|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;Q=xv(T|0,D|0,R|0,Q|0)|0;R=D;j=c[j+96>>2]|0;T=_r(j|0,((j|0)<0)<<31>>31|0,U|0,((U|0)<0)<<31>>31|0)|0;T=xv(Q|0,R|0,T|0,D|0)|0;R=D;if((R|0)<(u|0)|(R|0)==(u|0)&T>>>0<t>>>0){k=m;j=o;break}if((c[n+20>>2]|0)==(c[a+100>>2]|0)){k=m;j=o;break}T=_r(h|0,((h|0)<0)<<31>>31|0,Z|0,_|0)|0;R=D;k=_r(i|0,((i|0)<0)<<31>>31|0,$|0,aa|0)|0;R=xv(k|0,D|0,T|0,R|0)|0;T=D;k=_r(j|0,((j|0)<0)<<31>>31|0,ba|0,ca|0)|0;k=xv(R|0,T|0,k|0,D|0)|0;j=D;if(!((j|0)>(o|0)|(j|0)==(o|0)&k>>>0>m>>>0)){k=m;j=o;break}c[e>>2]=n;T=c[l>>2]|0;g=c[T+88>>2]|0;b=c[T+92>>2]|0;d=c[T+96>>2]|0;if(!T)break;else{o=j;m=k;}}h=g;i=c[f>>2]|0;s=j;}else{b=i;d=j;i=fa;s=l;}g=_r(Z|0,_|0,r|0,((r|0)<0)<<31>>31|0)|0;T=D;j=_r($|0,aa|0,p|0,((p|0)<0)<<31>>31|0)|0;T=xv(j|0,D|0,g|0,T|0)|0;g=D;j=_r(ba|0,ca|0,q|0,((q|0)<0)<<31>>31|0)|0;j=xv(T|0,g|0,j|0,D|0)|0;g=D;a:do if(i)if(!(c[i+12>>2]|0))o=q;else{o=q;while(1){q=c[c[i+8>>2]>>2]|0;n=c[q+12>>2]|0;l=c[n+88>>2]|0;R=_r(l|0,((l|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;Q=D;m=c[n+92>>2]|0;T=_r(m|0,((m|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;Q=xv(T|0,D|0,R|0,Q|0)|0;R=D;n=c[n+96>>2]|0;T=_r(n|0,((n|0)<0)<<31>>31|0,U|0,((U|0)<0)<<31>>31|0)|0;T=xv(Q|0,R|0,T|0,D|0)|0;R=D;if((R|0)<(u|0)|(R|0)==(u|0)&T>>>0<t>>>0)break a;if((c[q+20>>2]|0)==(c[a+100>>2]|0))break a;l=_r(l|0,((l|0)<0)<<31>>31|0,Z|0,_|0)|0;T=D;m=_r(m|0,((m|0)<0)<<31>>31|0,$|0,aa|0)|0;T=xv(m|0,D|0,l|0,T|0)|0;m=D;l=_r(n|0,((n|0)<0)<<31>>31|0,ba|0,ca|0)|0;l=xv(T|0,m|0,l|0,D|0)|0;m=D;if(!((m|0)>(g|0)|(m|0)==(g|0)&l>>>0>j>>>0))break a;c[f>>2]=q;T=c[q+12>>2]|0;g=c[T+88>>2]|0;i=c[T+92>>2]|0;j=c[T+96>>2]|0;if(!T){r=g;p=i;o=j;i=q;j=l;g=m;break}else{r=g;p=i;o=j;i=q;g=m;j=l;}}}else{o=q;i=0;}while(0);j=Wt(j|0,g|0,k|0,s|0)|0;T=D;if((T|0)>0|(T|0)==0&j>>>0>0){Q=Wt(0,0,U|0,((U|0)<0)<<31>>31|0)|0;R=D;N=r;k=h;O=p;m=b;P=o;n=d;l=i;u=j;q=T;while(1){s=(S(O-m|0,ea)|0)+(S(N-k|0,da)|0)+(S(P-n|0,W)|0)|0;g=c[e>>2]|0;if(!g){E=s;I=k;H=m;A=s;g=((s|0)<0)<<31>>31;B=q;z=u;}else{K=k;t=s;M=s;L=((s|0)<0)<<31>>31;b:while(1){if(!(c[g+12>>2]|0)){s=K;k=M;g=L;break}G=c[(c[g>>2]|0)+8>>2]|0;if((c[G+20>>2]|0)<=(c[a+100>>2]|0)){s=K;k=M;g=L;break}J=c[G+12>>2]|0;H=c[J+88>>2]|0;F=H-K|0;I=c[J+92>>2]|0;E=I-m|0;J=c[J+96>>2]|0;k=J-n|0;s=_r(F|0,((F|0)<0)<<31>>31|0,Z|0,_|0)|0;C=D;l=_r(E|0,((E|0)<0)<<31>>31|0,$|0,aa|0)|0;C=xv(l|0,D|0,s|0,C|0)|0;s=D;l=_r(k|0,((k|0)<0)<<31>>31|0,ba|0,ca|0)|0;l=xv(C|0,s|0,l|0,D|0)|0;s=D;k=(S(E,ea)|0)+(S(F,da)|0)+(S(k,W)|0)|0;do if((l|0)==0&(s|0)==0){if((k|0)>=0){s=K;k=M;g=L;break b}}else{if((s|0)>=0){s=K;k=M;g=L;break b}if((k|0)>0){w=1;x=k;v=((k|0)<0)<<31>>31;}else{x=Wt(0,0,k|0,((k|0)<0)<<31>>31|0)|0;w=((k|0)!=0)<<31>>31;x=k|0?x:0;v=k|0?D:0;}A=Wt(0,0,l|0,s|0)|0;B=D;F=0-w|0;if((t|0)>0){k=1;C=M;E=L;}else{E=(t|0)!=0;C=Wt(0,0,M|0,L|0)|0;k=E<<31>>31;C=E?C:0;E=E?D:0;}if((q|0)>0|(q|0)==0&u>>>0>0){l=u;s=q;}else{s=(u|0)!=0|(q|0)!=0;l=Wt(0,0,u|0,q|0)|0;k=s?0-k|0:k;l=s?l:0;s=s?D:0;}if((k|0)==(F|0)){if(!w)break;k=_r(l|0,0,x|0,0)|0;w=D;ja=_r(s|0,0,x|0,0)|0;ia=D;y=_r(l|0,0,v|0,0)|0;z=D;ha=_r(s|0,0,v|0,0)|0;x=D;y=xv(ja|0,0,y|0,0)|0;l=D;x=xv(ia|0,0,ha|0,x|0)|0;z=xv(x|0,D|0,z|0,0)|0;l=xv(z|0,D|0,l|0,0)|0;z=D;w=xv(0,y|0,k|0,w|0)|0;x=D;y=xv(l|0,z|0,(x>>>0<y>>>0|(x|0)==(y|0)&w>>>0<0)&1|0,0)|0;z=D;l=_r(C|0,0,A|0,0)|0;k=D;ha=_r(E|0,0,A|0,0)|0;A=D;s=_r(C|0,0,B|0,0)|0;v=D;B=_r(E|0,0,B|0,0)|0;C=D;s=xv(ha|0,0,s|0,0)|0;E=D;C=xv(A|0,0,B|0,C|0)|0;v=xv(C|0,D|0,v|0,0)|0;E=xv(v|0,D|0,E|0,0)|0;v=D;k=xv(0,s|0,l|0,k|0)|0;l=D;s=xv(E|0,v|0,(l>>>0<s>>>0|(l|0)==(s|0)&k>>>0<0)&1|0,0)|0;v=D;if(z>>>0<v>>>0|(z|0)==(v|0)&y>>>0<s>>>0)k=-1;else k=z>>>0>v>>>0|(z|0)==(v|0)&y>>>0>s>>>0?1:x>>>0<l>>>0|(x|0)==(l|0)&w>>>0<k>>>0?-1:(x>>>0>l>>>0|(x|0)==(l|0)&w>>>0>k>>>0)&1;k=S(k,F)|0;}else k=F-k|0;if((k|0)<=-1){s=K;k=M;g=L;break b}}while(0);ja=N-H|0;ia=O-I|0;l=P-J|0;q=_r(ja|0,((ja|0)<0)<<31>>31|0,Z|0,_|0)|0;ha=D;k=_r(ia|0,((ia|0)<0)<<31>>31|0,$|0,aa|0)|0;ha=xv(k|0,D|0,q|0,ha|0)|0;q=D;k=_r(l|0,((l|0)<0)<<31>>31|0,ba|0,ca|0)|0;k=xv(ha|0,q|0,k|0,D|0)|0;q=D;g=(g|0)==(V|0)?0:G;c[e>>2]=g;l=(S(ia,ea)|0)+(S(ja,da)|0)+(S(l,W)|0)|0;if(!g){t=l;s=H;m=I;n=J;u=k;k=l;g=((l|0)<0)<<31>>31;break}else{K=H;m=I;n=J;t=l;M=l;L=((l|0)<0)<<31>>31;u=k;}}E=t;I=s;H=m;l=c[f>>2]|0;A=k;B=q;z=u;}if(!l){g=110;break}if(!(c[l+12>>2]|0)){g=110;break}G=c[c[l+8>>2]>>2]|0;if((c[G+20>>2]|0)<=(c[a+100>>2]|0)){g=110;break}q=c[G+12>>2]|0;t=c[q+88>>2]|0;m=t-N|0;s=c[q+92>>2]|0;l=s-O|0;q=c[q+96>>2]|0;k=q-P|0;ja=_r(m|0,((m|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;ha=D;ia=_r(l|0,((l|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;ha=xv(ia|0,D|0,ja|0,ha|0)|0;ja=D;ia=_r(k|0,((k|0)<0)<<31>>31|0,Q|0,R|0)|0;if(!((ha|0)==(ia|0)&(ja|0)==(D|0))){g=110;break}v=_r(m|0,((m|0)<0)<<31>>31|0,Z|0,_|0)|0;F=D;u=_r(l|0,((l|0)<0)<<31>>31|0,$|0,aa|0)|0;F=xv(u|0,D|0,v|0,F|0)|0;v=D;u=_r(k|0,((k|0)<0)<<31>>31|0,ba|0,ca|0)|0;u=xv(F|0,v|0,u|0,D|0)|0;v=D;k=(S(l,ea)|0)+(S(m,da)|0)+(S(k,W)|0)|0;F=t-I|0;ia=s-H|0;C=q-n|0;F=_r(F|0,((F|0)<0)<<31>>31|0,Z|0,_|0)|0;ja=D;ia=_r(ia|0,((ia|0)<0)<<31>>31|0,$|0,aa|0)|0;ja=xv(ia|0,D|0,F|0,ja|0)|0;F=D;C=_r(C|0,((C|0)<0)<<31>>31|0,ba|0,ca|0)|0;C=xv(ja|0,F|0,C|0,D|0)|0;F=D;if(!((F|0)>0|(F|0)==0&C>>>0>0)){g=110;break}if((u|0)==0&(v|0)==0){if((k|0)>=0){g=110;break}}else{if((v|0)>=0){g=110;break}if((k|0)>0){s=1;t=k;q=((k|0)<0)<<31>>31;}else{t=Wt(0,0,k|0,((k|0)<0)<<31>>31|0)|0;s=((k|0)!=0)<<31>>31;t=k|0?t:0;q=k|0?D:0;}w=Wt(0,0,u|0,v|0)|0;x=D;y=0-s|0;if((E|0)>0){k=1;v=A;}else{ja=(E|0)!=0;v=Wt(0,0,A|0,g|0)|0;k=ja<<31>>31;v=ja?v:0;g=ja?D:0;}if((B|0)>0|(B|0)==0&z>>>0>0){m=k;l=z;k=B;}else{ja=(z|0)!=0|(B|0)!=0;l=Wt(0,0,z|0,B|0)|0;m=ja?0-k|0:k;l=ja?l:0;k=ja?D:0;}if((m|0)==(y|0)){if(!s){g=110;break}ja=_r(l|0,0,t|0,0)|0;s=D;ia=_r(k|0,0,t|0,0)|0;P=D;t=_r(l|0,0,q|0,0)|0;u=D;k=_r(k|0,0,q|0,0)|0;q=D;t=xv(ia|0,0,t|0,0)|0;ia=D;q=xv(P|0,0,k|0,q|0)|0;u=xv(q|0,D|0,u|0,0)|0;ia=xv(u|0,D|0,ia|0,0)|0;u=D;q=xv(0,t|0,ja|0,s|0)|0;s=D;t=xv(ia|0,u|0,(s>>>0<t>>>0|(s|0)==(t|0)&q>>>0<0)&1|0,0)|0;u=D;ia=_r(v|0,0,w|0,0)|0;k=D;ja=_r(g|0,0,w|0,0)|0;P=D;l=_r(v|0,0,x|0,0)|0;m=D;ha=_r(g|0,0,x|0,0)|0;g=D;l=xv(ja|0,0,l|0,0)|0;ja=D;g=xv(P|0,0,ha|0,g|0)|0;m=xv(g|0,D|0,m|0,0)|0;ja=xv(m|0,D|0,ja|0,0)|0;m=D;g=xv(0,l|0,ia|0,k|0)|0;k=D;l=xv(ja|0,m|0,(k>>>0<l>>>0|(k|0)==(l|0)&g>>>0<0)&1|0,0)|0;m=D;if(u>>>0<m>>>0|(u|0)==(m|0)&t>>>0<l>>>0)g=-1;else g=u>>>0>m>>>0|(u|0)==(m|0)&t>>>0>l>>>0?1:s>>>0<k>>>0|(s|0)==(k|0)&q>>>0<g>>>0?-1:(s>>>0>k>>>0|(s|0)==(k|0)&q>>>0>g>>>0)&1;g=S(g,y)|0;}else g=y-m|0;if((g|0)<=0){g=110;break}}c[f>>2]=G;P=c[G+12>>2]|0;N=c[P+88>>2]|0;k=I;O=c[P+92>>2]|0;m=H;P=c[P+96>>2]|0;l=G;u=C;q=F;}if((g|0)==110)return}if((T|0)>=0)return;F=Wt(0,0,U|0,((U|0)<0)<<31>>31|0)|0;G=D;E=r;g=T;c:while(1){C=g;d:while(1){B=(S(p-b|0,ea)|0)+(S(E-h|0,da)|0)+(S(o-d|0,W)|0)|0;do if((i|0?c[i+12>>2]|0:0)?(ga=c[(c[i+4>>2]|0)+8>>2]|0,(c[ga+20>>2]|0)>(c[a+100>>2]|0)):0){A=c[ga+12>>2]|0;y=c[A+88>>2]|0;ja=y-E|0;z=c[A+92>>2]|0;ia=z-p|0;A=c[A+96>>2]|0;g=A-o|0;l=_r(ja|0,((ja|0)<0)<<31>>31|0,Z|0,_|0)|0;ha=D;k=_r(ia|0,((ia|0)<0)<<31>>31|0,$|0,aa|0)|0;ha=xv(k|0,D|0,l|0,ha|0)|0;l=D;k=_r(g|0,((g|0)<0)<<31>>31|0,ba|0,ca|0)|0;k=xv(ha|0,l|0,k|0,D|0)|0;l=D;g=(S(ia,ea)|0)+(S(ja,da)|0)+(S(g,W)|0)|0;if((k|0)==0&(l|0)==0)if((g|0)>0)break d;else break;if((l|0)<0){if((g|0)>0){n=1;q=g;m=((g|0)<0)<<31>>31;}else{q=Wt(0,0,g|0,((g|0)<0)<<31>>31|0)|0;n=((g|0)!=0)<<31>>31;q=g|0?q:0;m=g|0?D:0;}t=Wt(0,0,k|0,l|0)|0;u=D;x=0-n|0;if((B|0)>0){g=1;v=B;w=((B|0)<0)<<31>>31;}else{v=Wt(0,0,B|0,((B|0)<0)<<31>>31|0)|0;g=((B|0)!=0)<<31>>31;v=B|0?v:0;w=B|0?D:0;}if((C|0)>0|(C|0)==0&j>>>0>0){k=j;l=C;}else{l=(j|0)!=0|(C|0)!=0;k=Wt(0,0,j|0,C|0)|0;g=l?0-g|0:g;k=l?k:0;l=l?D:0;}if((g|0)==(x|0)){if(!n)break d;g=_r(k|0,0,q|0,0)|0;n=D;ha=_r(l|0,0,q|0,0)|0;V=D;r=_r(k|0,0,m|0,0)|0;s=D;ja=_r(l|0,0,m|0,0)|0;q=D;r=xv(ha|0,0,r|0,0)|0;k=D;q=xv(V|0,0,ja|0,q|0)|0;s=xv(q|0,D|0,s|0,0)|0;k=xv(s|0,D|0,k|0,0)|0;s=D;n=xv(0,r|0,g|0,n|0)|0;q=D;r=xv(k|0,s|0,(q>>>0<r>>>0|(q|0)==(r|0)&n>>>0<0)&1|0,0)|0;s=D;k=_r(v|0,0,t|0,0)|0;g=D;ja=_r(w|0,0,t|0,0)|0;V=D;l=_r(v|0,0,u|0,0)|0;m=D;ha=_r(w|0,0,u|0,0)|0;ia=D;l=xv(ja|0,0,l|0,0)|0;ja=D;ia=xv(V|0,0,ha|0,ia|0)|0;m=xv(ia|0,D|0,m|0,0)|0;ja=xv(m|0,D|0,ja|0,0)|0;m=D;g=xv(0,l|0,k|0,g|0)|0;k=D;l=xv(ja|0,m|0,(k>>>0<l>>>0|(k|0)==(l|0)&g>>>0<0)&1|0,0)|0;m=D;if(s>>>0<m>>>0|(s|0)==(m|0)&r>>>0<l>>>0)g=-1;else g=s>>>0>m>>>0|(s|0)==(m|0)&r>>>0>l>>>0?1:q>>>0<k>>>0|(q|0)==(k|0)&n>>>0<g>>>0?-1:(q>>>0>k>>>0|(q|0)==(k|0)&n>>>0>g>>>0)&1;g=S(g,x)|0;}else g=x-g|0;if((g|0)<1)break d}}while(0);g=c[e>>2]|0;if(!g){g=110;break c}if(!(c[g+12>>2]|0)){g=110;break c}v=c[(c[g+8>>2]|0)+4>>2]|0;if((c[v+20>>2]|0)<=(c[a+100>>2]|0)){g=110;break c}i=c[v+12>>2]|0;l=c[i+88>>2]|0;h=l-h|0;k=c[i+92>>2]|0;b=k-b|0;i=c[i+96>>2]|0;g=i-d|0;ja=_r(h|0,((h|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;ha=D;ia=_r(b|0,((b|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;ha=xv(ia|0,D|0,ja|0,ha|0)|0;ja=D;ia=_r(g|0,((g|0)<0)<<31>>31|0,F|0,G|0)|0;if(!((ha|0)==(ia|0)&(ja|0)==(D|0))){g=110;break c}m=_r(h|0,((h|0)<0)<<31>>31|0,Z|0,_|0)|0;u=D;d=_r(b|0,((b|0)<0)<<31>>31|0,$|0,aa|0)|0;u=xv(d|0,D|0,m|0,u|0)|0;m=D;d=_r(g|0,((g|0)<0)<<31>>31|0,ba|0,ca|0)|0;d=xv(u|0,m|0,d|0,D|0)|0;m=D;g=(S(b,ea)|0)+(S(h,da)|0)+(S(g,W)|0)|0;u=E-l|0;ia=p-k|0;t=o-i|0;u=_r(u|0,((u|0)<0)<<31>>31|0,Z|0,_|0)|0;ja=D;ia=_r(ia|0,((ia|0)<0)<<31>>31|0,$|0,aa|0)|0;ja=xv(ia|0,D|0,u|0,ja|0)|0;u=D;t=_r(t|0,((t|0)<0)<<31>>31|0,ba|0,ca|0)|0;t=xv(ja|0,u|0,t|0,D|0)|0;u=D;if((u|0)>=0){g=110;break c}if((d|0)==0&(m|0)==0){if((g|0)<=0){g=110;break c}}else{if((m|0)>=0){g=110;break c}if((g|0)>0){h=((g|0)<0)<<31>>31;i=1;}else{ja=Wt(0,0,g|0,((g|0)<0)<<31>>31|0)|0;h=g|0?D:0;i=((g|0)!=0)<<31>>31;g=g|0?ja:0;}q=Wt(0,0,d|0,m|0)|0;r=D;s=0-i|0;if((B|0)>0){b=1;n=B;m=((B|0)<0)<<31>>31;}else{n=Wt(0,0,B|0,((B|0)<0)<<31>>31|0)|0;b=((B|0)!=0)<<31>>31;n=B|0?n:0;m=B|0?D:0;}if((C|0)>0|(C|0)==0&j>>>0>0){d=b;b=C;}else{ja=(j|0)!=0|(C|0)!=0;j=Wt(0,0,j|0,C|0)|0;d=ja?0-b|0:b;j=ja?j:0;b=ja?D:0;}if((d|0)==(s|0)){if(!i){g=110;break c}ja=_r(j|0,0,g|0,0)|0;i=D;d=_r(b|0,0,g|0,0)|0;V=D;k=_r(j|0,0,h|0,0)|0;l=D;g=_r(b|0,0,h|0,0)|0;j=D;k=xv(d|0,0,k|0,0)|0;b=D;j=xv(V|0,0,g|0,j|0)|0;l=xv(j|0,D|0,l|0,0)|0;b=xv(l|0,D|0,b|0,0)|0;l=D;i=xv(0,k|0,ja|0,i|0)|0;j=D;k=xv(b|0,l|0,(j>>>0<k>>>0|(j|0)==(k|0)&i>>>0<0)&1|0,0)|0;l=D;b=_r(n|0,0,q|0,0)|0;g=D;ja=_r(m|0,0,q|0,0)|0;V=D;d=_r(n|0,0,r|0,0)|0;h=D;ha=_r(m|0,0,r|0,0)|0;ia=D;d=xv(ja|0,0,d|0,0)|0;ja=D;ia=xv(V|0,0,ha|0,ia|0)|0;h=xv(ia|0,D|0,h|0,0)|0;ja=xv(h|0,D|0,ja|0,0)|0;h=D;g=xv(0,d|0,b|0,g|0)|0;b=D;d=xv(ja|0,h|0,(b>>>0<d>>>0|(b|0)==(d|0)&g>>>0<0)&1|0,0)|0;h=D;if(l>>>0<h>>>0|(l|0)==(h|0)&k>>>0<d>>>0)g=-1;else g=l>>>0>h>>>0|(l|0)==(h|0)&k>>>0>d>>>0?1:j>>>0<b>>>0|(j|0)==(b|0)&i>>>0<g>>>0?-1:(j>>>0>b>>>0|(j|0)==(b|0)&i>>>0>g>>>0)&1;g=S(g,s)|0;}else g=s-d|0;if((g|0)>=0){g=110;break c}}c[e>>2]=v;d=c[v+12>>2]|0;h=c[d+88>>2]|0;b=c[d+92>>2]|0;d=c[d+96>>2]|0;i=c[f>>2]|0;C=u;j=t;}E=y-h|0;o=z-b|0;j=A-d|0;E=_r(E|0,((E|0)<0)<<31>>31|0,Z|0,_|0)|0;p=D;o=_r(o|0,((o|0)<0)<<31>>31|0,$|0,aa|0)|0;p=xv(o|0,D|0,E|0,p|0)|0;E=D;j=_r(j|0,((j|0)<0)<<31>>31|0,ba|0,ca|0)|0;j=xv(p|0,E|0,j|0,D|0)|0;i=(i|0)==(fa|0)?0:ga;c[f>>2]=i;E=y;p=z;o=A;g=D;}if((g|0)==110)return}function mc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,k=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0,z=0.0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;I=l;l=l+192|0;if((e|0)<1){f=c[b+12>>2]|0;if(f|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=c[b+32>>2]|0;if(f|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;f=c[b+52>>2]|0;if(f|0){if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+52>>2]=0;}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;l=I;return}c[I+32>>2]=0;c[I+36>>2]=0;c[I+40>>2]=0;c[I+44>>2]=256;c[I+48>>2]=0;c[I+52>>2]=0;c[I+56>>2]=0;c[I+60>>2]=256;c[I+64>>2]=0;c[I+68>>2]=0;c[I+72>>2]=0;c[I+76>>2]=256;a[I+96>>0]=1;c[I+92>>2]=0;c[I+84>>2]=0;c[I+88>>2]=0;f=0;h=d;i=-246811958;s=1900671690;v=-246811958;w=1900671690;y=-246811958;A=1900671690;while(1){k=c[h>>2]|0;p=c[h+4>>2]|0;q=c[h+8>>2]|0;m=(c[j>>2]=k,+g[j>>2]);s=m<(c[j>>2]=s,+g[j>>2])?k:s;n=(c[j>>2]=p,+g[j>>2]);w=n<(c[j>>2]=w,+g[j>>2])?p:w;o=(c[j>>2]=q,+g[j>>2]);A=o<(c[j>>2]=A,+g[j>>2])?q:A;i=(c[j>>2]=i,+g[j>>2])<m?k:i;v=(c[j>>2]=v,+g[j>>2])<n?p:v;y=(c[j>>2]=y,+g[j>>2])<o?q:y;f=f+1|0;if((f|0)==(e|0))break;else h=h+16|0;}B=(c[j>>2]=i,+g[j>>2]);z=(c[j>>2]=s,+g[j>>2]);x=(c[j>>2]=v,+g[j>>2]);u=(c[j>>2]=w,+g[j>>2]);t=(c[j>>2]=y,+g[j>>2]);r=(c[j>>2]=A,+g[j>>2]);g[I+168>>2]=B-z;s=I+168+4|0;g[s>>2]=x-u;v=I+168+8|0;g[v>>2]=t-r;g[I+168+12>>2]=0.0;h=+g[I+168+((B-z<x-u&1)<<2)>>2]<t-r?2:B-z<x-u&1;c[I+112>>2]=h;f=+g[I+168+((!(B-z<x-u)&1)<<2)>>2]<t-r?!(B-z<x-u)&1:2;if((f|0)==(h|0))f=((h+1|0)>>>0)%3|0;c[I+104>>2]=f;G=(h^3)-f|0;c[I+108>>2]=G;g[I+168>>2]=(B-z)*9.788566967472434e-05;g[s>>2]=(x-u)*9.788566967472434e-05;g[v>>2]=(t-r)*9.788566967472434e-05;if(((G+1|0)%3|0|0)==(h|0)){m=(B-z)*9.788566967472434e-05;n=(x-u)*9.788566967472434e-05;o=(t-r)*9.788566967472434e-05;}else{g[I+168>>2]=-((B-z)*9.788566967472434e-05);g[s>>2]=-((x-u)*9.788566967472434e-05);g[v>>2]=-((t-r)*9.788566967472434e-05);m=-((B-z)*9.788566967472434e-05);n=-((x-u)*9.788566967472434e-05);o=-((t-r)*9.788566967472434e-05);}c[I>>2]=c[I+168>>2];c[I+4>>2]=c[I+168+4>>2];c[I+8>>2]=c[I+168+8>>2];c[I+12>>2]=c[I+168+12>>2];if(m!=0.0)g[I+168>>2]=1.0/m;if(n!=0.0)g[s>>2]=1.0/n;if(o!=0.0)g[v>>2]=1.0/o;g[I+16>>2]=(B+z)*.5;g[I+20>>2]=(x+u)*.5;g[I+24>>2]=(t+r)*.5;g[I+28>>2]=0.0;w=I+144+16|0;a[w>>0]=1;y=I+144+12|0;c[y>>2]=0;c[I+144+4>>2]=0;c[I+144+8>>2]=0;c[6436]=(c[6436]|0)+1;f=ic((e<<4|3)+16|0)|0;if(!f)h=0;else{c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16;}i=c[I+144+4>>2]|0;k=c[y>>2]|0;if((i|0)<=0){if(k|0)H=32;}else{f=0;do{H=h+(f<<4)|0;G=k+(f<<4)|0;c[H>>2]=c[G>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];f=f+1|0;}while((f|0)!=(i|0));H=32;}if((H|0)==32){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[y>>2]=0;}a[w>>0]=1;c[y>>2]=h;c[I+144+8>>2]=e;c[h>>2]=c[I+128>>2];c[h+4>>2]=c[I+128+4>>2];c[h+8>>2]=c[I+128+8>>2];c[h+12>>2]=c[I+128+12>>2];if((e|0)!=1){f=1;do{G=(c[y>>2]|0)+(f<<4)|0;c[G>>2]=c[I+128>>2];c[G+4>>2]=c[I+128+4>>2];c[G+8>>2]=c[I+128+8>>2];c[G+12>>2]=c[I+128+12>>2];f=f+1|0;}while((f|0)!=(e|0))}c[I+144+4>>2]=e;i=I+128+(c[I+108>>2]<<2)|0;k=c[y>>2]|0;p=I+128+(c[I+112>>2]<<2)|0;q=I+128+(c[I+104>>2]<<2)|0;o=+g[I+16>>2];r=+g[I+20>>2];t=+g[I+24>>2];u=+g[I+168>>2];n=+g[s>>2];m=+g[v>>2];h=0;f=d;while(1){z=(+g[f+4>>2]-r)*n;B=(+g[f+8>>2]-t)*m;g[I+128>>2]=(+g[f>>2]-o)*u;g[I+128+4>>2]=z;g[I+128+8>>2]=B;g[I+128+12>>2]=0.0;c[k+(h<<4)>>2]=~~+g[i>>2];c[k+(h<<4)+4>>2]=~~+g[p>>2];c[k+(h<<4)+8>>2]=~~+g[q>>2];c[k+(h<<4)+12>>2]=h;h=h+1|0;if((h|0)==(e|0))break;else f=f+16|0;}if((e|0)>1)Mg(I+144|0,0,e+-1|0);c[I+36>>2]=c[I+32>>2];c[I+40>>2]=0;c[I+44>>2]=e;f=c[I+84>>2]|0;if((f|0)<(e|0)){if((c[I+88>>2]|0)<(e|0)){if(!e){h=0;k=f;}else{c[6436]=(c[6436]|0)+1;h=ic((e<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}k=c[I+84>>2]|0;}if((k|0)>0){i=0;do{c[h+(i<<2)>>2]=c[(c[I+92>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(k|0))}i=c[I+92>>2]|0;if(i|0){if(a[I+96>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[I+92>>2]=0;}a[I+96>>0]=1;c[I+92>>2]=h;c[I+88>>2]=e;}do{c[(c[I+92>>2]|0)+(f<<2)>>2]=0;f=f+1|0;}while((f|0)!=(e|0))}c[I+84>>2]=e;p=0;do{f=c[I+40>>2]|0;if(!f){f=c[I+36>>2]|0;if(!f){c[6436]=(c[6436]|0)+1;f=ic(31)|0;if(!f)h=0;else{c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16;}f=c[I+44>>2]|0;c[h+4>>2]=f;i=h+8|0;c[i>>2]=0;c[6436]=(c[6436]|0)+1;f=ic((f*112|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}c[h>>2]=f;c[i>>2]=c[I+32>>2];c[I+32>>2]=h;}else{c[I+36>>2]=c[f+8>>2];h=f;}f=c[h>>2]|0;k=c[h+4>>2]|0;if((k|0)>0){h=0;i=f;do{h=h+1|0;G=i;i=i+112|0;c[G>>2]=(h|0)<(k|0)?i:0;}while((h|0)!=(k|0))}}c[I+40>>2]=c[f>>2];G=f+104|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[G>>2]=-1;c[f+8>>2]=0;E=(c[y>>2]|0)+(p<<4)|0;F=f+88|0;c[F>>2]=c[E>>2];c[F+4>>2]=c[E+4>>2];c[F+8>>2]=c[E+8>>2];c[F+12>>2]=c[E+12>>2];c[G>>2]=-1;c[(c[I+92>>2]|0)+(p<<2)>>2]=f;p=p+1|0;}while((p|0)<(e|0));f=c[y>>2]|0;if(f|0){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[y>>2]=0;}a[w>>0]=1;c[y>>2]=0;c[I+144+4>>2]=0;c[I+144+8>>2]=0;c[I+52>>2]=c[I+48>>2];c[I+56>>2]=0;c[I+60>>2]=e*6;c[I+116>>2]=0;c[I+120>>2]=0;c[I+100>>2]=-3;c[I+128>>2]=0;c[I+128+4>>2]=0;c[I+128+8>>2]=0;c[I+128+12>>2]=0;gc(I,0,e,I+128|0);c[I+124>>2]=c[I+128>>2];f=c[y>>2]|0;if(f|0){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[y>>2]=0;}f=c[b+4>>2]|0;if((f|0)<0){if((c[b+8>>2]|0)<0){h=c[b+12>>2]|0;if(h|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=0;c[b+8>>2]=0;}do{G=(c[b+12>>2]|0)+(f<<4)|0;c[G>>2]=c[I+168>>2];c[G+4>>2]=c[I+168+4>>2];c[G+8>>2]=c[I+168+8>>2];c[G+12>>2]=c[I+168+12>>2];f=f+1|0;}while((f|0)!=0)}c[b+4>>2]=0;c[I+168>>2]=0;c[I+168+4>>2]=0;c[I+168+8>>2]=0;f=c[b+24>>2]|0;if((f|0)<0){if((c[b+28>>2]|0)<0){h=c[b+32>>2]|0;if(h|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+28>>2]=0;}do{G=(c[b+32>>2]|0)+(f*12|0)|0;c[G>>2]=c[I+168>>2];c[G+4>>2]=c[I+168+4>>2];c[G+8>>2]=c[I+168+8>>2];f=f+1|0;}while((f|0)!=0)}c[b+24>>2]=0;h=c[b+44>>2]|0;if((h|0)<0){f=c[b+52>>2]|0;if((c[b+48>>2]|0)<0){do if(f|0){if(!(a[b+56>>0]|0))break;c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}while(0);a[b+56>>0]=1;c[b+52>>2]=0;c[b+48>>2]=0;f=0;}Ik(f+(h<<2)|0,0,S(h,-4)|0)|0;}c[b+44>>2]=0;h=c[I+124>>2]|0;do if((c[h+104>>2]|0)<0){c[h+104>>2]=0;c[6436]=(c[6436]|0)+1;f=ic(23)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}c[f>>2]=h;G=0;s=1;v=f;w=1;i=f;y=f;while(1){if((c[h+100>>2]|0)>-1){g[I+168+(c[I+108>>2]<<2)>>2]=+(c[h+88>>2]|0);g[I+168+(c[I+112>>2]<<2)>>2]=+(c[h+92>>2]|0);m=+(c[h+96>>2]|0);}else{F=h+24|0;E=h+32|0;B=+Dm(c[F>>2]|0,c[F+4>>2]|0,c[E>>2]|0,c[E+4>>2]|0);E=h+72|0;F=h+80|0;m=+Dm(c[E>>2]|0,c[E+4>>2]|0,c[F>>2]|0,c[F+4>>2]|0);g[I+168+(c[I+108>>2]<<2)>>2]=B/m;F=h+40|0;E=h+48|0;B=+Dm(c[F>>2]|0,c[F+4>>2]|0,c[E>>2]|0,c[E+4>>2]|0)/m;g[I+168+(c[I+112>>2]<<2)>>2]=B;E=h+56|0;F=h+64|0;m=+Dm(c[E>>2]|0,c[E+4>>2]|0,c[F>>2]|0,c[F+4>>2]|0)/m;}g[I+168+(c[I+104>>2]<<2)>>2]=m;m=+g[I+168>>2]*+g[I>>2]+ +g[I+16>>2];n=+g[I+168+4>>2]*+g[I+4>>2]+ +g[I+20>>2];o=+g[I+168+8>>2]*+g[I+8>>2]+ +g[I+24>>2];f=c[b+4>>2]|0;do if((f|0)==(c[b+8>>2]|0)){q=f|0?f<<1:1;if((f|0)>=(q|0))break;if(!q)p=0;else{c[6436]=(c[6436]|0)+1;f=ic((q<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}p=f;f=c[b+4>>2]|0;}if((f|0)>0){k=0;do{F=p+(k<<4)|0;E=(c[b+12>>2]|0)+(k<<4)|0;c[F>>2]=c[E>>2];c[F+4>>2]=c[E+4>>2];c[F+8>>2]=c[E+8>>2];c[F+12>>2]=c[E+12>>2];k=k+1|0;}while((k|0)!=(f|0))}f=c[b+12>>2]|0;if(f|0){if(a[b+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+12>>2]=0;}a[b+16>>0]=1;c[b+12>>2]=p;c[b+8>>2]=q;f=c[b+4>>2]|0;}while(0);F=c[b+12>>2]|0;g[F+(f<<4)>>2]=m;g[F+(f<<4)+4>>2]=n;g[F+(f<<4)+8>>2]=o;g[F+(f<<4)+12>>2]=0.0;c[b+4>>2]=(c[b+4>>2]|0)+1;F=c[h+8>>2]|0;if(!F){k=s;A=v;h=w;}else{D=F;E=-1;f=-1;A=s;e=v;h=w;while(1){C=D+20|0;p=c[C>>2]|0;if((p|0)<0){d=c[b+24>>2]|0;c[I+168>>2]=0;c[I+168+4>>2]=0;c[I+168+8>>2]=0;do if((d|0)==(c[b+28>>2]|0)){s=d|0?d<<1:1;if((d|0)>=(s|0)){k=d;break}if(!s){k=0;q=d;}else{c[6436]=(c[6436]|0)+1;k=ic((s*12|3)+16|0)|0;if(!k)k=0;else{c[(k+4+15&-16)+-4>>2]=k;k=k+4+15&-16;}q=c[b+24>>2]|0;}if((q|0)>0){p=0;do{w=k+(p*12|0)|0;v=(c[b+32>>2]|0)+(p*12|0)|0;c[w>>2]=c[v>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];p=p+1|0;}while((p|0)!=(q|0))}p=c[b+32>>2]|0;if(p|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=k;c[b+28>>2]=s;k=c[b+24>>2]|0;}else k=d;while(0);k=(c[b+32>>2]|0)+(k*12|0)|0;c[k>>2]=c[I+168>>2];c[k+4>>2]=c[I+168+4>>2];c[k+8>>2]=c[I+168+8>>2];k=(c[b+24>>2]|0)+1|0;c[b+24>>2]=k;c[I+168>>2]=0;c[I+168+4>>2]=0;c[I+168+8>>2]=0;do if((k|0)==(c[b+28>>2]|0)){s=k|0?k<<1:1;if((k|0)>=(s|0))break;if(!s)q=0;else{c[6436]=(c[6436]|0)+1;k=ic((s*12|3)+16|0)|0;if(!k)k=0;else{c[(k+4+15&-16)+-4>>2]=k;k=k+4+15&-16;}q=k;k=c[b+24>>2]|0;}if((k|0)>0){p=0;do{w=q+(p*12|0)|0;v=(c[b+32>>2]|0)+(p*12|0)|0;c[w>>2]=c[v>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];p=p+1|0;}while((p|0)!=(k|0))}k=c[b+32>>2]|0;if(k|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=q;c[b+28>>2]=s;k=c[b+24>>2]|0;}while(0);w=(c[b+32>>2]|0)+(k*12|0)|0;c[w>>2]=c[I+168>>2];c[w+4>>2]=c[I+168+4>>2];c[w+8>>2]=c[I+168+8>>2];c[b+24>>2]=(c[b+24>>2]|0)+1;w=c[b+32>>2]|0;c[C>>2]=d;c[(c[D+8>>2]|0)+20>>2]=d+1;c[w+(d*12|0)+4>>2]=1;c[w+((d+1|0)*12|0)+4>>2]=-1;v=c[D+12>>2]|0;k=c[v+104>>2]|0;if((k|0)<0){c[v+104>>2]=h;do if((h|0)==(A|0)){k=A|0?A<<1:1;if((A|0)>=(k|0)){k=A;p=e;s=y;break}do if(!k)q=0;else{c[6436]=(c[6436]|0)+1;p=ic((k<<2|3)+16|0)|0;if(!p){q=0;break}c[(p+4+15&-16)+-4>>2]=p;q=p+4+15&-16;}while(0);if((A|0)>0){p=0;do{c[q+(p<<2)>>2]=c[e+(p<<2)>>2];p=p+1|0;}while((p|0)!=(A|0));if(!i){p=q;s=q;i=q;break}}else if((e|0)==0|(i|0)==0){p=q;s=q;i=q;break}c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);p=q;s=q;i=q;}else{k=A;p=e;s=y;}while(0);c[p+(h<<2)>>2]=v;v=h;h=h+1|0;q=s;}else{v=k;k=A;p=e;q=y;}c[w+(d*12|0)+8>>2]=v;c[w+((d+1|0)*12|0)+8>>2]=G;s=p;p=c[C>>2]|0;}else{k=A;s=e;q=y;}if((E|0)>-1)c[(c[b+32>>2]|0)+(p*12|0)>>2]=E-p;else f=p;D=c[D>>2]|0;if((D|0)==(F|0))break;else{E=p;A=k;e=s;y=q;}}c[(c[b+32>>2]|0)+(f*12|0)>>2]=p-f;A=s;y=q;}f=G+1|0;if((f|0)>=(h|0))break;G=f;s=k;v=A;w=h;h=c[A+(f<<2)>>2]|0;}if((G|0)>-1){v=0;while(1){w=c[(c[A+(v<<2)>>2]|0)+8>>2]|0;if(w|0){s=w;do{q=s+20|0;f=c[q>>2]|0;if((f|0)>-1){h=c[b+44>>2]|0;do if((h|0)==(c[b+48>>2]|0)){p=h|0?h<<1:1;if((h|0)>=(p|0))break;if(!p)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((p<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[b+44>>2]|0;}k=c[b+52>>2]|0;if((h|0)<=0){if(k)H=180;}else{i=0;do{c[f+(i<<2)>>2]=c[k+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0));H=180;}if((H|0)==180){H=0;if(a[b+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[b+52>>2]=0;h=c[b+44>>2]|0;}a[b+56>>0]=1;c[b+52>>2]=f;c[b+48>>2]=p;f=c[q>>2]|0;}while(0);c[(c[b+52>>2]|0)+(h<<2)>>2]=f;c[b+44>>2]=(c[b+44>>2]|0)+1;f=s;do{c[f+20>>2]=-1;f=c[(c[f+8>>2]|0)+4>>2]|0;}while((f|0)!=(s|0))}s=c[s>>2]|0;}while((s|0)!=(w|0))}if((v|0)==(G|0))break;else v=v+1|0;}}if((A|0)==0|(y|0)==0)break;c[6437]=(c[6437]|0)+1;Tc(c[y+-4>>2]|0);}while(0);Ai(I);l=I;return}function nc(b,d,e,f,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,o=0,p=0.0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;Y=l;l=l+256|0;c[b+188>>2]=-1;aj(12950);c[b+184>>2]=0;if((e|0)>0){m=0;do{c[(c[d+(m<<2)>>2]|0)+212>>2]=-1;m=m+1|0;}while((m|0)!=(e|0))}m=c[b+12>>2]|0;if((m|0)>(e|0)){o=b+8|0;n=m;}else{if((e+1|0)!=0?(c[6436]=(c[6436]|0)+1,n=ic(((e+1|0)*244|3)+16|0)|0,(n|0)!=0):0){c[(n+4+15&-16)+-4>>2]=n;o=n+4+15&-16;}else o=0;n=c[b+8>>2]|0;if((n|0)>0){m=0;do{V=o+(m*244|0)|0;W=c[b+16>>2]|0;U=W+(m*244|0)|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];V=W+(m*244|0)+16|0;U=o+(m*244|0)+16|0;c[U>>2]=c[V>>2];c[U+4>>2]=c[V+4>>2];c[U+8>>2]=c[V+8>>2];c[U+12>>2]=c[V+12>>2];U=W+(m*244|0)+32|0;V=o+(m*244|0)+32|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];V=o+(m*244|0)+48|0;U=W+(m*244|0)+48|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];Vh(o+(m*244|0)+64|0,W+(m*244|0)+64|0,180)|0;m=m+1|0;}while((m|0)!=(n|0))}m=c[b+16>>2]|0;if(m|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=o;c[b+12>>2]=e+1;o=b+8|0;n=e+1|0;}Ik(Y|0,0,244)|0;m=c[o>>2]|0;if((m|0)<0){if((n|0)<0){n=c[b+16>>2]|0;if(n|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0;}do{W=c[b+16>>2]|0;V=W+(m*244|0)|0;c[V>>2]=c[Y>>2];c[V+4>>2]=c[Y+4>>2];c[V+8>>2]=c[Y+8>>2];c[V+12>>2]=c[Y+12>>2];V=W+(m*244|0)+16|0;c[V>>2]=c[Y+16>>2];c[V+4>>2]=c[Y+16+4>>2];c[V+8>>2]=c[Y+16+8>>2];c[V+12>>2]=c[Y+16+12>>2];V=W+(m*244|0)+32|0;c[V>>2]=c[Y+32>>2];c[V+4>>2]=c[Y+32+4>>2];c[V+8>>2]=c[Y+32+8>>2];c[V+12>>2]=c[Y+32+12>>2];V=W+(m*244|0)+48|0;c[V>>2]=c[Y+48>>2];c[V+4>>2]=c[Y+48+4>>2];c[V+8>>2]=c[Y+48+8>>2];c[V+12>>2]=c[Y+48+12>>2];Vh(W+(m*244|0)+64|0,Y+64|0,180)|0;m=m+1|0;}while((m|0)!=0)}c[o>>2]=0;if((e|0)>0){m=0;do{o=d+(m<<2)|0;n=Cj(b,c[o>>2]|0,+g[k+12>>2])|0;o=c[o>>2]|0;if((!((o|0)==0?1:(c[o+236>>2]&2|0)==0)?+g[o+344>>2]!=0.0:0)?(q=c[b+16>>2]|0,c[o+504>>2]&2|0):0){p=+g[k+76>>2];M=1.0/+g[o+396>>2];O=1.0/+g[o+400>>2];s=1.0/+g[o+404>>2];E=+g[o+4>>2];H=+g[o+8>>2];I=+g[o+12>>2];J=+g[o+20>>2];K=+g[o+24>>2];L=+g[o+28>>2];N=+g[o+36>>2];P=+g[o+40>>2];v=+g[o+44>>2];w=+g[o+328>>2];x=+g[o+332>>2];u=+g[o+336>>2];y=(M*E*E+O*H*H+s*I*I)*w+(M*E*J+O*H*K+s*I*L)*x+(M*E*N+O*H*P+s*I*v)*u;z=(M*J*E+O*K*H+s*L*I)*w+(M*J*J+O*K*K+s*L*L)*x+(M*J*N+O*K*P+s*L*v)*u;v=(M*N*E+O*P*H+s*v*I)*w+(M*N*J+O*P*K+s*v*L)*x+(M*N*N+O*P*P+s*v*v)*u;s=(x*v-u*z)*(x*v-u*z)+(u*y-w*v)*(u*y-w*v)+(w*z-x*y)*(w*z-x*y);if(s>p*p){p=1.0/+G(+s)*p;t=(x*v-u*z)*p;s=p*(u*y-w*v);p=p*(w*z-x*y);}else{t=x*v-u*z;s=u*y-w*v;p=w*z-x*y;}N=+g[k+12>>2];O=(t*+g[o+268>>2]+s*+g[o+284>>2]+p*+g[o+300>>2])*N;P=N*(t*+g[o+272>>2]+s*+g[o+288>>2]+p*+g[o+304>>2]);g[q+(n*244|0)+224>>2]=+g[q+(n*244|0)+224>>2]-(t*+g[o+264>>2]+s*+g[o+280>>2]+p*+g[o+296>>2])*N;g[q+(n*244|0)+228>>2]=+g[q+(n*244|0)+228>>2]-O;g[q+(n*244|0)+232>>2]=+g[q+(n*244|0)+232>>2]-P;}m=m+1|0;}while((m|0)!=(e|0))}if((j|0)>0){m=0;do{W=c[i+(m<<2)>>2]|0;lb[c[(c[W>>2]|0)+8>>2]&511](W);g[W+36>>2]=0.0;m=m+1|0;}while((m|0)<(j|0))}n=c[b+168>>2]|0;if((n|0)<(j|0)?(c[b+172>>2]|0)<(j|0):0){if(!j)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((j<<3|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+168>>2]|0;}if((n|0)>0){o=0;do{U=(c[b+176>>2]|0)+(o<<3)|0;V=c[U+4>>2]|0;W=m+(o<<3)|0;c[W>>2]=c[U>>2];c[W+4>>2]=V;o=o+1|0;}while((o|0)!=(n|0))}n=c[b+176>>2]|0;if(n|0){if(a[b+180>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[b+176>>2]=0;}a[b+180>>0]=1;c[b+176>>2]=m;c[b+172>>2]=j;}c[b+168>>2]=j;if((j|0)>0){m=0;r=0;do{q=c[b+176>>2]|0;e=q+(r<<3)|0;d=i+(r<<2)|0;n=c[d>>2]|0;o=c[n+44>>2]|0;if(o){n=o+64|0;do{c[o>>2]=0;o=o+4|0;}while((o|0)<(n|0));n=c[d>>2]|0;}if(!(a[n+20>>0]|0)){c[e>>2]=0;c[q+(r<<3)+4>>2]=0;n=0;}else{nb[c[(c[n>>2]|0)+16>>2]&127](n,e);n=c[e>>2]|0;}m=n+m|0;r=r+1|0;}while((r|0)<(j|0));d=m;}else d=0;n=c[b+48>>2]|0;if((n|0)<(d|0)?(c[b+52>>2]|0)<(d|0):0){if(!d)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((d*152|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+48>>2]|0;}if((n|0)>0){o=0;do{Vh(m+(o*152|0)|0,(c[b+56>>2]|0)+(o*152|0)|0,152)|0;o=o+1|0;}while((o|0)!=(n|0))}n=c[b+56>>2]|0;if(n|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=m;c[b+52>>2]=d;}c[b+48>>2]=d;if((j|0)>0){V=0;W=0;m=c[b+176>>2]|0;while(1){U=m+(W<<3)|0;if(!(c[U>>2]|0))n=0;else{n=c[b+56>>2]|0;d=n+(V*152|0)|0;q=i+(W<<2)|0;e=c[q>>2]|0;r=c[e+28>>2]|0;Q=c[e+32>>2]|0;R=Cj(b,r,+g[k+12>>2])|0;S=Cj(b,Q,+g[k+12>>2])|0;T=c[b+16>>2]|0;o=c[e+24>>2]|0;o=(o|0)>0?o:c[k+20>>2]|0;if((o|0)>(c[b+184>>2]|0))c[b+184>>2]=o;if((c[U>>2]|0)>0){m=0;do{Ik(d+(m*152|0)|0,0,152)|0;g[d+(m*152|0)+120>>2]=-3402823466385288598117041.0e14;g[d+(m*152|0)+124>>2]=3402823466385288598117041.0e14;g[d+(m*152|0)+100>>2]=0.0;g[d+(m*152|0)+96>>2]=0.0;c[d+(m*152|0)+144>>2]=R;c[d+(m*152|0)+148>>2]=S;c[d+(m*152|0)+136>>2]=o;m=m+1|0;}while((m|0)<(c[U>>2]|0))}c[T+(R*244|0)+64>>2]=0;c[T+(R*244|0)+64+4>>2]=0;c[T+(R*244|0)+64+8>>2]=0;c[T+(R*244|0)+64+12>>2]=0;c[T+(R*244|0)+64+16>>2]=0;c[T+(R*244|0)+64+20>>2]=0;c[T+(R*244|0)+64+24>>2]=0;c[T+(R*244|0)+64+28>>2]=0;c[T+(R*244|0)+144>>2]=0;c[T+(R*244|0)+144+4>>2]=0;c[T+(R*244|0)+144+8>>2]=0;c[T+(R*244|0)+144+12>>2]=0;c[T+(R*244|0)+144+16>>2]=0;c[T+(R*244|0)+144+20>>2]=0;c[T+(R*244|0)+144+24>>2]=0;c[T+(R*244|0)+144+28>>2]=0;c[T+(S*244|0)+64>>2]=0;c[T+(S*244|0)+64+4>>2]=0;c[T+(S*244|0)+64+8>>2]=0;c[T+(S*244|0)+64+12>>2]=0;c[T+(S*244|0)+64+16>>2]=0;c[T+(S*244|0)+64+20>>2]=0;c[T+(S*244|0)+64+24>>2]=0;c[T+(S*244|0)+64+28>>2]=0;c[T+(S*244|0)+144>>2]=0;c[T+(S*244|0)+144+4>>2]=0;c[T+(S*244|0)+144+8>>2]=0;c[T+(S*244|0)+144+12>>2]=0;c[T+(S*244|0)+144+16>>2]=0;c[T+(S*244|0)+144+20>>2]=0;c[T+(S*244|0)+144+24>>2]=0;c[T+(S*244|0)+144+28>>2]=0;g[Y>>2]=1.0/+g[k+12>>2];c[Y+4>>2]=c[k+32>>2];c[Y+8>>2]=n+(V*152|0)+16;c[Y+12>>2]=d;c[Y+16>>2]=n+(V*152|0)+48;c[Y+20>>2]=n+(V*152|0)+32;c[Y+24>>2]=38;c[Y+28>>2]=n+(V*152|0)+112;o=n+(V*152|0)+116|0;c[o>>2]=c[k+40>>2];c[Y+52>>2]=c[k+4>>2];c[Y+32>>2]=o;c[Y+36>>2]=n+(V*152|0)+120;c[Y+40>>2]=n+(V*152|0)+124;c[Y+48>>2]=c[k+20>>2];o=c[q>>2]|0;nb[c[(c[o>>2]|0)+20>>2]&127](o,Y);if((c[U>>2]|0)>0){n=0;do{m=d+(n*152|0)+124|0;p=+g[(c[q>>2]|0)+16>>2];if(+g[m>>2]>=p)g[m>>2]=p;m=d+(n*152|0)+120|0;if(+g[m>>2]<=-p)g[m>>2]=-p;c[d+(n*152|0)+132>>2]=e;Z=d+(n*152|0)|0;_=c[e+28>>2]|0;P=+g[Z>>2];N=+g[Z+4>>2];O=+g[Z+8>>2];p=(P*+g[_+280>>2]+N*+g[_+284>>2]+O*+g[_+288>>2])*+g[_+548>>2];s=(P*+g[_+296>>2]+N*+g[_+300>>2]+O*+g[_+304>>2])*+g[_+552>>2];o=d+(n*152|0)+64|0;g[o>>2]=(+g[_+264>>2]*P+ +g[_+268>>2]*N+ +g[_+272>>2]*O)*+g[_+544>>2];g[o+4>>2]=p;g[o+8>>2]=s;g[o+12>>2]=0.0;o=d+(n*152|0)+32|0;_=c[e+32>>2]|0;s=+g[o>>2];p=+g[o+4>>2];O=+g[o+8>>2];N=(s*+g[_+280>>2]+p*+g[_+284>>2]+O*+g[_+288>>2])*+g[_+548>>2];P=(s*+g[_+296>>2]+p*+g[_+300>>2]+O*+g[_+304>>2])*+g[_+552>>2];m=d+(n*152|0)+80|0;g[m>>2]=(+g[_+264>>2]*s+ +g[_+268>>2]*p+ +g[_+272>>2]*O)*+g[_+544>>2];g[m+4>>2]=N;g[m+8>>2]=P;g[m+12>>2]=0.0;m=d+(n*152|0)+16|0;P=+g[r+344>>2];N=+g[m>>2];O=+g[m+4>>2];p=+g[m+8>>2];s=+g[Z>>2];t=+g[Z+4>>2];u=+g[Z+8>>2];Z=d+(n*152|0)+48|0;B=+g[Q+344>>2];v=+g[Z>>2];w=+g[Z+4>>2];x=+g[Z+8>>2];y=+g[o>>2];z=+g[o+4>>2];A=+g[o+8>>2];B=N*P*N+O*P*O+p*P*p+(s*(+g[r+264>>2]*s+ +g[r+268>>2]*t+ +g[r+272>>2]*u)+t*(s*+g[r+280>>2]+t*+g[r+284>>2]+u*+g[r+288>>2])+u*(s*+g[r+296>>2]+t*+g[r+300>>2]+u*+g[r+304>>2]))+(v*B*v+w*B*w+x*B*x)+(y*(+g[Q+264>>2]*y+ +g[Q+268>>2]*z+ +g[Q+272>>2]*A)+z*(y*+g[Q+280>>2]+z*+g[Q+284>>2]+A*+g[Q+288>>2])+A*(y*+g[Q+296>>2]+z*+g[Q+300>>2]+A*+g[Q+304>>2]));o=+F(+B)>1.1920928955078125e-07;B=o?1.0/B:0.0;g[d+(n*152|0)+108>>2]=B;if(!(c[T+(R*244|0)+240>>2]|0)){C=0.0;D=0.0;E=0.0;H=0.0;I=0.0;J=0.0;}else{C=+g[T+(R*244|0)+208>>2];D=+g[T+(R*244|0)+212>>2];E=+g[T+(R*244|0)+216>>2];H=+g[T+(R*244|0)+224>>2];I=+g[T+(R*244|0)+228>>2];J=+g[T+(R*244|0)+232>>2];}if(!(c[T+(S*244|0)+240>>2]|0)){K=0.0;L=0.0;M=0.0;N=0.0;O=0.0;P=0.0;}else{K=+g[T+(S*244|0)+208>>2];L=+g[T+(S*244|0)+212>>2];M=+g[T+(S*244|0)+216>>2];N=+g[T+(S*244|0)+224>>2];O=+g[T+(S*244|0)+228>>2];P=+g[T+(S*244|0)+232>>2];}_=d+(n*152|0)+112|0;g[_>>2]=+g[_>>2]*B+B*(0.0-+g[Y+52>>2]*((C+ +g[r+312>>2])*+g[m>>2]+(D+ +g[r+316>>2])*+g[m+4>>2]+(E+ +g[r+320>>2])*p+((H+ +g[r+328>>2])*s+(I+ +g[r+332>>2])*t+(J+ +g[r+336>>2])*u)+((K+ +g[Q+312>>2])*v+(L+ +g[Q+316>>2])*w+(M+ +g[Q+320>>2])*x+((N+ +g[Q+328>>2])*y+(O+ +g[Q+332>>2])*z+(P+ +g[Q+336>>2])*A))));g[d+(n*152|0)+100>>2]=0.0;n=n+1|0;}while((n|0)<(c[U>>2]|0))}n=c[b+176>>2]|0;m=n;n=c[n+(W<<3)>>2]|0;}W=W+1|0;if((W|0)>=(j|0))break;else V=n+V|0;}}Zb[c[(c[b>>2]|0)+28>>2]&127](b,f,h,k);q=c[b+48>>2]|0;e=c[b+28>>2]|0;r=c[b+68>>2]|0;n=c[b+128>>2]|0;if((n|0)<(q|0)?(c[b+132>>2]|0)<(q|0):0){if(!q)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((q<<2|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+128>>2]|0;}d=c[b+136>>2]|0;if((n|0)<=0)if(!d)n=b+140|0;else X=99;else{o=0;do{c[m+(o<<2)>>2]=c[d+(o<<2)>>2];o=o+1|0;}while((o|0)!=(n|0));X=99;}if((X|0)==99){if(a[b+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+136>>2]=0;n=b+140|0;}a[n>>0]=1;c[b+136>>2]=m;c[b+132>>2]=q;}c[b+128>>2]=q;if(!(c[k+64>>2]&16)){n=c[b+108>>2]|0;if((n|0)<(e|0)?(c[b+112>>2]|0)<(e|0):0){if(!e)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((e<<2|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+108>>2]|0;}d=c[b+116>>2]|0;if((n|0)<=0)if(!d)n=b+120|0;else X=129;else{o=0;do{c[m+(o<<2)>>2]=c[d+(o<<2)>>2];o=o+1|0;}while((o|0)!=(n|0));X=129;}if((X|0)==129){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+116>>2]=0;n=b+120|0;}a[n>>0]=1;c[b+116>>2]=m;c[b+112>>2]=e;}c[b+108>>2]=e;}else{n=c[b+108>>2]|0;if((n|0)<(e<<1|0)?(c[b+112>>2]|0)<(e<<1|0):0){if(!e)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((e<<3|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+108>>2]|0;}d=c[b+116>>2]|0;if((n|0)<=0)if(!d)n=b+120|0;else X=114;else{o=0;do{c[m+(o<<2)>>2]=c[d+(o<<2)>>2];o=o+1|0;}while((o|0)!=(n|0));X=114;}if((X|0)==114){if(a[b+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+116>>2]=0;n=b+120|0;}a[n>>0]=1;c[b+116>>2]=m;c[b+112>>2]=e<<1;}c[b+108>>2]=e<<1;}n=c[b+148>>2]|0;if((n|0)<(r|0)?(c[b+152>>2]|0)<(r|0):0){if(!r)m=0;else{c[6436]=(c[6436]|0)+1;m=ic((r<<2|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16;}n=c[b+148>>2]|0;}d=c[b+156>>2]|0;if((n|0)<=0)if(!d)n=b+160|0;else X=144;else{o=0;do{c[m+(o<<2)>>2]=c[d+(o<<2)>>2];o=o+1|0;}while((o|0)!=(n|0));X=144;}if((X|0)==144){if(a[b+160>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+156>>2]=0;n=b+160|0;}a[n>>0]=1;c[b+156>>2]=m;c[b+152>>2]=r;}c[b+148>>2]=r;if((q|0)>0){n=c[b+136>>2]|0;m=0;do{c[n+(m<<2)>>2]=m;m=m+1|0;}while((m|0)!=(q|0))}if((e|0)>0){n=c[b+116>>2]|0;m=0;do{c[n+(m<<2)>>2]=m;m=m+1|0;}while((m|0)!=(e|0))}if((r|0)>0){n=c[b+156>>2]|0;m=0;do{c[n+(m<<2)>>2]=m;m=m+1|0;}while((m|0)!=(r|0))}m=c[2388]|0;_=(c[m+16>>2]|0)+-1|0;c[m+16>>2]=_;if(_|0){l=Y;return 0.0}do if(c[m+4>>2]|0){Za(Y|0,0)|0;_=c[6435]|0;g[m+8>>2]=+g[m+8>>2]+ +(((c[Y+4>>2]|0)-(c[_+4>>2]|0)+(((c[Y>>2]|0)-(c[_>>2]|0)|0)*1e6|0)-(c[m+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[m+16>>2]|0)){m=c[2388]|0;break}else{l=Y;return 0.0}}while(0);c[2388]=c[m+20>>2];l=Y;return 0.0}function oc(b){b=b|0;var d=0,e=0,f=0.0,h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0;J=l;l=l+64|0;if(!(a[b+356>>0]|0)){b=a[b+312>>0]|0;b=b<<24>>24!=0;l=J;return b|0}c[b+336>>2]=0;c[b+336+4>>2]=0;c[b+336+8>>2]=0;c[b+336+12>>2]=0;a[b+336+16>>0]=0;p=a[b+332>>0]|0;a[b+332>>0]=p&-16;a[b+356>>0]=0;switch(c[b>>2]|0){case 0:{a[b+312>>0]=0;b=0;b=b<<24>>24!=0;l=J;return b|0}case 1:{c[b+244>>2]=c[b+84>>2];c[b+244+4>>2]=c[b+84+4>>2];c[b+244+8>>2]=c[b+84+8>>2];c[b+244+12>>2]=c[b+84+12>>2];c[b+260>>2]=c[b+164>>2];c[b+260+4>>2]=c[b+164+4>>2];c[b+260+8>>2]=c[b+164+8>>2];c[b+260+12>>2]=c[b+164+12>>2];F=+g[b+248>>2]-+g[b+264>>2];G=+g[b+252>>2]-+g[b+268>>2];g[b+276>>2]=+g[b+244>>2]-+g[b+260>>2];g[b+280>>2]=F;g[b+284>>2]=G;g[b+288>>2]=0.0;a[b+352>>0]=0;a[b+332>>0]=p&-16;g[b+336>>2]=1.0;g[b+340>>2]=0.0;g[b+344>>2]=0.0;g[b+348>>2]=0.0;a[b+312>>0]=1;b=1;b=b<<24>>24!=0;l=J;return b|0}case 2:{f=+g[b+4>>2];i=+g[b+8>>2];j=+g[b+12>>2];k=+g[b+20>>2]-f;m=+g[b+24>>2]-i;n=+g[b+28>>2]-j;if((0.0-f)*k+(0.0-i)*m+(0.0-j)*n>0.0)if((0.0-f)*k+(0.0-i)*m+(0.0-j)*n<k*k+m*m+n*n){a[b+332>>0]=p&-16|1;e=2;d=p&-16|1;i=((0.0-f)*k+(0.0-i)*m+(0.0-j)*n)/(k*k+m*m+n*n);}else{e=2;d=p&-16;i=1.0;}else{e=1;d=p&-16;i=0.0;}e=d|e;a[b+332>>0]=e;f=1.0-i;g[b+336>>2]=f;g[b+340>>2]=i;g[b+344>>2]=0.0;g[b+348>>2]=0.0;B=+g[b+84>>2];D=+g[b+88>>2];F=+g[b+92>>2];B=B+i*(+g[b+100>>2]-B);D=D+i*(+g[b+104>>2]-D);F=F+i*(+g[b+108>>2]-F);g[b+244>>2]=B;g[b+248>>2]=D;g[b+252>>2]=F;g[b+256>>2]=0.0;C=+g[b+164>>2];E=+g[b+168>>2];G=+g[b+172>>2];C=C+i*(+g[b+180>>2]-C);E=E+i*(+g[b+184>>2]-E);G=G+i*(+g[b+188>>2]-G);g[b+260>>2]=C;g[b+264>>2]=E;g[b+268>>2]=G;g[b+272>>2]=0.0;g[b+276>>2]=B-C;g[b+280>>2]=D-E;g[b+284>>2]=F-G;g[b+288>>2]=0.0;if(!(e&2)){c[b>>2]=1;d=0;}else d=1;if(!(e&1)){I=b+164+(d<<4)|0;H=b+84+(d<<4)|0;r=b+4+(d<<4)|0;c[b>>2]=d;c[b+4>>2]=c[r>>2];c[b+4+4>>2]=c[r+4>>2];c[b+4+8>>2]=c[r+8>>2];c[b+4+12>>2]=c[r+12>>2];c[b+84>>2]=c[H>>2];c[b+84+4>>2]=c[H+4>>2];c[b+84+8>>2]=c[H+8>>2];c[b+84+12>>2]=c[H+12>>2];c[b+164>>2]=c[I>>2];c[b+164+4>>2]=c[I+4>>2];c[b+164+8>>2]=c[I+8>>2];c[b+164+12>>2]=c[I+12>>2];}I=i>=0.0&f>=0.0&1;a[b+312>>0]=I;b=I;b=b<<24>>24!=0;l=J;return b|0}case 3:{c[J+16>>2]=0;c[J+16+4>>2]=0;c[J+16+8>>2]=0;c[J+16+12>>2]=0;Te(J+16|0,b+4|0,b+20|0,b+36|0,b+316|0);G=+g[b+336>>2];f=+g[b+340>>2];i=+g[b+344>>2];B=+g[b+84>>2]*G+ +g[b+100>>2]*f+ +g[b+116>>2]*i;D=G*+g[b+88>>2]+f*+g[b+104>>2]+i*+g[b+120>>2];F=G*+g[b+92>>2]+f*+g[b+108>>2]+i*+g[b+124>>2];g[b+244>>2]=B;g[b+248>>2]=D;g[b+252>>2]=F;g[b+256>>2]=0.0;C=+g[b+164>>2]*G+ +g[b+180>>2]*f+ +g[b+196>>2]*i;E=G*+g[b+168>>2]+f*+g[b+184>>2]+i*+g[b+200>>2];G=G*+g[b+172>>2]+f*+g[b+188>>2]+i*+g[b+204>>2];g[b+260>>2]=C;g[b+264>>2]=E;g[b+268>>2]=G;g[b+272>>2]=0.0;g[b+276>>2]=B-C;g[b+280>>2]=D-E;g[b+284>>2]=F-G;g[b+288>>2]=0.0;e=c[b>>2]|0;do if((e|0)>3){d=a[b+332>>0]|0;if(!(d&8)){h=b+164+(e+-1<<4)|0;I=b+84+(e+-1<<4)|0;H=b+4+(e+-1<<4)|0;c[b>>2]=e+-1;c[b+52>>2]=c[H>>2];c[b+52+4>>2]=c[H+4>>2];c[b+52+8>>2]=c[H+8>>2];c[b+52+12>>2]=c[H+12>>2];c[b+132>>2]=c[I>>2];c[b+132+4>>2]=c[I+4>>2];c[b+132+8>>2]=c[I+8>>2];c[b+132+12>>2]=c[I+12>>2];c[b+212>>2]=c[h>>2];c[b+212+4>>2]=c[h+4>>2];c[b+212+8>>2]=c[h+8>>2];c[b+212+12>>2]=c[h+12>>2];h=e+-1|0;I=19;}else{h=e;I=19;}}else{if((e|0)==3){d=a[b+332>>0]|0;h=3;I=19;break}if((e|0)>1){d=a[b+332>>0]|0;e=2;I=23;break}if((e|0)==1){o=a[b+332>>0]|0;h=1;I=27;}}while(0);if((I|0)==19){e=h+-1|0;if(!(d&4)){c[b>>2]=e;c[b+36>>2]=c[b+4+(e<<4)>>2];c[b+36+4>>2]=c[b+4+(e<<4)+4>>2];c[b+36+8>>2]=c[b+4+(e<<4)+8>>2];c[b+36+12>>2]=c[b+4+(e<<4)+12>>2];c[b+116>>2]=c[b+84+(e<<4)>>2];c[b+116+4>>2]=c[b+84+(e<<4)+4>>2];c[b+116+8>>2]=c[b+84+(e<<4)+8>>2];c[b+116+12>>2]=c[b+84+(e<<4)+12>>2];c[b+196>>2]=c[b+164+(e<<4)>>2];c[b+196+4>>2]=c[b+164+(e<<4)+4>>2];c[b+196+8>>2]=c[b+164+(e<<4)+8>>2];c[b+196+12>>2]=c[b+164+(e<<4)+12>>2];I=23;}else{e=h;I=23;}}if((I|0)==23){h=e+-1|0;if(!(d&2)){c[b>>2]=h;c[b+20>>2]=c[b+4+(h<<4)>>2];c[b+20+4>>2]=c[b+4+(h<<4)+4>>2];c[b+20+8>>2]=c[b+4+(h<<4)+8>>2];c[b+20+12>>2]=c[b+4+(h<<4)+12>>2];c[b+100>>2]=c[b+84+(h<<4)>>2];c[b+100+4>>2]=c[b+84+(h<<4)+4>>2];c[b+100+8>>2]=c[b+84+(h<<4)+8>>2];c[b+100+12>>2]=c[b+84+(h<<4)+12>>2];c[b+180>>2]=c[b+164+(h<<4)>>2];c[b+180+4>>2]=c[b+164+(h<<4)+4>>2];c[b+180+8>>2]=c[b+164+(h<<4)+8>>2];c[b+180+12>>2]=c[b+164+(h<<4)+12>>2];o=d;I=27;}else{o=d;h=e;I=27;}}if((I|0)==27?(q=h+-1|0,(o&1)==0):0){c[b>>2]=q;c[b+4>>2]=c[b+4+(q<<4)>>2];c[b+4+4>>2]=c[b+4+(q<<4)+4>>2];c[b+4+8>>2]=c[b+4+(q<<4)+8>>2];c[b+4+12>>2]=c[b+4+(q<<4)+12>>2];c[b+84>>2]=c[b+84+(q<<4)>>2];c[b+84+4>>2]=c[b+84+(q<<4)+4>>2];c[b+84+8>>2]=c[b+84+(q<<4)+8>>2];c[b+84+12>>2]=c[b+84+(q<<4)+12>>2];c[b+164>>2]=c[b+164+(q<<4)>>2];c[b+164+4>>2]=c[b+164+(q<<4)+4>>2];c[b+164+8>>2]=c[b+164+(q<<4)+8>>2];c[b+164+12>>2]=c[b+164+(q<<4)+12>>2];}if((f>=0.0?!(+g[b+336>>2]>=0.0):1)|!(i>=0.0))d=0;else d=+g[b+348>>2]>=0.0&1;a[b+312>>0]=d;b=d;b=b<<24>>24!=0;l=J;return b|0}case 4:{c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=0;r=J+16+16|0;a[r>>0]=0;c[b+316>>2]=0;c[b+316+4>>2]=0;c[b+316+8>>2]=0;c[b+316+12>>2]=0;a[b+332>>0]=p|15;L=+g[b+20>>2];U=+g[b+4>>2];R=+g[b+24>>2];K=+g[b+8>>2];N=+g[b+28>>2];V=+g[b+12>>2];Q=+g[b+36>>2];S=+g[b+40>>2];O=+g[b+44>>2];M=+g[b+52>>2];T=+g[b+56>>2];P=+g[b+60>>2];W=((R-K)*(O-V)-(N-V)*(S-K))*(M-U)+((N-V)*(Q-U)-(L-U)*(O-V))*(T-K)+((L-U)*(S-K)-(R-K)*(Q-U))*(P-V);h=W*W<9.99999905104687e-09?-1:((0.0-U)*((R-K)*(O-V)-(N-V)*(S-K))+(0.0-K)*((N-V)*(Q-U)-(L-U)*(O-V))+((L-U)*(S-K)-(R-K)*(Q-U))*(0.0-V))*W<0.0&1;W=(N-V)*((Q-U)*(T-K)-(S-K)*(M-U))+((L-U)*((S-K)*(P-V)-(O-V)*(T-K))+(R-K)*((O-V)*(M-U)-(Q-U)*(P-V)));o=W*W<9.99999905104687e-09?-1:((0.0-V)*((Q-U)*(T-K)-(S-K)*(M-U))+((0.0-U)*((S-K)*(P-V)-(O-V)*(T-K))+(0.0-K)*((O-V)*(M-U)-(Q-U)*(P-V))))*W<0.0&1;W=(O-V)*((R-K)*(M-U)-(L-U)*(T-K))+((Q-U)*((N-V)*(T-K)-(R-K)*(P-V))+(S-K)*((L-U)*(P-V)-(N-V)*(M-U)));p=W*W<9.99999905104687e-09?-1:((0.0-V)*((R-K)*(M-U)-(L-U)*(T-K))+((0.0-U)*((N-V)*(T-K)-(R-K)*(P-V))+(0.0-K)*((L-U)*(P-V)-(N-V)*(M-U))))*W<0.0&1;K=(V-N)*((S-R)*(M-L)-(Q-L)*(T-R))+((U-L)*((O-N)*(T-R)-(S-R)*(P-N))+(K-R)*((Q-L)*(P-N)-(O-N)*(M-L)));q=K*K<9.99999905104687e-09?-1:((0.0-N)*((S-R)*(M-L)-(Q-L)*(T-R))+((0.0-L)*((O-N)*(T-R)-(S-R)*(P-N))+(0.0-R)*((Q-L)*(P-N)-(O-N)*(M-L))))*K<0.0&1;do if((o|h|p|q|0)<0){a[b+352>>0]=1;d=b+312|0;I=68;}else{if(!(o|h|p|q)){if(a[b+352>>0]|0){d=b+312|0;I=68;break}a[b+312>>0]=1;c[b+276>>2]=0;c[b+276+4>>2]=0;c[b+276+8>>2]=0;c[b+276+12>>2]=0;d=1;break}if((h|0)!=0?(Te(J,b+4|0,b+20|0,b+36|0,J+16|0),f=+g[J+16>>2],i=+g[J+16+4>>2],j=+g[J+16+8>>2],k=f-+g[J>>2],m=i-+g[J+4>>2],n=j-+g[J+8>>2],k*k+m*m+n*n<3402823466385288598117041.0e14):0){X=c[J+16+12>>2]|0;g[b+316>>2]=f;g[b+320>>2]=i;g[b+324>>2]=j;c[b+328>>2]=X;X=a[r>>0]|0;a[b+332>>0]=X&1|a[b+332>>0]&-16|X&2|X&4;X=c[J+16+24>>2]|0;h=c[J+16+28>>2]|0;c[b+336>>2]=c[J+16+20>>2];c[b+340>>2]=X;c[b+344>>2]=h;g[b+348>>2]=0.0;f=k*k+m*m+n*n;}else f=3402823466385288598117041.0e14;if((o|0)!=0?(Te(J,b+4|0,b+36|0,b+52|0,J+16|0),s=+g[J+16>>2],t=+g[J+16+4>>2],u=+g[J+16+8>>2],v=s-+g[J>>2],w=t-+g[J+4>>2],x=u-+g[J+8>>2],v*v+w*w+x*x<f):0){o=c[J+16+12>>2]|0;g[b+316>>2]=s;g[b+320>>2]=t;g[b+324>>2]=u;c[b+328>>2]=o;o=a[r>>0]|0;a[b+332>>0]=o<<1&8|(o&1|a[b+332>>0]&-16|o<<1&4);o=c[J+16+24>>2]|0;X=c[J+16+28>>2]|0;c[b+336>>2]=c[J+16+20>>2];g[b+340>>2]=0.0;c[b+344>>2]=o;c[b+348>>2]=X;f=v*v+w*w+x*x;}if((p|0)!=0?(Te(J,b+4|0,b+52|0,b+20|0,J+16|0),y=+g[J+16>>2],z=+g[J+16+4>>2],A=+g[J+16+8>>2],B=y-+g[J>>2],C=z-+g[J+4>>2],D=A-+g[J+8>>2],B*B+C*C+D*D<f):0){p=c[J+16+12>>2]|0;g[b+316>>2]=y;g[b+320>>2]=z;g[b+324>>2]=A;c[b+328>>2]=p;p=a[r>>0]|0;a[b+332>>0]=p<<2&8|(p&1|a[b+332>>0]&-16|(p&255)>>>1&2);p=c[J+16+28>>2]|0;X=c[J+16+24>>2]|0;c[b+336>>2]=c[J+16+20>>2];c[b+340>>2]=p;g[b+344>>2]=0.0;c[b+348>>2]=X;f=B*B+C*C+D*D;}if(q|0?(Te(J,b+20|0,b+52|0,b+36|0,J+16|0),E=+g[J+16>>2],F=+g[J+16+4>>2],G=+g[J+16+8>>2],U=E-+g[J>>2],V=F-+g[J+4>>2],W=G-+g[J+8>>2],U*U+V*V+W*W<f):0){q=c[J+16+12>>2]|0;g[b+316>>2]=E;g[b+320>>2]=F;g[b+324>>2]=G;c[b+328>>2]=q;q=a[r>>0]|0;a[b+332>>0]=q&4|a[b+332>>0]&-16|q<<1&2|q<<2&8;q=c[J+16+20>>2]|0;r=c[J+16+28>>2]|0;X=c[J+16+24>>2]|0;g[b+336>>2]=0.0;c[b+340>>2]=q;c[b+344>>2]=r;c[b+348>>2]=X;}P=+g[b+336>>2];Q=+g[b+340>>2];W=+g[b+344>>2];f=+g[b+348>>2];R=+g[b+84>>2]*P+ +g[b+100>>2]*Q+ +g[b+116>>2]*W+ +g[b+132>>2]*f;T=P*+g[b+88>>2]+Q*+g[b+104>>2]+W*+g[b+120>>2]+f*+g[b+136>>2];V=P*+g[b+92>>2]+Q*+g[b+108>>2]+W*+g[b+124>>2]+f*+g[b+140>>2];g[b+244>>2]=R;g[b+248>>2]=T;g[b+252>>2]=V;g[b+256>>2]=0.0;S=+g[b+164>>2]*P+ +g[b+180>>2]*Q+ +g[b+196>>2]*W+ +g[b+212>>2]*f;U=P*+g[b+168>>2]+Q*+g[b+184>>2]+W*+g[b+200>>2]+f*+g[b+216>>2];W=P*+g[b+172>>2]+Q*+g[b+188>>2]+W*+g[b+204>>2]+f*+g[b+220>>2];g[b+260>>2]=S;g[b+264>>2]=U;g[b+268>>2]=W;g[b+272>>2]=0.0;g[b+276>>2]=R-S;g[b+280>>2]=T-U;g[b+284>>2]=V-W;g[b+288>>2]=0.0;h=c[b>>2]|0;do if((h|0)>3){d=a[b+332>>0]|0;if(!(d&8)){I=b+164+(h+-1<<4)|0;X=b+84+(h+-1<<4)|0;r=b+4+(h+-1<<4)|0;c[b>>2]=h+-1;c[b+52>>2]=c[r>>2];c[b+52+4>>2]=c[r+4>>2];c[b+52+8>>2]=c[r+8>>2];c[b+52+12>>2]=c[r+12>>2];c[b+132>>2]=c[X>>2];c[b+132+4>>2]=c[X+4>>2];c[b+132+8>>2]=c[X+8>>2];c[b+132+12>>2]=c[X+12>>2];c[b+212>>2]=c[I>>2];c[b+212+4>>2]=c[I+4>>2];c[b+212+8>>2]=c[I+8>>2];c[b+212+12>>2]=c[I+12>>2];h=h+-1|0;I=52;}else I=52;}else{if((h|0)==3){d=a[b+332>>0]|0;h=3;I=52;break}if((h|0)>1){d=a[b+332>>0]|0;e=2;I=56;break}if((h|0)==1){d=a[b+332>>0]|0;e=1;I=60;}}while(0);if((I|0)==52){e=h+-1|0;if(!(d&4)){c[b>>2]=e;c[b+36>>2]=c[b+4+(e<<4)>>2];c[b+36+4>>2]=c[b+4+(e<<4)+4>>2];c[b+36+8>>2]=c[b+4+(e<<4)+8>>2];c[b+36+12>>2]=c[b+4+(e<<4)+12>>2];c[b+116>>2]=c[b+84+(e<<4)>>2];c[b+116+4>>2]=c[b+84+(e<<4)+4>>2];c[b+116+8>>2]=c[b+84+(e<<4)+8>>2];c[b+116+12>>2]=c[b+84+(e<<4)+12>>2];c[b+196>>2]=c[b+164+(e<<4)>>2];c[b+196+4>>2]=c[b+164+(e<<4)+4>>2];c[b+196+8>>2]=c[b+164+(e<<4)+8>>2];c[b+196+12>>2]=c[b+164+(e<<4)+12>>2];I=56;}else{e=h;I=56;}}if((I|0)==56){h=e+-1|0;if(!(d&2)){c[b>>2]=h;c[b+20>>2]=c[b+4+(h<<4)>>2];c[b+20+4>>2]=c[b+4+(h<<4)+4>>2];c[b+20+8>>2]=c[b+4+(h<<4)+8>>2];c[b+20+12>>2]=c[b+4+(h<<4)+12>>2];c[b+100>>2]=c[b+84+(h<<4)>>2];c[b+100+4>>2]=c[b+84+(h<<4)+4>>2];c[b+100+8>>2]=c[b+84+(h<<4)+8>>2];c[b+100+12>>2]=c[b+84+(h<<4)+12>>2];c[b+180>>2]=c[b+164+(h<<4)>>2];c[b+180+4>>2]=c[b+164+(h<<4)+4>>2];c[b+180+8>>2]=c[b+164+(h<<4)+8>>2];c[b+180+12>>2]=c[b+164+(h<<4)+12>>2];e=h;I=60;}else I=60;}if((I|0)==60?(H=e+-1|0,(d&1)==0):0){c[b>>2]=H;c[b+4>>2]=c[b+4+(H<<4)>>2];c[b+4+4>>2]=c[b+4+(H<<4)+4>>2];c[b+4+8>>2]=c[b+4+(H<<4)+8>>2];c[b+4+12>>2]=c[b+4+(H<<4)+12>>2];c[b+84>>2]=c[b+84+(H<<4)>>2];c[b+84+4>>2]=c[b+84+(H<<4)+4>>2];c[b+84+8>>2]=c[b+84+(H<<4)+8>>2];c[b+84+12>>2]=c[b+84+(H<<4)+12>>2];c[b+164>>2]=c[b+164+(H<<4)>>2];c[b+164+4>>2]=c[b+164+(H<<4)+4>>2];c[b+164+8>>2]=c[b+164+(H<<4)+8>>2];c[b+164+12>>2]=c[b+164+(H<<4)+12>>2];}if((+g[b+336>>2]>=0.0?+g[b+340>>2]>=0.0:0)?+g[b+344>>2]>=0.0:0)d=f>=0.0&1;else d=0;a[b+312>>0]=d;}while(0);if((I|0)==68){a[d>>0]=0;d=0;}X=d;X=X<<24>>24!=0;l=J;return X|0}default:{a[b+312>>0]=0;X=0;X=X<<24>>24!=0;l=J;return X|0}}return 0}function pc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,H=0.0,K=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0;la=l;l=l+80|0;g[b+504>>2]=0.0;g[b+500>>2]=0.0;a[b+525>>0]=0;a[b+526>>0]=0;if(a[b+552>>0]|0?(a[b+527>>0]|0)==0:0){sa=+g[b+556>>2];qa=+g[b+560>>2];ka=+g[b+564>>2];pa=+g[b+568>>2];$=sa*(2.0/(sa*sa+qa*qa+ka*ka+pa*pa));ra=qa*(2.0/(sa*sa+qa*qa+ka*ka+pa*pa));oa=ka*(2.0/(sa*sa+qa*qa+ka*ka+pa*pa));aa=+g[b+300>>2];R=+g[d>>2];ba=+g[b+316>>2];T=+g[d+4>>2];ca=+g[b+332>>2];U=+g[d+8>>2];ea=+g[b+304>>2];ga=+g[b+320>>2];ia=+g[b+336>>2];Y=+g[b+308>>2];Z=+g[b+324>>2];_=+g[b+340>>2];V=+g[d+16>>2];W=+g[d+20>>2];X=+g[d+24>>2];fa=+g[d+32>>2];ha=+g[d+36>>2];ja=+g[d+40>>2];q=+g[b+348>>2];p=+g[b+352>>2];o=+g[b+356>>2];u=+g[b+364>>2];na=+g[e>>2];v=+g[b+380>>2];ma=+g[e+4>>2];w=+g[b+396>>2];k=+g[e+8>>2];x=+g[b+368>>2];y=+g[b+384>>2];z=+g[b+400>>2];r=+g[b+372>>2];s=+g[b+388>>2];t=+g[b+404>>2];m=+g[e+16>>2];n=+g[e+20>>2];j=+g[e+24>>2];A=+g[e+32>>2];C=+g[e+36>>2];E=+g[e+40>>2];B=+g[b+412>>2];D=+g[b+416>>2];i=+g[b+420>>2];K=(1.0-(qa*ra+ka*oa))*(u*na+v*ma+w*k)+(sa*ra+pa*oa)*(na*x+ma*y+k*z)+(sa*oa-pa*ra)*(na*r+ma*s+k*t);M=(sa*ra-pa*oa)*(u*na+v*ma+w*k)+(1.0-(sa*$+ka*oa))*(na*x+ma*y+k*z)+(qa*oa+pa*$)*(na*r+ma*s+k*t);H=(sa*oa+pa*ra)*(u*na+v*ma+w*k)+(qa*oa-pa*$)*(na*x+ma*y+k*z)+(1.0-(sa*$+qa*ra))*(na*r+ma*s+k*t);P=(sa*oa-pa*ra)*(r*m+s*n+t*j)+((1.0-(qa*ra+ka*oa))*(u*m+v*n+w*j)+(sa*ra+pa*oa)*(x*m+y*n+z*j));Q=(qa*oa+pa*$)*(r*m+s*n+t*j)+((sa*ra-pa*oa)*(u*m+v*n+w*j)+(1.0-(sa*$+ka*oa))*(x*m+y*n+z*j));N=(1.0-(sa*$+qa*ra))*(r*m+s*n+t*j)+((sa*oa+pa*ra)*(u*m+v*n+w*j)+(qa*oa-pa*$)*(x*m+y*n+z*j));da=(sa*oa-pa*ra)*(r*A+s*C+t*E)+((1.0-(qa*ra+ka*oa))*(u*A+v*C+w*E)+(sa*ra+pa*oa)*(x*A+y*C+z*E));ka=(qa*oa+pa*$)*(r*A+s*C+t*E)+((sa*ra-pa*oa)*(u*A+v*C+w*E)+(1.0-(sa*$+ka*oa))*(x*A+y*C+z*E));$=(1.0-(sa*$+qa*ra))*(r*A+s*C+t*E)+((sa*oa+pa*ra)*(u*A+v*C+w*E)+(qa*oa-pa*$)*(x*A+y*C+z*E));pa=-(+g[d+48>>2]+(R*q+T*p+U*o));oa=-(V*q+W*p+X*o+ +g[d+52>>2]);o=-(fa*q+ha*p+ja*o+ +g[d+56>>2]);p=(aa*R+ba*T+ca*U)*pa+(aa*V+ba*W+ca*X)*oa+(aa*fa+ba*ha+ca*ja)*o;q=(R*ea+T*ga+U*ia)*pa+(ea*V+ga*W+ia*X)*oa+(ea*fa+ga*ha+ia*ja)*o;o=(R*Y+T*Z+U*_)*pa+(Y*V+Z*W+_*X)*oa+(Y*fa+Z*ha+_*ja)*o;k=o*H+(p*K+q*M)+((u*na+v*ma+w*k)*0.0+(na*x+ma*y+k*z)*0.0+(na*r+ma*s+k*t)*0.0+(+g[e+48>>2]+(na*B+ma*D+k*i)));j=o*N+(p*P+q*Q)+((r*m+s*n+t*j)*0.0+((u*m+v*n+w*j)*0.0+(x*m+y*n+z*j)*0.0)+(m*B+n*D+j*i+ +g[e+52>>2]));i=o*$+(p*da+q*ka)+((r*A+s*C+t*E)*0.0+((u*A+v*C+w*E)*0.0+(x*A+y*C+z*E)*0.0)+(A*B+C*D+E*i+ +g[e+56>>2]));g[la+16>>2]=(R*Y+T*Z+U*_)*H+((aa*R+ba*T+ca*U)*K+(R*ea+T*ga+U*ia)*M);g[la+16+4>>2]=(Y*V+Z*W+_*X)*H+((aa*V+ba*W+ca*X)*K+(ea*V+ga*W+ia*X)*M);g[la+16+8>>2]=(Y*fa+Z*ha+_*ja)*H+((aa*fa+ba*ha+ca*ja)*K+(ea*fa+ga*ha+ia*ja)*M);g[la+16+12>>2]=0.0;g[la+16+16>>2]=(R*Y+T*Z+U*_)*N+((aa*R+ba*T+ca*U)*P+(R*ea+T*ga+U*ia)*Q);g[la+16+20>>2]=(Y*V+Z*W+_*X)*N+((aa*V+ba*W+ca*X)*P+(ea*V+ga*W+ia*X)*Q);g[la+16+24>>2]=(Y*fa+Z*ha+_*ja)*N+((aa*fa+ba*ha+ca*ja)*P+(ea*fa+ga*ha+ia*ja)*Q);g[la+16+28>>2]=0.0;g[la+16+32>>2]=(R*Y+T*Z+U*_)*$+((aa*R+ba*T+ca*U)*da+(R*ea+T*ga+U*ia)*ka);g[la+16+36>>2]=(Y*V+Z*W+_*X)*$+((aa*V+ba*W+ca*X)*da+(ea*V+ga*W+ia*X)*ka);g[la+16+40>>2]=(Y*fa+Z*ha+_*ja)*$+((aa*fa+ba*ha+ca*ja)*da+(ea*fa+ga*ha+ia*ja)*ka);g[la+16+44>>2]=0.0;g[la+16+48>>2]=k;g[la+16+52>>2]=j;g[la+16+56>>2]=i;g[la+16+60>>2]=0.0;fh(la+16|0,la);i=+g[la>>2];j=+g[la+4>>2];k=+g[la+8>>2];if(!(+F(+(i*i+j*j+k*k))<1.1920928955078125e-07)?(g[b+472>>2]=0.0,sa=1.0/+G(+(i*i+j*j+k*k)),g[b+460>>2]=i*sa,g[b+464>>2]=j*sa,g[b+468>>2]=k*sa,sa=+g[la+12>>2],sa=sa<-1.0?-1.0:sa,sa=+L(+(sa>1.0?1.0:sa))*2.0,g[b+504>>2]=sa,!(+F(+sa)<1.1920928955078125e-07)):0)a[b+526>>0]=1;l=la;return}fh(d,la+16|0);fh(b+300|0,la);U=+g[la+16+12>>2];V=+g[la>>2];W=+g[la+16>>2];X=+g[la+12>>2];Y=+g[la+16+4>>2];Z=+g[la+8>>2];_=+g[la+16+8>>2];$=+g[la+4>>2];fh(e,la+16|0);fh(b+364|0,la);aa=+g[la+16+12>>2];ba=+g[la>>2];ca=+g[la+16>>2];da=+g[la+12>>2];ea=+g[la+16+4>>2];fa=+g[la+8>>2];ga=+g[la+16+8>>2];ha=+g[la+4>>2];ia=-(aa*ba+ca*da+ea*fa-ga*ha);ja=-(ba*ga+(da*ea+aa*ha)-ca*fa);ka=-(aa*fa+da*ga+ca*ha-ba*ea);p=(U*X-V*W-Y*$-Z*_)*ia+(U*V+W*X+Y*Z-_*$)*(aa*da-ba*ca-ea*ha-fa*ga)+(U*Z+X*_+W*$-V*Y)*ja-(V*_+(X*Y+U*$)-W*Z)*ka;q=(U*V+W*X+Y*Z-_*$)*ka+((V*_+(X*Y+U*$)-W*Z)*(aa*da-ba*ca-ea*ha-fa*ga)+(U*X-V*W-Y*$-Z*_)*ja)-(U*Z+X*_+W*$-V*Y)*ia;r=(V*_+(X*Y+U*$)-W*Z)*ia+((U*Z+X*_+W*$-V*Y)*(aa*da-ba*ca-ea*ha-fa*ga)+(U*X-V*W-Y*$-Z*_)*ka)-(U*V+W*X+Y*Z-_*$)*ja;s=(U*X-V*W-Y*$-Z*_)*(aa*da-ba*ca-ea*ha-fa*ga)-(U*V+W*X+Y*Z-_*$)*ia-(V*_+(X*Y+U*$)-W*Z)*ja-(U*Z+X*_+W*$-V*Y)*ka;i=-p-q*0.0-r*0.0;j=(r+s*0.0-p*0.0)*-r+(s*(s+q*0.0-r*0.0)+i*-p)-(s*0.0+p*0.0-q)*-q;k=(s*0.0+p*0.0-q)*-p+(s*(r+s*0.0-p*0.0)+i*-q)-(s+q*0.0-r*0.0)*-r;i=(s+q*0.0-r*0.0)*-q+(s*(s*0.0+p*0.0-q)+i*-r)-(r+s*0.0-p*0.0)*-p;m=1.0/+G(+(i*i+(j*j+k*k)));if(m*i*0.0+(m*k*0.0+m*j)<-.9999998807907104){o=1.0;n=-0.0;i=0.0;j=0.0;}else{sa=+G(+((m*i*0.0+(m*k*0.0+m*j)+1.0)*2.0));o=(m*j*0.0-m*i)*(1.0/sa);n=(m*i*0.0-m*k*0.0)*(1.0/sa);i=(m*k-m*j*0.0)*(1.0/sa);j=sa*.5;}m=1.0/+G(+(n*n+o*o+i*i+j*j));t=n*m;w=o*m;v=i*m;m=j*m;T=1.0/+G(+((s*m-p*-t-q*-w-r*-v)*(s*m-p*-t-q*-w-r*-v)+((q*-t+(r*m+s*-v)-p*-w)*(q*-t+(r*m+s*-v)-p*-w)+((r*-w+(p*m+s*-t)-q*-v)*(r*-w+(p*m+s*-t)-q*-v)+(p*-v+(s*-w+q*m)-r*-t)*(p*-v+(s*-w+q*m)-r*-t)))));k=T*(r*-w+(p*m+s*-t)-q*-v);n=T*(p*-v+(s*-w+q*m)-r*-t);j=T*(q*-t+(r*m+s*-v)-p*-w);T=T*(s*m-p*-t-q*-w-r*-v);u=+g[b+444>>2];i=+g[b+456>>2];if(u>=i?(x=+g[b+448>>2],x>=i):0){s=m<-1.0?-1.0:m;s=+L(+(s>1.0?1.0:s))*2.0;if(s>1.1920928955078125e-07){p=1.0/+G(+(v*v+(t*t+w*w)));if(+F(+(w*p))>1.1920928955078125e-07){o=t*p;m=v*p;i=w*p;q=+G(+((v*p*v*p/(w*p*w*p)+1.0)/(1.0/(x*x)+v*p*v*p/(w*p*w*p)/(u*u))));}else{o=t*p;m=v*p;i=w*p;q=u;}}else{o=0.0;m=0.0;i=0.0;q=0.0;}p=+g[b+428>>2];r=q*p;if(s>r){a[b+526>>0]=1;if(s<q&p<.9999998807907104)p=(s-r)/(q-r);else p=1.0;g[b+528>>2]=p;g[b+504>>2]=s-r;if(+F(+i)>1.1920928955078125e-07){sa=+F(+(i*-m/i*(x/u)));m=m<-0.0?sa:-sa;sa=1.0/+G(+(o*o+i*i+m*m));o=o*sa;m=-(m*sa);i=i*sa;}ra=-o;qa=-i;oa=-m;na=(aa*da-ba*ca-ea*ha-fa*ga)*ra+(ba*ga+(da*ea+aa*ha)-ca*fa)*oa-(aa*fa+da*ga+ca*ha-ba*ea)*qa;sa=(aa*fa+da*ga+ca*ha-ba*ea)*ra+(aa*da-ba*ca-ea*ha-fa*ga)*qa-(aa*ba+ca*da+ea*fa-ga*ha)*oa;pa=(aa*ba+ca*da+ea*fa-ga*ha)*qa+(aa*da-ba*ca-ea*ha-fa*ga)*oa-(ba*ga+(da*ea+aa*ha)-ca*fa)*ra;oa=-((aa*ba+ca*da+ea*fa-ga*ha)*ra)-(ba*ga+(da*ea+aa*ha)-ca*fa)*qa-(aa*fa+da*ga+ca*ha-ba*ea)*oa;qa=sa*ka+(oa*ia+(aa*da-ba*ca-ea*ha-fa*ga)*na)-pa*ja;ra=pa*ia+((aa*da-ba*ca-ea*ha-fa*ga)*sa+oa*ja)-na*ka;sa=na*ja+(oa*ka+(aa*da-ba*ca-ea*ha-fa*ga)*pa)-sa*ia;g[b+460>>2]=qa;g[b+464>>2]=ra;g[b+468>>2]=sa;g[b+472>>2]=0.0;c[b+536>>2]=0;c[b+536+4>>2]=0;c[b+536+8>>2]=0;c[b+536+12>>2]=0;g[b+492>>2]=1.0/(qa*(+g[f>>2]*qa+ +g[f+16>>2]*ra+ +g[f+32>>2]*sa)+ra*(qa*+g[f+4>>2]+ra*+g[f+20>>2]+sa*+g[f+36>>2])+sa*(qa*+g[f+8>>2]+ra*+g[f+24>>2]+sa*+g[f+40>>2])+(qa*(qa*+g[h>>2]+ra*+g[h+16>>2]+sa*+g[h+32>>2])+ra*(qa*+g[h+4>>2]+ra*+g[h+20>>2]+sa*+g[h+36>>2])+sa*(qa*+g[h+8>>2]+ra*+g[h+24>>2]+sa*+g[h+40>>2])));}}else S=20;a:do if((S|0)==20){B=+g[b+300>>2];C=+g[b+316>>2];D=+g[b+332>>2];E=+g[d>>2];H=+g[d+4>>2];K=+g[d+8>>2];M=+g[d+16>>2];N=+g[d+20>>2];P=+g[d+24>>2];Q=+g[d+32>>2];R=+g[d+36>>2];s=+g[d+40>>2];t=+g[b+304>>2];u=+g[b+320>>2];v=+g[b+336>>2];w=+g[b+308>>2];x=+g[b+324>>2];y=+g[b+340>>2];p=+g[b+364>>2];i=+g[b+380>>2];r=+g[b+396>>2];z=p*+g[e>>2]+i*+g[e+4>>2]+r*+g[e+8>>2];A=p*+g[e+16>>2]+i*+g[e+20>>2]+r*+g[e+24>>2];r=p*+g[e+32>>2]+i*+g[e+36>>2]+r*+g[e+40>>2];i=(B*E+C*H+D*K)*z+(B*M+C*N+D*P)*A+(B*Q+C*R+D*s)*r;p=(E*t+H*u+K*v)*z+(M*t+N*u+P*v)*A+(Q*t+R*u+s*v)*r;o=(E*w+H*x+K*y)*z+(M*w+N*x+P*y)*A+(Q*w+R*x+s*y)*r;q=+g[b+444>>2];m=+g[b+456>>2];do if(q<m){q=+g[b+448>>2];if(q<m){if(+F(+p)<1.1920928955078125e-07?+F(+o)<1.1920928955078125e-07:0)break a;a[b+526>>0]=1;g[b+460>>2]=-((B*Q+C*R+D*s)*A-(B*M+C*N+D*P)*r);g[b+464>>2]=-((B*E+C*H+D*K)*r-(B*Q+C*R+D*s)*z);g[b+468>>2]=-((B*M+C*N+D*P)*z-(B*E+C*H+D*K)*A);g[b+472>>2]=0.0;break a}if(+F(+i)<1.1920928955078125e-07?+F(+o)<1.1920928955078125e-07:0){m=p;break}a[b+526>>0]=1;if(q>=m){m=+O(+o,+i);if(m>q){o=+J(+q);m=0.0;i=+I(+q);break}if(m<-q){o=-+J(+q);m=0.0;i=+I(+q);}else m=0.0;}else m=p;}else{if(+F(+i)<1.1920928955078125e-07?+F(+p)<1.1920928955078125e-07:0){m=p;break}a[b+526>>0]=1;if(q>=m){m=+O(+p,+i);if(m>q){o=0.0;m=+J(+q);i=+I(+q);break}if(m<-q){o=0.0;m=-+J(+q);i=+I(+q);}else{o=0.0;m=p;}}else m=p;}while(0);ra=(E*w+H*x+K*y)*o+((E*t+H*u+K*v)*m+(B*E+C*H+D*K)*i);pa=(M*w+N*x+P*y)*o+((M*t+N*u+P*v)*m+(B*M+C*N+D*P)*i);oa=(Q*w+R*x+s*y)*o+((Q*t+R*u+s*v)*m+(B*Q+C*R+D*s)*i);qa=1.0/+G(+(oa*oa+(ra*ra+pa*pa)));g[b+472>>2]=0.0;sa=+G(+((A*qa*oa-r*qa*pa)*(A*qa*oa-r*qa*pa)+(r*qa*ra-z*qa*oa)*(r*qa*ra-z*qa*oa)+(z*qa*pa-A*qa*ra)*(z*qa*pa-A*qa*ra)));g[b+504>>2]=sa;g[b+460>>2]=-((A*qa*oa-r*qa*pa)*(1.0/sa));g[b+464>>2]=-((r*qa*ra-z*qa*oa)*(1.0/sa));g[b+468>>2]=-((z*qa*pa-A*qa*ra)*(1.0/sa));}while(0);p=+g[b+452>>2];if(!(p>=0.0)){g[b+512>>2]=0.0;l=la;return}i=T<-1.0?-1.0:T;i=+L(+(i>1.0?1.0:i))*2.0;if(i>3.1415927410125732){i=-T<-1.0?-1.0:-T;i=+L(+(i>1.0?1.0:i))*2.0;k=-k;n=-n;j=-j;}g[b+512>>2]=i;if(i>1.1920928955078125e-07){sa=1.0/+G(+(k*k+n*n+j*j));k=k*sa;j=j*sa;n=n*sa;}m=+g[b+428>>2];if(i>p*m){a[b+525>>0]=1;o=i-p*m;if(i<p&m<.9999998807907104)i=o/(p-p*m);else i=1.0;g[b+532>>2]=i;g[b+508>>2]=o;ra=-k;qa=-n;oa=-j;na=(aa*da-ba*ca-ea*ha-fa*ga)*ra+(ba*ga+(da*ea+aa*ha)-ca*fa)*oa-(aa*fa+da*ga+ca*ha-ba*ea)*qa;sa=(aa*fa+da*ga+ca*ha-ba*ea)*ra+(aa*da-ba*ca-ea*ha-fa*ga)*qa-(aa*ba+ca*da+ea*fa-ga*ha)*oa;pa=(aa*ba+ca*da+ea*fa-ga*ha)*qa+(aa*da-ba*ca-ea*ha-fa*ga)*oa-(ba*ga+(da*ea+aa*ha)-ca*fa)*ra;oa=-((aa*ba+ca*da+ea*fa-ga*ha)*ra)-(ba*ga+(da*ea+aa*ha)-ca*fa)*qa-(aa*fa+da*ga+ca*ha-ba*ea)*oa;qa=sa*ka+(oa*ia+(aa*da-ba*ca-ea*ha-fa*ga)*na)-pa*ja;ra=pa*ia+((aa*da-ba*ca-ea*ha-fa*ga)*sa+oa*ja)-na*ka;sa=na*ja+(oa*ka+(aa*da-ba*ca-ea*ha-fa*ga)*pa)-sa*ia;g[b+476>>2]=qa;g[b+480>>2]=ra;g[b+484>>2]=sa;g[b+488>>2]=0.0;g[b+496>>2]=1.0/(qa*(+g[f>>2]*qa+ +g[f+16>>2]*ra+ +g[f+32>>2]*sa)+ra*(qa*+g[f+4>>2]+ra*+g[f+20>>2]+sa*+g[f+36>>2])+sa*(qa*+g[f+8>>2]+ra*+g[f+24>>2]+sa*+g[f+40>>2])+(qa*(qa*+g[h>>2]+ra*+g[h+16>>2]+sa*+g[h+32>>2])+ra*(qa*+g[h+4>>2]+ra*+g[h+20>>2]+sa*+g[h+36>>2])+sa*(qa*+g[h+8>>2]+ra*+g[h+24>>2]+sa*+g[h+40>>2])));}if(!(a[b+526>>0]|0)){l=la;return}na=-k;sa=-n;oa=-j;ma=(U*X-V*W-Y*$-Z*_)*na+(V*_+(X*Y+U*$)-W*Z)*oa-(U*Z+X*_+W*$-V*Y)*sa;ra=(U*Z+X*_+W*$-V*Y)*na+(U*X-V*W-Y*$-Z*_)*sa-(U*V+W*X+Y*Z-_*$)*oa;qa=(U*V+W*X+Y*Z-_*$)*sa+(U*X-V*W-Y*$-Z*_)*oa-(V*_+(X*Y+U*$)-W*Z)*na;oa=-((U*V+W*X+Y*Z-_*$)*na)-(V*_+(X*Y+U*$)-W*Z)*sa-(U*Z+X*_+W*$-V*Y)*oa;sa=-(U*V+W*X+Y*Z-_*$);na=-(V*_+(X*Y+U*$)-W*Z);pa=-(U*Z+X*_+W*$-V*Y);g[b+536>>2]=ra*pa+(oa*sa+(U*X-V*W-Y*$-Z*_)*ma)-qa*na;g[b+540>>2]=qa*sa+((U*X-V*W-Y*$-Z*_)*ra+oa*na)-ma*pa;g[b+544>>2]=ma*na+(oa*pa+(U*X-V*W-Y*$-Z*_)*qa)-ra*sa;g[b+548>>2]=0.0;l=la;return}function qc(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0,ra=0;qa=c[b+28>>2]|0;ra=c[b+32>>2]|0;m=c[d+24>>2]|0;if(!(a[b+739>>0]|0)){y=+g[b+552>>2];T=+g[qa+4>>2];z=+g[b+568>>2];U=+g[qa+8>>2];A=+g[b+584>>2];V=+g[qa+12>>2];B=+g[b+556>>2];C=+g[b+572>>2];D=+g[b+588>>2];W=+g[b+560>>2];X=+g[b+576>>2];Y=+g[b+592>>2];Z=+g[qa+20>>2];_=+g[qa+24>>2];$=+g[qa+28>>2];aa=+g[qa+36>>2];ba=+g[qa+40>>2];ca=+g[qa+44>>2];j=+g[b+600>>2];l=+g[b+604>>2];o=+g[b+608>>2];p=+g[qa+52>>2];t=+g[qa+56>>2];u=+g[qa+60>>2];E=+g[ra+4>>2];F=+g[ra+8>>2];H=+g[ra+12>>2];I=+g[b+624>>2];J=+g[b+640>>2];K=+g[b+656>>2];L=+g[ra+20>>2];M=+g[ra+24>>2];N=+g[ra+28>>2];O=+g[ra+36>>2];P=+g[ra+40>>2];Q=+g[ra+44>>2];oa=+g[b+664>>2];pa=+g[b+668>>2];x=+g[b+672>>2];v=+g[ra+52>>2]+(E*oa+F*pa+H*x);w=L*oa+M*pa+N*x+ +g[ra+56>>2];x=O*oa+P*pa+Q*x+ +g[ra+60>>2];k=(a[b+736>>0]|0)==0;if(k){e=c[d+8>>2]|0;g[e>>2]=1.0;g[e+(m+1<<2)>>2]=1.0;g[e+((m<<1)+2<<2)>>2]=1.0;e=c[d+16>>2]|0;g[e>>2]=-1.0;g[e+(m+1<<2)>>2]=-1.0;g[e+((m<<1)+2<<2)>>2]=-1.0;e=m<<1;f=+g[qa+52>>2];h=+g[qa+56>>2];i=+g[qa+60>>2];}else{e=m<<1;f=p;h=t;i=u;}f=p+(T*j+U*l+V*o)-f;pa=Z*j+_*l+$*o+t-h;oa=aa*j+ba*l+ca*o+u-i;n=c[d+12>>2]|0;s=n+(e<<2)|0;c[n>>2]=0;g[n+4>>2]=oa;g[n+8>>2]=-pa;g[n+12>>2]=0.0;g[n+(m<<2)>>2]=-oa;c[n+(m<<2)+4>>2]=0;g[n+(m<<2)+8>>2]=f;g[n+(m<<2)+12>>2]=0.0;g[s>>2]=pa;g[s+4>>2]=-f;c[s+8>>2]=0;g[s+12>>2]=0.0;f=v-+g[ra+52>>2];pa=w-+g[ra+56>>2];oa=x-+g[ra+60>>2];s=c[d+20>>2]|0;e=s+(e<<2)|0;c[s>>2]=0;g[s+4>>2]=-oa;g[s+8>>2]=pa;g[s+12>>2]=0.0;g[s+(m<<2)>>2]=oa;c[s+(m<<2)+4>>2]=0;g[s+(m<<2)+8>>2]=-f;g[s+(m<<2)+12>>2]=0.0;g[e>>2]=-pa;g[e+4>>2]=f;c[e+8>>2]=0;g[e+12>>2]=0.0;f=+g[d>>2]*+g[d+4>>2];e=c[d+28>>2]|0;if(k){g[e>>2]=f*(v-(p+(T*j+U*l+V*o)));g[e+(m<<2)>>2]=f*(w-(Z*j+_*l+$*o+t));g[e+(m<<1<<2)>>2]=f*(x-(aa*j+ba*l+ca*o+u));}R=c[d+24>>2]|0;g[n+(R*3<<2)>>2]=y*T+z*U+A*V;g[n+((R*3|0)+1<<2)>>2]=y*Z+z*_+A*$;g[n+((R*3|0)+2<<2)>>2]=y*aa+z*ba+A*ca;g[n+(R<<2<<2)>>2]=T*B+U*C+V*D;g[n+((R<<2|1)<<2)>>2]=B*Z+C*_+D*$;g[n+((R<<2|2)<<2)>>2]=B*aa+C*ba+D*ca;g[s+(R*3<<2)>>2]=-(y*T+z*U+A*V);g[s+((R*3|0)+1<<2)>>2]=-(y*Z+z*_+A*$);g[s+((R*3|0)+2<<2)>>2]=-(y*aa+z*ba+A*ca);g[s+(R<<2<<2)>>2]=-(T*B+U*C+V*D);g[s+((R<<2|1)<<2)>>2]=-(B*Z+C*_+D*$);g[s+((R<<2|2)<<2)>>2]=-(B*aa+C*ba+D*ca);oa=(W*Z+X*_+Y*$)*(I*O+J*P+K*Q)-(W*aa+X*ba+Y*ca)*(I*L+J*M+K*N);pa=(W*aa+X*ba+Y*ca)*(E*I+F*J+H*K)-(T*W+U*X+V*Y)*(I*O+J*P+K*Q);na=(T*W+U*X+V*Y)*(I*L+J*M+K*N)-(W*Z+X*_+Y*$)*(E*I+F*J+H*K);g[e+(R*3<<2)>>2]=((y*aa+z*ba+A*ca)*na+((y*T+z*U+A*V)*oa+(y*Z+z*_+A*$)*pa))*f;g[e+(R<<2<<2)>>2]=((B*aa+C*ba+D*ca)*na+((T*B+U*C+V*D)*oa+(B*Z+C*_+D*$)*pa))*f;if(!(a[b+716>>0]|0)){p=0.0;r=0;}else{pa=+g[b+708>>2]*+g[b+732>>2];p=pa;r=pa>0.0?1:2;}m=a[b+737>>0]|0;q=(r|0)!=0;if(!(m&255|r))return;g[n+(R*5<<2)>>2]=T*W+U*X+V*Y;g[n+((R*5|0)+1<<2)>>2]=W*Z+X*_+Y*$;g[n+((R*5|0)+2<<2)>>2]=W*aa+X*ba+Y*ca;g[s+(R*5<<2)>>2]=-(T*W+U*X+V*Y);g[s+((R*5|0)+1<<2)>>2]=-(W*Z+X*_+Y*$);g[s+((R*5|0)+2<<2)>>2]=-(W*aa+X*ba+Y*ca);h=+g[b+688>>2];i=+g[b+692>>2];f=+Wg(h-i,6.2831854820251465);if(!(f<-3.1415927410125732))if(f>3.1415927410125732)o=f+-6.2831854820251465;else o=f;else o=f+6.2831854820251465;f=+Wg(h+i,6.2831854820251465);if(!(f<-3.1415927410125732)){if(f>3.1415927410125732)f=f+-6.2831854820251465;}else f=f+6.2831854820251465;n=o==f;e=e+(R*5<<2)|0;g[e>>2]=0.0;k=c[b+748>>2]|0;l=+g[(k&2|0?b+760|0:d+4|0)>>2];if(!(m<<24>>24==0|q&n)){if(k&4|0)c[(c[d+32>>2]|0)+(R*5<<2)>>2]=c[b+752>>2];i=+g[b+728>>2];j=+g[b+680>>2];h=o>f?1.0:0.0;do if(!(o>=f)){h=j/(l*+g[d>>2]);if(h<0.0)if(i>=o&o-h>i){f=(o-i)/h;break}else{f=i<o?0.0:1.0;break}if(h>0.0)if(i<=f&f-h<i){f=(f-i)/h;break}else{f=i>f?0.0:1.0;break}else f=0.0;}else f=h;while(0);g[e>>2]=f*j*+g[b+732>>2]+ +g[e>>2];g[(c[d+36>>2]|0)+(R*5<<2)>>2]=-+g[b+684>>2];c[(c[d+40>>2]|0)+(R*5<<2)>>2]=c[b+684>>2];}if(!q)return;g[e>>2]=+g[e>>2]+p*l*+g[d>>2];if(k&1|0)c[(c[d+32>>2]|0)+(R*5<<2)>>2]=c[b+756>>2];e=c[d+40>>2]|0;if(n){f=3402823466385288598117041.0e14;h=-3402823466385288598117041.0e14;}else{S=(r|0)==1;f=S?3402823466385288598117041.0e14:0.0;h=S?0.0:-3402823466385288598117041.0e14;}g[(c[d+36>>2]|0)+(R*5<<2)>>2]=h;g[e+(R*5<<2)>>2]=f;h=+g[b+704>>2];do if(h>0.0){f=(T*W+U*X+V*Y)*+g[qa+328>>2]+(W*Z+X*_+Y*$)*+g[qa+332>>2]+(W*aa+X*ba+Y*ca)*+g[qa+336>>2]-((T*W+U*X+V*Y)*+g[ra+328>>2]+(W*Z+X*_+Y*$)*+g[ra+332>>2]+(W*aa+X*ba+Y*ca)*+g[ra+336>>2]);if((r|0)==1){if(!(f<0.0))break;e=(c[d+28>>2]|0)+(R*5<<2)|0;if(!(+g[e>>2]<-(h*f)))break;g[e>>2]=-(h*f);break}else{if(!(f>0.0))break;e=(c[d+28>>2]|0)+(R*5<<2)|0;if(!(+g[e>>2]>-(h*f)))break;g[e>>2]=-(h*f);break}}while(0);d=(c[d+28>>2]|0)+(R*5<<2)|0;g[d>>2]=+g[b+700>>2]*+g[d>>2];return}X=+g[qa+4>>2];Y=+g[qa+8>>2];Z=+g[qa+12>>2];v=+g[b+556>>2];x=+g[b+572>>2];y=+g[b+588>>2];_=+g[b+560>>2];$=+g[b+576>>2];aa=+g[b+592>>2];ba=+g[qa+20>>2];ca=+g[qa+24>>2];da=+g[qa+28>>2];ea=+g[qa+36>>2];fa=+g[qa+40>>2];ga=+g[qa+44>>2];ia=+g[b+600>>2];ha=+g[b+604>>2];o=+g[b+608>>2];h=+g[qa+52>>2]+(X*ia+Y*ha+Z*o);u=ba*ia+ca*ha+da*o+ +g[qa+56>>2];o=ea*ia+fa*ha+ga*o+ +g[qa+60>>2];ha=+g[ra+4>>2];ia=+g[ra+8>>2];ja=+g[ra+12>>2];ka=+g[b+624>>2];la=+g[b+640>>2];O=+g[b+656>>2];P=+g[ra+20>>2];Q=+g[ra+24>>2];T=+g[ra+28>>2];U=+g[ra+36>>2];V=+g[ra+40>>2];W=+g[ra+44>>2];p=+g[b+664>>2];w=+g[b+668>>2];i=+g[b+672>>2];f=+g[ra+52>>2];t=+g[ra+56>>2];l=+g[ra+60>>2];J=f+(ha*p+ia*w+ja*i)-h;K=P*p+Q*w+T*i+t-u;L=U*p+V*w+W*i+l-o;z=+g[(c[b+28>>2]|0)+344>>2];A=+g[(c[b+32>>2]|0)+344>>2];I=z+A>0.0?A/(z+A):.5;ma=(X*_+Y*$+Z*aa)*I+(ha*ka+ia*la+ja*O)*(1.0-I);na=(_*ba+$*ca+aa*da)*I+(ka*P+la*Q+O*T)*(1.0-I);oa=(_*ea+$*fa+aa*ga)*I+(ka*U+la*V+O*W)*(1.0-I);pa=1.0/+G(+(ma*ma+na*na+oa*oa));E=(f+(ha*p+ia*w+ja*i)-f)*ma*pa+(P*p+Q*w+T*i+t-t)*na*pa+(U*p+V*w+W*i+l-l)*oa*pa;f=f+(ha*p+ia*w+ja*i)-f-ma*pa*E;t=P*p+Q*w+T*i+t-t-na*pa*E;l=U*p+V*w+W*i+l-l-oa*pa*E;h=h-+g[qa+52>>2];u=u-+g[qa+56>>2];o=o-+g[qa+60>>2];i=ma*pa*(h*ma*pa+u*na*pa+o*oa*pa);w=na*pa*(h*ma*pa+u*na*pa+o*oa*pa);p=oa*pa*(h*ma*pa+u*na*pa+o*oa*pa);C=h-i+I*(i-ma*pa*E);D=u-w+I*(w-na*pa*E);B=o-p+I*(p-oa*pa*E);F=f-(1.0-I)*(i-ma*pa*E);H=t-(1.0-I)*(w-na*pa*E);E=l-(1.0-I)*(p-oa*pa*E);j=(I*f+(1.0-I)*(h-i))*(I*f+(1.0-I)*(h-i))+(I*t+(1.0-I)*(u-w))*(I*t+(1.0-I)*(u-w))+(I*l+(1.0-I)*(o-p))*(I*l+(1.0-I)*(o-p));if(j>1.1920928955078125e-07){y=1.0/+G(+j);N=(I*f+(1.0-I)*(h-i))*y;M=y*(I*l+(1.0-I)*(o-p));p=y*(I*t+(1.0-I)*(u-w));}else{N=X*v+Y*x+Z*y;M=v*ea+x*fa+y*ga;p=v*ba+x*ca+y*da;}t=na*pa*M-oa*pa*p;u=oa*pa*N-M*ma*pa;v=p*ma*pa-na*pa*N;S=c[d+12>>2]|0;g[S>>2]=D*M-B*p;g[S+4>>2]=B*N-C*M;g[S+8>>2]=C*p-D*N;S=c[d+20>>2]|0;g[S>>2]=-(H*M-E*p);g[S+4>>2]=-(E*N-F*M);g[S+8>>2]=-(F*p-H*N);if(z<1.1920928955078125e-07|A<1.1920928955078125e-07?(a[b+716>>0]|0)!=0:0){f=I*(D*v-B*u);h=I*(B*t-C*v);i=I*(C*u-D*t);j=(1.0-I)*(H*v-E*u);l=(1.0-I)*(E*t-F*v);o=(1.0-I)*(F*u-H*t);}else{f=D*v-B*u;h=B*t-C*v;i=C*u-D*t;j=H*v-E*u;l=E*t-F*v;o=F*u-H*t;}S=(c[d+12>>2]|0)+(m<<2)|0;g[S>>2]=f;g[S+4>>2]=h;g[S+8>>2]=i;S=c[d+20>>2]|0;g[S+(m<<2)>>2]=-j;g[S+(m+1<<2)>>2]=-l;g[S+(m+2<<2)>>2]=-o;if(z<1.1920928955078125e-07|A<1.1920928955078125e-07){o=I*(D*oa*pa-B*na*pa);l=I*(B*ma*pa-C*oa*pa);h=I*(C*na*pa-D*ma*pa);j=(1.0-I)*(H*oa*pa-E*na*pa);i=(1.0-I)*(E*ma*pa-F*oa*pa);f=(1.0-I)*(F*na*pa-H*ma*pa);}else{o=D*oa*pa-B*na*pa;l=B*ma*pa-C*oa*pa;h=C*na*pa-D*ma*pa;j=H*oa*pa-E*na*pa;i=E*ma*pa-F*oa*pa;f=F*na*pa-H*ma*pa;}e=(c[d+12>>2]|0)+(m<<1<<2)|0;g[e>>2]=o;g[e+4>>2]=l;g[e+8>>2]=h;e=c[d+20>>2]|0;g[e+(m<<1<<2)>>2]=-j;g[e+((m<<1|1)<<2)>>2]=-i;g[e+((m<<1)+2<<2)>>2]=-f;f=+g[d>>2]*+g[d+4>>2];if(!(a[b+736>>0]|0)){R=c[d+8>>2]|0;g[R>>2]=N;g[R+4>>2]=p;g[R+8>>2]=M;R=(c[d+8>>2]|0)+(m<<2)|0;g[R>>2]=t;g[R+4>>2]=u;g[R+8>>2]=v;R=(c[d+8>>2]|0)+(m<<1<<2)|0;g[R>>2]=ma*pa;g[R+4>>2]=na*pa;g[R+8>>2]=oa*pa;R=c[d+16>>2]|0;h=-N;g[R>>2]=h;g[R+4>>2]=-p;g[R+8>>2]=-M;g[R+(m<<2)>>2]=-t;g[R+(m+1<<2)>>2]=-u;g[R+(m+2<<2)>>2]=-v;g[R+(m<<1<<2)>>2]=-(ma*pa);g[R+((m<<1|1)<<2)>>2]=-(na*pa);g[R+((m<<1)+2<<2)>>2]=-(oa*pa);R=c[d+28>>2]|0;g[R>>2]=f*(J*N+K*p+L*M);g[R+(m<<2)>>2]=f*(J*t+K*u+L*v);g[R+(m<<1<<2)>>2]=f*(J*ma*pa+K*na*pa+L*oa*pa);f=h;h=-t;i=-u;j=-v;S=d+28|0;e=c[d+20>>2]|0;}else{f=-N;h=-t;i=-u;j=-v;S=d+28|0;R=c[d+28>>2]|0;}k=c[d+12>>2]|0;g[k+(m*3<<2)>>2]=N;g[k+((m*3|0)+1<<2)>>2]=p;g[k+((m*3|0)+2<<2)>>2]=M;g[k+(m<<2<<2)>>2]=t;g[k+((m<<2|1)<<2)>>2]=u;g[k+((m<<2|2)<<2)>>2]=v;g[e+(m*3<<2)>>2]=f;g[e+((m*3|0)+1<<2)>>2]=-p;g[e+((m*3|0)+2<<2)>>2]=-M;g[e+(m<<2<<2)>>2]=h;g[e+((m<<2|1)<<2)>>2]=i;g[e+((m<<2|2)<<2)>>2]=j;K=+g[d>>2]*+g[d+4>>2];L=(_*ba+$*ca+aa*da)*(ka*U+la*V+O*W)-(_*ea+$*fa+aa*ga)*(ka*P+la*Q+O*T);ga=(_*ea+$*fa+aa*ga)*(ha*ka+ia*la+ja*O)-(X*_+Y*$+Z*aa)*(ka*U+la*V+O*W);la=(X*_+Y*$+Z*aa)*(ka*P+la*Q+O*T)-(_*ba+$*ca+aa*da)*(ha*ka+ia*la+ja*O);g[R+(m*3<<2)>>2]=K*(L*N+ga*p+la*M);g[R+(m<<2<<2)>>2]=K*(L*t+ga*u+la*v);if(!(a[b+716>>0]|0)){p=0.0;r=0;}else{la=+g[b+708>>2]*+g[b+732>>2];p=la;r=la>0.0?1:2;}n=a[b+737>>0]|0;q=(r|0)!=0;if(!(n&255|r))return;s=(c[d+24>>2]|0)*5|0;g[k+(s<<2)>>2]=ma*pa;g[k+(s+1<<2)>>2]=na*pa;g[k+(s+2<<2)>>2]=oa*pa;g[e+(s<<2)>>2]=-(ma*pa);g[e+(s+1<<2)>>2]=-(na*pa);g[e+(s+2<<2)>>2]=-(oa*pa);h=+g[b+688>>2];i=+g[b+692>>2];f=+Wg(h-i,6.2831854820251465);if(!(f<-3.1415927410125732))if(f>3.1415927410125732)o=f+-6.2831854820251465;else o=f;else o=f+6.2831854820251465;f=+Wg(h+i,6.2831854820251465);if(!(f<-3.1415927410125732)){if(f>3.1415927410125732)f=f+-6.2831854820251465;}else f=f+6.2831854820251465;m=o==f;e=R+(s<<2)|0;g[e>>2]=0.0;k=c[b+748>>2]|0;l=+g[(k&2|0?b+760|0:d+4|0)>>2];if(!(n<<24>>24==0|q&m)){if(k&4|0)c[(c[d+32>>2]|0)+(s<<2)>>2]=c[b+752>>2];i=+g[b+728>>2];j=+g[b+680>>2];h=o>f?1.0:0.0;do if(!(o>=f)){h=j/(l*+g[d>>2]);if(h<0.0)if(i>=o&o-h>i){f=(o-i)/h;break}else{f=i<o?0.0:1.0;break}if(h>0.0)if(i<=f&f-h<i){f=(f-i)/h;break}else{f=i>f?0.0:1.0;break}else f=0.0;}else f=h;while(0);g[e>>2]=f*j*+g[b+732>>2]+ +g[e>>2];g[(c[d+36>>2]|0)+(s<<2)>>2]=-+g[b+684>>2];c[(c[d+40>>2]|0)+(s<<2)>>2]=c[b+684>>2];}if(!q)return;g[e>>2]=+g[e>>2]+p*l*+g[d>>2];if(k&1|0)c[(c[d+32>>2]|0)+(s<<2)>>2]=c[b+756>>2];if(m){f=3402823466385288598117041.0e14;h=-3402823466385288598117041.0e14;}else{R=(r|0)==1;f=R?3402823466385288598117041.0e14:0.0;h=R?0.0:-3402823466385288598117041.0e14;}g[(c[d+36>>2]|0)+(s<<2)>>2]=h;g[(c[d+40>>2]|0)+(s<<2)>>2]=f;h=+g[b+704>>2];do if(h>0.0){f=+g[qa+328>>2]*ma*pa+ +g[qa+332>>2]*na*pa+ +g[qa+336>>2]*oa*pa-(ma*pa*+g[ra+328>>2]+na*pa*+g[ra+332>>2]+oa*pa*+g[ra+336>>2]);if((r|0)==1){if(!(f<0.0))break;e=(c[S>>2]|0)+(s<<2)|0;if(!(+g[e>>2]<-(h*f)))break;g[e>>2]=-(h*f);break}else{if(!(f>0.0))break;e=(c[S>>2]|0)+(s<<2)|0;if(!(+g[e>>2]>-(h*f)))break;g[e>>2]=-(h*f);break}}while(0);d=(c[S>>2]|0)+(s<<2)|0;g[d>>2]=+g[b+700>>2]*+g[d>>2];return}function rc(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,k=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0.0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;ia=l;l=l+32|0;da=c[b+28>>2]|0;ea=c[b+32>>2]|0;$=+g[da+344>>2];_=+g[ea+344>>2];W=c[d+24>>2]|0;ca=a[b+180>>0]|0?1.0:-1.0;X=+g[b+936>>2]-+g[b+872>>2];Y=+g[b+940>>2]-+g[b+876>>2];Z=+g[b+944>>2]-+g[b+880>>2];aa=$+_>0.0?_/($+_):.5;A=c[b+824>>2]|0;B=c[b+840>>2]|0;C=c[b+856>>2]|0;D=c[b+888>>2]|0;E=c[b+904>>2]|0;H=c[b+920>>2]|0;R=(a[b+49>>0]|0)==0;do if(!R){f=aa*(c[j>>2]=A,+g[j>>2]);k=aa*(c[j>>2]=B,+g[j>>2]);i=aa*(c[j>>2]=C,+g[j>>2]);h=(1.0-aa)*(c[j>>2]=D,+g[j>>2]);n=(1.0-aa)*(c[j>>2]=E,+g[j>>2]);i=i+(1.0-aa)*(c[j>>2]=H,+g[j>>2]);o=1.0/+G(+((f+h)*(f+h)+(k+n)*(k+n)+i*i));e=(g[j>>2]=(f+h)*o,c[j>>2]|0);m=(g[j>>2]=(k+n)*o,c[j>>2]|0);u=(g[j>>2]=i*o,c[j>>2]|0);if(+F(+(i*o))>.7071067690849304){Q=1.0/+G(+(i*o*i*o+(k+n)*o*(k+n)*o));c[ia+24>>2]=0;g[ia+20>>2]=-(i*o*Q);g[ia+16>>2]=(k+n)*o*Q;g[ia>>2]=(i*o*i*o+(k+n)*o*(k+n)*o)*Q;g[ia+4>>2]=-((f+h)*o*(k+n)*o*Q);U=ia;V=ia+4|0;f=(f+h)*o*-(i*o*Q);q=2;fa=e;ga=m;ha=u;e=0;h=0.0;break}else{P=(f+h)*o*(f+h)*o+(k+n)*o*(k+n)*o;Q=1.0/+G(+P);T=(g[j>>2]=-((k+n)*o*Q),c[j>>2]|0);g[ia+24>>2]=-((k+n)*o*Q);g[ia+20>>2]=(f+h)*o*Q;c[ia+16>>2]=0;g[ia>>2]=-(i*o*(f+h)*o*Q);g[ia+4>>2]=i*o*-((k+n)*o*Q);U=ia;V=ia+4|0;f=P*Q;q=2;fa=e;ga=m;ha=u;e=T;h=-((k+n)*o*Q);break}}else{T=c[b+828>>2]|0;U=c[b+844>>2]|0;V=c[b+860>>2]|0;c[ia+24>>2]=T;c[ia+20>>2]=U;c[ia+16>>2]=V;V=c[b+848>>2]|0;U=c[b+864>>2]|0;c[ia>>2]=c[b+832>>2];c[ia+4>>2]=V;c[ia+8>>2]=U;U=ia;V=ia+4|0;f=0.0;q=3;fa=A;ga=B;ha=C;e=T;h=(c[j>>2]=T,+g[j>>2]);}while(0);g[ia+(q<<2)>>2]=f;T=c[d+12>>2]|0;c[T>>2]=e;m=c[ia+20>>2]|0;c[T+4>>2]=m;q=c[ia+16>>2]|0;c[T+8>>2]=q;u=c[ia>>2]|0;c[T+(W<<2)>>2]=u;x=c[V>>2]|0;c[T+(W+1<<2)>>2]=x;y=c[ia+8>>2]|0;c[T+(W+2<<2)>>2]=y;z=c[d+20>>2]|0;g[z>>2]=-h;s=(c[j>>2]=m,+g[j>>2]);g[z+4>>2]=-s;w=(c[j>>2]=q,+g[j>>2]);g[z+8>>2]=-w;t=(c[j>>2]=u,+g[j>>2]);g[z+(W<<2)>>2]=-t;p=(c[j>>2]=x,+g[j>>2]);g[z+(W+1<<2)>>2]=-p;v=(c[j>>2]=y,+g[j>>2]);g[z+(W+2<<2)>>2]=-v;e=c[b+300>>2]|0;f=+g[b+280>>2];if(!(e&128))f=f*+g[d+4>>2];K=f*+g[d>>2];P=(c[j>>2]=B,+g[j>>2]);M=(c[j>>2]=H,+g[j>>2]);L=(c[j>>2]=C,+g[j>>2]);O=(c[j>>2]=E,+g[j>>2]);Q=(c[j>>2]=D,+g[j>>2]);N=(c[j>>2]=A,+g[j>>2]);H=c[d+28>>2]|0;g[H>>2]=K*((P*M-L*O)*h+(L*Q-N*M)*s+(N*O-P*Q)*w);g[H+(W<<2)>>2]=K*((P*M-L*O)*t+(L*Q-N*M)*p+(N*O-P*Q)*v);if(e&64|0){H=c[d+32>>2]|0;c[H>>2]=c[b+292>>2];c[H+(W<<2)>>2]=c[b+292>>2];}Q=+g[da+52>>2];L=+g[da+56>>2];O=+g[da+60>>2];J=+g[ea+52>>2];f=+g[ea+56>>2];i=+g[ea+60>>2];if(R){N=(i-O)*h-(J-Q)*w;r=(J-Q)*s-(f-L)*h;g[T+(W<<1<<2)>>2]=aa*((f-L)*w-(i-O)*s);g[T+((W<<1|1)<<2)>>2]=aa*N;g[T+((W<<1)+2<<2)>>2]=aa*r;g[z+(W<<1<<2)>>2]=(1.0-aa)*((f-L)*w-(i-O)*s);g[z+((W<<1|1)<<2)>>2]=(1.0-aa)*N;g[z+((W<<1)+2<<2)>>2]=(1.0-aa)*r;g[T+(W*3<<2)>>2]=aa*((f-L)*v-(i-O)*p);g[T+((W*3|0)+1<<2)>>2]=aa*((i-O)*t-(J-Q)*v);g[T+((W*3|0)+2<<2)>>2]=aa*((J-Q)*p-(f-L)*t);g[z+(W*3<<2)>>2]=(1.0-aa)*((f-L)*v-(i-O)*p);g[z+((W*3|0)+1<<2)>>2]=(1.0-aa)*((i-O)*t-(J-Q)*v);g[z+((W*3|0)+2<<2)>>2]=(1.0-aa)*((J-Q)*p-(f-L)*t);e=c[d+8>>2]|0;V=c[ia+24>>2]|0;c[e+(W<<1<<2)>>2]=V;c[e+((W<<1|1)<<2)>>2]=m;c[e+((W<<1)+2<<2)>>2]=q;c[e+(W*3<<2)>>2]=u;c[e+((W*3|0)+1<<2)>>2]=x;c[e+((W*3|0)+2<<2)>>2]=y;q=c[d+16>>2]|0;r=(c[j>>2]=V,+g[j>>2]);g[q+(W<<1<<2)>>2]=-r;g[q+((W<<1|1)<<2)>>2]=-s;g[q+((W<<1)+2<<2)>>2]=-w;g[q+(W*3<<2)>>2]=-t;g[q+((W*3|0)+1<<2)>>2]=-p;N=-v;m=q+((W*3|0)+2<<2)|0;P=0.0;M=0.0;K=0.0;I=0.0;o=0.0;n=0.0;k=f-L;i=i-O;h=J-Q;}else{v=+g[b+936>>2]-J;w=+g[b+940>>2]-f;M=+g[b+944>>2]-i;n=(c[j>>2]=fa,+g[j>>2]);k=(c[j>>2]=ga,+g[j>>2]);o=(c[j>>2]=ha,+g[j>>2]);N=+g[b+872>>2]-Q;P=+g[b+876>>2]-L;i=+g[b+880>>2]-O;O=+g[b+1080>>2]-+g[b+1032>>2];Q=n*(n*N+k*P+o*i)+n*O-n*(n*v+k*w+o*M);I=k*(n*N+k*P+o*i)+k*O-k*(n*v+k*w+o*M);O=o*(n*N+k*P+o*i)+o*O-o*(n*v+k*w+o*M);K=N-n*(n*N+k*P+o*i)+aa*Q;J=P-k*(n*N+k*P+o*i)+aa*I;L=i-o*(n*N+k*P+o*i)+aa*O;Q=v-n*(n*v+k*w+o*M)-(1.0-aa)*Q;I=w-k*(n*v+k*w+o*M)-(1.0-aa)*I;O=M-o*(n*v+k*w+o*M)-(1.0-aa)*O;h=aa*(v-n*(n*v+k*w+o*M))+(1.0-aa)*(N-n*(n*N+k*P+o*i));f=aa*(w-k*(n*v+k*w+o*M))+(1.0-aa)*(P-k*(n*N+k*P+o*i));i=aa*(M-o*(n*v+k*w+o*M))+(1.0-aa)*(i-o*(n*N+k*P+o*i));g[ia+24>>2]=h;g[ia+20>>2]=f;g[ia+16>>2]=i;if(i*i+(h*h+f*f)>1.1920928955078125e-07){P=1.0/+G(+(i*i+(h*h+f*f)));g[ia+24>>2]=h*P;g[ia+20>>2]=P*f;g[ia+16>>2]=P*i;m=(g[j>>2]=h*P,c[j>>2]|0);q=(g[j>>2]=P*f,c[j>>2]|0);w=P*i;s=P*f;r=h*P;e=(g[j>>2]=P*i,c[j>>2]|0);}else{m=c[b+828>>2]|0;q=c[b+844>>2]|0;e=c[b+860>>2]|0;c[ia+24>>2]=m;c[ia+20>>2]=q;c[ia+16>>2]=e;w=(c[j>>2]=e,+g[j>>2]);s=(c[j>>2]=q,+g[j>>2]);r=(c[j>>2]=m,+g[j>>2]);}t=k*w-o*s;v=n*s-k*r;g[U>>2]=t;g[V>>2]=o*r-n*w;g[ia+8>>2]=v;g[ia+12>>2]=0.0;g[T+(W<<1<<2)>>2]=J*w-L*s;g[T+(W<<1<<2)+4>>2]=L*r-K*w;g[T+(W<<1<<2)+8>>2]=K*s-J*r;U=c[d+20>>2]|0;g[U+(W<<1<<2)>>2]=-(I*w-O*s);g[U+((W<<1|1)<<2)>>2]=-(O*r-Q*w);g[U+((W<<1)+2<<2)>>2]=-(Q*s-I*r);p=+g[V>>2];if($<1.1920928955078125e-07|_<1.1920928955078125e-07?(a[b+297>>0]|0)!=0:0){f=aa*(J*v-L*p);h=aa*(K*p-J*t);i=aa*(L*t-K*v);k=(1.0-aa)*(I*v-O*p);n=(1.0-aa)*(O*t-Q*v);o=(1.0-aa)*(Q*p-I*t);}else{f=J*v-L*p;h=K*p-J*t;i=L*t-K*v;k=I*v-O*p;n=O*t-Q*v;o=Q*p-I*t;}V=(c[d+12>>2]|0)+(W*3<<2)|0;g[V>>2]=f;g[V+4>>2]=i;g[V+8>>2]=h;V=c[d+20>>2]|0;g[V+(W*3<<2)>>2]=-k;g[V+((W*3|0)+1<<2)>>2]=-n;g[V+((W*3|0)+2<<2)>>2]=-o;V=c[d+8>>2]|0;c[V+(W<<1<<2)>>2]=m;c[V+((W<<1|1)<<2)>>2]=q;c[V+((W<<1)+2<<2)>>2]=e;g[V+(W*3<<2)>>2]=t;g[V+((W*3|0)+1<<2)>>2]=p;g[V+((W*3|0)+2<<2)>>2]=v;q=c[d+16>>2]|0;g[q+(W<<1<<2)>>2]=-r;g[q+((W<<1|1)<<2)>>2]=-s;g[q+((W<<1)+2<<2)>>2]=-w;g[q+(W*3<<2)>>2]=-t;g[q+((W*3|0)+1<<2)>>2]=-p;N=-v;m=q+((W*3|0)+2<<2)|0;e=V;P=J;M=L;o=O;n=Q;k=0.0;i=0.0;h=0.0;}g[m>>2]=N;A=c[b+300>>2]|0;f=+g[b+264>>2];if(!(A&32))f=f*+g[d+4>>2];Q=f*+g[d>>2];B=c[d+28>>2]|0;g[B+(W<<1<<2)>>2]=Q*(X*r+Y*s+Z*w);g[B+(W*3<<2)>>2]=Q*(X*t+Y*p+Z*v);if(A&16|0){V=c[d+32>>2]|0;c[V+(W<<1<<2)>>2]=c[b+276>>2];c[V+(W*3<<2)>>2]=c[b+276>>2];}if(!(a[b+296>>0]|0)){p=0.0;y=0;}else{Z=ca*+g[b+1032>>2];p=Z;y=Z>0.0?2:1;}u=a[b+1096>>0]|0;x=(y|0)!=0;if(u&255|y){z=c[d+24>>2]<<2;c[e+(z<<2)>>2]=fa;c[e+((z|1)<<2)>>2]=ga;c[e+((z|2)<<2)>>2]=ha;r=(c[j>>2]=fa,+g[j>>2]);g[q+(z<<2)>>2]=-r;s=(c[j>>2]=ga,+g[j>>2]);g[q+((z|1)<<2)>>2]=-s;t=(c[j>>2]=ha,+g[j>>2]);g[q+((z|2)<<2)>>2]=-t;if(a[b+49>>0]|0){if(!($<1.1920928955078125e-07|_<1.1920928955078125e-07)){e=c[d+12>>2]|0;g[e+(z<<2)>>2]=t*P-s*M;g[e+((z|1)<<2)>>2]=r*M-t*K;g[e+((z|2)<<2)>>2]=s*K-r*P;e=c[d+20>>2]|0;g[e+(z<<2)>>2]=-(t*I-s*o);g[e+((z|1)<<2)>>2]=-(r*o-t*n);f=-(s*n-r*I);ba=30;}}else{_=t*k-s*i;$=r*i-t*h;f=s*h-r*k;e=c[d+12>>2]|0;g[e+(z<<2)>>2]=aa*_;g[e+((z|1)<<2)>>2]=aa*$;g[e+((z|2)<<2)>>2]=aa*f;e=c[d+20>>2]|0;g[e+(z<<2)>>2]=(1.0-aa)*_;g[e+((z|1)<<2)>>2]=(1.0-aa)*$;f=(1.0-aa)*f;ba=30;}if((ba|0)==30)g[e+((z|2)<<2)>>2]=f;e=+g[b+184>>2]==+g[b+188>>2];g[B+(z<<2)>>2]=0.0;m=(c[d+36>>2]|0)+(z<<2)|0;g[m>>2]=0.0;q=(c[d+40>>2]|0)+(z<<2)|0;g[q>>2]=0.0;o=+g[(A&512|0?b+232|0:d+4|0)>>2];if(!(u<<24>>24==0|x&e)){if(A&1|0)c[(c[d+32>>2]|0)+(z<<2)>>2]=c[b+212>>2];n=+g[b+1100>>2];f=+g[b+1080>>2];h=+g[b+184>>2];i=+g[b+188>>2];k=o*+g[d>>2];do if(!(h>i))if(!(h==i)){if(n/k<0.0)if(f>=h?h-n/k>f:0){f=(h-f)/(n/k);break}else{f=f<h?0.0:1.0;break}if(n/k>0.0)if(f<=i?i-n/k<f:0){f=(i-f)/(n/k);break}else{f=f>i?0.0:1.0;break}else f=0.0;}else f=0.0;else f=1.0;while(0);g[B+(z<<2)>>2]=+g[B+(z<<2)>>2]-ca*f*n;g[m>>2]=+g[m>>2]-+g[b+1104>>2]*+g[d>>2];g[q>>2]=+g[b+1104>>2]*+g[d>>2]+ +g[q>>2];}if(x){g[B+(z<<2)>>2]=+g[B+(z<<2)>>2]+p*o*+g[d>>2];if(A&256|0)c[(c[d+32>>2]|0)+(z<<2)>>2]=c[b+244>>2];if(e){f=-3402823466385288598117041.0e14;h=3402823466385288598117041.0e14;}else{ba=(y|0)==1;f=ba?-3402823466385288598117041.0e14:0.0;h=ba?0.0:3402823466385288598117041.0e14;}g[m>>2]=f;g[q>>2]=h;aa=1.0-+g[b+240>>2];h=+F(+aa);do if(!(aa!=aa|0.0!=0.0|aa==0.0)){f=ca*(r*+g[da+312>>2]+s*+g[da+316>>2]+t*+g[da+320>>2]-(r*+g[ea+312>>2]+s*+g[ea+316>>2]+t*+g[ea+320>>2]));if((y|0)==1){if(!(f<0.0))break;if(!(+g[B+(z<<2)>>2]<-(h*f)))break;g[B+(z<<2)>>2]=-(h*f);break}else{if(!(f>0.0))break;if(!(+g[B+(z<<2)>>2]>-(h*f)))break;g[B+(z<<2)>>2]=-(h*f);break}}while(0);g[B+(z<<2)>>2]=+g[b+232>>2]*+g[B+(z<<2)>>2];e=5;}else e=5;}else e=4;if(!(a[b+297>>0]|0)){t=0.0;x=0;}else{ca=+g[b+1088>>2];t=ca;x=ca>0.0?1:2;}m=a[b+1112>>0]|0;u=(x|0)!=0;if(!(m&255|x)){l=ia;return}y=S(c[d+24>>2]|0,e)|0;q=c[d+12>>2]|0;c[q+(y<<2)>>2]=fa;c[q+(y+1<<2)>>2]=ga;c[q+(y+2<<2)>>2]=ha;w=(c[j>>2]=fa,+g[j>>2]);q=c[d+20>>2]|0;g[q+(y<<2)>>2]=-w;v=(c[j>>2]=ga,+g[j>>2]);g[q+(y+1<<2)>>2]=-v;s=(c[j>>2]=ha,+g[j>>2]);g[q+(y+2<<2)>>2]=-s;o=+g[b+192>>2];p=+g[b+196>>2];q=c[b+300>>2]|0;r=+g[(q&2048|0?b+248|0:d+4|0)>>2];if(m<<24>>24==0|u&o==p)e=B;else{if(!(q&4)){i=p;k=o;}else{c[(c[d+32>>2]|0)+(y<<2)>>2]=c[b+228>>2];i=+g[b+196>>2];k=+g[b+192>>2];}f=+g[b+1084>>2];n=+g[b+1116>>2];h=r*+g[d>>2];do if(!(k>i))if(!(k==i)){if(n/h<0.0)if(f>=k?k-n/h>f:0){f=(k-f)/(n/h);break}else{f=f<k?0.0:1.0;break}if(n/h>0.0)if(f<=i?i-n/h<f:0){f=(i-f)/(n/h);break}else{f=f>i?0.0:1.0;break}else f=0.0;}else f=0.0;else f=1.0;while(0);e=c[d+28>>2]|0;g[e+(y<<2)>>2]=f*n;g[(c[d+36>>2]|0)+(y<<2)>>2]=-(+g[b+1120>>2]*+g[d>>2]);g[(c[d+40>>2]|0)+(y<<2)>>2]=+g[b+1120>>2]*+g[d>>2];}if(!u){l=ia;return}ha=e+(y<<2)|0;g[ha>>2]=+g[ha>>2]+t*r*+g[d>>2];if(q&1024|0)c[(c[d+32>>2]|0)+(y<<2)>>2]=c[b+260>>2];if(o==p){f=-3402823466385288598117041.0e14;h=3402823466385288598117041.0e14;}else{ha=(x|0)==1;f=ha?0.0:-3402823466385288598117041.0e14;h=ha?3402823466385288598117041.0e14:0.0;}g[(c[d+36>>2]|0)+(y<<2)>>2]=f;g[(c[d+40>>2]|0)+(y<<2)>>2]=h;ca=1.0-+g[b+256>>2];h=+F(+ca);do if(!(ca!=ca|0.0!=0.0|ca==0.0)){ga=c[b+28>>2]|0;ha=c[b+32>>2]|0;f=w*+g[ga+328>>2]+v*+g[ga+332>>2]+s*+g[ga+336>>2]-(w*+g[ha+328>>2]+v*+g[ha+332>>2]+s*+g[ha+336>>2]);if((x|0)==1){if(!(f<0.0))break;e=(c[d+28>>2]|0)+(y<<2)|0;if(!(+g[e>>2]<-(h*f)))break;g[e>>2]=-(h*f);break}else{if(!(f>0.0))break;e=(c[d+28>>2]|0)+(y<<2)|0;if(!(+g[e>>2]>-(h*f)))break;g[e>>2]=-(h*f);break}}while(0);d=(c[d+28>>2]|0)+(y<<2)|0;g[d>>2]=+g[b+248>>2]*+g[d>>2];l=ia;return}function sc(d,e,f,h,i,j){d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=+j;var k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;F=l;l=l+896|0;E=c[h+4>>2]|0;D=c[h+12>>2]|0;k=c[E+4>>2]|0;if((k|0)<20){c[F+712>>2]=3816;c[F+712+168>>2]=0;g[F+712+172>>2]=j;c[F+712+164>>2]=c[i+4>>2];g[F+352+308>>2]=9.999999747378752e-05;a[F+352+332>>0]=0;c[F+288>>2]=9244;c[F+64>>2]=9312;c[F+64+4>>2]=F+352;c[F+64+8>>2]=F+288;c[F+64+12>>2]=d;c[F+64+16>>2]=E;c[F+64+20>>2]=0;if((Hd(F+64|0,e,f,D,D,F+712|0)|0?(v=F+712+132|0,q=+g[v>>2],r=+g[F+712+136>>2],s=+g[F+712+140>>2],q*q+r*r+s*s>9.999999747378752e-05):0)?(t=+g[F+712+164>>2],t<+g[i+4>>2]):0){j=1.0/+G(+(q*q+r*r+s*s));g[v>>2]=q*j;g[F+712+136>>2]=r*j;g[F+712+140>>2]=s*j;c[F+16>>2]=c[h+8>>2];c[F+16+4>>2]=0;c[F+16+8>>2]=c[v>>2];c[F+16+8+4>>2]=c[v+4>>2];c[F+16+8+8>>2]=c[v+8>>2];c[F+16+8+12>>2]=c[v+12>>2];c[F+16+24>>2]=c[F+712+148>>2];c[F+16+24+4>>2]=c[F+712+148+4>>2];c[F+16+24+8>>2]=c[F+712+148+8>>2];c[F+16+24+12>>2]=c[F+712+148+12>>2];g[F+16+40>>2]=t;+Lb[c[(c[i>>2]|0)+12>>2]&15](i,F+16|0,1);}l=F;return}if((k+-21|0)>>>0>=9){if((k|0)!=31){l=F;return}aj(15298);if((c[E+16>>2]|0)>0){k=0;do{u=c[E+24>>2]|0;m=+g[u+(k*80|0)>>2];p=+g[u+(k*80|0)+4>>2];s=+g[u+(k*80|0)+8>>2];n=+g[u+(k*80|0)+16>>2];q=+g[u+(k*80|0)+20>>2];w=+g[u+(k*80|0)+24>>2];o=+g[u+(k*80|0)+32>>2];r=+g[u+(k*80|0)+36>>2];y=+g[u+(k*80|0)+40>>2];O=+g[u+(k*80|0)+48>>2];N=+g[u+(k*80|0)+52>>2];C=+g[u+(k*80|0)+56>>2];u=c[u+(k*80|0)+64>>2]|0;M=+g[D>>2];L=+g[D+4>>2];K=+g[D+8>>2];J=+g[D+16>>2];I=+g[D+20>>2];H=+g[D+24>>2];t=+g[D+32>>2];x=+g[D+36>>2];z=+g[D+40>>2];A=O*M+N*L+C*K+ +g[D+48>>2];B=O*J+N*I+C*H+ +g[D+52>>2];C=O*t+N*x+C*z+ +g[D+56>>2];g[F+712>>2]=m*M+n*L+o*K;g[F+712+4>>2]=p*M+q*L+r*K;g[F+712+8>>2]=s*M+w*L+y*K;g[F+712+12>>2]=0.0;g[F+712+16>>2]=m*J+n*I+o*H;g[F+712+20>>2]=p*J+q*I+r*H;g[F+712+24>>2]=s*J+w*I+y*H;g[F+712+28>>2]=0.0;g[F+712+32>>2]=m*t+n*x+o*z;g[F+712+36>>2]=p*t+q*x+r*z;g[F+712+40>>2]=s*t+w*x+y*z;g[F+712+44>>2]=0.0;g[F+712+48>>2]=A;g[F+712+52>>2]=B;g[F+712+56>>2]=C;g[F+712+60>>2]=0.0;b[F+352+8>>1]=1;b[F+352+10>>1]=-1;c[F+352>>2]=6036;c[F+352+12>>2]=i;c[F+352+16>>2]=k;c[F+352+4>>2]=c[i+4>>2];v=c[h+8>>2]|0;c[F+288>>2]=h;c[F+288+4>>2]=u;c[F+288+8>>2]=v;c[F+288+12>>2]=F+712;c[F+288+16>>2]=-1;c[F+288+20>>2]=k;sc(d,e,f,F+288|0,F+352|0,j);k=k+1|0;}while((k|0)<(c[E+16>>2]|0))}k=c[2388]|0;E=(c[k+16>>2]|0)+-1|0;c[k+16>>2]=E;if(E|0){l=F;return}do if(c[k+4>>2]|0){Za(F+712|0,0)|0;E=c[6435]|0;g[k+8>>2]=+g[k+8>>2]+ +(((c[F+712+4>>2]|0)-(c[E+4>>2]|0)+(((c[F+712>>2]|0)-(c[E>>2]|0)|0)*1e6|0)-(c[k+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[k+16>>2]|0)){k=c[2388]|0;break}else{l=F;return}}while(0);c[2388]=c[k+20>>2];l=F;return}switch(k|0){case 21:{p=+g[D>>2];q=+g[D+16>>2];r=+g[D+32>>2];s=+g[D+4>>2];t=+g[D+20>>2];w=+g[D+36>>2];x=+g[D+8>>2];y=+g[D+24>>2];z=+g[D+40>>2];A=-+g[D+48>>2];B=-+g[D+52>>2];C=-+g[D+56>>2];o=+g[e+48>>2];n=+g[e+52>>2];m=+g[e+56>>2];g[F+352>>2]=p*A+q*B+r*C+(p*o+q*n+r*m);g[F+352+4>>2]=s*A+t*B+w*C+(s*o+t*n+w*m);g[F+352+8>>2]=x*A+y*B+z*C+(x*o+y*n+z*m);g[F+352+12>>2]=0.0;m=+g[f+48>>2];n=+g[f+52>>2];o=+g[f+56>>2];P=+g[f>>2];H=+g[f+16>>2];I=+g[f+32>>2];J=+g[f+4>>2];K=+g[f+20>>2];L=+g[f+36>>2];M=+g[f+8>>2];N=+g[f+24>>2];O=+g[f+40>>2];g[F+288>>2]=p*P+q*H+r*I;g[F+288+4>>2]=p*J+q*K+r*L;g[F+288+8>>2]=p*M+q*N+r*O;g[F+288+12>>2]=0.0;g[F+288+16>>2]=s*P+t*H+w*I;g[F+288+20>>2]=s*J+t*K+w*L;g[F+288+24>>2]=s*M+t*N+w*O;g[F+288+28>>2]=0.0;g[F+288+32>>2]=x*P+y*H+z*I;g[F+288+36>>2]=x*J+y*K+z*L;g[F+288+40>>2]=x*M+y*N+z*O;k=F+288+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;k=c[h+8>>2]|0;O=+Db[c[(c[E>>2]|0)+48>>2]&15](E);c[F+64>>2]=9172;c[F+64+4>>2]=d;c[F+64+8>>2]=c[e>>2];c[F+64+8+4>>2]=c[e+4>>2];c[F+64+8+8>>2]=c[e+8>>2];c[F+64+8+12>>2]=c[e+12>>2];c[F+64+24>>2]=c[e+16>>2];c[F+64+24+4>>2]=c[e+16+4>>2];c[F+64+24+8>>2]=c[e+16+8>>2];c[F+64+24+12>>2]=c[e+16+12>>2];c[F+64+40>>2]=c[e+32>>2];c[F+64+40+4>>2]=c[e+32+4>>2];c[F+64+40+8>>2]=c[e+32+8>>2];c[F+64+40+12>>2]=c[e+32+12>>2];c[F+64+56>>2]=c[e+48>>2];c[F+64+56+4>>2]=c[e+48+4>>2];c[F+64+56+8>>2]=c[e+48+8>>2];c[F+64+56+12>>2]=c[e+48+12>>2];c[F+64+72>>2]=c[f>>2];c[F+64+72+4>>2]=c[f+4>>2];c[F+64+72+8>>2]=c[f+8>>2];c[F+64+72+12>>2]=c[f+12>>2];c[F+64+88>>2]=c[f+16>>2];c[F+64+88+4>>2]=c[f+16+4>>2];c[F+64+88+8>>2]=c[f+16+8>>2];c[F+64+88+12>>2]=c[f+16+12>>2];c[F+64+104>>2]=c[f+32>>2];c[F+64+104+4>>2]=c[f+32+4>>2];c[F+64+104+8>>2]=c[f+32+8>>2];c[F+64+104+12>>2]=c[f+32+12>>2];c[F+64+120>>2]=c[f+48>>2];c[F+64+120+4>>2]=c[f+48+4>>2];c[F+64+120+8>>2]=c[f+48+8>>2];c[F+64+120+12>>2]=c[f+48+12>>2];c[F+64+136>>2]=c[D>>2];c[F+64+136+4>>2]=c[D+4>>2];c[F+64+136+8>>2]=c[D+8>>2];c[F+64+136+12>>2]=c[D+12>>2];c[F+64+152>>2]=c[D+16>>2];c[F+64+152+4>>2]=c[D+16+4>>2];c[F+64+152+8>>2]=c[D+16+8>>2];c[F+64+152+12>>2]=c[D+16+12>>2];c[F+64+168>>2]=c[D+32>>2];c[F+64+168+4>>2]=c[D+32+4>>2];c[F+64+168+8>>2]=c[D+32+8>>2];c[F+64+168+12>>2]=c[D+32+12>>2];c[F+64+184>>2]=c[D+48>>2];c[F+64+184+4>>2]=c[D+48+4>>2];c[F+64+184+8>>2]=c[D+48+8>>2];c[F+64+184+12>>2]=c[D+48+12>>2];g[F+64+204>>2]=O;c[F+64>>2]=5988;c[F+64+212>>2]=i;c[F+64+216>>2]=k;c[F+64+220>>2]=E;c[F+64+200>>2]=c[i+4>>2];g[F+64+208>>2]=j;Zb[c[(c[d>>2]|0)+8>>2]&127](d,F+288|0,F+16|0,F);k=c[E+48>>2]|0;c[F+712>>2]=7028;c[F+712+4>>2]=k;c[F+712+8>>2]=F+64;k=c[E+52>>2]|0;if(!(a[k+60>>0]|0))Ie(k,F+712|0,F+352|0,p*A+q*B+r*C+(p*m+q*n+r*o),s*A+t*B+w*C+(s*m+t*n+w*o),x*A+y*B+z*C+(x*m+y*n+z*o),F+16|0,F);else ke(k,F+712|0,F+352|0,p*A+q*B+r*C+(p*m+q*n+r*o),s*A+t*B+w*C+(s*m+t*n+w*o),x*A+y*B+z*C+(x*m+y*n+z*o),F+16|0,F,c[k+56>>2]|0);l=F;return}case 28:{c[F+712>>2]=3816;c[F+712+168>>2]=0;g[F+712+172>>2]=j;c[F+712+164>>2]=c[i+4>>2];c[F+352>>2]=9312;c[F+352+4>>2]=0;c[F+352+8>>2]=0;c[F+352+12>>2]=d;c[F+352+16>>2]=0;c[F+352+20>>2]=E;if((Hd(F+352|0,e,f,D,D,F+712|0)|0?(u=F+712+132|0,m=+g[u>>2],n=+g[F+712+136>>2],o=+g[F+712+140>>2],m*m+n*n+o*o>9.999999747378752e-05):0)?(p=+g[F+712+164>>2],p<+g[i+4>>2]):0){P=1.0/+G(+(m*m+n*n+o*o));g[u>>2]=m*P;g[F+712+136>>2]=n*P;g[F+712+140>>2]=o*P;c[F+288>>2]=c[h+8>>2];c[F+288+4>>2]=0;c[F+288+8>>2]=c[u>>2];c[F+288+8+4>>2]=c[u+4>>2];c[F+288+8+8>>2]=c[u+8>>2];c[F+288+8+12>>2]=c[u+12>>2];c[F+288+24>>2]=c[F+712+148>>2];c[F+288+24+4>>2]=c[F+712+148+4>>2];c[F+288+24+8>>2]=c[F+712+148+8>>2];c[F+288+24+12>>2]=c[F+712+148+12>>2];g[F+288+40>>2]=p;+Lb[c[(c[i>>2]|0)+12>>2]&15](i,F+288|0,1);}l=F;return}default:{p=+g[D>>2];q=+g[D+16>>2];r=+g[D+32>>2];x=+g[D+4>>2];y=+g[D+20>>2];z=+g[D+36>>2];K=+g[D+8>>2];M=+g[D+24>>2];O=+g[D+40>>2];I=-+g[D+48>>2];H=-+g[D+52>>2];C=-+g[D+56>>2];A=+g[e+48>>2];B=+g[e+52>>2];m=+g[e+56>>2];o=p*I+q*H+r*C+(p*A+q*B+r*m);n=x*I+y*H+z*C+(x*A+y*B+z*m);m=K*I+M*H+O*C+(K*A+M*B+O*m);B=+g[f+48>>2];A=+g[f+52>>2];w=+g[f+56>>2];s=p*I+q*H+r*C+(p*B+q*A+r*w);t=x*I+y*H+z*C+(x*B+y*A+z*w);w=K*I+M*H+O*C+(K*B+M*A+O*w);A=+g[f>>2];B=+g[f+16>>2];C=+g[f+32>>2];H=+g[f+4>>2];I=+g[f+20>>2];J=+g[f+36>>2];L=+g[f+8>>2];N=+g[f+24>>2];P=+g[f+40>>2];g[F+712>>2]=p*A+q*B+r*C;g[F+712+4>>2]=p*H+q*I+r*J;g[F+712+8>>2]=p*L+q*N+r*P;g[F+712+12>>2]=0.0;g[F+712+16>>2]=x*A+y*B+z*C;g[F+712+20>>2]=x*H+y*I+z*J;g[F+712+24>>2]=x*L+y*N+z*P;g[F+712+28>>2]=0.0;g[F+712+32>>2]=K*A+M*B+O*C;g[F+712+36>>2]=K*H+M*I+O*J;g[F+712+40>>2]=K*L+M*N+O*P;v=F+712+44|0;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[v+12>>2]=0;c[v+16>>2]=0;h=c[h+8>>2]|0;P=+Db[c[(c[E>>2]|0)+48>>2]&15](E);c[F+352>>2]=9172;c[F+352+4>>2]=d;c[F+352+8>>2]=c[e>>2];c[F+352+8+4>>2]=c[e+4>>2];c[F+352+8+8>>2]=c[e+8>>2];c[F+352+8+12>>2]=c[e+12>>2];c[F+352+24>>2]=c[e+16>>2];c[F+352+24+4>>2]=c[e+16+4>>2];c[F+352+24+8>>2]=c[e+16+8>>2];c[F+352+24+12>>2]=c[e+16+12>>2];c[F+352+40>>2]=c[e+32>>2];c[F+352+40+4>>2]=c[e+32+4>>2];c[F+352+40+8>>2]=c[e+32+8>>2];c[F+352+40+12>>2]=c[e+32+12>>2];c[F+352+56>>2]=c[e+48>>2];c[F+352+56+4>>2]=c[e+48+4>>2];c[F+352+56+8>>2]=c[e+48+8>>2];c[F+352+56+12>>2]=c[e+48+12>>2];c[F+352+72>>2]=c[f>>2];c[F+352+72+4>>2]=c[f+4>>2];c[F+352+72+8>>2]=c[f+8>>2];c[F+352+72+12>>2]=c[f+12>>2];c[F+352+88>>2]=c[f+16>>2];c[F+352+88+4>>2]=c[f+16+4>>2];c[F+352+88+8>>2]=c[f+16+8>>2];c[F+352+88+12>>2]=c[f+16+12>>2];c[F+352+104>>2]=c[f+32>>2];c[F+352+104+4>>2]=c[f+32+4>>2];c[F+352+104+8>>2]=c[f+32+8>>2];c[F+352+104+12>>2]=c[f+32+12>>2];c[F+352+120>>2]=c[f+48>>2];c[F+352+120+4>>2]=c[f+48+4>>2];c[F+352+120+8>>2]=c[f+48+8>>2];c[F+352+120+12>>2]=c[f+48+12>>2];c[F+352+136>>2]=c[D>>2];c[F+352+136+4>>2]=c[D+4>>2];c[F+352+136+8>>2]=c[D+8>>2];c[F+352+136+12>>2]=c[D+12>>2];c[F+352+152>>2]=c[D+16>>2];c[F+352+152+4>>2]=c[D+16+4>>2];c[F+352+152+8>>2]=c[D+16+8>>2];c[F+352+152+12>>2]=c[D+16+12>>2];c[F+352+168>>2]=c[D+32>>2];c[F+352+168+4>>2]=c[D+32+4>>2];c[F+352+168+8>>2]=c[D+32+8>>2];c[F+352+168+12>>2]=c[D+32+12>>2];c[F+352+184>>2]=c[D+48>>2];c[F+352+184+4>>2]=c[D+48+4>>2];c[F+352+184+8>>2]=c[D+48+8>>2];c[F+352+184+12>>2]=c[D+48+12>>2];g[F+352+204>>2]=P;c[F+352>>2]=6012;c[F+352+212>>2]=i;c[F+352+216>>2]=h;c[F+352+220>>2]=E;c[F+352+200>>2]=c[i+4>>2];g[F+352+208>>2]=j;Zb[c[(c[d>>2]|0)+8>>2]&127](d,F+712|0,F+288|0,F+64|0);g[F+16>>2]=o;g[F+16+4>>2]=n;g[F+16+8>>2]=m;g[F+16+12>>2]=0.0;if(s<o){g[F+16>>2]=s;p=s;}else p=o;if(t<n){g[F+16+4>>2]=t;q=t;}else q=n;if(w<m){g[F+16+8>>2]=w;r=w;}else r=m;g[F>>2]=o;g[F+4>>2]=n;g[F+8>>2]=m;g[F+12>>2]=0.0;if(o<s){g[F>>2]=s;o=s;}if(n<t){g[F+4>>2]=t;n=t;}if(m<w){g[F+8>>2]=w;m=w;}g[F+16>>2]=+g[F+288>>2]+p;g[F+16+4>>2]=+g[F+288+4>>2]+q;g[F+16+8>>2]=+g[F+288+8>>2]+r;g[F>>2]=+g[F+64>>2]+o;g[F+4>>2]=+g[F+64+4>>2]+n;g[F+8>>2]=+g[F+64+8>>2]+m;Zb[c[(c[E>>2]|0)+64>>2]&127](E,F+352|0,F+16|0,F);l=F;return}}}function tc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0.0,B=0;B=l;l=l+112|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+236>>2]=1;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;c[b>>2]=3308;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b+284>>2]=0;a[b+408>>0]=1;c[b+404>>2]=0;c[b+396>>2]=0;c[b+400>>2]=0;a[b+428>>0]=1;c[b+424>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;a[b+496>>0]=1;c[b+492>>2]=0;c[b+484>>2]=0;c[b+488>>2]=0;a[b+516>>0]=1;c[b+512>>2]=0;c[b+504>>2]=0;c[b+508>>2]=0;c[b+684>>2]=d;a[b+704>>0]=1;c[b+700>>2]=0;c[b+692>>2]=0;c[b+696>>2]=0;a[b+724>>0]=1;c[b+720>>2]=0;c[b+712>>2]=0;c[b+716>>2]=0;a[b+744>>0]=1;c[b+740>>2]=0;c[b+732>>2]=0;c[b+736>>2]=0;a[b+764>>0]=1;c[b+760>>2]=0;c[b+752>>2]=0;c[b+756>>2]=0;a[b+784>>0]=1;c[b+780>>2]=0;c[b+772>>2]=0;c[b+776>>2]=0;a[b+804>>0]=1;c[b+800>>2]=0;c[b+792>>2]=0;c[b+796>>2]=0;a[b+824>>0]=1;c[b+820>>2]=0;c[b+812>>2]=0;c[b+816>>2]=0;a[b+844>>0]=1;c[b+840>>2]=0;c[b+832>>2]=0;c[b+836>>2]=0;a[b+864>>0]=1;c[b+860>>2]=0;c[b+852>>2]=0;c[b+856>>2]=0;a[b+884>>0]=1;c[b+880>>2]=0;c[b+872>>2]=0;c[b+876>>2]=0;a[b+964>>0]=1;c[b+960>>2]=0;c[b+952>>2]=0;c[b+956>>2]=0;a[b+984>>0]=1;c[b+980>>2]=0;c[b+972>>2]=0;c[b+976>>2]=0;c[b+928>>2]=0;c[b+932>>2]=0;c[b+936>>2]=-1;c[b+940>>2]=0;c[b+944>>2]=0;a[b+1024>>0]=1;c[b+1020>>2]=0;c[b+1012>>2]=0;c[b+1016>>2]=0;a[b+1044>>0]=1;c[b+1040>>2]=0;c[b+1032>>2]=0;c[b+1036>>2]=0;c[b+988>>2]=0;c[b+992>>2]=0;c[b+996>>2]=-1;c[b+1e3>>2]=0;c[b+1004>>2]=0;a[b+1084>>0]=1;c[b+1080>>2]=0;c[b+1072>>2]=0;c[b+1076>>2]=0;a[b+1104>>0]=1;c[b+1100>>2]=0;c[b+1092>>2]=0;c[b+1096>>2]=0;c[b+1048>>2]=0;c[b+1052>>2]=0;c[b+1056>>2]=-1;c[b+1060>>2]=0;c[b+1064>>2]=0;a[b+1124>>0]=1;c[b+1120>>2]=0;c[b+1112>>2]=0;c[b+1116>>2]=0;a[b+1144>>0]=1;c[b+1140>>2]=0;c[b+1132>>2]=0;c[b+1136>>2]=0;a[b+1248>>0]=1;c[b+1244>>2]=0;c[b+1236>>2]=0;c[b+1240>>2]=0;c[b+236>>2]=8;c[b+288>>2]=0;g[b+292>>2]=1.0;c[b+296>>2]=0;c[b+296+4>>2]=0;c[b+296+8>>2]=0;c[b+296+12>>2]=0;c[b+296+16>>2]=0;g[b+316>>2]=.20000000298023224;g[b+320>>2]=0.0;g[b+324>>2]=1.0;g[b+328>>2]=.10000000149011612;g[b+332>>2]=1.0;g[b+336>>2]=.699999988079071;g[b+340>>2]=.10000000149011612;g[b+344>>2]=1.0;g[b+348>>2]=.5;g[b+352>>2]=.5;g[b+356>>2]=.5;g[b+360>>2]=.5;g[b+364>>2]=1.0;g[b+368>>2]=1.0;c[b+372>>2]=0;c[b+376>>2]=1;c[b+380>>2]=0;c[b+384>>2]=4;c[b+388>>2]=1;a[b+472>>0]=0;a[b+473>>0]=0;g[b+476>>2]=0.0;c[b+520>>2]=0;c[b+520+4>>2]=0;c[b+520+8>>2]=0;c[b+520+12>>2]=0;c[b+536>>2]=1065353216;c[b+540>>2]=0;c[b+540+4>>2]=0;c[b+540+8>>2]=0;c[b+540+12>>2]=0;c[b+556>>2]=1065353216;c[b+560>>2]=0;c[b+560+4>>2]=0;c[b+560+8>>2]=0;c[b+560+12>>2]=0;c[b+576>>2]=1065353216;g[b+580>>2]=0.0;c[b+584>>2]=1065353216;c[b+588>>2]=0;c[b+588+4>>2]=0;c[b+588+8>>2]=0;c[b+588+12>>2]=0;c[b+604>>2]=1065353216;c[b+608>>2]=0;c[b+608+4>>2]=0;c[b+608+8>>2]=0;c[b+608+12>>2]=0;c[b+624>>2]=1065353216;g[b+628>>2]=0.0;c[b+680>>2]=0;g[b+888>>2]=0.0;a[b+924>>0]=1;c[b+892>>2]=0;c[b+892+4>>2]=0;c[b+892+8>>2]=0;c[b+892+12>>2]=0;c[b+892+16>>2]=0;c[b+892+20>>2]=0;c[b+892+24>>2]=0;c[b+892+28>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;d=c[b+404>>2]|0;if(d|0){if(a[b+408>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+404>>2]=0;}a[b+408>>0]=1;c[b+404>>2]=0;c[b+396>>2]=0;c[b+400>>2]=0;d=c[b+424>>2]|0;if(d|0){if(a[b+428>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+424>>2]=0;}a[b+428>>0]=1;c[b+424>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;d=c[b+444>>2]|0;do if(d)if(a[b+448>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);d=c[b+416>>2]|0;i=c[b+420>>2]|0;c[b+444>>2]=0;a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;if((d|0)==(i|0)){w=14;break}else break}else{c[b+444>>2]=0;w=13;break}else w=13;while(0);if((w|0)==13){a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;i=0;w=14;}if((w|0)==14){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n)d=0;else{c[6436]=(c[6436]|0)+1;d=ic((n<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=c[b+416>>2]|0;}k=c[b+424>>2]|0;if((i|0)<=0){if(k)w=22;}else{j=0;do{c[d+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0));w=22;}if((w|0)==22){if(a[b+428>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=c[b+416>>2]|0;}c[b+424>>2]=0;}a[b+428>>0]=1;c[b+424>>2]=d;c[b+420>>2]=n;d=i;i=n;}else d=i;}k=c[b+424>>2]|0;c[k+(d<<2)>>2]=1;d=d+1|0;c[b+416>>2]=d;if((d|0)==(i|0)){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n)d=0;else{c[6436]=(c[6436]|0)+1;d=ic((n<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=c[b+416>>2]|0;k=c[b+424>>2]|0;}if((i|0)<=0){if(k)w=35;}else{j=0;do{c[d+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0));w=35;}if((w|0)==35){if(a[b+428>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=c[b+416>>2]|0;}c[b+424>>2]=0;}a[b+428>>0]=1;c[b+424>>2]=d;c[b+420>>2]=n;o=d;j=i;i=n;}else{o=k;j=i;d=k;}}else{o=k;j=d;d=k;}c[o+(j<<2)>>2]=2;j=j+1|0;c[b+416>>2]=j;if((j|0)==(i|0)){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n){d=0;k=o;}else{c[6436]=(c[6436]|0)+1;d=ic((n<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=c[b+416>>2]|0;k=c[b+424>>2]|0;}if((i|0)<=0){if(k)w=48;}else{j=0;do{c[d+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0));w=48;}if((w|0)==48){if(a[b+428>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=c[b+416>>2]|0;}c[b+424>>2]=0;}a[b+428>>0]=1;c[b+424>>2]=d;c[b+420>>2]=n;k=d;j=i;i=n;}else{k=o;j=i;}}else k=o;c[k+(j<<2)>>2]=3;j=j+1|0;c[b+416>>2]=j;if((j|0)==(i|0)){n=i|0?i<<1:1;if((i|0)<(n|0)){if(!n)d=0;else{c[6436]=(c[6436]|0)+1;d=ic((n<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=c[b+416>>2]|0;k=c[b+424>>2]|0;}if((i|0)<=0){if(k)w=61;}else{j=0;do{c[d+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0));w=61;}if((w|0)==61){if(a[b+428>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=c[b+416>>2]|0;}c[b+424>>2]=0;}a[b+428>>0]=1;c[b+424>>2]=d;c[b+420>>2]=n;}}else i=j;c[d+(i<<2)>>2]=0;c[b+416>>2]=i+1;c[6436]=(c[6436]|0)+1;d=ic(39)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}c[d+8>>2]=0;c[d>>2]=3416;c[d+4>>2]=32;c[d+16>>2]=b;c[b+192>>2]=d;g[d+12>>2]=.25;c[b+1148>>2]=1065353216;c[b+1152>>2]=0;c[b+1152+4>>2]=0;c[b+1152+8>>2]=0;c[b+1152+12>>2]=0;c[b+1168>>2]=1065353216;c[b+1172>>2]=0;c[b+1172+4>>2]=0;c[b+1172+8>>2]=0;c[b+1172+12>>2]=0;c[b+1188>>2]=1065353216;x=b+1192|0;y=x+36|0;do{c[x>>2]=0;x=x+4|0;}while((x|0)<(y|0));g[b+1228>>2]=1.0;z=Sg(b)|0;g[z+4>>2]=1.0;g[z+8>>2]=1.0;g[z+12>>2]=1.0;c[z+16>>2]=1;x=c[b+192>>2]|0;A=+Db[c[(c[x>>2]|0)+48>>2]&15](x);x=B;y=x+100|0;do{c[x>>2]=0;x=x+4|0;}while((x|0)<(y|0));n=c[b+712>>2]|0;if((n|0)<(e|0)){if((c[b+716>>2]|0)<(e|0)){if(!e){d=0;j=n;}else{c[6436]=(c[6436]|0)+1;d=ic((e*104|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}j=c[b+712>>2]|0;}if((j|0)>0){i=0;do{x=d+(i*104|0)|0;k=(c[b+720>>2]|0)+(i*104|0)|0;y=x+104|0;do{c[x>>2]=c[k>>2];x=x+4|0;k=k+4|0;}while((x|0)<(y|0));i=i+1|0;}while((i|0)!=(j|0))}i=c[b+720>>2]|0;if(i|0){if(a[b+724>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+720>>2]=0;}a[b+724>>0]=1;c[b+720>>2]=d;c[b+716>>2]=e;d=n;}else d=n;do{x=c[b+720>>2]|0;c[x+(d*104|0)>>2]=0;x=x+(d*104|0)+4|0;k=B;y=x+100|0;do{c[x>>2]=c[k>>2];x=x+4|0;k=k+4|0;}while((x|0)<(y|0));d=d+1|0;}while((d|0)!=(e|0))}c[b+712>>2]=e;if((e|0)>0){d=f;i=h;k=0;while(1){o=c[b+720>>2]|0;w=o+(k*104|0)|0;x=w;y=x+104|0;do{c[x>>2]=0;x=x+4|0;}while((x|0)<(y|0));if(!d){n=0;m=0.0;p=0.0;q=0.0;r=0.0;}else{n=d+16|0;m=+g[d+12>>2];p=+g[d>>2];q=+g[d+4>>2];r=+g[d+8>>2];}f=o+(k*104|0)+8|0;g[f>>2]=p;g[o+(k*104|0)+12>>2]=q;g[o+(k*104|0)+16>>2]=r;g[o+(k*104|0)+20>>2]=m;h=o+(k*104|0)+24|0;c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];if(!i){j=0;m=1.0;}else{j=i+4|0;m=+g[i>>2];}g[o+(k*104|0)+88>>2]=m>0.0?1.0/m:0.0;t=p-A;u=q-A;v=r-A;s=A+p;p=A+q;m=A+r;d=c[b+932>>2]|0;if(!d){c[6436]=(c[6436]|0)+1;d=ic(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}x=d;y=x+44|0;do{c[x>>2]=0;x=x+4|0;}while((x|0)<(y|0))}else c[b+932>>2]=0;c[d+32>>2]=0;c[d+36>>2]=w;c[d+40>>2]=0;g[d>>2]=t;g[d+4>>2]=u;g[d+8>>2]=v;g[d+12>>2]=0.0;g[d+16>>2]=s;g[d+20>>2]=p;g[d+24>>2]=m;g[d+28>>2]=0.0;Fe(b+928|0,c[b+928>>2]|0,d);c[b+940>>2]=(c[b+940>>2]|0)+1;c[o+(k*104|0)+96>>2]=d;c[o+(k*104|0)+4>>2]=z;k=k+1|0;if((k|0)==(e|0))break;else{d=n;i=j;}}}d=c[b+928>>2]|0;if(!d){c[b+892>>2]=0;c[b+892+4>>2]=0;c[b+892+8>>2]=0;c[b+892+12>>2]=0;c[b+892+16>>2]=0;c[b+892+20>>2]=0;c[b+892+24>>2]=0;c[b+892+28>>2]=0;l=B;return}e=c[b+192>>2]|0;u=+Db[c[(c[e>>2]|0)+48>>2]&15](e);A=+g[d+4>>2]-u;v=+g[d+8>>2]-u;g[b+892>>2]=+g[d>>2]-u;g[b+896>>2]=A;g[b+900>>2]=v;g[b+904>>2]=0.0;v=u+ +g[d+20>>2];A=u+ +g[d+24>>2];g[b+908>>2]=u+ +g[d+16>>2];g[b+912>>2]=v;g[b+916>>2]=A;g[b+920>>2]=0.0;d=c[b+188>>2]|0;if(!d){l=B;return}e=c[b+684>>2]|0;h=c[e+32>>2]|0;jb[c[(c[h>>2]|0)+16>>2]&31](h,d,b+892|0,b+908|0,c[e+36>>2]|0);l=B;return}function uc(d,e,f){d=d|0;e=e|0;f=+f;var h=0.0,i=0,j=0.0,k=0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0;s=l;l=l+528|0;if((a[d+171>>0]|0)==0?+g[d+172>>2]<=0.0:0){l=s;return}a[d+168>>0]=(pb[c[(c[d>>2]|0)+48>>2]&127](d)|0)&1;h=+g[d+16>>2]-+g[d+44>>2]*f;g[d+16>>2]=h;if(h>0.0?(j=+g[d+28>>2],h>j):0){g[d+16>>2]=j;h=j;}if(h<0.0?(q=+F(+h),m=+F(+(+g[d+24>>2])),q>m):0){g[d+16>>2]=-m;h=-m;}g[d+20>>2]=h*f;o=c[d+8>>2]|0;c[s>>2]=c[o+4>>2];c[s+4>>2]=c[o+4+4>>2];c[s+8>>2]=c[o+4+8>>2];c[s+12>>2]=c[o+4+12>>2];c[s+16>>2]=c[o+20>>2];c[s+16+4>>2]=c[o+20+4>>2];c[s+16+8>>2]=c[o+20+8>>2];c[s+16+12>>2]=c[o+20+12>>2];c[s+32>>2]=c[o+36>>2];c[s+32+4>>2]=c[o+36+4>>2];c[s+32+8>>2]=c[o+36+8>>2];c[s+32+12>>2]=c[o+36+12>>2];c[s+48>>2]=c[o+52>>2];c[s+48+4>>2]=c[o+52+4>>2];c[s+48+8>>2]=c[o+52+8>>2];c[s+48+12>>2]=c[o+52+12>>2];if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}o=c[d+176>>2]|0;m=+g[d+20>>2];m=+g[d+52>>2]+(m>0.0?m:0.0);p=+g[24508+(o<<4)+4>>2]*m+ +g[d+96>>2];q=m*+g[24508+(o<<4)+8>>2]+ +g[d+100>>2];g[d+112>>2]=+g[d+92>>2]+ +g[24508+(o<<4)>>2]*m;g[d+116>>2]=p;g[d+120>>2]=q;g[d+124>>2]=0.0;c[s+456>>2]=1065353216;c[s+456+4>>2]=0;c[s+456+4+4>>2]=0;c[s+456+4+8>>2]=0;c[s+456+4+12>>2]=0;c[s+456+20>>2]=1065353216;c[s+456+24>>2]=0;c[s+456+24+4>>2]=0;c[s+456+24+8>>2]=0;c[s+456+24+12>>2]=0;c[s+456+40>>2]=1065353216;o=s+456+44|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[s+392>>2]=1065353216;c[s+392+4>>2]=0;c[s+392+4+4>>2]=0;c[s+392+4+8>>2]=0;c[s+392+4+12>>2]=0;c[s+392+20>>2]=1065353216;c[s+392+24>>2]=0;c[s+392+24+4>>2]=0;c[s+392+24+8>>2]=0;c[s+392+24+12>>2]=0;c[s+392+40>>2]=1065353216;o=s+392+44|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}i=c[d+176>>2]|0;o=c[d+12>>2]|0;m=+Db[c[(c[o>>2]|0)+48>>2]&15](o);m=m+ +g[d+56>>2];p=m*+g[24508+(i<<4)+4>>2]+ +g[d+96>>2];q=m*+g[24508+(i<<4)+8>>2]+ +g[d+100>>2];g[s+456+48>>2]=+g[24508+(i<<4)>>2]*m+ +g[d+92>>2];g[s+456+52>>2]=p;g[s+456+56>>2]=q;g[s+456+60>>2]=0.0;c[s+392+48>>2]=c[d+112>>2];c[s+392+48+4>>2]=c[d+112+4>>2];c[s+392+48+8>>2]=c[d+112+8>>2];c[s+392+48+12>>2]=c[d+112+12>>2];i=c[d+8>>2]|0;if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}k=c[d+176>>2]|0;m=-+g[24508+(k<<4)>>2];p=-+g[24508+(k<<4)+4>>2];q=-+g[24508+(k<<4)+8>>2];g[s+288+4>>2]=1.0;k=s+288+12|0;c[s+288+76>>2]=0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[k+24>>2]=0;c[k+28>>2]=0;c[s+288>>2]=5064;c[s+288+80>>2]=i;g[s+288+84>>2]=m;g[s+288+88>>2]=p;g[s+288+92>>2]=q;g[s+288+96>>2]=0.0;g[s+288+100>>2]=.707099974155426;i=c[d+8>>2]|0;k=c[i+188>>2]|0;b[s+288+8>>1]=b[k+4>>1]|0;b[s+288+10>>1]=b[k+6>>1]|0;k=c[d+12>>2]|0;if(!(a[d+170>>0]|0))zd(e,k,s+456|0,s+392|0,s+288|0,0.0);else gd(i,k,s+456|0,s+392|0,s+288|0,+g[e+56>>2]);if(+g[s+288+4>>2]<1.0){if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}o=c[d+176>>2]|0;do if(+g[s+288+44>>2]*+g[24508+(o<<4)>>2]+ +g[s+288+48>>2]*+g[24508+(o<<4)+4>>2]+ +g[s+288+52>>2]*+g[24508+(o<<4)+8>>2]>0.0){h=+g[s+288+4>>2];g[d+108>>2]=+g[d+52>>2]*h;if(!(a[d+180>>0]|0)){c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2];break}else{g[d+92>>2]=(1.0-h)*+g[d+92>>2]+h*+g[d+112>>2];g[d+96>>2]=(1.0-h)*+g[d+96>>2]+h*+g[d+116>>2];g[d+100>>2]=(1.0-h)*+g[d+100>>2]+h*+g[d+120>>2];break}}while(0);g[d+16>>2]=0.0;g[d+20>>2]=0.0;}else{c[d+108>>2]=c[d+52>>2];c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2];}if(!(a[d+171>>0]|0)){p=+g[d+172>>2];q=p>f?f:p;g[d+172>>2]=p-f;Sd(d,e,q*+g[d+60>>2],q*+g[d+64>>2],q*+g[d+68>>2]);}else Sd(d,e,+g[d+60>>2],+g[d+64>>2],+g[d+68>>2]);c[s+272>>2]=c[d+112>>2];c[s+272+4>>2]=c[d+112+4>>2];c[s+272+8>>2]=c[d+112+8>>2];c[s+272+12>>2]=c[d+112+12>>2];h=+g[d+16>>2];h=(h<0.0?-h:0.0)*f;do if(h>0.0?(n=+g[d+24>>2],h>n):0){if((a[d+168>>0]|0)==0?a[d+169>>0]|0:0)break;h=n;}while(0);if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}i=c[d+176>>2]|0;q=h+ +g[d+108>>2];n=+g[24508+(i<<4)>>2]*q;p=q*+g[24508+(i<<4)+4>>2];q=q*+g[24508+(i<<4)+8>>2];g[d+112>>2]=+g[d+112>>2]-n;g[d+116>>2]=+g[d+116>>2]-p;g[d+120>>2]=+g[d+120>>2]-q;i=c[d+8>>2]|0;if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}k=24508+(c[d+176>>2]<<4)|0;o=c[d+40>>2]|0;g[s+168+4>>2]=1.0;t=s+168+12|0;c[s+168+76>>2]=0;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;c[t+20>>2]=0;c[t+24>>2]=0;c[t+28>>2]=0;c[s+168>>2]=5064;c[s+168+80>>2]=i;c[s+168+84>>2]=c[k>>2];c[s+168+84+4>>2]=c[k+4>>2];c[s+168+84+8>>2]=c[k+8>>2];c[s+168+84+12>>2]=c[k+12>>2];c[s+168+100>>2]=o;i=c[d+8>>2]|0;o=c[i+188>>2]|0;b[s+168+8>>1]=b[o+4>>1]|0;b[s+168+10>>1]=b[o+6>>1]|0;if((a[22688]|0)==0?iy(22688)|0:0){c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}o=24508+(c[d+176>>2]<<4)|0;t=c[d+40>>2]|0;g[s+64+4>>2]=1.0;k=s+64+12|0;c[s+64+76>>2]=0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[k+24>>2]=0;c[k+28>>2]=0;c[s+64>>2]=5064;c[s+64+80>>2]=i;c[s+64+84>>2]=c[o>>2];c[s+64+84+4>>2]=c[o+4>>2];c[s+64+84+8>>2]=c[o+8>>2];c[s+64+84+12>>2]=c[o+12>>2];c[s+64+100>>2]=t;i=c[(c[d+8>>2]|0)+188>>2]|0;b[s+64+8>>1]=b[i+4>>1]|0;b[s+64+10>>1]=b[i+6>>1]|0;i=0;h=+g[d+112>>2];j=+g[d+116>>2];m=+g[d+120>>2];while(1){c[s+456>>2]=1065353216;c[s+456+4>>2]=0;c[s+456+4+4>>2]=0;c[s+456+4+8>>2]=0;c[s+456+4+12>>2]=0;c[s+456+20>>2]=1065353216;c[s+456+24>>2]=0;c[s+456+24+4>>2]=0;c[s+456+24+8>>2]=0;c[s+456+24+12>>2]=0;c[s+456+40>>2]=1065353216;c[s+456+44>>2]=0;c[s+392>>2]=1065353216;c[s+392+4>>2]=0;c[s+392+4+4>>2]=0;c[s+392+4+8>>2]=0;c[s+392+4+12>>2]=0;c[s+392+20>>2]=1065353216;c[s+392+24>>2]=0;c[s+392+24+4>>2]=0;c[s+392+24+8>>2]=0;c[s+392+24+12>>2]=0;c[s+392+40>>2]=1065353216;c[s+392+44>>2]=0;c[s+288>>2]=1065353216;c[s+288+4>>2]=0;c[s+288+4+4>>2]=0;c[s+288+4+8>>2]=0;c[s+288+4+12>>2]=0;c[s+288+20>>2]=1065353216;c[s+288+24>>2]=0;c[s+288+24+4>>2]=0;c[s+288+24+8>>2]=0;c[s+288+24+12>>2]=0;c[s+288+40>>2]=1065353216;c[s+288+44>>2]=0;c[s+456+48>>2]=c[d+92>>2];c[s+456+48+4>>2]=c[d+92+4>>2];c[s+456+48+8>>2]=c[d+92+8>>2];c[s+456+48+12>>2]=c[d+92+12>>2];c[s+392+48>>2]=c[d+112>>2];c[s+392+48+4>>2]=c[d+112+4>>2];c[s+392+48+8>>2]=c[d+112+8>>2];c[s+392+48+12>>2]=c[d+112+12>>2];g[s+288+48>>2]=h-n;g[s+288+52>>2]=j-p;g[s+288+56>>2]=m-q;g[s+288+60>>2]=0.0;if(!(a[d+170>>0]|0)){zd(e,c[d+12>>2]|0,s+456|0,s+392|0,s+168|0,+g[e+56>>2]);if(!(+g[s+168+4>>2]<1.0))zd(e,c[d+12>>2]|0,s+456|0,s+288|0,s+64|0,+g[e+56>>2]);}else{gd(c[d+8>>2]|0,c[d+12>>2]|0,s+456|0,s+392|0,s+168|0,+g[e+56>>2]);if(!(+g[s+168+4>>2]<1.0))gd(c[d+8>>2]|0,c[d+12>>2]|0,s+456|0,s+288|0,s+64|0,+g[e+56>>2]);}m=+g[d+16>>2];m=(m<0.0?-m:0.0)*f;o=a[d+182>>0]|0;h=+g[s+168+4>>2];if(o<<24>>24!=0&h<1.0)k=1;else k=+g[s+64+4>>2]<1.0;if(!(m>0.0))break;j=+g[d+52>>2];if(i|(!(m<j)|k^1))break;if((a[d+168>>0]|0)==0?a[d+169>>0]|0:0){i=0;break}c[d+112>>2]=c[s+272>>2];c[d+112+4>>2]=c[s+272+4>>2];c[d+112+8>>2]=c[s+272+8>>2];c[d+112+12>>2]=c[s+272+12>>2];do if(!(a[22688]|0)){if(!(iy(22688)|0))break;c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}while(0);i=c[d+176>>2]|0;h=j+ +g[d+108>>2];j=h*+g[24508+(i<<4)+4>>2];m=h*+g[24508+(i<<4)+8>>2];h=+g[d+112>>2]-+g[24508+(i<<4)>>2]*h;g[d+112>>2]=h;j=+g[d+116>>2]-j;g[d+116>>2]=j;m=+g[d+120>>2]-m;g[d+120>>2]=m;i=1;}if(i|h<1.0){j=+g[d+96>>2];if(!(o<<24>>24))i=d+181|0;else{i=d+181|0;h=(a[d+181>>0]|0)==0?(j-+g[s+168+64>>2])*.5:h;}r=1.0-h;g[d+92>>2]=r*+g[d+92>>2]+h*+g[d+112>>2];g[d+96>>2]=r*j+h*+g[d+116>>2];g[d+100>>2]=r*+g[d+100>>2]+h*+g[d+120>>2];a[i>>0]=0;g[d+16>>2]=0.0;g[d+20>>2]=0.0;a[d+169>>0]=0;}else{a[d+181>>0]=1;do if(o<<24>>24?(r=+g[d+24>>2],m>r):0){if((a[d+168>>0]|0)==0?a[d+169>>0]|0:0)break;g[d+112>>2]=n+ +g[d+112>>2];g[d+116>>2]=p+ +g[d+116>>2];g[d+120>>2]=q+ +g[d+120>>2];do if(!(a[22688]|0)){if(!(iy(22688)|0))break;c[6127]=1065353216;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=0;c[6132]=1065353216;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=0;c[6137]=1065353216;g[6138]=0.0;}while(0);t=c[d+176>>2]|0;q=r+ +g[d+108>>2];f=q*+g[24508+(t<<4)+4>>2];r=q*+g[24508+(t<<4)+8>>2];g[d+112>>2]=+g[d+112>>2]-+g[24508+(t<<4)>>2]*q;g[d+116>>2]=+g[d+116>>2]-f;g[d+120>>2]=+g[d+120>>2]-r;}while(0);c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2];}c[s+48>>2]=c[d+92>>2];c[s+48+4>>2]=c[d+92+4>>2];c[s+48+8>>2]=c[d+92+8>>2];c[s+48+12>>2]=c[d+92+12>>2];t=c[d+8>>2]|0;c[t+260>>2]=(c[t+260>>2]|0)+1;c[t+4>>2]=c[s>>2];c[t+4+4>>2]=c[s+4>>2];c[t+4+8>>2]=c[s+8>>2];c[t+4+12>>2]=c[s+12>>2];c[t+20>>2]=c[s+16>>2];c[t+20+4>>2]=c[s+16+4>>2];c[t+20+8>>2]=c[s+16+8>>2];c[t+20+12>>2]=c[s+16+12>>2];c[t+36>>2]=c[s+32>>2];c[t+36+4>>2]=c[s+32+4>>2];c[t+36+8>>2]=c[s+32+8>>2];c[t+36+12>>2]=c[s+32+12>>2];c[t+52>>2]=c[s+48>>2];c[t+52+4>>2]=c[s+48+4>>2];c[t+52+8>>2]=c[s+48+8>>2];c[t+52+12>>2]=c[s+48+12>>2];l=s;return}function vc(d,f,h){d=d|0;f=f|0;h=h|0;var i=0,j=0,k=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0;K=l;l=l+96|0;H=c[d+56>>2]|0;if((h-f|0)==1){if(!(a[d+60>>0]|0)){q=(c[d+96>>2]|0)+(H<<6)|0;r=(c[d+76>>2]|0)+(f<<6)|0;s=q+64|0;do{c[q>>2]=c[r>>2];q=q+4|0;r=r+4|0;}while((q|0)<(s|0))}else{I=(c[d+116>>2]|0)+(f<<4)|0;J=(c[d+136>>2]|0)+(H<<4)|0;c[J>>2]=c[I>>2];c[J+4>>2]=c[I+4>>2];c[J+8>>2]=c[I+8>>2];c[J+12>>2]=c[I+12>>2];}c[d+56>>2]=(c[d+56>>2]|0)+1;l=K;return}c[K+32>>2]=0;c[K+32+4>>2]=0;c[K+32+8>>2]=0;c[K+32+12>>2]=0;if((h|0)>(f|0)){m=(a[d+60>>0]|0)==0;if(m){j=c[d+76>>2]|0;i=f;k=0.0;n=0.0;o=0.0;do{k=k+(+g[j+(i<<6)+16>>2]+ +g[j+(i<<6)>>2])*.5;n=n+(+g[j+(i<<6)+20>>2]+ +g[j+(i<<6)+4>>2])*.5;o=o+(+g[j+(i<<6)+24>>2]+ +g[j+(i<<6)+8>>2])*.5;i=i+1|0;}while((i|0)!=(h|0))}else{j=c[d+116>>2]|0;p=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];i=f;k=0.0;n=0.0;o=0.0;do{k=k+(+(e[j+(i<<4)+6>>1]|0)/p+x+(+(e[j+(i<<4)>>1]|0)/p+x))*.5;n=n+(+(e[j+(i<<4)+8>>1]|0)/t+y+(+(e[j+(i<<4)+2>>1]|0)/t+y))*.5;o=o+(+(e[j+(i<<4)+10>>1]|0)/u+z+(+(e[j+(i<<4)+4>>1]|0)/u+z))*.5;i=i+1|0;}while((i|0)!=(h|0))}C=1.0/+(h-f|0);E=C*k;D=C*n;C=C*o;if(m){j=c[d+76>>2]|0;i=f;o=0.0;n=0.0;k=0.0;do{x=(+g[j+(i<<6)+16>>2]+ +g[j+(i<<6)>>2])*.5-E;y=(+g[j+(i<<6)+20>>2]+ +g[j+(i<<6)+4>>2])*.5-D;z=(+g[j+(i<<6)+24>>2]+ +g[j+(i<<6)+8>>2])*.5-C;o=o+x*x;n=y*y+n;k=z*z+k;i=i+1|0;}while((i|0)!=(h|0))}else{j=c[d+116>>2]|0;p=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];i=f;o=0.0;n=0.0;k=0.0;do{N=(+(e[j+(i<<4)+6>>1]|0)/p+x+(+(e[j+(i<<4)>>1]|0)/p+x))*.5-E;M=(+(e[j+(i<<4)+8>>1]|0)/t+y+(+(e[j+(i<<4)+2>>1]|0)/t+y))*.5-D;L=(+(e[j+(i<<4)+10>>1]|0)/u+z+(+(e[j+(i<<4)+4>>1]|0)/u+z))*.5-C;o=o+N*N;n=M*M+n;k=L*L+k;i=i+1|0;}while((i|0)!=(h|0))}g[K+32>>2]=o;g[K+32+4>>2]=n;g[K+32+8>>2]=k;i=K+32|0;p=+(h-f|0);}else{i=K+32|0;p=+(h-f|0);o=0.0;n=0.0;k=0.0;}L=1.0/(p+-1.0);M=L*o;g[i>>2]=M;N=L*n;g[K+32+4>>2]=N;L=L*k;g[K+32+8>>2]=L;w=+g[K+32+((M<N&1)<<2)>>2]<L?2:M<N&1;c[K+16>>2]=0;c[K+16+4>>2]=0;c[K+16+8>>2]=0;c[K+16+12>>2]=0;if((h|0)>(f|0)){if(!(a[d+60>>0]|0)){j=c[d+76>>2]|0;i=f;o=0.0;n=0.0;k=0.0;do{o=(+g[j+(i<<6)+16>>2]+ +g[j+(i<<6)>>2])*.5+o;n=(+g[j+(i<<6)+20>>2]+ +g[j+(i<<6)+4>>2])*.5+n;k=(+g[j+(i<<6)+24>>2]+ +g[j+(i<<6)+8>>2])*.5+k;i=i+1|0;}while((i|0)!=(h|0))}else{j=c[d+116>>2]|0;p=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];i=f;o=0.0;n=0.0;k=0.0;do{o=(+(e[j+(i<<4)+6>>1]|0)/p+x+(+(e[j+(i<<4)>>1]|0)/p+x))*.5+o;n=(+(e[j+(i<<4)+8>>1]|0)/t+y+(+(e[j+(i<<4)+2>>1]|0)/t+y))*.5+n;k=(+(e[j+(i<<4)+10>>1]|0)/u+z+(+(e[j+(i<<4)+4>>1]|0)/u+z))*.5+k;i=i+1|0;}while((i|0)!=(h|0))}g[K+16>>2]=o;g[K+16+4>>2]=n;g[K+16+8>>2]=k;i=K+16|0;}else{i=K+16|0;o=0.0;n=0.0;k=0.0;}g[i>>2]=1.0/+(h-f|0)*o;g[K+16+4>>2]=1.0/+(h-f|0)*n;g[K+16+8>>2]=1.0/+(h-f|0)*k;x=+g[K+16+(w<<2)>>2];if((h|0)>(f|0)){i=f;v=f;do{j=(a[d+60>>0]|0)==0;if(j){G=c[d+76>>2]|0;k=+g[G+(v<<6)>>2];n=+g[G+(v<<6)+16>>2];o=+g[G+(v<<6)+4>>2];p=+g[G+(v<<6)+20>>2];t=+g[G+(v<<6)+8>>2];u=+g[G+(v<<6)+24>>2];}else{G=c[d+116>>2]|0;o=+g[d+36>>2];t=+g[d+40>>2];N=+g[d+44>>2];n=+g[d+4>>2];p=+g[d+8>>2];u=+g[d+12>>2];k=+(e[G+(v<<4)>>1]|0)/o+n;n=+(e[G+(v<<4)+6>>1]|0)/o+n;o=+(e[G+(v<<4)+2>>1]|0)/t+p;p=+(e[G+(v<<4)+8>>1]|0)/t+p;t=+(e[G+(v<<4)+4>>1]|0)/N+u;u=+(e[G+(v<<4)+10>>1]|0)/N+u;}g[K>>2]=(n+k)*.5;g[K+4>>2]=(p+o)*.5;g[K+8>>2]=(u+t)*.5;g[K+12>>2]=0.0;if(+g[K+(w<<2)>>2]>x){if(j){j=c[d+76>>2]|0;m=j+(v<<6)|0;q=K+32|0;r=m;s=q+64|0;do{c[q>>2]=c[r>>2];q=q+4|0;r=r+4|0;}while((q|0)<(s|0));q=m;r=j+(i<<6)|0;s=q+64|0;do{c[q>>2]=c[r>>2];q=q+4|0;r=r+4|0;}while((q|0)<(s|0));q=(c[d+76>>2]|0)+(i<<6)|0;r=K+32|0;s=q+64|0;do{c[q>>2]=c[r>>2];q=q+4|0;r=r+4|0;}while((q|0)<(s|0))}else{F=c[d+116>>2]|0;G=F+(v<<4)|0;c[K+32>>2]=c[G>>2];c[K+32+4>>2]=c[G+4>>2];c[K+32+8>>2]=c[G+8>>2];c[K+32+12>>2]=c[G+12>>2];F=F+(i<<4)|0;c[G>>2]=c[F>>2];c[G+4>>2]=c[F+4>>2];c[G+8>>2]=c[F+8>>2];c[G+12>>2]=c[F+12>>2];G=(c[d+116>>2]|0)+(i<<4)|0;c[G>>2]=c[K+32>>2];c[G+4>>2]=c[K+32+4>>2];c[G+8>>2]=c[K+32+8>>2];c[G+12>>2]=c[K+32+12>>2];}i=i+1|0;}v=v+1|0;}while((v|0)!=(h|0))}else i=f;if(!((i|0)>(((h-f|0)/3|0)+f|0)?(i|0)<(h+-1-((h-f|0)/3|0)|0):0))i=(h-f>>1)+f|0;G=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){F=(c[d+96>>2]|0)+(G<<6)|0;c[F>>2]=c[d+20>>2];c[F+4>>2]=c[d+20+4>>2];c[F+8>>2]=c[d+20+8>>2];c[F+12>>2]=c[d+20+12>>2];}else{F=c[d+136>>2]|0;M=(+g[d+24>>2]-+g[d+8>>2])*+g[d+40>>2];N=(+g[d+28>>2]-+g[d+12>>2])*+g[d+44>>2];b[F+(G<<4)>>1]=~~((+g[d+20>>2]-+g[d+4>>2])*+g[d+36>>2])&65535&-2;b[F+(G<<4)+2>>1]=~~M&65535&-2;b[F+(G<<4)+4>>1]=~~N&65535&-2;}j=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){F=(c[d+96>>2]|0)+(j<<6)+16|0;c[F>>2]=c[d+4>>2];c[F+4>>2]=c[d+4+4>>2];c[F+8>>2]=c[d+4+8>>2];c[F+12>>2]=c[d+4+12>>2];}else{F=c[d+136>>2]|0;L=+g[d+4>>2];M=+g[d+8>>2];N=+g[d+12>>2];M=(M-M)*+g[d+40>>2];N=(N-N)*+g[d+44>>2];b[F+(j<<4)+6>>1]=~~((L-L)*+g[d+36>>2]+1.0)&65535|1;b[F+(j<<4)+8>>1]=~~(M+1.0)&65535|1;b[F+(j<<4)+10>>1]=~~(N+1.0)&65535|1;}F=c[d+56>>2]|0;if((h|0)>(f|0)){B=a[d+60>>0]|0;A=f;do{if(!(B<<24>>24)){j=c[d+76>>2]|0;n=+g[j+(A<<6)>>2];u=+g[j+(A<<6)+4>>2];y=+g[j+(A<<6)+8>>2];p=+g[j+(A<<6)+12>>2];k=+g[j+(A<<6)+16>>2];x=+g[j+(A<<6)+20>>2];o=+g[j+(A<<6)+24>>2];t=+g[j+(A<<6)+28>>2];j=c[d+96>>2]|0;if(n<+g[j+(F<<6)>>2])g[j+(F<<6)>>2]=n;if(u<+g[j+(F<<6)+4>>2])g[j+(F<<6)+4>>2]=u;if(y<+g[j+(F<<6)+8>>2])g[j+(F<<6)+8>>2]=y;if(p<+g[j+(F<<6)+12>>2])g[j+(F<<6)+12>>2]=p;if(+g[j+(F<<6)+16>>2]<k)g[j+(F<<6)+16>>2]=k;if(+g[j+(F<<6)+20>>2]<x)g[j+(F<<6)+20>>2]=x;if(+g[j+(F<<6)+24>>2]<o)g[j+(F<<6)+24>>2]=o;if(+g[j+(F<<6)+28>>2]<t)g[j+(F<<6)+28>>2]=t;}else{v=c[d+116>>2]|0;p=+g[d+36>>2];y=+g[d+40>>2];E=+g[d+44>>2];t=+g[d+4>>2];z=+g[d+8>>2];L=+g[d+12>>2];u=+g[d+4>>2];C=+g[d+8>>2];M=+g[d+12>>2];x=+g[d+36>>2];D=+g[d+40>>2];N=+g[d+44>>2];j=~~((+(e[v+(A<<4)>>1]|0)/p+t-u)*x)&65535&-2;m=~~((+(e[v+(A<<4)+2>>1]|0)/y+z-C)*D)&65535&-2;q=~~((+(e[v+(A<<4)+4>>1]|0)/E+L-M)*N)&65535&-2;r=~~((+(e[v+(A<<4)+6>>1]|0)/p+t-u)*x+1.0)&65535|1;s=~~((+(e[v+(A<<4)+8>>1]|0)/y+z-C)*D+1.0)&65535|1;v=~~((+(e[v+(A<<4)+10>>1]|0)/E+L-M)*N+1.0)&65535|1;w=c[d+136>>2]|0;if((e[w+(F<<4)>>1]|0)>(j&65535))b[w+(F<<4)>>1]=j;if((e[w+(F<<4)+6>>1]|0)<(r&65535))b[w+(F<<4)+6>>1]=r;if((e[w+(F<<4)+2>>1]|0)>(m&65535))b[w+(F<<4)+2>>1]=m;if((e[w+(F<<4)+8>>1]|0)<(s&65535))b[w+(F<<4)+8>>1]=s;if((e[w+(F<<4)+4>>1]|0)>(q&65535))b[w+(F<<4)+4>>1]=q;if((e[w+(F<<4)+10>>1]|0)<(v&65535))b[w+(F<<4)+10>>1]=v;}A=A+1|0;}while((A|0)!=(h|0))}c[d+56>>2]=F+1;vc(d,f,i);A=c[d+56>>2]|0;vc(d,i,h);w=(c[d+56>>2]|0)-H|0;i=a[d+60>>0]|0;if(i<<24>>24!=0&(w<<4|0)>2048){s=c[d+136>>2]|0;q=c[s+(F+1<<4)+12>>2]|0;q=(q|0)>-1?1:0-q|0;v=c[s+(A<<4)+12>>2]|0;v=(v|0)>-1?1:0-v|0;if((q<<4|0)<2049){r=c[d+152>>2]|0;if((r|0)==(c[d+156>>2]|0)?(I=r|0?r<<1:1,(r|0)<(I|0)):0){if(!I){i=0;m=r;}else{c[6436]=(c[6436]|0)+1;i=ic(I<<5|19)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}m=c[d+152>>2]|0;}if((m|0)>0){j=0;do{H=i+(j<<5)|0;h=(c[d+160>>2]|0)+(j<<5)|0;c[H>>2]=c[h>>2];c[H+4>>2]=c[h+4>>2];c[H+8>>2]=c[h+8>>2];c[H+12>>2]=c[h+12>>2];c[H+16>>2]=c[h+16>>2];c[H+20>>2]=c[h+20>>2];c[H+24>>2]=c[h+24>>2];c[H+28>>2]=c[h+28>>2];j=j+1|0;}while((j|0)!=(m|0))}j=c[d+160>>2]|0;if(j|0){if(a[d+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[d+160>>2]=0;}a[d+164>>0]=1;c[d+160>>2]=i;c[d+156>>2]=I;i=c[d+152>>2]|0;}else i=r;c[d+152>>2]=i+1;I=(c[d+160>>2]|0)+(r<<5)|0;c[I>>2]=c[K+32>>2];c[I+4>>2]=c[K+32+4>>2];c[I+8>>2]=c[K+32+8>>2];c[I+12>>2]=c[K+32+12>>2];c[I+16>>2]=c[K+32+16>>2];c[I+20>>2]=c[K+32+20>>2];c[I+24>>2]=c[K+32+24>>2];c[I+28>>2]=c[K+32+28>>2];I=c[d+160>>2]|0;b[I+(r<<5)>>1]=b[s+(F+1<<4)>>1]|0;b[I+(r<<5)+2>>1]=b[s+(F+1<<4)+2>>1]|0;b[I+(r<<5)+4>>1]=b[s+(F+1<<4)+4>>1]|0;b[I+(r<<5)+6>>1]=b[s+(F+1<<4)+6>>1]|0;b[I+(r<<5)+8>>1]=b[s+(F+1<<4)+8>>1]|0;b[I+(r<<5)+10>>1]=b[s+(F+1<<4)+10>>1]|0;c[I+(r<<5)+12>>2]=F+1;c[I+(r<<5)+16>>2]=q;}if((v<<4|0)<2049){q=c[d+152>>2]|0;if((q|0)==(c[d+156>>2]|0)?(J=q|0?q<<1:1,(q|0)<(J|0)):0){if(!J){i=0;m=q;}else{c[6436]=(c[6436]|0)+1;i=ic(J<<5|19)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}m=c[d+152>>2]|0;}if((m|0)>0){j=0;do{I=i+(j<<5)|0;H=(c[d+160>>2]|0)+(j<<5)|0;c[I>>2]=c[H>>2];c[I+4>>2]=c[H+4>>2];c[I+8>>2]=c[H+8>>2];c[I+12>>2]=c[H+12>>2];c[I+16>>2]=c[H+16>>2];c[I+20>>2]=c[H+20>>2];c[I+24>>2]=c[H+24>>2];c[I+28>>2]=c[H+28>>2];j=j+1|0;}while((j|0)!=(m|0))}j=c[d+160>>2]|0;if(j|0){if(a[d+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[d+160>>2]=0;}a[d+164>>0]=1;c[d+160>>2]=i;c[d+156>>2]=J;i=c[d+152>>2]|0;}else i=q;c[d+152>>2]=i+1;i=(c[d+160>>2]|0)+(q<<5)|0;c[i>>2]=c[K+32>>2];c[i+4>>2]=c[K+32+4>>2];c[i+8>>2]=c[K+32+8>>2];c[i+12>>2]=c[K+32+12>>2];c[i+16>>2]=c[K+32+16>>2];c[i+20>>2]=c[K+32+20>>2];c[i+24>>2]=c[K+32+24>>2];c[i+28>>2]=c[K+32+28>>2];i=c[d+160>>2]|0;b[i+(q<<5)>>1]=b[s+(A<<4)>>1]|0;b[i+(q<<5)+2>>1]=b[s+(A<<4)+2>>1]|0;b[i+(q<<5)+4>>1]=b[s+(A<<4)+4>>1]|0;b[i+(q<<5)+6>>1]=b[s+(A<<4)+6>>1]|0;b[i+(q<<5)+8>>1]=b[s+(A<<4)+8>>1]|0;b[i+(q<<5)+10>>1]=b[s+(A<<4)+10>>1]|0;c[i+(q<<5)+12>>2]=A;c[i+(q<<5)+16>>2]=v;i=d+152|0;}else i=d+152|0;c[d+168>>2]=c[i>>2];i=a[d+60>>0]|0;}if(!(i<<24>>24)){c[(c[d+96>>2]|0)+(G<<6)+32>>2]=w;l=K;return}else{c[(c[d+136>>2]|0)+(G<<4)+12>>2]=0-w;l=K;return}}function wc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0;ha=l;l=l+176|0;ea=c[d+4>>2]|0;fa=c[e+4>>2]|0;if((c[ea+68>>2]|0)==(c[b+40>>2]|0)?(c[fa+68>>2]|0)==(c[b+44>>2]|0):0)da=b+8|0;else{i=c[b+8>>2]|0;k=c[i+8>>2]|0;if((k|0)>0){j=0;do{m=c[(c[i+16>>2]|0)+(j*12|0)+8>>2]|0;if(m|0){lb[c[c[m>>2]>>2]&511](m);da=c[b+4>>2]|0;nb[c[(c[da>>2]|0)+60>>2]&127](da,m);}j=j+1|0;}while((j|0)!=(k|0));i=c[b+8>>2]|0;}Bh(i);da=b+8|0;}a[ha+128+16>>0]=1;q=ha+128+12|0;c[q>>2]=0;c[ha+128+4>>2]=0;c[ha+128+8>>2]=0;p=c[da>>2]|0;i=c[p+8>>2]|0;if((i|0)>0){o=0;do{j=c[(c[p+16>>2]|0)+(o*12|0)+8>>2]|0;if(j){nb[c[(c[j>>2]|0)+16>>2]&127](j,ha+128|0);i=c[ha+128+4>>2]|0;if((i|0)>0){n=0;do{m=c[(c[q>>2]|0)+(n<<2)>>2]|0;if(c[m+748>>2]|0){c[h+4>>2]=m;i=c[m+740>>2]|0;j=c[(c[h+8>>2]|0)+8>>2]|0;k=c[(c[h+12>>2]|0)+8>>2]|0;if((i|0)==(j|0))Ue(m,i+4|0,k+4|0);else Ue(m,k+4|0,j+4|0);c[h+4>>2]=0;i=c[ha+128+4>>2]|0;}n=n+1|0;}while((n|0)<(i|0))}if((i|0)<0){if((c[ha+128+8>>2]|0)<0){j=c[q>>2]|0;if(j|0){if(a[ha+128+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[q>>2]=0;}a[ha+128+16>>0]=1;c[q>>2]=0;c[ha+128+8>>2]=0;}do{c[(c[q>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while((i|0)!=0)}c[ha+128+4>>2]=0;i=c[p+8>>2]|0;}o=o+1|0;}while((o|0)<(i|0));i=c[q>>2]|0;if(i|0){if(a[ha+128+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[q>>2]=0;}}j=c[ea+64>>2]|0;k=c[fa+64>>2]|0;t=c[b+4>>2]|0;u=c[da>>2]|0;v=c[b+32>>2]|0;c[ha+128>>2]=6380;c[ha+128+4>>2]=0;c[ha+128+8>>2]=d;c[ha+128+12>>2]=e;c[ha+128+16>>2]=t;c[ha+128+20>>2]=f;c[ha+128+24>>2]=h;c[ha+128+28>>2]=u;c[ha+128+32>>2]=v;v=c[d+12>>2]|0;G=+g[v>>2];H=+g[v+16>>2];I=+g[v+32>>2];J=+g[v+4>>2];K=+g[v+20>>2];L=+g[v+36>>2];M=+g[v+8>>2];N=+g[v+24>>2];O=+g[v+40>>2];P=-+g[v+48>>2];Q=-+g[v+52>>2];R=-+g[v+56>>2];v=c[e+12>>2]|0;S=+g[v>>2];T=+g[v+16>>2];U=+g[v+32>>2];V=+g[v+4>>2];W=+g[v+20>>2];X=+g[v+36>>2];Y=+g[v+8>>2];Z=+g[v+24>>2];_=+g[v+40>>2];$=+g[v+48>>2];aa=+g[v+52>>2];ba=+g[v+56>>2];j=c[j>>2]|0;k=c[k>>2]|0;if((j|0)!=0&(k|0)!=0){c[6436]=(c[6436]|0)+1;i=ic(1043)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}c[i>>2]=j;c[i+4>>2]=k;w=+F(+(G*S+H*T+I*U));x=+F(+(G*V+H*W+I*X));y=+F(+(G*Y+H*Z+I*_));z=+F(+(J*S+K*T+L*U));A=+F(+(J*V+K*W+L*X));B=+F(+(J*Y+K*Z+L*_));C=+F(+(M*S+N*T+O*U));D=+F(+(M*V+N*W+O*X));E=+F(+(M*Y+N*Z+O*_));h=1;o=124;p=128;s=i;n=128;q=i;m=i;k=i;while(1){v=h+-1|0;t=c[s+(v<<3)>>2]|0;u=c[s+(v<<3)+4>>2]|0;sa=+g[u+16>>2];ra=+g[u>>2];qa=+g[u+20>>2];pa=+g[u+4>>2];oa=+g[u+24>>2];ia=+g[u+8>>2];na=G*P+H*Q+I*R+(G*$+H*aa+I*ba)+((G*S+H*T+I*U)*(sa+ra)*.5+(G*V+H*W+I*X)*(qa+pa)*.5+(G*Y+H*Z+I*_)*(oa+ia)*.5);la=J*P+K*Q+L*R+(J*$+K*aa+L*ba)+((J*S+K*T+L*U)*(sa+ra)*.5+(J*V+K*W+L*X)*(qa+pa)*.5+(J*Y+K*Z+L*_)*(oa+ia)*.5);ja=M*P+N*Q+O*R+(M*$+N*aa+O*ba)+((M*S+N*T+O*U)*(sa+ra)*.5+(M*V+N*W+O*X)*(qa+pa)*.5+(M*Y+N*Z+O*_)*(oa+ia)*.5);ma=((sa-ra)*.5+0.0)*w+((qa-pa)*.5+0.0)*x+((oa-ia)*.5+0.0)*y;ka=((sa-ra)*.5+0.0)*z+((qa-pa)*.5+0.0)*A+((oa-ia)*.5+0.0)*B;ia=((sa-ra)*.5+0.0)*C+((qa-pa)*.5+0.0)*D+((oa-ia)*.5+0.0)*E;do if(((((+g[t>>2]<=ma+na?+g[t+16>>2]>=na-ma:0)?+g[t+4>>2]<=la+ka:0)?+g[t+20>>2]>=la-ka:0)?+g[t+8>>2]<=ja+ia:0)?+g[t+24>>2]>=ja-ia:0){if((v|0)>(o|0)){r=n<<1;do if((n|0)<(r|0)&(p|0)<(r|0)){do if(!n){k=0;i=0;ca=52;}else{c[6436]=(c[6436]|0)+1;i=ic((n<<4|3)+16|0)|0;if(!i)j=0;else{c[(i+4+15&-16)+-4>>2]=i;j=i+4+15&-16;}if((n|0)>0)i=0;else{k=j;i=j;ca=52;break}do{o=s+(i<<3)|0;p=c[o+4>>2]|0;f=j+(i<<3)|0;c[f>>2]=c[o>>2];c[f+4>>2]=p;i=i+1|0;}while((i|0)!=(n|0));k=j;i=j;}while(0);if((ca|0)==52){ca=0;if(!s){n=r;m=k;o=k;j=k;break}}if(!q){n=r;m=k;o=k;j=k;}else{c[6437]=(c[6437]|0)+1;Tc(c[q+-4>>2]|0);n=r;m=k;o=k;j=k;}}else{n=p;i=s;o=k;j=q;}while(0);f=r+-4|0;p=n;n=r;q=j;}else{f=o;i=s;o=k;}j=(c[u+40>>2]|0)!=0;if(!(c[t+40>>2]|0))if(j){k=c[u+36>>2]|0;c[i+(v<<3)>>2]=t;c[i+(v<<3)+4>>2]=k;k=c[u+40>>2]|0;c[i+(h<<3)>>2]=t;c[i+(h<<3)+4>>2]=k;h=h+1|0;k=o;j=q;break}else{Vb[c[(c[ha+128>>2]|0)+8>>2]&127](ha+128|0,t,u);h=v;k=o;j=q;break}else{k=c[t+36>>2]|0;if(j){j=c[u+36>>2]|0;c[i+(v<<3)>>2]=k;c[i+(v<<3)+4>>2]=j;v=c[u+36>>2]|0;j=h+1|0;c[i+(h<<3)>>2]=c[t+40>>2];c[i+(h<<3)+4>>2]=v;v=c[u+40>>2]|0;k=h+2|0;c[i+(j<<3)>>2]=c[t+36>>2];c[i+(j<<3)+4>>2]=v;j=c[u+40>>2]|0;c[i+(k<<3)>>2]=c[t+40>>2];c[i+(k<<3)+4>>2]=j;h=h+3|0;k=o;j=q;break}else{c[i+(v<<3)>>2]=k;c[i+(v<<3)+4>>2]=u;c[i+(h<<3)>>2]=c[t+40>>2];c[i+(h<<3)+4>>2]=u;h=h+1|0;k=o;j=q;break}}}else{h=v;f=o;i=s;j=q;}while(0);if(!h)break;else{o=f;s=i;q=j;}}if(!((i|0)==0|(m|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);}}p=c[da>>2]|0;if((c[p+8>>2]|0)>0){o=0;do{i=c[p+16>>2]|0;j=c[i+(o*12|0)+8>>2]|0;do if(j|0){ca=c[i+(o*12|0)>>2]|0;v=c[ea+24>>2]|0;u=c[v+(ca*80|0)+64>>2]|0;t=c[d+12>>2]|0;sa=+g[t>>2];T=+g[t+4>>2];S=+g[t+8>>2];pa=+g[t+16>>2];na=+g[t+20>>2];la=+g[t+24>>2];oa=+g[t+32>>2];ka=+g[t+36>>2];Y=+g[t+40>>2];ja=+g[v+(ca*80|0)>>2];ia=+g[v+(ca*80|0)+16>>2];ba=+g[v+(ca*80|0)+32>>2];aa=+g[v+(ca*80|0)+4>>2];$=+g[v+(ca*80|0)+20>>2];_=+g[v+(ca*80|0)+36>>2];ma=+g[v+(ca*80|0)+8>>2];Z=+g[v+(ca*80|0)+24>>2];X=+g[v+(ca*80|0)+40>>2];ra=+g[v+(ca*80|0)+48>>2];qa=+g[v+(ca*80|0)+52>>2];U=+g[v+(ca*80|0)+56>>2];W=+g[t+48>>2]+(sa*ra+T*qa+S*U);V=+g[t+52>>2]+(pa*ra+na*qa+la*U);U=+g[t+56>>2]+(oa*ra+ka*qa+Y*U);g[ha>>2]=sa*ja+T*ia+S*ba;g[ha+4>>2]=sa*aa+T*$+S*_;g[ha+8>>2]=sa*ma+T*Z+S*X;g[ha+12>>2]=0.0;g[ha+16>>2]=pa*ja+na*ia+la*ba;g[ha+20>>2]=pa*aa+na*$+la*_;g[ha+24>>2]=pa*ma+na*Z+la*X;g[ha+28>>2]=0.0;g[ha+32>>2]=oa*ja+ka*ia+Y*ba;g[ha+36>>2]=oa*aa+ka*$+Y*_;g[ha+40>>2]=oa*ma+ka*Z+Y*X;g[ha+44>>2]=0.0;g[ha+48>>2]=W;g[ha+52>>2]=V;g[ha+56>>2]=U;g[ha+60>>2]=0.0;Zb[c[(c[u>>2]|0)+8>>2]&127](u,ha,ha+112|0,ha+96|0);u=c[(c[p+16>>2]|0)+(o*12|0)+4>>2]|0;t=c[fa+24>>2]|0;ca=c[t+(u*80|0)+64>>2]|0;v=c[e+12>>2]|0;U=+g[v>>2];V=+g[v+4>>2];W=+g[v+8>>2];X=+g[v+16>>2];Y=+g[v+20>>2];Z=+g[v+24>>2];ka=+g[v+32>>2];ma=+g[v+36>>2];oa=+g[v+40>>2];_=+g[t+(u*80|0)>>2];$=+g[t+(u*80|0)+16>>2];aa=+g[t+(u*80|0)+32>>2];ba=+g[t+(u*80|0)+4>>2];ia=+g[t+(u*80|0)+20>>2];ja=+g[t+(u*80|0)+36>>2];la=+g[t+(u*80|0)+8>>2];na=+g[t+(u*80|0)+24>>2];pa=+g[t+(u*80|0)+40>>2];S=+g[t+(u*80|0)+48>>2];T=+g[t+(u*80|0)+52>>2];sa=+g[t+(u*80|0)+56>>2];qa=+g[v+48>>2]+(U*S+V*T+W*sa);ra=+g[v+52>>2]+(X*S+Y*T+Z*sa);sa=+g[v+56>>2]+(ka*S+ma*T+oa*sa);g[ha>>2]=U*_+V*$+W*aa;g[ha+4>>2]=U*ba+V*ia+W*ja;g[ha+8>>2]=U*la+V*na+W*pa;g[ha+12>>2]=0.0;g[ha+16>>2]=X*_+Y*$+Z*aa;g[ha+20>>2]=X*ba+Y*ia+Z*ja;g[ha+24>>2]=X*la+Y*na+Z*pa;g[ha+28>>2]=0.0;g[ha+32>>2]=ka*_+ma*$+oa*aa;g[ha+36>>2]=ka*ba+ma*ia+oa*ja;g[ha+40>>2]=ka*la+ma*na+oa*pa;g[ha+44>>2]=0.0;g[ha+48>>2]=qa;g[ha+52>>2]=ra;g[ha+56>>2]=sa;g[ha+60>>2]=0.0;Zb[c[(c[ca>>2]|0)+8>>2]&127](ca,ha,ha+80|0,ha+64|0);if(!(+g[ha+112>>2]>+g[ha+64>>2])?!(+g[ha+96>>2]<+g[ha+80>>2]):0)i=1;else i=0;if(!(!(+g[ha+112+8>>2]>+g[ha+64+8>>2])?!(+g[ha+96+8>>2]<+g[ha+80+8>>2]):0))i=0;if(!(+g[ha+112+4>>2]>+g[ha+64+4>>2])?!(+g[ha+96+4>>2]<+g[ha+80+4>>2]|i^1):0)break;lb[c[c[j>>2]>>2]&511](j);n=c[b+4>>2]|0;nb[c[(c[n>>2]|0)+60>>2]&127](n,j);n=c[p+16>>2]|0;m=c[n+(o*12|0)>>2]|0;n=c[n+(o*12|0)+4>>2]|0;j=c[b+16>>2]|0;if((j|0)==(c[b+20>>2]|0)?(ga=j|0?j<<1:1,(j|0)<(ga|0)):0){if(!ga)i=0;else{c[6436]=(c[6436]|0)+1;i=ic((ga*12|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}j=c[b+16>>2]|0;}if((j|0)>0){k=0;do{ca=i+(k*12|0)|0;v=(c[b+24>>2]|0)+(k*12|0)|0;c[ca>>2]=c[v>>2];c[ca+4>>2]=c[v+4>>2];c[ca+8>>2]=c[v+8>>2];k=k+1|0;}while((k|0)!=(j|0))}j=c[b+24>>2]|0;if(j|0){if(a[b+28>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[b+24>>2]=0;}a[b+28>>0]=1;c[b+24>>2]=i;c[b+20>>2]=ga;i=c[b+16>>2]|0;}else i=j;ca=c[b+24>>2]|0;c[ca+(i*12|0)>>2]=m;c[ca+(i*12|0)+4>>2]=n;c[ca+(i*12|0)+8>>2]=0;c[b+16>>2]=(c[b+16>>2]|0)+1;}while(0);o=o+1|0;}while((o|0)<(c[p+8>>2]|0));j=b+24|0;k=b+16|0;}else{j=b+24|0;k=b+16|0;}if((c[k>>2]|0)>0){i=0;do{e=c[da>>2]|0;ga=c[j>>2]|0;zb[c[(c[e>>2]|0)+8>>2]&63](e,c[ga+(i*12|0)>>2]|0,c[ga+(i*12|0)+4>>2]|0)|0;i=i+1|0;}while((i|0)<(c[k>>2]|0))}i=c[j>>2]|0;if(!i){a[b+28>>0]=1;c[j>>2]=0;c[k>>2]=0;b=b+20|0;c[b>>2]=0;l=ha;return}if(a[b+28>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[j>>2]=0;a[b+28>>0]=1;c[j>>2]=0;c[k>>2]=0;b=b+20|0;c[b>>2]=0;l=ha;return}function xc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0;t=l;l=l+208|0;f=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Xb[c[(c[f>>2]|0)+56>>2]&7](f,b,1.0);f=c[d+4>>2]|0;switch(f|0){case 31:{f=c[d+16>>2]|0;if((f|0)<=0){l=t;return}do{s=f;f=f+-1|0;r=c[d+24>>2]|0;E=+g[r+(f*80|0)>>2];B=+g[r+(f*80|0)+4>>2];y=+g[r+(f*80|0)+8>>2];D=+g[r+(f*80|0)+16>>2];A=+g[r+(f*80|0)+20>>2];w=+g[r+(f*80|0)+24>>2];C=+g[r+(f*80|0)+32>>2];z=+g[r+(f*80|0)+36>>2];u=+g[r+(f*80|0)+40>>2];M=+g[r+(f*80|0)+48>>2];L=+g[r+(f*80|0)+52>>2];k=+g[r+(f*80|0)+56>>2];r=c[r+(f*80|0)+64>>2]|0;q=c[(c[a>>2]|0)+28>>2]|0;K=+g[b>>2];J=+g[b+4>>2];I=+g[b+8>>2];H=+g[b+16>>2];G=+g[b+20>>2];F=+g[b+24>>2];x=+g[b+32>>2];v=+g[b+36>>2];h=+g[b+40>>2];i=M*K+L*J+k*I+ +g[b+48>>2];j=M*H+L*G+k*F+ +g[b+52>>2];k=M*x+L*v+k*h+ +g[b+56>>2];g[t+144>>2]=E*K+D*J+C*I;g[t+144+4>>2]=B*K+A*J+z*I;g[t+144+8>>2]=y*K+w*J+u*I;g[t+144+12>>2]=0.0;g[t+144+16>>2]=E*H+D*G+C*F;g[t+144+20>>2]=B*H+A*G+z*F;g[t+144+24>>2]=y*H+w*G+u*F;g[t+144+28>>2]=0.0;g[t+144+32>>2]=E*x+D*v+C*h;g[t+144+36>>2]=B*x+A*v+z*h;g[t+144+40>>2]=y*x+w*v+u*h;g[t+144+44>>2]=0.0;g[t+144+48>>2]=i;g[t+144+52>>2]=j;g[t+144+56>>2]=k;g[t+144+60>>2]=0.0;Zb[q&127](a,t+144|0,r,e);}while((s|0)>1);l=t;return}case 0:{c[t+144>>2]=c[d+28>>2];c[t+144+4>>2]=c[d+28+4>>2];c[t+144+8>>2]=c[d+28+8>>2];c[t+144+12>>2]=c[d+28+12>>2];K=+Db[c[(c[d>>2]|0)+48>>2]&15](d);L=+Db[c[(c[d>>2]|0)+48>>2]&15](d);M=+Db[c[(c[d>>2]|0)+48>>2]&15](d);K=K+ +g[t+144>>2];g[t+144>>2]=K;L=L+ +g[t+144+4>>2];g[t+144+4>>2]=L;M=M+ +g[t+144+8>>2];g[t+144+8>>2]=M;d=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;a=c[(c[d>>2]|0)+72>>2]|0;g[t+112>>2]=-K;g[t+112+4>>2]=-L;g[t+112+8>>2]=-M;g[t+112+12>>2]=0.0;jb[a&31](d,t+112|0,t+144|0,b,e);l=t;return}case 8:{M=+Db[c[(c[d>>2]|0)+48>>2]&15](d);d=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;sb[c[(c[d>>2]|0)+16>>2]&0](d,M,b,e);l=t;return}case 9:{f=c[d+92>>2]|0;if((f|0)<=0){l=t;return}do{s=f;f=f+-1|0;r=c[d+100>>2]|0;y=+g[r+(f<<4)>>2];z=+g[r+(f<<4)+4>>2];L=+g[r+(f<<4)+8>>2];r=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;q=c[(c[r>>2]|0)+16>>2]|0;M=+g[(c[d+120>>2]|0)+(f<<2)>>2];B=+g[b>>2];C=+g[b+4>>2];A=+g[b+8>>2];E=+g[b+16>>2];F=+g[b+20>>2];D=+g[b+24>>2];H=+g[b+32>>2];I=+g[b+36>>2];G=+g[b+40>>2];J=y*B+z*C+L*A+ +g[b+48>>2];K=y*E+z*F+L*D+ +g[b+52>>2];L=y*H+z*I+L*G+ +g[b+56>>2];g[t+144>>2]=B+C*0.0+A*0.0;g[t+144+4>>2]=B*0.0+C+A*0.0;g[t+144+8>>2]=A+(B*0.0+C*0.0);g[t+144+12>>2]=0.0;g[t+144+16>>2]=E+F*0.0+D*0.0;g[t+144+20>>2]=E*0.0+F+D*0.0;g[t+144+24>>2]=D+(E*0.0+F*0.0);g[t+144+28>>2]=0.0;g[t+144+32>>2]=H+I*0.0+G*0.0;g[t+144+36>>2]=H*0.0+I+G*0.0;g[t+144+40>>2]=G+(H*0.0+I*0.0);g[t+144+44>>2]=0.0;g[t+144+48>>2]=J;g[t+144+52>>2]=K;g[t+144+56>>2]=L;g[t+144+60>>2]=0.0;sb[q&0](r,M,t+144|0,e);}while((s|0)>1);l=t;return}case 10:{s=c[d+52>>2]|0;L=+g[d+28+(((s+2|0)%3|0)<<2)>>2];M=+g[d+28+(s<<2)>>2];d=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;rb[c[(c[d>>2]|0)+76>>2]&0](d,L,M,s,b,e);l=t;return}case 11:{L=+g[d+56>>2];M=+g[d+60>>2];d=c[d+68>>2]|0;a=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;rb[c[(c[a>>2]|0)+84>>2]&0](a,L,M,d,b,e);l=t;return}case 13:{s=c[d+52>>2]|0;L=+Db[c[(c[d>>2]|0)+92>>2]&15](d);c[t+128>>2]=c[d+28>>2];c[t+128+4>>2]=c[d+28+4>>2];c[t+128+8>>2]=c[d+28+8>>2];c[t+128+12>>2]=c[d+28+12>>2];J=+Db[c[(c[d>>2]|0)+48>>2]&15](d);K=+Db[c[(c[d>>2]|0)+48>>2]&15](d);M=+Db[c[(c[d>>2]|0)+48>>2]&15](d);g[t+128>>2]=J+ +g[t+128>>2];g[t+128+4>>2]=K+ +g[t+128+4>>2];g[t+128+8>>2]=M+ +g[t+128+8>>2];M=+g[t+128+(s<<2)>>2];d=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;rb[c[(c[d>>2]|0)+80>>2]&0](d,L,M,s,b,e);l=t;return}case 28:{M=+g[d+64>>2];a=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Gb[c[(c[a>>2]|0)+88>>2]&0](a,d+48|0,M,b,e);l=t;return}default:{a:do if((f|0)<7){r=c[d+52>>2]|0;if(!r){if((pb[c[(c[d>>2]|0)+100>>2]&127](d)|0)<=0)break;f=0;while(1){Zb[c[(c[d>>2]|0)+104>>2]&127](d,f,t+144|0,t+112|0);K=+g[t+144>>2];y=+g[b>>2];I=+g[t+144+4>>2];z=+g[b+4>>2];G=+g[t+144+8>>2];A=+g[b+8>>2];C=+g[b+16>>2];D=+g[b+20>>2];E=+g[b+24>>2];H=+g[b+32>>2];J=+g[b+36>>2];L=+g[b+40>>2];B=+g[b+48>>2];F=+g[b+52>>2];M=+g[b+56>>2];g[t+16>>2]=K*y+I*z+G*A+B;g[t+16+4>>2]=K*C+I*D+G*E+F;g[t+16+8>>2]=K*H+I*J+G*L+M;g[t+16+12>>2]=0.0;G=+g[t+112>>2];I=+g[t+112+4>>2];K=+g[t+112+8>>2];g[t>>2]=G*y+I*z+K*A+B;g[t+4>>2]=G*C+I*D+K*E+F;g[t+8>>2]=G*H+I*J+K*L+M;g[t+12>>2]=0.0;s=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Zb[c[(c[s>>2]|0)+8>>2]&127](s,t+16|0,t,e);f=f+1|0;if((f|0)>=(pb[c[(c[d>>2]|0)+100>>2]&127](d)|0))break a}}if((c[r+28>>2]|0)>0){q=0;do{f=c[r+36>>2]|0;p=c[f+(q*36|0)+4>>2]|0;b:do if((p|0)!=0?(s=c[f+(q*36|0)+12>>2]|0,(p|0)>0):0){f=0;n=c[s+(p+-1<<2)>>2]|0;m=s;h=0.0;i=0.0;k=0.0;while(1){o=c[m+(f<<2)>>2]|0;m=c[r+16>>2]|0;h=h+ +g[m+(o<<4)>>2];i=i+ +g[m+(o<<4)+4>>2];k=k+ +g[m+(o<<4)+8>>2];m=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;N=c[(c[m>>2]|0)+8>>2]|0;O=c[r+16>>2]|0;K=+g[O+(n<<4)>>2];y=+g[b>>2];I=+g[O+(n<<4)+4>>2];z=+g[b+4>>2];G=+g[O+(n<<4)+8>>2];A=+g[b+8>>2];C=+g[b+16>>2];D=+g[b+20>>2];E=+g[b+24>>2];H=+g[b+32>>2];J=+g[b+36>>2];L=+g[b+40>>2];B=+g[b+48>>2];F=+g[b+52>>2];M=+g[b+56>>2];g[t+144>>2]=K*y+I*z+G*A+B;g[t+144+4>>2]=K*C+I*D+G*E+F;g[t+144+8>>2]=K*H+I*J+G*L+M;g[t+144+12>>2]=0.0;G=+g[O+(o<<4)>>2];I=+g[O+(o<<4)+4>>2];K=+g[O+(o<<4)+8>>2];g[t+112>>2]=G*y+I*z+K*A+B;g[t+112+4>>2]=G*C+I*D+K*E+F;g[t+112+8>>2]=G*H+I*J+K*L+M;g[t+112+12>>2]=0.0;Zb[N&127](m,t+144|0,t+112|0,e);f=f+1|0;m=c[r+36>>2]|0;if((f|0)>=(c[m+(q*36|0)+4>>2]|0))break b;n=o;m=c[m+(q*36|0)+12>>2]|0;}}else{h=0.0;i=0.0;k=0.0;}while(0);j=1.0/+(p|0)*h;i=1.0/+(p|0)*i;h=1.0/+(p|0)*k;O=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;if((pb[c[(c[O>>2]|0)+48>>2]&127](O)|0)&16384|0){c[t+144>>2]=1065353216;c[t+144+4>>2]=1065353216;c[t+144+8>>2]=0;g[t+144+12>>2]=0.0;O=c[r+36>>2]|0;G=+g[O+(q*36|0)+20>>2];I=+g[O+(q*36|0)+24>>2];K=+g[O+(q*36|0)+28>>2];O=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;N=c[(c[O>>2]|0)+8>>2]|0;y=+g[b>>2];z=+g[b+4>>2];A=+g[b+8>>2];C=+g[b+16>>2];D=+g[b+20>>2];E=+g[b+24>>2];H=+g[b+32>>2];J=+g[b+36>>2];L=+g[b+40>>2];B=+g[b+48>>2];F=+g[b+52>>2];M=+g[b+56>>2];g[t+112>>2]=j*y+i*z+h*A+B;g[t+112+4>>2]=j*C+i*D+h*E+F;g[t+112+8>>2]=j*H+i*J+h*L+M;g[t+112+12>>2]=0.0;g[t+16>>2]=(j+G)*y+(i+I)*z+(h+K)*A+B;g[t+16+4>>2]=(j+G)*C+(i+I)*D+(h+K)*E+F;g[t+16+8>>2]=(j+G)*H+(i+I)*J+(h+K)*L+M;g[t+16+12>>2]=0.0;Zb[N&127](O,t+112|0,t+16|0,t+144|0);}q=q+1|0;}while((q|0)<(c[r+28>>2]|0))}}while(0);f=c[d+4>>2]|0;if((f+-21|0)>>>0<9){c[t+144>>2]=1566444395;c[t+144+4>>2]=1566444395;c[t+144+8>>2]=1566444395;g[t+144+12>>2]=0.0;c[t+112>>2]=-581039253;c[t+112+4>>2]=-581039253;c[t+112+8>>2]=-581039253;g[t+112+12>>2]=0.0;f=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[t+16>>2]=5944;c[t+16+4>>2]=5968;c[t+16+8>>2]=f;c[t+16+12>>2]=c[e>>2];c[t+16+12+4>>2]=c[e+4>>2];c[t+16+12+8>>2]=c[e+8>>2];c[t+16+12+12>>2]=c[e+12>>2];c[t+16+28>>2]=c[b>>2];c[t+16+28+4>>2]=c[b+4>>2];c[t+16+28+8>>2]=c[b+8>>2];c[t+16+28+12>>2]=c[b+12>>2];c[t+16+44>>2]=c[b+16>>2];c[t+16+44+4>>2]=c[b+16+4>>2];c[t+16+44+8>>2]=c[b+16+8>>2];c[t+16+44+12>>2]=c[b+16+12>>2];c[t+16+60>>2]=c[b+32>>2];c[t+16+60+4>>2]=c[b+32+4>>2];c[t+16+60+8>>2]=c[b+32+8>>2];c[t+16+60+12>>2]=c[b+32+12>>2];c[t+16+76>>2]=c[b+48>>2];c[t+16+76+4>>2]=c[b+48+4>>2];c[t+16+76+8>>2]=c[b+48+8>>2];c[t+16+76+12>>2]=c[b+48+12>>2];Zb[c[(c[d>>2]|0)+64>>2]&127](d,t+16|0,t+112|0,t+144|0);f=c[d+4>>2]|0;}if((f|0)!=3){l=t;return}c[t+144>>2]=1566444395;c[t+144+4>>2]=1566444395;c[t+144+8>>2]=1566444395;g[t+144+12>>2]=0.0;c[t+112>>2]=-581039253;c[t+112+4>>2]=-581039253;c[t+112+8>>2]=-581039253;g[t+112+12>>2]=0.0;O=pb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[t+16>>2]=5944;c[t+16+4>>2]=5968;c[t+16+8>>2]=O;c[t+16+12>>2]=c[e>>2];c[t+16+12+4>>2]=c[e+4>>2];c[t+16+12+8>>2]=c[e+8>>2];c[t+16+12+12>>2]=c[e+12>>2];c[t+16+28>>2]=c[b>>2];c[t+16+28+4>>2]=c[b+4>>2];c[t+16+28+8>>2]=c[b+8>>2];c[t+16+28+12>>2]=c[b+12>>2];c[t+16+44>>2]=c[b+16>>2];c[t+16+44+4>>2]=c[b+16+4>>2];c[t+16+44+8>>2]=c[b+16+8>>2];c[t+16+44+12>>2]=c[b+16+12>>2];c[t+16+60>>2]=c[b+32>>2];c[t+16+60+4>>2]=c[b+32+4>>2];c[t+16+60+8>>2]=c[b+32+8>>2];c[t+16+60+12>>2]=c[b+32+12>>2];c[t+16+76>>2]=c[b+48>>2];c[t+16+76+4>>2]=c[b+48+4>>2];c[t+16+76+8>>2]=c[b+48+8>>2];c[t+16+76+12>>2]=c[b+48+12>>2];O=c[d+92>>2]|0;Zb[c[(c[O>>2]|0)+8>>2]&127](O,t+16+4|0,t+112|0,t+144|0);l=t;return}}}function yc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0.0;T=l;l=l+144|0;R=c[d+36>>2]|0;o=+g[(+g[R+88>>2]>0.0?b+16|0:b+20|0)>>2];if(a[R+100>>0]&1){l=T;return}P=c[b+8>>2]|0;t=c[P+4>>2]|0;Q=c[P+12>>2]|0;L=c[(c[b+4>>2]|0)+684>>2]|0;N=+g[R+8>>2]-+g[Q+48>>2];q=+g[R+12>>2]-+g[Q+52>>2];O=+g[R+16>>2]-+g[Q+56>>2];E=1.0/+g[L+76>>2];D=(N*+g[Q>>2]+q*+g[Q+16>>2]+O*+g[Q+32>>2])*E/3.0;I=D<0.0?~~(1.0-D):0;M=~~((D+ +(I|0)-+(~~(D+ +(I|0))|0))*3.0);u=(D+ +(I|0)-+(~~(D+ +(I|0))|0))*3.0-+(M|0);I=~~(D+ +(I|0))-I|0;D=E*(N*+g[Q+4>>2]+q*+g[Q+20>>2]+O*+g[Q+36>>2])/3.0;F=D<0.0?~~(1.0-D):0;J=~~((D+ +(F|0)-+(~~(D+ +(F|0))|0))*3.0);n=(D+ +(F|0)-+(~~(D+ +(F|0))|0))*3.0-+(J|0);F=~~(D+ +(F|0))-F|0;O=E*(N*+g[Q+8>>2]+q*+g[Q+24>>2]+O*+g[Q+40>>2])/3.0;H=O<0.0?~~(1.0-O):0;K=~~((O+ +(H|0)-+(~~(O+ +(H|0))|0))*3.0);q=(O+ +(H|0)-+(~~(O+ +(H|0))|0))*3.0-+(K|0);H=~~(O+ +(H|0))-H|0;p=(I>>>16<<11^(I&65535)+16^(I&65535)+16<<16)+(F&65535)+((I>>>16<<11^(I&65535)+16^(I&65535)+16<<16)>>>11)|0;p=(p^F>>>16<<11^p<<16)+(H&65535)+((p^F>>>16<<11^p<<16)>>>11)|0;p=(p^H>>>16<<11^p<<16)+(t&65535)+((p^H>>>16<<11^p<<16)>>>11)|0;p=((p^t>>>16<<11^p<<16)>>>11)+(p^t>>>16<<11^p<<16)|0;p=((p<<3^p)>>>5)+(p<<3^p)<<4^((p<<3^p)>>>5)+(p<<3^p);p=(((p>>>17)+p<<25^(p>>>17)+p)>>>6)+((p>>>17)+p<<25^(p>>>17)+p)|0;r=c[L+60>>2]|0;s=c[L+68>>2]|0;d=c[s+(((p>>>0)%(r>>>0)|0)<<2)>>2]|0;c[L+96>>2]=(c[L+96>>2]|0)+1;e=(c[L+92>>2]|0)+1|0;c[L+92>>2]=e;a:do if(!d)f=9;else while(1){if(((((c[d+272>>2]|0)==(p|0)?(c[d+256>>2]|0)==(I|0):0)?(c[d+260>>2]|0)==(F|0):0)?(c[d+264>>2]|0)==(H|0):0)?(c[d+276>>2]|0)==(t|0):0)break a;d=c[d+280>>2]|0;e=e+1|0;c[L+92>>2]=e;if(!d){f=9;break}}while(0);b:do if((f|0)==9){f=c[L+84>>2]|0;c[L+84>>2]=f+1;if((f|0)>=(c[L+88>>2]|0)){c[5790]=(c[5790]|0)+1;c:do if((r|0)>0){d=0;e=s;while(1){f=e+(d<<2)|0;e=c[f>>2]|0;c[f>>2]=0;if(e|0)do{f=e;e=c[e+280>>2]|0;aH(f);}while((e|0)!=0);d=d+1|0;if((d|0)==(r|0))break c;e=c[L+68>>2]|0;}}while(0);g[L+76>>2]=.25;c[L+80>>2]=0;c[L+84>>2]=0;c[L+92>>2]=1;c[L+96>>2]=1;}d=Er(284)|0;Ik(d|0,0,284)|0;c[d+280>>2]=c[s+(((p>>>0)%(r>>>0)|0)<<2)>>2];c[s+(((p>>>0)%(r>>>0)|0)<<2)>>2]=d;c[d+276>>2]=t;c[d+272>>2]=p;c[d+256>>2]=I;c[d+260>>2]=F;c[d+264>>2]=H;k=+g[L+76>>2];r=T+72+4|0;s=T+72+24|0;t=T+72+44|0;e=0;h=k;while(1){j=k*+(H|0)*3.0+ +(e|0)*h;f=0;while(1){i=k*+(F|0)*3.0+ +(f|0)*h;g[T>>2]=+(I|0)*3.0*k+h*0.0;g[T+4>>2]=i;g[T+8>>2]=j;g[T+12>>2]=0.0;p=c[d+276>>2]|0;c[T+72>>2]=1065353216;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[T+72+20>>2]=1065353216;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[T+72+40>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;if((c[p+4>>2]|0)<20)h=+Vc(T,p,T+72|0,T+16|0);else h=0.0;g[d+(f<<4)+(e<<2)>>2]=h;g[T>>2]=+(I|0)*3.0*k+ +g[L+76>>2];g[T+4>>2]=i;g[T+8>>2]=j;g[T+12>>2]=0.0;p=c[d+276>>2]|0;c[T+72>>2]=1065353216;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[T+72+20>>2]=1065353216;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[T+72+40>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;if((c[p+4>>2]|0)<20)h=+Vc(T,p,T+72|0,T+16|0);else h=0.0;g[d+64+(f<<4)+(e<<2)>>2]=h;g[T>>2]=+(I|0)*3.0*k+ +g[L+76>>2]*2.0;g[T+4>>2]=i;g[T+8>>2]=j;g[T+12>>2]=0.0;p=c[d+276>>2]|0;c[T+72>>2]=1065353216;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[T+72+20>>2]=1065353216;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[T+72+40>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;if((c[p+4>>2]|0)<20)h=+Vc(T,p,T+72|0,T+16|0);else h=0.0;g[d+128+(f<<4)+(e<<2)>>2]=h;g[T>>2]=+(I|0)*3.0*k+ +g[L+76>>2]*3.0;g[T+4>>2]=i;g[T+8>>2]=j;g[T+12>>2]=0.0;p=c[d+276>>2]|0;c[T+72>>2]=1065353216;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[T+72+20>>2]=1065353216;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[T+72+40>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;if((c[p+4>>2]|0)<20)h=+Vc(T,p,T+72|0,T+16|0);else h=0.0;g[d+192+(f<<4)+(e<<2)>>2]=h;f=f+1|0;if((f|0)==4)break;h=+g[L+76>>2];}e=e+1|0;if((e|0)==4)break b;h=+g[L+76>>2];}}while(0);c[d+268>>2]=c[L+80>>2];h=+g[d+(M<<6)+(J<<4)+(K<<2)>>2];C=+g[d+(M+1<<6)+(J<<4)+(K<<2)>>2];A=+g[d+(M+1<<6)+(J+1<<4)+(K<<2)>>2];B=+g[d+(M<<6)+(J+1<<4)+(K<<2)>>2];O=+g[d+(M<<6)+(J<<4)+(K+1<<2)>>2];N=+g[d+(M+1<<6)+(J<<4)+(K+1<<2)>>2];D=+g[d+(M+1<<6)+(J+1<<4)+(K+1<<2)>>2];E=+g[d+(M<<6)+(J+1<<4)+(K+1<<2)>>2];i=C-h+n*(A-B-(C-h))+q*(N-O+n*(D-E-(N-O))-(C-h+n*(A-B-(C-h))));j=B-h+u*(A-C-(B-h))+q*(E-O+u*(D-N-(E-O))-(B-h+u*(A-C-(B-h))));k=O-h+u*(N-C-(O-h))+n*(E-B+u*(D-A-(E-B))-(O-h+u*(N-C-(O-h))));m=1.0/+G(+(i*i+j*j+k*k));h=h+u*(C-h)+n*(B+u*(A-B)-(h+u*(C-h)));h=h+q*(O+u*(N-O)+n*(E+u*(D-E)-(O+u*(N-O)))-h)-o;if(!(h<0.0)){l=T;return}s=c[P+8>>2]|0;N=+g[Q>>2]*i*m+ +g[Q+4>>2]*j*m+ +g[Q+8>>2]*k*m;O=i*m*+g[Q+16>>2]+j*m*+g[Q+20>>2]+k*m*+g[Q+24>>2];E=i*m*+g[Q+32>>2]+j*m*+g[Q+36>>2]+k*m*+g[Q+40>>2];D=-(N*(+g[R+8>>2]-h*N)+O*(+g[R+12>>2]-h*O)+E*(+g[R+16>>2]-h*E));z=+g[R+88>>2];d=c[b+12>>2]|0;if(!d)q=0.0;else q=+g[d+344>>2];if(!(z+q>0.0)){l=T;return}if(!d)d=c[(c[b+8>>2]|0)+8>>2]|0;if((a[22656]|0)==0?iy(22656)|0:0){e=23164;f=e+48|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(f|0))}e=c[b+12>>2]|0;m=+g[R+8>>2];B=m-+g[d+52>>2];n=+g[R+12>>2];C=n-+g[d+56>>2];o=+g[R+16>>2];A=o-+g[d+60>>2];if(!e){Q=c[b+4>>2]|0;h=0.0;i=0.0;j=0.0;d=Q;k=+g[Q+452>>2];}else{j=+g[e+332>>2];i=+g[e+336>>2];y=+g[e+328>>2];d=c[b+4>>2]|0;k=+g[d+452>>2];h=(j*A-i*C+ +g[e+312>>2])*k;i=(+g[e+316>>2]+(i*B-A*y))*k;j=(C*y-j*B+ +g[e+320>>2])*k;}W=m-+g[R+24>>2]-h;V=n-+g[R+28>>2]-i;U=o-+g[R+32>>2]-j;i=+g[d+316>>2]*+g[(c[(c[b+8>>2]|0)+8>>2]|0)+224>>2];y=1.0/k;Eh(T+72|0,q,(e|0)==0?23164:e+264|0,B,C,A);j=z+ +g[T+72>>2];k=+g[T+72+4>>2]+0.0;m=+g[T+72+8>>2]+0.0;n=+g[T+72+16>>2]+0.0;o=z+ +g[T+72+20>>2];q=+g[T+72+24>>2]+0.0;u=+g[T+72+32>>2]+0.0;v=+g[T+72+36>>2]+0.0;w=z+ +g[T+72+40>>2];x=1.0/(m*(n*v-o*u)+(j*(o*w-q*v)+k*(q*u-n*w)));r=c[b+4>>2]|0;h=z*+g[r+452>>2];i=(U-E*(W*N+V*O+U*E))*(U-E*(W*N+V*O+U*E))+((W-N*(W*N+V*O+U*E))*(W-N*(W*N+V*O+U*E))+(V-O*(W*N+V*O+U*E))*(V-O*(W*N+V*O+U*E)))<i*(W*N+V*O+U*E)*(W*N+V*O+U*E)*i?0.0:1.0-i;p=c[(c[(c[(c[b+8>>2]|0)+8>>2]|0)+204>>2]&3|0?r+328|0:r+324|0)>>2]|0;d=c[r+812>>2]|0;if((d|0)==(c[r+816>>2]|0)?(S=d|0?d<<1:1,(d|0)<(S|0)):0){if(!S)f=0;else{c[6436]=(c[6436]|0)+1;d=ic((S*104|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}f=d;d=c[r+812>>2]|0;}if((d|0)>0){e=0;do{Q=f+(e*104|0)|0;P=c[r+820>>2]|0;M=P+(e*104|0)|0;c[Q>>2]=c[M>>2];c[Q+4>>2]=c[M+4>>2];c[Q+8>>2]=c[M+8>>2];c[Q+12>>2]=c[M+12>>2];c[Q+16>>2]=c[M+16>>2];c[Q+20>>2]=c[M+20>>2];c[Q+24>>2]=c[M+24>>2];Q=f+(e*104|0)+28|0;M=P+(e*104|0)+28|0;c[Q>>2]=c[M>>2];c[Q+4>>2]=c[M+4>>2];c[Q+8>>2]=c[M+8>>2];c[Q+12>>2]=c[M+12>>2];Q=P+(e*104|0)+44|0;M=f+(e*104|0)+44|0;c[M>>2]=c[Q>>2];c[M+4>>2]=c[Q+4>>2];c[M+8>>2]=c[Q+8>>2];c[M+12>>2]=c[Q+12>>2];M=P+(e*104|0)+60|0;Q=f+(e*104|0)+60|0;c[Q>>2]=c[M>>2];c[Q+4>>2]=c[M+4>>2];c[Q+8>>2]=c[M+8>>2];c[Q+12>>2]=c[M+12>>2];Q=f+(e*104|0)+76|0;P=P+(e*104|0)+76|0;c[Q>>2]=c[P>>2];c[Q+4>>2]=c[P+4>>2];c[Q+8>>2]=c[P+8>>2];c[Q+12>>2]=c[P+12>>2];c[Q+16>>2]=c[P+16>>2];c[Q+20>>2]=c[P+20>>2];c[Q+24>>2]=c[P+24>>2];e=e+1|0;}while((e|0)!=(d|0))}d=c[r+820>>2]|0;if(d|0){if(a[r+824>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[r+820>>2]=0;}a[r+824>>0]=1;c[r+820>>2]=f;c[r+816>>2]=S;d=c[r+812>>2]|0;}Q=c[r+820>>2]|0;c[Q+(d*104|0)>>2]=s;g[Q+(d*104|0)+4>>2]=N;g[Q+(d*104|0)+8>>2]=O;g[Q+(d*104|0)+12>>2]=E;g[Q+(d*104|0)+16>>2]=0.0;g[Q+(d*104|0)+20>>2]=D;c[Q+(d*104|0)+24>>2]=R;g[Q+(d*104|0)+28>>2]=(n*v-o*u)*x*0.0+(y*(o*w-q*v)*x+(q*u-n*w)*x*0.0);g[Q+(d*104|0)+32>>2]=(k*u-j*v)*x*0.0+(y*(m*v-k*w)*x+(j*w-m*u)*x*0.0);g[Q+(d*104|0)+36>>2]=(j*o-k*n)*x*0.0+(y*(k*q-m*o)*x+(m*n-j*q)*x*0.0);g[Q+(d*104|0)+40>>2]=0.0;g[Q+(d*104|0)+44>>2]=(n*v-o*u)*x*0.0+((o*w-q*v)*x*0.0+y*(q*u-n*w)*x);g[Q+(d*104|0)+48>>2]=(k*u-j*v)*x*0.0+((m*v-k*w)*x*0.0+y*(j*w-m*u)*x);g[Q+(d*104|0)+52>>2]=(j*o-k*n)*x*0.0+((k*q-m*o)*x*0.0+y*(m*n-j*q)*x);g[Q+(d*104|0)+56>>2]=0.0;g[Q+(d*104|0)+60>>2]=y*(n*v-o*u)*x+((o*w-q*v)*x*0.0+(q*u-n*w)*x*0.0);g[Q+(d*104|0)+64>>2]=y*(k*u-j*v)*x+((m*v-k*w)*x*0.0+(j*w-m*u)*x*0.0);g[Q+(d*104|0)+68>>2]=y*(j*o-k*n)*x+((k*q-m*o)*x*0.0+(m*n-j*q)*x*0.0);g[Q+(d*104|0)+72>>2]=0.0;S=Q+(d*104|0)+76|0;g[S>>2]=B;g[Q+(d*104|0)+80>>2]=C;g[Q+(d*104|0)+84>>2]=A;g[Q+(d*104|0)+88>>2]=0.0;g[S+16>>2]=h;g[S+20>>2]=i;c[S+24>>2]=p;c[r+812>>2]=(c[r+812>>2]|0)+1;d=c[b+12>>2]|0;if(!d){l=T;return}if(c[d+204>>2]&3|0){l=T;return}if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=1;g[d+220>>2]=0.0;l=T;return}function zc(b,d){b=b|0;d=+d;var e=0,f=0.0,h=0,i=0,j=0,k=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0;s=l;l=l+96|0;p=c[b+136>>2]|0;if(!p){l=s;return}e=c[b+8>>2]|0;if((e|0)<(p|0)){if((c[b+12>>2]|0)<(p|0)){c[6436]=(c[6436]|0)+1;h=ic((p<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}i=c[b+8>>2]|0;if((i|0)>0){h=0;do{n=j+(h<<4)|0;t=(c[b+16>>2]|0)+(h<<4)|0;c[n>>2]=c[t>>2];c[n+4>>2]=c[t+4>>2];c[n+8>>2]=c[t+8>>2];c[n+12>>2]=c[t+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[b+16>>2]|0;if(h|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=j;c[b+12>>2]=p;h=b+16|0;}else h=b+16|0;do{t=(c[h>>2]|0)+(e<<4)|0;c[t>>2]=c[s+48>>2];c[t+4>>2]=c[s+48+4>>2];c[t+8>>2]=c[s+48+8>>2];c[t+12>>2]=c[s+48+12>>2];e=e+1|0;}while((e|0)!=(p|0))}c[b+8>>2]=p;e=c[b+28>>2]|0;if((e|0)<(p|0)){if((c[b+32>>2]|0)<(p|0)){c[6436]=(c[6436]|0)+1;h=ic((p<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}i=c[b+28>>2]|0;if((i|0)>0){h=0;do{t=j+(h<<4)|0;n=(c[b+36>>2]|0)+(h<<4)|0;c[t>>2]=c[n>>2];c[t+4>>2]=c[n+4>>2];c[t+8>>2]=c[n+8>>2];c[t+12>>2]=c[n+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[b+36>>2]|0;if(h|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=j;c[b+32>>2]=p;h=b+36|0;}else h=b+36|0;do{t=(c[h>>2]|0)+(e<<4)|0;c[t>>2]=c[s+48>>2];c[t+4>>2]=c[s+48+4>>2];c[t+8>>2]=c[s+48+8>>2];c[t+12>>2]=c[s+48+12>>2];e=e+1|0;}while((e|0)!=(p|0))}c[b+28>>2]=p;n=c[b+48>>2]|0;if((n|0)<(p|0)){if((c[b+52>>2]|0)<(p|0)){c[6436]=(c[6436]|0)+1;e=ic((p<<2|3)+16|0)|0;if(!e)j=0;else{c[(e+4+15&-16)+-4>>2]=e;j=e+4+15&-16;}h=c[b+48>>2]|0;i=c[b+56>>2]|0;if((h|0)<=0)if(!i)e=b+60|0;else o=39;else{e=0;do{c[j+(e<<2)>>2]=c[i+(e<<2)>>2];e=e+1|0;}while((e|0)!=(h|0));o=39;}if((o|0)==39)if(!(a[b+60>>0]|0))e=b+60|0;else{c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);e=b+60|0;}a[e>>0]=1;c[b+56>>2]=j;c[b+52>>2]=p;h=p<<2;e=j;}else{h=p<<2;e=c[b+56>>2]|0;}Ik(e+(n<<2)|0,0,h-(n<<2)|0)|0;}c[b+48>>2]=p;n=c[b+68>>2]|0;if((n|0)<(p|0)){if((c[b+72>>2]|0)<(p|0)){c[6436]=(c[6436]|0)+1;e=ic((p<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}i=c[b+68>>2]|0;j=c[b+76>>2]|0;if((i|0)<=0)if(!j)h=b+80|0;else o=52;else{h=0;do{c[e+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(i|0));o=52;}if((o|0)==52)if(!(a[b+80>>0]|0))h=b+80|0;else{c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);h=b+80|0;}a[h>>0]=1;c[b+76>>2]=e;c[b+72>>2]=p;h=p<<2;}else{h=p<<2;e=c[b+76>>2]|0;}Ik(e+(n<<2)|0,0,h-(n<<2)|0)|0;}c[b+68>>2]=p;e=c[b+136>>2]|0;if((e|0)<=0){l=s;return}i=c[b+76>>2]|0;j=c[b+56>>2]|0;h=0;do{g[i+(h<<2)>>2]=0.0;g[j+(h<<2)>>2]=0.0;h=h+1|0;}while((h|0)!=(e|0));j=0;do{h=c[b+144>>2]|0;i=c[h+(j*284|0)+88>>2]|0;if(i){n=h+(j*284|0)+92|0;c[s+48>>2]=c[n>>2];c[s+48+4>>2]=c[n+4>>2];c[s+48+8>>2]=c[n+8>>2];c[s+48+12>>2]=c[n+12>>2];n=h+(j*284|0)+108|0;c[s+48+16>>2]=c[n>>2];c[s+48+16+4>>2]=c[n+4>>2];c[s+48+16+8>>2]=c[n+8>>2];c[s+48+16+12>>2]=c[n+12>>2];n=h+(j*284|0)+124|0;c[s+48+32>>2]=c[n>>2];c[s+48+32+4>>2]=c[n+4>>2];c[s+48+32+8>>2]=c[n+8>>2];c[s+48+32+12>>2]=c[n+12>>2];n=c[b+120>>2]|0;e=c[s+48+16+(n<<2)>>2]|0;y=c[s+48+32+(n<<2)>>2]|0;o=c[b+36>>2]|0;c[o+(j<<4)>>2]=c[s+48+(n<<2)>>2];c[o+(j<<4)+4>>2]=e;c[o+(j<<4)+8>>2]=y;g[o+(j<<4)+12>>2]=0.0;o=c[b+36>>2]|0;y=o+(j<<4)|0;z=+g[y>>2];e=h+(j*284|0)|0;f=+g[e>>2];n=o+(j<<4)+4|0;x=+g[n>>2];t=h+(j*284|0)+4|0;k=+g[t>>2];o=o+(j<<4)+8|0;u=+g[o>>2];p=h+(j*284|0)+8|0;w=+g[p>>2];m=z-f*(z*f+x*k+u*w);v=x-k*(z*f+x*k+u*w);w=u-w*(z*f+x*k+u*w);u=1.0/+G(+(m*m+v*v+w*w));g[y>>2]=m*u;g[n>>2]=v*u;g[o>>2]=w*u;k=+g[t>>2];x=+g[p>>2];f=+g[e>>2];e=c[b+16>>2]|0;g[e+(j<<4)>>2]=k*w*u-x*v*u;g[e+(j<<4)+4>>2]=x*m*u-w*u*f;g[e+(j<<4)+8>>2]=v*u*f-k*m*u;g[e+(j<<4)+12>>2]=0.0;e=c[b+16>>2]|0;p=e+(j<<4)|0;u=+g[p>>2];t=e+(j<<4)+4|0;m=+g[t>>2];e=e+(j<<4)+8|0;k=+g[e>>2];f=1.0/+G(+(u*u+m*m+k*k));g[p>>2]=u*f;g[t>>2]=m*f;g[e>>2]=k*f;e=c[b+116>>2]|0;t=c[b+36>>2]|0;f=+g[t+(j<<4)>>2];k=+g[t+(j<<4)+4>>2];m=+g[t+(j<<4)+8>>2];if(f*f+k*k+m*m>1.100000023841858)f=0.0;else{C=+g[h+(j*284|0)+16>>2];H=C-+g[e+52>>2];E=+g[h+(j*284|0)+20>>2];J=E-+g[e+56>>2];K=+g[h+(j*284|0)+24>>2];M=K-+g[e+60>>2];C=C-+g[i+52>>2];E=E-+g[i+56>>2];K=K-+g[i+60>>2];F=+g[e+332>>2];N=+g[e+336>>2];I=+g[e+328>>2];B=+g[i+332>>2];L=+g[i+336>>2];D=+g[i+328>>2];A=(m*J-k*M)*+g[e+4>>2]+(f*M-m*H)*+g[e+20>>2]+(k*H-f*J)*+g[e+36>>2];u=(m*J-k*M)*+g[e+8>>2]+(f*M-m*H)*+g[e+24>>2]+(k*H-f*J)*+g[e+40>>2];v=(m*J-k*M)*+g[e+12>>2]+(f*M-m*H)*+g[e+28>>2]+(k*H-f*J)*+g[e+44>>2];w=(E*-m-K*-k)*+g[i+4>>2]+(K*-f-C*-m)*+g[i+20>>2]+(C*-k-E*-f)*+g[i+36>>2];x=(E*-m-K*-k)*+g[i+8>>2]+(K*-f-C*-m)*+g[i+24>>2]+(C*-k-E*-f)*+g[i+40>>2];z=(E*-m-K*-k)*+g[i+12>>2]+(K*-f-C*-m)*+g[i+28>>2]+(C*-k-E*-f)*+g[i+44>>2];f=(f*(M*F-J*N+ +g[e+312>>2]-(K*B-E*L+ +g[i+312>>2]))+k*(+g[e+316>>2]+(H*N-M*I)-(+g[i+316>>2]+(C*L-K*D)))+m*(J*I-H*F+ +g[e+320>>2]-(E*D-C*B+ +g[i+320>>2])))*-.20000000298023224*(1.0/(+g[i+344>>2]+(+g[e+344>>2]+(A*A*+g[e+396>>2]+u*u*+g[e+400>>2]+v*v*+g[e+404>>2]))+(w*w*+g[i+396>>2]+x*x*+g[i+400>>2]+z*z*+g[i+404>>2])));}g[(c[b+76>>2]|0)+(j<<2)>>2]=f;e=c[b+136>>2]|0;}j=j+1|0;}while((j|0)<(e|0));if((e|0)<=0){l=s;return}i=0;o=0;h=c[b+144>>2]|0;while(1){e=c[h+(o*284|0)+88>>2]|0;if(e){f=+g[h+(o*284|0)+252>>2];if(f!=0.0){f=f*d;p=h;}else{N=+g[h+(o*284|0)+256>>2];N=N==0.0?0.0:N;p=c[b+116>>2]|0;y=c[b+16>>2]|0;H=+g[h+(o*284|0)+16>>2];E=+g[h+(o*284|0)+20>>2];A=+g[h+(o*284|0)+24>>2];x=+g[y+(o<<4)>>2];D=+g[y+(o<<4)+4>>2];f=+g[y+(o<<4)+8>>2];P=H-+g[p+52>>2];Q=E-+g[p+56>>2];k=A-+g[p+60>>2];m=+g[p+264>>2]*(Q*f-k*D)+ +g[p+280>>2]*(k*x-P*f)+(P*D-Q*x)*+g[p+296>>2];R=(Q*f-k*D)*+g[p+268>>2]+(k*x-P*f)*+g[p+284>>2]+(P*D-Q*x)*+g[p+300>>2];O=(Q*f-k*D)*+g[p+272>>2]+(k*x-P*f)*+g[p+288>>2]+(P*D-Q*x)*+g[p+304>>2];L=H-+g[e+52>>2];J=E-+g[e+56>>2];C=A-+g[e+60>>2];w=(D*L-x*J)*+g[e+296>>2]+(+g[e+264>>2]*(f*J-D*C)+ +g[e+280>>2]*(x*C-f*L));u=(f*J-D*C)*+g[e+268>>2]+(x*C-f*L)*+g[e+284>>2]+(D*L-x*J)*+g[e+300>>2];v=(f*J-D*C)*+g[e+272>>2]+(x*C-f*L)*+g[e+288>>2]+(D*L-x*J)*+g[e+304>>2];H=H-+g[p+52>>2];E=E-+g[p+56>>2];A=A-+g[p+60>>2];I=+g[p+332>>2];z=+g[p+336>>2];F=+g[p+328>>2];M=+g[e+332>>2];B=+g[e+336>>2];K=+g[e+328>>2];f=-(1.0/(+g[p+344>>2]+(f*(Q*m-P*R)+(x*(k*R-Q*O)+D*(P*O-k*m)))+(+g[e+344>>2]+(f*(J*w-L*u)+(x*(C*u-J*v)+D*(L*v-C*w)))))*((A*I-E*z+ +g[p+312>>2]-(C*M-J*B+ +g[e+312>>2]))*x+(+g[p+316>>2]+(H*z-A*F)-(+g[e+316>>2]+(L*B-C*K)))*D+(E*F-H*I+ +g[p+320>>2]-(J*K-L*M+ +g[e+320>>2]))*f));f=N<f?N:f;f=f<-N?-N:f;p=c[b+144>>2]|0;}n=c[b+56>>2]|0;y=n+(o<<2)|0;g[y>>2]=0.0;e=p+(o*284|0)+280|0;g[e>>2]=1.0;m=+g[h+(o*284|0)+276>>2]*d*+g[h+(o*284|0)+228>>2];g[y>>2]=f;f=f*.5;k=+g[(c[b+76>>2]|0)+(o<<2)>>2];if(f*f+k*k>m*m){R=m/+G(+(f*f+k*k));g[e>>2]=R*+g[e>>2];e=1;}else e=i;}else{n=c[b+56>>2]|0;g[n+(o<<2)>>2]=0.0;g[h+(o*284|0)+280>>2]=1.0;e=i;p=h;}o=o+1|0;j=c[b+136>>2]|0;if((o|0)>=(j|0))break;else{i=e;h=p;}}if(e){if((j|0)<=0){l=s;return}h=c[b+76>>2]|0;e=0;do{i=h+(e<<2)|0;if(+g[i>>2]!=0.0?(q=p+(e*284|0)+280|0,r=+g[q>>2],r<1.0):0){y=n+(e<<2)|0;g[y>>2]=r*+g[y>>2];g[i>>2]=+g[q>>2]*+g[i>>2];}e=e+1|0;}while((e|0)!=(j|0))}if((j|0)<=0){l=s;return}e=0;h=n;while(1){i=c[b+116>>2]|0;j=p+(e*284|0)+16|0;k=+g[j>>2]-+g[i+52>>2];n=p+(e*284|0)+20|0;m=+g[n>>2]-+g[i+56>>2];o=p+(e*284|0)+24|0;d=+g[o>>2]-+g[i+60>>2];g[s+48>>2]=k;g[s+48+4>>2]=m;g[s+48+8>>2]=d;g[s+48+12>>2]=0.0;f=+g[h+(e<<2)>>2];if(f!=0.0){y=c[b+16>>2]|0;Q=f*+g[y+(e<<4)+4>>2];R=f*+g[y+(e<<4)+8>>2];g[s+32>>2]=+g[y+(e<<4)>>2]*f;g[s+32+4>>2]=Q;g[s+32+8>>2]=R;g[s+32+12>>2]=0.0;Wk(i,s+32|0,s+48|0);}f=+g[(c[b+76>>2]|0)+(e<<2)>>2];if(f!=0.0){y=c[(c[b+144>>2]|0)+(e*284|0)+88>>2]|0;Q=+g[n>>2]-+g[y+56>>2];P=+g[o>>2]-+g[y+60>>2];g[s+32>>2]=+g[j>>2]-+g[y+52>>2];g[s+32+4>>2]=Q;g[s+32+8>>2]=P;g[s+32+12>>2]=0.0;t=c[b+36>>2]|0;P=+g[t+(e<<4)>>2]*f;Q=f*+g[t+(e<<4)+4>>2];R=f*+g[t+(e<<4)+8>>2];g[s+16>>2]=P;g[s+16+4>>2]=Q;g[s+16+8>>2]=R;g[s+16+12>>2]=0.0;t=c[b+116>>2]|0;q=c[b+124>>2]|0;L=+g[t+4+(q<<2)>>2];M=+g[t+20+(q<<2)>>2];N=+g[t+36+(q<<2)>>2];O=(L*k+M*m+N*d)*(1.0-+g[p+(e*284|0)+244>>2]);g[s+48>>2]=k-L*O;g[s+48+4>>2]=m-M*O;g[s+48+8>>2]=d-N*O;Wk(t,s+16|0,s+48|0);g[s>>2]=-P;g[s+4>>2]=-Q;g[s+8>>2]=-R;g[s+12>>2]=0.0;Wk(y,s,s+32|0);}e=e+1|0;if((e|0)>=(c[b+136>>2]|0))break;p=c[b+144>>2]|0;h=c[b+56>>2]|0;}l=s;return}function Ac(b,e,f,h,i,j,k){b=b|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0;v=l;l=l+9824|0;p=j;q=p+36|0;do{c[p>>2]=0;p=p+4|0;}while((p|0)<(q|0));c[v+9680>>2]=b;c[v+9680+4>>2]=f;x=+g[h>>2];K=+g[e>>2];y=+g[h+16>>2];A=+g[e+16>>2];z=+g[h+32>>2];L=+g[e+32>>2];B=+g[e+4>>2];M=+g[e+20>>2];C=+g[e+36>>2];s=+g[e+8>>2];n=+g[e+24>>2];w=+g[e+40>>2];J=+g[h+4>>2];I=+g[h+20>>2];H=+g[h+36>>2];F=+g[h+8>>2];E=+g[h+24>>2];D=+g[h+40>>2];g[v+9680+8>>2]=x*K+y*A+z*L;g[v+9680+12>>2]=x*B+y*M+z*C;g[v+9680+16>>2]=x*s+y*n+z*w;g[v+9680+20>>2]=0.0;g[v+9680+24>>2]=K*J+A*I+L*H;g[v+9680+28>>2]=B*J+M*I+C*H;g[v+9680+32>>2]=s*J+n*I+w*H;g[v+9680+36>>2]=0.0;g[v+9680+40>>2]=K*F+A*E+L*D;g[v+9680+44>>2]=B*F+M*E+C*D;g[v+9680+48>>2]=s*F+n*E+w*D;g[v+9680+52>>2]=0.0;w=+g[h+48>>2]-+g[e+48>>2];n=+g[h+52>>2]-+g[e+52>>2];s=+g[h+56>>2]-+g[e+56>>2];C=+g[e>>2];M=+g[h>>2];B=+g[e+16>>2];L=+g[h+16>>2];A=+g[e+32>>2];K=+g[h+32>>2];z=+g[e+4>>2];y=+g[e+20>>2];x=+g[e+36>>2];m=+g[e+8>>2];o=+g[e+24>>2];r=+g[e+40>>2];g[v+9680+56>>2]=C*M+B*L+A*K;g[v+9680+60>>2]=C*J+B*I+A*H;g[v+9680+64>>2]=C*F+B*E+A*D;g[v+9680+68>>2]=0.0;g[v+9680+72>>2]=M*z+L*y+K*x;g[v+9680+76>>2]=J*z+I*y+H*x;g[v+9680+80>>2]=F*z+E*y+D*x;g[v+9680+84>>2]=0.0;g[v+9680+88>>2]=M*m+L*o+K*r;g[v+9680+92>>2]=J*m+I*o+H*r;g[v+9680+96>>2]=F*m+E*o+D*r;g[v+9680+100>>2]=0.0;g[v+9680+104>>2]=w*C+n*B+s*A;g[v+9680+108>>2]=w*z+n*y+s*x;g[v+9680+112>>2]=w*m+n*o+s*r;g[v+9680+116>>2]=0.0;c[v+9680+120>>2]=k?81:80;c[v+9680+124>>2]=k?0:0;c[v+9296+364>>2]=0;c[v+9296+128>>2]=0;c[v+9296+128+4>>2]=0;c[v+9296+128+8>>2]=0;c[v+9296+128+12>>2]=0;c[v+9296+376>>2]=2;c[v+9296+368>>2]=0;g[v+9296+144>>2]=0.0;r=-+g[i+4>>2];s=-+g[i+8>>2];g[v+9808>>2]=-+g[i>>2];g[v+9808+4>>2]=r;g[v+9808+8>>2]=s;g[v+9808+12>>2]=0.0;switch(Bc(v+9296|0,v+9680|0,v+9808|0)|0){case 1:{c[v+9280>>2]=0;c[v+9280+4>>2]=0;c[v+9280+8>>2]=0;c[v+9280+12>>2]=0;c[v>>2]=9;c[v+9276>>2]=0;c[v+40>>2]=0;c[v+40+4>>2]=0;c[v+40+8>>2]=0;c[v+40+12>>2]=0;c[v+40+16>>2]=0;b=0;do{f=128-b+-1|0;c[v+2108+(f*56|0)+44>>2]=0;h=c[v+9288>>2]|0;c[v+2108+(f*56|0)+48>>2]=h;if(h|0)c[h+44>>2]=v+2108+(f*56|0);c[v+9288>>2]=v+2108+(f*56|0);c[v+9292>>2]=(c[v+9292>>2]|0)+1;b=b+1|0;}while((b|0)!=128);o=+g[i>>2];r=+g[i+4>>2];n=+g[i+8>>2];t=c[v+9296+372>>2]|0;do if((c[t+32>>2]|0)>>>0>1?id(v+9296|0)|0:0){b=c[v+9280>>2]|0;if(b|0){p=c[v+9284>>2]|0;q=c[v+9292>>2]|0;do{f=b+44|0;k=b+48|0;h=c[k>>2]|0;if(h|0)c[h+44>>2]=c[f>>2];f=c[f>>2]|0;if(f|0)c[f+48>>2]=c[k>>2];if((c[v+9280>>2]|0)==(b|0))c[v+9280>>2]=c[k>>2];p=p+-1|0;c[b+44>>2]=0;c[k>>2]=c[v+9288>>2];f=c[v+9288>>2]|0;if(f|0)c[f+44>>2]=b;c[v+9288>>2]=b;q=q+1|0;b=c[v+9280>>2]|0;}while((b|0)!=0);c[v+9284>>2]=p;c[v+9292>>2]=q;}c[v>>2]=0;c[v+9276>>2]=0;b=c[t>>2]|0;f=c[t+12>>2]|0;M=+g[f+16>>2];D=+g[b+16>>2]-M;F=+g[f+20>>2];H=+g[b+20>>2]-F;J=+g[f+24>>2];K=+g[b+24>>2]-J;f=c[t+4>>2]|0;I=+g[f+16>>2]-M;L=+g[f+20>>2]-F;E=+g[f+24>>2]-J;h=c[t+8>>2]|0;M=+g[h+16>>2]-M;F=+g[h+20>>2]-F;J=+g[h+24>>2]-J;if(D*L*J+(H*E*M+K*I*F-D*E*F-H*I*J)-K*L*M<0.0){c[t>>2]=f;c[t+4>>2]=b;k=c[t+16>>2]|0;c[t+16>>2]=c[t+20>>2];c[t+20>>2]=k;k=f;}else{k=b;b=f;}k=cf(v,k,b,h,1)|0;p=cf(v,c[t+4>>2]|0,c[t>>2]|0,c[t+12>>2]|0,1)|0;q=cf(v,c[t+8>>2]|0,c[t+4>>2]|0,c[t+12>>2]|0,1)|0;i=cf(v,c[t>>2]|0,c[t+8>>2]|0,c[t+12>>2]|0,1)|0;if((c[v+9284>>2]|0)==4){f=c[v+9280>>2]|0;m=+g[f+16>>2];b=c[f+48>>2]|0;if(!b)b=f;else{n=m*m;while(1){m=+g[b+16>>2];h=m*m<n;f=h?b:f;b=c[b+48>>2]|0;if(!b)break;else n=h?m*m:n;}b=f;m=+g[f+16>>2];}o=+g[b>>2];s=+g[b+4>>2];r=+g[b+8>>2];n=+g[b+12>>2];N=c[b+20>>2]|0;f=c[b+24>>2]|0;h=c[b+28>>2]|0;a[k+52>>0]=0;c[k+32>>2]=p;a[p+52>>0]=0;c[p+32>>2]=k;a[k+53>>0]=0;c[k+36>>2]=q;a[q+52>>0]=1;c[q+32>>2]=k;a[k+54>>0]=0;c[k+40>>2]=i;a[i+52>>0]=2;c[i+32>>2]=k;a[p+53>>0]=2;c[p+36>>2]=i;a[i+54>>0]=1;c[i+40>>2]=p;a[p+54>>0]=1;c[p+40>>2]=q;a[q+53>>0]=2;c[q+36>>2]=p;a[q+54>>0]=1;c[q+40>>2]=i;a[i+53>>0]=2;c[i+36>>2]=q;c[v>>2]=0;i=b;t=0;p=N;q=f;k=h;while(1){f=c[v+9276>>2]|0;if(f>>>0>=64){u=44;break}c[v+9808>>2]=0;c[v+9808+4>>2]=0;c[v+9808+8>>2]=0;c[v+9276>>2]=f+1;t=t+1|0;a[i+55>>0]=t;h=i+4|0;N=i+8|0;nh(v+9296|0,+g[i>>2],+g[h>>2],+g[N>>2],v+60+(f<<5)|0);if(+g[i>>2]*+g[v+60+(f<<5)+16>>2]+ +g[h>>2]*+g[v+60+(f<<5)+20>>2]+ +g[N>>2]*+g[v+60+(f<<5)+24>>2]-+g[i+16>>2]>9.999999747378752e-05)b=0;else{b=7;u=43;break}do{h=Zg(v,t,v+60+(f<<5)|0,c[i+32+(b<<2)>>2]|0,d[i+52+b>>0]|0,v+9808|0)|0;b=b+1|0;}while(h&b>>>0<3);if(!(h&(c[v+9808+8>>2]|0)>>>0>2)){b=4;u=43;break}h=c[v+9808>>2]|0;b=c[v+9808+4>>2]|0;a[h+53>>0]=2;c[h+36>>2]=b;a[b+54>>0]=1;c[b+40>>2]=h;b=i+44|0;h=i+48|0;f=c[h>>2]|0;if(f|0)c[f+44>>2]=c[b>>2];b=c[b>>2]|0;if(b|0)c[b+48>>2]=c[h>>2];if((c[v+9280>>2]|0)==(i|0))c[v+9280>>2]=c[h>>2];c[v+9284>>2]=(c[v+9284>>2]|0)+-1;c[i+44>>2]=0;c[h>>2]=c[v+9288>>2];b=c[v+9288>>2]|0;if(b|0)c[b+44>>2]=i;c[v+9288>>2]=i;c[v+9292>>2]=(c[v+9292>>2]|0)+1;f=c[v+9280>>2]|0;m=+g[f+16>>2];b=c[f+48>>2]|0;if(b){n=m*m;h=f;while(1){m=+g[b+16>>2];f=m*m<n;h=f?b:h;b=c[b+48>>2]|0;if(!b)break;else n=f?m*m:n;}f=h;m=+g[h+16>>2];}o=+g[f>>2];s=+g[f+4>>2];r=+g[f+8>>2];n=+g[f+12>>2];b=c[f+20>>2]|0;h=c[f+24>>2]|0;k=c[f+28>>2]|0;if(t>>>0>=255){f=k;break}else{i=f;p=b;q=h;}}if((u|0)==43){c[v>>2]=b;b=p;h=q;f=k;}else if((u|0)==44){c[v>>2]=6;b=p;h=q;f=k;}I=o*m;F=s*m;K=r*m;g[v+40>>2]=o;g[v+44>>2]=s;g[v+48>>2]=r;g[v+52>>2]=n;g[v+56>>2]=m;c[v+36>>2]=3;c[v+4>>2]=b;c[v+8>>2]=h;c[v+12>>2]=f;N=h;L=+g[N+16>>2]-I;D=+g[N+20>>2]-F;C=+g[N+24>>2]-K;t=f;J=+g[t+16>>2]-I;E=+g[t+20>>2]-F;H=+g[t+24>>2]-K;L=+G(+((L*E-D*J)*(L*E-D*J)+((D*H-C*E)*(D*H-C*E)+(C*J-L*H)*(C*J-L*H))));g[v+20>>2]=L;J=+g[t+16>>2]-I;C=+g[t+20>>2]-F;t=b;E=+g[t+16>>2]-I;D=+g[t+20>>2]-F;M=+g[t+24>>2]-K;M=+G(+((J*D-C*E)*(J*D-C*E)+((C*M-H*D)*(C*M-H*D)+(H*E-J*M)*(H*E-J*M))));g[v+24>>2]=M;J=+g[t+16>>2]-I;E=+g[t+20>>2]-F;H=+g[t+24>>2]-K;I=+g[N+16>>2]-I;F=+g[N+20>>2]-F;K=+g[N+24>>2]-K;K=+G(+((J*F-E*I)*(J*F-E*I)+((E*K-H*F)*(E*K-H*F)+(H*I-J*K)*(H*I-J*K))));g[v+20>>2]=L/(K+(L+M));g[v+24>>2]=M/(K+(L+M));g[v+28>>2]=K/(K+(L+M));if((c[v>>2]|0)!=9)if(!(c[v+36>>2]|0)){o=0.0;n=0.0;m=0.0;break}else{k=v+36|0;u=53;break}c[j>>2]=3;N=0;l=v;return N|0}else u=47;}else u=47;while(0);if((u|0)==47){c[v>>2]=8;g[v+40>>2]=o;g[v+44>>2]=r;g[v+48>>2]=n;g[v+52>>2]=0.0;m=+G(+(o*o+r*r+n*n));if(m>0.0){g[v+40>>2]=1.0/m*o;g[v+44>>2]=1.0/m*r;g[v+48>>2]=1.0/m*n;}else{c[v+40>>2]=1065353216;c[v+44>>2]=0;c[v+48>>2]=0;}g[v+52>>2]=0.0;g[v+56>>2]=0.0;c[v+36>>2]=1;c[v+4>>2]=c[t>>2];g[v+20>>2]=1.0;k=v+36|0;u=53;}if((u|0)==53){h=0;m=0.0;n=0.0;o=0.0;do{b=c[v+9680+120>>2]|0;N=c[v+9680+124>>2]|0;f=(c[v+9680>>2]|0)+(N>>1)|0;if(N&1)b=c[(c[f>>2]|0)+b>>2]|0;Vb[b&127](v+9808|0,f,c[v+4+(h<<2)>>2]|0);M=+g[v+20+(h<<2)>>2];m=m+ +g[v+9808>>2]*M;n=n+M*+g[v+9808+4>>2];o=o+M*+g[v+9808+8>>2];h=h+1|0;}while(h>>>0<(c[k>>2]|0)>>>0)}c[j>>2]=1;M=m*+g[e+16>>2]+n*+g[e+20>>2]+o*+g[e+24>>2]+ +g[e+52>>2];J=m*+g[e+32>>2]+n*+g[e+36>>2]+o*+g[e+40>>2]+ +g[e+56>>2];g[j+4>>2]=m*+g[e>>2]+n*+g[e+4>>2]+o*+g[e+8>>2]+ +g[e+48>>2];g[j+8>>2]=M;g[j+12>>2]=J;g[j+16>>2]=0.0;J=+g[v+40>>2];M=+g[v+56>>2];K=+g[v+44>>2];L=+g[v+48>>2];D=m-J*M;E=n-M*K;F=o-M*L;H=D*+g[e+16>>2]+E*+g[e+20>>2]+F*+g[e+24>>2]+ +g[e+52>>2];I=D*+g[e+32>>2]+E*+g[e+36>>2]+F*+g[e+40>>2]+ +g[e+56>>2];g[j+20>>2]=D*+g[e>>2]+E*+g[e+4>>2]+F*+g[e+8>>2]+ +g[e+48>>2];g[j+24>>2]=H;g[j+28>>2]=I;g[j+32>>2]=0.0;g[j+36>>2]=-J;g[j+40>>2]=-K;g[j+44>>2]=-L;g[j+48>>2]=0.0;g[j+52>>2]=-M;N=1;l=v;return N|0}case 2:{c[j>>2]=2;N=0;l=v;return N|0}default:{N=0;l=v;return N|0}}return 0}function Bc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,k=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0.0,F=0.0;C=l;l=l+176|0;c[a+348>>2]=a+220;c[a+352>>2]=a+252;c[a+356>>2]=a+284;c[a+360>>2]=a+316;c[a+364>>2]=4;c[a+368>>2]=0;c[a+376>>2]=0;y=c[b+4>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=y;c[a+8>>2]=c[b+8>>2];c[a+8+4>>2]=c[b+8+4>>2];c[a+8+8>>2]=c[b+8+8>>2];c[a+8+12>>2]=c[b+8+12>>2];c[a+24>>2]=c[b+24>>2];c[a+24+4>>2]=c[b+24+4>>2];c[a+24+8>>2]=c[b+24+8>>2];c[a+24+12>>2]=c[b+24+12>>2];c[a+40>>2]=c[b+40>>2];c[a+40+4>>2]=c[b+40+4>>2];c[a+40+8>>2]=c[b+40+8>>2];c[a+40+12>>2]=c[b+40+12>>2];c[a+56>>2]=c[b+56>>2];c[a+56+4>>2]=c[b+56+4>>2];c[a+56+8>>2]=c[b+56+8>>2];c[a+56+12>>2]=c[b+56+12>>2];c[a+72>>2]=c[b+72>>2];c[a+72+4>>2]=c[b+72+4>>2];c[a+72+8>>2]=c[b+72+8>>2];c[a+72+12>>2]=c[b+72+12>>2];c[a+88>>2]=c[b+88>>2];c[a+88+4>>2]=c[b+88+4>>2];c[a+88+8>>2]=c[b+88+8>>2];c[a+88+12>>2]=c[b+88+12>>2];c[a+104>>2]=c[b+104>>2];c[a+104+4>>2]=c[b+104+4>>2];c[a+104+8>>2]=c[b+104+8>>2];c[a+104+12>>2]=c[b+104+12>>2];y=c[b+124>>2]|0;c[a+120>>2]=c[b+120>>2];c[a+124>>2]=y;g[a+144>>2]=0.0;c[a+180>>2]=0;c[a+128>>2]=c[d>>2];c[a+128+4>>2]=c[d+4>>2];c[a+128+8>>2]=c[d+8>>2];c[a+128+12>>2]=c[d+12>>2];e=+g[a+128>>2];f=+g[a+132>>2];h=+g[a+136>>2];if(e*e+f*f+h*h>0.0){g[a+164>>2]=0.0;c[a+364>>2]=3;c[a+148>>2]=a+316;c[a+180>>2]=1;nh(a,-e,-f,-h,a+316|0);b=a+148|0;d=a+164|0;}else{g[a+164>>2]=0.0;c[a+364>>2]=3;c[a+148>>2]=a+316;c[a+180>>2]=1;nh(a,1.0,0.0,0.0,a+316|0);b=a+148|0;d=a+164|0;}g[d>>2]=1.0;y=(c[b>>2]|0)+16|0;c[a+128>>2]=c[y>>2];c[a+128+4>>2]=c[y+4>>2];c[a+128+8>>2]=c[y+8>>2];c[a+128+12>>2]=c[y+12>>2];c[C+24+48>>2]=c[y>>2];c[C+24+48+4>>2]=c[y+4>>2];c[C+24+48+8>>2]=c[y+8>>2];c[C+24+48+12>>2]=c[y+12>>2];c[C+24+32>>2]=c[y>>2];c[C+24+32+4>>2]=c[y+4>>2];c[C+24+32+8>>2]=c[y+8>>2];c[C+24+32+12>>2]=c[y+12>>2];c[C+24+16>>2]=c[y>>2];c[C+24+16+4>>2]=c[y+4>>2];c[C+24+16+8>>2]=c[y+8>>2];c[C+24+16+12>>2]=c[y+12>>2];c[C+24>>2]=c[y>>2];c[C+24+4>>2]=c[y+4>>2];c[C+24+8>>2]=c[y+8>>2];c[C+24+12>>2]=c[y+12>>2];y=0;z=0.0;e=e*e+f*f+h*h;x=0;a:do{w=c[a+368>>2]|0;f=+g[a+128>>2];h=+g[a+132>>2];i=+g[a+136>>2];o=+G(+(f*f+h*h+i*i));if(o<9.999999747378752e-05){B=6;break}g[a+148+(w*36|0)+16+(c[a+148+(w*36|0)+32>>2]<<2)>>2]=0.0;b=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=b;c[a+148+(w*36|0)+(c[a+148+(w*36|0)+32>>2]<<2)>>2]=c[a+348+(b<<2)>>2];b=c[a+148+(w*36|0)+32>>2]|0;c[a+148+(w*36|0)+32>>2]=b+1;nh(a,-f,-h,-i,c[a+148+(w*36|0)+(b<<2)>>2]|0);b=c[a+148+(w*36|0)+32>>2]|0;d=c[a+148+(w*36|0)+(b+-1<<2)>>2]|0;f=+g[d+16>>2];h=+g[d+20>>2];i=+g[d+24>>2];r=f-+g[C+24>>2];s=h-+g[C+24+4>>2];v=i-+g[C+24+8>>2];if(r*r+s*s+v*v<9.999999747378752e-05){B=9;break}r=f-+g[C+24+16>>2];s=h-+g[C+24+20>>2];v=i-+g[C+24+24>>2];if(r*r+s*s+v*v<9.999999747378752e-05){B=9;break}r=f-+g[C+24+32>>2];s=h-+g[C+24+36>>2];v=i-+g[C+24+40>>2];if(r*r+s*s+v*v<9.999999747378752e-05){B=9;break}r=f-+g[C+24+48>>2];s=h-+g[C+24+52>>2];v=i-+g[C+24+56>>2];if(r*r+s*s+v*v<9.999999747378752e-05){B=9;break}x=x+1&3;u=C+24+(x<<4)|0;c[u>>2]=c[d+16>>2];c[u+4>>2]=c[d+16+4>>2];c[u+8>>2]=c[d+16+8>>2];c[u+12>>2]=c[d+16+12>>2];v=(+g[a+128>>2]*f+ +g[a+132>>2]*h+ +g[a+136>>2]*i)/o;z=v>z?v:z;if(o-z-o*9.999999747378752e-05<=0.0){B=10;break}c[C>>2]=0;b:do switch(b|0){case 2:{u=c[a+148+(w*36|0)>>2]|0;t=c[a+148+(w*36|0)+4>>2]|0;e=+g[t+16>>2];f=+g[u+16>>2];h=+g[t+20>>2];i=+g[u+20>>2];o=+g[t+24>>2];p=+g[u+24>>2];if(!((e-f)*(e-f)+(h-i)*(h-i)+(o-p)*(o-p)>0.0)){B=38;break a}q=-(f*(e-f)+i*(h-i)+p*(o-p))/((e-f)*(e-f)+(h-i)*(h-i)+(o-p)*(o-p));if(q>=1.0){g[C+8>>2]=0.0;g[C+8+4>>2]=1.0;c[C>>2]=2;e=e*e+h*h+o*o;break b}if(!(q<=0.0)){g[C+8+4>>2]=q;g[C+8>>2]=1.0-q;c[C>>2]=3;e=((e-f)*q+f)*((e-f)*q+f)+((h-i)*q+i)*((h-i)*q+i)+((o-p)*q+p)*((o-p)*q+p);break b}else{g[C+8>>2]=1.0;g[C+8+4>>2]=0.0;c[C>>2]=1;e=f*f+i*i+p*p;break b}}case 3:{e=+ze((c[a+148+(w*36|0)>>2]|0)+16|0,(c[a+148+(w*36|0)+4>>2]|0)+16|0,(c[a+148+(w*36|0)+8>>2]|0)+16|0,C+8|0,C);break}case 4:{m=c[a+148+(w*36|0)>>2]|0;n=c[a+148+(w*36|0)+4>>2]|0;t=c[a+148+(w*36|0)+8>>2]|0;u=c[a+148+(w*36|0)+12>>2]|0;c[C+152>>2]=m+16;c[C+152+4>>2]=n+16;c[C+152+8>>2]=t+16;c[C+152+12>>2]=u+16;i=+g[m+16>>2];o=+g[u+16>>2];f=+g[m+20>>2];p=+g[u+20>>2];h=+g[m+24>>2];q=+g[u+24>>2];g[C+104>>2]=i-o;g[C+104+4>>2]=f-p;g[C+104+8>>2]=h-q;g[C+104+12>>2]=0.0;e=+g[n+16>>2];E=+g[n+20>>2];s=+g[n+24>>2];g[C+104+16>>2]=e-o;g[C+104+20>>2]=E-p;g[C+104+24>>2]=s-q;g[C+104+28>>2]=0.0;r=+g[t+16>>2];F=+g[t+20>>2];D=+g[t+24>>2];g[C+104+32>>2]=r-o;g[C+104+36>>2]=F-p;g[C+104+40>>2]=D-q;g[C+104+44>>2]=0.0;v=(f-p)*(s-q)*(r-o)+(h-q)*(e-o)*(F-p)-(F-p)*(s-q)*(i-o)-(f-p)*(e-o)*(D-q)+(D-q)*(i-o)*(E-p)-(r-o)*(h-q)*(E-p);if(v!=v|0.0!=0.0|v==0.0|!(v*(h*((e-r)*(f-E)-(E-F)*(i-e))+(i*((E-F)*(h-s)-(s-D)*(f-E))+f*((s-D)*(i-e)-(e-r)*(h-s))))<=0.0))e=-1.0;else{c[C+92>>2]=0;c[C+92+4>>2]=0;c[C+92+8>>2]=0;c[C+88>>2]=0;e=-1.0;k=0;s=f-p;r=h-q;h=i-o;f=q;d=c[C>>2]|0;while(1){b=c[5100+(k<<2)>>2]|0;D=+g[C+104+(b<<4)+8>>2];E=+g[C+104+(b<<4)+4>>2];F=+g[C+104+(b<<4)>>2];if(v*((s*D-r*E)*o+p*(r*F-D*h)+(E*h-s*F)*f)>0.0?(A=+ze(c[C+152+(k<<2)>>2]|0,c[C+152+(b<<2)>>2]|0,u+16|0,C+92|0,C+88|0),e<0.0|A<e):0){d=c[C+88>>2]|0;c[C+8+(k<<2)>>2]=c[C+92>>2];c[C+8+(b<<2)>>2]=c[C+92+4>>2];g[C+8+(c[5100+(b<<2)>>2]<<2)>>2]=0.0;c[C+8+12>>2]=c[C+92+8>>2];e=A;d=(d&2|0?1<<b:0)+(d<<1&8)+(d&1|0?1<<k:0)|0;}b=k+1|0;if((b|0)==3)break;k=b;s=+g[C+104+(b<<4)+4>>2];r=+g[C+104+(b<<4)+8>>2];h=+g[C+104+(b<<4)>>2];o=+g[u+16>>2];p=+g[u+20>>2];f=+g[u+24>>2];}c[C>>2]=d;if(e<0.0){c[C>>2]=15;i=+g[t+20>>2];F=+g[n+24>>2];E=+g[u+16>>2];f=+g[t+24>>2];D=+g[n+16>>2];o=+g[u+20>>2];h=+g[t+16>>2];s=+g[u+24>>2];q=+g[n+20>>2];g[C+8>>2]=(i*F*E+f*D*o-o*F*h-i*D*s+s*h*q-E*f*q)/v;e=+g[m+20>>2];p=+g[m+24>>2];r=+g[m+16>>2];g[C+8+4>>2]=(e*f*E+p*h*o-o*f*r-e*h*s+s*r*i-E*p*i)/v;g[C+8+8>>2]=(q*p*E+F*r*o-o*p*D-q*r*s+s*D*e-E*F*e)/v;g[C+8+12>>2]=1.0-((i*F*E+f*D*o-o*F*h-i*D*s+s*h*q-E*f*q)/v+(e*f*E+p*h*o-o*f*r-e*h*s+s*r*i-E*p*i)/v+(q*p*E+F*r*o-o*p*D-q*r*s+s*D*e-E*F*e)/v);e=0.0;}}break}default:{}}while(0);if(!(e>=0.0)){B=38;break}c[a+148+((1-w|0)*36|0)+32>>2]=0;c[a+128>>2]=0;c[a+128+4>>2]=0;c[a+128+8>>2]=0;c[a+128+12>>2]=0;c[a+368>>2]=1-w;d=c[a+148+(w*36|0)+32>>2]|0;k=c[C>>2]|0;if(d|0){b=0;do{m=a+148+(w*36|0)+(b<<2)|0;n=c[m>>2]|0;if(!(k&1<<b)){u=c[a+364>>2]|0;c[a+364>>2]=u+1;c[a+348+(u<<2)>>2]=n;}else{c[a+148+((1-w|0)*36|0)+(c[a+148+((1-w|0)*36|0)+32>>2]<<2)>>2]=n;t=c[C+8+(b<<2)>>2]|0;u=c[a+148+((1-w|0)*36|0)+32>>2]|0;c[a+148+((1-w|0)*36|0)+32>>2]=u+1;c[a+148+((1-w|0)*36|0)+16+(u<<2)>>2]=t;u=c[m>>2]|0;D=(c[j>>2]=t,+g[j>>2]);E=D*+g[u+20>>2];F=D*+g[u+24>>2];g[a+128>>2]=+g[u+16>>2]*D+ +g[a+128>>2];g[a+132>>2]=E+ +g[a+132>>2];g[a+136>>2]=F+ +g[a+136>>2];}b=b+1|0;}while((b|0)!=(d|0))}if((k|0)==15)c[a+376>>2]=1;y=y+1|0;if(y>>>0>=128){B=40;break}b=c[a+376>>2]|0;}while(!(b|0));if((B|0)==6){c[a+376>>2]=1;B=41;}else if((B|0)==9){y=c[a+368>>2]|0;x=(c[a+148+(y*36|0)+32>>2]|0)+-1|0;c[a+148+(y*36|0)+32>>2]=x;x=c[a+148+(y*36|0)+(x<<2)>>2]|0;y=c[a+364>>2]|0;c[a+364>>2]=y+1;c[a+348+(y<<2)>>2]=x;B=41;}else if((B|0)==10){y=c[a+368>>2]|0;x=(c[a+148+(y*36|0)+32>>2]|0)+-1|0;c[a+148+(y*36|0)+32>>2]=x;x=c[a+148+(y*36|0)+(x<<2)>>2]|0;y=c[a+364>>2]|0;c[a+364>>2]=y+1;c[a+348+(y<<2)>>2]=x;B=41;}else if((B|0)==38){b=c[a+368>>2]|0;y=(c[a+148+(b*36|0)+32>>2]|0)+-1|0;c[a+148+(b*36|0)+32>>2]=y;y=c[a+148+(b*36|0)+(y<<2)>>2]|0;b=c[a+364>>2]|0;c[a+364>>2]=b+1;c[a+348+(b<<2)>>2]=y;b=c[a+376>>2]|0;}else if((B|0)==40){c[a+376>>2]=2;c[a+372>>2]=a+148+((c[a+368>>2]|0)*36|0);a=2;l=C;return a|0}if((B|0)==41)b=c[a+376>>2]|0;c[a+372>>2]=a+148+((c[a+368>>2]|0)*36|0);switch(b|0){case 0:{E=+g[a+128>>2];F=+g[a+132>>2];e=+g[a+136>>2];e=+G(+(E*E+F*F+e*e));break}case 1:{e=0.0;break}default:{a=b;l=C;return a|0}}g[a+144>>2]=e;a=b;l=C;return a|0}function Cc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;x=l;l=l+16|0;aj(12186);j=c[b+212>>2]|0;i=c[b+180>>2]|0;if((i|0)<(j|0)){if((c[b+184>>2]|0)<(j|0)){if(!j){e=0;h=i;}else{c[6436]=(c[6436]|0)+1;e=ic((j<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}h=c[b+180>>2]|0;}if((h|0)>0){f=0;do{c[e+(f<<2)>>2]=c[(c[b+188>>2]|0)+(f<<2)>>2];f=f+1|0;}while((f|0)!=(h|0))}f=c[b+188>>2]|0;if(f|0){if(a[b+192>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+188>>2]=0;}a[b+192>>0]=1;c[b+188>>2]=e;c[b+184>>2]=j;f=b+188|0;}else f=b+188|0;e=i;do{c[(c[f>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=(j|0))}else f=b+188|0;c[b+180>>2]=j;e=0;while(1){if((e|0)>=(pb[c[(c[b>>2]|0)+104>>2]&127](b)|0))break;c[(c[f>>2]|0)+(e<<2)>>2]=c[(c[b+220>>2]|0)+(e<<2)>>2];e=e+1|0;}e=c[b+180>>2]|0;if((e|0)>1)vi(b+176|0,0,e+-1|0);if(!(pb[c[(c[b>>2]|0)+104>>2]&127](b)|0))e=0;else e=c[f>>2]|0;h=c[b+196>>2]|0;t=c[b+180>>2]|0;u=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;c[h+4>>2]=d;c[h+12>>2]=e;c[h+16>>2]=t;c[h+20>>2]=u;e=c[h+32>>2]|0;if((e|0)<0){if((c[h+36>>2]|0)<0){f=c[h+40>>2]|0;if(f|0){if(a[h+44>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[h+40>>2]=0;}a[h+44>>0]=1;c[h+40>>2]=0;c[h+36>>2]=0;}do{c[(c[h+40>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[h+32>>2]=0;e=c[h+52>>2]|0;if((e|0)<0){if((c[h+56>>2]|0)<0){f=c[h+60>>2]|0;if(f|0){if(a[h+64>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[h+60>>2]=0;}a[h+64>>0]=1;c[h+60>>2]=0;c[h+56>>2]=0;}do{c[(c[h+60>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[h+52>>2]=0;e=c[h+72>>2]|0;if((e|0)<0){if((c[h+76>>2]|0)<0){f=c[h+80>>2]|0;if(f|0){if(a[h+84>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[h+80>>2]=0;}a[h+84>>0]=1;c[h+80>>2]=0;c[h+76>>2]=0;}do{c[(c[h+80>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[h+72>>2]=0;u=c[b+200>>2]|0;e=c[(c[u>>2]|0)+8>>2]|0;s=c[b+8>>2]|0;t=c[b+24>>2]|0;t=pb[c[(c[t>>2]|0)+36>>2]&127](t)|0;Vb[e&127](u,s,t);t=c[b+204>>2]|0;s=c[b+24>>2]|0;u=c[b+196>>2]|0;aj(13998);e=c[t+28>>2]|0;if((e|0)<0){if((c[t+32>>2]|0)<0){f=c[t+36>>2]|0;if(f|0){if(a[t+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[t+36>>2]=0;}a[t+40>>0]=1;c[t+36>>2]=0;c[t+32>>2]=0;}do{c[(c[t+36>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[t+28>>2]=0;j=c[t+8>>2]|0;if((j|0)>0){k=c[t+16>>2]|0;i=0;do{m=k+(i<<3)|0;e=c[m>>2]|0;if((e|0)==(i|0))e=i;else{f=e;h=m;do{e=k+(f<<3)|0;c[h>>2]=c[e>>2];e=c[e>>2]|0;h=k+(e<<3)|0;f=c[h>>2]|0;}while((e|0)!=(f|0))}c[m>>2]=e;i=i+1|0;}while((i|0)!=(j|0));if((j|0)>1){ej(t+4|0,0,j+-1|0);j=c[t+8>>2]|0;}if((j|0)>0){o=c[t+16>>2]|0;e=0;while(1){p=c[o+(e<<3)>>2]|0;m=e;while(1){k=m+1|0;if((k|0)>=(j|0)){n=0;break}if((c[o+(k<<3)>>2]|0)==(p|0))m=k;else{n=1;break}}a:do if((e|0)<=(m|0)){q=c[b+16>>2]|0;f=1;i=e;while(1){h=c[q+(c[o+(i<<3)+4>>2]<<2)>>2]|0;if((c[h+208>>2]|0)==(p|0)){h=c[h+216>>2]|0;f=(h|0)!=4&(f&(h|0)!=1);}if((i|0)<(m|0))i=i+1|0;else break}if(f)while(1){f=c[q+(c[o+(e<<3)+4>>2]<<2)>>2]|0;if((c[f+208>>2]|0)==(p|0)?(c[f+216>>2]&-2|0)!=4:0)c[f+216>>2]=2;if((e|0)>=(m|0))break a;e=e+1|0;}else while(1){f=c[q+(c[o+(e<<3)+4>>2]<<2)>>2]|0;if((c[f+208>>2]|0)==(p|0)?(c[f+216>>2]|0)==2:0){c[f+216>>2]=3;g[f+220>>2]=0.0;}if((e|0)>=(m|0))break a;e=e+1|0;}}while(0);if(n)e=k;else break}}}j=pb[c[(c[s>>2]|0)+36>>2]&127](s)|0;if((j|0)>0){i=0;do{k=Kb[c[(c[s>>2]|0)+40>>2]&31](s,i)|0;f=c[k+740>>2]|0;h=c[k+744>>2]|0;if((f|0)!=0?(c[f+216>>2]|0)!=2:0)e=93;else e=91;if(((e|0)==91?(e=0,h|0):0)?(c[h+216>>2]|0)!=2:0)e=93;if((e|0)==93){e=c[f+204>>2]|0;if((e&2|0?((e&4|0)==0?(c[f+216>>2]|0)!=2:0):0)?(c[h+204>>2]&3|0)==0:0){if((c[h+216>>2]&-2|0)!=4)c[h+216>>2]=1;g[h+220>>2]=0.0;}q=c[h+204>>2]|0;if(q&2|0?((q&4|e&3|0)==0?(c[h+216>>2]|0)!=2:0):0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0;}if(a[t+64>>0]|0?zb[c[(c[s>>2]|0)+28>>2]&63](s,f,h)|0:0){f=c[t+28>>2]|0;if((f|0)==(c[t+32>>2]|0)?(r=f|0?f<<1:1,(f|0)<(r|0)):0){if(!r)e=0;else{c[6436]=(c[6436]|0)+1;e=ic((r<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;}f=c[t+28>>2]|0;}if((f|0)>0){h=0;do{c[e+(h<<2)>>2]=c[(c[t+36>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(f|0))}h=c[t+36>>2]|0;if(h){if(a[t+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);f=c[t+28>>2]|0;}c[t+36>>2]=0;}a[t+40>>0]=1;c[t+36>>2]=e;c[t+32>>2]=r;e=f;}else e=f;c[(c[t+36>>2]|0)+(e<<2)>>2]=k;c[t+28>>2]=e+1;}}i=i+1|0;}while((i|0)<(j|0))}e=c[2388]|0;r=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=r;do if(!r){if(c[e+4>>2]|0){Za(x|0,0)|0;r=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[x+4>>2]|0)-(c[r+4>>2]|0)+(((c[x>>2]|0)-(c[r>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2388]|0;}c[2388]=c[e+20>>2];}while(0);r=c[t+8>>2]|0;aj(14026);if(a[t+64>>0]|0){q=c[t+28>>2]|0;if((q|0)>1)si(t+24|0,0,q+-1|0);if((r|0)>0){e=0;n=1;p=0;while(1){f=c[t+16>>2]|0;o=c[f+(e<<3)>>2]|0;b:do if((e|0)<(r|0)){i=1;j=c[t+48>>2]|0;h=c[t+52>>2]|0;while(1){m=c[(c[b+16>>2]|0)+(c[f+(e<<3)+4>>2]<<2)>>2]|0;do if((j|0)==(h|0)){k=h|0?h<<1:1;if((h|0)>=(k|0)){f=h;break}if(!k)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((k<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[t+48>>2]|0;}if((h|0)>0){j=0;do{c[f+(j<<2)>>2]=c[(c[t+56>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(h|0))}j=c[t+56>>2]|0;if(j){if(a[t+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);h=c[t+48>>2]|0;}c[t+56>>2]=0;}a[t+60>>0]=1;c[t+56>>2]=f;c[t+52>>2]=k;f=h;h=k;}else f=j;while(0);c[(c[t+56>>2]|0)+(f<<2)>>2]=m;j=f+1|0;c[t+48>>2]=j;s=c[m+216>>2]|0;i=i&((s|0)==2|(s|0)==5);e=e+1|0;if((e|0)>=(r|0)){k=e;f=i;break b}f=c[t+16>>2]|0;if((c[f+(e<<3)>>2]|0)!=(o|0)){k=e;f=i;break}}}else{k=e;f=1;}while(0);if((p|0)<(q|0)?(v=c[t+36>>2]|0,w=v+(p<<2)|0,s=c[w>>2]|0,m=c[s+740>>2]|0,(c[((c[m+208>>2]|0)>-1?m:c[s+744>>2]|0)+208>>2]|0)==(o|0)):0){e=p;do{e=e+1|0;if((e|0)>=(q|0))break;s=c[v+(e<<2)>>2]|0;n=c[s+740>>2]|0;}while((o|0)==(c[((c[n+208>>2]|0)>-1?n:c[s+744>>2]|0)+208>>2]|0));h=w;i=e-p|0;j=e;}else{h=0;i=0;j=n;}if(!f)Bb[c[(c[u>>2]|0)+8>>2]&7](u,c[t+56>>2]|0,c[t+48>>2]|0,h,i,o);p=(i|0)==0?p:j;e=c[t+48>>2]|0;if((e|0)<0){if((c[t+52>>2]|0)<0){f=c[t+56>>2]|0;if(f|0){if(a[t+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[t+56>>2]=0;}a[t+60>>0]=1;c[t+56>>2]=0;c[t+52>>2]=0;}do{c[(c[t+56>>2]|0)+(e<<2)>>2]=0;e=e+1|0;}while((e|0)!=0)}c[t+48>>2]=0;if((k|0)>=(r|0))break;else{e=k;n=j;}}}}else{v=pb[c[(c[s>>2]|0)+44>>2]&127](s)|0;w=pb[c[(c[s>>2]|0)+36>>2]&127](s)|0;Bb[c[(c[u>>2]|0)+8>>2]&7](u,c[b+16>>2]|0,c[b+8>>2]|0,v,w,-1);}e=c[2388]|0;w=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=w;do if(!w){if(c[e+4>>2]|0){Za(x|0,0)|0;w=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[x+4>>2]|0)-(c[w+4>>2]|0)+(((c[x>>2]|0)-(c[w>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2388]|0;}c[2388]=c[e+20>>2];}while(0);Rg(c[b+196>>2]|0);e=c[b+200>>2]|0;Vb[c[(c[e>>2]|0)+16>>2]&127](e,d,c[b+72>>2]|0);e=c[2388]|0;d=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=d;if(d|0){l=x;return}do if(c[e+4>>2]|0){Za(x|0,0)|0;d=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[x+4>>2]|0)-(c[d+4>>2]|0)+(((c[x>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2388]|0;break}else{l=x;return}}while(0);c[2388]=c[e+20>>2];l=x;return}function Dc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,H=0,I=0;r=l;l=l+144|0;m=c[b+48>>2]|0;j=c[b+52>>2]|0;if((j|0?(k=c[j+20>>2]|0,k|0):0)?(pb[c[(c[k>>2]|0)+48>>2]&127](k)|0)&1|0:0){c[r+48>>2]=1065353216;c[r+48+4>>2]=1065353216;c[r+48+8>>2]=0;g[r+48+12>>2]=0.0;k=c[b+8>>2]|0;p=c[(c[b+52>>2]|0)+20>>2]|0;o=c[(c[p>>2]|0)+8>>2]|0;x=+g[d>>2];D=+g[d+4>>2];A=+g[d+8>>2];v=+g[k+20>>2];s=+g[k+24>>2];w=+g[k+28>>2];t=+g[k+36>>2];z=+g[k+40>>2];B=+g[k+44>>2];u=+g[k+52>>2];C=+g[k+56>>2];y=+g[k+60>>2];g[r+24>>2]=x*+g[k+4>>2]+D*+g[k+8>>2]+A*+g[k+12>>2]+u;g[r+24+4>>2]=x*v+D*s+A*w+C;g[r+24+8>>2]=x*t+D*z+A*B+y;g[r+24+12>>2]=0.0;A=+g[d+16>>2];D=+g[d+20>>2];x=+g[d+24>>2];g[r>>2]=A*+g[k+4>>2]+D*+g[k+8>>2]+x*+g[k+12>>2]+u;g[r+4>>2]=A*v+D*s+x*w+C;g[r+8>>2]=A*t+D*z+x*B+y;g[r+12>>2]=0.0;Zb[o&127](p,r+24|0,r,r+48|0);p=c[(c[b+52>>2]|0)+20>>2]|0;o=c[(c[p>>2]|0)+8>>2]|0;y=+g[d+16>>2];B=+g[d+20>>2];x=+g[d+24>>2];z=+g[k+20>>2];D=+g[k+24>>2];t=+g[k+28>>2];A=+g[k+36>>2];C=+g[k+40>>2];w=+g[k+44>>2];s=+g[k+52>>2];v=+g[k+56>>2];u=+g[k+60>>2];g[r+24>>2]=y*+g[k+4>>2]+B*+g[k+8>>2]+x*+g[k+12>>2]+s;g[r+24+4>>2]=y*z+B*D+x*t+v;g[r+24+8>>2]=y*A+B*C+x*w+u;g[r+24+12>>2]=0.0;x=+g[d+32>>2];B=+g[d+36>>2];y=+g[d+40>>2];g[r>>2]=x*+g[k+4>>2]+B*+g[k+8>>2]+y*+g[k+12>>2]+s;g[r+4>>2]=x*z+B*D+y*t+v;g[r+8>>2]=x*A+B*C+y*w+u;g[r+12>>2]=0.0;Zb[o&127](p,r+24|0,r,r+48|0);p=c[(c[b+52>>2]|0)+20>>2]|0;o=c[(c[p>>2]|0)+8>>2]|0;u=+g[d+32>>2];w=+g[d+36>>2];y=+g[d+40>>2];C=+g[k+20>>2];B=+g[k+24>>2];A=+g[k+28>>2];x=+g[k+36>>2];v=+g[k+40>>2];t=+g[k+44>>2];D=+g[k+52>>2];z=+g[k+56>>2];s=+g[k+60>>2];g[r+24>>2]=u*+g[k+4>>2]+w*+g[k+8>>2]+y*+g[k+12>>2]+D;g[r+24+4>>2]=u*C+w*B+y*A+z;g[r+24+8>>2]=u*x+w*v+y*t+s;g[r+24+12>>2]=0.0;y=+g[d>>2];w=+g[d+4>>2];u=+g[d+8>>2];g[r>>2]=y*+g[k+4>>2]+w*+g[k+8>>2]+u*+g[k+12>>2]+D;g[r+4>>2]=y*C+w*B+u*A+z;g[r+8>>2]=y*x+w*v+u*t+s;g[r+12>>2]=0.0;Zb[o&127](p,r+24|0,r,r+48|0);}j=((e<<21|f)+~(f<<15)>>10^(e<<21|f)+~(f<<15))*9|0;j=(c[b+108>>2]|0)+-1&((j>>6^j)+~((j>>6^j)<<11)>>16^(j>>6^j)+~((j>>6^j)<<11));a:do if(j>>>0<(c[b+64>>2]|0)>>>0?(h=c[(c[b+72>>2]|0)+(j<<2)>>2]|0,(h|0)!=-1):0){j=c[b+132>>2]|0;while(1){if((e<<21|f|0)==(c[j+(h<<2)>>2]|0))break;h=c[(c[b+92>>2]|0)+(h<<2)>>2]|0;if((h|0)==-1)break a}j=c[b+112>>2]|0;if(j+(h<<3)|0){p=c[j+(h<<3)+4>>2]|0;q=c[b+8>>2]|0;c[p+8>>2]=c[(c[q+192>>2]|0)+8>>2];o=c[b+4>>2]|0;n=c[o+192>>2]|0;c[r+48>>2]=0;c[r+48+4>>2]=n;c[r+48+8>>2]=o;c[r+48+12>>2]=o+4;c[r+48+16>>2]=-1;c[r+48+20>>2]=-1;c[r+24>>2]=0;c[r+24+4>>2]=p;c[r+24+8>>2]=q;c[r+24+12>>2]=q+4;c[r+24+16>>2]=e;c[r+24+20>>2]=f;q=tb[c[(c[m>>2]|0)+8>>2]&31](m,r+48|0,r+24|0,0)|0;jb[c[(c[q>>2]|0)+8>>2]&31](q,r+48|0,r+24|0,c[b+52>>2]|0,c[b+44>>2]|0);lb[c[c[q>>2]>>2]&511](q);nb[c[(c[m>>2]|0)+60>>2]&127](m,q);l=r;return}}while(0);u=+g[d+16>>2];E=+g[d>>2];v=+g[d+20>>2];s=+g[d+4>>2];w=+g[d+24>>2];t=+g[d+8>>2];x=+g[d+32>>2];z=+g[d+36>>2];B=+g[d+40>>2];y=(v-s)*(B-t)-(w-t)*(z-s);A=(w-t)*(x-E)-(u-E)*(B-t);D=(u-E)*(z-s)-(v-s)*(x-E);C=1.0/+G(+(D*D+(y*y+A*A)));g[r+48>>2]=E+C*y*.05999999865889549;g[r+48+4>>2]=s+C*A*.05999999865889549;g[r+48+8>>2]=C*D*.05999999865889549+t;g[r+48+12>>2]=0.0;g[r+48+16>>2]=C*y*.05999999865889549+u;g[r+48+20>>2]=C*A*.05999999865889549+v;g[r+48+24>>2]=C*D*.05999999865889549+w;g[r+48+28>>2]=0.0;g[r+48+32>>2]=C*y*.05999999865889549+x;g[r+48+36>>2]=C*A*.05999999865889549+z;g[r+48+40>>2]=C*D*.05999999865889549+B;g[r+48+44>>2]=0.0;g[r+48+48>>2]=E-C*y*.05999999865889549;g[r+48+52>>2]=s-C*A*.05999999865889549;g[r+48+56>>2]=t-C*D*.05999999865889549;g[r+48+60>>2]=0.0;g[r+48+64>>2]=u-C*y*.05999999865889549;g[r+48+68>>2]=v-C*A*.05999999865889549;g[r+48+72>>2]=w-C*D*.05999999865889549;g[r+48+76>>2]=0.0;g[r+48+80>>2]=x-C*y*.05999999865889549;g[r+48+84>>2]=z-C*A*.05999999865889549;g[r+48+88>>2]=B-C*D*.05999999865889549;g[r+48+92>>2]=0.0;c[6436]=(c[6436]|0)+1;h=ic(131)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}Zf(h,r+48|0,6,16);p=c[b+8>>2]|0;c[h+8>>2]=c[(c[p+192>>2]|0)+8>>2];o=c[b+4>>2]|0;d=c[o+192>>2]|0;c[r+24>>2]=0;c[r+24+4>>2]=d;c[r+24+8>>2]=o;c[r+24+12>>2]=o+4;c[r+24+16>>2]=-1;c[r+24+20>>2]=-1;c[r>>2]=0;c[r+4>>2]=h;c[r+8>>2]=p;c[r+12>>2]=p+4;c[r+16>>2]=e;c[r+20>>2]=f;p=tb[c[(c[m>>2]|0)+8>>2]&31](m,r+24|0,r,0)|0;jb[c[(c[p>>2]|0)+8>>2]&31](p,r+24|0,r,c[b+52>>2]|0,c[b+44>>2]|0);lb[c[c[p>>2]>>2]&511](p);nb[c[(c[m>>2]|0)+60>>2]&127](m,p);p=((e<<21|f)+~(f<<15)>>10^(e<<21|f)+~(f<<15))*9|0;p=(p>>6^p)+~((p>>6^p)<<11)>>16^(p>>6^p)+~((p>>6^p)<<11);m=c[b+108>>2]|0;b:do if((p&m+-1)>>>0<(c[b+64>>2]|0)>>>0?(i=c[(c[b+72>>2]|0)+((p&m+-1)<<2)>>2]|0,(i|0)!=-1):0){j=c[b+132>>2]|0;while(1){if((e<<21|f|0)==(c[j+(i<<2)>>2]|0))break;i=c[(c[b+92>>2]|0)+(i<<2)>>2]|0;if((i|0)==-1){q=20;break b}}b=c[b+112>>2]|0;c[b+(i<<3)>>2]=e<<21|f;c[b+(i<<3)+4>>2]=h;}else q=20;while(0);if((q|0)==20){o=c[b+104>>2]|0;if((o|0)==(m|0)){d=m|0?m<<1:1;if((m|0)<(d|0)){if(!d){i=0;k=m;}else{c[6436]=(c[6436]|0)+1;i=ic((d<<3|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}k=c[b+104>>2]|0;}if((k|0)>0){j=0;do{I=(c[b+112>>2]|0)+(j<<3)|0;H=c[I+4>>2]|0;F=i+(j<<3)|0;c[F>>2]=c[I>>2];c[F+4>>2]=H;j=j+1|0;}while((j|0)!=(k|0))}j=c[b+112>>2]|0;if(j|0){if(a[b+116>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[b+112>>2]=0;}a[b+116>>0]=1;c[b+112>>2]=i;c[b+108>>2]=d;i=c[b+104>>2]|0;}else i=m;}else i=o;I=c[b+112>>2]|0;c[I+(i<<3)>>2]=e<<21|f;c[I+(i<<3)+4>>2]=h;c[b+104>>2]=(c[b+104>>2]|0)+1;h=c[b+124>>2]|0;if((h|0)==(c[b+128>>2]|0)?(n=h|0?h<<1:1,(h|0)<(n|0)):0){if(!n)k=0;else{c[6436]=(c[6436]|0)+1;h=ic((n<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}k=h;h=c[b+124>>2]|0;}j=c[b+132>>2]|0;if((h|0)<=0)if(!j)h=b+136|0;else q=43;else{i=0;do{c[k+(i<<2)>>2]=c[j+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0));q=43;}if((q|0)==43){if(a[b+136>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[b+132>>2]=0;h=b+136|0;}a[h>>0]=1;c[b+132>>2]=k;c[b+128>>2]=n;h=c[b+124>>2]|0;}c[(c[b+132>>2]|0)+(h<<2)>>2]=e<<21|f;c[b+124>>2]=(c[b+124>>2]|0)+1;n=c[b+108>>2]|0;if((m|0)<(n|0)){e=c[b+64>>2]|0;if((e|0)<(n|0)){if((c[b+68>>2]|0)<(n|0)){if(!n){h=0;j=e;}else{c[6436]=(c[6436]|0)+1;h=ic((n<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}j=c[b+64>>2]|0;}k=c[b+72>>2]|0;if((j|0)<=0)if(!k)i=b+76|0;else q=59;else{i=0;do{c[h+(i<<2)>>2]=c[k+(i<<2)>>2];i=i+1|0;}while((i|0)!=(j|0));q=59;}if((q|0)==59)if(!(a[b+76>>0]|0))i=b+76|0;else{c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=b+76|0;}a[i>>0]=1;c[b+72>>2]=h;c[b+68>>2]=n;m=b+72|0;}else{m=b+72|0;h=c[b+72>>2]|0;}Ik(h+(e<<2)|0,0,(n<<2)-(e<<2)|0)|0;c[b+64>>2]=n;d=c[b+84>>2]|0;if((d|0)<(n|0)){if((c[b+88>>2]|0)<(n|0)){if(!n){h=0;j=d;}else{c[6436]=(c[6436]|0)+1;h=ic((n<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}j=c[b+84>>2]|0;}k=c[b+92>>2]|0;if((j|0)<=0)if(!k)i=b+96|0;else q=73;else{i=0;do{c[h+(i<<2)>>2]=c[k+(i<<2)>>2];i=i+1|0;}while((i|0)!=(j|0));q=73;}if((q|0)==73)if(!(a[b+96>>0]|0))i=b+96|0;else{c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);i=b+96|0;}a[i>>0]=1;c[b+92>>2]=h;c[b+88>>2]=n;}else h=c[b+92>>2]|0;Ik(h+(d<<2)|0,0,(n<<2)-(d<<2)|0)|0;}c[b+84>>2]=n;if((n|0)>0){Ik(c[m>>2]|0,-1,n<<2|0)|0;Ik(c[b+92>>2]|0,-1,n<<2|0)|0;}if((e|0)>0){k=c[b+132>>2]|0;i=c[m>>2]|0;j=c[b+92>>2]|0;h=0;do{I=c[k+(h<<2)>>2]|0;I=(I+~(I<<15)>>10^I+~(I<<15))*9|0;I=i+((((I>>6^I)+~((I>>6^I)<<11)>>16^(I>>6^I)+~((I>>6^I)<<11))&(c[b+108>>2]|0)+-1)<<2)|0;c[j+(h<<2)>>2]=c[I>>2];c[I>>2]=h;h=h+1|0;}while((h|0)!=(e|0))}}h=p&(c[b+108>>2]|0)+-1;}else h=p&m+-1;I=(c[b+72>>2]|0)+(h<<2)|0;c[(c[b+92>>2]|0)+(o<<2)>>2]=c[I>>2];c[I>>2]=o;}l=r;return}
function Ec(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;u=l;l=l+48|0;A=1.0/+g[b+108>>2];B=1.0/+g[b+112>>2];C=1.0/+g[b+116>>2];v=+g[b+48>>2];w=A*+g[e>>2]+v;p=+g[b+52>>2];o=B*+g[e+4>>2]+p;r=+g[b+56>>2];q=C*+g[e+8>>2]+r;v=A*+g[f>>2]+v;p=B*+g[f+4>>2]+p;r=C*+g[f+8>>2]+r;C=+g[b+16>>2];w=w<C?C:w;B=+g[b+20>>2];o=o<B?B:o;A=+g[b+24>>2];q=q<A?A:q;z=+g[b+32>>2];w=z<w?z:w;y=+g[b+36>>2];o=y<o?y:o;x=+g[b+40>>2];q=x<q?x:q;v=v<C?C:v;p=p<B?B:p;r=r<A?A:r;v=z<v?z:v;p=y<p?y:p;r=x<r?x:r;m=~~(w+(w<0.0?-.5:.5))+-1|0;i=~~(v+(v<0.0?-.5:.5))+1|0;n=~~(o+(o<0.0?-.5:.5))+-1|0;j=~~(p+(p<0.0?-.5:.5))+1|0;h=~~(q+(q<0.0?-.5:.5))+-1|0;e=~~(r+(r<0.0?-.5:.5))+1|0;k=(c[b+64>>2]|0)+-1|0;f=(c[b+68>>2]|0)+-1|0;switch(c[b+104>>2]|0){case 0:{f=(e|0)<(f|0)?e:f;e=(h|0)>0?h:0;k=(j|0)<(k|0)?j:k;n=(n|0)>0?n:0;break}case 1:{f=(e|0)<(f|0)?e:f;e=(h|0)>0?h:0;k=(i|0)<(k|0)?i:k;n=(m|0)>0?m:0;break}case 2:{f=(j|0)<(f|0)?j:f;e=(n|0)>0?n:0;k=(i|0)<(k|0)?i:k;n=(m|0)>0?m:0;break}default:{e=0;n=0;}}if((e|0)>=(f|0)){l=u;return}s=(n|0)<(k|0);do if(s){j=(e&1|0)==0;m=e+1|0;r=+(e|0);h=n;while(1){do if(!(a[b+100>>0]|0)){if(a[b+101>>0]|0?(h+e&1|0)==0:0){t=16;break}if(!(j&(a[b+102>>0]|0)!=0)){o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,h,e);switch(c[b+104>>2]|0){case 0:{q=+(h|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=r-+g[b+84>>2]*.5;t=52;break}case 1:{q=o-+g[b+52>>2];p=+(h|0)-+g[b+80>>2]*.5;o=r-+g[b+84>>2]*.5;t=52;break}case 2:{q=r-+g[b+84>>2]*.5;p=+(h|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=52;break}default:{p=+g[u>>2];q=+g[u+4>>2];o=+g[u+8>>2];}}if((t|0)==52){t=0;g[u>>2]=p;g[u+4>>2]=q;g[u+8>>2]=o;g[u+12>>2]=0.0;}g[u>>2]=p*+g[b+108>>2];g[u+4>>2]=q*+g[b+112>>2];g[u+8>>2]=o*+g[b+116>>2];o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,h,m);switch(c[b+104>>2]|0){case 0:{q=+(h|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=+(m|0)-+g[b+84>>2]*.5;t=58;break}case 1:{q=o-+g[b+52>>2];p=+(h|0)-+g[b+80>>2]*.5;o=+(m|0)-+g[b+84>>2]*.5;t=58;break}case 2:{q=+(m|0)-+g[b+84>>2]*.5;p=+(h|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=58;break}default:{p=+g[u+16>>2];q=+g[u+20>>2];o=+g[u+24>>2];}}if((t|0)==58){t=0;g[u+16>>2]=p;g[u+20>>2]=q;g[u+24>>2]=o;g[u+28>>2]=0.0;}g[u+16>>2]=p*+g[b+108>>2];g[u+20>>2]=q*+g[b+112>>2];g[u+24>>2]=o*+g[b+116>>2];i=h+1|0;o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,e);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=r-+g[b+84>>2]*.5;t=64;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=r-+g[b+84>>2]*.5;t=64;break}case 2:{q=r-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=64;break}default:{p=+g[u+32>>2];q=+g[u+36>>2];o=+g[u+40>>2];}}if((t|0)==64){t=0;g[u+32>>2]=p;g[u+36>>2]=q;g[u+40>>2]=o;g[u+44>>2]=0.0;}g[u+32>>2]=p*+g[b+108>>2];g[u+36>>2]=q*+g[b+112>>2];g[u+40>>2]=o*+g[b+116>>2];Zb[c[(c[d>>2]|0)+8>>2]&127](d,u,h,e);o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,e);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=r-+g[b+84>>2]*.5;t=70;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=r-+g[b+84>>2]*.5;t=70;break}case 2:{q=r-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=70;break}default:{p=+g[u>>2];q=+g[u+4>>2];o=+g[u+8>>2];}}if((t|0)==70){t=0;g[u>>2]=p;g[u+4>>2]=q;g[u+8>>2]=o;g[u+12>>2]=0.0;}g[u>>2]=p*+g[b+108>>2];g[u+4>>2]=q*+g[b+112>>2];g[u+8>>2]=o*+g[b+116>>2];o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,m);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=+(m|0)-+g[b+84>>2]*.5;t=76;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=+(m|0)-+g[b+84>>2]*.5;t=76;break}case 2:{q=+(m|0)-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=76;break}default:{p=+g[u+32>>2];q=+g[u+36>>2];o=+g[u+40>>2];}}if((t|0)==76){t=0;g[u+32>>2]=p;g[u+36>>2]=q;g[u+40>>2]=o;g[u+44>>2]=0.0;}g[u+32>>2]=p*+g[b+108>>2];g[u+36>>2]=q*+g[b+112>>2];g[u+40>>2]=o*+g[b+116>>2];Zb[c[(c[d>>2]|0)+8>>2]&127](d,u,h,e);h=i;}else t=16;}else t=16;while(0);if((t|0)==16){t=0;o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,h,e);switch(c[b+104>>2]|0){case 0:{q=+(h|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=r-+g[b+84>>2]*.5;t=21;break}case 1:{q=o-+g[b+52>>2];p=+(h|0)-+g[b+80>>2]*.5;o=r-+g[b+84>>2]*.5;t=21;break}case 2:{q=r-+g[b+84>>2]*.5;p=+(h|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=21;break}default:{p=+g[u>>2];q=+g[u+4>>2];o=+g[u+8>>2];}}if((t|0)==21){t=0;g[u>>2]=p;g[u+4>>2]=q;g[u+8>>2]=o;g[u+12>>2]=0.0;}g[u>>2]=p*+g[b+108>>2];g[u+4>>2]=q*+g[b+112>>2];g[u+8>>2]=o*+g[b+116>>2];i=h+1|0;o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,e);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=r-+g[b+84>>2]*.5;t=27;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=r-+g[b+84>>2]*.5;t=27;break}case 2:{q=r-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=27;break}default:{p=+g[u+16>>2];q=+g[u+20>>2];o=+g[u+24>>2];}}if((t|0)==27){t=0;g[u+16>>2]=p;g[u+20>>2]=q;g[u+24>>2]=o;g[u+28>>2]=0.0;}g[u+16>>2]=p*+g[b+108>>2];g[u+20>>2]=q*+g[b+112>>2];g[u+24>>2]=o*+g[b+116>>2];o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,m);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=+(m|0)-+g[b+84>>2]*.5;t=33;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=+(m|0)-+g[b+84>>2]*.5;t=33;break}case 2:{q=+(m|0)-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=33;break}default:{p=+g[u+32>>2];q=+g[u+36>>2];o=+g[u+40>>2];}}if((t|0)==33){t=0;g[u+32>>2]=p;g[u+36>>2]=q;g[u+40>>2]=o;g[u+44>>2]=0.0;}g[u+32>>2]=p*+g[b+108>>2];g[u+36>>2]=q*+g[b+112>>2];g[u+40>>2]=o*+g[b+116>>2];Zb[c[(c[d>>2]|0)+8>>2]&127](d,u,h,e);o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,i,m);switch(c[b+104>>2]|0){case 0:{q=+(i|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=+(m|0)-+g[b+84>>2]*.5;t=39;break}case 1:{q=o-+g[b+52>>2];p=+(i|0)-+g[b+80>>2]*.5;o=+(m|0)-+g[b+84>>2]*.5;t=39;break}case 2:{q=+(m|0)-+g[b+84>>2]*.5;p=+(i|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=39;break}default:{p=+g[u+16>>2];q=+g[u+20>>2];o=+g[u+24>>2];}}if((t|0)==39){t=0;g[u+16>>2]=p;g[u+20>>2]=q;g[u+24>>2]=o;g[u+28>>2]=0.0;}g[u+16>>2]=p*+g[b+108>>2];g[u+20>>2]=q*+g[b+112>>2];g[u+24>>2]=o*+g[b+116>>2];o=+Lb[c[(c[b>>2]|0)+68>>2]&15](b,h,m);switch(c[b+104>>2]|0){case 0:{q=+(h|0)-+g[b+80>>2]*.5;p=o-+g[b+48>>2];o=+(m|0)-+g[b+84>>2]*.5;t=45;break}case 1:{q=o-+g[b+52>>2];p=+(h|0)-+g[b+80>>2]*.5;o=+(m|0)-+g[b+84>>2]*.5;t=45;break}case 2:{q=+(m|0)-+g[b+84>>2]*.5;p=+(h|0)-+g[b+80>>2]*.5;o=o-+g[b+56>>2];t=45;break}default:{p=+g[u+32>>2];q=+g[u+36>>2];o=+g[u+40>>2];}}if((t|0)==45){t=0;g[u+32>>2]=p;g[u+36>>2]=q;g[u+40>>2]=o;g[u+44>>2]=0.0;}g[u+32>>2]=p*+g[b+108>>2];g[u+36>>2]=q*+g[b+112>>2];g[u+40>>2]=o*+g[b+116>>2];Zb[c[(c[d>>2]|0)+8>>2]&127](d,u,h,e);h=i;}if((h|0)==(k|0)){e=m;break}}}else e=e+1|0;while((e|0)!=(f|0));l=u;return}function Fc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0.0,R=0.0,S=0.0,T=0;P=l;l=l+208|0;g[b+56>>2]=0.0;H=P+192+4|0;I=P+192+8|0;c[P+192>>2]=0;c[P+192+4>>2]=0;c[P+192+8>>2]=0;c[P+192+12>>2]=0;c[P+128>>2]=c[d>>2];c[P+128+4>>2]=c[d+4>>2];c[P+128+8>>2]=c[d+8>>2];c[P+128+12>>2]=c[d+12>>2];c[P+128+16>>2]=c[d+16>>2];c[P+128+16+4>>2]=c[d+16+4>>2];c[P+128+16+8>>2]=c[d+16+8>>2];c[P+128+16+12>>2]=c[d+16+12>>2];c[P+128+32>>2]=c[d+32>>2];c[P+128+32+4>>2]=c[d+32+4>>2];c[P+128+32+8>>2]=c[d+32+8>>2];c[P+128+32+12>>2]=c[d+32+12>>2];D=P+128+48|0;c[D>>2]=c[d+48>>2];c[D+4>>2]=c[d+48+4>>2];c[D+8>>2]=c[d+48+8>>2];c[D+12>>2]=c[d+48+12>>2];c[P+64>>2]=c[d+64>>2];c[P+64+4>>2]=c[d+64+4>>2];c[P+64+8>>2]=c[d+64+8>>2];c[P+64+12>>2]=c[d+64+12>>2];c[P+64+16>>2]=c[d+80>>2];c[P+64+16+4>>2]=c[d+80+4>>2];c[P+64+16+8>>2]=c[d+80+8>>2];c[P+64+16+12>>2]=c[d+80+12>>2];c[P+64+32>>2]=c[d+96>>2];c[P+64+32+4>>2]=c[d+96+4>>2];c[P+64+32+8>>2]=c[d+96+8>>2];c[P+64+32+12>>2]=c[d+96+12>>2];E=P+64+48|0;c[E>>2]=c[d+112>>2];c[E+4>>2]=c[d+112+4>>2];c[E+8>>2]=c[d+112+8>>2];c[E+12>>2]=c[d+112+12>>2];J=+g[D>>2];K=+g[E>>2];L=+g[P+128+52>>2];M=+g[P+64+52>>2];N=+g[P+128+56>>2];O=+g[P+64+56>>2];g[D>>2]=J-(J+K)*.5;g[P+128+52>>2]=L-(L+M)*.5;g[P+128+56>>2]=N-(N+O)*.5;g[E>>2]=K-(J+K)*.5;g[P+64+52>>2]=M-(L+M)*.5;g[P+64+56>>2]=O-(N+O)*.5;if(((c[(c[b+28>>2]|0)+4>>2]|0)+-17|0)>>>0<2)D=((c[(c[b+32>>2]|0)+4>>2]|0)+-17|0)>>>0<2;else D=0;v=+g[b+44>>2];u=+g[b+48>>2];c[6421]=(c[6421]|0)+1;E=a[b+52>>0]|0;c[b+64>>2]=0;c[b+4>>2]=0;c[b+8>>2]=1065353216;c[b+12>>2]=0;g[b+16>>2]=0.0;c[b+68>>2]=0;c[b+60>>2]=-1;k=c[b+24>>2]|0;a[k+312>>0]=0;c[k>>2]=0;a[k+356>>0]=1;c[k+292>>2]=1566444395;c[k+296>>2]=1566444395;c[k+300>>2]=1566444395;g[k+304>>2]=0.0;c[k+336>>2]=0;c[k+336+4>>2]=0;c[k+336+8>>2]=0;c[k+336+12>>2]=0;a[k+336+16>>0]=0;a[k+332>>0]=a[k+332>>0]&-16;p=999999984306749440.0;k=0;do{q=+g[b+4>>2];o=+g[b+8>>2];j=+g[b+12>>2];m=+g[d+4>>2]*-q+ +g[d+20>>2]*-o+ +g[d+36>>2]*-j;n=+g[d+8>>2]*-q+ +g[d+24>>2]*-o+ +g[d+40>>2]*-j;g[P+48>>2]=+g[d>>2]*-q+ +g[d+16>>2]*-o+ +g[d+32>>2]*-j;g[P+48+4>>2]=m;g[P+48+8>>2]=n;g[P+48+12>>2]=0.0;n=q*+g[d+68>>2]+o*+g[d+84>>2]+j*+g[d+100>>2];m=q*+g[d+72>>2]+o*+g[d+88>>2]+j*+g[d+104>>2];g[P+32>>2]=+g[d+64>>2]*q+ +g[d+80>>2]*o+ +g[d+96>>2]*j;g[P+32+4>>2]=n;g[P+32+8>>2]=m;g[P+32+12>>2]=0.0;rd(P+16|0,c[b+28>>2]|0,P+48|0);rd(P,c[b+32>>2]|0,P+32|0);m=+g[P+16>>2];n=+g[P+16+4>>2];j=+g[P+16+8>>2];o=m*+g[P+128>>2]+n*+g[P+128+4>>2]+j*+g[P+128+8>>2]+ +g[P+128+48>>2];q=m*+g[P+128+16>>2]+n*+g[P+128+20>>2]+j*+g[P+128+24>>2]+ +g[P+128+52>>2];j=m*+g[P+128+32>>2]+n*+g[P+128+36>>2]+j*+g[P+128+40>>2]+ +g[P+128+56>>2];n=+g[P>>2];m=+g[P+4>>2];t=+g[P+8>>2];r=n*+g[P+64>>2]+m*+g[P+64+4>>2]+t*+g[P+64+8>>2]+ +g[P+64+48>>2];s=n*+g[P+64+16>>2]+m*+g[P+64+20>>2]+t*+g[P+64+24>>2]+ +g[P+64+52>>2];t=n*+g[P+64+32>>2]+m*+g[P+64+36>>2]+t*+g[P+64+40>>2]+ +g[P+64+56>>2];m=D?0.0:t;n=D?0.0:j;t=(D?0.0:j)-(D?0.0:t);j=+g[b+4>>2]*(o-r)+ +g[b+8>>2]*(q-s)+ +g[b+12>>2]*t;if(j>0.0?j*j>p*+g[d+128>>2]:0){c[b+68>>2]=10;h=0;k=1;}else T=7;do if((T|0)==7){T=0;B=c[b+24>>2]|0;C=c[B>>2]|0;if((C|0)>0){i=+g[B+308>>2];z=0;h=0;do{x=o-r-+g[B+4+(z<<4)>>2];y=q-s-+g[B+4+(z<<4)+4>>2];A=t-+g[B+4+(z<<4)+8>>2];h=h|x*x+y*y+A*A<=i;z=z+1|0;}while((z|0)!=(C|0))}else h=0;if((+g[B+304>>2]==0.0?t==+g[B+300>>2]:0)?q-s==+g[B+296>>2]:0){if(o-r==+g[B+292>>2]|h)T=15;}else T=14;if((T|0)==14?(T=0,h):0)T=15;if((T|0)==15){T=0;c[b+68>>2]=1;h=0;k=1;break}i=p-j;if(i<=p*9.999999974752427e-07){c[b+68>>2]=i<=0.0?2:11;h=0;k=1;break}g[B+292>>2]=o-r;g[B+296>>2]=q-s;g[B+300>>2]=t;g[B+304>>2]=0.0;a[B+356>>0]=1;g[B+4+(C<<4)>>2]=o-r;g[B+4+(C<<4)+4>>2]=q-s;g[B+4+(C<<4)+8>>2]=t;g[B+4+(C<<4)+12>>2]=0.0;h=c[B>>2]|0;g[B+84+(h<<4)>>2]=o;g[B+84+(h<<4)+4>>2]=q;g[B+84+(h<<4)+8>>2]=n;g[B+84+(h<<4)+12>>2]=0.0;h=c[B>>2]|0;g[B+164+(h<<4)>>2]=r;g[B+164+(h<<4)+4>>2]=s;g[B+164+(h<<4)+8>>2]=m;g[B+164+(h<<4)+12>>2]=0.0;c[B>>2]=(c[B>>2]|0)+1;h=c[b+24>>2]|0;C=oc(h)|0;i=+g[h+276>>2];j=+g[h+280>>2];m=+g[h+284>>2];h=c[h+288>>2]|0;if(!C){c[b+68>>2]=3;h=0;k=1;break}if(i*i+j*j+m*m<9.999999974752427e-07){g[b+4>>2]=i;g[b+8>>2]=j;g[b+12>>2]=m;c[b+16>>2]=h;c[b+68>>2]=6;h=0;k=1;break}if(p-(i*i+j*j+m*m)<=p*1.1920928955078125e-07){c[b+68>>2]=12;p=i*i+j*j+m*m;h=0;k=1;break}g[b+4>>2]=i;g[b+8>>2]=j;g[b+12>>2]=m;c[b+16>>2]=h;C=c[b+64>>2]|0;c[b+64>>2]=C+1;if((C|0)<=1e3)if((c[c[b+24>>2]>>2]|0)==4){c[b+68>>2]=13;p=i*i+j*j+m*m;h=0;}else{p=i*i+j*j+m*m;h=1;}else{p=i*i+j*j+m*m;h=0;}}while(0)}while(h);w=E<<24>>24==0?u:0.0;v=(E<<24>>24==0?v:0.0)+w;if(k){E=c[b+24>>2]|0;oc(E)|0;m=+g[E+260>>2];j=+g[E+264>>2];i=+g[E+268>>2];c[P+192>>2]=c[b+4>>2];c[P+192+4>>2]=c[b+4+4>>2];c[P+192+8>>2]=c[b+4+8>>2];c[P+192+12>>2]=c[b+4+12>>2];n=+g[b+4>>2];o=+g[b+8>>2];q=+g[b+12>>2];if(n*n+o*o+q*q<.0001)c[b+68>>2]=5;if(n*n+o*o+q*q>1.4210854715202004e-14){y=1.0/+G(+(n*n+o*o+q*q));g[P+192>>2]=y*+g[P+192>>2];g[H>>2]=y*+g[H>>2];g[I>>2]=y*+g[I>>2];A=w/+G(+p);p=1.0/y-v;k=1;h=1;m=A*n+m;j=A*o+j;i=A*q+i;}else{p=0.0;k=0;h=2;}c[b+60>>2]=h;}else{p=0.0;k=0;m=0.0;j=0.0;i=0.0;}if((c[b+72>>2]|0)!=0?(c[b+20>>2]|0)!=0:0)h=v+p<.01&(c[b+68>>2]|0)!=0;else h=0;z=k^1;do if(h|z?(F=c[b+20>>2]|0,(F|0)!=0):0){c[6420]=(c[6420]|0)+1;c[b+4>>2]=0;c[b+4+4>>2]=0;c[b+4+8>>2]=0;c[b+4+12>>2]=0;if(ob[c[(c[F>>2]|0)+8>>2]&3](F,c[b+24>>2]|0,c[b+28>>2]|0,c[b+32>>2]|0,P+128|0,P+64|0,b+4|0,P+48|0,P+32|0,f)|0){x=+g[P+32>>2];o=+g[P+48>>2];y=+g[P+32+4>>2];q=+g[P+48+4>>2];A=+g[P+32+8>>2];r=+g[P+48+8>>2];if(!((x-o)*(x-o)+(y-q)*(y-q)+(A-r)*(A-r)<=1.4210854715202004e-14)){n=(x-o)*(x-o)+(y-q)*(y-q)+(A-r)*(A-r);t=x-o;u=A-r;v=0.0;w=y-q;}else{t=+g[b+4>>2];w=+g[b+8>>2];u=+g[b+12>>2];n=t*t+w*w+u*u;v=+g[b+16>>2];}if(n>1.4210854715202004e-14){s=1.0/+G(+n);n=-+G(+((o-x)*(o-x)+(q-y)*(q-y)+(r-A)*(r-A)));if(p>n|z){g[P+192>>2]=t*s;g[H>>2]=w*s;g[I>>2]=u*s;g[P+192+12>>2]=v;c[b+60>>2]=3;m=x;j=y;i=A;break}else h=8;}else h=9;c[b+60>>2]=h;if(k){n=p;break}l=P;return}else{o=+g[b+4>>2];r=+g[b+8>>2];t=+g[b+12>>2];if(!(o*o+r*r+t*t>0.0)){if(k){n=p;break}l=P;return}q=+g[P+32>>2];y=+g[P+48>>2]-q;s=+g[P+32+4>>2];A=+g[P+48+4>>2]-s;u=+g[P+32+8>>2];n=+g[P+48+8>>2]-u;n=+G(+(y*y+A*A+n*n))-v;if(n<p|z){c[P+192>>2]=c[b+4>>2];c[P+192+4>>2]=c[b+4+4>>2];c[P+192+8>>2]=c[b+4+8>>2];c[P+192+12>>2]=c[b+4+12>>2];A=+g[P+192>>2];i=+g[H>>2];j=+g[I>>2];m=1.0/+G(+(A*A+i*i+j*j));g[P+192>>2]=A*m;g[H>>2]=i*m;g[I>>2]=j*m;c[b+60>>2]=6;m=w*o+q;j=w*r+s;i=w*t+u;break}c[b+60>>2]=5;if(k){n=p;break}l=P;return}}else T=51;while(0);if((T|0)==51)if(k)n=p;else{l=P;return}if(!(n<0.0)?!(n*n<+g[d+128>>2]):0){l=P;return}if(c[b+76>>2]|0?(T=c[b+28>>2]|0,Zb[c[(c[T>>2]|0)+8>>2]&127](T,P+128|0,P+48|0,P+32|0),x=(+g[P+32>>2]+ +g[P+48>>2])*.5,y=(+g[P+32+4>>2]+ +g[P+48+4>>2])*.5,A=(+g[P+32+8>>2]+ +g[P+48+8>>2])*.5,T=c[b+32>>2]|0,Zb[c[(c[T>>2]|0)+8>>2]&127](T,P+64|0,P+48|0,P+32|0),Q=+g[P+192>>2],R=+g[H>>2],S=+g[I>>2],(x-(+g[P+48>>2]+ +g[P+32>>2])*.5)*Q+(y-(+g[P+48+4>>2]+ +g[P+32+4>>2])*.5)*R+(A-(+g[P+48+8>>2]+ +g[P+32+8>>2])*.5)*S<0.0):0){g[P+192>>2]=-Q;g[H>>2]=-R;g[I>>2]=-S;}c[b+4>>2]=c[P+192>>2];c[b+4+4>>2]=c[P+192+4>>2];c[b+4+8>>2]=c[P+192+8>>2];c[b+4+12>>2]=c[P+192+12>>2];g[b+56>>2]=n;T=c[(c[e>>2]|0)+16>>2]|0;g[P+48>>2]=(J+K)*.5+m;g[P+48+4>>2]=(L+M)*.5+j;g[P+48+8>>2]=(N+O)*.5+i;g[P+48+12>>2]=0.0;Ub[T&15](e,P+192|0,P+48|0,n);l=P;return}function Gc(b,d,e,f,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;i=+i;j=j|0;var k=0,m=0.0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0,$=0;W=l;l=l+48|0;a[W+16+16>>0]=1;V=W+16+12|0;c[V>>2]=0;c[W+16+4>>2]=0;c[W+16+8>>2]=0;p=c[f+4>>2]|0;if((p|0)>0){c[6436]=(c[6436]|0)+1;k=ic((p<<4|3)+16|0)|0;if(!k)o=0;else{c[(k+4+15&-16)+-4>>2]=k;o=k+4+15&-16;}n=c[W+16+4>>2]|0;if((n|0)>0){k=0;do{U=o+(k<<4)|0;T=(c[V>>2]|0)+(k<<4)|0;c[U>>2]=c[T>>2];c[U+4>>2]=c[T+4>>2];c[U+8>>2]=c[T+8>>2];c[U+12>>2]=c[T+12>>2];k=k+1|0;}while((k|0)!=(n|0))}k=c[V>>2]|0;if(k|0){if(a[W+16+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[V>>2]=0;}a[W+16+16>>0]=1;c[V>>2]=o;c[W+16+8>>2]=p;}n=c[d+28>>2]|0;if((n|0)>0){U=c[d+36>>2]|0;E=+g[e>>2];F=+g[e+4>>2];G=+g[e+8>>2];H=+g[e+16>>2];u=+g[e+20>>2];s=+g[e+24>>2];r=+g[e+32>>2];q=+g[e+36>>2];m=+g[e+40>>2];v=+g[b>>2];w=+g[b+4>>2];x=+g[b+8>>2];T=-1;t=3402823466385288598117041.0e14;k=0;while(1){y=+g[U+(k*36|0)+20>>2];z=+g[U+(k*36|0)+24>>2];A=+g[U+(k*36|0)+28>>2];o=(y*E+z*F+A*G)*v+(y*H+z*u+A*s)*w+(y*r+z*q+A*m)*x<t;T=o?k:T;k=k+1|0;if((k|0)==(n|0))break;else t=o?(y*E+z*F+A*G)*v+(y*H+z*u+A*s)*w+(y*r+z*q+A*m)*x:t;}if((T|0)>=0){M=c[U+(T*36|0)+4>>2]|0;if((M|0)>0){N=U+(T*36|0)+12|0;O=U+(T*36|0)+20|0;P=U+(T*36|0)+24|0;Q=U+(T*36|0)+28|0;L=0;p=W+16|0;w=E;x=F;t=G;v=H;while(1){J=c[N>>2]|0;k=c[J+(L<<2)>>2]|0;I=c[d+16>>2]|0;L=L+1|0;J=c[J+(((L|0)==(M|0)?0:L)<<2)>>2]|0;X=+g[I+(k<<4)>>2];Y=X-+g[I+(J<<4)>>2];y=+g[I+(k<<4)+4>>2];Z=y-+g[I+(J<<4)+4>>2];z=+g[I+(k<<4)+8>>2];F=z-+g[I+(J<<4)+8>>2];A=Y*w+Z*x+F*t;E=Y*v+Z*u+F*s;F=Y*r+Z*q+F*m;Z=+g[O>>2];Y=+g[P>>2];K=+g[Q>>2];G=w*Z+x*Y+t*K;H=v*Z+u*Y+s*K;K=r*Z+q*Y+m*K;z=(X*w+y*x+z*t+ +g[e+48>>2])*-(E*K-F*H)+(X*v+y*u+z*s+ +g[e+52>>2])*-(F*G-A*K)+(X*r+y*q+z*m+ +g[e+56>>2])*-(A*H-E*G);J=f;I=p;k=c[J+4>>2]|0;if((k|0)>=2){o=c[J+12>>2]|0;r=+g[o+(k+-1<<4)>>2];t=+g[o+(k+-1<<4)+4>>2];u=+g[o+(k+-1<<4)+8>>2];n=0;q=r*-(E*K-F*H)+t*-(F*G-A*K)+u*-(A*H-E*G)-z;while(1){w=+g[o+(n<<4)>>2];x=+g[o+(n<<4)+4>>2];y=+g[o+(n<<4)+8>>2];m=+g[o+(n<<4)+12>>2];v=w*-(E*K-F*H)+x*-(F*G-A*K)+y*-(A*H-E*G)-z;do if(q<0.0)if(v<0.0){B=c[I+4>>2]|0;if((B|0)!=(c[I+8>>2]|0)){s=w;r=x;q=y;C=75;break}D=B|0?B<<1:1;if((B|0)>=(D|0)){s=w;r=x;q=y;C=75;break}if(!D)o=0;else{c[6436]=(c[6436]|0)+1;o=ic((D<<4|3)+16|0)|0;if(!o)o=0;else{c[(o+4+15&-16)+-4>>2]=o;o=o+4+15&-16;}B=c[I+4>>2]|0;}if((B|0)>0){C=0;do{_=o+(C<<4)|0;$=(c[I+12>>2]|0)+(C<<4)|0;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];C=C+1|0;}while((C|0)!=(B|0))}B=c[I+12>>2]|0;if(B|0){if(a[I+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}c[I+12>>2]=0;}a[I+16>>0]=1;c[I+12>>2]=o;c[I+8>>2]=D;B=c[I+4>>2]|0;s=w;r=x;q=y;C=75;break}else{q=q/(q-v);s=r+(w-r)*q;r=t+(x-t)*q;q=u+(y-u)*q;B=c[I+4>>2]|0;if((B|0)!=(c[I+8>>2]|0)){m=0.0;C=75;break}D=B|0?B<<1:1;if((B|0)>=(D|0)){m=0.0;C=75;break}if(!D)o=0;else{c[6436]=(c[6436]|0)+1;o=ic((D<<4|3)+16|0)|0;if(!o)o=0;else{c[(o+4+15&-16)+-4>>2]=o;o=o+4+15&-16;}B=c[I+4>>2]|0;}if((B|0)>0){C=0;do{$=o+(C<<4)|0;_=(c[I+12>>2]|0)+(C<<4)|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];C=C+1|0;}while((C|0)!=(B|0))}B=c[I+12>>2]|0;if(B|0){if(a[I+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}c[I+12>>2]=0;}a[I+16>>0]=1;c[I+12>>2]=o;c[I+8>>2]=D;B=c[I+4>>2]|0;m=0.0;C=75;break}else if(v<0.0){q=q/(q-v);s=r+(w-r)*q;r=t+(x-t)*q;q=u+(y-u)*q;B=c[I+4>>2]|0;if((B|0)==(c[I+8>>2]|0)?(R=B|0?B<<1:1,(B|0)<(R|0)):0){if(!R)o=0;else{c[6436]=(c[6436]|0)+1;o=ic((R<<4|3)+16|0)|0;if(!o)o=0;else{c[(o+4+15&-16)+-4>>2]=o;o=o+4+15&-16;}B=c[I+4>>2]|0;}if((B|0)>0){C=0;do{$=o+(C<<4)|0;_=(c[I+12>>2]|0)+(C<<4)|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];C=C+1|0;}while((C|0)!=(B|0))}B=c[I+12>>2]|0;if(B|0){if(a[I+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}c[I+12>>2]=0;}a[I+16>>0]=1;c[I+12>>2]=o;c[I+8>>2]=R;o=c[I+4>>2]|0;}else o=B;B=c[I+12>>2]|0;g[B+(o<<4)>>2]=s;g[B+(o<<4)+4>>2]=r;g[B+(o<<4)+8>>2]=q;g[B+(o<<4)+12>>2]=0.0;B=(c[I+4>>2]|0)+1|0;c[I+4>>2]=B;if((B|0)==(c[I+8>>2]|0)?(S=B|0?B<<1:1,(B|0)<(S|0)):0){if(!S)o=0;else{c[6436]=(c[6436]|0)+1;o=ic((S<<4|3)+16|0)|0;if(!o)o=0;else{c[(o+4+15&-16)+-4>>2]=o;o=o+4+15&-16;}B=c[I+4>>2]|0;}if((B|0)>0){C=0;do{$=o+(C<<4)|0;_=(c[I+12>>2]|0)+(C<<4)|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];C=C+1|0;}while((C|0)!=(B|0))}B=c[I+12>>2]|0;if(B|0){if(a[I+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}c[I+12>>2]=0;}a[I+16>>0]=1;c[I+12>>2]=o;c[I+8>>2]=S;B=c[I+4>>2]|0;s=w;r=x;q=y;C=75;}else{s=w;r=x;q=y;C=75;}}while(0);if((C|0)==75){C=0;$=c[I+12>>2]|0;g[$+(B<<4)>>2]=s;g[$+(B<<4)+4>>2]=r;g[$+(B<<4)+8>>2]=q;g[$+(B<<4)+12>>2]=m;c[I+4>>2]=(c[I+4>>2]|0)+1;}n=n+1|0;if((n|0)==(k|0))break;q=v;r=w;u=y;t=x;o=c[J+12>>2]|0;}k=c[J+4>>2]|0;}if((k|0)<0){if((c[J+8>>2]|0)<0){n=c[J+12>>2]|0;if(n|0){if(a[J+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[J+12>>2]=0;}a[J+16>>0]=1;c[J+12>>2]=0;c[J+8>>2]=0;}do{$=(c[J+12>>2]|0)+(k<<4)|0;c[$>>2]=c[W>>2];c[$+4>>2]=c[W+4>>2];c[$+8>>2]=c[W+8>>2];c[$+12>>2]=c[W+12>>2];k=k+1|0;}while((k|0)!=0)}c[J+4>>2]=0;w=+g[e>>2];x=+g[e+4>>2];t=+g[e+8>>2];v=+g[e+16>>2];u=+g[e+20>>2];s=+g[e+24>>2];r=+g[e+32>>2];q=+g[e+36>>2];m=+g[e+40>>2];if((L|0)>=(M|0)){o=O;n=P;k=Q;C=e+48|0;D=e+52|0;B=e+56|0;break}else{$=f;f=p;p=$;}}}else{o=U+(T*36|0)+20|0;n=U+(T*36|0)+24|0;k=U+(T*36|0)+28|0;C=e+48|0;D=e+52|0;B=e+56|0;p=f;w=E;x=F;t=G;v=H;}X=+g[o>>2];Y=+g[n>>2];Z=+g[k>>2];t=X*w+Y*x+Z*t;s=X*v+Y*u+Z*s;r=X*r+Y*q+Z*m;q=+g[U+(T*36|0)+32>>2]-(t*+g[C>>2]+s*+g[D>>2]+r*+g[B>>2]);k=c[p+4>>2]|0;if((k|0)>0){o=0;do{n=c[p+12>>2]|0;m=q+(t*+g[n+(o<<4)>>2]+s*+g[n+(o<<4)+4>>2]+r*+g[n+(o<<4)+8>>2]);m=m<=h?h:m;if(m<=i){k=n+(o<<4)|0;c[W>>2]=c[k>>2];c[W+4>>2]=c[k+4>>2];c[W+8>>2]=c[k+8>>2];c[W+12>>2]=c[k+12>>2];Ub[c[(c[j>>2]|0)+16>>2]&15](j,b,W,m);k=c[p+4>>2]|0;}o=o+1|0;}while((o|0)<(k|0))}}}k=c[V>>2]|0;if(!k){l=W;return}if(a[W+16+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}c[V>>2]=0;l=W;return}function Hc(b){b=b|0;var d=0.0,e=0.0,f=0,h=0.0,i=0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0;u=l;l=l+176|0;if(!(a[b+738>>0]|0)){l=u;return}g[b+36>>2]=0.0;g[b+744>>2]=0.0;if(!(a[b+736>>0]|0)){f=c[b+28>>2]|0;j=+g[b+600>>2];k=+g[b+604>>2];q=+g[b+608>>2];s=j*+g[f+20>>2]+k*+g[f+24>>2]+q*+g[f+28>>2]+ +g[f+56>>2];i=c[b+32>>2]|0;m=+g[b+664>>2];n=+g[b+668>>2];r=+g[b+672>>2];t=m*+g[i+20>>2]+n*+g[i+24>>2]+r*+g[i+28>>2]+ +g[i+56>>2];o=m*+g[i+36>>2]+n*+g[i+40>>2]+r*+g[i+44>>2]+ +g[i+60>>2];p=j*+g[f+4>>2]+k*+g[f+8>>2]+q*+g[f+12>>2]+ +g[f+52>>2];q=j*+g[f+36>>2]+k*+g[f+40>>2]+q*+g[f+44>>2]+ +g[f+60>>2];r=m*+g[i+4>>2]+n*+g[i+8>>2]+r*+g[i+12>>2]+ +g[i+52>>2];if((r-p)*(r-p)+(t-s)*(t-s)+(o-q)*(o-q)>1.1920928955078125e-07){e=1.0/+G(+((r-p)*(r-p)+(t-s)*(t-s)+(o-q)*(o-q)));g[u+128>>2]=(r-p)*e;g[u+128+4>>2]=(t-s)*e;g[u+128+8>>2]=(o-q)*e;c[u+128+12>>2]=0;m=(o-q)*e;d=(t-s)*e;e=(r-p)*e;}else{c[u+128>>2]=1065353216;c[u+128+4>>2]=0;c[u+128+8>>2]=0;g[u+128+12>>2]=0.0;m=0.0;d=0.0;e=1.0;}if(+F(+m)>.7071067690849304){w=m*m+d*d;v=1.0/+G(+w);j=-(v*m);m=v*d;n=-(m*e);h=e*j;k=0.0;d=w*v;e=m;}else{j=e*e+d*d;h=1.0/+G(+j);k=-(d*h);d=h*e;n=m*k;h=j*h;j=d;d=-(d*m);e=0.0;}g[u+128+16>>2]=k;g[u+128+20>>2]=j;g[u+128+24>>2]=e;g[u+128+32>>2]=d;g[u+128+36>>2]=n;g[u+128+40>>2]=h;f=0;while(1){x=c[b+28>>2]|0;c[u+80>>2]=c[x+4>>2];c[u+80+4>>2]=c[x+20>>2];c[u+80+8>>2]=c[x+36>>2];g[u+80+12>>2]=0.0;c[u+80+16>>2]=c[x+8>>2];c[u+80+20>>2]=c[x+24>>2];c[u+80+24>>2]=c[x+40>>2];g[u+80+28>>2]=0.0;c[u+80+32>>2]=c[x+12>>2];c[u+80+36>>2]=c[x+28>>2];c[u+80+40>>2]=c[x+44>>2];g[u+80+44>>2]=0.0;c[u+32>>2]=c[i+4>>2];c[u+32+4>>2]=c[i+20>>2];c[u+32+8>>2]=c[i+36>>2];g[u+32+12>>2]=0.0;c[u+32+16>>2]=c[i+8>>2];c[u+32+20>>2]=c[i+24>>2];c[u+32+24>>2]=c[i+40>>2];g[u+32+28>>2]=0.0;c[u+32+32>>2]=c[i+12>>2];c[u+32+36>>2]=c[i+28>>2];c[u+32+40>>2]=c[i+44>>2];g[u+32+44>>2]=0.0;w=s-+g[x+56>>2];v=q-+g[x+60>>2];g[u+16>>2]=p-+g[x+52>>2];g[u+16+4>>2]=w;g[u+16+8>>2]=v;g[u+16+12>>2]=0.0;v=t-+g[i+56>>2];w=o-+g[i+60>>2];g[u>>2]=r-+g[i+52>>2];g[u+4>>2]=v;g[u+8>>2]=w;g[u+12>>2]=0.0;x=c[b+28>>2]|0;i=c[b+32>>2]|0;yg(b+48+(f*84|0)|0,u+80|0,u+32|0,u+16|0,u,u+128+(f<<4)|0,x+396|0,+g[x+344>>2],i+396|0,+g[i+344>>2]);f=f+1|0;if((f|0)==3)break;i=c[b+32>>2]|0;}}n=+g[b+560>>2];o=+g[b+576>>2];p=+g[b+592>>2];if(+F(+p)>.7071067690849304){m=1.0/+G(+(p*p+o*o));d=n*-(p*m);e=(p*p+o*o)*m;h=0.0;j=o*m;k=-(n*o*m);m=-(p*m);}else{m=1.0/+G(+(n*n+o*o));d=(n*n+o*o)*m;e=-(p*n*m);h=-(o*m);j=0.0;k=p*-(o*m);m=n*m;}i=c[b+28>>2]|0;K=+g[i+4>>2];J=+g[i+8>>2];s=+g[i+12>>2];R=h*K+m*J+j*s;I=+g[i+20>>2];H=+g[i+24>>2];v=+g[i+28>>2];T=h*I+m*H+j*v;E=+g[i+36>>2];q=+g[i+40>>2];C=+g[i+44>>2];W=h*E+m*q+j*C;B=e*K+k*J+d*s;M=e*I+k*H+d*v;N=e*E+k*q+d*C;f=c[b+32>>2]|0;A=+g[f+4>>2];z=+g[f+20>>2];y=+g[f+36>>2];k=+g[f+8>>2];m=+g[f+24>>2];t=+g[f+40>>2];P=+g[f+12>>2];S=+g[f+28>>2];V=+g[f+44>>2];c[b+300>>2]=0;c[b+300+4>>2]=0;c[b+300+8>>2]=0;c[b+300+12>>2]=0;g[b+316>>2]=R*K+T*I+W*E;g[b+320>>2]=R*J+T*H+W*q;g[b+324>>2]=R*s+T*v+W*C;g[b+328>>2]=0.0;g[b+332>>2]=A*-R+z*-T+y*-W;g[b+336>>2]=k*-R+m*-T+t*-W;g[b+340>>2]=P*-R+S*-T+V*-W;g[b+344>>2]=0.0;D=(R*K+T*I+W*E)*+g[i+396>>2];L=(R*J+T*H+W*q)*+g[i+400>>2];d=(R*s+T*v+W*C)*+g[i+404>>2];g[b+348>>2]=D;g[b+352>>2]=L;g[b+356>>2]=d;g[b+360>>2]=0.0;j=(A*-R+z*-T+y*-W)*+g[f+396>>2];w=(k*-R+m*-T+t*-W)*+g[f+400>>2];X=(P*-R+S*-T+V*-W)*+g[f+404>>2];g[b+364>>2]=j;g[b+368>>2]=w;g[b+372>>2]=X;g[b+376>>2]=0.0;g[b+380>>2]=(R*K+T*I+W*E)*D+(R*J+T*H+W*q)*L+(R*s+T*v+W*C)*d+((A*-R+z*-T+y*-W)*j+(k*-R+m*-T+t*-W)*w+(P*-R+S*-T+V*-W)*X);f=c[b+28>>2]|0;X=+g[f+4>>2];W=+g[f+20>>2];V=+g[f+36>>2];T=+g[f+8>>2];S=+g[f+24>>2];R=+g[f+40>>2];P=+g[f+12>>2];w=+g[f+28>>2];t=+g[f+44>>2];i=c[b+32>>2]|0;m=+g[i+4>>2];k=+g[i+20>>2];j=+g[i+36>>2];y=+g[i+8>>2];z=+g[i+24>>2];A=+g[i+40>>2];d=+g[i+12>>2];L=+g[i+28>>2];D=+g[i+44>>2];c[b+384>>2]=0;c[b+384+4>>2]=0;c[b+384+8>>2]=0;c[b+384+12>>2]=0;g[b+400>>2]=B*X+M*W+N*V;g[b+404>>2]=B*T+M*S+N*R;g[b+408>>2]=B*P+M*w+N*t;g[b+412>>2]=0.0;g[b+416>>2]=m*-B+k*-M+j*-N;g[b+420>>2]=y*-B+z*-M+A*-N;g[b+424>>2]=d*-B+L*-M+D*-N;g[b+428>>2]=0.0;U=(B*X+M*W+N*V)*+g[f+396>>2];Q=(B*T+M*S+N*R)*+g[f+400>>2];r=(B*P+M*w+N*t)*+g[f+404>>2];g[b+432>>2]=U;g[b+436>>2]=Q;g[b+440>>2]=r;g[b+444>>2]=0.0;e=(m*-B+k*-M+j*-N)*+g[i+396>>2];h=(y*-B+z*-M+A*-N)*+g[i+400>>2];O=(d*-B+L*-M+D*-N)*+g[i+404>>2];g[b+448>>2]=e;g[b+452>>2]=h;g[b+456>>2]=O;g[b+460>>2]=0.0;g[b+464>>2]=(B*X+M*W+N*V)*U+(B*T+M*S+N*R)*Q+(B*P+M*w+N*t)*r+((m*-B+k*-M+j*-N)*e+(y*-B+z*-M+A*-N)*h+(d*-B+L*-M+D*-N)*O);i=c[b+28>>2]|0;O=+g[i+4>>2];N=+g[i+20>>2];D=+g[i+36>>2];M=+g[i+8>>2];L=+g[i+24>>2];B=+g[i+40>>2];d=+g[i+12>>2];h=+g[i+28>>2];A=+g[i+44>>2];f=c[b+32>>2]|0;z=+g[f+4>>2];y=+g[f+20>>2];e=+g[f+36>>2];j=+g[f+8>>2];k=+g[f+24>>2];m=+g[f+40>>2];r=+g[f+12>>2];t=+g[f+28>>2];w=+g[f+44>>2];c[b+468>>2]=0;c[b+468+4>>2]=0;c[b+468+8>>2]=0;c[b+468+12>>2]=0;D=(K*n+J*o+s*p)*O+(I*n+H*o+v*p)*N+(E*n+q*o+C*p)*D;B=(K*n+J*o+s*p)*M+(I*n+H*o+v*p)*L+(E*n+q*o+C*p)*B;A=(K*n+J*o+s*p)*d+(I*n+H*o+v*p)*h+(E*n+q*o+C*p)*A;g[b+484>>2]=D;g[b+488>>2]=B;g[b+492>>2]=A;g[b+496>>2]=0.0;s=-(K*n+J*o+s*p);v=-(I*n+H*o+v*p);h=-(E*n+q*o+C*p);g[b+500>>2]=z*s+y*v+e*h;g[b+504>>2]=j*s+k*v+m*h;g[b+508>>2]=r*s+t*v+w*h;g[b+512>>2]=0.0;C=D*+g[i+396>>2];n=B*+g[i+400>>2];o=A*+g[i+404>>2];g[b+516>>2]=C;g[b+520>>2]=n;g[b+524>>2]=o;g[b+528>>2]=0.0;p=(z*s+y*v+e*h)*+g[f+396>>2];q=(j*s+k*v+m*h)*+g[f+400>>2];d=(r*s+t*v+w*h)*+g[f+404>>2];g[b+532>>2]=p;g[b+536>>2]=q;g[b+540>>2]=d;g[b+544>>2]=0.0;g[b+548>>2]=D*C+B*n+A*o+((z*s+y*v+e*h)*p+(j*s+k*v+m*h)*q+(r*s+t*v+w*h)*d);g[b+724>>2]=0.0;f=c[b+28>>2]|0;i=c[b+32>>2]|0;d=+Oi(b,f+4|0,i+4|0);g[b+728>>2]=d;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;h=+g[b+692>>2];do if(h>=0.0){d=+Wg(d-+g[b+688>>2],6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465;}else d=d+6.2831854820251465;if(d<-h){a[b+716>>0]=1;e=1.0;d=-(d+h);}else{if(!(d>h))break;a[b+716>>0]=1;e=-1.0;d=h-d;}g[b+708>>2]=d;g[b+712>>2]=e;}while(0);T=+g[b+560>>2];U=+g[b+576>>2];X=+g[b+592>>2];V=T*+g[f+4>>2]+U*+g[f+8>>2]+X*+g[f+12>>2];W=T*+g[f+20>>2]+U*+g[f+24>>2]+X*+g[f+28>>2];X=T*+g[f+36>>2]+U*+g[f+40>>2]+X*+g[f+44>>2];g[b+720>>2]=1.0/(V*(V*+g[f+264>>2]+W*+g[f+280>>2]+X*+g[f+296>>2])+W*(V*+g[f+268>>2]+W*+g[f+284>>2]+X*+g[f+300>>2])+X*(V*+g[f+272>>2]+W*+g[f+288>>2]+X*+g[f+304>>2])+(V*(V*+g[i+264>>2]+W*+g[i+280>>2]+X*+g[i+296>>2])+W*(V*+g[i+268>>2]+W*+g[i+284>>2]+X*+g[i+300>>2])+X*(V*+g[i+272>>2]+W*+g[i+288>>2]+X*+g[i+304>>2])));l=u;return}function Ic(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,H=0.0,K=0.0,L=0.0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0;M=l;l=l+64|0;if(!(c[b+12>>2]|0)){l=M;return}f=(a[b+16>>0]|0)!=0;P=f?e:d;f=f?d:e;i=c[P+4>>2]|0;j=c[f+4>>2]|0;P=c[P+12>>2]|0;aa=+g[P>>2];$=+g[P+16>>2];_=+g[P+32>>2];Z=+g[P+4>>2];Y=+g[P+20>>2];o=+g[P+36>>2];k=+g[P+8>>2];r=+g[P+24>>2];y=+g[P+40>>2];T=+g[P+48>>2];S=+g[P+52>>2];R=+g[P+56>>2];O=c[f+12>>2]|0;X=+g[O>>2];W=+g[O+16>>2];p=+g[O+32>>2];V=+g[O+4>>2];U=+g[O+20>>2];q=+g[O+36>>2];x=+g[O+8>>2];v=+g[O+24>>2];t=+g[O+40>>2];Q=-+g[O+48>>2];E=-+g[O+52>>2];H=-+g[O+56>>2];K=+g[P>>2];L=+g[P+16>>2];D=+g[P+32>>2];B=+g[P+4>>2];A=+g[P+20>>2];z=+g[P+36>>2];w=+g[P+8>>2];u=+g[P+24>>2];s=+g[P+40>>2];P=c[(c[i>>2]|0)+64>>2]|0;n=-+g[j+48>>2];m=-+g[j+52>>2];C=-+g[j+56>>2];g[M+48>>2]=(aa*X+$*W+_*p)*n+(aa*V+$*U+_*q)*m+(aa*x+$*v+_*t)*C;g[M+48+4>>2]=(Z*X+Y*W+o*p)*n+(Z*V+Y*U+o*q)*m+(Z*x+Y*v+o*t)*C;g[M+48+8>>2]=(k*X+r*W+y*p)*n+(k*V+r*U+y*q)*m+(k*x+r*v+y*t)*C;g[M+48+12>>2]=0.0;Vb[P&127](M,i,M+48|0);C=+g[M>>2];y=+g[M+4>>2];r=+g[M+8>>2];k=+g[j+48>>2];m=+g[j+52>>2];n=+g[j+56>>2];o=n*(T*x+S*v+R*t+(x*Q+v*E+t*H)+((x*K+v*L+t*D)*C+(x*B+v*A+t*z)*y+(x*w+v*u+t*s)*r))+(k*(T*X+S*W+R*p+(X*Q+W*E+p*H)+((X*K+W*L+p*D)*C+(X*B+W*A+p*z)*y+(X*w+W*u+p*s)*r))+m*(T*V+S*U+R*q+(V*Q+U*E+q*H)+((V*K+U*L+q*D)*C+(V*B+U*A+q*z)*y+(V*w+U*u+q*s)*r)))-+g[j+64>>2];p=T*X+S*W+R*p+(X*Q+W*E+p*H)+((X*K+W*L+p*D)*C+(X*B+W*A+p*z)*y+(X*w+W*u+p*s)*r)-k*o;q=T*V+S*U+R*q+(V*Q+U*E+q*H)+((V*K+U*L+q*D)*C+(V*B+U*A+q*z)*y+(V*w+U*u+q*s)*r)-m*o;r=T*x+S*v+R*t+(x*Q+v*E+t*H)+((x*K+v*L+t*D)*C+(x*B+v*A+t*z)*y+(x*w+v*u+t*s)*r)-n*o;P=c[f+12>>2]|0;s=+g[P>>2];t=+g[P+4>>2];u=+g[P+8>>2];v=+g[P+16>>2];w=+g[P+20>>2];x=+g[P+24>>2];y=+g[P+32>>2];z=+g[P+36>>2];A=+g[P+40>>2];B=+g[P+48>>2];C=+g[P+52>>2];D=+g[P+56>>2];P=c[b+12>>2]|0;O=o<+g[P+752>>2];c[h+4>>2]=P;if(O){P=c[f+12>>2]|0;$=k*+g[P+16>>2]+m*+g[P+20>>2]+n*+g[P+24>>2];aa=k*+g[P+32>>2]+m*+g[P+36>>2]+n*+g[P+40>>2];g[M+48>>2]=+g[P>>2]*k+ +g[P+4>>2]*m+ +g[P+8>>2]*n;g[M+48+4>>2]=$;g[M+48+8>>2]=aa;g[M+48+12>>2]=0.0;g[M+32>>2]=u*r+(s*p+t*q)+B;g[M+32+4>>2]=p*v+q*w+r*x+C;g[M+32+8>>2]=p*y+q*z+r*A+D;g[M+32+12>>2]=0.0;Ub[c[(c[h>>2]|0)+16>>2]&15](h,M+48|0,M+32|0,o);}if((c[i+4>>2]|0)<7?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+24>>2]|0):0){k=+g[j+56>>2];if(+F(+k)>.7071067690849304){n=+g[j+52>>2];aa=1.0/+G(+(k*k+n*n));m=0.0;n=n*aa;k=-(k*aa);}else{aa=+g[j+48>>2];m=+g[j+52>>2];k=1.0/+G(+(aa*aa+m*m));m=-(m*k);n=0.0;k=aa*k;}H=.019999999552965164/+Db[c[(c[i>>2]|0)+16>>2]&15](i);H=(H>.39269909262657166?.39269909262657166:H)*.5;E=+J(+H)/+G(+(m*m+k*k+n*n));L=m*E;K=k*E;E=n*E;H=+I(+H);f=c[b+20>>2]|0;if((f|0)>0){i=0;do{v=+g[j+48>>2];aa=+g[j+52>>2];B=+g[j+56>>2];z=+(i|0)*(6.2831854820251465/+(f|0))*.5;$=+J(+z)/+G(+(v*v+aa*aa+B*B));z=+I(+z);A=E*-(aa*$)+(L*z+H*-(v*$))-K*-(B*$);x=L*-(B*$)+(K*z+H*-(aa*$))-E*-(v*$);da=K*-(v*$)+(E*z+H*-(B*$))-L*-(aa*$);D=H*z-L*-(v*$)-K*-(aa*$)-E*-(B*$);ia=B*$*x+(v*$*D+z*A)-aa*$*da;ha=v*$*da+(z*x+aa*$*D)-B*$*A;la=aa*$*A+(B*$*D+z*da)-v*$*x;da=z*D-v*$*A-aa*$*x-B*$*da;f=(a[b+16>>0]|0)!=0;ba=f?e:d;f=f?d:e;P=c[ba+4>>2]|0;O=c[f+4>>2]|0;ba=c[ba+12>>2]|0;$=+g[ba>>2];B=+g[ba+4>>2];x=+g[ba+8>>2];aa=+g[ba+16>>2];A=+g[ba+20>>2];v=+g[ba+24>>2];D=+g[ba+32>>2];z=+g[ba+36>>2];t=+g[ba+40>>2];V=+g[ba+48>>2];W=+g[ba+52>>2];X=+g[ba+56>>2];ba=c[f+12>>2]|0;R=+g[ba>>2];S=+g[ba+16>>2];p=+g[ba+32>>2];T=+g[ba+4>>2];U=+g[ba+20>>2];q=+g[ba+36>>2];w=+g[ba+8>>2];u=+g[ba+24>>2];s=+g[ba+40>>2];Y=-+g[ba+48>>2];Z=-+g[ba+52>>2];_=-+g[ba+56>>2];ga=ia*(2.0/(ia*ia+ha*ha+la*la+da*da));n=ha*(2.0/(ia*ia+ha*ha+la*la+da*da));ca=la*(2.0/(ia*ia+ha*ha+la*la+da*da));na=x*(ia*ca-da*n)+(B*(ia*n+da*ca)+$*(1.0-(ha*n+la*ca)));ka=x*(ha*ca+da*ga)+($*(ia*n-da*ca)+B*(1.0-(ia*ga+la*ca)));k=$*(ia*ca+da*n)+B*(ha*ca-da*ga)+x*(1.0-(ia*ga+ha*n));ma=v*(ia*ca-da*n)+(A*(ia*n+da*ca)+aa*(1.0-(ha*n+la*ca)));ja=v*(ha*ca+da*ga)+(aa*(ia*n-da*ca)+A*(1.0-(ia*ga+la*ca)));y=aa*(ia*ca+da*n)+A*(ha*ca-da*ga)+v*(1.0-(ia*ga+ha*n));oa=t*(ia*ca-da*n)+(z*(ia*n+da*ca)+D*(1.0-(ha*n+la*ca)));la=t*(ha*ca+da*ga)+(D*(ia*n-da*ca)+z*(1.0-(ia*ga+la*ca)));n=D*(ia*ca+da*n)+z*(ha*ca-da*ga)+t*(1.0-(ia*ga+ha*n));ha=+g[ba>>2];ga=+g[ba+16>>2];ia=+g[ba+32>>2];da=+g[ba+4>>2];ca=+g[ba+20>>2];ea=+g[ba+36>>2];m=+g[ba+8>>2];r=+g[ba+24>>2];o=+g[ba+40>>2];ba=c[(c[P>>2]|0)+64>>2]|0;fa=-+g[O+48>>2];Q=-+g[O+52>>2];C=-+g[O+56>>2];g[M+32>>2]=(ia*oa+(ha*na+ga*ma))*fa+(ea*oa+(da*na+ca*ma))*Q+(o*oa+(m*na+r*ma))*C;g[M+32+4>>2]=(ia*la+(ha*ka+ga*ja))*fa+(ea*la+(da*ka+ca*ja))*Q+(o*la+(m*ka+r*ja))*C;g[M+32+8>>2]=(ia*n+(ha*k+ga*y))*fa+(ea*n+(da*k+ca*y))*Q+(o*n+(m*k+r*y))*C;g[M+32+12>>2]=0.0;Vb[ba&127](M+48|0,P,M+32|0);C=+g[M+48>>2];y=+g[M+48+4>>2];r=+g[M+48+8>>2];k=+g[O+48>>2];m=+g[O+52>>2];n=+g[O+56>>2];o=n*(V*w+W*u+X*s+(w*Y+u*Z+s*_)+(($*w+aa*u+D*s)*C+(B*w+A*u+z*s)*y+(x*w+v*u+t*s)*r))+(k*(V*R+W*S+X*p+(R*Y+S*Z+p*_)+(($*R+aa*S+D*p)*C+(B*R+A*S+z*p)*y+(x*R+v*S+t*p)*r))+m*(V*T+W*U+X*q+(T*Y+U*Z+q*_)+(($*T+aa*U+D*q)*C+(B*T+A*U+z*q)*y+(x*T+v*U+t*q)*r)))-+g[O+64>>2];p=V*R+W*S+X*p+(R*Y+S*Z+p*_)+(($*R+aa*S+D*p)*C+(B*R+A*S+z*p)*y+(x*R+v*S+t*p)*r)-k*o;q=V*T+W*U+X*q+(T*Y+U*Z+q*_)+(($*T+aa*U+D*q)*C+(B*T+A*U+z*q)*y+(x*T+v*U+t*q)*r)-m*o;r=V*w+W*u+X*s+(w*Y+u*Z+s*_)+(($*w+aa*u+D*s)*C+(B*w+A*u+z*s)*y+(x*w+v*u+t*s)*r)-n*o;O=c[f+12>>2]|0;s=+g[O>>2];t=+g[O+4>>2];u=+g[O+8>>2];v=+g[O+16>>2];w=+g[O+20>>2];x=+g[O+24>>2];y=+g[O+32>>2];z=+g[O+36>>2];A=+g[O+40>>2];B=+g[O+48>>2];C=+g[O+52>>2];D=+g[O+56>>2];O=c[b+12>>2]|0;P=o<+g[O+752>>2];c[h+4>>2]=O;if(P){ba=c[f+12>>2]|0;na=k*+g[ba+16>>2]+m*+g[ba+20>>2]+n*+g[ba+24>>2];oa=k*+g[ba+32>>2]+m*+g[ba+36>>2]+n*+g[ba+40>>2];g[M+32>>2]=+g[ba>>2]*k+ +g[ba+4>>2]*m+ +g[ba+8>>2]*n;g[M+32+4>>2]=na;g[M+32+8>>2]=oa;g[M+32+12>>2]=0.0;g[M+16>>2]=u*r+(s*p+t*q)+B;g[M+16+4>>2]=p*v+q*w+r*x+C;g[M+16+8>>2]=p*y+q*z+r*A+D;g[M+16+12>>2]=0.0;Ub[c[(c[h>>2]|0)+16>>2]&15](h,M+32|0,M+16|0,o);}i=i+1|0;f=c[b+20>>2]|0;}while((i|0)<(f|0))}}do if((a[b+8>>0]|0?c[(c[b+12>>2]|0)+748>>2]|0:0)?(N=c[h+4>>2]|0,c[N+748>>2]|0):0){i=c[N+740>>2]|0;j=c[(c[h+8>>2]|0)+8>>2]|0;f=c[(c[h+12>>2]|0)+8>>2]|0;if((i|0)==(j|0)){Ue(N,i+4|0,f+4|0);break}else{Ue(N,f+4|0,j+4|0);break}}while(0);l=M;return}function Jc(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;c[d+168>>2]=c[d+152>>2];c[e>>2]=9136;c[e+52>>2]=282;a[e+60>>0]=0;a[e+80>>0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100>>0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120>>0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140>>0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;c[e+144>>2]=0;a[e+164>>0]=1;c[e+160>>2]=0;c[e+152>>2]=0;c[e+156>>2]=0;c[e+168>>2]=0;c[e+4>>2]=-8388609;c[e+8>>2]=-8388609;c[e+12>>2]=-8388609;g[e+16>>2]=0.0;c[e+20>>2]=2139095039;c[e+24>>2]=2139095039;c[e+28>>2]=2139095039;g[e+32>>2]=0.0;f=c[d+56>>2]|0;if(h){c[e+56>>2]=fA(f|0)|0;a[e+4>>0]=a[d+4+3>>0]|0;a[e+5>>0]=a[d+4+2>>0]|0;a[e+6>>0]=a[d+4+1>>0]|0;a[e+7>>0]=a[d+4>>0]|0;a[e+8>>0]=a[d+8+3>>0]|0;a[e+9>>0]=a[d+8+2>>0]|0;a[e+10>>0]=a[d+8+1>>0]|0;a[e+11>>0]=a[d+8>>0]|0;a[e+12>>0]=a[d+12+3>>0]|0;a[e+13>>0]=a[d+12+2>>0]|0;a[e+14>>0]=a[d+12+1>>0]|0;a[e+15>>0]=a[d+12>>0]|0;a[e+16>>0]=a[d+16+3>>0]|0;a[e+17>>0]=a[d+16+2>>0]|0;a[e+18>>0]=a[d+16+1>>0]|0;a[e+19>>0]=a[d+16>>0]|0;a[e+20>>0]=a[d+20+3>>0]|0;a[e+21>>0]=a[d+20+2>>0]|0;a[e+22>>0]=a[d+20+1>>0]|0;a[e+23>>0]=a[d+20>>0]|0;a[e+24>>0]=a[d+24+3>>0]|0;a[e+25>>0]=a[d+24+2>>0]|0;a[e+26>>0]=a[d+24+1>>0]|0;a[e+27>>0]=a[d+24>>0]|0;a[e+28>>0]=a[d+28+3>>0]|0;a[e+29>>0]=a[d+28+2>>0]|0;a[e+30>>0]=a[d+28+1>>0]|0;a[e+31>>0]=a[d+28>>0]|0;a[e+32>>0]=a[d+32+3>>0]|0;a[e+33>>0]=a[d+32+2>>0]|0;a[e+34>>0]=a[d+32+1>>0]|0;a[e+35>>0]=a[d+32>>0]|0;a[e+36>>0]=a[d+36+3>>0]|0;a[e+37>>0]=a[d+36+2>>0]|0;a[e+38>>0]=a[d+36+1>>0]|0;a[e+39>>0]=a[d+36>>0]|0;a[e+40>>0]=a[d+40+3>>0]|0;a[e+41>>0]=a[d+40+2>>0]|0;a[e+42>>0]=a[d+40+1>>0]|0;a[e+43>>0]=a[d+40>>0]|0;a[e+44>>0]=a[d+44+3>>0]|0;a[e+45>>0]=a[d+44+2>>0]|0;a[e+46>>0]=a[d+44+1>>0]|0;a[e+47>>0]=a[d+44>>0]|0;a[e+48>>0]=a[d+48+3>>0]|0;a[e+49>>0]=a[d+48+2>>0]|0;a[e+50>>0]=a[d+48+1>>0]|0;a[e+51>>0]=a[d+48>>0]|0;c[e+144>>2]=fA(c[d+144>>2]|0)|0;f=fA(c[d+168>>2]|0)|0;}else{c[e+56>>2]=f;c[e+4>>2]=c[d+4>>2];c[e+4+4>>2]=c[d+4+4>>2];c[e+4+8>>2]=c[d+4+8>>2];c[e+4+12>>2]=c[d+4+12>>2];c[e+20>>2]=c[d+20>>2];c[e+20+4>>2]=c[d+20+4>>2];c[e+20+8>>2]=c[d+20+8>>2];c[e+20+12>>2]=c[d+20+12>>2];c[e+36>>2]=c[d+36>>2];c[e+36+4>>2]=c[d+36+4>>2];c[e+36+8>>2]=c[d+36+8>>2];c[e+36+12>>2]=c[d+36+12>>2];c[e+144>>2]=c[d+144>>2];f=c[d+168>>2]|0;}c[e+168>>2]=f;a[e+60>>0]=a[d+60>>0]|0;k=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){f=c[e+96>>2]|0;if(f|0){if(a[e+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[e+96>>2]=0;}a[e+100>>0]=0;c[e+96>>2]=e+172;c[e+88>>2]=k;c[e+92>>2]=k;if(h)if((k|0)>0){i=0;j=c[d+96>>2]|0;f=e+172|0;do{l=j+(i<<6)|0;n=f+(i<<6)|0;a[n>>0]=a[l+3>>0]|0;a[n+1>>0]=a[l+2>>0]|0;a[n+2>>0]=a[l+1>>0]|0;a[n+3>>0]=a[l>>0]|0;n=j+(i<<6)+4|0;l=f+(i<<6)+4|0;a[l>>0]=a[n+3>>0]|0;a[l+1>>0]=a[n+2>>0]|0;a[l+2>>0]=a[n+1>>0]|0;a[l+3>>0]=a[n>>0]|0;l=j+(i<<6)+8|0;n=f+(i<<6)+8|0;a[n>>0]=a[l+3>>0]|0;a[n+1>>0]=a[l+2>>0]|0;a[n+2>>0]=a[l+1>>0]|0;a[n+3>>0]=a[l>>0]|0;n=j+(i<<6)+12|0;f=f+(i<<6)+12|0;a[f>>0]=a[n+3>>0]|0;a[f+1>>0]=a[n+2>>0]|0;a[f+2>>0]=a[n+1>>0]|0;a[f+3>>0]=a[n>>0]|0;f=c[d+96>>2]|0;n=f+(i<<6)+16|0;l=c[e+96>>2]|0;m=l+(i<<6)+16|0;a[m>>0]=a[n+3>>0]|0;a[m+1>>0]=a[n+2>>0]|0;a[m+2>>0]=a[n+1>>0]|0;a[m+3>>0]=a[n>>0]|0;m=f+(i<<6)+20|0;n=l+(i<<6)+20|0;a[n>>0]=a[m+3>>0]|0;a[n+1>>0]=a[m+2>>0]|0;a[n+2>>0]=a[m+1>>0]|0;a[n+3>>0]=a[m>>0]|0;n=f+(i<<6)+24|0;m=l+(i<<6)+24|0;a[m>>0]=a[n+3>>0]|0;a[m+1>>0]=a[n+2>>0]|0;a[m+2>>0]=a[n+1>>0]|0;a[m+3>>0]=a[n>>0]|0;f=f+(i<<6)+28|0;l=l+(i<<6)+28|0;a[l>>0]=a[f+3>>0]|0;a[l+1>>0]=a[f+2>>0]|0;a[l+2>>0]=a[f+1>>0]|0;a[l+3>>0]=a[f>>0]|0;j=c[d+96>>2]|0;l=fA(c[j+(i<<6)+32>>2]|0)|0;f=c[e+96>>2]|0;c[f+(i<<6)+32>>2]=l;c[f+(i<<6)+36>>2]=fA(c[j+(i<<6)+36>>2]|0)|0;c[f+(i<<6)+40>>2]=fA(c[j+(i<<6)+40>>2]|0)|0;i=i+1|0;}while((i|0)!=(k|0))}else f=e+172|0;else if((k|0)>0){i=0;j=c[d+96>>2]|0;f=e+172|0;do{m=j+(i<<6)|0;n=f+(i<<6)|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];n=(c[d+96>>2]|0)+(i<<6)+16|0;f=(c[e+96>>2]|0)+(i<<6)+16|0;c[f>>2]=c[n>>2];c[f+4>>2]=c[n+4>>2];c[f+8>>2]=c[n+8>>2];c[f+12>>2]=c[n+12>>2];j=c[d+96>>2]|0;f=c[e+96>>2]|0;c[f+(i<<6)+32>>2]=c[j+(i<<6)+32>>2];c[f+(i<<6)+36>>2]=c[j+(i<<6)+36>>2];c[f+(i<<6)+40>>2]=c[j+(i<<6)+40>>2];i=i+1|0;}while((i|0)!=(k|0))}else f=e+172|0;if(!f){f=k<<6;i=e+92|0;j=e+88|0;k=e+96|0;l=e+100|0;}else{if(a[e+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[e+96>>2]=0;f=k<<6;i=e+92|0;j=e+88|0;k=e+96|0;l=e+100|0;}}else{f=c[e+136>>2]|0;if(f|0){if(a[e+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[e+136>>2]=0;}a[e+140>>0]=0;c[e+136>>2]=e+172;c[e+128>>2]=k;c[e+132>>2]=k;if(h){if((k|0)>0){i=c[d+136>>2]|0;f=0;do{b[e+172+(f<<4)>>1]=NF(b[i+(f<<4)>>1]|0)|0;b[e+172+(f<<4)+2>>1]=NF(b[i+(f<<4)+2>>1]|0)|0;b[e+172+(f<<4)+4>>1]=NF(b[i+(f<<4)+4>>1]|0)|0;b[e+172+(f<<4)+6>>1]=NF(b[i+(f<<4)+6>>1]|0)|0;b[e+172+(f<<4)+8>>1]=NF(b[i+(f<<4)+8>>1]|0)|0;b[e+172+(f<<4)+10>>1]=NF(b[i+(f<<4)+10>>1]|0)|0;c[e+172+(f<<4)+12>>2]=fA(c[i+(f<<4)+12>>2]|0)|0;f=f+1|0;}while((f|0)!=(k|0))}}else if((k|0)>0){i=c[d+136>>2]|0;f=0;do{b[e+172+(f<<4)>>1]=b[i+(f<<4)>>1]|0;b[e+172+(f<<4)+2>>1]=b[i+(f<<4)+2>>1]|0;b[e+172+(f<<4)+4>>1]=b[i+(f<<4)+4>>1]|0;b[e+172+(f<<4)+6>>1]=b[i+(f<<4)+6>>1]|0;b[e+172+(f<<4)+8>>1]=b[i+(f<<4)+8>>1]|0;b[e+172+(f<<4)+10>>1]=b[i+(f<<4)+10>>1]|0;c[e+172+(f<<4)+12>>2]=c[i+(f<<4)+12>>2];f=f+1|0;}while((f|0)!=(k|0))}c[e+136>>2]=0;f=k<<4;i=e+132|0;j=e+128|0;k=e+136|0;l=e+140|0;}a[l>>0]=0;c[k>>2]=0;c[j>>2]=0;c[i>>2]=0;k=e+172+f|0;f=c[d+168>>2]|0;i=c[e+160>>2]|0;if(i|0){if(a[e+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[e+160>>2]=0;}a[e+164>>0]=0;c[e+160>>2]=k;c[e+152>>2]=f;c[e+156>>2]=f;j=c[d+168>>2]|0;if(h){if((j|0)<=0){c[e>>2]=0;c[e+152>>2]=0;c[e+152+4>>2]=0;c[e+152+8>>2]=0;a[e+152+12>>0]=0;return 1}i=c[d+160>>2]|0;f=0;do{b[k+(f<<5)>>1]=NF(b[i+(f<<5)>>1]|0)|0;b[k+(f<<5)+2>>1]=NF(b[i+(f<<5)+2>>1]|0)|0;b[k+(f<<5)+4>>1]=NF(b[i+(f<<5)+4>>1]|0)|0;b[k+(f<<5)+6>>1]=NF(b[i+(f<<5)+6>>1]|0)|0;b[k+(f<<5)+8>>1]=NF(b[i+(f<<5)+8>>1]|0)|0;b[k+(f<<5)+10>>1]=NF(b[i+(f<<5)+10>>1]|0)|0;c[k+(f<<5)+12>>2]=fA(c[i+(f<<5)+12>>2]|0)|0;c[k+(f<<5)+16>>2]=fA(c[i+(f<<5)+16>>2]|0)|0;f=f+1|0;}while((f|0)!=(j|0));c[e>>2]=0;c[e+152>>2]=0;c[e+152+4>>2]=0;c[e+152+8>>2]=0;a[e+152+12>>0]=0;return 1}else{if((j|0)<=0){c[e>>2]=0;c[e+152>>2]=0;c[e+152+4>>2]=0;c[e+152+8>>2]=0;a[e+152+12>>0]=0;return 1}i=c[d+160>>2]|0;f=0;do{b[k+(f<<5)>>1]=b[i+(f<<5)>>1]|0;b[k+(f<<5)+2>>1]=b[i+(f<<5)+2>>1]|0;b[k+(f<<5)+4>>1]=b[i+(f<<5)+4>>1]|0;b[k+(f<<5)+6>>1]=b[i+(f<<5)+6>>1]|0;b[k+(f<<5)+8>>1]=b[i+(f<<5)+8>>1]|0;b[k+(f<<5)+10>>1]=b[i+(f<<5)+10>>1]|0;c[k+(f<<5)+12>>2]=c[i+(f<<5)+12>>2];c[k+(f<<5)+16>>2]=c[i+(f<<5)+16>>2];c[k+(f<<5)+20>>2]=0;c[k+(f<<5)+24>>2]=0;c[k+(f<<5)+28>>2]=0;f=f+1|0;}while((f|0)<(c[d+168>>2]|0));c[e>>2]=0;c[e+152>>2]=0;c[e+152+4>>2]=0;c[e+152+8>>2]=0;a[e+152+12>>0]=0;return 1}return 0}function Kc(b,d,e,f,h,i,j,k,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;n=n|0;var o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;C=l;l=l+4224|0;if(((c[e+4>>2]|0)+-17|0)>>>0<2)A=((c[f+4>>2]|0)+-17|0)>>>0<2;else A=0;b=0;do{He();v=+g[24676+(b<<4)>>2];w=+g[24676+(b<<4)+4>>2];x=+g[24676+(b<<4)+8>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[C+1248+(b<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[C+1248+(b<<4)+4>>2]=z;g[C+1248+(b<<4)+8>>2]=y;g[C+1248+(b<<4)+12>>2]=0.0;y=v*+g[i+4>>2]+w*+g[i+20>>2]+x*+g[i+36>>2];z=v*+g[i+8>>2]+w*+g[i+24>>2]+x*+g[i+40>>2];g[C+256+(b<<4)>>2]=v*+g[i>>2]+w*+g[i+16>>2]+x*+g[i+32>>2];g[C+256+(b<<4)+4>>2]=y;g[C+256+(b<<4)+8>>2]=z;g[C+256+(b<<4)+12>>2]=0.0;b=b+1|0;}while((b|0)!=42);q=pb[c[(c[e>>2]|0)+84>>2]&127](e)|0;if((q|0)>0){b=0;p=42;while(1){Vb[c[(c[e>>2]|0)+88>>2]&127](e,b,C+176|0);y=+g[C+176>>2];z=+g[C+176+4>>2];x=+g[C+176+8>>2];w=y*+g[h+16>>2]+z*+g[h+20>>2]+x*+g[h+24>>2];v=y*+g[h+32>>2]+z*+g[h+36>>2]+x*+g[h+40>>2];g[C+176>>2]=+g[h>>2]*y+ +g[h+4>>2]*z+ +g[h+8>>2]*x;g[C+176+4>>2]=w;g[C+176+8>>2]=v;g[C+176+12>>2]=0.0;He();r=24676+(p<<4)|0;c[r>>2]=c[C+176>>2];c[r+4>>2]=c[C+176+4>>2];c[r+8>>2]=c[C+176+8>>2];c[r+12>>2]=c[C+176+12>>2];v=+g[C+176>>2];w=+g[C+176+4>>2];x=+g[C+176+8>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[C+1248+(p<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[C+1248+(p<<4)+4>>2]=z;g[C+1248+(p<<4)+8>>2]=y;g[C+1248+(p<<4)+12>>2]=0.0;y=v*+g[i+4>>2]+w*+g[i+20>>2]+x*+g[i+36>>2];z=v*+g[i+8>>2]+w*+g[i+24>>2]+x*+g[i+40>>2];g[C+256+(p<<4)>>2]=+g[i>>2]*v+ +g[i+16>>2]*w+ +g[i+32>>2]*x;g[C+256+(p<<4)+4>>2]=y;g[C+256+(p<<4)+8>>2]=z;g[C+256+(p<<4)+12>>2]=0.0;b=b+1|0;if((b|0)==(q|0))break;else p=p+1|0;}p=q+42|0;}else p=42;r=pb[c[(c[f>>2]|0)+84>>2]&127](f)|0;if((r|0)>0){b=0;q=p;while(1){Vb[c[(c[f>>2]|0)+88>>2]&127](f,b,C+176|0);y=+g[C+176>>2];z=+g[C+176+4>>2];x=+g[C+176+8>>2];w=y*+g[i+16>>2]+z*+g[i+20>>2]+x*+g[i+24>>2];v=y*+g[i+32>>2]+z*+g[i+36>>2]+x*+g[i+40>>2];g[C+176>>2]=+g[i>>2]*y+ +g[i+4>>2]*z+ +g[i+8>>2]*x;g[C+176+4>>2]=w;g[C+176+8>>2]=v;g[C+176+12>>2]=0.0;He();D=24676+(q<<4)|0;c[D>>2]=c[C+176>>2];c[D+4>>2]=c[C+176+4>>2];c[D+8>>2]=c[C+176+8>>2];c[D+12>>2]=c[C+176+12>>2];v=+g[C+176>>2];w=+g[C+176+4>>2];x=+g[C+176+8>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[C+1248+(q<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[C+1248+(q<<4)+4>>2]=z;g[C+1248+(q<<4)+8>>2]=y;g[C+1248+(q<<4)+12>>2]=0.0;y=v*+g[i+4>>2]+w*+g[i+20>>2]+x*+g[i+36>>2];z=v*+g[i+8>>2]+w*+g[i+24>>2]+x*+g[i+40>>2];g[C+256+(q<<4)>>2]=+g[i>>2]*v+ +g[i+16>>2]*w+ +g[i+32>>2]*x;g[C+256+(q<<4)+4>>2]=y;g[C+256+(q<<4)+8>>2]=z;g[C+256+(q<<4)+12>>2]=0.0;b=b+1|0;if((b|0)==(r|0))break;else q=q+1|0;}p=r+p|0;}Zb[c[(c[e>>2]|0)+76>>2]&127](e,C+1248|0,C+3232|0,p);Zb[c[(c[f>>2]|0)+76>>2]&127](f,C+256|0,C+2240|0,p);if((p|0)>0){v=999999984306749440.0;b=0;y=0.0;z=0.0;x=0.0;s=0.0;while(1){He();u=+g[24676+(b<<4)>>2];w=+g[24676+(b<<4)+4>>2];t=+g[24676+(b<<4)+12>>2];o=A?0.0:+g[24676+(b<<4)+8>>2];if(u*u+w*w+o*o>.01?(F=+g[C+3232+(b<<4)>>2],E=+g[C+3232+(b<<4)+4>>2],B=+g[C+3232+(b<<4)+8>>2],I=+g[C+2240+(b<<4)>>2],H=+g[C+2240+(b<<4)+4>>2],G=+g[C+2240+(b<<4)+8>>2],B=u*(I*+g[i>>2]+H*+g[i+4>>2]+G*+g[i+8>>2]+ +g[i+48>>2]-(F*+g[h>>2]+E*+g[h+4>>2]+B*+g[h+8>>2]+ +g[h+48>>2]))+w*(I*+g[i+16>>2]+H*+g[i+20>>2]+G*+g[i+24>>2]+ +g[i+52>>2]-(F*+g[h+16>>2]+E*+g[h+20>>2]+B*+g[h+24>>2]+ +g[h+52>>2]))+o*((A?0.0:I*+g[i+32>>2]+H*+g[i+36>>2]+G*+g[i+40>>2]+ +g[i+56>>2])-(A?0.0:F*+g[h+32>>2]+E*+g[h+36>>2]+B*+g[h+40>>2]+ +g[h+56>>2])),B<v):0)v=B;else{t=y;u=s;w=x;o=z;}b=b+1|0;if((b|0)==(p|0)){x=o;break}else{y=t;z=o;x=w;s=u;}}}else{v=999999984306749440.0;x=0.0;w=0.0;u=0.0;t=0.0;}switch(c[e+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:break;default:+Db[c[(c[e>>2]|0)+48>>2]&15](e);}switch(c[f+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:break;default:+Db[c[(c[f>>2]|0)+48>>2]&15](f);}if(v<0.0){D=0;l=C;return D|0}switch(c[e+4>>2]|0){case 8:{o=+g[e+28>>2]*+g[e+12>>2];break}case 0:{o=+g[e+44>>2];break}case 1:{o=+g[e+44>>2];break}case 13:{o=+g[e+44>>2];break}case 11:{o=+g[e+44>>2];break}case 10:{o=+g[e+44>>2];break}case 4:case 5:{o=+g[e+44>>2];break}default:o=+Db[c[(c[e>>2]|0)+48>>2]&15](e);}b=c[f+4>>2]|0;switch(b|0){case 8:{s=+g[f+28>>2]*+g[f+12>>2];b=8;break}case 0:{s=+g[f+44>>2];b=0;break}case 1:{s=+g[f+44>>2];b=1;break}case 13:{s=+g[f+44>>2];b=13;break}case 11:{s=+g[f+44>>2];b=11;break}case 10:{s=+g[f+44>>2];b=10;break}case 4:case 5:{s=+g[f+44>>2];break}default:{s=+Db[c[(c[f>>2]|0)+48>>2]&15](f);b=c[f+4>>2]|0;}}o=v+(o+s+.5);c[C+176>>2]=9332;c[C+176+4>>2]=0;c[C+176+8>>2]=1065353216;c[C+176+12>>2]=0;g[C+176+16>>2]=0.0;c[C+176+20>>2]=0;c[C+176+24>>2]=d;c[C+176+28>>2]=e;c[C+176+32>>2]=f;c[C+176+36>>2]=c[e+4>>2];c[C+176+40>>2]=b;g[C+176+44>>2]=+Db[c[(c[e>>2]|0)+48>>2]&15](e);g[C+176+48>>2]=+Db[c[(c[f>>2]|0)+48>>2]&15](f);a[C+176+52>>0]=0;c[C+176+60>>2]=-1;c[C+176+72>>2]=1;c[C+176+76>>2]=1;G=u*o+ +g[h+48>>2];H=w*o+ +g[h+52>>2];I=x*o+ +g[h+56>>2];c[C+44>>2]=c[h>>2];c[C+44+4>>2]=c[h+4>>2];c[C+44+8>>2]=c[h+8>>2];c[C+44+12>>2]=c[h+12>>2];c[C+44+16>>2]=c[h+16>>2];c[C+44+16+4>>2]=c[h+16+4>>2];c[C+44+16+8>>2]=c[h+16+8>>2];c[C+44+16+12>>2]=c[h+16+12>>2];c[C+44+32>>2]=c[h+32>>2];c[C+44+32+4>>2]=c[h+32+4>>2];c[C+44+32+8>>2]=c[h+32+8>>2];c[C+44+32+12>>2]=c[h+32+12>>2];g[C+44+48>>2]=G;g[C+44+52>>2]=H;g[C+44+56>>2]=I;g[C+44+60>>2]=0.0;c[C+44+64>>2]=c[i>>2];c[C+44+64+4>>2]=c[i+4>>2];c[C+44+64+8>>2]=c[i+8>>2];c[C+44+64+12>>2]=c[i+12>>2];c[C+44+80>>2]=c[i+16>>2];c[C+44+80+4>>2]=c[i+16+4>>2];c[C+44+80+8>>2]=c[i+16+8>>2];c[C+44+80+12>>2]=c[i+16+12>>2];c[C+44+96>>2]=c[i+32>>2];c[C+44+96+4>>2]=c[i+32+4>>2];c[C+44+96+8>>2]=c[i+32+8>>2];c[C+44+96+12>>2]=c[i+32+12>>2];c[C+44+112>>2]=c[i+48>>2];c[C+44+112+4>>2]=c[i+48+4>>2];c[C+44+112+8>>2]=c[i+48+8>>2];c[C+44+112+12>>2]=c[i+48+12>>2];g[C+44+128>>2]=999999984306749440.0;c[C>>2]=9216;a[C+40>>0]=0;g[C+176+4>>2]=-u;g[C+176+8>>2]=-w;g[C+176+12>>2]=-x;g[C+176+16>>2]=0.0;Fc(C+176|0,C+44|0,C,n,0);o=o-+g[C+36>>2];b=a[C+40>>0]|0;if(b<<24>>24){H=+g[C+24>>2]-w*o;I=+g[C+28>>2]-x*o;g[k>>2]=+g[C+20>>2]-u*o;g[k+4>>2]=H;g[k+8>>2]=I;g[k+12>>2]=0.0;c[m>>2]=c[C+20>>2];c[m+4>>2]=c[C+20+4>>2];c[m+8>>2]=c[C+20+8>>2];c[m+12>>2]=c[C+20+12>>2];g[j>>2]=u;g[j+4>>2]=w;g[j+8>>2]=x;g[j+12>>2]=t;}D=b<<24>>24!=0;l=C;return D|0}function Lc(d,e){d=d|0;e=+e;var f=0,h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;B=l;l=l+464|0;aj(11995);f=c[d+84>>2]|0;if(f|0)kb[f&31](d,e);kb[c[(c[d>>2]|0)+140>>2]&31](d,e);g[d+28>>2]=e;c[d+32>>2]=0;c[d+48>>2]=pb[c[(c[d>>2]|0)+20>>2]&127](d)|0;aj(12038);aj(12063);f=c[d+316>>2]|0;if((c[d+308>>2]|0)>0){h=0;do{s=c[d+24>>2]|0;nb[c[(c[s>>2]|0)+16>>2]&127](s,c[f+(h<<2)>>2]|0);h=h+1|0;f=c[d+316>>2]|0;}while((h|0)<(c[d+308>>2]|0))}if(f|0){if(a[d+320>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+316>>2]=0;}a[d+320>>0]=1;c[d+316>>2]=0;c[d+308>>2]=0;c[d+312>>2]=0;f=c[2388]|0;s=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=s;do if(!s){if(c[f+4>>2]|0){Za(B+368|0,0)|0;s=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[s+4>>2]|0)+(((c[B+368>>2]|0)-(c[s>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2388]|0;}c[2388]=c[f+20>>2];}while(0);a:do if((c[d+232>>2]|0)>0){s=B+304+48|0;r=B+368+44|0;q=0;while(1){j=c[(c[d+240>>2]|0)+(q<<2)>>2]|0;g[j+244>>2]=1.0;b:do switch(c[j+216>>2]|0){case 2:case 5:break;default:if(((c[j+204>>2]&3|0)==0?(Gg(j+4|0,+g[j+312>>2],+g[j+316>>2],+g[j+320>>2],j+328|0,e,B+304|0),t=+g[s>>2],u=t-+g[j+52>>2],v=+g[B+304+52>>2],w=v-+g[j+56>>2],x=+g[B+304+56>>2],y=x-+g[j+60>>2],a[d+44>>0]|0):0)?(o=+g[j+252>>2],o*o!=0.0?o*o<u*u+w*w+y*y:0):0){aj(12100);if((c[(c[j+192>>2]|0)+4>>2]|0)<20?(c[5817]=(c[5817]|0)+1,i=c[d+68>>2]|0,i=pb[c[(c[i>>2]|0)+36>>2]&127](i)|0,p=c[d+24>>2]|0,g[B+368+4>>2]=1.0,c[B+368+12>>2]=c[j+52>>2],c[B+368+12+4>>2]=c[j+52+4>>2],c[B+368+12+8>>2]=c[j+52+8>>2],c[B+368+12+12>>2]=c[j+52+12>>2],c[B+368+28>>2]=c[s>>2],c[B+368+28+4>>2]=c[s+4>>2],c[B+368+28+8>>2]=c[s+8>>2],c[B+368+28+12>>2]=c[s+12>>2],c[B+368+76>>2]=0,c[B+368>>2]=4460,c[B+368+80>>2]=j,c[B+368+88>>2]=i,c[B+368+92>>2]=p,p=c[j+248>>2]|0,c[B+248+8>>2]=0,c[B+248+12>>2]=1065353216,c[B+248+16>>2]=1065353216,c[B+248+20>>2]=1065353216,g[B+248+24>>2]=0.0,c[B+248>>2]=6796,c[B+248+4>>2]=8,c[B+248+28>>2]=p,c[B+248+44>>2]=p,c[B+368+84>>2]=c[d+56>>2],p=c[j+188>>2]|0,b[B+368+8>>1]=b[p+4>>1]|0,b[B+368+10>>1]=b[p+6>>1]|0,c[B+184+48>>2]=c[s>>2],c[B+184+48+4>>2]=c[s+4>>2],c[B+184+48+8>>2]=c[s+8>>2],c[B+184+48+12>>2]=c[s+12>>2],c[B+184>>2]=c[j+4>>2],c[B+184+4>>2]=c[j+4+4>>2],c[B+184+8>>2]=c[j+4+8>>2],c[B+184+12>>2]=c[j+4+12>>2],c[B+184+16>>2]=c[j+20>>2],c[B+184+16+4>>2]=c[j+20+4>>2],c[B+184+16+8>>2]=c[j+20+8>>2],c[B+184+16+12>>2]=c[j+20+12>>2],c[B+184+32>>2]=c[j+36>>2],c[B+184+32+4>>2]=c[j+36+4>>2],c[B+184+32+8>>2]=c[j+36+8>>2],c[B+184+32+12>>2]=c[j+36+12>>2],zd(d,B+248|0,j+4|0,B+184|0,B+368|0,0.0),z=+g[B+368+4>>2],z<1.0):0){k=z*(t-+g[j+52>>2]);m=z*(v-+g[j+56>>2]);n=z*(x-+g[j+60>>2]);o=-(m*+g[B+368+48>>2])-k*+g[r>>2]-n*+g[B+368+52>>2];p=c[d+24>>2]|0;p=zb[c[(c[p>>2]|0)+12>>2]&63](p,j,c[B+368+76>>2]|0)|0;h=c[d+308>>2]|0;if((h|0)==(c[d+312>>2]|0)?(A=h|0?h<<1:1,(h|0)<(A|0)):0){if(!A)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((A<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+308>>2]|0;}if((h|0)>0){i=0;do{c[f+(i<<2)>>2]=c[(c[d+316>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0))}i=c[d+316>>2]|0;if(i){if(a[d+320>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);h=c[d+308>>2]|0;}c[d+316>>2]=0;}a[d+320>>0]=1;c[d+316>>2]=f;c[d+312>>2]=A;f=h;}else f=h;c[(c[d+316>>2]|0)+(f<<2)>>2]=p;c[d+308>>2]=f+1;k=k+ +g[j+52>>2];m=m+ +g[j+56>>2];n=n+ +g[j+60>>2];i=c[B+368+76>>2]|0;N=+g[i+4>>2];M=+g[i+20>>2];L=+g[i+36>>2];K=+g[i+8>>2];J=+g[i+24>>2];I=+g[i+40>>2];H=+g[i+12>>2];F=+g[i+28>>2];D=+g[i+44>>2];G=-+g[i+52>>2];E=-+g[i+56>>2];C=-+g[i+60>>2];c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0;g[B+16>>2]=k*N+m*M+n*L+(N*G+M*E+L*C);g[B+20>>2]=k*K+m*J+n*I+(K*G+J*E+I*C);g[B+24>>2]=k*H+m*F+n*D+(H*G+F*E+D*C);g[B+28>>2]=0.0;c[B+64>>2]=c[r>>2];c[B+64+4>>2]=c[r+4>>2];c[B+64+8>>2]=c[r+8>>2];c[B+64+12>>2]=c[r+12>>2];g[B+80>>2]=o;g[B+84>>2]=0.0;g[B+88>>2]=0.0;g[B+92>>2]=0.0;c[B+112>>2]=0;a[B+116>>0]=0;c[B+120>>2]=0;c[B+120+4>>2]=0;c[B+120+8>>2]=0;c[B+120+12>>2]=0;c[B+120+16>>2]=0;c[B+120+20>>2]=0;c[B+120+24>>2]=0;c[B+120+28>>2]=0;i=af(p,B)|0;g[p+4+(i*184|0)+92>>2]=0.0;o=+g[j+224>>2]*+g[(c[B+368+76>>2]|0)+224>>2];o=o<-10.0?-10.0:o;g[p+4+(i*184|0)+84>>2]=o>10.0?10.0:o;c[p+4+(i*184|0)+48>>2]=c[j+52>>2];c[p+4+(i*184|0)+48+4>>2]=c[j+52+4>>2];c[p+4+(i*184|0)+48+8>>2]=c[j+52+8>>2];c[p+4+(i*184|0)+48+12>>2]=c[j+52+12>>2];g[p+4+(i*184|0)+32>>2]=k;g[p+4+(i*184|0)+36>>2]=m;g[p+4+(i*184|0)+40>>2]=n;g[p+4+(i*184|0)+44>>2]=0.0;}f=c[2388]|0;p=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=p;if(!p){if(c[f+4>>2]|0){Za(B+368|0,0)|0;p=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[p+4>>2]|0)+(((c[B+368>>2]|0)-(c[p>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break b;f=c[2388]|0;}c[2388]=c[f+20>>2];}}}while(0);q=q+1|0;if((q|0)>=(c[d+232>>2]|0))break a}}while(0);f=c[2388]|0;A=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=A;do if(!A){if(c[f+4>>2]|0){Za(B+368|0,0)|0;A=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[A+4>>2]|0)+(((c[B+368>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2388]|0;}c[2388]=c[f+20>>2];}while(0);lb[c[(c[d>>2]|0)+44>>2]&511](d);lb[c[(c[d>>2]|0)+148>>2]&511](d);g[d+104>>2]=e;nb[c[(c[d>>2]|0)+152>>2]&127](d,d+92|0);kb[c[(c[d>>2]|0)+144>>2]&31](d,e);aj(12024);if((c[d+280>>2]|0)>0){f=0;do{A=c[(c[d+288>>2]|0)+(f<<2)>>2]|0;Xb[c[(c[A>>2]|0)+8>>2]&7](A,d,e);f=f+1|0;}while((f|0)<(c[d+280>>2]|0))}f=c[2388]|0;A=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=A;do if(!A){if(c[f+4>>2]|0){Za(B+368|0,0)|0;A=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[A+4>>2]|0)+(((c[B+368>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2388]|0;}c[2388]=c[f+20>>2];}while(0);kb[c[(c[d>>2]|0)+156>>2]&31](d,e);f=c[d+80>>2]|0;if(f|0)kb[f&31](d,e);f=c[2388]|0;d=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=d;if(d|0){l=B;return}do if(c[f+4>>2]|0){Za(B+368|0,0)|0;d=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[d+4>>2]|0)+(((c[B+368>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[f+16>>2]|0)){f=c[2388]|0;break}else{l=B;return}}while(0);c[2388]=c[f+20>>2];l=B;return}function Mc(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;H=l;l=l+192|0;aj(11134);d=c[b+1112>>2]|0;if((d|0)>0){G=0;do{F=c[(c[b+1120>>2]|0)+(G<<2)>>2]|0;E=c[F+24>>2]|0;if(E){i=H+144+4|0;j=i+44|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(j|0));g[H+144>>2]=9.999999747378752e-05;g[H+144+20>>2]=1.9999999494757503e-04;g[H+144+40>>2]=2.9999998514540493e-04;if((E|0)>0){i=c[F+32>>2]|0;j=c[F+12>>2]|0;d=0;e=0.0;f=0.0;h=0.0;do{D=c[i+(d<<2)>>2]|0;C=+g[j+(d<<2)>>2];e=e+ +g[D+8>>2]*C;f=f+C*+g[D+12>>2];h=h+C*+g[D+16>>2];d=d+1|0;}while((d|0)!=(E|0))}else{h=0.0;f=0.0;e=0.0;}r=+g[F+128>>2];t=e*r;s=f*r;r=h*r;g[F+228>>2]=t;g[F+232>>2]=s;g[F+236>>2]=r;g[F+240>>2]=0.0;if((E|0)>0){i=c[F+32>>2]|0;j=c[F+52>>2]|0;d=0;e=9.999999747378752e-05;f=0.0;h=0.0;k=0.0;m=1.9999999494757503e-04;n=0.0;o=0.0;p=0.0;q=2.9999998514540493e-04;do{D=c[i+(d<<2)>>2]|0;x=+g[D+8>>2]-t;y=+g[D+12>>2]-s;B=+g[D+16>>2]-r;z=+g[j+(d<<4)>>2];A=+g[j+(d<<4)+4>>2];C=+g[j+(d<<4)+8>>2];e=x*z+e;f=x*A+f;h=x*C+h;k=y*z+k;m=y*A+m;n=y*C+n;o=B*z+o;p=B*A+p;q=B*C+q;d=d+1|0;}while((d|0)!=(E|0));g[H+144>>2]=e;g[H+144+4>>2]=f;g[H+144+8>>2]=h;g[H+144+16>>2]=k;g[H+144+20>>2]=m;g[H+144+24>>2]=n;g[H+144+32>>2]=o;g[H+144+36>>2]=p;g[H+144+40>>2]=q;}if((a[22648]|0)==0?iy(22648)|0:0){g[5788]=9.999999747378752e-05;c[5789]=16;}Zc(H+144|0,H+96|0,H+48|0);c[F+108>>2]=c[F+228>>2];c[F+108+4>>2]=c[F+228+4>>2];c[F+108+8>>2]=c[F+228+8>>2];c[F+108+12>>2]=c[F+228+12>>2];c[F+60>>2]=c[H+96>>2];c[F+60+4>>2]=c[H+96+4>>2];c[F+60+8>>2]=c[H+96+8>>2];c[F+60+12>>2]=c[H+96+12>>2];c[F+76>>2]=c[H+96+16>>2];c[F+76+4>>2]=c[H+96+16+4>>2];c[F+76+8>>2]=c[H+96+16+8>>2];c[F+76+12>>2]=c[H+96+16+12>>2];c[F+92>>2]=c[H+96+32>>2];c[F+92+4>>2]=c[H+96+32+4>>2];c[F+92+8>>2]=c[H+96+32+8>>2];c[F+92+12>>2]=c[H+96+32+12>>2];m=+g[F+132>>2];K=+g[F+60>>2];n=+g[F+148>>2];J=+g[F+64>>2];o=+g[F+164>>2];A=+g[F+68>>2];p=+g[F+136>>2];q=+g[F+152>>2];r=+g[F+168>>2];s=+g[F+140>>2];t=+g[F+156>>2];C=+g[F+172>>2];I=+g[F+76>>2];e=+g[F+80>>2];B=+g[F+84>>2];k=+g[F+92>>2];h=+g[F+96>>2];f=+g[F+100>>2];u=(m*K+n*J+o*A)*K+(K*p+J*q+A*r)*J+(K*s+J*t+A*C)*A;v=(m*K+n*J+o*A)*I+(K*p+J*q+A*r)*e+(K*s+J*t+A*C)*B;w=(m*K+n*J+o*A)*k+(K*p+J*q+A*r)*h+(K*s+J*t+A*C)*f;x=(m*I+n*e+o*B)*K+(p*I+q*e+r*B)*J+(s*I+t*e+C*B)*A;y=(m*I+n*e+o*B)*I+(p*I+q*e+r*B)*e+(s*I+t*e+C*B)*B;z=(m*I+n*e+o*B)*k+(p*I+q*e+r*B)*h+(s*I+t*e+C*B)*f;A=K*(m*k+n*h+o*f)+(p*k+q*h+r*f)*J+(s*k+t*h+C*f)*A;B=I*(m*k+n*h+o*f)+(p*k+q*h+r*f)*e+(s*k+t*h+C*f)*B;C=(m*k+n*h+o*f)*k+(p*k+q*h+r*f)*h+(s*k+t*h+C*f)*f;g[F+180>>2]=u;g[F+184>>2]=v;g[F+188>>2]=w;g[F+192>>2]=0.0;g[F+196>>2]=x;g[F+200>>2]=y;g[F+204>>2]=z;g[F+208>>2]=0.0;g[F+212>>2]=A;g[F+216>>2]=B;g[F+220>>2]=C;g[F+224>>2]=0.0;c[F+316>>2]=0;c[F+316+4>>2]=0;c[F+316+8>>2]=0;c[F+316+12>>2]=0;c[F+316+16>>2]=0;c[F+316+20>>2]=0;c[F+316+24>>2]=0;c[F+316+28>>2]=0;if((E|0)>0){i=c[F+32>>2]|0;j=c[F+12>>2]|0;r=+g[F+228>>2];s=+g[F+232>>2];t=+g[F+236>>2];d=0;q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;e=0.0;do{D=c[i+(d<<2)>>2]|0;M=+g[j+(d<<2)>>2];J=+g[D+40>>2]*M;L=M*+g[D+44>>2];M=M*+g[D+48>>2];q=J+q;g[F+316>>2]=q;p=L+p;g[F+320>>2]=p;o=M+o;g[F+324>>2]=o;I=+g[D+8>>2]-r;K=+g[D+12>>2]-s;N=+g[D+16>>2]-t;n=n+(M*K-L*N);g[F+332>>2]=n;m=J*N-M*I+m;g[F+336>>2]=m;e=L*I-J*K+e;g[F+340>>2]=e;d=d+1|0;}while((d|0)!=(E|0));D=F+316|0;d=F+332|0;}else{D=F+316|0;d=F+332|0;q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;e=0.0;}M=+g[F+128>>2];N=1.0-+g[F+356>>2];g[F+316>>2]=q*M*N;g[F+320>>2]=M*p*N;g[F+324>>2]=M*o*N;g[F+328>>2]=0.0;N=1.0-+g[F+360>>2];g[d>>2]=(u*n+v*m+w*e)*N;g[F+336>>2]=(n*x+m*y+e*z)*N;g[F+340>>2]=N*(n*A+m*B+e*C);g[F+344>>2]=0.0;i=F+244|0;j=i+72|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(j|0));e=+g[F+364>>2];a:do if(e>0.0?(c[F+24>>2]|0)>0:0){d=0;while(1){j=c[(c[F+32>>2]|0)+(d<<2)>>2]|0;i=c[F+52>>2]|0;I=+g[i+(d<<4)>>2];J=+g[i+(d<<4)+4>>2];K=+g[i+(d<<4)+8>>2];L=+g[j+8>>2];M=+g[j+12>>2];N=+g[j+16>>2];M=M+e*(I*+g[F+76>>2]+J*+g[F+80>>2]+K*+g[F+84>>2]+ +g[F+112>>2]-M);N=N+e*(I*k+J*h+K*f+ +g[F+116>>2]-N);g[j+8>>2]=L+e*(I*+g[F+60>>2]+J*+g[F+64>>2]+K*+g[F+68>>2]+ +g[F+108>>2]-L);g[j+12>>2]=M;g[j+16>>2]=N;g[j+20>>2]=0.0;d=d+1|0;if((d|0)>=(c[F+24>>2]|0))break a;k=+g[F+92>>2];h=+g[F+96>>2];f=+g[F+100>>2];e=+g[F+364>>2];}}while(0);if(a[F+377>>0]|0){i=c[F+32>>2]|0;j=c[i>>2]|0;e=+g[j+8>>2];q=+g[j+12>>2];r=+g[j+16>>2];f=+g[j+20>>2];if((E|0)>1){d=1;m=e;p=e;n=f;o=r;k=f;h=q;f=q;e=r;do{j=c[i+(d<<2)>>2]|0;K=+g[j+8>>2];p=K<p?K:p;L=+g[j+12>>2];f=L<f?L:f;M=+g[j+16>>2];o=M<o?M:o;N=+g[j+20>>2];k=N<k?N:k;m=m<K?K:m;h=h<L?L:h;e=e<M?M:e;n=n<N?N:n;d=d+1|0;}while((d|0)!=(E|0))}else{m=e;p=e;n=f;o=r;k=f;h=q;f=q;e=r;}g[H+16>>2]=p;g[H+16+4>>2]=f;g[H+16+8>>2]=o;g[H+16+12>>2]=k;g[H+16+16>>2]=m;g[H+16+20>>2]=h;g[H+16+24>>2]=e;g[H+16+28>>2]=n;d=c[F+348>>2]|0;if(!d){d=c[b+1052>>2]|0;if(!d){c[6436]=(c[6436]|0)+1;d=ic(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}i=d;j=i+44|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(j|0))}else c[b+1052>>2]=0;c[d+32>>2]=0;c[d+36>>2]=F;c[d+40>>2]=0;c[d>>2]=c[H+16>>2];c[d+4>>2]=c[H+16+4>>2];c[d+8>>2]=c[H+16+8>>2];c[d+12>>2]=c[H+16+12>>2];c[d+16>>2]=c[H+16+16>>2];c[d+20>>2]=c[H+16+20>>2];c[d+24>>2]=c[H+16+24>>2];c[d+28>>2]=c[H+16+28>>2];Fe(b+1048|0,c[b+1048>>2]|0,d);c[b+1060>>2]=(c[b+1060>>2]|0)+1;c[F+348>>2]=d;}else{L=+g[b+452>>2];M=L*+g[F+320>>2]*3.0;N=L*+g[F+324>>2]*3.0;g[H>>2]=+g[D>>2]*L*3.0;g[H+4>>2]=M;g[H+8>>2]=N;g[H+12>>2]=0.0;bh(b+1048|0,d,H+16|0,H,+g[b+464>>2])|0;}}d=c[b+1112>>2]|0;}G=G+1|0;}while((G|0)<(d|0))}d=c[2388]|0;b=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=b;if(b|0){l=H;return}do if(c[d+4>>2]|0){Za(H+144|0,0)|0;b=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[H+144+4>>2]|0)-(c[b+4>>2]|0)+(((c[H+144>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=H;return}}while(0);c[2388]=c[d+20>>2];l=H;return}function Nc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0.0,H=0.0,I=0.0;E=l;l=l+784|0;c[E+168+8>>2]=0;c[E+168+12>>2]=1065353216;c[E+168+16>>2]=1065353216;c[E+168+20>>2]=1065353216;g[E+168+24>>2]=0.0;c[E+168>>2]=6796;c[E+168+4>>2]=8;g[E+168+28>>2]=0.0;g[E+168+44>>2]=0.0;C=c[e+4>>2]|0;D=c[e+12>>2]|0;h=c[C+4>>2]|0;if((h|0)<20){c[E+600>>2]=3816;c[E+600+168>>2]=0;g[E+600+172>>2]=0.0;c[E+600+164>>2]=c[f+4>>2];g[E+240+308>>2]=9.999999747378752e-05;a[E+240+332>>0]=0;c[E+224>>2]=5088;c[E+224+4>>2]=E+240;c[E+224+8>>2]=E+168;c[E+224+12>>2]=C;c[E+152>>2]=9264;c[E+152+4>>2]=E+240;c[E+152+8>>2]=E+168;c[E+152+12>>2]=C;C=(c[f+16>>2]&8|0)==0?E+224|0:E+152|0;if((Eb[c[(c[C>>2]|0)+8>>2]&3](C,b,d,D,D,E+600|0)|0?(i=E+600+132|0,j=+g[i>>2],k=+g[E+600+136>>2],m=+g[E+600+140>>2],j*j+k*k+m*m>9.999999747378752e-05):0)?(n=+g[E+600+164>>2],n<+g[f+4>>2]):0){B=1.0/+G(+(j*j+k*k+m*m));g[i>>2]=j*B;g[E+600+136>>2]=k*B;g[E+600+140>>2]=m*B;c[E+120>>2]=c[e+8>>2];c[E+120+4>>2]=0;c[E+120+8>>2]=c[i>>2];c[E+120+8+4>>2]=c[i+4>>2];c[E+120+8+8>>2]=c[i+8>>2];c[E+120+8+12>>2]=c[i+12>>2];g[E+120+24>>2]=n;+Lb[c[(c[f>>2]|0)+12>>2]&15](f,E+120|0,1);}l=E;return}if((h+-21|0)>>>0>=9){if((h|0)!=31){l=E;return}h=c[C+64>>2]|0;e=c[e+8>>2]|0;c[E+600>>2]=5884;c[E+600+4>>2]=e;c[E+600+8>>2]=C;c[E+600+12>>2]=D;c[E+600+16>>2]=b;c[E+600+20>>2]=d;c[E+600+24>>2]=f;if(!h){i=c[C+16>>2]|0;if((i|0)>0){h=0;do{Gf(E+600|0,h);h=h+1|0;}while((h|0)<(i|0))}}else{w=+g[D+48>>2];n=+g[b+48>>2]-w;y=+g[D+52>>2];o=+g[b+52>>2]-y;A=+g[D+56>>2];p=+g[b+56>>2]-A;q=+g[D>>2];r=+g[D+16>>2];s=+g[D+32>>2];t=+g[D+4>>2];u=+g[D+20>>2];v=+g[D+36>>2];x=+g[D+8>>2];z=+g[D+24>>2];B=+g[D+40>>2];g[E+240>>2]=n*q+o*r+p*s;g[E+240+4>>2]=n*t+o*u+p*v;g[E+240+8>>2]=n*x+o*z+p*B;g[E+240+12>>2]=0.0;w=+g[d+48>>2]-w;y=+g[d+52>>2]-y;A=+g[d+56>>2]-A;g[E+224>>2]=w*q+y*r+A*s;g[E+224+4>>2]=w*t+y*u+A*v;g[E+224+8>>2]=w*x+y*z+A*B;g[E+224+12>>2]=0.0;ve(c[h>>2]|0,E+240|0,E+224|0,E+600|0);}l=E;return}o=+g[D>>2];p=+g[D+16>>2];j=+g[D+32>>2];k=+g[D+4>>2];v=+g[D+20>>2];w=+g[D+36>>2];m=+g[D+8>>2];y=+g[D+24>>2];z=+g[D+40>>2];A=-+g[D+48>>2];B=-+g[D+52>>2];x=-+g[D+56>>2];q=+g[b+48>>2];r=+g[b+52>>2];n=+g[b+56>>2];g[E+152>>2]=o*A+p*B+j*x+(o*q+p*r+j*n);g[E+152+4>>2]=k*A+v*B+w*x+(k*q+v*r+w*n);g[E+152+8>>2]=m*A+y*B+z*x+(m*q+y*r+z*n);g[E+152+12>>2]=0.0;t=+g[d+48>>2];u=+g[d+52>>2];s=+g[d+56>>2];j=o*A+p*B+j*x+(o*t+p*u+j*s);k=k*A+v*B+w*x+(k*t+v*u+w*s);m=m*A+y*B+z*x+(m*t+y*u+z*s);g[E+120>>2]=j;g[E+120+4>>2]=k;g[E+120+8>>2]=m;g[E+120+12>>2]=0.0;switch(c[C+4>>2]|0){case 21:{h=c[e+8>>2]|0;e=c[f+16>>2]|0;c[E+4>>2]=c[E+152>>2];c[E+4+4>>2]=c[E+152+4>>2];c[E+4+8>>2]=c[E+152+8>>2];c[E+4+12>>2]=c[E+152+12>>2];c[E+20>>2]=c[E+120>>2];c[E+20+4>>2]=c[E+120+4>>2];c[E+20+8>>2]=c[E+120+8>>2];c[E+20+12>>2]=c[E+120+12>>2];c[E+36>>2]=e;g[E+40>>2]=1.0;c[E>>2]=5836;c[E+44>>2]=f;c[E+48>>2]=h;c[E+52>>2]=C;c[E+56>>2]=c[D>>2];c[E+56+4>>2]=c[D+4>>2];c[E+56+8>>2]=c[D+8>>2];c[E+56+12>>2]=c[D+12>>2];c[E+72>>2]=c[D+16>>2];c[E+72+4>>2]=c[D+16+4>>2];c[E+72+8>>2]=c[D+16+8>>2];c[E+72+12>>2]=c[D+16+12>>2];c[E+88>>2]=c[D+32>>2];c[E+88+4>>2]=c[D+32+4>>2];c[E+88+8>>2]=c[D+32+8>>2];c[E+88+12>>2]=c[D+32+12>>2];c[E+104>>2]=c[D+48>>2];c[E+104+4>>2]=c[D+48+4>>2];c[E+104+8>>2]=c[D+48+8>>2];c[E+104+12>>2]=c[D+48+12>>2];c[E+40>>2]=c[f+4>>2];h=c[C+48>>2]|0;c[E+224>>2]=7008;c[E+224+4>>2]=h;c[E+224+8>>2]=E;h=c[C+52>>2]|0;c[E+600>>2]=0;c[E+600+4>>2]=0;c[E+600+8>>2]=0;c[E+600+12>>2]=0;c[E+240>>2]=0;c[E+240+4>>2]=0;c[E+240+8>>2]=0;c[E+240+12>>2]=0;if(!(a[h+60>>0]|0))Ie(h,E+224|0,E+152|0,j,k,m,E+600|0,E+240|0);else ke(h,E+224|0,E+152|0,j,k,m,E+600|0,E+240|0,c[h+56>>2]|0);break}case 25:{e=c[e+8>>2]|0;d=c[f+16>>2]|0;c[E+600+4>>2]=c[E+152>>2];c[E+600+4+4>>2]=c[E+152+4>>2];c[E+600+4+8>>2]=c[E+152+8>>2];c[E+600+4+12>>2]=c[E+152+12>>2];c[E+600+20>>2]=c[E+120>>2];c[E+600+20+4>>2]=c[E+120+4>>2];c[E+600+20+8>>2]=c[E+120+8>>2];c[E+600+20+12>>2]=c[E+120+12>>2];c[E+600+36>>2]=d;g[E+600+40>>2]=1.0;c[E+600>>2]=5836;c[E+600+44>>2]=f;c[E+600+48>>2]=e;c[E+600+52>>2]=C;c[E+600+56>>2]=c[D>>2];c[E+600+56+4>>2]=c[D+4>>2];c[E+600+56+8>>2]=c[D+8>>2];c[E+600+56+12>>2]=c[D+12>>2];c[E+600+72>>2]=c[D+16>>2];c[E+600+72+4>>2]=c[D+16+4>>2];c[E+600+72+8>>2]=c[D+16+8>>2];c[E+600+72+12>>2]=c[D+16+12>>2];c[E+600+88>>2]=c[D+32>>2];c[E+600+88+4>>2]=c[D+32+4>>2];c[E+600+88+8>>2]=c[D+32+8>>2];c[E+600+88+12>>2]=c[D+32+12>>2];c[E+600+104>>2]=c[D+48>>2];c[E+600+104+4>>2]=c[D+48+4>>2];c[E+600+104+8>>2]=c[D+48+8>>2];c[E+600+104+12>>2]=c[D+48+12>>2];c[E+600+40>>2]=c[f+4>>2];Zb[c[(c[C>>2]|0)+144>>2]&127](C,E+600|0,E+152|0,E+120|0);break}default:{I=+g[D>>2];H=+g[D+16>>2];F=+g[D+32>>2];k=+g[D+4>>2];j=+g[D+8>>2];o=I*A+H*B+F*x+(I*q+H*r+F*n);p=k*A+v*B+w*x+(k*q+v*r+w*n);m=j*A+y*B+z*x+(j*q+y*r+z*n);n=I*A+H*B+F*x+(I*t+H*u+F*s);k=k*A+v*B+w*x+(k*t+v*u+w*s);j=j*A+y*B+z*x+(j*t+y*u+z*s);e=c[e+8>>2]|0;d=c[f+16>>2]|0;g[E+600+4>>2]=o;g[E+600+8>>2]=p;g[E+600+12>>2]=m;g[E+600+16>>2]=0.0;g[E+600+20>>2]=n;g[E+600+24>>2]=k;g[E+600+28>>2]=j;g[E+600+32>>2]=0.0;c[E+600+36>>2]=d;g[E+600+40>>2]=1.0;c[E+600>>2]=5860;c[E+600+44>>2]=f;c[E+600+48>>2]=e;c[E+600+52>>2]=C;c[E+600+56>>2]=c[D>>2];c[E+600+56+4>>2]=c[D+4>>2];c[E+600+56+8>>2]=c[D+8>>2];c[E+600+56+12>>2]=c[D+12>>2];c[E+600+72>>2]=c[D+16>>2];c[E+600+72+4>>2]=c[D+16+4>>2];c[E+600+72+8>>2]=c[D+16+8>>2];c[E+600+72+12>>2]=c[D+16+12>>2];c[E+600+88>>2]=c[D+32>>2];c[E+600+88+4>>2]=c[D+32+4>>2];c[E+600+88+8>>2]=c[D+32+8>>2];c[E+600+88+12>>2]=c[D+32+12>>2];c[E+600+104>>2]=c[D+48>>2];c[E+600+104+4>>2]=c[D+48+4>>2];c[E+600+104+8>>2]=c[D+48+8>>2];c[E+600+104+12>>2]=c[D+48+12>>2];c[E+600+40>>2]=c[f+4>>2];g[E+240>>2]=o;g[E+240+4>>2]=p;g[E+240+8>>2]=m;g[E+240+12>>2]=0.0;if(n<o)g[E+240>>2]=n;if(k<p)g[E+240+4>>2]=k;if(j<m)g[E+240+8>>2]=j;g[E+224>>2]=o;g[E+224+4>>2]=p;g[E+224+8>>2]=m;g[E+224+12>>2]=0.0;if(o<n)g[E+224>>2]=n;if(p<k)g[E+224+4>>2]=k;if(m<j)g[E+224+8>>2]=j;Zb[c[(c[C>>2]|0)+64>>2]&127](C,E+600|0,E+240|0,E+224|0);}}l=E;return}function Oc(b,d,e,f,h,i,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;h=c[b+48>>2]|0;q=c[b+28>>2]|0;r=c[b+68>>2]|0;if(c[l+64>>2]&1|0){if((h|0)>0){i=c[b+136>>2]|0;f=0;p=c[b+192>>2]|0;do{m=i+(f<<2)|0;o=c[m>>2]|0;f=f+1|0;p=(S(p,1664525)|0)+1013904223|0;if(f>>>0<65537){e=p>>>16^p;if(f>>>0<257)if(f>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);e=f>>>0<5?(f>>>0<3?(e>>>2^e)>>>1:0)^(e>>>2^e):e;}else e=e>>>8^e;}else e=p;e=i+(((e>>>0)%(f>>>0)|0)<<2)|0;c[m>>2]=c[e>>2];c[e>>2]=o;}while((f|0)!=(h|0));c[b+192>>2]=p;}if((c[l+20>>2]|0)>(d|0)){if((q|0)>0){h=c[b+116>>2]|0;f=0;o=c[b+192>>2]|0;do{i=h+(f<<2)|0;m=c[i>>2]|0;f=f+1|0;o=(S(o,1664525)|0)+1013904223|0;if(f>>>0<65537){e=o>>>16^o;if(f>>>0<257)if(f>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);e=f>>>0<5?(f>>>0<3?(e>>>2^e)>>>1:0)^(e>>>2^e):e;}else e=e>>>8^e;}else e=o;p=h+(((e>>>0)%(f>>>0)|0)<<2)|0;c[i>>2]=c[p>>2];c[p>>2]=m;}while((f|0)!=(q|0));c[b+192>>2]=o;}if((r|0)>0){h=c[b+156>>2]|0;f=0;o=c[b+192>>2]|0;do{i=h+(f<<2)|0;m=c[i>>2]|0;f=f+1|0;o=(S(o,1664525)|0)+1013904223|0;if(f>>>0<65537){e=o>>>16^o;if(f>>>0<257)if(f>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);e=f>>>0<5?(f>>>0<3?(e>>>2^e)>>>1:0)^(e>>>2^e):e;}else e=e>>>8^e;}else e=o;q=h+(((e>>>0)%(f>>>0)|0)<<2)|0;c[i>>2]=c[q>>2];c[q>>2]=m;}while((f|0)!=(r|0));c[b+192>>2]=o;}}}e=c[b+48>>2]|0;if(!(c[l+64>>2]&256)){if((e|0)>0){i=0;do{f=c[(c[b+136>>2]|0)+(i<<2)>>2]|0;h=c[b+56>>2]|0;if((c[h+(f*152|0)+136>>2]|0)>(d|0)){e=c[b+16>>2]|0;pg(e+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,e+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);e=c[b+48>>2]|0;}i=i+1|0;}while((i|0)<(e|0))}if((c[l+20>>2]|0)<=(d|0))return 0.0;if((k|0)>0){e=0;do{f=j+(e<<2)|0;h=c[f>>2]|0;if(a[h+20>>0]|0){d=Cj(b,c[h+28>>2]|0,+g[l+12>>2])|0;t=Cj(b,c[(c[f>>2]|0)+32>>2]|0,+g[l+12>>2])|0;s=c[b+16>>2]|0;r=c[f>>2]|0;Ub[c[(c[r>>2]|0)+24>>2]&15](r,s+(d*244|0)|0,s+(t*244|0)|0,+g[l+12>>2]);}e=e+1|0;}while((e|0)!=(k|0))}f=c[b+28>>2]|0;if((f|0)>0){e=0;do{l=c[(c[b+116>>2]|0)+(e<<2)>>2]|0;k=c[b+36>>2]|0;j=c[b+16>>2]|0;vg(j+((c[k+(l*152|0)+144>>2]|0)*244|0)|0,j+((c[k+(l*152|0)+148>>2]|0)*244|0)|0,k+(l*152|0)|0);e=e+1|0;}while((e|0)!=(f|0))}f=c[b+68>>2]|0;if((f|0)>0){e=0;do{h=c[(c[b+156>>2]|0)+(e<<2)>>2]|0;i=c[b+76>>2]|0;n=+g[(c[b+36>>2]|0)+((c[i+(h*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){n=n*+g[i+(h*152|0)+104>>2];g[i+(h*152|0)+120>>2]=-n;g[i+(h*152|0)+124>>2]=n;l=c[b+16>>2]|0;pg(l+((c[i+(h*152|0)+144>>2]|0)*244|0)|0,l+((c[i+(h*152|0)+148>>2]|0)*244|0)|0,i+(h*152|0)|0);}e=e+1|0;}while((e|0)!=(f|0))}f=c[b+88>>2]|0;if((f|0)<=0)return 0.0;e=0;do{h=c[b+96>>2]|0;n=+g[(c[b+36>>2]|0)+((c[h+(e*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=+g[h+(e*152|0)+104>>2];n=n*u>u?u:n*u;g[h+(e*152|0)+120>>2]=-n;g[h+(e*152|0)+124>>2]=n;l=c[b+16>>2]|0;pg(l+((c[h+(e*152|0)+144>>2]|0)*244|0)|0,l+((c[h+(e*152|0)+148>>2]|0)*244|0)|0,h+(e*152|0)|0);}e=e+1|0;}while((e|0)!=(f|0));return 0.0}if((e|0)>0){i=0;do{f=c[(c[b+136>>2]|0)+(i<<2)>>2]|0;h=c[b+56>>2]|0;if((c[h+(f*152|0)+136>>2]|0)>(d|0)){e=c[b+16>>2]|0;pg(e+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,e+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);e=c[b+48>>2]|0;}i=i+1|0;}while((i|0)<(e|0))}if((c[l+20>>2]|0)<=(d|0))return 0.0;if((k|0)>0){e=0;do{f=j+(e<<2)|0;h=c[f>>2]|0;if(a[h+20>>0]|0){q=Cj(b,c[h+28>>2]|0,+g[l+12>>2])|0;d=Cj(b,c[(c[f>>2]|0)+32>>2]|0,+g[l+12>>2])|0;r=c[b+16>>2]|0;p=c[f>>2]|0;Ub[c[(c[p>>2]|0)+24>>2]&15](p,r+(q*244|0)|0,r+(d*244|0)|0,+g[l+12>>2]);}e=e+1|0;}while((e|0)!=(k|0))}f=c[l+64>>2]|0;o=c[b+28>>2]|0;if(f&512|0){if((o|0)<=0)return 0.0;e=0;do{h=c[(c[b+116>>2]|0)+(e<<2)>>2]|0;i=c[b+36>>2]|0;m=c[b+16>>2]|0;vg(m+((c[i+(h*152|0)+144>>2]|0)*244|0)|0,m+((c[i+(h*152|0)+148>>2]|0)*244|0)|0,i+(h*152|0)|0);n=+g[i+(h*152|0)+100>>2];h=S(e,(f>>>4&1)+1|0)|0;i=c[(c[b+156>>2]|0)+(h<<2)>>2]|0;m=c[b+76>>2]|0;if(n>0.0){u=n*+g[m+(i*152|0)+104>>2];g[m+(i*152|0)+120>>2]=-u;g[m+(i*152|0)+124>>2]=u;k=c[b+16>>2]|0;pg(k+((c[m+(i*152|0)+144>>2]|0)*244|0)|0,k+((c[m+(i*152|0)+148>>2]|0)*244|0)|0,m+(i*152|0)|0);}if(c[l+64>>2]&16|0?(s=c[(c[b+156>>2]|0)+(h+1<<2)>>2]|0,t=c[b+76>>2]|0,n>0.0):0){u=n*+g[t+(s*152|0)+104>>2];g[t+(s*152|0)+120>>2]=-u;g[t+(s*152|0)+124>>2]=u;k=c[b+16>>2]|0;pg(k+((c[t+(s*152|0)+144>>2]|0)*244|0)|0,k+((c[t+(s*152|0)+148>>2]|0)*244|0)|0,t+(s*152|0)|0);}e=e+1|0;}while((e|0)!=(o|0));return 0.0}if((o|0)>0){e=0;do{l=c[(c[b+116>>2]|0)+(e<<2)>>2]|0;k=c[b+36>>2]|0;j=c[b+16>>2]|0;vg(j+((c[k+(l*152|0)+144>>2]|0)*244|0)|0,j+((c[k+(l*152|0)+148>>2]|0)*244|0)|0,k+(l*152|0)|0);e=e+1|0;}while((e|0)!=(o|0))}f=c[b+68>>2]|0;if((f|0)>0){e=0;do{h=c[(c[b+156>>2]|0)+(e<<2)>>2]|0;i=c[b+76>>2]|0;n=+g[(c[b+36>>2]|0)+((c[i+(h*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=n*+g[i+(h*152|0)+104>>2];g[i+(h*152|0)+120>>2]=-u;g[i+(h*152|0)+124>>2]=u;l=c[b+16>>2]|0;pg(l+((c[i+(h*152|0)+144>>2]|0)*244|0)|0,l+((c[i+(h*152|0)+148>>2]|0)*244|0)|0,i+(h*152|0)|0);}e=e+1|0;}while((e|0)!=(f|0))}f=c[b+88>>2]|0;if((f|0)<=0)return 0.0;e=0;do{h=c[b+96>>2]|0;n=+g[(c[b+36>>2]|0)+((c[h+(e*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=+g[h+(e*152|0)+104>>2];u=n*u>u?u:n*u;g[h+(e*152|0)+120>>2]=-u;g[h+(e*152|0)+124>>2]=u;l=c[b+16>>2]|0;pg(l+((c[h+(e*152|0)+144>>2]|0)*244|0)|0,l+((c[h+(e*152|0)+148>>2]|0)*244|0)|0,h+(e*152|0)|0);}e=e+1|0;}while((e|0)!=(f|0));return 0.0}function Pc(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;o=l;l=l+48|0;d=c[a+24>>2]|0;if((d|0)<=0){l=o;return}n=0;a:while(1){m=c[(c[a+32>>2]|0)+(n<<2)>>2]|0;switch(c[m+216>>2]|0){case 2:case 5:break;default:{Gd(m,0);e=c[m+732>>2]|0;if((e|0)>0){d=0;do{k=c[m+740>>2]|0;i=c[k+(d*52|0)+12>>2]|0;j=c[k+(d*52|0)+8>>2]|0;y=+g[i+24>>2]-+g[j+24>>2];x=+g[i+28>>2]-+g[j+28>>2];b=+g[i+32>>2]-+g[j+32>>2];g[k+(d*52|0)+36>>2]=y;g[k+(d*52|0)+40>>2]=x;g[k+(d*52|0)+44>>2]=b;g[k+(d*52|0)+48>>2]=0.0;g[k+(d*52|0)+32>>2]=1.0/(+g[k+(d*52|0)+24>>2]*(y*y+x*x+b*b));d=d+1|0;}while((d|0)!=(e|0))}f=c[m+792>>2]|0;if((f|0)>0){d=0;b=+g[m+452>>2];do{k=c[m+800>>2]|0;e=k+(d*96|0)+20|0;i=c[e>>2]|0;H=+g[k+(d*96|0)+4>>2];J=+g[k+(d*96|0)+8>>2];y=+g[k+(d*96|0)+12>>2];z=+g[i+4>>2]*H+ +g[i+8>>2]*J+ +g[i+12>>2]*y;x=H*+g[i+20>>2]+J*+g[i+24>>2]+y*+g[i+28>>2];y=H*+g[i+36>>2]+J*+g[i+40>>2]+y*+g[i+44>>2];j=k+(d*96|0)|0;J=+g[(c[j>>2]|0)+88>>2];H=1.0/b;Eh(o,+g[i+344>>2],i+264|0,z,x,y);C=J+ +g[o>>2];G=+g[o+4>>2]+0.0;E=+g[o+8>>2]+0.0;D=+g[o+16>>2]+0.0;F=J+ +g[o+20>>2];B=+g[o+24>>2]+0.0;I=+g[o+32>>2]+0.0;K=+g[o+36>>2]+0.0;J=J+ +g[o+40>>2];A=1.0/(E*(D*K-F*I)+(C*(F*J-B*K)+G*(B*I-D*J)));g[k+(d*96|0)+28>>2]=(D*K-F*I)*A*0.0+(H*(F*J-B*K)*A+(B*I-D*J)*A*0.0);g[k+(d*96|0)+32>>2]=(G*I-C*K)*A*0.0+(H*(E*K-G*J)*A+(C*J-E*I)*A*0.0);g[k+(d*96|0)+36>>2]=(C*F-G*D)*A*0.0+(H*(G*B-E*F)*A+(E*D-C*B)*A*0.0);g[k+(d*96|0)+40>>2]=0.0;g[k+(d*96|0)+44>>2]=(D*K-F*I)*A*0.0+((F*J-B*K)*A*0.0+H*(B*I-D*J)*A);g[k+(d*96|0)+48>>2]=(G*I-C*K)*A*0.0+((E*K-G*J)*A*0.0+H*(C*J-E*I)*A);g[k+(d*96|0)+52>>2]=(C*F-G*D)*A*0.0+((G*B-E*F)*A*0.0+H*(E*D-C*B)*A);g[k+(d*96|0)+56>>2]=0.0;g[k+(d*96|0)+60>>2]=H*(D*K-F*I)*A+((F*J-B*K)*A*0.0+(B*I-D*J)*A*0.0);g[k+(d*96|0)+64>>2]=H*(G*I-C*K)*A+((E*K-G*J)*A*0.0+(C*J-E*I)*A*0.0);g[k+(d*96|0)+68>>2]=H*(C*F-G*D)*A+((G*B-E*F)*A*0.0+(E*D-C*B)*A*0.0);g[k+(d*96|0)+72>>2]=0.0;g[k+(d*96|0)+76>>2]=z;g[k+(d*96|0)+80>>2]=x;g[k+(d*96|0)+84>>2]=y;g[k+(d*96|0)+88>>2]=0.0;b=+g[m+452>>2];g[k+(d*96|0)+92>>2]=b*+g[(c[j>>2]|0)+88>>2];e=c[e>>2]|0;if(!(c[e+204>>2]&3)){if((c[e+216>>2]&-2|0)!=4)c[e+216>>2]=1;g[e+220>>2]=0.0;}d=d+1|0;}while((d|0)!=(f|0))}d=c[m+372>>2]|0;if((d|0)>0){f=0;e=c[m+396>>2]|0;do{if((e|0)>0){d=0;do{kb[((c[(c[m+404>>2]|0)+(d<<2)>>2]|0)==0?23:0)&31](m,1.0);d=d+1|0;e=c[m+396>>2]|0;}while((d|0)<(e|0));d=c[m+372>>2]|0;}f=f+1|0;}while((f|0)<(d|0));e=c[m+712>>2]|0;if((e|0)>0){d=0;do{k=c[m+720>>2]|0;I=+g[m+452>>2];J=I*+g[k+(d*104|0)+44>>2]+ +g[k+(d*104|0)+28>>2];K=I*+g[k+(d*104|0)+48>>2]+ +g[k+(d*104|0)+32>>2];g[k+(d*104|0)+8>>2]=+g[k+(d*104|0)+40>>2]*I+ +g[k+(d*104|0)+24>>2];g[k+(d*104|0)+12>>2]=J;g[k+(d*104|0)+16>>2]=K;g[k+(d*104|0)+20>>2]=0.0;d=d+1|0;}while((d|0)!=(e|0))}}d=c[m+376>>2]|0;if((d|0)>0){h=0;e=c[m+416>>2]|0;do{b=+(h|0)/+(d|0);if((e|0)>0){f=0;do{switch(c[(c[m+424>>2]|0)+(f<<2)>>2]|0){case 1:{d=2;break}case 0:{d=3;break}case 2:{d=4;break}case 3:{d=5;break}default:{w=35;break a}}yb[d&7](m,1.0,b);f=f+1|0;e=c[m+416>>2]|0;}while((f|0)<(e|0));d=c[m+376>>2]|0;}h=h+1|0;}while((h|0)<(d|0));b=+g[m+456>>2]*(1.0-+g[m+296>>2]);e=c[m+712>>2]|0;if((e|0)>0){d=0;do{k=c[m+720>>2]|0;J=b*(+g[k+(d*104|0)+12>>2]-+g[k+(d*104|0)+28>>2]);K=b*(+g[k+(d*104|0)+16>>2]-+g[k+(d*104|0)+32>>2]);g[k+(d*104|0)+40>>2]=b*(+g[k+(d*104|0)+8>>2]-+g[k+(d*104|0)+24>>2]);g[k+(d*104|0)+44>>2]=J;g[k+(d*104|0)+48>>2]=K;k=k+(d*104|0)+52|0;d=d+1|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;}while((d|0)!=(e|0))}}d=c[m+380>>2]|0;if((d|0)>0){b=+g[m+292>>2]*+g[m+456>>2];e=c[m+712>>2]|0;if((e|0)>0){d=0;do{k=c[m+720>>2]|0;j=k+(d*104|0)+8|0;k=k+(d*104|0)+24|0;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];c[k+12>>2]=c[j+12>>2];d=d+1|0;}while((d|0)!=(e|0));d=c[m+380>>2]|0;if((d|0)>0)w=42;}else w=42;if((w|0)==42){w=0;h=0;e=c[m+436>>2]|0;do{if((e|0)>0){f=0;do{switch(c[(c[m+444>>2]|0)+(f<<2)>>2]|0){case 1:{d=2;break}case 0:{d=3;break}case 2:{d=4;break}case 3:{d=5;break}default:{w=53;break a}}yb[d&7](m,1.0,0.0);f=f+1|0;e=c[m+436>>2]|0;}while((f|0)<(e|0));d=c[m+380>>2]|0;}h=h+1|0;}while((h|0)<(d|0))}e=c[m+712>>2]|0;if((e|0)>0){f=c[m+720>>2]|0;d=0;do{J=b*(+g[f+(d*104|0)+12>>2]-+g[f+(d*104|0)+28>>2]);K=b*(+g[f+(d*104|0)+16>>2]-+g[f+(d*104|0)+32>>2]);k=f+(d*104|0)+40|0;g[k>>2]=b*(+g[f+(d*104|0)+8>>2]-+g[f+(d*104|0)+24>>2])+ +g[k>>2];k=f+(d*104|0)+44|0;g[k>>2]=J+ +g[k>>2];k=f+(d*104|0)+48|0;g[k>>2]=K+ +g[k>>2];d=d+1|0;}while((d|0)!=(e|0))}}f=c[m+1112>>2]|0;if((f|0)>0){h=c[m+1120>>2]|0;e=0;do{i=c[h+(e<<2)>>2]|0;if(+g[i+352>>2]>0.0?(p=c[i+24>>2]|0,(p|0)>0):0){j=c[i+32>>2]|0;d=0;do{k=c[j+(d<<2)>>2]|0;if(+g[k+88>>2]>0.0?(t=+g[k+24>>2]-+g[i+228>>2],v=+g[k+28>>2]-+g[i+232>>2],r=+g[k+32>>2]-+g[i+236>>2],s=+g[i+336>>2],K=+g[i+340>>2],u=+g[i+332>>2],q=+g[i+316>>2]+(s*r-v*K),r=+g[i+320>>2]+(t*K-r*u),s=v*u-t*s+ +g[i+324>>2],t=+g[k+40>>2],u=+g[k+44>>2],v=+g[k+48>>2],q*q+r*r+s*s<=t*t+u*u+v*v):0){K=+g[i+352>>2];g[k+40>>2]=t+(q-t)*K;g[k+44>>2]=(r-u)*K+u;g[k+48>>2]=(s-v)*K+v;}d=d+1|0;}while((d|0)!=(p|0))}e=e+1|0;}while((e|0)!=(f|0))}Gd(m,1);d=c[a+24>>2]|0;}}n=n+1|0;if((n|0)>=(d|0)){w=3;break}}if((w|0)==3){l=o;return}}function Qc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0,t=0.0;q=l;l=l+80|0;i=c[b+28>>2]|0;d=c[f+64>>2]|0;if((d&4|0)!=0&(i|0)>0){e=c[b+36>>2]|0;h=c[b+76>>2]|0;if(!(d&16)){d=0;do{m=c[e+(d*152|0)+132>>2]|0;c[m+120>>2]=c[e+(d*152|0)+100>>2];c[m+124>>2]=c[h+((c[e+(d*152|0)+140>>2]|0)*152|0)+100>>2];d=d+1|0;}while((d|0)!=(i|0))}else{d=0;do{m=c[e+(d*152|0)+132>>2]|0;c[m+120>>2]=c[e+(d*152|0)+100>>2];k=c[e+(d*152|0)+140>>2]|0;c[m+124>>2]=c[h+(k*152|0)+100>>2];c[m+128>>2]=c[h+((k+1|0)*152|0)+100>>2];d=d+1|0;}while((d|0)!=(i|0))}}h=c[b+48>>2]|0;if((h|0)>0){d=0;do{i=c[b+56>>2]|0;k=c[i+(d*152|0)+132>>2]|0;m=c[k+44>>2]|0;e=i+(d*152|0)+100|0;if(m|0){p=+g[e>>2];s=c[k+28>>2]|0;o=1.0/+g[f+12>>2];n=p*+g[i+(d*152|0)+20>>2]*+g[s+352>>2]*o;r=p*+g[i+(d*152|0)+24>>2]*+g[s+356>>2]*o;g[m>>2]=+g[m>>2]+ +g[i+(d*152|0)+16>>2]*p*+g[s+348>>2]*o;g[m+4>>2]=n+ +g[m+4>>2];g[m+8>>2]=r+ +g[m+8>>2];r=+g[e>>2];s=c[k+32>>2]|0;n=1.0/+g[f+12>>2];o=r*+g[i+(d*152|0)+52>>2]*+g[s+352>>2]*n;p=r*+g[i+(d*152|0)+56>>2]*+g[s+356>>2]*n;g[m+32>>2]=+g[m+32>>2]+ +g[i+(d*152|0)+48>>2]*r*+g[s+348>>2]*n;g[m+36>>2]=o+ +g[m+36>>2];g[m+40>>2]=p+ +g[m+40>>2];s=c[k+28>>2]|0;p=+g[e>>2];o=1.0/+g[f+12>>2];n=+g[i+(d*152|0)+4>>2]*+g[s+548>>2]*p*o;r=p*+g[i+(d*152|0)+8>>2]*+g[s+552>>2]*o;g[m+16>>2]=+g[m+16>>2]+ +g[i+(d*152|0)>>2]*+g[s+544>>2]*p*o;g[m+20>>2]=n+ +g[m+20>>2];g[m+24>>2]=r+ +g[m+24>>2];s=c[k+32>>2]|0;r=+g[e>>2];n=1.0/+g[f+12>>2];o=+g[i+(d*152|0)+36>>2]*+g[s+548>>2]*r*n;p=r*+g[i+(d*152|0)+40>>2]*+g[s+552>>2]*n;g[m+48>>2]=+g[m+48>>2]+ +g[i+(d*152|0)+32>>2]*+g[s+544>>2]*r*n;g[m+52>>2]=o+ +g[m+52>>2];g[m+56>>2]=p+ +g[m+56>>2];}s=c[e>>2]|0;c[k+36>>2]=s;r=+F(+(c[j>>2]=s,+g[j>>2]));if(r>=+g[k+16>>2])a[k+20>>0]=0;d=d+1|0;}while((d|0)!=(h|0))}e=c[b+8>>2]|0;if((e|0)>0){k=0;d=c[b+16>>2]|0;do{h=d+(k*244|0)|0;i=c[d+(k*244|0)+240>>2]|0;if(i){if(!(c[f+44>>2]|0)){h=d+(k*244|0)+176|0;o=+g[d+(k*244|0)+64>>2]+ +g[h>>2];g[h>>2]=o;h=d+(k*244|0)+180|0;p=+g[d+(k*244|0)+68>>2]+ +g[h>>2];g[h>>2]=p;h=d+(k*244|0)+184|0;n=+g[d+(k*244|0)+72>>2]+ +g[h>>2];g[h>>2]=n;h=d+(k*244|0)+192|0;g[h>>2]=+g[d+(k*244|0)+80>>2]+ +g[h>>2];h=d+(k*244|0)+196|0;g[h>>2]=+g[d+(k*244|0)+84>>2]+ +g[h>>2];h=d+(k*244|0)+200|0;g[h>>2]=+g[d+(k*244|0)+88>>2]+ +g[h>>2];h=d;d=i;}else{n=+g[f+12>>2];o=+g[f+52>>2];e=d+(k*244|0)+176|0;g[e>>2]=+g[d+(k*244|0)+64>>2]+ +g[e>>2];e=d+(k*244|0)+180|0;g[e>>2]=+g[d+(k*244|0)+68>>2]+ +g[e>>2];e=d+(k*244|0)+184|0;g[e>>2]=+g[d+(k*244|0)+72>>2]+ +g[e>>2];e=d+(k*244|0)+192|0;g[e>>2]=+g[d+(k*244|0)+80>>2]+ +g[e>>2];e=d+(k*244|0)+196|0;g[e>>2]=+g[d+(k*244|0)+84>>2]+ +g[e>>2];e=d+(k*244|0)+200|0;g[e>>2]=+g[d+(k*244|0)+88>>2]+ +g[e>>2];p=+g[d+(k*244|0)+144>>2];e=d+(k*244|0)+148|0;if(((((!(p!=0.0)?!(+g[e>>2]!=0.0):0)?!(+g[d+(k*244|0)+152>>2]!=0.0):0)?!(+g[d+(k*244|0)+160>>2]!=0.0):0)?!(+g[d+(k*244|0)+164>>2]!=0.0):0)?!(+g[d+(k*244|0)+168>>2]!=0.0):0)e=i;else{t=+g[d+(k*244|0)+164>>2]*o;r=+g[d+(k*244|0)+168>>2]*o;g[q>>2]=+g[d+(k*244|0)+160>>2]*o;g[q+4>>2]=t;g[q+8>>2]=r;g[q+12>>2]=0.0;Gg(h,p,+g[e>>2],+g[d+(k*244|0)+152>>2],q,n,q+16|0);c[h>>2]=c[q+16>>2];c[h+4>>2]=c[q+16+4>>2];c[h+8>>2]=c[q+16+8>>2];c[h+12>>2]=c[q+16+12>>2];e=d+(k*244|0)+16|0;c[e>>2]=c[q+16+16>>2];c[e+4>>2]=c[q+16+16+4>>2];c[e+8>>2]=c[q+16+16+8>>2];c[e+12>>2]=c[q+16+16+12>>2];e=d+(k*244|0)+32|0;c[e>>2]=c[q+16+32>>2];c[e+4>>2]=c[q+16+32+4>>2];c[e+8>>2]=c[q+16+32+8>>2];c[e+12>>2]=c[q+16+32+12>>2];e=d+(k*244|0)+48|0;c[e>>2]=c[q+16+48>>2];c[e+4>>2]=c[q+16+48+4>>2];c[e+8>>2]=c[q+16+48+8>>2];c[e+12>>2]=c[q+16+48+12>>2];e=c[b+16>>2]|0;d=e;e=c[e+(k*244|0)+240>>2]|0;}h=d;o=+g[d+(k*244|0)+176>>2];p=+g[d+(k*244|0)+180>>2];n=+g[d+(k*244|0)+184>>2];d=e;}t=o+ +g[h+(k*244|0)+208>>2];r=p+ +g[h+(k*244|0)+212>>2];p=n+ +g[h+(k*244|0)+216>>2];m=d+260|0;c[m>>2]=(c[m>>2]|0)+1;g[d+312>>2]=t;g[d+316>>2]=r;g[d+320>>2]=p;g[d+324>>2]=0.0;m=c[b+16>>2]|0;s=c[m+(k*244|0)+240>>2]|0;p=+g[m+(k*244|0)+192>>2]+ +g[m+(k*244|0)+224>>2];r=+g[m+(k*244|0)+196>>2]+ +g[m+(k*244|0)+228>>2];t=+g[m+(k*244|0)+200>>2]+ +g[m+(k*244|0)+232>>2];c[s+260>>2]=(c[s+260>>2]|0)+1;g[s+328>>2]=p;g[s+332>>2]=r;g[s+336>>2]=t;g[s+340>>2]=0.0;if(c[f+44>>2]|0){m=c[b+16>>2]|0;s=c[m+(k*244|0)+240>>2]|0;i=m+(k*244|0)|0;c[s+260>>2]=(c[s+260>>2]|0)+1;c[s+4>>2]=c[i>>2];c[s+4+4>>2]=c[i+4>>2];c[s+4+8>>2]=c[i+8>>2];c[s+4+12>>2]=c[i+12>>2];i=m+(k*244|0)+16|0;c[s+20>>2]=c[i>>2];c[s+20+4>>2]=c[i+4>>2];c[s+20+8>>2]=c[i+8>>2];c[s+20+12>>2]=c[i+12>>2];i=m+(k*244|0)+32|0;c[s+36>>2]=c[i>>2];c[s+36+4>>2]=c[i+4>>2];c[s+36+8>>2]=c[i+8>>2];c[s+36+12>>2]=c[i+12>>2];m=m+(k*244|0)+48|0;c[s+52>>2]=c[m>>2];c[s+52+4>>2]=c[m+4>>2];c[s+52+8>>2]=c[m+8>>2];c[s+52+12>>2]=c[m+12>>2];}d=c[b+16>>2]|0;c[(c[d+(k*244|0)+240>>2]|0)+212>>2]=-1;e=c[b+8>>2]|0;}k=k+1|0;}while((k|0)<(e|0))}if((c[b+28>>2]|0)<0?(c[b+32>>2]|0)<0:0){d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=0;c[b+32>>2]=0;}c[b+28>>2]=0;if((c[b+48>>2]|0)<0?(c[b+52>>2]|0)<0:0){d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+56>>2]=0;}a[b+60>>0]=1;c[b+56>>2]=0;c[b+52>>2]=0;}c[b+48>>2]=0;if((c[b+68>>2]|0)<0?(c[b+72>>2]|0)<0:0){d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+76>>2]=0;}a[b+80>>0]=1;c[b+76>>2]=0;c[b+72>>2]=0;}c[b+68>>2]=0;if((c[b+88>>2]|0)<0?(c[b+92>>2]|0)<0:0){d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=0;c[b+92>>2]=0;}c[b+88>>2]=0;if((c[b+8>>2]|0)>=0){c[b+8>>2]=0;l=q;return 0.0}if((c[b+12>>2]|0)>=0){c[b+8>>2]=0;l=q;return 0.0}d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0;c[b+8>>2]=0;l=q;return 0.0}function Rc(b,e,f,g,h,i){b=b|0;e=+e;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=l;l=l+560|0;B=C+524|0;c[C>>2]=0;A=C+512+12|0;dv(e)|0;if((D|0)<0){e=-e;y=1;x=21884;}else{y=(h&2049|0)!=0&1;x=(h&2048|0)==0?((h&1|0)==0?21885:21890):21887;}dv(e)|0;z=D&2146435072;do if(z>>>0<2146435072|(z|0)==2146435072&0<0){p=+dG(e,C)*2.0;if(p!=0.0)c[C>>2]=(c[C>>2]|0)+-1;if((i|32|0)==97){o=(i&32|0)==0?x:x+9|0;n=y|2;do if(!(g>>>0>11|(12-g|0)==0)){e=8.0;j=12-g|0;do{j=j+-1|0;e=e*16.0;}while((j|0)!=0);if((a[o>>0]|0)==45){e=-(e+(-p-e));break}else{e=p+e-e;break}}else e=p;while(0);k=c[C>>2]|0;j=(k|0)<0?0-k|0:k;j=jm(j,((j|0)<0)<<31>>31,A)|0;if((j|0)==(A|0)){a[C+512+11>>0]=48;j=C+512+11|0;}a[j+-1>>0]=(k>>31&2)+43;m=j+-2|0;a[m>>0]=i+15;j=C+524|0;do{z=~~e;k=j+1|0;a[j>>0]=d[21919+z>>0]|i&32;e=(e-+(z|0))*16.0;if((k-B|0)==1?!((h&8|0)==0&((g|0)<1&e==0.0)):0){a[k>>0]=46;j=j+2|0;}else j=k;}while(e!=0.0);B=j-B|0;j=(g|0)!=0&(B+-2|0)<(g|0)?g+2|0:B;Om(b,32,f,A-m+n+j|0,h);ty(b,o,n);Om(b,48,f,A-m+n+j|0,h^65536);ty(b,C+524|0,B);Om(b,48,j-B|0,0,0);ty(b,m,A-m|0);Om(b,32,f,A-m+n+j|0,h^8192);j=A-m+n+j|0;break}k=(g|0)<0?6:g;if(p!=0.0){n=(c[C>>2]|0)+-28|0;c[C>>2]=n;e=p*268435456.0;}else{e=p;n=c[C>>2]|0;}z=(n|0)<0?C+8|0:C+8+288|0;j=z;do{v=~~e>>>0;c[j>>2]=v;j=j+4|0;e=(e-+(v>>>0))*1.0e9;}while(e!=0.0);if((n|0)>0){m=z;do{g=(n|0)<29?n:29;n=j+-4|0;if(n>>>0>=m>>>0){o=0;do{u=ot(c[n>>2]|0,0,g|0)|0;u=xv(u|0,D|0,o|0,0)|0;v=D;t=Br(u|0,v|0,1e9,0)|0;c[n>>2]=t;o=Oz(u|0,v|0,1e9,0)|0;n=n+-4|0;}while(n>>>0>=m>>>0);if(o){m=m+-4|0;c[m>>2]=o;}}while(1){if(j>>>0<=m>>>0)break;n=j+-4|0;if(!(c[n>>2]|0))j=n;else break}n=(c[C>>2]|0)-g|0;c[C>>2]=n;}while((n|0)>0)}else m=z;if((n|0)<0)do{g=0-n|0;g=(g|0)<9?g:9;if(m>>>0<j>>>0){o=0;n=m;do{v=c[n>>2]|0;c[n>>2]=(v>>>g)+o;o=S(v&(1<<g)+-1,1e9>>>g)|0;n=n+4|0;}while(n>>>0<j>>>0);m=(c[m>>2]|0)==0?m+4|0:m;if(o){c[j>>2]=o;j=j+4|0;}}else m=(c[m>>2]|0)==0?m+4|0:m;n=(i|32|0)==102?z:m;j=(j-n>>2|0)>(((k+25|0)/9|0)+1|0)?n+(((k+25|0)/9|0)+1<<2)|0:j;n=(c[C>>2]|0)+g|0;c[C>>2]=n;}while((n|0)<0);if(m>>>0<j>>>0){n=(z-m>>2)*9|0;g=c[m>>2]|0;if(g>>>0<10)s=n;else{o=10;do{o=o*10|0;n=n+1|0;}while(g>>>0>=o>>>0);s=n;}}else s=0;o=k-((i|32|0)!=102?s:0)+(((k|0)!=0&(i|32|0)==103)<<31>>31)|0;if((o|0)<(((j-z>>2)*9|0)+-9|0)){n=z+4+(((o+9216|0)/9|0)+-1024<<2)|0;if((((o+9216|0)%9|0)+1|0)<9){g=((o+9216|0)%9|0)+1|0;o=10;do{o=o*10|0;g=g+1|0;}while((g|0)!=9)}else o=10;q=c[n>>2]|0;r=(q>>>0)%(o>>>0)|0;g=(n+4|0)==(j|0);if(!(g&(r|0)==0)){p=(((q>>>0)/(o>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;v=(o|0)/2|0;e=r>>>0<v>>>0?.5:g&(r|0)==(v|0)?1.0:1.5;if(y){v=(a[x>>0]|0)==45;e=v?-e:e;p=v?-p:p;}c[n>>2]=q-r;if(p+e!=p){v=q-r+o|0;c[n>>2]=v;if(v>>>0>999999999)while(1){o=n+-4|0;c[n>>2]=0;if(o>>>0<m>>>0){m=m+-4|0;c[m>>2]=0;}v=(c[o>>2]|0)+1|0;c[o>>2]=v;if(v>>>0>999999999)n=o;else{n=o;break}}o=(z-m>>2)*9|0;q=c[m>>2]|0;if(q>>>0>=10){g=10;do{g=g*10|0;o=o+1|0;}while(q>>>0>=g>>>0)}}else o=s;}else o=s;u=n+4|0;j=j>>>0>u>>>0?u:j;u=m;}else{o=s;u=m;}v=j;while(1){if(v>>>0<=u>>>0){t=0;break}j=v+-4|0;if(!(c[j>>2]|0))v=j;else{t=1;break}}q=0-o|0;do if((i|32|0)==103){if((o|0)>-5?((((k|0)!=0^1)&1)+k|0)>(o|0):0){n=i+-1|0;k=(((k|0)!=0^1)&1)+k+-1-o|0;}else{n=i+-2|0;k=(((k|0)!=0^1)&1)+k+-1|0;}if(!(h&8)){if(t?(w=c[v+-4>>2]|0,(w|0)!=0):0)if(!((w>>>0)%10|0)){j=0;m=10;do{m=m*10|0;j=j+1|0;}while(!((w>>>0)%(m>>>0)|0|0))}else j=0;else j=9;m=((v-z>>2)*9|0)+-9|0;if((n|32|0)==102){g=m-j|0;g=(g|0)>0?g:0;k=(k|0)<(g|0)?k:g;g=0;break}else{g=m+o-j|0;g=(g|0)>0?g:0;k=(k|0)<(g|0)?k:g;g=0;break}}else g=h&8;}else{n=i;g=h&8;}while(0);s=k|g;m=(n|32|0)==102;if(m){r=0;j=(o|0)>0?o:0;}else{j=(o|0)<0?q:o;j=jm(j,((j|0)<0)<<31>>31,A)|0;if((A-j|0)<2)do{j=j+-1|0;a[j>>0]=48;}while((A-j|0)<2);a[j+-1>>0]=(o>>31&2)+43;j=j+-2|0;a[j>>0]=n;r=j;j=A-j|0;}j=y+1+k+((s|0)!=0&1)+j|0;Om(b,32,f,j,h);ty(b,x,y);Om(b,48,f,j,h^65536);if(m){o=u>>>0>z>>>0?z:u;n=o;do{m=jm(c[n>>2]|0,0,C+524+9|0)|0;if((n|0)==(o|0)){if((m|0)==(C+524+9|0)){a[C+524+8>>0]=48;m=C+524+8|0;}}else if(m>>>0>(C+524|0)>>>0){Ik(C+524|0,48,m-B|0)|0;do m=m+-1|0;while(m>>>0>(C+524|0)>>>0)}ty(b,m,C+524+9-m|0);n=n+4|0;}while(n>>>0<=z>>>0);if(s|0)ty(b,21935,1);if(n>>>0<v>>>0&(k|0)>0)while(1){m=jm(c[n>>2]|0,0,C+524+9|0)|0;if(m>>>0>(C+524|0)>>>0){Ik(C+524|0,48,m-B|0)|0;do m=m+-1|0;while(m>>>0>(C+524|0)>>>0)}ty(b,m,(k|0)<9?k:9);n=n+4|0;m=k+-9|0;if(!(n>>>0<v>>>0&(k|0)>9)){k=m;break}else k=m;}Om(b,48,k+9|0,9,0);}else{q=t?v:u+4|0;if((k|0)>-1){g=(g|0)==0;o=u;do{m=jm(c[o>>2]|0,0,C+524+9|0)|0;if((m|0)==(C+524+9|0)){a[C+524+8>>0]=48;m=C+524+8|0;}do if((o|0)==(u|0)){n=m+1|0;ty(b,m,1);if(g&(k|0)<1){m=n;break}ty(b,21935,1);m=n;}else{if(m>>>0<=(C+524|0)>>>0)break;Ik(C+524|0,48,m+(0-B)|0)|0;do m=m+-1|0;while(m>>>0>(C+524|0)>>>0)}while(0);z=C+524+9-m|0;ty(b,m,(k|0)>(z|0)?z:k);k=k-z|0;o=o+4|0;}while(o>>>0<q>>>0&(k|0)>-1)}Om(b,48,k+18|0,18,0);ty(b,r,A-r|0);}Om(b,32,f,j,h^8192);}else{j=y+3|0;Om(b,32,f,j,h&-65537);ty(b,x,y);ty(b,e!=e|0.0!=0.0?(i&32|0?21911:21915):i&32|0?21903:21907,3);Om(b,32,f,j,h^8192);}while(0);l=C;return ((j|0)<(f|0)?f:j)|0}function Sc(d,e,f,g,i){d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;x=l;l=l+64|0;c[x+16>>2]=e;w=x+24+40|0;k=0;j=0;p=0;a:while(1){do if((j|0)>-1)if((k|0)>(2147483647-j|0)){c[6581]=75;j=-1;break}else{j=k+j|0;break}while(0);k=a[e>>0]|0;if(!(k<<24>>24)){v=87;break}else m=e;b:while(1){switch(k<<24>>24){case 37:{k=m;v=9;break b}case 0:{k=m;break b}default:{}}u=m+1|0;c[x+16>>2]=u;k=a[u>>0]|0;m=u;}c:do if((v|0)==9)while(1){v=0;if((a[m+1>>0]|0)!=37)break c;k=k+1|0;m=m+2|0;c[x+16>>2]=m;if((a[m>>0]|0)==37)v=9;else break}while(0);k=k-e|0;if(d|0)ty(d,e,k);if(k|0){e=m;continue}n=m+1|0;k=(a[n>>0]|0)+-48|0;if(k>>>0<10){u=(a[m+2>>0]|0)==36;s=u?k:-1;p=u?1:p;n=u?m+3|0:n;}else s=-1;c[x+16>>2]=n;k=a[n>>0]|0;d:do if(((k<<24>>24)+-32|0)>>>0<32){m=0;q=k;o=(k<<24>>24)+-32|0;while(1){k=1<<o;if(!(k&75913)){k=q;break d}m=k|m;n=n+1|0;c[x+16>>2]=n;k=a[n>>0]|0;o=(k<<24>>24)+-32|0;if(o>>>0>=32)break;else q=k;}}else m=0;while(0);if(k<<24>>24==42){o=n+1|0;k=(a[o>>0]|0)+-48|0;if(k>>>0<10?(a[n+2>>0]|0)==36:0){c[i+(k<<2)>>2]=10;k=c[g+((a[o>>0]|0)+-48<<3)>>2]|0;p=1;n=n+3|0;}else{if(p|0){j=-1;break}if(d|0){p=(c[f>>2]|0)+(4-1)&~(4-1);k=c[p>>2]|0;c[f>>2]=p+4;p=0;n=o;}else{k=0;p=0;n=o;}}c[x+16>>2]=n;t=(k|0)<0;k=t?0-k|0:k;t=t?m|8192:m;}else{k=qp(x+16|0)|0;if((k|0)<0){j=-1;break}t=m;n=c[x+16>>2]|0;}do if((a[n>>0]|0)==46){m=n+1|0;if((a[m>>0]|0)!=42){c[x+16>>2]=m;m=qp(x+16|0)|0;n=c[x+16>>2]|0;break}o=n+2|0;m=(a[o>>0]|0)+-48|0;if(m>>>0<10?(a[n+3>>0]|0)==36:0){c[i+(m<<2)>>2]=10;m=c[g+((a[o>>0]|0)+-48<<3)>>2]|0;n=n+4|0;c[x+16>>2]=n;break}if(p|0){j=-1;break a}if(d|0){u=(c[f>>2]|0)+(4-1)&~(4-1);m=c[u>>2]|0;c[f>>2]=u+4;}else m=0;c[x+16>>2]=o;n=o;}else m=-1;while(0);r=0;while(1){if(((a[n>>0]|0)+-65|0)>>>0>57){j=-1;break a}u=n+1|0;c[x+16>>2]=u;o=a[(a[n>>0]|0)+-65+(21403+(r*58|0))>>0]|0;if(((o&255)+-1|0)>>>0<8){r=o&255;n=u;}else break}if(!(o<<24>>24)){j=-1;break}q=(s|0)>-1;do if(o<<24>>24==19)if(q){j=-1;break a}else v=49;else{if(q){c[i+(s<<2)>>2]=o&255;s=g+(s<<3)|0;v=c[s+4>>2]|0;c[x>>2]=c[s>>2];c[x+4>>2]=v;v=49;break}if(!d){j=0;break a}Ag(x,o&255,f);}while(0);if((v|0)==49?(v=0,(d|0)==0):0){k=0;e=u;continue}n=a[n>>0]|0;n=(r|0)!=0&(n&15|0)==3?n&-33:n;s=t&-65537;t=(t&8192|0)==0?t:s;e:do switch(n|0){case 110:switch((r&255)<<24>>24){case 0:{c[c[x>>2]>>2]=j;k=0;e=u;continue a}case 1:{c[c[x>>2]>>2]=j;k=0;e=u;continue a}case 2:{k=c[x>>2]|0;c[k>>2]=j;c[k+4>>2]=((j|0)<0)<<31>>31;k=0;e=u;continue a}case 3:{b[c[x>>2]>>1]=j;k=0;e=u;continue a}case 4:{a[c[x>>2]>>0]=j;k=0;e=u;continue a}case 6:{c[c[x>>2]>>2]=j;k=0;e=u;continue a}case 7:{k=c[x>>2]|0;c[k>>2]=j;c[k+4>>2]=((j|0)<0)<<31>>31;k=0;e=u;continue a}default:{k=0;e=u;continue a}}case 112:{n=120;m=m>>>0>8?m:8;e=t|8;v=61;break}case 88:case 120:{e=t;v=61;break}case 111:{e=c[x>>2]|0;n=c[x+4>>2]|0;s=Aq(e,n,w)|0;r=s;o=0;q=21867;m=(t&8|0)==0|(m|0)>(w-s|0)?m:w-s+1|0;s=t;v=67;break}case 105:case 100:{e=c[x>>2]|0;n=c[x+4>>2]|0;if((n|0)<0){e=Wt(0,0,e|0,n|0)|0;n=D;c[x>>2]=e;c[x+4>>2]=n;o=1;q=21867;v=66;break e}else{o=(t&2049|0)!=0&1;q=(t&2048|0)==0?((t&1|0)==0?21867:21869):21868;v=66;break e}}case 117:{o=0;q=21867;e=c[x>>2]|0;n=c[x+4>>2]|0;v=66;break}case 99:{a[x+24+39>>0]=c[x>>2];e=x+24+39|0;o=0;q=21867;r=w;n=1;m=s;break}case 109:{n=oG(c[6581]|0)|0;v=71;break}case 115:{n=c[x>>2]|0;n=n|0?n:21877;v=71;break}case 67:{c[x+8>>2]=c[x>>2];c[x+8+4>>2]=0;c[x>>2]=x+8;r=-1;n=x+8|0;v=75;break}case 83:{e=c[x>>2]|0;if(!m){Om(d,32,k,0,t);e=0;v=84;}else{r=m;n=e;v=75;}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{k=Rc(d,+h[x>>3],k,m,t,n)|0;e=u;continue a}default:{o=0;q=21867;r=w;n=m;m=t;}}while(0);f:do if((v|0)==61){y=c[x>>2]|0;t=c[x+4>>2]|0;r=yp(y,t,w,n&32)|0;q=(e&8|0)==0|(y|0)==0&(t|0)==0;o=q?0:2;q=q?21867:21867+(n>>4)|0;s=e;e=y;n=t;v=67;}else if((v|0)==66){r=jm(e,n,w)|0;s=t;v=67;}else if((v|0)==71){v=0;y=tj(n,m)|0;e=n;o=0;q=21867;r=(y|0)==0?n+m|0:y;n=(y|0)==0?m:y-n|0;m=s;}else if((v|0)==75){v=0;q=n;e=0;m=0;while(1){o=c[q>>2]|0;if(!o)break;m=fz(x+20|0,o)|0;if((m|0)<0|m>>>0>(r-e|0)>>>0)break;e=m+e|0;if(r>>>0>e>>>0)q=q+4|0;else break}if((m|0)<0){j=-1;break a}Om(d,32,k,e,t);if(!e){e=0;v=84;}else{o=0;while(1){m=c[n>>2]|0;if(!m){v=84;break f}m=fz(x+20|0,m)|0;o=m+o|0;if((o|0)>(e|0)){v=84;break f}ty(d,x+20|0,m);if(o>>>0>=e>>>0){v=84;break}else n=n+4|0;}}}while(0);if((v|0)==67){v=0;n=(e|0)!=0|(n|0)!=0;y=(m|0)!=0|n;n=((n^1)&1)+(w-r)|0;e=y?r:w;r=w;n=y?((m|0)>(n|0)?m:n):m;m=(m|0)>-1?s&-65537:s;}else if((v|0)==84){v=0;Om(d,32,k,e,t^8192);k=(k|0)>(e|0)?k:e;e=u;continue}t=r-e|0;s=(n|0)<(t|0)?t:n;y=s+o|0;k=(k|0)<(y|0)?y:k;Om(d,32,k,y,m);ty(d,q,o);Om(d,48,k,y,m^65536);Om(d,48,s,t,0);ty(d,e,t);Om(d,32,k,y,m^8192);e=u;}g:do if((v|0)==87)if(!d)if(!p)j=0;else{j=1;while(1){e=c[i+(j<<2)>>2]|0;if(!e){k=0;break}Ag(g+(j<<3)|0,e,f);j=j+1|0;if((j|0)>=10){j=1;break g}}while(1){e=j+1|0;if(k|0){j=-1;break g}if((e|0)>=10){j=1;break g}j=e;k=c[i+(e<<2)>>2]|0;}}while(0);l=x;return j|0}function Tc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(!a)return;h=c[6458]|0;if((a+-8|0)>>>0<h>>>0)Ua();b=c[a+-4>>2]|0;if((b&3|0)==1)Ua();o=a+-8+(b&-8)|0;a:do if(!(b&1)){e=c[a+-8>>2]|0;if(!(b&3))return;k=a+-8+(0-e)|0;j=e+(b&-8)|0;if(k>>>0<h>>>0)Ua();if((k|0)==(c[6459]|0)){a=c[o+4>>2]|0;if((a&3|0)!=3){r=k;f=j;m=k;break}c[6456]=j;c[o+4>>2]=a&-2;c[k+4>>2]=j|1;c[k+j>>2]=j;return}if(e>>>0<256){a=c[k+8>>2]|0;b=c[k+12>>2]|0;if((a|0)!=(25856+(e>>>3<<1<<2)|0)){if(a>>>0<h>>>0)Ua();if((c[a+12>>2]|0)!=(k|0))Ua();}if((b|0)==(a|0)){c[6454]=c[6454]&~(1<<(e>>>3));r=k;f=j;m=k;break}if((b|0)!=(25856+(e>>>3<<1<<2)|0)){if(b>>>0<h>>>0)Ua();if((c[b+8>>2]|0)!=(k|0))Ua();else d=b+8|0;}else d=b+8|0;c[a+12>>2]=b;c[d>>2]=a;r=k;f=j;m=k;break}g=c[k+24>>2]|0;a=c[k+12>>2]|0;do if((a|0)==(k|0)){a=c[k+16+4>>2]|0;if(!a){a=c[k+16>>2]|0;if(!a){i=0;break}else e=k+16|0;}else e=k+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b;}}if(e>>>0<h>>>0)Ua();else{c[e>>2]=0;i=a;break}}else{b=c[k+8>>2]|0;if(b>>>0<h>>>0)Ua();if((c[b+12>>2]|0)!=(k|0))Ua();if((c[a+8>>2]|0)==(k|0)){c[b+12>>2]=a;c[a+8>>2]=b;i=a;break}else Ua();}while(0);if(g){a=c[k+28>>2]|0;do if((k|0)==(c[26120+(a<<2)>>2]|0)){c[26120+(a<<2)>>2]=i;if(!i){c[6455]=c[6455]&~(1<<a);r=k;f=j;m=k;break a}}else if(g>>>0>=(c[6458]|0)>>>0){c[g+16+(((c[g+16>>2]|0)!=(k|0)&1)<<2)>>2]=i;if(!i){r=k;f=j;m=k;break a}else break}else Ua();while(0);b=c[6458]|0;if(i>>>0<b>>>0)Ua();c[i+24>>2]=g;a=c[k+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Ua();else{c[i+16>>2]=a;c[a+24>>2]=i;break}while(0);a=c[k+16+4>>2]|0;if(a)if(a>>>0<(c[6458]|0)>>>0)Ua();else{c[i+20>>2]=a;c[a+24>>2]=i;r=k;f=j;m=k;break}else{r=k;f=j;m=k;}}else{r=k;f=j;m=k;}}else{r=a+-8|0;f=b&-8;m=a+-8|0;}while(0);if(m>>>0>=o>>>0)Ua();d=c[o+4>>2]|0;if(!(d&1))Ua();if(!(d&2)){a=c[6459]|0;if((o|0)==(c[6460]|0)){q=(c[6457]|0)+f|0;c[6457]=q;c[6460]=r;c[r+4>>2]=q|1;if((r|0)!=(a|0))return;c[6459]=0;c[6456]=0;return}if((o|0)==(a|0)){q=(c[6456]|0)+f|0;c[6456]=q;c[6459]=m;c[r+4>>2]=q|1;c[m+q>>2]=q;return}f=(d&-8)+f|0;b:do if(d>>>0>=256){g=c[o+24>>2]|0;a=c[o+12>>2]|0;do if((a|0)==(o|0)){a=c[o+16+4>>2]|0;if(!a){a=c[o+16>>2]|0;if(!a){n=0;break}else e=o+16|0;}else e=o+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b;}}if(e>>>0<(c[6458]|0)>>>0)Ua();else{c[e>>2]=0;n=a;break}}else{b=c[o+8>>2]|0;if(b>>>0<(c[6458]|0)>>>0)Ua();if((c[b+12>>2]|0)!=(o|0))Ua();if((c[a+8>>2]|0)==(o|0)){c[b+12>>2]=a;c[a+8>>2]=b;n=a;break}else Ua();}while(0);if(g|0){a=c[o+28>>2]|0;do if((o|0)==(c[26120+(a<<2)>>2]|0)){c[26120+(a<<2)>>2]=n;if(!n){c[6455]=c[6455]&~(1<<a);break b}}else if(g>>>0>=(c[6458]|0)>>>0){c[g+16+(((c[g+16>>2]|0)!=(o|0)&1)<<2)>>2]=n;if(!n)break b;else break}else Ua();while(0);b=c[6458]|0;if(n>>>0<b>>>0)Ua();c[n+24>>2]=g;a=c[o+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Ua();else{c[n+16>>2]=a;c[a+24>>2]=n;break}while(0);a=c[o+16+4>>2]|0;if(a|0)if(a>>>0<(c[6458]|0)>>>0)Ua();else{c[n+20>>2]=a;c[a+24>>2]=n;break}}}else{a=c[o+8>>2]|0;b=c[o+12>>2]|0;if((a|0)!=(25856+(d>>>3<<1<<2)|0)){if(a>>>0<(c[6458]|0)>>>0)Ua();if((c[a+12>>2]|0)!=(o|0))Ua();}if((b|0)==(a|0)){c[6454]=c[6454]&~(1<<(d>>>3));break}if((b|0)!=(25856+(d>>>3<<1<<2)|0)){if(b>>>0<(c[6458]|0)>>>0)Ua();if((c[b+8>>2]|0)!=(o|0))Ua();else l=b+8|0;}else l=b+8|0;c[a+12>>2]=b;c[l>>2]=a;}while(0);c[r+4>>2]=f|1;c[m+f>>2]=f;if((r|0)==(c[6459]|0)){c[6456]=f;return}}else{c[o+4>>2]=d&-2;c[r+4>>2]=f|1;c[m+f>>2]=f;}b=f>>>3;if(f>>>0<256){a=c[6454]|0;if(a&1<<b){a=c[25856+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[6458]|0)>>>0)Ua();else{p=a;q=25856+(b<<1<<2)+8|0;}}else{c[6454]=a|1<<b;p=25856+(b<<1<<2)|0;q=25856+(b<<1<<2)+8|0;}c[q>>2]=r;c[p+12>>2]=r;c[r+8>>2]=p;c[r+12>>2]=25856+(b<<1<<2);return}a=f>>>8;if(a)if(f>>>0>16777215)a=31;else{q=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);a=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(q+245760|0)>>>16&2)+(q<<((q+245760|0)>>>16&2)>>>15)|0;a=f>>>(a+7|0)&1|a<<1;}else a=0;e=26120+(a<<2)|0;c[r+28>>2]=a;c[r+20>>2]=0;c[r+16>>2]=0;b=c[6455]|0;d=1<<a;do if(b&d){b=f<<((a|0)==31?0:25-(a>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){a=124;break}d=e+16+(b>>>31<<2)|0;a=c[d>>2]|0;if(!a){a=121;break}else{b=b<<1;e=a;}}if((a|0)==121)if(d>>>0<(c[6458]|0)>>>0)Ua();else{c[d>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;break}else if((a|0)==124){a=e+8|0;b=c[a>>2]|0;q=c[6458]|0;if(b>>>0>=q>>>0&e>>>0>=q>>>0){c[b+12>>2]=r;c[a>>2]=r;c[r+8>>2]=b;c[r+12>>2]=e;c[r+24>>2]=0;break}else Ua();}}else{c[6455]=b|d;c[e>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;}while(0);r=(c[6462]|0)+-1|0;c[6462]=r;if(!r)a=26272;else return;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0;}c[6462]=-1;return}function Uc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;if((a[b+180>>0]|0)==0?(a[b+48>>0]|0)!=0:0){r=+g[b+116>>2];h=+g[e>>2];I=+g[b+132>>2];f=+g[e+4>>2];J=+g[b+148>>2];y=+g[e+8>>2];s=+g[b+120>>2];G=+g[b+136>>2];H=+g[b+152>>2];t=+g[b+124>>2];F=+g[b+140>>2];u=+g[b+156>>2];w=+g[e+16>>2];x=+g[e+20>>2];z=+g[e+24>>2];E=+g[e+32>>2];v=+g[e+36>>2];A=+g[e+40>>2];m=+g[b+164>>2];i=+g[b+168>>2];D=+g[b+172>>2];C=+g[e+48>>2]+(h*m+f*i+y*D);B=w*m+x*i+z*D+ +g[e+52>>2];D=E*m+v*i+A*D+ +g[e+56>>2];g[b+824>>2]=r*h+I*f+J*y;g[b+828>>2]=h*s+f*G+y*H;g[b+832>>2]=h*t+f*F+y*u;g[b+836>>2]=0.0;g[b+840>>2]=r*w+I*x+J*z;g[b+844>>2]=s*w+G*x+H*z;g[b+848>>2]=t*w+F*x+u*z;g[b+852>>2]=0.0;g[b+856>>2]=r*E+I*v+J*A;g[b+860>>2]=s*E+G*v+H*A;g[b+864>>2]=t*E+F*v+u*A;g[b+868>>2]=0.0;g[b+872>>2]=C;g[b+876>>2]=B;g[b+880>>2]=D;g[b+884>>2]=0.0;D=+g[b+52>>2];B=+g[d>>2];C=+g[b+68>>2];A=+g[d+4>>2];u=+g[b+84>>2];v=+g[d+8>>2];F=+g[b+56>>2];E=+g[b+72>>2];t=+g[b+88>>2];H=+g[b+60>>2];G=+g[b+76>>2];s=+g[b+92>>2];J=+g[d+16>>2];I=+g[d+20>>2];r=+g[d+24>>2];z=+g[d+32>>2];x=+g[d+36>>2];w=+g[d+40>>2];y=+g[b+100>>2];f=+g[b+104>>2];h=+g[b+108>>2];k=b+856|0;l=b+840|0;i=J*y+I*f+r*h;m=H*z+G*x+s*w;n=F*z+E*x+t*w;o=D*z+C*x+u*w;p=H*J+G*I+s*r;q=F*J+E*I+t*r;r=D*J+C*I+u*r;s=B*H+A*G+v*s;t=B*F+A*E+v*t;u=D*B+C*A+u*v;v=B*y+A*f+v*h;f=z*y+x*f;h=w*h;}else{r=+g[b+52>>2];h=+g[d>>2];x=+g[b+68>>2];f=+g[d+4>>2];w=+g[b+84>>2];H=+g[d+8>>2];s=+g[b+56>>2];z=+g[b+72>>2];y=+g[b+88>>2];t=+g[b+60>>2];A=+g[b+76>>2];u=+g[b+92>>2];J=+g[d+16>>2];I=+g[d+20>>2];G=+g[d+24>>2];B=+g[d+32>>2];v=+g[d+36>>2];F=+g[d+40>>2];m=+g[b+100>>2];i=+g[b+104>>2];C=+g[b+108>>2];D=+g[d+48>>2]+(h*m+f*i+H*C);E=J*m+I*i+G*C+ +g[d+52>>2];C=B*m+v*i+F*C+ +g[d+56>>2];g[b+824>>2]=r*h+x*f+w*H;g[b+828>>2]=h*s+f*z+H*y;g[b+832>>2]=h*t+f*A+H*u;g[b+836>>2]=0.0;g[b+840>>2]=r*J+x*I+w*G;g[b+844>>2]=s*J+z*I+y*G;g[b+848>>2]=t*J+A*I+u*G;g[b+852>>2]=0.0;g[b+856>>2]=r*B+x*v+w*F;g[b+860>>2]=s*B+z*v+y*F;g[b+864>>2]=t*B+A*v+u*F;g[b+868>>2]=0.0;g[b+872>>2]=D;g[b+876>>2]=E;g[b+880>>2]=C;g[b+884>>2]=0.0;C=+g[b+116>>2];E=+g[e>>2];D=+g[b+132>>2];F=+g[e+4>>2];u=+g[b+148>>2];v=+g[e+8>>2];A=+g[b+120>>2];B=+g[b+136>>2];t=+g[b+152>>2];y=+g[b+124>>2];z=+g[b+140>>2];s=+g[b+156>>2];w=+g[e+16>>2];x=+g[e+20>>2];r=+g[e+24>>2];G=+g[e+32>>2];I=+g[e+36>>2];J=+g[e+40>>2];H=+g[b+164>>2];f=+g[b+168>>2];h=+g[b+172>>2];k=b+856|0;l=b+840|0;i=w*H+x*f+r*h;m=y*G+z*I+s*J;n=A*G+B*I+t*J;o=C*G+D*I+u*J;p=y*w+z*x+s*r;q=A*w+B*x+t*r;r=C*w+D*x+u*r;s=E*y+F*z+v*s;t=E*A+F*B+v*t;u=C*E+D*F+u*v;v=E*H+F*f+v*h;d=e;f=G*H+I*f;h=J*h;}J=v+ +g[d+48>>2];i=i+ +g[d+52>>2];f=h+f+ +g[d+56>>2];g[b+888>>2]=u;g[b+892>>2]=t;g[b+896>>2]=s;g[b+900>>2]=0.0;g[b+904>>2]=r;g[b+908>>2]=q;g[b+912>>2]=p;g[b+916>>2]=0.0;g[b+920>>2]=o;g[b+924>>2]=n;g[b+928>>2]=m;g[b+932>>2]=0.0;g[b+936>>2]=J;g[b+940>>2]=i;g[b+944>>2]=f;g[b+948>>2]=0.0;c[b+968>>2]=c[b+872>>2];c[b+968+4>>2]=c[b+872+4>>2];c[b+968+8>>2]=c[b+872+8>>2];c[b+968+12>>2]=c[b+872+12>>2];c[b+984>>2]=c[b+936>>2];c[b+984+4>>2]=c[b+936+4>>2];c[b+984+8>>2]=c[b+936+8>>2];c[b+984+12>>2]=c[b+936+12>>2];d=c[b+824>>2]|0;e=c[l>>2]|0;l=c[k>>2]|0;c[b+952>>2]=d;c[b+956>>2]=e;c[b+960>>2]=l;g[b+964>>2]=0.0;f=(c[j>>2]=d,+g[j>>2]);h=(c[j>>2]=e,+g[j>>2]);i=(c[j>>2]=l,+g[j>>2]);if((a[b+180>>0]|0)==0?(a[b+48>>0]|0)==0:0){l=b+984|0;k=b+968|0;H=+g[k>>2];G=+g[l>>2];G=H-G;e=k+4|0;H=+g[e>>2];e=l+4|0;I=+g[e>>2];I=H-I;k=k+8|0;H=+g[k>>2];l=l+8|0;J=+g[l>>2];J=H-J;l=b+1016|0;g[l>>2]=G;l=b+1020|0;g[l>>2]=I;l=b+1024|0;g[l>>2]=J;l=b+1028|0;g[l>>2]=0.0;H=f*G;D=h*I;D=H+D;H=i*J;H=D+H;D=f*H;E=h*H;F=i*H;C=+g[b+968>>2];D=C+D;l=b+972|0;C=+g[l>>2];E=C+E;l=b+976|0;C=+g[l>>2];F=C+F;l=b+1e3|0;g[l>>2]=D;l=b+1004|0;g[l>>2]=E;l=b+1008|0;g[l>>2]=F;l=b+1012|0;g[l>>2]=0.0;l=b+1032|0;g[l>>2]=H;l=b+828|0;k=b+844|0;e=b+860|0;H=+g[l>>2];F=+g[k>>2];E=+g[e>>2];H=H*G;F=F*I;F=H+F;E=E*J;E=F+E;e=b+1036|0;g[e>>2]=E;e=b+832|0;k=b+848|0;l=b+864|0;E=+g[e>>2];F=+g[k>>2];H=+g[l>>2];G=E*G;I=F*I;I=G+I;J=H*J;J=I+J;b=b+1040|0;g[b>>2]=J;return}l=b+968|0;k=b+984|0;H=+g[k>>2];G=+g[l>>2];G=H-G;e=k+4|0;H=+g[e>>2];e=l+4|0;I=+g[e>>2];I=H-I;k=k+8|0;H=+g[k>>2];l=l+8|0;J=+g[l>>2];J=H-J;l=b+1016|0;g[l>>2]=G;l=b+1020|0;g[l>>2]=I;l=b+1024|0;g[l>>2]=J;l=b+1028|0;g[l>>2]=0.0;H=f*G;D=h*I;D=H+D;H=i*J;H=D+H;D=f*H;E=h*H;F=i*H;C=+g[b+968>>2];D=C+D;l=b+972|0;C=+g[l>>2];E=C+E;l=b+976|0;C=+g[l>>2];F=C+F;l=b+1e3|0;g[l>>2]=D;l=b+1004|0;g[l>>2]=E;l=b+1008|0;g[l>>2]=F;l=b+1012|0;g[l>>2]=0.0;l=b+1032|0;g[l>>2]=H;l=b+828|0;k=b+844|0;e=b+860|0;H=+g[l>>2];F=+g[k>>2];E=+g[e>>2];H=H*G;F=F*I;F=H+F;E=E*J;E=F+E;e=b+1036|0;g[e>>2]=E;e=b+832|0;k=b+848|0;l=b+864|0;E=+g[e>>2];F=+g[k>>2];H=+g[l>>2];G=E*G;I=F*I;I=G+I;J=H*J;J=I+J;b=b+1040|0;g[b>>2]=J;return}function Vc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0;u=l;l=l+672|0;c[u+448+8>>2]=0;c[u+448+12>>2]=1065353216;c[u+448+16>>2]=1065353216;c[u+448+20>>2]=1065353216;g[u+448+24>>2]=0.0;c[u+448>>2]=6796;c[u+448+4>>2]=8;g[u+448+28>>2]=0.0;g[u+448+44>>2]=0.0;g[u+384>>2]=1.0;m=u+384+4|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;g[u+384+20>>2]=1.0;n=u+384+24|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[u+384+40>>2]=1.0;g[u+384+44>>2]=0.0;c[u+384+48>>2]=c[a>>2];c[u+384+48+4>>2]=c[a+4>>2];c[u+384+48+8>>2]=c[a+8>>2];c[u+384+48+12>>2]=c[a+12>>2];a=e;k=a+36|0;do{c[a>>2]=0;a=a+4|0;}while((a|0)<(k|0));c[u+504>>2]=b;c[u+504+4>>2]=u+448;w=+g[d>>2];v=+g[d+16>>2];f=+g[d+32>>2];h=+g[d+4>>2];i=+g[d+20>>2];j=+g[d+36>>2];s=+g[d+8>>2];q=+g[d+24>>2];o=+g[d+40>>2];g[u+504+8>>2]=w+v*0.0+f*0.0;g[u+504+12>>2]=h+i*0.0+j*0.0;g[u+504+16>>2]=s+q*0.0+o*0.0;g[u+504+20>>2]=0.0;g[u+504+24>>2]=w*0.0+v+f*0.0;g[u+504+28>>2]=h*0.0+i+j*0.0;g[u+504+32>>2]=s*0.0+q+o*0.0;g[u+504+36>>2]=0.0;g[u+504+40>>2]=w*0.0+v*0.0+f;g[u+504+44>>2]=h*0.0+i*0.0+j;g[u+504+48>>2]=s*0.0+q*0.0+o;g[u+504+52>>2]=0.0;o=+g[u+384+48>>2]-+g[d+48>>2];q=+g[u+384+52>>2]-+g[d+52>>2];s=+g[u+384+56>>2]-+g[d+56>>2];F=+g[u+384>>2];E=+g[u+384+16>>2];D=+g[u+384+32>>2];C=+g[m>>2];B=+g[u+384+20>>2];A=+g[u+384+36>>2];z=+g[u+384+8>>2];y=+g[n>>2];x=+g[u+384+40>>2];p=+g[d+8>>2];r=+g[d+24>>2];t=+g[d+40>>2];g[u+504+56>>2]=w*F+v*E+f*D;g[u+504+60>>2]=w*C+v*B+f*A;g[u+504+64>>2]=w*z+v*y+f*x;g[u+504+68>>2]=0.0;g[u+504+72>>2]=F*h+E*i+D*j;g[u+504+76>>2]=C*h+B*i+A*j;g[u+504+80>>2]=z*h+y*i+x*j;g[u+504+84>>2]=0.0;g[u+504+88>>2]=F*p+E*r+D*t;g[u+504+92>>2]=C*p+B*r+A*t;g[u+504+96>>2]=z*p+y*r+x*t;g[u+504+100>>2]=0.0;g[u+504+104>>2]=o*w+q*v+s*f;g[u+504+108>>2]=o*h+q*i+s*j;g[u+504+112>>2]=o*p+q*r+s*t;g[u+504+116>>2]=0.0;c[u+504+120>>2]=80;c[u+504+124>>2]=0;c[u+364>>2]=0;c[u+128>>2]=0;c[u+128+4>>2]=0;c[u+128+8>>2]=0;c[u+128+12>>2]=0;c[u+376>>2]=2;c[u+368>>2]=0;g[u+144>>2]=0.0;c[u+648>>2]=1065353216;c[u+648+4>>2]=1065353216;c[u+648+8>>2]=1065353216;g[u+648+12>>2]=0.0;switch(Bc(u,u+504|0,u+648|0)|0){case 0:{a=c[u+372>>2]|0;if(!(c[a+32>>2]|0)){j=0.0;i=0.0;f=0.0;r=0.0;q=0.0;h=0.0;}else{n=0;f=0.0;i=0.0;j=0.0;h=0.0;q=0.0;r=0.0;do{t=+g[a+16+(n<<2)>>2];k=c[u+504+120>>2]|0;H=c[u+504+124>>2]|0;m=(c[u+504>>2]|0)+(H>>1)|0;if(H&1)k=c[(c[m>>2]|0)+k>>2]|0;Vb[k&127](u+648|0,m,c[a+(n<<2)>>2]|0);f=f+t*+g[u+648>>2];i=i+t*+g[u+648+4>>2];j=j+t*+g[u+648+8>>2];a=c[(c[u+372>>2]|0)+(n<<2)>>2]|0;o=-+g[a>>2];p=-+g[a+4>>2];s=-+g[a+8>>2];a=c[u+504+120>>2]|0;H=c[u+504+124>>2]|0;k=(c[u+504+4>>2]|0)+(H>>1)|0;if(H&1)a=c[(c[k>>2]|0)+a>>2]|0;E=+g[u+504+24>>2]*o+ +g[u+504+28>>2]*p+ +g[u+504+32>>2]*s;D=+g[u+504+40>>2]*o+ +g[u+504+44>>2]*p+ +g[u+504+48>>2]*s;g[u+632>>2]=+g[u+504+8>>2]*o+ +g[u+504+12>>2]*p+ +g[u+504+16>>2]*s;g[u+632+4>>2]=E;g[u+632+8>>2]=D;g[u+632+12>>2]=0.0;Vb[a&127](u+648|0,k,u+632|0);D=+g[u+648>>2];E=+g[u+648+4>>2];F=+g[u+648+8>>2];h=h+t*(D*+g[u+504+56>>2]+E*+g[u+504+60>>2]+F*+g[u+504+64>>2]+ +g[u+504+104>>2]);q=q+t*(D*+g[u+504+72>>2]+E*+g[u+504+76>>2]+F*+g[u+504+80>>2]+ +g[u+504+108>>2]);r=r+t*(D*+g[u+504+88>>2]+E*+g[u+504+92>>2]+F*+g[u+504+96>>2]+ +g[u+504+112>>2]);n=n+1|0;a=c[u+372>>2]|0;}while(n>>>0<(c[a+32>>2]|0)>>>0)}s=f*+g[d>>2]+i*+g[d+4>>2]+j*+g[d+8>>2]+ +g[d+48>>2];t=f*+g[d+16>>2]+i*+g[d+20>>2]+j*+g[d+24>>2]+ +g[d+52>>2];j=f*+g[d+32>>2]+i*+g[d+36>>2]+j*+g[d+40>>2]+ +g[d+56>>2];g[e+4>>2]=s;g[e+8>>2]=t;g[e+12>>2]=j;g[e+16>>2]=0.0;o=h*+g[d>>2]+q*+g[d+4>>2]+r*+g[d+8>>2]+ +g[d+48>>2];p=h*+g[d+16>>2]+q*+g[d+20>>2]+r*+g[d+24>>2]+ +g[d+52>>2];i=h*+g[d+32>>2]+q*+g[d+36>>2]+r*+g[d+40>>2]+ +g[d+56>>2];g[e+20>>2]=o;g[e+24>>2]=p;g[e+28>>2]=i;g[e+32>>2]=0.0;switch(c[b+4>>2]|0){case 8:{f=+g[b+28>>2]*+g[b+12>>2];break}case 0:{f=+g[b+44>>2];break}case 1:{f=+g[b+44>>2];break}case 13:{f=+g[b+44>>2];break}case 11:{f=+g[b+44>>2];break}case 10:{f=+g[b+44>>2];break}case 4:case 5:{f=+g[b+44>>2];break}default:f=+Db[c[(c[b>>2]|0)+48>>2]&15](b);}switch(c[u+448+4>>2]|0){case 8:{h=+g[u+448+28>>2]*+g[u+448+12>>2];break}case 0:{h=+g[u+448+44>>2];break}case 1:{h=+g[u+448+44>>2];break}case 13:{h=+g[u+448+44>>2];break}case 11:{h=+g[u+448+44>>2];break}case 10:{h=+g[u+448+44>>2];break}case 4:case 5:{h=+g[u+448+44>>2];break}default:h=+Db[c[(c[u+448>>2]|0)+48>>2]&15](u+448|0);}F=f+h;E=+G(+((o-s)*(o-s)+(p-t)*(p-t)+(i-j)*(i-j)));g[e+36>>2]=(o-s)*(1.0/E);g[e+40>>2]=(p-t)*(1.0/E);g[e+44>>2]=(i-j)*(1.0/E);g[e+48>>2]=0.0;g[e+4>>2]=F*(o-s)*(1.0/E)+ +g[e+4>>2];g[e+8>>2]=F*(p-t)*(1.0/E)+ +g[e+8>>2];g[e+12>>2]=F*(i-j)*(1.0/E)+ +g[e+12>>2];F=E-F;l=u;return +F}case 1:{if(!(Ac(b,d,u+448|0,u+384|0,u+128|0,e,1)|0)){F=3402823466385288598117041.0e14;l=u;return +F}f=+g[e+4>>2]-+g[e+20>>2];h=+g[e+8>>2]-+g[e+24>>2];i=+g[e+12>>2]-+g[e+28>>2];j=+G(+(f*f+h*h+i*i));if(j>=1.1920928955078125e-07){g[e+36>>2]=f*(1.0/j);g[e+40>>2]=h*(1.0/j);g[e+44>>2]=i*(1.0/j);g[e+48>>2]=0.0;}F=-j;l=u;return +F}default:{F=3402823466385288598117041.0e14;l=u;return +F}}return 0.0}function Wc(d,e){d=d|0;e=+e;var f=0,h=0.0,i=0,j=0.0,k=0.0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0.0,u=0;s=l;l=l+304|0;aj(12230);a:do if((c[d+232>>2]|0)>0){n=s+136+48|0;m=0;while(1){o=c[(c[d+240>>2]|0)+(m<<2)>>2]|0;g[o+244>>2]=1.0;b:do switch(c[o+216>>2]|0){case 2:case 5:break;default:if(!(c[o+204>>2]&3)){Gg(o+4|0,+g[o+312>>2],+g[o+316>>2],+g[o+320>>2],o+328|0,e,s+136|0);h=+g[n>>2]-+g[o+52>>2];j=+g[s+136+52>>2]-+g[o+56>>2];k=+g[s+136+56>>2]-+g[o+60>>2];if(a[d+44>>0]|0?(t=+g[o+252>>2],t*t!=0.0?t*t<h*h+j*j+k*k:0):0){aj(12250);if((c[(c[o+192>>2]|0)+4>>2]|0)<20){c[5817]=(c[5817]|0)+1;f=c[d+68>>2]|0;f=pb[c[(c[f>>2]|0)+36>>2]&127](f)|0;i=c[d+24>>2]|0;g[s+200+4>>2]=1.0;c[s+200+12>>2]=c[o+52>>2];c[s+200+12+4>>2]=c[o+52+4>>2];c[s+200+12+8>>2]=c[o+52+8>>2];c[s+200+12+12>>2]=c[o+52+12>>2];c[s+200+28>>2]=c[n>>2];c[s+200+28+4>>2]=c[n+4>>2];c[s+200+28+8>>2]=c[n+8>>2];c[s+200+28+12>>2]=c[n+12>>2];c[s+200+76>>2]=0;c[s+200>>2]=4460;c[s+200+80>>2]=o;c[s+200+88>>2]=f;c[s+200+92>>2]=i;i=c[o+248>>2]|0;c[s+80+8>>2]=0;c[s+80+12>>2]=1065353216;c[s+80+16>>2]=1065353216;c[s+80+20>>2]=1065353216;g[s+80+24>>2]=0.0;c[s+80>>2]=6796;c[s+80+4>>2]=8;c[s+80+28>>2]=i;c[s+80+44>>2]=i;c[s+200+84>>2]=c[d+56>>2];i=c[o+188>>2]|0;b[s+200+8>>1]=b[i+4>>1]|0;b[s+200+10>>1]=b[i+6>>1]|0;c[s+16+48>>2]=c[n>>2];c[s+16+48+4>>2]=c[n+4>>2];c[s+16+48+8>>2]=c[n+8>>2];c[s+16+48+12>>2]=c[n+12>>2];c[s+16>>2]=c[o+4>>2];c[s+16+4>>2]=c[o+4+4>>2];c[s+16+8>>2]=c[o+4+8>>2];c[s+16+12>>2]=c[o+4+12>>2];c[s+16+16>>2]=c[o+20>>2];c[s+16+16+4>>2]=c[o+20+4>>2];c[s+16+16+8>>2]=c[o+20+8>>2];c[s+16+16+12>>2]=c[o+20+12>>2];c[s+16+32>>2]=c[o+36>>2];c[s+16+32+4>>2]=c[o+36+4>>2];c[s+16+32+8>>2]=c[o+36+8>>2];c[s+16+32+12>>2]=c[o+36+12>>2];zd(d,s+80|0,o+4|0,s+16|0,s+200|0,0.0);h=+g[s+200+4>>2];if(h<1.0){g[o+244>>2]=h;Gg(o+4|0,+g[o+312>>2],+g[o+316>>2],+g[o+320>>2],o+328|0,h*e,s+136|0);g[o+244>>2]=0.0;Ee(o,s+136|0);f=4;}else f=0;if(!f)p=12;}else p=12;if((p|0)==12){p=0;f=0;}i=c[2388]|0;u=(c[i+16>>2]|0)+-1|0;c[i+16>>2]=u;do if(!u){if(c[i+4>>2]|0){Za(s+200|0,0)|0;u=c[6435]|0;g[i+8>>2]=+g[i+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[i+12>>2]|0)|0)>>>0)/1.0e3;if(c[i+16>>2]|0)break;i=c[2388]|0;}c[2388]=c[i+20>>2];}while(0);if(f|0)break b}Ee(o,s+136|0);}}while(0);m=m+1|0;if((m|0)>=(c[d+232>>2]|0))break a}}while(0);do if(a[d+275>>0]|0){aj(12270);if((c[d+308>>2]|0)>0){o=0;do{p=c[(c[d+316>>2]|0)+(o<<2)>>2]|0;i=c[p+740>>2]|0;i=(c[i+236>>2]&2|0)==0?0:i;n=c[p+744>>2]|0;n=(c[n+236>>2]&2|0)==0?0:n;f=c[p+748>>2]|0;if((f|0)>0)if(!i){i=0;do{h=+g[57]*+g[n+228>>2];if(h>0.0?(q=+g[p+4+(i*184|0)+120>>2],q!=0.0):0){k=h*+g[p+4+(i*184|0)+64>>2]*q;e=h*+g[p+4+(i*184|0)+68>>2]*q;t=h*+g[p+4+(i*184|0)+72>>2]*q;h=+g[p+4+(i*184|0)+36>>2]-+g[n+56>>2];j=+g[p+4+(i*184|0)+40>>2]-+g[n+60>>2];g[s+16>>2]=+g[p+4+(i*184|0)+32>>2]-+g[n+52>>2];g[s+16+4>>2]=h;g[s+16+8>>2]=j;g[s+16+12>>2]=0.0;g[s>>2]=k;g[s+4>>2]=e;g[s+8>>2]=t;g[s+12>>2]=0.0;Wk(n,s,s+16|0);f=c[p+748>>2]|0;}i=i+1|0;}while((i|0)<(f|0))}else{m=0;do{h=+g[i+228>>2]*+g[n+228>>2];if(h>0.0?(r=+g[p+4+(m*184|0)+120>>2],r!=0.0):0){k=h*+g[p+4+(m*184|0)+64>>2]*r;e=h*+g[p+4+(m*184|0)+68>>2]*r;t=h*+g[p+4+(m*184|0)+72>>2]*r;g[s+200>>2]=-k;g[s+200+4>>2]=-e;g[s+200+8>>2]=-t;g[s+200+12>>2]=0.0;j=+g[p+4+(m*184|0)+52>>2]-+g[i+56>>2];h=+g[p+4+(m*184|0)+56>>2]-+g[i+60>>2];g[s+80>>2]=+g[p+4+(m*184|0)+48>>2]-+g[i+52>>2];g[s+80+4>>2]=j;g[s+80+8>>2]=h;g[s+80+12>>2]=0.0;h=+g[p+4+(m*184|0)+36>>2]-+g[n+56>>2];j=+g[p+4+(m*184|0)+40>>2]-+g[n+60>>2];g[s+16>>2]=+g[p+4+(m*184|0)+32>>2]-+g[n+52>>2];g[s+16+4>>2]=h;g[s+16+8>>2]=j;g[s+16+12>>2]=0.0;Wk(i,s+200|0,s+80|0);g[s>>2]=k;g[s+4>>2]=e;g[s+8>>2]=t;g[s+12>>2]=0.0;Wk(n,s,s+16|0);f=c[p+748>>2]|0;}m=m+1|0;}while((m|0)<(f|0))}o=o+1|0;}while((o|0)<(c[d+308>>2]|0))}f=c[2388]|0;u=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=u;if(!u){if(c[f+4>>2]|0){Za(s+200|0,0)|0;u=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2388]|0;}c[2388]=c[f+20>>2];}}while(0);f=c[2388]|0;u=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=u;if(u|0){l=s;return}do if(c[f+4>>2]|0){Za(s+200|0,0)|0;u=c[6435]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[f+16>>2]|0)){f=c[2388]|0;break}else{l=s;return}}while(0);c[2388]=c[f+20>>2];l=s;return}function Xc(b,d,e){b=b|0;d=d|0;e=+e;var f=0,h=0,i=0,j=0,k=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0,s=0;s=l;l=l+112|0;j=c[b+716>>2]|0;if((j|0)==(c[b+712>>2]|0)){a:do if(j){i=c[b+720>>2]|0;if((j|0)>0){f=0;h=i;while(1){h=c[h+(f*104|0)+96>>2]|0;if(h|0)c[h+36>>2]=f;f=f+1|0;if((f|0)==(j|0)){o=i;break a}h=c[b+720>>2]|0;}}else o=i;}else o=0;while(0);h=c[b+732>>2]|0;if((h|0)>0){f=0;do{p=(c[b+740>>2]|0)+(f*52|0)+8|0;c[p>>2]=((c[p>>2]|0)-o|0)/104|0;p=(c[b+740>>2]|0)+(f*52|0)+12|0;c[p>>2]=((c[p>>2]|0)-o|0)/104|0;f=f+1|0;}while((f|0)!=(h|0))}h=c[b+752>>2]|0;if((h|0)>0){f=0;do{i=(c[b+760>>2]|0)+(f*44|0)+8|0;c[i>>2]=((c[i>>2]|0)-o|0)/104|0;i=(c[b+760>>2]|0)+(f*44|0)+12|0;c[i>>2]=((c[i>>2]|0)-o|0)/104|0;i=(c[b+760>>2]|0)+(f*44|0)+16|0;c[i>>2]=((c[i>>2]|0)-o|0)/104|0;i=c[(c[b+760>>2]|0)+(f*44|0)+40>>2]|0;if(i|0)c[i+36>>2]=f;f=f+1|0;}while((f|0)!=(h|0))}h=c[b+792>>2]|0;if((h|0)>0){i=c[b+800>>2]|0;f=0;do{p=i+(f*96|0)|0;c[p>>2]=((c[p>>2]|0)-o|0)/104|0;f=f+1|0;}while((f|0)!=(h|0))}k=c[b+692>>2]|0;if((k|0)>0){i=0;f=c[b+700>>2]|0;do{if((c[f+(i*60|0)+24>>2]|0)>0){h=0;do{f=f+(i*60|0)+28+(h<<2)|0;c[f>>2]=((c[f>>2]|0)-o|0)/104|0;h=h+1|0;f=c[b+700>>2]|0;}while((h|0)<(c[f+(i*60|0)+24>>2]|0))}i=i+1|0;}while((i|0)!=(k|0))}if((j|0)<(j<<1|1|0)){c[6436]=(c[6436]|0)+1;f=ic(((j<<1|1)*104|3)+16|0)|0;if(!f)i=0;else{c[(f+4+15&-16)+-4>>2]=f;i=f+4+15&-16;}h=c[b+712>>2]|0;if((h|0)>0){f=0;do{o=i+(f*104|0)|0;k=(c[b+720>>2]|0)+(f*104|0)|0;p=o+104|0;do{c[o>>2]=c[k>>2];o=o+4|0;k=k+4|0;}while((o|0)<(p|0));f=f+1|0;}while((f|0)!=(h|0))}f=c[b+720>>2]|0;if(f|0){if(a[b+724>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+720>>2]=0;}a[b+724>>0]=1;c[b+720>>2]=i;c[b+716>>2]=j<<1|1;j=c[b+712>>2]|0;}b:do if(j){k=c[b+720>>2]|0;if((j|0)>0){f=0;h=k;while(1){i=c[h+(f*104|0)+96>>2]|0;if(i|0)c[i+36>>2]=h+(f*104|0);f=f+1|0;if((f|0)==(j|0))break b;h=c[b+720>>2]|0;}}}else k=0;while(0);h=c[b+732>>2]|0;if((h|0)>0){f=0;do{p=(c[b+740>>2]|0)+(f*52|0)+8|0;c[p>>2]=k+((c[p>>2]|0)*104|0);p=(c[b+740>>2]|0)+(f*52|0)+12|0;c[p>>2]=k+((c[p>>2]|0)*104|0);f=f+1|0;}while((f|0)!=(h|0))}h=c[b+752>>2]|0;if((h|0)>0){f=0;do{i=(c[b+760>>2]|0)+(f*44|0)+8|0;c[i>>2]=k+((c[i>>2]|0)*104|0);i=(c[b+760>>2]|0)+(f*44|0)+12|0;c[i>>2]=k+((c[i>>2]|0)*104|0);i=(c[b+760>>2]|0)+(f*44|0)+16|0;c[i>>2]=k+((c[i>>2]|0)*104|0);i=c[b+760>>2]|0;j=c[i+(f*44|0)+40>>2]|0;if(j|0)c[j+36>>2]=i+(f*44|0);f=f+1|0;}while((f|0)!=(h|0))}i=c[b+792>>2]|0;if((i|0)>0){h=c[b+800>>2]|0;f=0;do{p=h+(f*96|0)|0;c[p>>2]=k+((c[p>>2]|0)*104|0);f=f+1|0;}while((f|0)!=(i|0))}j=c[b+692>>2]|0;if((j|0)>0){i=0;f=c[b+700>>2]|0;do{if((c[f+(i*60|0)+24>>2]|0)>0){h=0;do{f=f+(i*60|0)+28+(h<<2)|0;c[f>>2]=k+((c[f>>2]|0)*104|0);h=h+1|0;f=c[b+700>>2]|0;}while((h|0)<(c[f+(i*60|0)+24>>2]|0))}i=i+1|0;}while((i|0)!=(j|0))}}o=c[b+192>>2]|0;q=+Db[c[(c[o>>2]|0)+48>>2]&15](o);o=s;p=o+100|0;do{c[o>>2]=0;o=o+4|0;}while((o|0)<(p|0));f=c[b+712>>2]|0;if((f|0)==(c[b+716>>2]|0)?(r=f|0?f<<1:1,(f|0)<(r|0)):0){if(!r)i=0;else{c[6436]=(c[6436]|0)+1;f=ic((r*104|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=f;f=c[b+712>>2]|0;}if((f|0)>0){h=0;do{o=i+(h*104|0)|0;k=(c[b+720>>2]|0)+(h*104|0)|0;p=o+104|0;do{c[o>>2]=c[k>>2];o=o+4|0;k=k+4|0;}while((o|0)<(p|0));h=h+1|0;}while((h|0)!=(f|0))}f=c[b+720>>2]|0;if(f|0){if(a[b+724>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[b+720>>2]=0;}a[b+724>>0]=1;c[b+720>>2]=i;c[b+716>>2]=r;f=c[b+712>>2]|0;}o=c[b+720>>2]|0;c[o+(f*104|0)>>2]=0;o=o+(f*104|0)+4|0;k=s;p=o+100|0;do{c[o>>2]=c[k>>2];o=o+4|0;k=k+4|0;}while((o|0)<(p|0));h=c[b+712>>2]|0;c[b+712>>2]=h+1;i=c[b+720>>2]|0;o=i+(h*104|0)|0;p=o+104|0;do{c[o>>2]=0;o=o+4|0;}while((o|0)<(p|0));c[i+(h*104|0)+8>>2]=c[d>>2];c[i+(h*104|0)+8+4>>2]=c[d+4>>2];c[i+(h*104|0)+8+8>>2]=c[d+8>>2];c[i+(h*104|0)+8+12>>2]=c[d+12>>2];hp(i+(h*104|0)+24|0,d|0,16)|0;g[i+(h*104|0)+88>>2]=e>0.0?1.0/e:0.0;c[i+(h*104|0)+4>>2]=c[c[b+880>>2]>>2];e=+g[i+(h*104|0)+8>>2];m=+g[i+(h*104|0)+12>>2];n=+g[i+(h*104|0)+16>>2];f=c[b+932>>2]|0;if(f|0){c[b+932>>2]=0;d=f;r=d+32|0;c[r>>2]=0;r=d+36|0;c[r>>2]=i+(h*104|0);r=d+40|0;c[r>>2]=0;g[d>>2]=e-q;r=d+4|0;g[r>>2]=m-q;r=d+8|0;g[r>>2]=n-q;r=d+12|0;g[r>>2]=0.0;r=d+16|0;g[r>>2]=q+e;r=d+20|0;g[r>>2]=q+m;r=d+24|0;g[r>>2]=q+n;r=d+28|0;g[r>>2]=0.0;r=c[b+928>>2]|0;Fe(b+928|0,r,d);b=b+940|0;r=c[b>>2]|0;r=r+1|0;c[b>>2]=r;b=i+(h*104|0)+96|0;c[b>>2]=d;l=s;return}c[6436]=(c[6436]|0)+1;f=ic(63)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}o=f;p=o+44|0;do{c[o>>2]=0;o=o+4|0;}while((o|0)<(p|0));d=f;r=d+32|0;c[r>>2]=0;r=d+36|0;c[r>>2]=i+(h*104|0);r=d+40|0;c[r>>2]=0;g[d>>2]=e-q;r=d+4|0;g[r>>2]=m-q;r=d+8|0;g[r>>2]=n-q;r=d+12|0;g[r>>2]=0.0;r=d+16|0;g[r>>2]=q+e;r=d+20|0;g[r>>2]=q+m;r=d+24|0;g[r>>2]=q+n;r=d+28|0;g[r>>2]=0.0;r=c[b+928>>2]|0;Fe(b+928|0,r,d);b=b+940|0;r=c[b>>2]|0;r=r+1|0;c[b>>2]=r;b=i+(h*104|0)+96|0;c[b>>2]=d;l=s;return}function Yc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;s=l;l=l+224|0;q=(a[b+28>>0]|0)!=0;p=q?e:d;q=q?d:e;r=c[p+4>>2]|0;if((c[r+68>>2]|0)!=(c[b+40>>2]|0)){j=c[b+12>>2]|0;if((j|0)>0){i=0;do{k=c[(c[b+20>>2]|0)+(i<<2)>>2]|0;if(k|0){lb[c[c[k>>2]>>2]&511](k);n=c[b+4>>2]|0;nb[c[(c[n>>2]|0)+60>>2]&127](n,c[(c[b+20>>2]|0)+(i<<2)>>2]|0);}i=i+1|0;}while((i|0)!=(j|0))}Pg(b,d,e);}n=c[r+64>>2]|0;d=c[b+4>>2]|0;i=c[b+20>>2]|0;m=c[b+32>>2]|0;c[s+192>>2]=6316;c[s+192+4>>2]=p;c[s+192+8>>2]=q;c[s+192+12>>2]=d;c[s+192+16>>2]=f;c[s+192+20>>2]=h;c[s+192+24>>2]=i;c[s+192+28>>2]=m;a[s+128+16>>0]=1;m=s+128+12|0;c[m>>2]=0;c[s+128+4>>2]=0;c[s+128+8>>2]=0;d=c[b+12>>2]|0;if((d|0)>0){f=0;while(1){i=c[i+(f<<2)>>2]|0;if(i){nb[c[(c[i>>2]|0)+16>>2]&127](i,s+128|0);i=c[s+128+4>>2]|0;if((i|0)>0){k=0;do{j=c[(c[m>>2]|0)+(k<<2)>>2]|0;if(c[j+748>>2]|0){c[h+4>>2]=j;d=c[j+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;i=c[(c[h+12>>2]|0)+8>>2]|0;if((d|0)==(e|0))Ue(j,d+4|0,i+4|0);else Ue(j,i+4|0,e+4|0);c[h+4>>2]=0;i=c[s+128+4>>2]|0;}k=k+1|0;}while((k|0)<(i|0))}if((i|0)<0){if((c[s+128+8>>2]|0)<0){d=c[m>>2]|0;if(d|0){if(a[s+128+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[m>>2]=0;}a[s+128+16>>0]=1;c[m>>2]=0;c[s+128+8>>2]=0;}do{c[(c[m>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while((i|0)!=0)}c[s+128+4>>2]=0;d=c[b+12>>2]|0;}i=f+1|0;if((i|0)>=(d|0))break;f=i;i=c[b+20>>2]|0;}i=c[m>>2]|0;if(i|0){if(a[s+128+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[m>>2]=0;}}if(!n){d=c[b+12>>2]|0;if((d|0)>0){i=0;do{Ge(s+192|0,c[(c[r+24>>2]|0)+(i*80|0)+64>>2]|0,i);i=i+1|0;}while((i|0)<(d|0));o=38;}}else{o=c[p+12>>2]|0;H=+g[o>>2];G=+g[o+16>>2];F=+g[o+32>>2];E=+g[o+4>>2];D=+g[o+20>>2];C=+g[o+36>>2];y=+g[o+8>>2];w=+g[o+24>>2];u=+g[o+40>>2];B=-+g[o+48>>2];A=-+g[o+52>>2];z=-+g[o+56>>2];o=c[q+12>>2]|0;Q=+g[o>>2];P=+g[o+16>>2];O=+g[o+32>>2];N=+g[o+4>>2];M=+g[o+20>>2];L=+g[o+36>>2];K=+g[o+8>>2];J=+g[o+24>>2];I=+g[o+40>>2];x=+g[o+48>>2];v=+g[o+52>>2];t=+g[o+56>>2];g[s+48>>2]=H*Q+G*P+F*O;g[s+48+4>>2]=H*N+G*M+F*L;g[s+48+8>>2]=H*K+G*J+F*I;g[s+48+12>>2]=0.0;g[s+48+16>>2]=E*Q+D*P+C*O;g[s+48+20>>2]=E*N+D*M+C*L;g[s+48+24>>2]=E*K+D*J+C*I;g[s+48+28>>2]=0.0;g[s+48+32>>2]=y*Q+w*P+u*O;g[s+48+36>>2]=y*N+w*M+u*L;g[s+48+40>>2]=y*K+w*J+u*I;g[s+48+44>>2]=0.0;g[s+48+48>>2]=H*B+G*A+F*z+(H*x+G*v+F*t);g[s+48+52>>2]=E*B+D*A+C*z+(E*x+D*v+C*t);g[s+48+56>>2]=y*B+w*A+u*z+(y*x+w*v+u*t);g[s+48+60>>2]=0.0;o=c[q+4>>2]|0;Zb[c[(c[o>>2]|0)+8>>2]&127](o,s+48|0,s+128|0,s+112|0);c[s+16>>2]=c[s+128>>2];c[s+16+4>>2]=c[s+128+4>>2];c[s+16+8>>2]=c[s+128+8>>2];c[s+16+12>>2]=c[s+128+12>>2];c[s+16+16>>2]=c[s+112>>2];c[s+16+16+4>>2]=c[s+112+4>>2];c[s+16+16+8>>2]=c[s+112+8>>2];c[s+16+16+12>>2]=c[s+112+12>>2];Xe(c[n>>2]|0,s+16|0,s+192|0);o=38;}if((o|0)==38)d=c[b+12>>2]|0;if((d|0)<=0){l=s;return}e=0;do{do if(c[(c[b+20>>2]|0)+(e<<2)>>2]|0){n=c[r+24>>2]|0;o=c[n+(e*80|0)+64>>2]|0;h=c[p+12>>2]|0;w=+g[h>>2];x=+g[h+4>>2];y=+g[h+8>>2];z=+g[h+16>>2];A=+g[h+20>>2];B=+g[h+24>>2];I=+g[h+32>>2];K=+g[h+36>>2];M=+g[h+40>>2];C=+g[n+(e*80|0)>>2];D=+g[n+(e*80|0)+16>>2];E=+g[n+(e*80|0)+32>>2];F=+g[n+(e*80|0)+4>>2];G=+g[n+(e*80|0)+20>>2];H=+g[n+(e*80|0)+36>>2];J=+g[n+(e*80|0)+8>>2];L=+g[n+(e*80|0)+24>>2];N=+g[n+(e*80|0)+40>>2];u=+g[n+(e*80|0)+48>>2];v=+g[n+(e*80|0)+52>>2];Q=+g[n+(e*80|0)+56>>2];O=+g[h+48>>2]+(w*u+x*v+y*Q);P=+g[h+52>>2]+(z*u+A*v+B*Q);Q=+g[h+56>>2]+(I*u+K*v+M*Q);g[s+128>>2]=w*C+x*D+y*E;g[s+128+4>>2]=w*F+x*G+y*H;g[s+128+8>>2]=w*J+x*L+y*N;g[s+128+12>>2]=0.0;g[s+128+16>>2]=z*C+A*D+B*E;g[s+128+20>>2]=z*F+A*G+B*H;g[s+128+24>>2]=z*J+A*L+B*N;g[s+128+28>>2]=0.0;g[s+128+32>>2]=I*C+K*D+M*E;g[s+128+36>>2]=I*F+K*G+M*H;g[s+128+40>>2]=I*J+K*L+M*N;g[s+128+44>>2]=0.0;g[s+128+48>>2]=O;g[s+128+52>>2]=P;g[s+128+56>>2]=Q;g[s+128+60>>2]=0.0;Zb[c[(c[o>>2]|0)+8>>2]&127](o,s+128|0,s+112|0,s+48|0);o=c[q+4>>2]|0;Zb[c[(c[o>>2]|0)+8>>2]&127](o,c[q+12>>2]|0,s+16|0,s);if(!(+g[s+112>>2]>+g[s>>2])?!(+g[s+48>>2]<+g[s+16>>2]):0)i=1;else i=0;if(!(!(+g[s+112+8>>2]>+g[s+8>>2])?!(+g[s+48+8>>2]<+g[s+16+8>>2]):0))i=0;if(!(+g[s+112+4>>2]>+g[s+4>>2])?!(+g[s+48+4>>2]<+g[s+16+4>>2]|i^1):0)break;o=c[(c[b+20>>2]|0)+(e<<2)>>2]|0;lb[c[c[o>>2]>>2]&511](o);o=c[b+4>>2]|0;nb[c[(c[o>>2]|0)+60>>2]&127](o,c[(c[b+20>>2]|0)+(e<<2)>>2]|0);c[(c[b+20>>2]|0)+(e<<2)>>2]=0;}while(0);e=e+1|0;}while((e|0)<(d|0));l=s;return}function Zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,G=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0;c[b>>2]=c[a>>2];c[b+4>>2]=c[a+4>>2];c[b+8>>2]=c[a+8>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+16+4>>2]=c[a+16+4>>2];c[b+16+8>>2]=c[a+16+8>>2];c[b+16+12>>2]=c[a+16+12>>2];c[b+32>>2]=c[a+32>>2];c[b+32+4>>2]=c[a+32+4>>2];c[b+32+8>>2]=c[a+32+8>>2];c[b+32+12>>2]=c[a+32+12>>2];q=+g[a+20>>2];m=+g[a+40>>2];r=+g[a+24>>2];n=+g[a+36>>2];o=+g[a+32>>2];s=+g[a+16>>2];t=+g[a>>2];p=+g[a+4>>2];u=+g[a+8>>2];v=1.0/((q*m-r*n)*t+p*(r*o-m*s)+(n*s-q*o)*u);g[d>>2]=(q*m-r*n)*v;g[d+4>>2]=(n*u-m*p)*v;g[d+8>>2]=(r*p-q*u)*v;g[d+12>>2]=0.0;g[d+16>>2]=(r*o-m*s)*v;g[d+20>>2]=(m*t-o*u)*v;g[d+24>>2]=(s*u-r*t)*v;g[d+28>>2]=0.0;g[d+32>>2]=(n*s-q*o)*v;g[d+36>>2]=(o*p-n*t)*v;g[d+40>>2]=(q*t-s*p)*v;g[d+44>>2]=0.0;a:do if(!(c[5789]|0)){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;}else{e=0;C=(q*t-s*p)*v;D=(q*m-r*n)*v;E=(r*o-m*s)*v;G=(n*s-q*o)*v;I=(n*u-m*p)*v;B=(m*t-o*u)*v;A=(o*p-n*t)*v;z=(r*p-q*u)*v;y=(s*u-r*t)*v;while(1){o=+F(+D);n=+F(+E);N=+F(+G);W=+F(+I);O=+F(+B);M=+F(+A);Q=+F(+z);P=+F(+y);w=+F(+C);R=o+n+N>W+O+M?o+n+N:W+O+M;O=o+W+Q>n+O+P?o+W+Q:n+O+P;n=+g[b>>2];W=+F(+n);o=+g[b+16>>2];T=+F(+o);p=+g[b+32>>2];K=+F(+p);q=+g[b+4>>2];V=+F(+q);r=+g[b+20>>2];S=+F(+r);s=+g[b+36>>2];J=+F(+s);t=+g[b+8>>2];U=+F(+t);u=+g[b+24>>2];L=+F(+u);v=+g[b+40>>2];x=+F(+v);m=W+T+K>V+S+J?W+T+K:V+S+J;m=m>U+L+x?m:U+L+x;L=W+V+U>T+S+L?W+V+U:T+S+L;w=(R>Q+P+w?R:Q+P+w)*(O>N+M+w?O:N+M+w);x=m*(L>K+J+x?L:K+J+x);if(+F(+w)<1.1920928955078125e-07){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}if(+F(+x)<1.1920928955078125e-07){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}W=+H(+(w/x),.25);O=(n*(W+-2.0)+D*(1.0/W))*.5;Q=(q*(W+-2.0)+1.0/W*E)*.5;S=(t*(W+-2.0)+1.0/W*G)*.5;P=(o*(W+-2.0)+1.0/W*I)*.5;R=(r*(W+-2.0)+1.0/W*B)*.5;T=(u*(W+-2.0)+1.0/W*A)*.5;U=(p*(W+-2.0)+1.0/W*z)*.5;V=(s*(W+-2.0)+1.0/W*y)*.5;W=(v*(W+-2.0)+1.0/W*C)*.5;g[b>>2]=n+O;g[b+4>>2]=q+Q;g[b+8>>2]=t+S;g[b+12>>2]=0.0;g[b+16>>2]=o+P;g[b+20>>2]=r+R;g[b+24>>2]=u+T;g[b+28>>2]=0.0;g[b+32>>2]=p+U;g[b+36>>2]=s+V;g[b+40>>2]=v+W;g[b+44>>2]=0.0;N=1.0/(((v+W)*(r+R)-(u+T)*(s+V))*(n+O)+(q+Q)*((u+T)*(p+U)-(v+W)*(o+P))+((s+V)*(o+P)-(r+R)*(p+U))*(t+S));D=((v+W)*(r+R)-(u+T)*(s+V))*N;I=((s+V)*(t+S)-(v+W)*(q+Q))*N;z=((u+T)*(q+Q)-(r+R)*(t+S))*N;E=((u+T)*(p+U)-(v+W)*(o+P))*N;B=((v+W)*(n+O)-(p+U)*(t+S))*N;y=((o+P)*(t+S)-(u+T)*(n+O))*N;G=((s+V)*(o+P)-(r+R)*(p+U))*N;A=((p+U)*(q+Q)-(s+V)*(n+O))*N;C=((r+R)*(n+O)-(o+P)*(q+Q))*N;g[d>>2]=D;g[d+4>>2]=I;g[d+8>>2]=z;g[d+12>>2]=0.0;g[d+16>>2]=E;g[d+20>>2]=B;g[d+24>>2]=y;g[d+28>>2]=0.0;g[d+32>>2]=G;g[d+36>>2]=A;g[d+40>>2]=C;g[d+44>>2]=0.0;U=+F(+O)+ +F(+P)+ +F(+U);V=+F(+Q)+ +F(+R)+ +F(+V);W=+F(+S)+ +F(+T)+ +F(+W);V=U>V?U:V;if((V>W?V:W)<=m*+g[5788])break;e=e+1|0;if(e>>>0>=(c[5789]|0)>>>0){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}}M=+g[b>>2];O=+g[b+16>>2];Q=+g[b+32>>2];G=+g[b+4>>2];J=+g[b+20>>2];L=+g[b+36>>2];A=+g[b+8>>2];C=+g[b+24>>2];E=+g[b+40>>2];N=+g[a>>2];P=+g[a+16>>2];R=+g[a+32>>2];I=+g[a+4>>2];K=+g[a+20>>2];T=+g[a+36>>2];B=+g[a+8>>2];D=+g[a+24>>2];W=+g[a+40>>2];V=A*I+C*K+E*T+(G*B+J*D+L*W);S=G*N+J*P+L*R+(M*I+O*K+Q*T);U=A*N+C*P+E*R+(M*B+O*D+Q*W);W=A*B+C*D+E*W+(A*B+C*D+E*W);T=G*I+J*K+L*T+(G*I+J*K+L*T);R=M*N+O*P+Q*R+(M*N+O*P+Q*R);S=S*.5;U=U*.5;V=V*.5;R=R*.5;g[d>>2]=R;g[d+4>>2]=S;g[d+8>>2]=U;g[d+12>>2]=0.0;g[d+16>>2]=S;T=T*.5;g[d+20>>2]=T;g[d+24>>2]=V;g[d+28>>2]=0.0;g[d+32>>2]=U;g[d+36>>2]=V;W=W*.5;g[d+40>>2]=W;g[d+44>>2]=0.0;return}while(0);M=+g[k>>2];O=+g[b+16>>2];Q=+g[b+32>>2];G=+g[l>>2];J=+g[e>>2];L=+g[f>>2];A=+g[h>>2];C=+g[i>>2];E=+g[j>>2];N=+g[a>>2];P=+g[a+16>>2];R=+g[a+32>>2];I=+g[a+4>>2];K=+g[a+20>>2];T=+g[a+36>>2];B=+g[a+8>>2];D=+g[a+24>>2];W=+g[a+40>>2];V=A*I+C*K+E*T+(G*B+J*D+L*W);S=G*N+J*P+L*R+(M*I+O*K+Q*T);U=A*N+C*P+E*R+(M*B+O*D+Q*W);W=A*B+C*D+E*W+(A*B+C*D+E*W);T=G*I+J*K+L*T+(G*I+J*K+L*T);R=M*N+O*P+Q*R+(M*N+O*P+Q*R);S=S*.5;U=U*.5;V=V*.5;R=R*.5;g[d>>2]=R;g[d+4>>2]=S;g[d+8>>2]=U;g[d+12>>2]=0.0;g[d+16>>2]=S;T=T*.5;g[d+20>>2]=T;g[d+24>>2]=V;g[d+28>>2]=0.0;g[d+32>>2]=U;g[d+36>>2]=V;W=W*.5;g[d+40>>2]=W;g[d+44>>2]=0.0;return}function _c(a,b,f,i){a=a|0;b=b|0;f=f|0;i=i|0;var j=0.0,k=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0,u=0;o=l;l=l+80|0;n=pb[c[(c[a>>2]|0)+28>>2]&127](a)|0;j=+g[a+4>>2];k=+g[a+8>>2];m=+g[a+12>>2];if((n|0)<=0){l=o;return}i=0;do{Jb[c[(c[a>>2]|0)+16>>2]&3](a,o+76|0,o+52|0,o+64|0,o+56|0,o+72|0,o+68|0,o+48|0,o+60|0,i);a:do switch(c[o+64>>2]|0){case 0:{switch(c[o+60>>2]|0){case 2:{if((c[o+48>>2]|0)>0)f=0;else break a;do{r=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;t=c[o+76>>2]|0;s=c[o+56>>2]|0;u=t+(S(s,c[r>>2]|0)|0)|0;q=k*+g[u+4>>2];p=m*+g[u+8>>2];g[o>>2]=j*+g[u>>2];g[o+4>>2]=q;g[o+8>>2]=p;g[o+12>>2]=0.0;u=t+(S(s,c[r+4>>2]|0)|0)|0;p=k*+g[u+4>>2];q=m*+g[u+8>>2];g[o+16>>2]=j*+g[u>>2];g[o+20>>2]=p;g[o+24>>2]=q;g[o+28>>2]=0.0;r=t+(S(s,c[r+8>>2]|0)|0)|0;q=k*+g[r+4>>2];p=m*+g[r+8>>2];g[o+32>>2]=j*+g[r>>2];g[o+36>>2]=q;g[o+40>>2]=p;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}case 3:{if((c[o+48>>2]|0)>0)f=0;else break a;do{t=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(S(e[t>>1]|0,u)|0)|0;p=k*+g[r+4>>2];q=m*+g[r+8>>2];g[o>>2]=j*+g[r>>2];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(S(e[t+2>>1]|0,u)|0)|0;q=k*+g[r+4>>2];p=m*+g[r+8>>2];g[o+16>>2]=j*+g[r>>2];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(S(e[t+4>>1]|0,u)|0)|0;p=k*+g[u+4>>2];q=m*+g[u+8>>2];g[o+32>>2]=j*+g[u>>2];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}case 5:{if((c[o+48>>2]|0)>0)f=0;else break a;do{t=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(S(d[t>>0]|0,u)|0)|0;p=k*+g[r+4>>2];q=m*+g[r+8>>2];g[o>>2]=j*+g[r>>2];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(S(d[t+1>>0]|0,u)|0)|0;q=k*+g[r+4>>2];p=m*+g[r+8>>2];g[o+16>>2]=j*+g[r>>2];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(S(d[t+2>>0]|0,u)|0)|0;p=k*+g[u+4>>2];q=m*+g[u+8>>2];g[o+32>>2]=j*+g[u>>2];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}default:break a}break}case 1:{switch(c[o+60>>2]|0){case 2:{if((c[o+48>>2]|0)>0)f=0;else break a;do{u=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;s=c[o+76>>2]|0;t=c[o+56>>2]|0;r=s+(S(t,c[u>>2]|0)|0)|0;p=k*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=j*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(S(t,c[u+4>>2]|0)|0)|0;q=k*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=j*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(S(t,c[u+8>>2]|0)|0)|0;p=k*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=j*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}case 3:{if((c[o+48>>2]|0)>0)f=0;else break a;do{t=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(S(e[t>>1]|0,u)|0)|0;p=k*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=j*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(S(e[t+2>>1]|0,u)|0)|0;q=k*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=j*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(S(e[t+4>>1]|0,u)|0)|0;p=k*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=j*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}case 5:{if((c[o+48>>2]|0)>0)f=0;else break a;do{t=(c[o+72>>2]|0)+(S(c[o+68>>2]|0,f)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(S(d[t>>0]|0,u)|0)|0;p=k*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=j*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(S(d[t+1>>0]|0,u)|0)|0;q=k*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=j*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(S(d[t+2>>0]|0,u)|0)|0;p=k*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=j*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,o,i,f);f=f+1|0;}while((f|0)<(c[o+48>>2]|0));break}default:break a}break}default:{}}while(0);nb[c[(c[a>>2]|0)+24>>2]&127](a,i);i=i+1|0;}while((i|0)!=(n|0));l=o;return}function $c(d,e,f,h,i){d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0.0,k=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0;x=l;l=l+128|0;a[d+60>>0]=f&1;if(f){u=+g[h>>2]+-1.0;v=+g[h+4>>2]+-1.0;w=+g[h+8>>2]+-1.0;g[d+4>>2]=u;g[d+8>>2]=v;g[d+12>>2]=w;g[d+16>>2]=0.0;r=+g[i>>2]+1.0;m=+g[i+4>>2]+1.0;j=+g[i+8>>2]+1.0;g[d+20>>2]=r;g[d+24>>2]=m;g[d+28>>2]=j;g[d+32>>2]=0.0;g[d+36>>2]=65533.0/(r-u);g[d+40>>2]=65533.0/(m-v);g[d+44>>2]=65533.0/(j-w);g[d+48>>2]=0.0;a[d+60>>0]=1;n=u+ +(~~((u-u)*(65533.0/(r-u)))&65535&-2&65535)/(65533.0/(r-u))+-1.0;q=v+ +(~~((v-v)*(65533.0/(m-v)))&65535&-2&65535)/(65533.0/(m-v))+-1.0;t=w+ +(~~((w-w)*(65533.0/(j-w)))&65535&-2&65535)/(65533.0/(j-w))+-1.0;if(n<u)g[d+4>>2]=n;else n=u;if(q<v)g[d+8>>2]=q;else q=v;if(t<w)g[d+12>>2]=t;else t=w;u=n+ +((~~((r-n)*(65533.0/(r-u))+1.0)&65535|1)&65535)/(65533.0/(r-u))+1.0;v=q+ +((~~((m-q)*(65533.0/(m-v))+1.0)&65535|1)&65535)/(65533.0/(m-v))+1.0;w=t+ +((~~((j-t)*(65533.0/(j-w))+1.0)&65535|1)&65535)/(65533.0/(j-w))+1.0;if(r<u){g[d+20>>2]=u;r=u;}if(m<v){g[d+24>>2]=v;m=v;}if(j<w){g[d+28>>2]=w;j=w;}g[d+36>>2]=65533.0/(r-n);g[d+40>>2]=65533.0/(m-q);g[d+44>>2]=65533.0/(j-t);g[d+48>>2]=0.0;c[x+96>>2]=8144;c[x+96+4>>2]=d+104;c[x+96+8>>2]=d;Zb[c[(c[e>>2]|0)+8>>2]&127](e,x+96|0,d+4|0,d+20|0);f=c[d+108>>2]|0;c[x+80>>2]=0;c[x+80+4>>2]=0;c[x+80+8>>2]=0;c[x+80+12>>2]=0;k=c[d+128>>2]|0;if((k|0)<(f<<1|0)){if((c[d+132>>2]|0)<(f<<1|0)){if(!f){h=0;e=k;}else{c[6436]=(c[6436]|0)+1;h=ic(f<<5|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}e=c[d+128>>2]|0;}if((e|0)>0){i=0;do{s=h+(i<<4)|0;p=(c[d+136>>2]|0)+(i<<4)|0;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];c[s+12>>2]=c[p+12>>2];i=i+1|0;}while((i|0)!=(e|0))}i=c[d+136>>2]|0;if(i|0){if(a[d+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[d+136>>2]=0;}a[d+140>>0]=1;c[d+136>>2]=h;c[d+132>>2]=f<<1;i=d+136|0;}else i=d+136|0;h=k;do{s=(c[i>>2]|0)+(h<<4)|0;c[s>>2]=c[x+80>>2];c[s+4>>2]=c[x+80+4>>2];c[s+8>>2]=c[x+80+8>>2];c[s+12>>2]=c[x+80+12>>2];h=h+1|0;}while((h|0)!=(f<<1|0))}c[d+128>>2]=f<<1;}else{c[x+96>>2]=8164;c[x+96+4>>2]=d+64;c[x+80>>2]=-581039253;c[x+80+4>>2]=-581039253;c[x+80+8>>2]=-581039253;g[x+80+12>>2]=0.0;c[x+64>>2]=1566444395;c[x+64+4>>2]=1566444395;c[x+64+8>>2]=1566444395;g[x+64+12>>2]=0.0;Zb[c[(c[e>>2]|0)+8>>2]&127](e,x+96|0,x+80|0,x+64|0);f=c[d+68>>2]|0;k=x;p=k+64|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(p|0));s=c[d+88>>2]|0;if((s|0)<(f<<1|0)){if((c[d+92>>2]|0)<(f<<1|0)){if(!f){h=0;e=s;}else{c[6436]=(c[6436]|0)+1;h=ic(f<<7|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}e=c[d+88>>2]|0;}if((e|0)>0){i=0;do{k=h+(i<<6)|0;o=(c[d+96>>2]|0)+(i<<6)|0;p=k+64|0;do{c[k>>2]=c[o>>2];k=k+4|0;o=o+4|0;}while((k|0)<(p|0));i=i+1|0;}while((i|0)!=(e|0))}i=c[d+96>>2]|0;if(i|0){if(a[d+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[d+96>>2]=0;}a[d+100>>0]=1;c[d+96>>2]=h;c[d+92>>2]=f<<1;i=d+96|0;}else i=d+96|0;h=s;do{k=(c[i>>2]|0)+(h<<6)|0;o=x;p=k+64|0;do{c[k>>2]=c[o>>2];k=k+4|0;o=o+4|0;}while((k|0)<(p|0));h=h+1|0;}while((h|0)!=(f<<1|0))}c[d+88>>2]=f<<1;}c[d+56>>2]=0;vc(d,0,f);if(a[d+60>>0]|0?(c[d+152>>2]|0)==0:0){if(!(c[d+156>>2]|0)){c[6436]=(c[6436]|0)+1;f=ic(51)|0;if(!f)e=0;else{c[(f+4+15&-16)+-4>>2]=f;e=f+4+15&-16;}h=c[d+152>>2]|0;if((h|0)>0){f=0;do{s=e+(f<<5)|0;p=(c[d+160>>2]|0)+(f<<5)|0;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];c[s+12>>2]=c[p+12>>2];c[s+16>>2]=c[p+16>>2];c[s+20>>2]=c[p+20>>2];c[s+24>>2]=c[p+24>>2];c[s+28>>2]=c[p+28>>2];f=f+1|0;}while((f|0)!=(h|0))}f=c[d+160>>2]|0;if(f|0){if(a[d+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+160>>2]=0;}a[d+164>>0]=1;c[d+160>>2]=e;c[d+156>>2]=1;h=d+160|0;i=(c[d+152>>2]|0)+1|0;f=e;}else{h=d+160|0;i=1;f=c[d+160>>2]|0;}c[d+152>>2]=i;c[f>>2]=c[x+96>>2];c[f+4>>2]=c[x+96+4>>2];c[f+8>>2]=c[x+96+8>>2];c[f+12>>2]=c[x+96+12>>2];c[f+16>>2]=c[x+96+16>>2];c[f+20>>2]=c[x+96+20>>2];c[f+24>>2]=c[x+96+24>>2];c[f+28>>2]=c[x+96+28>>2];s=c[h>>2]|0;p=c[d+136>>2]|0;b[s>>1]=b[p>>1]|0;b[s+2>>1]=b[p+2>>1]|0;b[s+4>>1]=b[p+4>>1]|0;b[s+6>>1]=b[p+6>>1]|0;b[s+8>>1]=b[p+8>>1]|0;b[s+10>>1]=b[p+10>>1]|0;c[s+12>>2]=0;p=c[p+12>>2]|0;c[s+16>>2]=(p|0)>-1?1:0-p|0;}c[d+168>>2]=c[d+152>>2];f=c[d+116>>2]|0;if(f|0){if(a[d+120>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+116>>2]=0;}a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;f=c[d+76>>2]|0;if(!f){a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;d=d+72|0;c[d>>2]=0;l=x;return}if(a[d+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+76>>2]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;d=d+72|0;c[d>>2]=0;l=x;return}function ad(b,d,e,f,h,i,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0;N=c[b+68>>2]|0;if((N|0)==(c[b+72>>2]|0)?(t=N|0?N<<1:1,(N|0)<(t|0)):0){if(!t){p=0;r=N;}else{c[6436]=(c[6436]|0)+1;p=ic((t*152|3)+16|0)|0;if(!p)p=0;else{c[(p+4+15&-16)+-4>>2]=p;p=p+4+15&-16;}r=c[b+68>>2]|0;}if((r|0)>0){q=0;do{Vh(p+(q*152|0)|0,(c[b+76>>2]|0)+(q*152|0)|0,152)|0;q=q+1|0;}while((q|0)!=(r|0))}q=c[b+76>>2]|0;if(q|0){if(a[b+80>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[q+-4>>2]|0);}c[b+76>>2]=0;}a[b+80>>0]=1;c[b+76>>2]=p;c[b+72>>2]=t;p=c[b+68>>2]|0;}else p=N;c[b+68>>2]=p+1;M=c[b+76>>2]|0;c[M+(N*152|0)+140>>2]=h;r=c[b+16>>2]|0;p=c[r+(e*244|0)+240>>2]|0;t=c[r+(f*244|0)+240>>2]|0;c[M+(N*152|0)+144>>2]=e;c[M+(N*152|0)+148>>2]=f;q=c[i+84>>2]|0;c[M+(N*152|0)+104>>2]=q;c[M+(N*152|0)+132>>2]=0;g[M+(N*152|0)+100>>2]=0.0;g[M+(N*152|0)+96>>2]=0.0;L=(c[j>>2]=q,+g[j>>2]);if(p|0){c[M+(N*152|0)+16>>2]=c[d>>2];c[M+(N*152|0)+16+4>>2]=c[d+4>>2];c[M+(N*152|0)+16+8>>2]=c[d+8>>2];c[M+(N*152|0)+16+12>>2]=c[d+12>>2];K=+g[k+4>>2];D=+g[M+(N*152|0)+24>>2];H=+g[k+8>>2];I=+g[M+(N*152|0)+20>>2];E=+g[M+(N*152|0)+16>>2];J=+g[k>>2];g[M+(N*152|0)>>2]=K*D-H*I;g[M+(N*152|0)+4>>2]=H*E-D*J;g[M+(N*152|0)+8>>2]=I*J-K*E;g[M+(N*152|0)+12>>2]=0.0;v=((K*D-H*I)*+g[p+264>>2]+(H*E-D*J)*+g[p+268>>2]+(I*J-K*E)*+g[p+272>>2])*+g[p+544>>2];s=((K*D-H*I)*+g[p+280>>2]+(H*E-D*J)*+g[p+284>>2]+(I*J-K*E)*+g[p+288>>2])*+g[p+548>>2];u=((K*D-H*I)*+g[p+296>>2]+(H*E-D*J)*+g[p+300>>2]+(I*J-K*E)*+g[p+304>>2])*+g[p+552>>2];g[M+(N*152|0)+64>>2]=v;g[M+(N*152|0)+68>>2]=s;g[M+(N*152|0)+72>>2]=u;g[M+(N*152|0)+76>>2]=0.0;z=E;A=I;B=D;C=K*D-H*I;D=H*E-D*J;E=I*J-K*E;}else{c[M+(N*152|0)+64>>2]=0;c[M+(N*152|0)+64+4>>2]=0;c[M+(N*152|0)+64+8>>2]=0;c[M+(N*152|0)+64+12>>2]=0;c[M+(N*152|0)>>2]=0;c[M+(N*152|0)+4>>2]=0;c[M+(N*152|0)+8>>2]=0;c[M+(N*152|0)+12>>2]=0;c[M+(N*152|0)+16>>2]=0;c[M+(N*152|0)+20>>2]=0;c[M+(N*152|0)+24>>2]=0;c[M+(N*152|0)+28>>2]=0;s=0.0;u=0.0;v=0.0;z=0.0;A=0.0;B=0.0;C=0.0;D=0.0;E=0.0;}if(t|0){K=-+g[d>>2];P=-+g[d+4>>2];J=-+g[d+8>>2];g[M+(N*152|0)+48>>2]=K;g[M+(N*152|0)+52>>2]=P;g[M+(N*152|0)+56>>2]=J;g[M+(N*152|0)+60>>2]=0.0;O=+g[l+4>>2];R=+g[l+8>>2];Q=+g[l>>2];g[M+(N*152|0)+32>>2]=O*J-R*P;g[M+(N*152|0)+36>>2]=R*K-Q*J;g[M+(N*152|0)+40>>2]=Q*P-O*K;g[M+(N*152|0)+44>>2]=0.0;w=((O*J-R*P)*+g[t+264>>2]+(R*K-Q*J)*+g[t+268>>2]+(Q*P-O*K)*+g[t+272>>2])*+g[t+544>>2];x=((O*J-R*P)*+g[t+280>>2]+(R*K-Q*J)*+g[t+284>>2]+(Q*P-O*K)*+g[t+288>>2])*+g[t+548>>2];y=((O*J-R*P)*+g[t+296>>2]+(R*K-Q*J)*+g[t+300>>2]+(Q*P-O*K)*+g[t+304>>2])*+g[t+552>>2];g[M+(N*152|0)+80>>2]=w;g[M+(N*152|0)+84>>2]=x;g[M+(N*152|0)+88>>2]=y;g[M+(N*152|0)+92>>2]=0.0;F=K;G=P;H=J;I=O*J-R*P;J=R*K-Q*J;K=Q*P-O*K;}else{c[M+(N*152|0)+80>>2]=0;c[M+(N*152|0)+80+4>>2]=0;c[M+(N*152|0)+80+8>>2]=0;c[M+(N*152|0)+80+12>>2]=0;c[M+(N*152|0)+32>>2]=0;c[M+(N*152|0)+32+4>>2]=0;c[M+(N*152|0)+32+8>>2]=0;c[M+(N*152|0)+32+12>>2]=0;c[M+(N*152|0)+32+16>>2]=0;c[M+(N*152|0)+32+20>>2]=0;c[M+(N*152|0)+32+24>>2]=0;c[M+(N*152|0)+32+28>>2]=0;w=0.0;x=0.0;y=0.0;F=0.0;G=0.0;H=0.0;I=0.0;J=0.0;K=0.0;}if(p|0){P=+g[k+8>>2];Q=+g[k+4>>2];R=+g[k>>2];u=+g[p+344>>2]+((s*P-u*Q)*+g[d>>2]+(u*R-P*v)*+g[d+4>>2]+(Q*v-s*R)*+g[d+8>>2]);}else u=0.0;if(t|0){Q=-w;s=-x;y=-y;O=+g[l+8>>2];P=+g[l+4>>2];R=+g[l>>2];s=+g[t+344>>2]+((O*s-P*y)*+g[d>>2]+(R*y-O*Q)*+g[d+4>>2]+(P*Q-R*s)*+g[d+8>>2]);}else s=0.0;x=m/(u+s);g[M+(N*152|0)+108>>2]=x;if(p|0){u=+g[r+(e*244|0)+192>>2];v=+g[r+(e*244|0)+196>>2];w=+g[r+(e*244|0)+200>>2];s=(+g[r+(e*244|0)+176>>2]+ +g[r+(e*244|0)+208>>2])*z+(+g[r+(e*244|0)+180>>2]+ +g[r+(e*244|0)+212>>2])*A+(+g[r+(e*244|0)+184>>2]+ +g[r+(e*244|0)+216>>2])*B;}else{u=0.0;v=0.0;w=0.0;s=z*0.0+A*0.0+B*0.0;}s=s+(u*C+v*D+w*E);if(t|0){O=+g[r+(f*244|0)+192>>2];P=+g[r+(f*244|0)+196>>2];R=+g[r+(f*244|0)+200>>2];Q=(+g[r+(f*244|0)+176>>2]+ +g[r+(f*244|0)+208>>2])*F+(+g[r+(f*244|0)+180>>2]+ +g[r+(f*244|0)+212>>2])*G+(+g[r+(f*244|0)+184>>2]+ +g[r+(f*244|0)+216>>2])*H;O=O*I;P=P*J;P=O+P;R=R*K;R=P+R;R=Q+R;R=s+R;R=n-R;R=x*R;f=M+(N*152|0)+112|0;g[f>>2]=R;f=M+(N*152|0)+116|0;g[f>>2]=o;R=-L;f=M+(N*152|0)+120|0;g[f>>2]=R;f=M+(N*152|0)+124|0;c[f>>2]=q;return}else{O=0.0;P=0.0;R=0.0;Q=F*0.0+G*0.0+H*0.0;O=O*I;P=P*J;P=O+P;R=R*K;R=P+R;R=Q+R;R=s+R;R=n-R;R=x*R;f=M+(N*152|0)+112|0;g[f>>2]=R;f=M+(N*152|0)+116|0;g[f>>2]=o;R=-L;f=M+(N*152|0)+120|0;g[f>>2]=R;f=M+(N*152|0)+124|0;c[f>>2]=q;return}}function bd(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0,ga=0.0;fa=l;l=l+32|0;K=c[b+4>>2]|0;a[K+312>>0]=0;c[K>>2]=0;a[K+356>>0]=1;c[K+292>>2]=1566444395;c[K+296>>2]=1566444395;c[K+300>>2]=1566444395;g[K+304>>2]=0.0;c[K+336>>2]=0;c[K+336+4>>2]=0;c[K+336+8>>2]=0;c[K+336+12>>2]=0;a[K+336+16>>0]=0;a[K+332>>0]=a[K+332>>0]&-16;p=+g[d+48>>2];r=+g[d+52>>2];u=+g[d+56>>2];o=+g[f+48>>2];q=+g[f+52>>2];t=+g[f+56>>2];M=+g[d>>2];Y=+g[d+4>>2];_=+g[d+8>>2];aa=+g[d+16>>2];O=+g[d+20>>2];Q=+g[d+24>>2];S=+g[d+32>>2];U=+g[d+36>>2];W=+g[d+40>>2];L=+g[f>>2];X=+g[f+4>>2];Z=+g[f+8>>2];$=+g[f+16>>2];N=+g[f+20>>2];P=+g[f+24>>2];R=+g[f+32>>2];T=+g[f+36>>2];V=+g[f+40>>2];ca=+g[e+48>>2]-p-(+g[h+48>>2]-o);da=+g[e+52>>2]-r-(+g[h+52>>2]-q);ea=+g[e+56>>2]-u-(+g[h+56>>2]-t);K=c[b+8>>2]|0;z=c[(c[K>>2]|0)+64>>2]|0;g[fa>>2]=M*-ca+aa*-da+S*-ea;g[fa+4>>2]=Y*-ca+O*-da+U*-ea;g[fa+8>>2]=_*-ca+Q*-da+W*-ea;g[fa+12>>2]=0.0;Vb[z&127](fa+16|0,K,fa);I=+g[fa+16>>2];J=+g[fa+16+4>>2];H=+g[fa+16+8>>2];m=I*+g[d>>2]+J*+g[d+4>>2]+H*+g[d+8>>2]+ +g[d+48>>2];w=I*+g[d+16>>2]+J*+g[d+20>>2]+H*+g[d+24>>2]+ +g[d+52>>2];H=I*+g[d+32>>2]+J*+g[d+36>>2]+H*+g[d+40>>2]+ +g[d+56>>2];K=c[b+12>>2]|0;z=c[(c[K>>2]|0)+64>>2]|0;J=ca*+g[f+4>>2]+da*+g[f+20>>2]+ea*+g[f+36>>2];I=ca*+g[f+8>>2]+da*+g[f+24>>2]+ea*+g[f+40>>2];g[fa>>2]=ca*+g[f>>2]+da*+g[f+16>>2]+ea*+g[f+32>>2];g[fa+4>>2]=J;g[fa+8>>2]=I;g[fa+12>>2]=0.0;Vb[z&127](fa+16|0,K,fa);I=+g[fa+16>>2];J=+g[fa+16+4>>2];n=+g[fa+16+8>>2];m=m-(I*+g[f>>2]+J*+g[f+4>>2]+n*+g[f+8>>2]+ +g[f+48>>2]);w=w-(I*+g[f+16>>2]+J*+g[f+20>>2]+n*+g[f+24>>2]+ +g[f+52>>2]);n=H-(I*+g[f+32>>2]+J*+g[f+36>>2]+n*+g[f+40>>2]+ +g[f+56>>2]);a:do if(m*m+w*w+n*n>9.999999747378752e-05){k=0.0;K=32;J=m;j=0;I=n;s=0;A=o;o=0.0;n=0.0;m=0.0;while(1){if(!K)break a;K=K+-1|0;z=c[b+8>>2]|0;x=c[(c[z>>2]|0)+64>>2]|0;D=-J;ga=-w;y=-I;g[fa>>2]=M*D+aa*ga+S*y;g[fa+4>>2]=Y*D+O*ga+U*y;g[fa+8>>2]=_*D+Q*ga+W*y;g[fa+12>>2]=0.0;Vb[x&127](fa+16|0,z,fa);y=+g[fa+16>>2];ga=+g[fa+16+4>>2];D=+g[fa+16+8>>2];B=p+(M*y+Y*ga+_*D);C=r+(aa*y+O*ga+Q*D);D=u+(S*y+U*ga+W*D);z=c[b+12>>2]|0;x=c[(c[z>>2]|0)+64>>2]|0;g[fa>>2]=L*J+$*w+R*I;g[fa+4>>2]=X*J+N*w+T*I;g[fa+8>>2]=Z*J+P*w+V*I;g[fa+12>>2]=0.0;Vb[x&127](fa+16|0,z,fa);ga=+g[fa+16>>2];y=+g[fa+16+4>>2];H=+g[fa+16+8>>2];E=A+(L*ga+X*y+Z*H);F=q+($*ga+N*y+P*H);H=t+(R*ga+T*y+V*H);y=J*(B-E)+w*(C-F)+I*(D-H);if(k>1.0){j=0;ba=24;break}if(y>0.0){m=ca*J+da*w+ea*I;if(m>=-1.4210854715202004e-14){j=0;ba=24;break}u=k-y/m;k=u;j=s;A=(1.0-u)*+g[f+48>>2]+u*+g[h+48>>2];p=(1.0-u)*+g[d+48>>2]+u*+g[e+48>>2];q=(1.0-u)*+g[f+52>>2]+u*+g[h+52>>2];r=(1.0-u)*+g[d+52>>2]+u*+g[e+52>>2];t=(1.0-u)*+g[f+56>>2]+u*+g[h+56>>2];u=(1.0-u)*+g[d+56>>2]+u*+g[e+56>>2];m=J;n=w;o=I;}s=c[b+4>>2]|0;z=c[s>>2]|0;if((z|0)>0){w=+g[s+308>>2];x=0;v=0;do{I=B-E-+g[s+4+(x<<4)>>2];J=C-F-+g[s+4+(x<<4)+4>>2];ga=D-H-+g[s+4+(x<<4)+8>>2];v=v|I*I+J*J+ga*ga<=w;x=x+1|0;}while((x|0)!=(z|0))}else v=0;if((+g[s+304>>2]==0.0?D-H==+g[s+300>>2]:0)?C-F==+g[s+296>>2]:0){if(!(B-E==+g[s+292>>2]|v))ba=16;}else if(!v)ba=16;if((ba|0)==16){ba=0;g[s+292>>2]=B-E;g[s+296>>2]=C-F;g[s+300>>2]=D-H;g[s+304>>2]=0.0;a[s+356>>0]=1;g[s+4+(z<<4)>>2]=B-E;g[s+4+(z<<4)+4>>2]=C-F;g[s+4+(z<<4)+8>>2]=D-H;g[s+4+(z<<4)+12>>2]=0.0;z=c[s>>2]|0;g[s+84+(z<<4)>>2]=B;g[s+84+(z<<4)+4>>2]=C;g[s+84+(z<<4)+8>>2]=D;g[s+84+(z<<4)+12>>2]=0.0;z=c[s>>2]|0;g[s+164+(z<<4)>>2]=E;g[s+164+(z<<4)+4>>2]=F;g[s+164+(z<<4)+8>>2]=H;g[s+164+(z<<4)+12>>2]=0.0;c[s>>2]=(c[s>>2]|0)+1;s=c[b+4>>2]|0;}z=oc(s)|0;J=+g[s+276>>2];w=+g[s+280>>2];I=+g[s+284>>2];if(!z)break a;if(!(J*J+w*w+I*I>9.999999747378752e-05))break a;else s=c[s+288>>2]|0;}if((ba|0)==24){l=fa;return j|0}}else{k=0.0;o=0.0;n=0.0;m=0.0;j=0;}while(0);g[i+164>>2]=k;k=m*m+n*n+o*o;if(!(k>=1.4210854715202004e-14)){c[i+132>>2]=0;c[i+132+4>>2]=0;c[i+132+8>>2]=0;c[i+132+12>>2]=0;k=0.0;m=0.0;n=0.0;}else{ga=1.0/+G(+k);k=m*ga;m=n*ga;n=o*ga;g[i+132>>2]=k;g[i+136>>2]=m;g[i+140>>2]=n;c[i+144>>2]=j;}if(ca*k+da*m+ea*n>=-+g[i+172>>2]){i=0;l=fa;return i|0}b=c[b+4>>2]|0;oc(b)|0;hp(i+148|0,b+260|0,16)|0;i=1;l=fa;return i|0}function cd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0;A=+g[b+48>>2];i=+g[d>>2];B=+g[b+64>>2];j=+g[d+4>>2];H=+g[b+80>>2];p=+g[d+8>>2];s=+g[b+52>>2];r=+g[b+68>>2];q=+g[b+84>>2];w=+g[b+56>>2];F=+g[b+72>>2];x=+g[b+88>>2];v=+g[d+16>>2];u=+g[d+20>>2];t=+g[d+24>>2];E=+g[d+32>>2];C=+g[d+36>>2];D=+g[d+40>>2];k=+g[b+96>>2];h=+g[b+100>>2];z=+g[b+104>>2];y=+g[d+48>>2]+(i*k+j*h+p*z);f=v*k+u*h+t*z+ +g[d+52>>2];z=E*k+C*h+D*z+ +g[d+56>>2];g[b+1064>>2]=A*i+B*j+H*p;g[b+1068>>2]=i*s+j*r+p*q;g[b+1072>>2]=i*w+j*F+p*x;g[b+1076>>2]=0.0;g[b+1080>>2]=A*v+B*u+H*t;g[b+1084>>2]=s*v+r*u+q*t;g[b+1088>>2]=w*v+F*u+x*t;g[b+1092>>2]=0.0;g[b+1096>>2]=A*E+B*C+H*D;g[b+1100>>2]=s*E+r*C+q*D;g[b+1104>>2]=w*E+F*C+x*D;g[b+1108>>2]=0.0;g[b+1112>>2]=y;g[b+1116>>2]=f;g[b+1120>>2]=z;g[b+1124>>2]=0.0;z=+g[b+112>>2];f=+g[e>>2];y=+g[b+128>>2];D=+g[e+4>>2];x=+g[b+144>>2];C=+g[e+8>>2];F=+g[b+116>>2];E=+g[b+132>>2];w=+g[b+148>>2];q=+g[b+120>>2];r=+g[b+136>>2];s=+g[b+152>>2];H=+g[e+16>>2];B=+g[e+20>>2];A=+g[e+24>>2];t=+g[e+32>>2];u=+g[e+36>>2];v=+g[e+40>>2];p=+g[b+160>>2];j=+g[b+164>>2];i=+g[b+168>>2];h=+g[e+48>>2]+(f*p+D*j+C*i);k=H*p+B*j+A*i+ +g[e+52>>2];i=t*p+u*j+v*i+ +g[e+56>>2];g[b+1128>>2]=z*f+y*D+x*C;g[b+1132>>2]=f*F+D*E+C*w;g[b+1136>>2]=f*q+D*r+C*s;g[b+1140>>2]=0.0;g[b+1144>>2]=z*H+y*B+x*A;g[b+1148>>2]=F*H+E*B+w*A;g[b+1152>>2]=q*H+r*B+s*A;g[b+1156>>2]=0.0;g[b+1160>>2]=z*t+y*u+x*v;g[b+1164>>2]=F*t+E*u+w*v;g[b+1168>>2]=q*t+r*u+s*v;g[b+1172>>2]=0.0;g[b+1176>>2]=h;g[b+1180>>2]=k;g[b+1184>>2]=i;g[b+1188>>2]=0.0;h=h-+g[b+1112>>2];k=k-+g[b+1116>>2];i=i-+g[b+1120>>2];w=+g[b+1084>>2];E=+g[b+1104>>2];F=+g[b+1088>>2];x=+g[b+1100>>2];y=+g[b+1096>>2];z=+g[b+1080>>2];A=+g[b+1064>>2];B=+g[b+1068>>2];H=+g[b+1072>>2];C=1.0/((w*E-F*x)*A+B*(F*y-E*z)+(x*z-w*y)*H);D=(x*z-w*y)*C;f=i*(F*B-w*H)*C+(h*(w*E-F*x)*C+k*(x*H-E*B)*C);j=i*(z*H-F*A)*C+(h*(F*y-E*z)*C+k*(E*A-y*H)*C);k=i*(w*A-z*B)*C+(h*D+k*(y*B-x*A)*C);g[b+1256>>2]=f;g[b+1260>>2]=j;g[b+1264>>2]=k;g[b+1268>>2]=0.0;g[b+840>>2]=f;h=+g[b+680>>2];i=+g[b+696>>2];do if(!(h>i)){if(h>f){c[b+856>>2]=2;f=f-h;break}if(i<f){c[b+856>>2]=1;f=f-i;break}else{c[b+856>>2]=0;f=0.0;break}}else{c[b+856>>2]=0;f=0.0;}while(0);g[b+824>>2]=f;g[b+844>>2]=j;f=+g[b+684>>2];h=+g[b+700>>2];do if(!(f>h)){if(f>j){c[b+860>>2]=2;f=j-f;break}if(h<j){c[b+860>>2]=1;f=j-h;break}else{c[b+860>>2]=0;f=0.0;break}}else{c[b+860>>2]=0;f=0.0;}while(0);g[b+828>>2]=f;g[b+848>>2]=k;f=+g[b+688>>2];h=+g[b+704>>2];do if(!(f>h)){if(f>k){c[b+864>>2]=2;f=k-f;break}if(h<k){c[b+864>>2]=1;f=k-h;break}else{c[b+864>>2]=0;f=0.0;break}}else{c[b+864>>2]=0;f=0.0;}while(0);g[b+832>>2]=f;n=+g[b+1128>>2];o=+g[b+1144>>2];p=+g[b+1160>>2];h=+g[b+1132>>2];i=+g[b+1148>>2];j=+g[b+1164>>2];k=(w*E-F*x)*C*h+(x*H-E*B)*C*i+(F*B-w*H)*C*j;l=h*(F*y-E*z)*C+(E*A-y*H)*C*i+(z*H-F*A)*C*j;m=p*(w*A-z*B)*C+(n*D+o*(y*B-x*A)*C);f=D*+g[b+1136>>2]+(y*B-x*A)*C*+g[b+1152>>2]+(w*A-z*B)*C*(q*t+r*u+s*v);do if(m<1.0)if(m>-1.0){g[b+1192>>2]=+O(+-(h*D+(y*B-x*A)*C*i+(w*A-z*B)*C*j),+f);f=m<-1.0?-1.0:m;g[b+1196>>2]=+M(+(f>1.0?1.0:f));f=+O(+-(p*(z*H-F*A)*C+(n*(F*y-E*z)*C+o*(E*A-y*H)*C)),+(p*(F*B-w*H)*C+(n*(w*E-F*x)*C+o*(x*H-E*B)*C)));break}else{g[b+1192>>2]=-+O(+k,+l);g[b+1196>>2]=-1.5707963705062866;f=0.0;break}else{g[b+1192>>2]=+O(+k,+l);g[b+1196>>2]=1.5707963705062866;f=0.0;}while(0);g[b+1200>>2]=f;g[b+1236>>2]=0.0;x=E*(n*E-p*H)-F*(o*H-n*F);y=H*(o*H-n*F)-E*(p*F-o*E);z=F*(p*F-o*E)-H*(n*E-p*H);g[b+1220>>2]=0.0;B=o*(o*H-n*F)-p*(n*E-p*H);C=p*(p*F-o*E)-n*(o*H-n*F);D=n*(n*E-p*H)-o*(p*F-o*E);g[b+1252>>2]=0.0;A=1.0/+G(+(x*x+y*y+z*z));g[b+1208>>2]=x*A;g[b+1212>>2]=y*A;g[b+1216>>2]=z*A;A=1.0/+G(+((p*F-o*E)*(p*F-o*E)+(n*E-p*H)*(n*E-p*H)+(o*H-n*F)*(o*H-n*F)));g[b+1224>>2]=(p*F-o*E)*A;g[b+1228>>2]=(n*E-p*H)*A;g[b+1232>>2]=(o*H-n*F)*A;H=1.0/+G(+(B*B+C*C+D*D));g[b+1240>>2]=B*H;g[b+1244>>2]=C*H;g[b+1248>>2]=D*H;if(!(a[b+1301>>0]|0))return;F=+g[(c[b+28>>2]|0)+344>>2];H=+g[(c[b+32>>2]|0)+344>>2];a[b+1280>>0]=(F<1.1920928955078125e-07|H<1.1920928955078125e-07)&1;H=F+H>0.0?H/(F+H):.5;g[b+1272>>2]=H;g[b+1276>>2]=1.0-H;return}function dd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;x=l;l=l+80|0;e=c[b+8>>2]|0;if((e|0)>0){g=0;do{f=c[(c[b+16>>2]|0)+(g<<2)>>2]|0;if((c[f+236>>2]|0)==1){nb[c[(c[f>>2]|0)+24>>2]&127](f,d);e=c[b+8>>2]|0;}g=g+1|0;}while((g|0)<(e|0))}a[x+16>>0]=1;c[x+12>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;a[x+36>>0]=1;c[x+32>>2]=0;c[x+24>>2]=0;c[x+28>>2]=0;a[x+56>>0]=1;c[x+52>>2]=0;c[x+44>>2]=0;c[x+48>>2]=0;a[x+76>>0]=1;c[x+72>>2]=0;c[x+64>>2]=0;c[x+68>>2]=0;if((e|0)<=0){Ui(x);l=x;return}f=0;o=0;i=0;h=0;n=0;while(1){r=c[(c[(c[b+16>>2]|0)+(f<<2)>>2]|0)+192>>2]|0;p=(r+~(r<<15)>>10^r+~(r<<15))*9|0;p=(p>>6^p)+~((p>>6^p)<<11)>>16^(p>>6^p)+~((p>>6^p)<<11);g=p&o+-1;k=g>>>0<i>>>0;a:do if(k){i=c[h+(g<<2)>>2]|0;if((i|0)!=-1){m=c[x+72>>2]|0;while(1){if((r|0)==(c[m+(i<<3)>>2]|0)){q=13;break}j=c[n+(i<<2)>>2]|0;if((j|0)==-1)break;else i=j;}if((q|0)==13?(q=0,(c[x+52>>2]|0)+(i<<2)|0):0){i=o;g=n;break}if(!k){q=20;break}}e=c[h+(g<<2)>>2]|0;if((e|0)!=-1){i=c[x+72>>2]|0;while(1){if((r|0)==(c[i+(e<<3)>>2]|0))break;e=c[n+(e<<2)>>2]|0;if((e|0)==-1){q=20;break a}}c[(c[x+52>>2]|0)+(e<<2)>>2]=r;e=o;g=n;q=78;}else q=20;}else q=20;while(0);if((q|0)==20){q=0;n=c[x+44>>2]|0;if((n|0)==(o|0)){e=o|0?o<<1:1;if((o|0)<(e|0)){if((e|0)!=0?(c[6436]=(c[6436]|0)+1,w=ic((e<<2|3)+16|0)|0,(w|0)!=0):0){c[(w+4+15&-16)+-4>>2]=w;i=w+4+15&-16;}else i=0;if((o|0)>0){h=0;do{c[i+(h<<2)>>2]=c[(c[x+52>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(o|0))}h=c[x+52>>2]|0;if(h|0){if(a[x+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[x+52>>2]=0;}a[x+56>>0]=1;c[x+52>>2]=i;c[x+48>>2]=e;h=o;}else{h=o;e=o;}}else{h=n;e=o;}c[(c[x+52>>2]|0)+(h<<2)>>2]=r;c[x+44>>2]=h+1;h=c[x+64>>2]|0;if((h|0)==(c[x+68>>2]|0)?(s=h|0?h<<1:1,(h|0)<(s|0)):0){if((s|0)!=0?(c[6436]=(c[6436]|0)+1,t=ic((s<<3|3)+16|0)|0,(t|0)!=0):0){c[(t+4+15&-16)+-4>>2]=t;i=t+4+15&-16;}else i=0;if((h|0)>0){e=0;do{j=(c[x+72>>2]|0)+(e<<3)|0;k=c[j+4>>2]|0;m=i+(e<<3)|0;c[m>>2]=c[j>>2];c[m+4>>2]=k;e=e+1|0;}while((e|0)!=(h|0))}e=c[x+72>>2]|0;if(e|0){if(a[x+76>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[x+72>>2]=0;}a[x+76>>0]=1;c[x+72>>2]=i;c[x+68>>2]=s;h=c[x+64>>2]|0;e=c[x+48>>2]|0;}m=(c[x+72>>2]|0)+(h<<3)|0;c[m>>2]=r;c[m+4>>2]=0;c[x+64>>2]=h+1;if((o|0)<(e|0)){m=c[x+4>>2]|0;do if((m|0)<(e|0)){if((c[x+8>>2]|0)<(e|0)){if((e|0)!=0?(c[6436]=(c[6436]|0)+1,u=ic((e<<2|3)+16|0)|0,(u|0)!=0):0){c[(u+4+15&-16)+-4>>2]=u;g=u+4+15&-16;}else g=0;i=c[x+12>>2]|0;if((m|0)>0){h=0;do{c[g+(h<<2)>>2]=c[i+(h<<2)>>2];h=h+1|0;}while((h|0)!=(m|0));if(a[x+16>>0]|0)q=55;}else if(!((i|0)==0|(a[x+16>>0]|0)==0))q=55;if((q|0)==55){q=0;c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}a[x+16>>0]=1;c[x+12>>2]=g;c[x+8>>2]=e;}else g=c[x+12>>2]|0;k=e<<2;Ik(g+(m<<2)|0,0,k-(m<<2)|0)|0;c[x+4>>2]=e;j=c[x+24>>2]|0;if((j|0)<(e|0)){if((c[x+28>>2]|0)<(e|0)){if((e|0)!=0?(c[6436]=(c[6436]|0)+1,v=ic((k|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;g=v+4+15&-16;}else g=0;i=c[x+32>>2]|0;if((j|0)>0){h=0;do{c[g+(h<<2)>>2]=c[i+(h<<2)>>2];h=h+1|0;}while((h|0)!=(j|0));if(a[x+36>>0]|0)q=67;}else if(!((i|0)==0|(a[x+36>>0]|0)==0))q=67;if((q|0)==67){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}a[x+36>>0]=1;c[x+32>>2]=g;c[x+28>>2]=e;}else g=c[x+32>>2]|0;Ik(g+(j<<2)|0,0,k-(j<<2)|0)|0;}c[x+24>>2]=e;if((e|0)>0){Ik(c[x+12>>2]|0,-1,k|0)|0;Ik(c[x+32>>2]|0,-1,k|0)|0;}if((m|0)<=0){e=c[x+48>>2]|0;break}h=c[x+72>>2]|0;i=c[x+12>>2]|0;j=c[x+32>>2]|0;e=c[x+48>>2]|0;g=0;do{q=c[h+(g<<3)>>2]|0;q=(q+~(q<<15)>>10^q+~(q<<15))*9|0;q=i+((((q>>6^q)+~((q>>6^q)<<11)>>16^(q>>6^q)+~((q>>6^q)<<11))&e+-1)<<2)|0;c[j+(g<<2)>>2]=c[q>>2];c[q>>2]=g;g=g+1|0;}while((g|0)!=(m|0))}while(0);g=p&e+-1;}h=c[x+12>>2]|0;q=h+(g<<2)|0;g=c[x+32>>2]|0;c[g+(n<<2)>>2]=c[q>>2];c[q>>2]=n;q=78;}if((q|0)==78){q=0;nb[c[(c[r>>2]|0)+60>>2]&127](r,d);i=e;e=c[b+8>>2]|0;}f=f+1|0;if((f|0)>=(e|0))break;o=i;i=c[x+4>>2]|0;n=g;}Ui(x);l=x;return}function ed(a,d,f,h,i,j,k,l,m){a=a|0;d=d|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0;w=+g[a+8>>2];y=+g[a+12>>2];A=+g[a+16>>2];x=+g[a+40>>2];s=(+g[d>>2]-w)*x;z=+g[a+44>>2];u=(+g[d+4>>2]-y)*z;B=+g[a+48>>2];v=(+g[d+8>>2]-A)*B;if(!(s<=0.0)){t=b[a+6>>1]|0;t=(!(s>=+(t&65535))?~~s&65535:t)&b[a+4>>1];}else t=0;if(!(u<=0.0)){r=b[a+6>>1]|0;r=(!(u>=+(r&65535))?~~u&65535:r)&b[a+4>>1];}else r=0;if(!(v<=0.0)){q=b[a+6>>1]|0;q=(!(v>=+(q&65535))?~~v&65535:q)&b[a+4>>1];}else q=0;v=(+g[f>>2]-w)*x;u=(+g[f+4>>2]-y)*z;s=(+g[f+8>>2]-A)*B;if(!(v<=0.0)){p=b[a+6>>1]|0;p=(!(v>=+(p&65535))?~~v&65535:p)&b[a+4>>1]|1;}else p=1;if(!(u<=0.0)){o=b[a+6>>1]|0;o=(!(u>=+(o&65535))?~~u&65535:o)&b[a+4>>1]|1;}else o=1;if(!(s<=0.0)){n=b[a+6>>1]|0;n=(!(s>=+(n&65535))?~~s&65535:n)&b[a+4>>1]|1;}else n=1;D=b[a+64>>1]|0;C=c[a+60>>2]|0;b[a+64>>1]=b[C+((D&65535)<<6)+48>>1]|0;E=(b[a+56>>1]|0)+1<<16>>16;b[a+56>>1]=E;c[C+((D&65535)<<6)+12>>2]=D&65535;c[C+((D&65535)<<6)>>2]=i;b[C+((D&65535)<<6)+4>>1]=j;b[C+((D&65535)<<6)+6>>1]=k;c[C+((D&65535)<<6)+8>>2]=m;m=(E&65535)<<1&65534;b[C+54>>1]=(e[C+54>>1]|0)+2;F=c[a+68>>2]|0;G=e[F+(m+-1<<2)>>1]|e[F+(m+-1<<2)+2>>1]<<16;b[F+((m|1)<<2)>>1]=G;b[F+((m|1)<<2)+2>>1]=G>>>16;F=c[a+68>>2]|0;b[F+(m+-1<<2)>>1]=t;b[F+(m+-1<<2)+2>>1]=D;b[F+(m<<2)>>1]=p;b[F+(m<<2)+2>>1]=D;b[C+((D&65535)<<6)+48>>1]=m+-1;b[C+((D&65535)<<6)+54>>1]=(E&65535)<<1;p=(c[a+60>>2]|0)+56|0;b[p>>1]=(e[p>>1]|0)+2;p=c[a+72>>2]|0;t=e[p+(m+-1<<2)>>1]|e[p+(m+-1<<2)+2>>1]<<16;b[p+((m|1)<<2)>>1]=t;b[p+((m|1)<<2)+2>>1]=t>>>16;p=c[a+72>>2]|0;b[p+(m+-1<<2)>>1]=r;b[p+(m+-1<<2)+2>>1]=D;b[p+(m<<2)>>1]=o;b[p+(m<<2)+2>>1]=D;b[C+((D&65535)<<6)+50>>1]=m+-1;b[C+((D&65535)<<6)+56>>1]=(E&65535)<<1;o=(c[a+60>>2]|0)+58|0;b[o>>1]=(e[o>>1]|0)+2;o=c[a+76>>2]|0;p=e[o+(m+-1<<2)>>1]|e[o+(m+-1<<2)+2>>1]<<16;b[o+((m|1)<<2)>>1]=p;b[o+((m|1)<<2)+2>>1]=p>>>16;o=c[a+76>>2]|0;b[o+(m+-1<<2)>>1]=q;b[o+(m+-1<<2)+2>>1]=D;b[o+(m<<2)>>1]=n;b[o+(m<<2)+2>>1]=D;b[C+((D&65535)<<6)+52>>1]=m+-1;b[C+((D&65535)<<6)+58>>1]=(E&65535)<<1;o=c[a+68>>2]|0;p=e[C+((D&65535)<<6)+48>>1]|0;t=c[a+60>>2]|0;q=b[o+(p<<2)+-4>>1]|0;if((e[o+(p<<2)>>1]|0)<(q&65535)){m=t+((e[o+(p<<2)+2>>1]|0)<<6)+48|0;n=o+(p<<2)+-4|0;r=o+(p<<2)|0;p=q;o=t;while(1){G=e[r+-2>>1]|0;o=(p&1)==0?o+(G<<6)+48|0:o+(G<<6)+54|0;b[o>>1]=(b[o>>1]|0)+1<<16>>16;b[m>>1]=(b[m>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;p=e[n>>1]|e[n+2>>1]<<16;b[r>>1]=p;b[r+2>>1]=p>>>16;b[n>>1]=o;b[n+2>>1]=o>>>16;o=r+-4|0;n=n+-4|0;p=b[n>>1]|0;if((e[o>>1]|0)>=(p&65535))break;r=o;o=c[a+60>>2]|0;}o=c[a+68>>2]|0;}n=e[C+((D&65535)<<6)+54>>1]|0;p=o+(n<<2)|0;r=b[p+-4>>1]|0;a:do if((e[p>>1]|0)<(r&65535)){G=c[a+60>>2]|0;t=G+((e[o+(n<<2)+2>>1]|0)<<6)+54|0;n=p+-4|0;q=p;o=r;p=G;while(1){G=e[q+-2>>1]|0;p=(o&1)==0?p+(G<<6)+48|0:p+(G<<6)+54|0;b[p>>1]=(b[p>>1]|0)+1<<16>>16;b[t>>1]=(b[t>>1]|0)+-1<<16>>16;p=e[q>>1]|e[q+2>>1]<<16;o=e[n>>1]|e[n+2>>1]<<16;b[q>>1]=o;b[q+2>>1]=o>>>16;b[n>>1]=p;b[n+2>>1]=p>>>16;p=q+-4|0;n=n+-4|0;o=b[n>>1]|0;if((e[p>>1]|0)>=(o&65535))break a;q=p;p=c[a+60>>2]|0;}}while(0);o=c[a+72>>2]|0;p=e[C+((D&65535)<<6)+50>>1]|0;t=c[a+60>>2]|0;q=b[o+(p<<2)+-4>>1]|0;if((e[o+(p<<2)>>1]|0)<(q&65535)){m=t+((e[o+(p<<2)+2>>1]|0)<<6)+50|0;n=o+(p<<2)+-4|0;r=o+(p<<2)|0;p=q;o=t;while(1){G=e[r+-2>>1]|0;o=(p&1)==0?o+(G<<6)+50|0:o+(G<<6)+56|0;b[o>>1]=(b[o>>1]|0)+1<<16>>16;b[m>>1]=(b[m>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;p=e[n>>1]|e[n+2>>1]<<16;b[r>>1]=p;b[r+2>>1]=p>>>16;b[n>>1]=o;b[n+2>>1]=o>>>16;o=r+-4|0;n=n+-4|0;p=b[n>>1]|0;if((e[o>>1]|0)>=(p&65535))break;r=o;o=c[a+60>>2]|0;}o=c[a+72>>2]|0;}n=e[C+((D&65535)<<6)+56>>1]|0;p=o+(n<<2)|0;r=b[p+-4>>1]|0;b:do if((e[p>>1]|0)<(r&65535)){G=c[a+60>>2]|0;t=G+((e[o+(n<<2)+2>>1]|0)<<6)+56|0;n=p+-4|0;q=p;o=r;p=G;while(1){G=e[q+-2>>1]|0;p=(o&1)==0?p+(G<<6)+50|0:p+(G<<6)+56|0;b[p>>1]=(b[p>>1]|0)+1<<16>>16;b[t>>1]=(b[t>>1]|0)+-1<<16>>16;p=e[q>>1]|e[q+2>>1]<<16;o=e[n>>1]|e[n+2>>1]<<16;b[q>>1]=o;b[q+2>>1]=o>>>16;b[n>>1]=p;b[n+2>>1]=p>>>16;p=q+-4|0;n=n+-4|0;o=b[n>>1]|0;if((e[p>>1]|0)>=(o&65535))break b;q=p;p=c[a+60>>2]|0;}}while(0);eh(a,2,b[C+((D&65535)<<6)+52>>1]|0);$g(a,2,b[C+((D&65535)<<6)+58>>1]|0,l);o=c[a+60>>2]|0;n=c[a+108>>2]|0;if(!n){G=o+((D&65535)<<6)|0;return G|0}c[o+((D&65535)<<6)+60>>2]=Tb[c[(c[n>>2]|0)+8>>2]&3](n,d,f,h,i,j,k,l,0)|0;G=o+((D&65535)<<6)|0;return G|0}function fd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;q=l;l=l+32|0;Wf(b+4|0,((S(c[b+152>>2]|0,c[b+16>>2]|0)|0)/100|0)+1|0);if(c[b+164>>2]|0){o=((S(c[b+148>>2]|0,c[b+76>>2]|0)|0)/100|0)+1|0;Wf(b+64|0,o);o=(c[b+164>>2]|0)-o|0;c[b+164>>2]=(o|0)>0?o:0;}f=((c[b+144>>2]|0)+1|0)%2|0;c[b+144>>2]=f;f=c[b+124+(f<<2)>>2]|0;if(f|0){do{h=f+56|0;k=f;f=c[h>>2]|0;i=c[k+52>>2]|0;c[((i|0)==0?b+124+(c[k+60>>2]<<2)|0:i+56|0)>>2]=f;i=c[h>>2]|0;if(i|0)c[i+52>>2]=c[k+52>>2];c[k+52>>2]=0;c[h>>2]=c[b+132>>2];h=c[b+132>>2]|0;if(h|0)c[h+52>>2]=k;c[b+132>>2]=k;h=c[k+48>>2]|0;hg(b+4|0,h)|0;i=c[b+8>>2]|0;if(i|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+8>>2]=h;c[b+16>>2]=(c[b+16>>2]|0)+-1;c[q>>2]=c[k+16>>2];c[q+4>>2]=c[k+16+4>>2];c[q+8>>2]=c[k+16+8>>2];c[q+12>>2]=c[k+16+12>>2];c[q+16>>2]=c[k+32>>2];c[q+16+4>>2]=c[k+32+4>>2];c[q+16+8>>2]=c[k+32+8>>2];c[q+16+12>>2]=c[k+32+12>>2];h=c[b+68>>2]|0;if(!h){c[6436]=(c[6436]|0)+1;h=ic(63)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}i=h;j=i+44|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(j|0))}else c[b+68>>2]=0;c[h+32>>2]=0;c[h+36>>2]=k;c[h+40>>2]=0;c[h>>2]=c[q>>2];c[h+4>>2]=c[q+4>>2];c[h+8>>2]=c[q+8>>2];c[h+12>>2]=c[q+12>>2];c[h+16>>2]=c[q+16>>2];c[h+20>>2]=c[q+20>>2];c[h+24>>2]=c[q+24>>2];c[h+28>>2]=c[q+28>>2];Fe(b+64|0,c[b+64>>2]|0,h);i=(c[b+76>>2]|0)+1|0;c[b+76>>2]=i;c[k+48>>2]=h;c[k+60>>2]=2;}while((f|0)!=0);c[b+164>>2]=i;a[b+194>>0]=1;}c[q>>2]=9028;c[q+4>>2]=b;if(a[b+193>>0]|0?(ce(b+4|0,c[b+4>>2]|0,c[b+64>>2]|0,q),a[b+193>>0]|0):0){o=c[b+4>>2]|0;ce(b+4|0,o,o,q);}if(a[b+194>>0]|0?(m=c[b+136>>2]|0,m=pb[c[(c[m>>2]|0)+28>>2]&127](m)|0,e=c[m+4>>2]|0,(e|0)>0):0){f=(S(c[b+156>>2]|0,e)|0)/100|0;o=c[b+160>>2]|0;f=(o|0)>(f|0)?o:f;f=(e|0)<(f|0)?e:f;if((f|0)>0){h=0;do{j=((c[b+184>>2]|0)+h|0)%(e|0)|0;n=c[m+12>>2]|0;i=c[n+(j<<4)>>2]|0;j=c[n+(j<<4)+4>>2]|0;n=c[i+48>>2]|0;o=c[j+48>>2]|0;if(!(((((+g[n>>2]<=+g[o+16>>2]?+g[n+16>>2]>=+g[o>>2]:0)?+g[n+4>>2]<=+g[o+20>>2]:0)?+g[n+20>>2]>=+g[o+4>>2]:0)?+g[n+8>>2]<=+g[o+24>>2]:0)?+g[n+24>>2]>=+g[o+8>>2]:0)){e=c[b+136>>2]|0;tb[c[(c[e>>2]|0)+12>>2]&31](e,i,j,d)|0;h=h+-1|0;f=f+-1|0;e=c[m+4>>2]|0;}h=h+1|0;}while((h|0)<(f|0));if((e|0)>0)p=34;else e=0;}else p=34;if((p|0)==34)e=((c[b+184>>2]|0)+f|0)%(e|0)|0;c[b+184>>2]=e;}c[b+180>>2]=(c[b+180>>2]|0)+1;c[b+160>>2]=1;a[b+194>>0]=0;o=c[b+168>>2]|0;n=c[b+172>>2]|0;g[b+176>>2]=(o|0)==0?0.0:+(n>>>0)/+(o>>>0);c[b+172>>2]=n>>>1;c[b+168>>2]=o>>>1;o=c[b+136>>2]|0;if(!(pb[c[(c[o>>2]|0)+56>>2]&127](o)|0)){l=q;return}o=c[b+136>>2]|0;o=pb[c[(c[o>>2]|0)+28>>2]&127](o)|0;e=c[o+4>>2]|0;if((e|0)>1){je(o,0,e+-1|0);e=c[o+4>>2]|0;}if((e|0)>0){m=0;k=0;n=0;f=0;while(1){i=c[o+12>>2]|0;h=i+(m<<4)|0;r=n;n=c[h>>2]|0;i=i+(m<<4)+4|0;j=c[i>>2]|0;if(!((n|0)==(r|0)&(j|0)==(f|0))){f=c[n+48>>2]|0;r=c[j+48>>2]|0;if(((((+g[f>>2]<=+g[r+16>>2]?+g[f+16>>2]>=+g[r>>2]:0)?+g[f+4>>2]<=+g[r+20>>2]:0)?+g[f+20>>2]>=+g[r+4>>2]:0)?+g[f+8>>2]<=+g[r+24>>2]:0)?+g[f+24>>2]>=+g[r+8>>2]:0){h=k;f=j;}else{f=j;p=48;}}else p=48;if((p|0)==48){p=0;e=c[b+136>>2]|0;Vb[c[(c[e>>2]|0)+32>>2]&127](e,h,d);c[h>>2]=0;c[i>>2]=0;h=k+1|0;e=c[o+4>>2]|0;}m=m+1|0;if((m|0)>=(e|0))break;else k=h;}if((e|0)>1){je(o,0,e+-1|0);e=c[o+4>>2]|0;}j=e-h|0;if((h|0)<0){if((c[o+8>>2]|0)<(j|0)){if(!j){f=0;i=e;}else{c[6436]=(c[6436]|0)+1;f=ic((j<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=c[o+4>>2]|0;}if((i|0)>0){h=0;do{r=c[o+12>>2]|0;c[f+(h<<4)>>2]=c[r+(h<<4)>>2];c[f+(h<<4)+4>>2]=c[r+(h<<4)+4>>2];c[f+(h<<4)+8>>2]=c[r+(h<<4)+8>>2];c[f+(h<<4)+12>>2]=c[r+(h<<4)+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[o+12>>2]|0;if(h|0){if(a[o+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[o+12>>2]=0;}a[o+16>>0]=1;c[o+12>>2]=f;c[o+8>>2]=j;}do{r=(c[o+12>>2]|0)+(e<<4)|0;e=e+1|0;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;}while((e|0)!=(j|0));e=j;}else e=j;}c[o+4>>2]=e;l=q;return}function gd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var i=0.0,j=0.0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0;B=l;l=l+272|0;c[B+128>>2]=c[d>>2];c[B+128+4>>2]=c[d+4>>2];c[B+128+8>>2]=c[d+8>>2];c[B+128+12>>2]=c[d+12>>2];c[B+128+16>>2]=c[d+16>>2];c[B+128+16+4>>2]=c[d+16+4>>2];c[B+128+16+8>>2]=c[d+16+8>>2];c[B+128+16+12>>2]=c[d+16+12>>2];c[B+128+32>>2]=c[d+32>>2];c[B+128+32+4>>2]=c[d+32+4>>2];c[B+128+32+8>>2]=c[d+32+8>>2];c[B+128+32+12>>2]=c[d+32+12>>2];c[B+128+48>>2]=c[d+48>>2];c[B+128+48+4>>2]=c[d+48+4>>2];c[B+128+48+8>>2]=c[d+48+8>>2];c[B+128+48+12>>2]=c[d+48+12>>2];c[B+64>>2]=c[e>>2];c[B+64+4>>2]=c[e+4>>2];c[B+64+8>>2]=c[e+8>>2];c[B+64+12>>2]=c[e+12>>2];c[B+64+16>>2]=c[e+16>>2];c[B+64+16+4>>2]=c[e+16+4>>2];c[B+64+16+8>>2]=c[e+16+8>>2];c[B+64+16+12>>2]=c[e+16+12>>2];c[B+64+32>>2]=c[e+32>>2];c[B+64+32+4>>2]=c[e+32+4>>2];c[B+64+32+8>>2]=c[e+32+8>>2];c[B+64+32+12>>2]=c[e+32+12>>2];c[B+64+48>>2]=c[e+48>>2];c[B+64+48+4>>2]=c[e+48+4>>2];c[B+64+48+8>>2]=c[e+48+8>>2];c[B+64+48+12>>2]=c[e+48+12>>2];i=+g[B+64+52>>2]-+g[B+128+52>>2];G=+g[B+64+56>>2]-+g[B+128+56>>2];g[B+16>>2]=+g[B+64+48>>2]-+g[B+128+48>>2];g[B+16+4>>2]=i;g[B+16+8>>2]=G;g[B+16+12>>2]=0.0;tf(B+128|0,B+64|0,B+208|0,B+192|0);G=+g[B+192>>2];i=G*+g[B+208+4>>2];D=G*+g[B+208+8>>2];g[B>>2]=+g[B+208>>2]*G;g[B+4>>2]=i;g[B+8>>2]=D;g[B+12>>2]=0.0;c[B+208+48>>2]=0;c[B+208+48+4>>2]=0;c[B+208+48+8>>2]=0;c[B+208+48+12>>2]=0;fh(B+128|0,B+192|0);D=+g[B+192>>2];i=+g[B+192+4>>2];G=+g[B+192+8>>2];E=+g[B+192+12>>2];C=D*(2.0/(D*D+i*i+G*G+E*E));j=i*(2.0/(D*D+i*i+G*G+E*E));F=G*(2.0/(D*D+i*i+G*G+E*E));g[B+208>>2]=1.0-(i*j+G*F);g[B+208+4>>2]=D*j-E*F;g[B+208+8>>2]=D*F+E*j;g[B+208+12>>2]=0.0;g[B+208+16>>2]=D*j+E*F;g[B+208+20>>2]=1.0-(D*C+G*F);g[B+208+24>>2]=i*F-E*C;g[B+208+28>>2]=0.0;g[B+208+32>>2]=D*F-E*j;g[B+208+36>>2]=i*F+E*C;g[B+208+40>>2]=1.0-(D*C+i*j);g[B+208+44>>2]=0.0;Ug(b,B+208|0,B+16|0,B,B+48|0,B+32|0);if((c[a+268>>2]|0)<=0){l=B;return}k=0;do{m=c[(c[a+276>>2]|0)+(k<<2)>>2]|0;if(Kb[c[(c[f>>2]|0)+8>>2]&31](f,c[m+188>>2]|0)|0?(z=c[m+192>>2]|0,Zb[c[(c[z>>2]|0)+8>>2]&127](z,m+4|0,B+192|0,B+16|0),n=+g[B+192>>2]+ +g[B+48>>2],o=+g[B+192+4>>2]+ +g[B+48+4>>2],p=+g[B+192+8>>2]+ +g[B+48+8>>2],g[B+192>>2]=n,g[B+192+4>>2]=o,g[B+192+8>>2]=p,g[B+192+12>>2]=0.0,q=+g[B+16>>2]+ +g[B+32>>2],r=+g[B+16+4>>2]+ +g[B+32+4>>2],s=+g[B+16+8>>2]+ +g[B+32+8>>2],g[B+16>>2]=q,g[B+16+4>>2]=r,g[B+16+8>>2]=s,g[B+16+12>>2]=0.0,t=+g[d+48>>2]-(q+n)*.5,u=+g[d+52>>2]-(r+o)*.5,v=+g[d+56>>2]-(s+p)*.5,w=+g[e+48>>2]-(q+n)*.5,x=+g[e+52>>2]-(r+o)*.5,y=+g[e+56>>2]-(s+p)*.5,z=t<-((q-n)*.5)|(t>(q-n)*.5?8:0)|(u<-((r-o)*.5)?2:0)|(u>(r-o)*.5?16:0)|(v<-((s-p)*.5)?4:0)|(v>(s-p)*.5?32:0),A=w<-((q-n)*.5)|(w>(q-n)*.5?8:0)|(x<-((r-o)*.5)?2:0)|(x>(r-o)*.5?16:0)|(y<-((s-p)*.5)?4:0)|(y>(s-p)*.5?32:0),(z&A|0)==0):0){if(t<-((q-n)*.5))if(!((-t-(q-n)*.5)/(w-t)>=0.0)){i=0.0;j=1.0;}else{i=(-t-(q-n)*.5)/(w-t);j=1.0;}else if(w<-((q-n)*.5)?(-t-(q-n)*.5)/(w-t)<1.0:0){i=0.0;j=(-t-(q-n)*.5)/(w-t);}else{i=0.0;j=1.0;}if(u<-((r-o)*.5)){if(i<=(-u-(r-o)*.5)/(x-u))i=(-u-(r-o)*.5)/(x-u);}else if(x<-((r-o)*.5)?(-u-(r-o)*.5)/(x-u)<j:0)j=(-u-(r-o)*.5)/(x-u);if(v<-((s-p)*.5)){if(i<=(-v-(s-p)*.5)/(y-v))i=(-v-(s-p)*.5)/(y-v);}else if(y<-((s-p)*.5)?(-v-(s-p)*.5)/(y-v)<j:0)j=(-v-(s-p)*.5)/(y-v);if(t>(q-n)*.5){if(i<=((q-n)*.5-t)/(w-t))i=((q-n)*.5-t)/(w-t);}else if(w>(q-n)*.5?((q-n)*.5-t)/(w-t)<j:0)j=((q-n)*.5-t)/(w-t);if(u>(r-o)*.5){if(i<=((r-o)*.5-u)/(x-u))i=((r-o)*.5-u)/(x-u);}else if(x>(r-o)*.5?((r-o)*.5-u)/(x-u)<j:0)j=((r-o)*.5-u)/(x-u);if(!(z&32)){if((A&32|0)!=0?((s-p)*.5-v)/(y-v)<j:0)j=((s-p)*.5-v)/(y-v);}else if(i<=((s-p)*.5-v)/(y-v))i=((s-p)*.5-v)/(y-v);if(i<=j){H=c[m+192>>2]|0;c[B+208>>2]=0;c[B+208+4>>2]=H;c[B+208+8>>2]=m;c[B+208+12>>2]=m+4;c[B+208+16>>2]=-1;c[B+208+20>>2]=-1;sc(b,B+128|0,B+64|0,B+208|0,f,h);}}k=k+1|0;}while((k|0)<(c[a+268>>2]|0));l=B;return}function hd(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;q=c[b+28>>2]|0;k=c[b+32>>2]|0;pc(b,q+4|0,k+4|0,q+264|0,k+264|0);j=c[d+8>>2]|0;g[j>>2]=1.0;l=c[d+24>>2]|0;g[j+(l+1<<2)>>2]=1.0;g[j+((l<<1)+2<<2)>>2]=1.0;m=+g[b+348>>2];u=+g[b+352>>2];o=+g[b+356>>2];s=+g[q+4>>2]*m+ +g[q+8>>2]*u+ +g[q+12>>2]*o;n=m*+g[q+20>>2]+u*+g[q+24>>2]+o*+g[q+28>>2];o=m*+g[q+36>>2]+u*+g[q+40>>2]+o*+g[q+44>>2];j=c[d+12>>2]|0;c[j>>2]=0;g[j+4>>2]=o;g[j+8>>2]=-n;g[j+12>>2]=0.0;g[j+(l<<2)>>2]=-o;c[j+(l<<2)+4>>2]=0;g[j+(l<<2)+8>>2]=s;g[j+(l<<2)+12>>2]=0.0;g[j+(l<<1<<2)>>2]=n;g[j+(l<<1<<2)+4>>2]=-s;c[j+(l<<1<<2)+8>>2]=0;g[j+(l<<1<<2)+12>>2]=0.0;j=c[d+16>>2]|0;g[j>>2]=-1.0;g[j+(l+1<<2)>>2]=-1.0;g[j+((l<<1)+2<<2)>>2]=-1.0;u=+g[b+412>>2];m=+g[b+416>>2];f=+g[b+420>>2];t=+g[k+4>>2]*u+ +g[k+8>>2]*m+ +g[k+12>>2]*f;e=u*+g[k+20>>2]+m*+g[k+24>>2]+f*+g[k+28>>2];f=u*+g[k+36>>2]+m*+g[k+40>>2]+f*+g[k+44>>2];l=c[d+20>>2]|0;j=c[d+24>>2]|0;c[l>>2]=0;g[l+4>>2]=-f;g[l+8>>2]=e;g[l+12>>2]=0.0;g[l+(j<<2)>>2]=f;c[l+(j<<2)+4>>2]=0;g[l+(j<<2)+8>>2]=-t;g[l+(j<<2)+12>>2]=0.0;g[l+(j<<1<<2)>>2]=-e;g[l+(j<<1<<2)+4>>2]=t;c[l+(j<<1<<2)+8>>2]=0;g[l+(j<<1<<2)+12>>2]=0.0;p=c[b+592>>2]|0;m=+g[(p&2|0?b+600|0:d+4|0)>>2]*+g[d>>2];i=c[d+28>>2]|0;r=c[d+36>>2]|0;h=c[d+40>>2]|0;g[i>>2]=m*(t+ +g[k+52>>2]-s-+g[q+52>>2]);g[r>>2]=-3402823466385288598117041.0e14;g[h>>2]=3402823466385288598117041.0e14;if(!(p&1)){g[i+(j<<2)>>2]=m*(e+ +g[k+56>>2]-n-+g[q+56>>2]);g[r+(j<<2)>>2]=-3402823466385288598117041.0e14;g[h+(j<<2)>>2]=3402823466385288598117041.0e14;g[i+(j<<1<<2)>>2]=m*(f+ +g[k+60>>2]-o-+g[q+60>>2]);g[r+(j<<1<<2)>>2]=-3402823466385288598117041.0e14;g[h+(j<<1<<2)>>2]=3402823466385288598117041.0e14;}else{v=c[d+32>>2]|0;c[v>>2]=c[b+596>>2];g[i+(j<<2)>>2]=m*(e+ +g[k+56>>2]-n-+g[q+56>>2]);g[r+(j<<2)>>2]=-3402823466385288598117041.0e14;g[h+(j<<2)>>2]=3402823466385288598117041.0e14;c[v+(j<<2)>>2]=c[b+596>>2];g[i+(j<<1<<2)>>2]=m*(f+ +g[k+60>>2]-o-+g[q+60>>2]);g[r+(j<<1<<2)>>2]=-3402823466385288598117041.0e14;g[h+(j<<1<<2)>>2]=3402823466385288598117041.0e14;c[v+(j<<1<<2)>>2]=c[b+596>>2];}if(!(a[b+526>>0]|0)){l=j*3|0;j=r;}else{k=c[d+12>>2]|0;u=+g[b+456>>2];if(+g[b+444>>2]<u?+g[b+448>>2]<u:0){z=+g[q+4>>2];y=+g[q+8>>2];x=+g[q+12>>2];D=+g[b+304>>2];C=+g[b+320>>2];B=+g[b+336>>2];m=+g[b+308>>2];o=+g[b+324>>2];t=+g[b+340>>2];w=+g[q+20>>2];e=+g[q+24>>2];f=+g[q+28>>2];n=+g[q+36>>2];s=+g[q+40>>2];u=+g[q+44>>2];g[k+(j*3<<2)>>2]=z*D+y*C+x*B;g[k+((j*3|0)+1<<2)>>2]=D*w+C*e+B*f;g[k+((j*3|0)+2<<2)>>2]=D*n+C*s+B*u;g[k+(j<<2<<2)>>2]=z*m+y*o+x*t;g[k+((j<<2|1)<<2)>>2]=m*w+o*e+t*f;g[k+((j<<2|2)<<2)>>2]=m*n+o*s+t*u;g[l+(j*3<<2)>>2]=-(z*D+y*C+x*B);g[l+((j*3|0)+1<<2)>>2]=-(D*w+C*e+B*f);g[l+((j*3|0)+2<<2)>>2]=-(D*n+C*s+B*u);g[l+(j<<2<<2)>>2]=-(z*m+y*o+x*t);g[l+((j<<2|1)<<2)>>2]=-(m*w+o*e+t*f);g[l+((j<<2|2)<<2)>>2]=-(m*n+o*s+t*u);A=+g[d>>2]*+g[b+436>>2];i=c[d+28>>2]|0;g[i+(j*3<<2)>>2]=A*((z*D+y*C+x*B)*+g[b+460>>2]+(D*w+C*e+B*f)*+g[b+464>>2]+(D*n+C*s+B*u)*+g[b+468>>2]);g[i+(j<<2<<2)>>2]=A*((z*m+y*o+x*t)*+g[b+460>>2]+(m*w+o*e+t*f)*+g[b+464>>2]+(m*n+o*s+t*u)*+g[b+468>>2]);k=c[d+36>>2]|0;g[k+(j*3<<2)>>2]=-3402823466385288598117041.0e14;h=c[d+40>>2]|0;g[h+(j*3<<2)>>2]=3402823466385288598117041.0e14;g[k+(j<<2<<2)>>2]=-3402823466385288598117041.0e14;l=j<<2;j=c[d+24>>2]|0;}else{D=+g[b+436>>2];B=D*+g[b+460>>2]*D;C=D*D*+g[b+464>>2];D=D*D*+g[b+468>>2];g[k+(j*3<<2)>>2]=B;g[k+((j*3|0)+1<<2)>>2]=C;g[k+((j*3|0)+2<<2)>>2]=D;g[l+(j*3<<2)>>2]=-B;g[l+((j*3|0)+1<<2)>>2]=-C;g[l+((j*3|0)+2<<2)>>2]=-D;g[i+(j*3<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+504>>2];if(p&4|0)c[(c[d+32>>2]|0)+(j*3<<2)>>2]=c[b+604>>2];g[r+(j*3<<2)>>2]=0.0;l=j*3|0;k=r;}g[h+(l<<2)>>2]=3402823466385288598117041.0e14;l=j+l|0;j=k;}if(!(a[b+525>>0]|0))return;D=+g[b+436>>2];B=D*+g[b+476>>2]*D;C=D*D*+g[b+480>>2];D=D*D*+g[b+484>>2];p=c[d+12>>2]|0;r=c[d+20>>2]|0;g[p+(l<<2)>>2]=B;q=l+1|0;g[p+(q<<2)>>2]=C;v=l+2|0;g[p+(v<<2)>>2]=D;g[r+(l<<2)>>2]=-B;g[r+(q<<2)>>2]=-C;g[r+(v<<2)>>2]=-D;g[i+(l<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+508>>2];if(c[b+592>>2]&4|0)c[(c[d+32>>2]|0)+(l<<2)>>2]=c[b+604>>2];if(+g[b+452>>2]>0.0){v=+g[b+508>>2]>0.0;e=v?0.0:-3402823466385288598117041.0e14;f=v?3402823466385288598117041.0e14:0.0;}else{e=-3402823466385288598117041.0e14;f=3402823466385288598117041.0e14;}g[j+(l<<2)>>2]=e;g[h+(l<<2)>>2]=f;return}function id(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0;n=l;l=l+16|0;i=c[a+372>>2]|0;a:do switch(c[i+32>>2]|0){case 1:{b=0;d=1;while(1){c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[n+(b<<2)>>2]=1.0;o=i+32|0;g[i+16+(d<<2)>>2]=0.0;d=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=d;c[i+(c[o>>2]<<2)>>2]=c[a+348+(d<<2)>>2];d=c[o>>2]|0;c[o>>2]=d+1;e=+g[n>>2];f=+g[n+4>>2];h=+g[n+8>>2];nh(a,e,f,h,c[i+(d<<2)>>2]|0);if(id(a)|0)break;i=c[a+372>>2]|0;o=(c[i+32>>2]|0)+-1|0;c[i+32>>2]=o;o=c[i+(o<<2)>>2]|0;i=c[a+364>>2]|0;c[a+364>>2]=i+1;c[a+348+(i<<2)>>2]=o;i=c[a+372>>2]|0;g[i+16+(c[i+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[i+(c[i+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[i+32>>2]|0;c[i+32>>2]=o+1;nh(a,-e,-f,-h,c[i+(o<<2)>>2]|0);if(id(a)|0)break;o=c[a+372>>2]|0;i=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=i;i=c[o+(i<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=i;b=b+1|0;if(b>>>0>=3)break a;d=c[a+372>>2]|0;i=d;d=c[d+32>>2]|0;}o=1;l=n;return o|0}case 2:{o=c[i+4>>2]|0;b=c[i>>2]|0;e=+g[o+16>>2]-+g[b+16>>2];f=+g[o+20>>2]-+g[b+20>>2];h=+g[o+24>>2]-+g[b+24>>2];b=0;while(1){c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[n+(b<<2)>>2]=1.0;j=+g[n+8>>2];k=+g[n+4>>2];m=+g[n>>2];if((f*j-h*k)*(f*j-h*k)+(h*m-e*j)*(h*m-e*j)+(e*k-f*m)*(e*k-f*m)>0.0){i=c[a+372>>2]|0;g[i+16+(c[i+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[i+(c[i+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[i+32>>2]|0;c[i+32>>2]=o+1;nh(a,f*j-h*k,h*m-e*j,e*k-f*m,c[i+(o<<2)>>2]|0);if(id(a)|0)break;i=c[a+372>>2]|0;o=(c[i+32>>2]|0)+-1|0;c[i+32>>2]=o;o=c[i+(o<<2)>>2]|0;i=c[a+364>>2]|0;c[a+364>>2]=i+1;c[a+348+(i<<2)>>2]=o;i=c[a+372>>2]|0;g[i+16+(c[i+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[i+(c[i+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[i+32>>2]|0;c[i+32>>2]=o+1;nh(a,-(f*j-h*k),-(h*m-e*j),-(e*k-f*m),c[i+(o<<2)>>2]|0);if(id(a)|0)break;o=c[a+372>>2]|0;i=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=i;i=c[o+(i<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=i;}b=b+1|0;if(b>>>0>=3)break a}o=1;l=n;return o|0}case 3:{o=c[i+4>>2]|0;d=c[i>>2]|0;j=+g[d+16>>2];e=+g[o+16>>2]-j;k=+g[d+20>>2];f=+g[o+20>>2]-k;m=+g[d+24>>2];h=+g[o+24>>2]-m;o=c[i+8>>2]|0;j=+g[o+16>>2]-j;k=+g[o+20>>2]-k;m=+g[o+24>>2]-m;if((f*m-h*k)*(f*m-h*k)+(h*j-e*m)*(h*j-e*m)+(e*k-f*j)*(e*k-f*j)>0.0){g[i+28>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[i+12>>2]=c[a+348+(o<<2)>>2];o=c[i+32>>2]|0;c[i+32>>2]=o+1;nh(a,f*m-h*k,h*j-e*m,e*k-f*j,c[i+(o<<2)>>2]|0);if(id(a)|0){o=1;l=n;return o|0}i=c[a+372>>2]|0;o=(c[i+32>>2]|0)+-1|0;c[i+32>>2]=o;o=c[i+(o<<2)>>2]|0;i=c[a+364>>2]|0;c[a+364>>2]=i+1;c[a+348+(i<<2)>>2]=o;i=c[a+372>>2]|0;g[i+16+(c[i+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[i+(c[i+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[i+32>>2]|0;c[i+32>>2]=o+1;nh(a,-(f*m-h*k),-(h*j-e*m),-(e*k-f*j),c[i+(o<<2)>>2]|0);if(id(a)|0){o=1;l=n;return o|0}else{o=c[a+372>>2]|0;i=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=i;i=c[o+(i<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=i;break a}}break}case 4:{o=c[i>>2]|0;a=c[i+12>>2]|0;m=+g[a+16>>2];r=+g[o+16>>2]-m;p=+g[a+20>>2];e=+g[o+20>>2]-p;h=+g[a+24>>2];j=+g[o+24>>2]-h;o=c[i+4>>2]|0;f=+g[o+16>>2]-m;k=+g[o+20>>2]-p;q=+g[o+24>>2]-h;o=c[i+8>>2]|0;m=+g[o+16>>2]-m;p=+g[o+20>>2]-p;h=+g[o+24>>2]-h;if(!((r*k*h+(e*q*m+j*f*p-r*q*p-e*f*h)-j*k*m!=r*k*h+(e*q*m+j*f*p-r*q*p-e*f*h)-j*k*m)|r*k*h+(e*q*m+j*f*p-r*q*p-e*f*h)-j*k*m==0.0)){o=1;l=n;return o|0}break}default:{}}while(0);o=0;l=n;return o|0}function jd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0,Y=0,Z=0;Z=c[d+36>>2]|0;X=c[e+36>>2]|0;L=+g[Z+8>>2];N=+g[Z+12>>2];M=+g[Z+16>>2];h=c[X+8>>2]|0;R=+g[h+8>>2];S=+g[h+12>>2];T=+g[h+16>>2];d=c[X+12>>2]|0;O=+g[d+8>>2];P=+g[d+12>>2];Q=+g[d+16>>2];e=c[X+16>>2]|0;U=+g[e+8>>2];V=+g[e+12>>2];W=+g[e+16>>2];t=O-L-(R-L);A=P-N-(S-N);v=Q-M-(T-M);u=A*(W-M-(T-M))-v*(V-N-(S-N));B=v*(U-L-(R-L))-t*(W-M-(T-M));w=t*(V-N-(S-N))-A*(U-L-(R-L));do if(w*w+(u*u+B*B)>1.1920928955078125e-07?(D=1.0/+G(+(w*w+(u*u+B*B))),E=(T-M)*w*D+((R-L)*u*D+(S-N)*B*D),E*E<3402823466385288598117041.0e14):0){f=R-L-u*D*E;k=S-N-B*D*E;n=T-M-w*D*E;p=O-L-u*D*E;r=P-N-B*D*E;s=Q-M-w*D*E;if((w*(r*f-k*p)+(u*(k*s-n*r)+B*(n*p-s*f))>0.0?(x=U-L-u*D*E,y=V-N-B*D*E,z=W-M-w*D*E,w*(y*p-r*x)+(u*(r*z-s*y)+B*(s*x-z*p))>0.0):0)?w*(k*x-y*f)+(u*(y*n-z*k)+B*(z*f-n*x))>0.0:0){q=E*E;p=u*D*E;n=w*D*E;m=B*D*E;break}if(t*t+A*A+v*v>1.1920928955078125e-07?(C=-((R-L)*t+(S-N)*A+(T-M)*v)/(t*t+A*A+v*v),C=C<0.0?0.0:C>1.0?1.0:C,q=(T-M+v*C)*(T-M+v*C)+((R-L+t*C)*(R-L+t*C)+(S-N+A*C)*(S-N+A*C)),q<3402823466385288598117041.0e14):0){p=R-L+t*C;n=T-M+v*C;k=S-N+A*C;}else{q=3402823466385288598117041.0e14;p=0.0;n=0.0;k=0.0;}f=(U-L-(O-L))*(U-L-(O-L))+(V-N-(P-N))*(V-N-(P-N))+(W-M-(Q-M))*(W-M-(Q-M));if(f>1.1920928955078125e-07?(H=-((O-L)*(U-L-(O-L))+(P-N)*(V-N-(P-N))+(Q-M)*(W-M-(Q-M)))/f,H=H<0.0?0.0:H>1.0?1.0:H,F=O-L+(U-L-(O-L))*H,I=P-N+(V-N-(P-N))*H,H=Q-M+(W-M-(Q-M))*H,H*H+(F*F+I*I)<q):0){q=H*H+(F*F+I*I);p=F;n=H;k=I;}f=(R-L-(U-L))*(R-L-(U-L))+(S-N-(V-N))*(S-N-(V-N))+(T-M-(W-M))*(T-M-(W-M));if(f>1.1920928955078125e-07?(K=-((U-L)*(R-L-(U-L))+(V-N)*(S-N-(V-N))+(W-M)*(T-M-(W-M)))/f,K=K<0.0?0.0:K>1.0?1.0:K,J=U-L+(R-L-(U-L))*K,m=V-N+(S-N-(V-N))*K,K=W-M+(T-M-(W-M))*K,K*K+(J*J+m*m)<q):0){q=K*K+(J*J+m*m);p=J;n=K;}else m=k;}else{q=3402823466385288598117041.0e14;p=0.0;n=0.0;m=0.0;}while(0);J=L-+g[Z+24>>2];K=N-+g[Z+28>>2];u=M-+g[Z+32>>2];u=+g[b+12>>2]+ +G(+(J*J+K*K+u*u))*2.0;if(!(q<u*u))return;r=L+p;f=N+m;k=M+n;t=+G(+(((R-r)*(P-f)-(S-f)*(O-r))*((R-r)*(P-f)-(S-f)*(O-r))+(((S-f)*(Q-k)-(T-k)*(P-f))*((S-f)*(Q-k)-(T-k)*(P-f))+((T-k)*(O-r)-(R-r)*(Q-k))*((T-k)*(O-r)-(R-r)*(Q-k)))));s=+G(+(((O-r)*(V-f)-(P-f)*(U-r))*((O-r)*(V-f)-(P-f)*(U-r))+(((P-f)*(W-k)-(Q-k)*(V-f))*((P-f)*(W-k)-(Q-k)*(V-f))+((Q-k)*(U-r)-(O-r)*(W-k))*((Q-k)*(U-r)-(O-r)*(W-k)))));r=+G(+(((S-f)*(U-r)-(R-r)*(V-f))*((S-f)*(U-r)-(R-r)*(V-f))+(((T-k)*(V-f)-(S-f)*(W-k))*((T-k)*(V-f)-(S-f)*(W-k))+((R-r)*(W-k)-(T-k)*(U-r))*((R-r)*(W-k)-(T-k)*(U-r)))));k=+g[Z+88>>2];V=+g[h+88>>2];W=+g[d+88>>2];f=+g[e+88>>2];f=!(V<=0.0)&!(W<=0.0)&!(f<=0.0)?V*s*(1.0/(t+s+r))+W*r*(1.0/(t+s+r))+t*(1.0/(t+s+r))*f:0.0;if(!(k+f>0.0))return;W=1.0/-+G(+q);q=p*W;p=m*W;n=n*W;o=c[b+4>>2]|0;d=c[b+8>>2]|0;l=c[(+g[o+316>>2]>+g[d+316>>2]?o+316|0:d+316|0)>>2]|0;m=k/(k+f)*+g[o+332>>2];f=f/(k+f)*+g[d+332>>2];d=c[o+832>>2]|0;if((d|0)==(c[o+836>>2]|0)?(Y=d|0?d<<1:1,(d|0)<(Y|0)):0){if(!Y)j=0;else{c[6436]=(c[6436]|0)+1;d=ic((Y*56|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16;}j=d;d=c[o+832>>2]|0;}if((d|0)>0){e=0;do{h=j+(e*56|0)|0;b=(c[o+840>>2]|0)+(e*56|0)|0;i=h+56|0;do{c[h>>2]=c[b>>2];h=h+4|0;b=b+4|0;}while((h|0)<(i|0));e=e+1|0;}while((e|0)!=(d|0))}d=c[o+840>>2]|0;if(d|0){if(a[o+844>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[o+840>>2]=0;}a[o+844>>0]=1;c[o+840>>2]=j;c[o+836>>2]=Y;d=c[o+832>>2]|0;}Y=c[o+840>>2]|0;c[Y+(d*56|0)>>2]=Z;c[Y+(d*56|0)+4>>2]=X;g[Y+(d*56|0)+8>>2]=s*(1.0/(t+s+r));g[Y+(d*56|0)+12>>2]=r*(1.0/(t+s+r));g[Y+(d*56|0)+16>>2]=t*(1.0/(t+s+r));g[Y+(d*56|0)+20>>2]=0.0;g[Y+(d*56|0)+24>>2]=q;g[Y+(d*56|0)+28>>2]=p;g[Y+(d*56|0)+32>>2]=n;g[Y+(d*56|0)+36>>2]=0.0;g[Y+(d*56|0)+40>>2]=u;c[Y+(d*56|0)+44>>2]=l;g[Y+(d*56|0)+48>>2]=m;g[Y+(d*56|0)+52>>2]=f;c[o+832>>2]=(c[o+832>>2]|0)+1;return}function kd(d,e){d=d|0;e=e|0;var f=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;q=l;l=l+64|0;g[d+20>>2]=+h[e+32>>3];g[d+24>>2]=+h[e+40>>3];g[d+28>>2]=+h[e+48>>3];g[d+32>>2]=+h[e+56>>3];g[d+4>>2]=+h[e>>3];g[d+8>>2]=+h[e+8>>3];g[d+12>>2]=+h[e+16>>3];g[d+16>>2]=+h[e+24>>3];g[d+36>>2]=+h[e+64>>3];g[d+40>>2]=+h[e+72>>3];g[d+44>>2]=+h[e+80>>3];g[d+48>>2]=+h[e+88>>3];c[d+56>>2]=c[e+96>>2];a[d+60>>0]=(c[e+100>>2]|0)!=0&1;p=c[e+104>>2]|0;k=q;n=k+64|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(n|0));o=c[d+88>>2]|0;if((o|0)<(p|0)){if((c[d+92>>2]|0)<(p|0)){if(!p){f=0;j=o;}else{c[6436]=(c[6436]|0)+1;f=ic(p<<6|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}j=c[d+88>>2]|0;}if((j|0)>0){i=0;do{k=f+(i<<6)|0;m=(c[d+96>>2]|0)+(i<<6)|0;n=k+64|0;do{c[k>>2]=c[m>>2];k=k+4|0;m=m+4|0;}while((k|0)<(n|0));i=i+1|0;}while((i|0)!=(j|0))}i=c[d+96>>2]|0;if(i|0){if(a[d+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[d+96>>2]=0;}a[d+100>>0]=1;c[d+96>>2]=f;c[d+92>>2]=p;i=d+96|0;}else i=d+96|0;f=o;do{k=(c[i>>2]|0)+(f<<6)|0;m=q;n=k+64|0;do{c[k>>2]=c[m>>2];k=k+4|0;m=m+4|0;}while((k|0)<(n|0));f=f+1|0;}while((f|0)!=(p|0))}c[d+88>>2]=p;if((p|0)>0){j=c[d+96>>2]|0;f=c[e+112>>2]|0;i=0;while(1){g[j+(i<<6)+16>>2]=+h[f+32>>3];g[j+(i<<6)+20>>2]=+h[f+40>>3];g[j+(i<<6)+24>>2]=+h[f+48>>3];g[j+(i<<6)+28>>2]=+h[f+56>>3];g[j+(i<<6)>>2]=+h[f>>3];g[j+(i<<6)+4>>2]=+h[f+8>>3];g[j+(i<<6)+8>>2]=+h[f+16>>3];g[j+(i<<6)+12>>2]=+h[f+24>>3];c[j+(i<<6)+32>>2]=c[f+64>>2];c[j+(i<<6)+36>>2]=c[f+68>>2];c[j+(i<<6)+40>>2]=c[f+72>>2];i=i+1|0;if((i|0)==(p|0))break;else f=f+80|0;}}m=c[e+108>>2]|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;k=c[d+128>>2]|0;if((k|0)<(m|0)){if((c[d+132>>2]|0)<(m|0)){if(!m){f=0;j=k;}else{c[6436]=(c[6436]|0)+1;f=ic((m<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}j=c[d+128>>2]|0;}if((j|0)>0){i=0;do{p=f+(i<<4)|0;o=(c[d+136>>2]|0)+(i<<4)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];i=i+1|0;}while((i|0)!=(j|0))}i=c[d+136>>2]|0;if(i|0){if(a[d+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[d+136>>2]=0;}a[d+140>>0]=1;c[d+136>>2]=f;c[d+132>>2]=m;i=d+136|0;}else i=d+136|0;f=k;do{p=(c[i>>2]|0)+(f<<4)|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];f=f+1|0;}while((f|0)!=(m|0))}c[d+128>>2]=m;if((m|0)>0){j=c[d+136>>2]|0;f=0;i=c[e+116>>2]|0;while(1){c[j+(f<<4)+12>>2]=c[i+12>>2];b[j+(f<<4)+6>>1]=b[i+6>>1]|0;b[j+(f<<4)+8>>1]=b[i+8>>1]|0;b[j+(f<<4)+10>>1]=b[i+10>>1]|0;b[j+(f<<4)>>1]=b[i>>1]|0;b[j+(f<<4)+2>>1]=b[i+2>>1]|0;b[j+(f<<4)+4>>1]=b[i+4>>1]|0;f=f+1|0;if((f|0)==(m|0))break;else i=i+16|0;}}c[d+144>>2]=c[e+120>>2];m=c[e+124>>2]|0;k=c[d+152>>2]|0;if((k|0)<(m|0)){if((c[d+156>>2]|0)<(m|0)){if(!m){f=0;j=k;}else{c[6436]=(c[6436]|0)+1;f=ic(m<<5|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}j=c[d+152>>2]|0;}if((j|0)>0){i=0;do{p=f+(i<<5)|0;o=(c[d+160>>2]|0)+(i<<5)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];c[p+16>>2]=c[o+16>>2];c[p+20>>2]=c[o+20>>2];c[p+24>>2]=c[o+24>>2];c[p+28>>2]=c[o+28>>2];i=i+1|0;}while((i|0)!=(j|0))}i=c[d+160>>2]|0;if(i|0){if(a[d+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[d+160>>2]=0;}a[d+164>>0]=1;c[d+160>>2]=f;c[d+156>>2]=m;i=d+160|0;}else i=d+160|0;f=k;do{p=(c[i>>2]|0)+(f<<5)|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];c[p+16>>2]=c[q+16>>2];c[p+20>>2]=c[q+20>>2];c[p+24>>2]=c[q+24>>2];c[p+28>>2]=c[q+28>>2];f=f+1|0;}while((f|0)!=(m|0))}c[d+152>>2]=m;if((m|0)<=0){l=q;return}j=c[d+160>>2]|0;i=0;f=c[e+128>>2]|0;while(1){b[j+(i<<5)+6>>1]=b[f+14>>1]|0;b[j+(i<<5)+8>>1]=b[f+16>>1]|0;b[j+(i<<5)+10>>1]=b[f+18>>1]|0;b[j+(i<<5)>>1]=b[f+8>>1]|0;b[j+(i<<5)+2>>1]=b[f+10>>1]|0;b[j+(i<<5)+4>>1]=b[f+12>>1]|0;c[j+(i<<5)+12>>2]=c[f>>2];c[j+(i<<5)+16>>2]=c[f+4>>2];i=i+1|0;if((i|0)==(m|0))break;else f=f+20|0;}l=q;return}function ld(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[b>>2]=3308;d=c[b+192>>2]|0;if(d|0)lb[c[(c[d>>2]|0)+4>>2]&511](d);a:do if((c[b+1112>>2]|0)>0)do{h=c[c[b+1120>>2]>>2]|0;d=c[h+348>>2]|0;if(d|0){hg(b+1048|0,d)|0;e=c[b+1052>>2]|0;if(e|0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[b+1052>>2]=d;c[b+1060>>2]=(c[b+1060>>2]|0)+-1;}d=c[h+52>>2]|0;if(d|0){if(a[h+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[h+52>>2]=0;}a[h+56>>0]=1;c[h+52>>2]=0;c[h+44>>2]=0;c[h+48>>2]=0;d=c[h+32>>2]|0;if(d|0){if(a[h+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[h+32>>2]=0;}a[h+36>>0]=1;c[h+32>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;d=c[h+12>>2]|0;if(d|0){if(a[h+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[h+12>>2]=0;}a[h+16>>0]=1;c[h+12>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);d=c[b+1112>>2]|0;if((d|0)<=0)break a;g=c[b+1120>>2]|0;e=0;do{f=g+(e<<2)|0;if((c[f>>2]|0)==(h|0)){i=28;break}e=e+1|0;}while((e|0)<(d|0));if((i|0)==28){i=0;if((e|0)<(d|0)){c[f>>2]=c[g+(d+-1<<2)>>2];c[(c[b+1120>>2]|0)+(d+-1<<2)>>2]=h;c[b+1112>>2]=d+-1;d=d+-1|0;}}}while((d|0)>0);while(0);d=c[b+872>>2]|0;if((d|0)>0){f=0;do{e=c[(c[b+880>>2]|0)+(f<<2)>>2]|0;if(e){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+872>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}d=c[b+852>>2]|0;if((d|0)>0){f=0;do{e=c[(c[b+860>>2]|0)+(f<<2)>>2]|0;if(e){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);d=c[b+852>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}d=c[b+1244>>2]|0;if(d|0){if(a[b+1248>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+1244>>2]=0;}a[b+1248>>0]=1;c[b+1244>>2]=0;c[b+1236>>2]=0;c[b+1240>>2]=0;d=c[b+1140>>2]|0;if(d|0){if(a[b+1144>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+1140>>2]=0;}a[b+1144>>0]=1;c[b+1140>>2]=0;c[b+1132>>2]=0;c[b+1136>>2]=0;d=c[b+1120>>2]|0;if(d|0){if(a[b+1124>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+1120>>2]=0;}a[b+1124>>0]=1;c[b+1120>>2]=0;c[b+1112>>2]=0;c[b+1116>>2]=0;Rh(b+1048|0);Rh(b+988|0);Rh(b+928|0);d=c[b+880>>2]|0;if(d|0){if(a[b+884>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+880>>2]=0;}a[b+884>>0]=1;c[b+880>>2]=0;c[b+872>>2]=0;c[b+876>>2]=0;d=c[b+860>>2]|0;if(d|0){if(a[b+864>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+860>>2]=0;}a[b+864>>0]=1;c[b+860>>2]=0;c[b+852>>2]=0;c[b+856>>2]=0;d=c[b+840>>2]|0;if(d|0){if(a[b+844>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+840>>2]=0;}a[b+844>>0]=1;c[b+840>>2]=0;c[b+832>>2]=0;c[b+836>>2]=0;d=c[b+820>>2]|0;if(d|0){if(a[b+824>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+820>>2]=0;}a[b+824>>0]=1;c[b+820>>2]=0;c[b+812>>2]=0;c[b+816>>2]=0;d=c[b+800>>2]|0;if(d|0){if(a[b+804>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+800>>2]=0;}a[b+804>>0]=1;c[b+800>>2]=0;c[b+792>>2]=0;c[b+796>>2]=0;d=c[b+780>>2]|0;if(d|0){if(a[b+784>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+780>>2]=0;}a[b+784>>0]=1;c[b+780>>2]=0;c[b+772>>2]=0;c[b+776>>2]=0;d=c[b+760>>2]|0;if(d|0){if(a[b+764>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+760>>2]=0;}a[b+764>>0]=1;c[b+760>>2]=0;c[b+752>>2]=0;c[b+756>>2]=0;d=c[b+740>>2]|0;if(d|0){if(a[b+744>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+740>>2]=0;}a[b+744>>0]=1;c[b+740>>2]=0;c[b+732>>2]=0;c[b+736>>2]=0;d=c[b+720>>2]|0;if(d|0){if(a[b+724>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+720>>2]=0;}a[b+724>>0]=1;c[b+720>>2]=0;c[b+712>>2]=0;c[b+716>>2]=0;d=c[b+700>>2]|0;if(d|0){if(a[b+704>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+700>>2]=0;}a[b+704>>0]=1;c[b+700>>2]=0;c[b+692>>2]=0;c[b+696>>2]=0;d=c[b+512>>2]|0;if(d|0){if(a[b+516>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+512>>2]=0;}a[b+516>>0]=1;c[b+512>>2]=0;c[b+504>>2]=0;c[b+508>>2]=0;d=c[b+492>>2]|0;if(d|0){if(a[b+496>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+492>>2]=0;}a[b+496>>0]=1;c[b+492>>2]=0;c[b+484>>2]=0;c[b+488>>2]=0;ws(b+288|0);d=c[b+276>>2]|0;if(!d){a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;i=b+272|0;c[i>>2]=0;c[b>>2]=5132;return}if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+276>>2]=0;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;i=b+272|0;c[i>>2]=0;c[b>>2]=5132;return}function md(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;o=l;l=l+64|0;c[d+20>>2]=c[e+16>>2];c[d+24>>2]=c[e+20>>2];c[d+28>>2]=c[e+24>>2];c[d+32>>2]=c[e+28>>2];c[d+4>>2]=c[e>>2];c[d+8>>2]=c[e+4>>2];c[d+12>>2]=c[e+8>>2];c[d+16>>2]=c[e+12>>2];c[d+36>>2]=c[e+32>>2];c[d+40>>2]=c[e+36>>2];c[d+44>>2]=c[e+40>>2];c[d+48>>2]=c[e+44>>2];c[d+56>>2]=c[e+48>>2];a[d+60>>0]=(c[e+52>>2]|0)!=0&1;n=c[e+56>>2]|0;i=o;k=i+64|0;do{c[i>>2]=0;i=i+4|0;}while((i|0)<(k|0));m=c[d+88>>2]|0;if((m|0)<(n|0)){if((c[d+92>>2]|0)<(n|0)){if(!n){f=0;h=m;}else{c[6436]=(c[6436]|0)+1;f=ic(n<<6|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+88>>2]|0;}if((h|0)>0){g=0;do{i=f+(g<<6)|0;j=(c[d+96>>2]|0)+(g<<6)|0;k=i+64|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0;}while((i|0)<(k|0));g=g+1|0;}while((g|0)!=(h|0))}g=c[d+96>>2]|0;if(g|0){if(a[d+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[d+96>>2]=0;}a[d+100>>0]=1;c[d+96>>2]=f;c[d+92>>2]=n;g=d+96|0;}else g=d+96|0;f=m;do{i=(c[g>>2]|0)+(f<<6)|0;j=o;k=i+64|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0;}while((i|0)<(k|0));f=f+1|0;}while((f|0)!=(n|0))}c[d+88>>2]=n;if((n|0)>0){h=c[d+96>>2]|0;f=c[e+64>>2]|0;g=0;while(1){c[h+(g<<6)+16>>2]=c[f+16>>2];c[h+(g<<6)+20>>2]=c[f+20>>2];c[h+(g<<6)+24>>2]=c[f+24>>2];c[h+(g<<6)+28>>2]=c[f+28>>2];c[h+(g<<6)>>2]=c[f>>2];c[h+(g<<6)+4>>2]=c[f+4>>2];c[h+(g<<6)+8>>2]=c[f+8>>2];c[h+(g<<6)+12>>2]=c[f+12>>2];c[h+(g<<6)+32>>2]=c[f+32>>2];c[h+(g<<6)+36>>2]=c[f+36>>2];c[h+(g<<6)+40>>2]=c[f+40>>2];g=g+1|0;if((g|0)==(n|0))break;else f=f+48|0;}}j=c[e+60>>2]|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;i=c[d+128>>2]|0;if((i|0)<(j|0)){if((c[d+132>>2]|0)<(j|0)){if(!j){f=0;h=i;}else{c[6436]=(c[6436]|0)+1;f=ic((j<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+128>>2]|0;}if((h|0)>0){g=0;do{n=f+(g<<4)|0;m=(c[d+136>>2]|0)+(g<<4)|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];g=g+1|0;}while((g|0)!=(h|0))}g=c[d+136>>2]|0;if(g|0){if(a[d+140>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[d+136>>2]=0;}a[d+140>>0]=1;c[d+136>>2]=f;c[d+132>>2]=j;g=d+136|0;}else g=d+136|0;f=i;do{n=(c[g>>2]|0)+(f<<4)|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];f=f+1|0;}while((f|0)!=(j|0))}c[d+128>>2]=j;if((j|0)>0){h=c[d+136>>2]|0;f=0;g=c[e+68>>2]|0;while(1){c[h+(f<<4)+12>>2]=c[g+12>>2];b[h+(f<<4)+6>>1]=b[g+6>>1]|0;b[h+(f<<4)+8>>1]=b[g+8>>1]|0;b[h+(f<<4)+10>>1]=b[g+10>>1]|0;b[h+(f<<4)>>1]=b[g>>1]|0;b[h+(f<<4)+2>>1]=b[g+2>>1]|0;b[h+(f<<4)+4>>1]=b[g+4>>1]|0;f=f+1|0;if((f|0)==(j|0))break;else g=g+16|0;}}c[d+144>>2]=c[e+76>>2];j=c[e+80>>2]|0;i=c[d+152>>2]|0;if((i|0)<(j|0)){if((c[d+156>>2]|0)<(j|0)){if(!j){f=0;h=i;}else{c[6436]=(c[6436]|0)+1;f=ic(j<<5|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+152>>2]|0;}if((h|0)>0){g=0;do{n=f+(g<<5)|0;m=(c[d+160>>2]|0)+(g<<5)|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];c[n+16>>2]=c[m+16>>2];c[n+20>>2]=c[m+20>>2];c[n+24>>2]=c[m+24>>2];c[n+28>>2]=c[m+28>>2];g=g+1|0;}while((g|0)!=(h|0))}g=c[d+160>>2]|0;if(g|0){if(a[d+164>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[d+160>>2]=0;}a[d+164>>0]=1;c[d+160>>2]=f;c[d+156>>2]=j;g=d+160|0;}else g=d+160|0;f=i;do{n=(c[g>>2]|0)+(f<<5)|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];c[n+16>>2]=c[o+16>>2];c[n+20>>2]=c[o+20>>2];c[n+24>>2]=c[o+24>>2];c[n+28>>2]=c[o+28>>2];f=f+1|0;}while((f|0)!=(j|0))}c[d+152>>2]=j;if((j|0)<=0){l=o;return}h=c[d+160>>2]|0;g=0;f=c[e+72>>2]|0;while(1){b[h+(g<<5)+6>>1]=b[f+14>>1]|0;b[h+(g<<5)+8>>1]=b[f+16>>1]|0;b[h+(g<<5)+10>>1]=b[f+18>>1]|0;b[h+(g<<5)>>1]=b[f+8>>1]|0;b[h+(g<<5)+2>>1]=b[f+10>>1]|0;b[h+(g<<5)+4>>1]=b[f+12>>1]|0;c[h+(g<<5)+12>>2]=c[f>>2];c[h+(g<<5)+16>>2]=c[f+4>>2];g=g+1|0;if((g|0)==(j|0))break;else f=f+20|0;}l=o;return}function nd(b,d,e,f,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0,I=0,J=0.0;I=l;l=l+128|0;c[I+16>>2]=i;c[I+16+4>>2]=j;c[I+16+8>>2]=k;c[I>>2]=e;c[I+4>>2]=f;c[I+8>>2]=h;if(!(+g[d+52>>2]<+g[b+12>>2])){m=0;l=I;return m|0}w=+g[d+36>>2];y=+g[d+40>>2];x=+g[d+44>>2];k=c[d+48>>2]|0;z=1.0/+G(+(w*w+y*y+x*x));h=di(I)|0;A=+g[d+4>>2]-+g[h+48>>2];B=+g[d+8>>2]-+g[h+52>>2];C=+g[d+12>>2]-+g[h+56>>2];h=di(I+16|0)|0;D=+g[d+20>>2]-+g[h+48>>2];E=+g[d+24>>2]-+g[h+52>>2];F=+g[d+28>>2]-+g[h+56>>2];if(!f)if(!e){p=0.0;s=0.0;q=0.0;n=0.0;o=0.0;r=0.0;}else{r=+g[e+336>>2];o=+g[e+340>>2];v=+g[e+332>>2];p=+g[e+316>>2];s=+g[e+320>>2];q=+g[e+324>>2];n=C*r-B*o;o=A*o-C*v;r=B*v-A*r;}else{r=+g[f+332>>2];o=+g[f+336>>2];v=+g[f+328>>2];p=+g[f+312>>2];s=+g[f+316>>2];q=+g[f+320>>2];n=C*r-B*o;o=A*o-C*v;r=B*v-A*r;}v=p+n;u=s+o;t=q+r;if(!j)if(!i){r=0.0;s=0.0;n=0.0;o=0.0;p=0.0;q=0.0;}else{q=+g[i+336>>2];p=+g[i+340>>2];J=+g[i+332>>2];r=+g[i+316>>2];s=+g[i+320>>2];n=+g[i+324>>2];o=F*q-E*p;p=D*p-F*J;q=E*J-D*q;}else{q=+g[j+332>>2];p=+g[j+336>>2];J=+g[j+328>>2];r=+g[j+312>>2];s=+g[j+316>>2];n=+g[j+320>>2];o=F*q-E*p;p=D*p-F*J;q=E*J-D*q;}r=v-(r+o);u=u-(s+p);t=t-(n+q);v=x*z*t+(y*z*u+w*z*r);J=+g[d+52>>2]-+g[b+12>>2];c[m+4>>2]=c[I>>2];c[m+4+4>>2]=c[I+4>>2];c[m+4+8>>2]=c[I+8>>2];c[m+16>>2]=c[I+16>>2];c[m+16+4>>2]=c[I+16+4>>2];c[m+16+8>>2]=c[I+16+8>>2];d=di(I)|0;s=A*+g[d+4>>2]+B*+g[d+20>>2]+C*+g[d+36>>2];q=A*+g[d+8>>2]+B*+g[d+24>>2]+C*+g[d+40>>2];g[m+28>>2]=A*+g[d>>2]+B*+g[d+16>>2]+C*+g[d+32>>2];g[m+32>>2]=s;g[m+36>>2]=q;g[m+40>>2]=0.0;d=di(I+16|0)|0;q=D*+g[d+4>>2]+E*+g[d+20>>2]+F*+g[d+36>>2];s=D*+g[d+8>>2]+E*+g[d+24>>2]+F*+g[d+40>>2];g[m+44>>2]=D*+g[d>>2]+E*+g[d+16>>2]+F*+g[d+32>>2];g[m+48>>2]=q;g[m+52>>2]=s;g[m+56>>2]=0.0;g[m+164>>2]=A;g[m+168>>2]=B;g[m+172>>2]=C;g[m+176>>2]=0.0;g[m+180>>2]=D;g[m+184>>2]=E;g[m+188>>2]=F;g[m+192>>2]=0.0;g[m+60>>2]=1.0;g[m+64>>2]=1.0;c[m+156>>2]=0;c[m+160>>2]=0;g[m+68>>2]=1.0;g[m+72>>2]=w*z*J;g[m+76>>2]=y*z*J;g[m+80>>2]=x*z*J;g[m+84>>2]=0.0;g[m+196>>2]=w*z;g[m+200>>2]=y*z;g[m+204>>2]=x*z;c[m+208>>2]=k;a[m+152>>0]=0;J=+g[b+16>>2];g[m+212>>2]=(t-x*z*v)*(t-x*z*v)+((r-w*z*v)*(r-w*z*v)+(u-y*z*v)*(u-y*z*v))<J*v*v*J?1.0:J;k=c[I+4>>2]|0;if(!k){k=c[I>>2]|0;if(!k)o=0.0;else{k=k+128|0;H=14;}}else{k=k+344|0;H=14;}if((H|0)==14)o=+g[k>>2];if((a[22624]|0)==0?iy(22624)|0:0){k=23024;h=k+48|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(h|0))}k=c[I+4>>2]|0;if(!k){e=c[I>>2]|0;e=(e|0)==0?23024:e+180|0;}else e=k+264|0;k=c[I+16+4>>2]|0;if(!k){k=c[I+16>>2]|0;if(!k)n=0.0;else{k=k+128|0;H=25;}}else{k=k+344|0;H=25;}if((H|0)==25)n=+g[k>>2];if((a[22624]|0)==0?iy(22624)|0:0){k=23024;h=k+48|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(h|0))}k=c[I+16+4>>2]|0;if(!k){k=c[I+16>>2]|0;k=(k|0)==0?23024:k+180|0;}else k=k+264|0;Eh(I+80|0,o,e,+g[m+164>>2],+g[m+168>>2],+g[m+172>>2]);Eh(I+32|0,n,k,+g[m+180>>2],+g[m+184>>2],+g[m+188>>2]);C=+g[I+80>>2]+ +g[I+32>>2];E=+g[I+80+4>>2]+ +g[I+32+4>>2];y=+g[I+80+8>>2]+ +g[I+32+8>>2];F=+g[I+80+16>>2]+ +g[I+32+16>>2];D=+g[I+80+20>>2]+ +g[I+32+20>>2];z=+g[I+80+24>>2]+ +g[I+32+24>>2];A=+g[I+80+32>>2]+ +g[I+32+32>>2];B=+g[I+80+36>>2]+ +g[I+32+36>>2];x=+g[I+80+40>>2]+ +g[I+32+40>>2];J=1.0/(y*(F*B-D*A)+(C*(D*x-z*B)+E*(z*A-F*x)));g[m+104>>2]=(D*x-z*B)*J;g[m+108>>2]=(y*B-E*x)*J;g[m+112>>2]=(E*z-y*D)*J;g[m+116>>2]=0.0;g[m+120>>2]=(z*A-F*x)*J;g[m+124>>2]=(C*x-y*A)*J;g[m+128>>2]=(y*F-C*z)*J;g[m+132>>2]=0.0;g[m+136>>2]=(F*B-D*A)*J;g[m+140>>2]=(E*A-C*B)*J;g[m+144>>2]=(C*D-E*F)*J;g[m+148>>2]=0.0;m=1;l=I;return m|0}function od(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var k=0.0,m=0,n=0.0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0;u=l;l=l+288|0;q=c[b+4>>2]|0;a[q+312>>0]=0;c[q>>2]=0;a[q+356>>0]=1;c[q+292>>2]=1566444395;c[q+296>>2]=1566444395;c[q+300>>2]=1566444395;g[q+304>>2]=0.0;c[q+336>>2]=0;c[q+336+4>>2]=0;c[q+336+8>>2]=0;c[q+336+12>>2]=0;a[q+336+16>>0]=0;a[q+332>>0]=a[q+332>>0]&-16;r=+g[e+48>>2]-+g[d+48>>2]-(+g[h+48>>2]-+g[f+48>>2]);s=+g[e+52>>2]-+g[d+52>>2]-(+g[h+52>>2]-+g[f+52>>2]);t=+g[e+56>>2]-+g[d+56>>2]-(+g[h+56>>2]-+g[f+56>>2]);c[u+216>>2]=9284;g[u+216+36>>2]=999999984306749440.0;a[u+216+40>>0]=0;q=c[b+8>>2]|0;p=c[b+12>>2]|0;o=c[b+4>>2]|0;c[u+136>>2]=9332;c[u+136+4>>2]=0;c[u+136+8>>2]=1065353216;c[u+136+12>>2]=0;g[u+136+16>>2]=0.0;c[u+136+20>>2]=0;c[u+136+24>>2]=o;c[u+136+28>>2]=q;c[u+136+32>>2]=p;c[u+136+36>>2]=c[q+4>>2];c[u+136+40>>2]=c[p+4>>2];g[u+136+44>>2]=+Db[c[(c[q>>2]|0)+48>>2]&15](q);g[u+136+48>>2]=+Db[c[(c[p>>2]|0)+48>>2]&15](p);a[u+136+52>>0]=0;c[u+136+60>>2]=-1;c[u+136+72>>2]=1;c[u+136+76>>2]=1;g[u+128>>2]=999999984306749440.0;c[u>>2]=c[d>>2];c[u+4>>2]=c[d+4>>2];c[u+8>>2]=c[d+8>>2];c[u+12>>2]=c[d+12>>2];c[u+16>>2]=c[d+16>>2];c[u+16+4>>2]=c[d+16+4>>2];c[u+16+8>>2]=c[d+16+8>>2];c[u+16+12>>2]=c[d+16+12>>2];c[u+32>>2]=c[d+32>>2];c[u+32+4>>2]=c[d+32+4>>2];c[u+32+8>>2]=c[d+32+8>>2];c[u+32+12>>2]=c[d+32+12>>2];c[u+48>>2]=c[d+48>>2];c[u+48+4>>2]=c[d+48+4>>2];c[u+48+8>>2]=c[d+48+8>>2];c[u+48+12>>2]=c[d+48+12>>2];c[u+64>>2]=c[f>>2];c[u+64+4>>2]=c[f+4>>2];c[u+64+8>>2]=c[f+8>>2];c[u+64+12>>2]=c[f+12>>2];c[u+80>>2]=c[f+16>>2];c[u+80+4>>2]=c[f+16+4>>2];c[u+80+8>>2]=c[f+16+8>>2];c[u+80+12>>2]=c[f+16+12>>2];c[u+96>>2]=c[f+32>>2];c[u+96+4>>2]=c[f+32+4>>2];c[u+96+8>>2]=c[f+32+8>>2];c[u+96+12>>2]=c[f+32+12>>2];c[u+112>>2]=c[f+48>>2];c[u+112+4>>2]=c[f+48+4>>2];c[u+112+8>>2]=c[f+48+8>>2];c[u+112+12>>2]=c[f+48+12>>2];Fc(u+136|0,u,u+216|0,0,0);p=(a[u+216+40>>0]|0)==0;q=u+216+20|0;c[u+264>>2]=c[q>>2];c[u+264+4>>2]=c[q+4>>2];c[u+264+8>>2]=c[q+8>>2];c[u+264+12>>2]=c[q+12>>2];if(p){i=0;l=u;return i|0}n=+g[u+216+36>>2];k=+g[u+216+16>>2];b=c[u+216+12>>2]|0;m=c[u+216+8>>2]|0;o=c[u+216+4>>2]|0;do if(n>1.0000000474974513e-03){p=0;k=0.0;while(1){if((p|0)>31){b=0;p=13;break}w=r*(c[j>>2]=o,+g[j>>2]);w=s*(c[j>>2]=m,+g[j>>2])+w;v=k;k=k-n/(t*(c[j>>2]=b,+g[j>>2])+w);if(!(!(k<=v)&(!(k<0.0)&!(k>1.0)))){b=0;p=13;break}kb[c[c[i>>2]>>2]&31](i,k);w=1.0-k;g[u+48>>2]=w*+g[d+48>>2]+k*+g[e+48>>2];g[u+52>>2]=w*+g[d+52>>2]+k*+g[e+52>>2];g[u+56>>2]=w*+g[d+56>>2]+k*+g[e+56>>2];g[u+112>>2]=w*+g[f+48>>2]+k*+g[h+48>>2];g[u+116>>2]=w*+g[f+52>>2]+k*+g[h+52>>2];g[u+120>>2]=w*+g[f+56>>2]+k*+g[h+56>>2];Fc(u+136|0,u,u+216|0,0,0);if(!(a[u+216+40>>0]|0)){b=0;p=13;break}n=+g[u+216+36>>2];if(n<0.0){p=8;break}c[u+264>>2]=c[q>>2];c[u+264+4>>2]=c[q+4>>2];c[u+264+8>>2]=c[q+8>>2];c[u+264+12>>2]=c[q+12>>2];b=c[u+216+12>>2]|0;m=c[u+216+8>>2]|0;o=c[u+216+4>>2]|0;if(!(n>1.0000000474974513e-03)){p=10;break}else p=p+1|0;}if((p|0)==8){g[i+164>>2]=k;e=c[u+216+8>>2]|0;f=c[u+216+12>>2]|0;h=c[u+216+16>>2]|0;c[i+132>>2]=c[u+216+4>>2];c[i+136>>2]=e;c[i+140>>2]=f;c[i+144>>2]=h;c[i+148>>2]=c[q>>2];c[i+148+4>>2]=c[q+4>>2];c[i+148+8>>2]=c[q+8>>2];c[i+148+12>>2]=c[q+12>>2];i=1;l=u;return i|0}else if((p|0)==10){n=k;k=+g[u+216+16>>2];break}else if((p|0)==13){l=u;return b|0}}else n=0.0;while(0);w=r*(c[j>>2]=o,+g[j>>2]);w=s*(c[j>>2]=m,+g[j>>2])+w;if(t*(c[j>>2]=b,+g[j>>2])+w>=-+g[i+172>>2]){i=0;l=u;return i|0}g[i+164>>2]=n;c[i+132>>2]=o;c[i+136>>2]=m;c[i+140>>2]=b;g[i+144>>2]=k;c[i+148>>2]=c[u+264>>2];c[i+148+4>>2]=c[u+264+4>>2];c[i+148+8>>2]=c[u+264+8>>2];c[i+148+12>>2]=c[u+264+12>>2];i=1;l=u;return i|0}function pd(a,d,f,h,i){a=a|0;d=d|0;f=f|0;h=h|0;i=i|0;var j=0,k=0.0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0,w=0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;P=l;l=l+16|0;c[d+16>>2]=c[f>>2];c[d+16+4>>2]=c[f+4>>2];c[d+16+8>>2]=c[f+8>>2];c[d+16+12>>2]=c[f+12>>2];c[d+32>>2]=c[h>>2];c[d+32+4>>2]=c[h+4>>2];c[d+32+8>>2]=c[h+8>>2];c[d+32+12>>2]=c[h+12>>2];H=c[a+60>>2]|0;I=c[d+12>>2]&65535;q=+g[a+8>>2];s=+g[a+12>>2];x=+g[a+16>>2];r=+g[a+40>>2];k=(+g[f>>2]-q)*r;u=+g[a+44>>2];m=(+g[f+4>>2]-s)*u;y=+g[a+48>>2];o=(+g[f+8>>2]-x)*y;if(!(k<=0.0)){p=b[a+6>>1]|0;p=(!(k>=+(p&65535))?~~k&65535:p)&b[a+4>>1];}else p=0;b[P+6>>1]=p;if(!(m<=0.0)){j=b[a+6>>1]|0;j=(!(m>=+(j&65535))?~~m&65535:j)&b[a+4>>1];}else j=0;b[P+6+2>>1]=j;if(!(o<=0.0)){j=b[a+6>>1]|0;j=(!(o>=+(j&65535))?~~o&65535:j)&b[a+4>>1];}else j=0;b[P+6+4>>1]=j;o=(+g[h>>2]-q)*r;m=(+g[h+4>>2]-s)*u;k=(+g[h+8>>2]-x)*y;if(!(o<=0.0)){n=b[a+6>>1]|0;n=(!(o>=+(n&65535))?~~o&65535:n)&b[a+4>>1]|1;}else n=1;b[P>>1]=n;if(!(m<=0.0)){j=b[a+6>>1]|0;j=(!(m>=+(j&65535))?~~m&65535:j)&b[a+4>>1]|1;}else j=1;b[P+2>>1]=j;if(!(k<=0.0)){j=b[a+6>>1]|0;j=(!(k>=+(j&65535))?~~k&65535:j)&b[a+4>>1]|1;}else j=1;b[P+4>>1]=j;G=0;while(1){D=b[H+(I<<6)+48+(G<<1)>>1]|0;E=b[H+(I<<6)+54+(G<<1)>>1]|0;B=a+68+(G<<2)|0;A=c[B>>2]|0;C=(p&65535)-(e[A+((D&65535)<<2)>>1]|0)|0;F=(n&65535)-(e[A+((E&65535)<<2)>>1]|0)|0;b[A+((D&65535)<<2)>>1]=p;b[A+((E&65535)<<2)>>1]=n;if((C|0)<0)eh(a,G,D);a:do if((F|0)>0?(J=c[B>>2]|0,K=c[a+60>>2]|0,L=e[J+((E&65535)<<2)+2>>1]|0,M=b[J+((E&65535)<<2)+6>>1]|0,M<<16>>16):0){z=1<<G&3;A=K+(L<<6)+54+(G<<1)|0;v=J+((E&65535)<<2)|0;j=M;do{w=v;v=v+4|0;n=b[v>>1]|0;if((e[w>>1]|0)<(n&65535))break a;t=c[a+60>>2]|0;p=j&65535;if(!(n&1)){do if((((e[K+(L<<6)+54+(z<<1)>>1]|0)>=(e[t+(p<<6)+48+(z<<1)>>1]|0)?(e[t+(p<<6)+54+(z<<1)>>1]|0)>=(e[K+(L<<6)+48+(z<<1)>>1]|0):0)?(e[K+(L<<6)+54+((1<<z&3)<<1)>>1]|0)>=(e[t+(p<<6)+48+((1<<z&3)<<1)>>1]|0):0)?(e[t+(p<<6)+54+((1<<z&3)<<1)>>1]|0)>=(e[K+(L<<6)+48+((1<<z&3)<<1)>>1]|0):0){n=c[a+92>>2]|0;j=t+((e[w+2>>1]|0)<<6)|0;zb[c[(c[n>>2]|0)+8>>2]&63](n,j,t+(p<<6)|0)|0;n=c[a+96>>2]|0;if(!n)break;zb[c[(c[n>>2]|0)+8>>2]&63](n,j,t+(p<<6)|0)|0;}while(0);j=t+(p<<6)+48+(G<<1)|0;}else j=t+(p<<6)+54+(G<<1)|0;b[j>>1]=(b[j>>1]|0)+-1<<16>>16;b[A>>1]=(b[A>>1]|0)+1<<16>>16;j=e[w>>1]|e[w+2>>1]<<16;t=e[v>>1]|e[v+2>>1]<<16;b[w>>1]=t;b[w+2>>1]=t>>>16;b[v>>1]=j;b[v+2>>1]=j>>>16;j=b[w+10>>1]|0;}while(j<<16>>16!=0)}while(0);b:do if((C|0)>0?(N=c[B>>2]|0,O=b[N+((D&65535)<<2)+6>>1]|0,O<<16>>16):0){z=(c[a+60>>2]|0)+((e[N+((D&65535)<<2)+2>>1]|0)<<6)+48+(G<<1)|0;A=1<<G&3;v=N+((D&65535)<<2)|0;j=O;do{w=v;v=v+4|0;n=b[v>>1]|0;if((e[w>>1]|0)<(n&65535))break b;t=c[a+60>>2]|0;p=j&65535;if(!(n&1))j=t+(p<<6)+48+(G<<1)|0;else{j=e[w+2>>1]|0;do if(((e[t+(j<<6)+54+(A<<1)>>1]|0)>=(e[t+(p<<6)+48+(A<<1)>>1]|0)?(e[t+(p<<6)+54+(A<<1)>>1]|0)>=(e[t+(j<<6)+48+(A<<1)>>1]|0):0)?(e[t+(j<<6)+54+((1<<A&3)<<1)>>1]|0)>=(e[t+(p<<6)+48+((1<<A&3)<<1)>>1]|0):0){if((e[t+(p<<6)+54+((1<<A&3)<<1)>>1]|0)<(e[t+(j<<6)+48+((1<<A&3)<<1)>>1]|0))break;n=c[a+92>>2]|0;tb[c[(c[n>>2]|0)+12>>2]&31](n,t+(j<<6)|0,t+(p<<6)|0,i)|0;n=c[a+96>>2]|0;if(!n)break;tb[c[(c[n>>2]|0)+12>>2]&31](n,t+(j<<6)|0,t+(p<<6)|0,i)|0;}while(0);j=t+(p<<6)+54+(G<<1)|0;}b[j>>1]=(b[j>>1]|0)+-1<<16>>16;b[z>>1]=(b[z>>1]|0)+1<<16>>16;j=e[w>>1]|e[w+2>>1]<<16;D=e[v>>1]|e[v+2>>1]<<16;b[w>>1]=D;b[w+2>>1]=D>>>16;b[v>>1]=j;b[v+2>>1]=j>>>16;j=b[w+10>>1]|0;}while(j<<16>>16!=0)}while(0);if((F|0)<0)$g(a,G,E,i);j=G+1|0;if((j|0)==3)break;G=j;p=b[P+6+(j<<1)>>1]|0;n=b[P+(j<<1)>>1]|0;}j=c[a+108>>2]|0;if(!j){l=P;return}jb[c[(c[j>>2]|0)+16>>2]&31](j,c[d+60>>2]|0,f,h,i);l=P;return}function qd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0;m=l;l=l+240|0;c[a+4>>2]=(c[a+4>>2]|0)+1;j=c[b+36>>2]|0;i=c[d+36>>2]|0;f=c[a+8>>2]|0;K=c[(c[f+4>>2]|0)+24>>2]|0;d=c[K+(j*80|0)+64>>2]|0;b=(c[(c[a+12>>2]|0)+4>>2]|0)+24|0;e=c[(c[b>>2]|0)+(i*80|0)+64>>2]|0;f=c[f+12>>2]|0;n=+g[f>>2];I=+g[f+4>>2];J=+g[f+8>>2];q=+g[f+16>>2];s=+g[f+20>>2];u=+g[f+24>>2];r=+g[f+32>>2];v=+g[f+36>>2];D=+g[f+40>>2];w=+g[K+(j*80|0)>>2];x=+g[K+(j*80|0)+16>>2];y=+g[K+(j*80|0)+32>>2];z=+g[K+(j*80|0)+4>>2];A=+g[K+(j*80|0)+20>>2];B=+g[K+(j*80|0)+36>>2];t=+g[K+(j*80|0)+8>>2];C=+g[K+(j*80|0)+24>>2];E=+g[K+(j*80|0)+40>>2];o=+g[K+(j*80|0)+48>>2];p=+g[K+(j*80|0)+52>>2];H=+g[K+(j*80|0)+56>>2];F=+g[f+48>>2]+(n*o+I*p+J*H);G=+g[f+52>>2]+(q*o+s*p+u*H);H=+g[f+56>>2]+(r*o+v*p+D*H);g[m+176>>2]=n*w+I*x+J*y;g[m+176+4>>2]=n*z+I*A+J*B;g[m+176+8>>2]=n*t+I*C+J*E;g[m+176+12>>2]=0.0;g[m+176+16>>2]=q*w+s*x+u*y;g[m+176+20>>2]=q*z+s*A+u*B;g[m+176+24>>2]=q*t+s*C+u*E;g[m+176+28>>2]=0.0;g[m+176+32>>2]=r*w+v*x+D*y;g[m+176+36>>2]=r*z+v*A+D*B;g[m+176+40>>2]=r*t+v*C+D*E;g[m+176+44>>2]=0.0;g[m+176+48>>2]=F;g[m+176+52>>2]=G;g[m+176+56>>2]=H;g[m+176+60>>2]=0.0;f=c[(c[a+12>>2]|0)+12>>2]|0;H=+g[f>>2];G=+g[f+4>>2];F=+g[f+8>>2];E=+g[f+16>>2];D=+g[f+20>>2];C=+g[f+24>>2];v=+g[f+32>>2];t=+g[f+36>>2];r=+g[f+40>>2];b=c[b>>2]|0;B=+g[b+(i*80|0)>>2];A=+g[b+(i*80|0)+16>>2];z=+g[b+(i*80|0)+32>>2];y=+g[b+(i*80|0)+4>>2];x=+g[b+(i*80|0)+20>>2];w=+g[b+(i*80|0)+36>>2];u=+g[b+(i*80|0)+8>>2];s=+g[b+(i*80|0)+24>>2];q=+g[b+(i*80|0)+40>>2];J=+g[b+(i*80|0)+48>>2];I=+g[b+(i*80|0)+52>>2];n=+g[b+(i*80|0)+56>>2];p=+g[f+48>>2]+(H*J+G*I+F*n);o=+g[f+52>>2]+(E*J+D*I+C*n);n=+g[f+56>>2]+(v*J+t*I+r*n);g[m+112>>2]=H*B+G*A+F*z;g[m+112+4>>2]=H*y+G*x+F*w;g[m+112+8>>2]=H*u+G*s+F*q;g[m+112+12>>2]=0.0;g[m+112+16>>2]=E*B+D*A+C*z;g[m+112+20>>2]=E*y+D*x+C*w;g[m+112+24>>2]=E*u+D*s+C*q;g[m+112+28>>2]=0.0;g[m+112+32>>2]=v*B+t*A+r*z;g[m+112+36>>2]=v*y+t*x+r*w;g[m+112+40>>2]=v*u+t*s+r*q;g[m+112+44>>2]=0.0;g[m+112+48>>2]=p;g[m+112+52>>2]=o;g[m+112+56>>2]=n;g[m+112+60>>2]=0.0;Zb[c[(c[d>>2]|0)+8>>2]&127](d,m+176|0,m+96|0,m+80|0);Zb[c[(c[e>>2]|0)+8>>2]&127](e,m+112|0,m+64|0,m+48|0);if(!(+g[m+96>>2]>+g[m+48>>2])?!(+g[m+80>>2]<+g[m+64>>2]):0)b=1;else b=0;if(!(!(+g[m+96+8>>2]>+g[m+48+8>>2])?!(+g[m+80+8>>2]<+g[m+64+8>>2]):0))b=0;if(+g[m+96+4>>2]>+g[m+48+4>>2]){l=m;return}if(+g[m+80+4>>2]<+g[m+64+4>>2]|b^1){l=m;return}f=c[a+8>>2]|0;b=c[f+8>>2]|0;c[m+24>>2]=f;c[m+24+4>>2]=d;c[m+24+8>>2]=b;c[m+24+12>>2]=m+176;c[m+24+16>>2]=-1;c[m+24+20>>2]=j;b=c[a+12>>2]|0;f=c[b+8>>2]|0;c[m>>2]=b;c[m+4>>2]=e;c[m+8>>2]=f;c[m+12>>2]=m+112;c[m+16>>2]=-1;c[m+20>>2]=i;f=c[a+28>>2]|0;c[6424]=(c[6424]|0)+1;b=((i<<16|j)+~((i<<16|j)<<15)>>10^(i<<16|j)+~((i<<16|j)<<15))*9|0;b=(c[f+12>>2]|0)+-1&((b>>6^b)+~((b>>6^b)<<11)>>16^(b>>6^b)+~((b>>6^b)<<11));a:do if((b|0)<(c[f+32>>2]|0)?(h=c[(c[f+40>>2]|0)+(b<<2)>>2]|0,(h|0)!=-1):0){e=c[f+16>>2]|0;b=h;while(1){d=e+(b*12|0)|0;if((c[d>>2]|0)==(j|0)?(c[e+(b*12|0)+4>>2]|0)==(i|0):0)break;b=c[(c[f+60>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){k=16;break a}}if(d)b=c[e+(b*12|0)+8>>2]|0;else k=16;}else k=16;while(0);if((k|0)==16){b=c[a+16>>2]|0;b=tb[c[(c[b>>2]|0)+8>>2]&31](b,m+24|0,m,c[a+32>>2]|0)|0;K=c[a+28>>2]|0;c[(zb[c[(c[K>>2]|0)+12>>2]&63](K,j,i)|0)+8>>2]=b;}K=c[a+24>>2]|0;h=c[K+8>>2]|0;k=c[K+12>>2]|0;c[K+8>>2]=m+24;c[K+12>>2]=m;Vb[c[(c[K>>2]|0)+8>>2]&127](K,-1,j);K=c[a+24>>2]|0;Vb[c[(c[K>>2]|0)+12>>2]&127](K,-1,i);jb[c[(c[b>>2]|0)+8>>2]&31](b,m+24|0,m,c[a+20>>2]|0,c[a+24>>2]|0);K=c[a+24>>2]|0;c[K+8>>2]=h;c[K+12>>2]=k;l=m;return}function rd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;z=l;l=l+48|0;switch(c[b+4>>2]|0){case 8:{c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;l=z;return}case 0:{w=+g[b+28>>2];x=+g[b+28+4>>2];x=+g[d+4>>2]>=0.0?x:-x;y=+g[b+28+8>>2];y=+g[d+8>>2]>=0.0?y:-y;g[a>>2]=+g[d>>2]>=0.0?w:-w;g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;l=z;return}case 1:{u=+g[d>>2];v=+g[d+4>>2];w=+g[d+8>>2];x=u*+g[b+56>>2]+v*+g[b+56+4>>2]+w*+g[b+56+8>>2];y=u*+g[b+56+16>>2]+v*+g[b+56+20>>2]+w*+g[b+56+24>>2];w=u*+g[b+56+32>>2]+v*+g[b+56+36>>2]+w*+g[b+56+40>>2];g[z+32>>2]=x;g[z+32+4>>2]=y;g[z+32+8>>2]=w;g[z+32+12>>2]=0.0;p=+g[z+32+((x<y&1)<<2)>>2]<w?2:x<y&1;q=c[b+56+(p<<4)+4>>2]|0;s=c[b+56+(p<<4)+8>>2]|0;c[a>>2]=c[b+56+(p<<4)>>2];c[a+4>>2]=q;c[a+8>>2]=s;g[a+12>>2]=0.0;l=z;return}case 13:{c[z+32>>2]=c[b+28>>2];c[z+32+4>>2]=c[b+28+4>>2];c[z+32+8>>2]=c[b+28+8>>2];c[z+32+12>>2]=c[b+28+12>>2];c[z+16>>2]=c[d>>2];e=c[d+4>>2]|0;c[z+16+4>>2]=e;s=c[d+8>>2]|0;c[z+16+8>>2]=s;g[z+16+12>>2]=0.0;d=c[b+52>>2]|0;f=(c[j>>2]=s,+g[j>>2]);switch(d|0){case 2:{b=0;p=2;q=1;f=(c[j>>2]=e,+g[j>>2]);break}case 1:{b=0;p=1;q=2;break}default:{b=1;p=0;q=2;}}o=+g[z+32+(b<<2)>>2];i=+g[z+32+(d<<2)>>2];n=+g[z+16+(b<<2)>>2];m=+G(+(n*n+f*f));h=+g[z+16+(p<<2)>>2];if(m!=0.0){k=o/m*f;e=z;h=h<0.0?-i:i;f=n*(o/m);}else{k=0.0;e=z;h=h<0.0?-i:i;f=o;}g[z+(b<<2)>>2]=f;g[z+(p<<2)>>2]=h;g[z+(q<<2)>>2]=k;c[a>>2]=c[e>>2];c[a+4>>2]=c[z+4>>2];c[a+8>>2]=c[z+8>>2];g[a+12>>2]=0.0;l=z;return}case 10:{f=+g[d>>2];h=+g[d+4>>2];i=+g[d+8>>2];e=c[b+52>>2]|0;x=+g[b+28+(e<<2)>>2];k=+g[b+28+(((e+2|0)%3|0)<<2)>>2];if(f*f+h*h+i*i<9.999999747378752e-05){y=1.0;w=0.0;v=0.0;}else{v=1.0/+G(+(f*f+h*h+i*i));y=f*v;w=h*v;v=i*v;}c[z+32>>2]=0;c[z+32+4>>2]=0;c[z+32+8>>2]=0;c[z+32+12>>2]=0;g[z+32+(e<<2)>>2]=x;t=k*y;u=k*w;r=k*v;o=+g[b+44>>2];m=y*o;n=w*o;o=v*o;k=t+ +g[z+32>>2]-m;f=u+ +g[z+32+4>>2]-n;h=r+ +g[z+32+8>>2]-o;i=v*h+(y*k+w*f);if(i>-999999984306749440.0){q=(g[j>>2]=h,c[j>>2]|0);s=(g[j>>2]=f,c[j>>2]|0);p=(g[j>>2]=k,c[j>>2]|0);}else{i=-999999984306749440.0;p=0;q=0;s=0;}c[z+32>>2]=0;c[z+32+4>>2]=0;c[z+32+8>>2]=0;c[z+32+12>>2]=0;g[z+32+(e<<2)>>2]=-x;t=t+ +g[z+32>>2]-m;x=u+ +g[z+32+4>>2]-n;f=r+ +g[z+32+8>>2]-o;e=v*f+(y*t+w*x)>i;d=(g[j>>2]=t,c[j>>2]|0);b=(g[j>>2]=x,c[j>>2]|0);q=e?(g[j>>2]=f,c[j>>2]|0):q;c[a>>2]=e?d:p;c[a+4>>2]=e?b:s;c[a+8>>2]=q;g[a+12>>2]=0.0;l=z;return}case 5:{q=c[b+92>>2]|0;p=c[b+96>>2]|0;o=+g[b+12>>2];r=+g[b+16>>2];n=+g[b+20>>2];k=+g[d>>2]*o;m=+g[d+4>>2]*r;h=+g[d+8>>2]*n;if((p|0)>0){e=-1;d=0;f=-3402823466385288598117041.0e14;while(1){i=k*+g[q+(d<<4)>>2]+m*+g[q+(d<<4)+4>>2]+h*+g[q+(d<<4)+8>>2];b=i>f;e=b?d:e;d=d+1|0;if((d|0)==(p|0))break;else f=b?i:f;}}else e=-1;x=r*+g[q+(e<<4)+4>>2];y=n*+g[q+(e<<4)+8>>2];g[a>>2]=o*+g[q+(e<<4)>>2];g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;l=z;return}case 4:{q=c[b+104>>2]|0;p=c[b+96>>2]|0;o=+g[b+12>>2];r=+g[b+16>>2];n=+g[b+20>>2];k=+g[d>>2]*o;m=+g[d+4>>2]*r;h=+g[d+8>>2]*n;if((p|0)>0){e=-1;d=0;f=-3402823466385288598117041.0e14;while(1){i=k*+g[q+(d<<4)>>2]+m*+g[q+(d<<4)+4>>2]+h*+g[q+(d<<4)+8>>2];b=i>f;e=b?d:e;d=d+1|0;if((d|0)==(p|0))break;else f=b?i:f;}}else e=-1;x=r*+g[q+(e<<4)+4>>2];y=n*+g[q+(e<<4)+8>>2];g[a>>2]=o*+g[q+(e<<4)>>2];g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;l=z;return}default:{Vb[c[(c[b>>2]|0)+68>>2]&127](a,b,d);l=z;return}}}function sd(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,k=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,F=0,H=0,I=0,J=0,K=0;I=l;l=l+96|0;d=c[a+216>>2]|0;if(+g[d+4>>2]==0.0){H=0;l=I;return H|0}H=c[b>>2]|0;if(!(Kb[c[(c[d>>2]|0)+8>>2]&31](d,c[H+188>>2]|0)|0)){H=1;l=I;return H|0}b=c[H+192>>2]|0;F=c[a+216>>2]|0;if((c[b+4>>2]|0)!=32){c[I+32>>2]=0;c[I+32+4>>2]=b;c[I+32+8>>2]=H;c[I+32+12>>2]=H+4;c[I+32+16>>2]=-1;c[I+32+20>>2]=-1;Nc(a+68|0,a+132|0,I+32|0,F);H=1;l=I;return H|0}if((H|0)==0?1:(c[H+236>>2]|0)!=8){H=1;l=I;return H|0}if(c[H+752>>2]|0?(c[H+988>>2]|0)==0:0)Lg(H);C=+g[a+180>>2]-+g[a+116>>2];D=+g[a+184>>2]-+g[a+120>>2];E=+g[a+188>>2]-+g[a+124>>2];b=c[H+988>>2]|0;if(!b){r=c[H+752>>2]|0;if((r|0)>0){s=c[H+760>>2]|0;q=0;d=0;b=-1;i=1065353216;m=0;e=1.0;f=1.0;do{K=c[s+(q*44|0)+8>>2]|0;J=c[s+(q*44|0)+12>>2]|0;B=c[s+(q*44|0)+16>>2]|0;h=+oh(a+116|0,C,D,E,+g[K+8>>2],+g[K+12>>2],+g[K+16>>2],+g[J+8>>2],+g[J+12>>2],+g[J+16>>2],+g[B+8>>2],+g[B+12>>2],+g[B+16>>2],f);if(h>0.0){d=d+1|0;b=q;i=(g[j>>2]=h,c[j>>2]|0);m=3;e=h;f=h;}q=q+1|0;}while((q|0)!=(r|0))}else{d=0;b=-1;i=1065353216;m=0;e=1.0;}}else{c[I+32>>2]=3348;c[I+32+4>>2]=c[a+116>>2];c[I+32+4+4>>2]=c[a+116+4>>2];c[I+32+4+8>>2]=c[a+116+8>>2];c[I+32+4+12>>2]=c[a+116+12>>2];g[I+32+36>>2]=C;g[I+32+40>>2]=D;g[I+32+44>>2]=E;g[I+32+48>>2]=0.0;c[I+32+20>>2]=c[a+180>>2];c[I+32+20+4>>2]=c[a+180+4>>2];c[I+32+20+8>>2]=c[a+180+8>>2];c[I+32+20+12>>2]=c[a+180+12>>2];c[I+32+52>>2]=1065353216;c[I+32+56>>2]=0;c[I+32+60>>2]=0;ve(b,a+116|0,a+180|0,I+32|0);b=c[I+32+56>>2]|0;if(!b){d=0;b=-1;i=1065353216;m=0;e=1.0;}else{K=c[I+32+52>>2]|0;d=1;b=(b-(c[H+760>>2]|0)|0)/44|0;i=K;m=3;e=(c[j>>2]=K,+g[j>>2]);}}s=c[H+772>>2]|0;if((s|0)>0){B=c[H+780>>2]|0;r=0;do{K=c[B+(r*104|0)+8>>2]|0;v=+g[K+8>>2];y=+g[K+12>>2];A=+g[K+16>>2];K=c[B+(r*104|0)+12>>2]|0;k=+g[K+8>>2];p=+g[K+12>>2];u=+g[K+16>>2];K=c[B+(r*104|0)+16>>2]|0;w=+g[K+8>>2];x=+g[K+12>>2];z=+g[K+16>>2];f=(c[j>>2]=i,+g[j>>2]);h=+oh(a+116|0,C,D,E,v,y,A,k,p,u,w,x,z,f);if(h>0.0){d=d+1|0;b=r;i=(g[j>>2]=h,c[j>>2]|0);m=4;e=h;f=h;}K=c[B+(r*104|0)+20>>2]|0;n=+g[K+8>>2];o=+g[K+12>>2];t=+g[K+16>>2];h=+oh(a+116|0,C,D,E,v,y,A,k,p,u,n,o,t,f);if(h>0.0){d=d+1|0;b=r;q=(g[j>>2]=h,c[j>>2]|0);m=4;f=h;e=h;}else{q=i;f=(c[j>>2]=i,+g[j>>2]);}h=+oh(a+116|0,C,D,E,k,p,u,w,x,z,n,o,t,f);if(h>0.0){d=d+1|0;b=r;i=(g[j>>2]=h,c[j>>2]|0);m=4;f=h;e=h;}else{i=q;f=(c[j>>2]=q,+g[j>>2]);}f=+oh(a+116|0,C,D,E,v,y,A,w,x,z,n,o,t,f);if(f>0.0){d=d+1|0;b=r;i=(g[j>>2]=f,c[j>>2]|0);m=4;e=f;}r=r+1|0;}while((r|0)!=(s|0));i=m;p=e;}else{i=m;p=e;}if(!d){K=1;l=I;return K|0}if(!(p<=+g[F+4>>2])){K=1;l=I;return K|0}c[I+32>>2]=0;c[I+32+4>>2]=b;k=+g[a+180>>2]-+g[a+116>>2];n=+g[a+184>>2]-+g[a+120>>2];o=+g[a+188>>2]-+g[a+124>>2];e=1.0/+G(+(k*k+n*n+o*o));if((i|0)==3){d=c[H+748+12>>2]|0;e=+g[d+(b*44|0)+20>>2];h=+g[d+(b*44|0)+24>>2];f=+g[d+(b*44|0)+28>>2];if(k*e+n*h+o*f>0.0){k=-e;h=-h;f=-f;e=0.0;}else{k=e;e=+g[d+(b*44|0)+32>>2];}}else{k=-(k*e);h=-(n*e);f=-(o*e);e=0.0;}c[I>>2]=H;c[I+4>>2]=I+32;g[I+8>>2]=k;g[I+12>>2]=h;g[I+16>>2]=f;g[I+20>>2]=e;g[I+24>>2]=p;+Lb[c[(c[F>>2]|0)+12>>2]&15](F,I,1);K=1;l=I;return K|0}function td(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0;j=c[d+8>>2]|0;if(!j){h=0;return h|0}i=0;C=j;do{if((c[C+20>>2]|0)>(c[a+100>>2]|0)){A=c[C+12>>2]|0;w=c[A+88>>2]|0;x=w-(c[d+88>>2]|0)|0;y=c[A+92>>2]|0;z=y-(c[d+92>>2]|0)|0;A=c[A+96>>2]|0;B=A-(c[d+96>>2]|0)|0;k=_r(c[g>>2]|0,c[g+4>>2]|0,x|0,((x|0)<0)<<31>>31|0)|0;o=D;j=_r(c[g+8>>2]|0,c[g+8+4>>2]|0,z|0,((z|0)<0)<<31>>31|0)|0;o=xv(j|0,D|0,k|0,o|0)|0;k=D;j=_r(c[g+16>>2]|0,c[g+16+4>>2]|0,B|0,((B|0)<0)<<31>>31|0)|0;j=xv(o|0,k|0,j|0,D|0)|0;k=D;o=_r(c[f>>2]|0,c[f+4>>2]|0,x|0,((x|0)<0)<<31>>31|0)|0;v=D;n=_r(c[f+8>>2]|0,c[f+8+4>>2]|0,z|0,((z|0)<0)<<31>>31|0)|0;v=xv(n|0,D|0,o|0,v|0)|0;o=D;n=_r(c[f+16>>2]|0,c[f+16+4>>2]|0,B|0,((B|0)<0)<<31>>31|0)|0;n=xv(v|0,o|0,n|0,D|0)|0;o=D;if((k|0)>0|(k|0)==0&j>>>0>0){l=1;v=j;}else{v=Wt(0,0,j|0,k|0)|0;l=((j|0)!=0|(k|0)!=0)<<31>>31;v=(j|0)!=0|(k|0)!=0?v:0;k=(j|0)!=0|(k|0)!=0?D:0;}if(!((o|0)>0|(o|0)==0&n>>>0>0)){j=Wt(0,0,n|0,o|0)|0;j=(n|0)!=0|(o|0)!=0?j:0;m=(n|0)!=0|(o|0)!=0?D:0;if((j|0)!=0|(m|0)!=0|(l|0)!=0){l=(n|0)!=0|(o|0)!=0?0-l|0:l;n=j;p=8;}}else{m=o;p=8;}a:do if((p|0)==8){p=0;if(!i){c[h>>2]=v;c[h+4>>2]=k;c[h+8>>2]=n;c[h+8+4>>2]=m;c[h+16>>2]=l;i=C;break}j=c[h+16>>2]|0;if((l|0)==(j|0)){if(l|0){p=c[h+8>>2]|0;s=c[h+8+4>>2]|0;o=_r(p|0,0,v|0,0)|0;j=D;t=_r(s|0,0,v|0,0)|0;r=D;p=_r(p|0,0,k|0,0)|0;q=D;s=_r(s|0,0,k|0,0)|0;G=D;p=xv(t|0,0,p|0,0)|0;t=D;G=xv(r|0,0,s|0,G|0)|0;q=xv(G|0,D|0,q|0,0)|0;t=xv(q|0,D|0,t|0,0)|0;q=D;j=xv(0,p|0,o|0,j|0)|0;o=D;p=xv(t|0,q|0,(o>>>0<p>>>0|(o|0)==(p|0)&j>>>0<0)&1|0,0)|0;q=D;t=c[h>>2]|0;G=c[h+4>>2]|0;s=_r(t|0,0,n|0,0)|0;r=D;E=_r(G|0,0,n|0,0)|0;H=D;t=_r(t|0,0,m|0,0)|0;u=D;G=_r(G|0,0,m|0,0)|0;F=D;t=xv(E|0,0,t|0,0)|0;E=D;F=xv(H|0,0,G|0,F|0)|0;u=xv(F|0,D|0,u|0,0)|0;E=xv(u|0,D|0,E|0,0)|0;u=D;r=xv(0,t|0,s|0,r|0)|0;s=D;t=xv(E|0,u|0,(s>>>0<t>>>0|(s|0)==(t|0)&r>>>0<0)&1|0,0)|0;u=D;if(!(q>>>0<u>>>0|(q|0)==(u|0)&p>>>0<t>>>0))if(q>>>0>u>>>0|(q|0)==(u|0)&p>>>0>t>>>0)j=1;else j=o>>>0<s>>>0|(o|0)==(s|0)&j>>>0<r>>>0?-1:(o>>>0>s>>>0|(o|0)==(s|0)&j>>>0>r>>>0)&1;else j=-1;j=S(j,l)|0;p=17;}}else{j=l-j|0;p=17;}do if((p|0)==17){p=0;if((j|0)>=0)if(!j)break;else break a;else{c[h>>2]=v;c[h+4>>2]=k;c[h+8>>2]=n;c[h+8+4>>2]=m;c[h+16>>2]=l;i=C;break a}}while(0);j=(c[i+4>>2]|0)==(C|0);if((c[i>>2]|0)==(C|0))if(j){H=c[e+8>>2]|0;E=S(H,z)|0;u=c[e+4>>2]|0;E=E-(S(u,B)|0)|0;G=c[e>>2]|0;H=(S(G,B)|0)-(S(H,x)|0)|0;G=(S(u,x)|0)-(S(G,z)|0)|0;u=c[i+12>>2]|0;j=c[(c[C+8>>2]|0)+12>>2]|0;z=c[j+88>>2]|0;x=(c[u+88>>2]|0)-z|0;v=c[j+92>>2]|0;B=(c[u+92>>2]|0)-v|0;j=c[j+96>>2]|0;u=(c[u+96>>2]|0)-j|0;F=(S(A-j|0,B)|0)-(S(y-v|0,u)|0)|0;j=(S(w-z|0,u)|0)-(S(A-j|0,x)|0)|0;B=(S(y-v|0,x)|0)-(S(w-z|0,B)|0)|0;E=_r(F|0,((F|0)<0)<<31>>31|0,E|0,((E|0)<0)<<31>>31|0)|0;F=D;H=_r(j|0,((j|0)<0)<<31>>31|0,H|0,((H|0)<0)<<31>>31|0)|0;j=D;G=_r(B|0,((B|0)<0)<<31>>31|0,G|0,((G|0)<0)<<31>>31|0)|0;G=xv(E|0,F|0,G|0,D|0)|0;j=xv(G|0,D|0,H|0,j|0)|0;H=D;j=(H|0)>0|(H|0)==0&j>>>0>0?2:1;}else j=2;else j=j&1;i=(j|0)==2^b?i:C;}while(0);j=c[d+8>>2]|0;}C=c[C>>2]|0;}while((C|0)!=(j|0));return i|0}function ud(b,d,e,f,h,i,j,k,l,m,n,o,p){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;B=S(c[l+24>>2]|0,m)|0;y=a[d+44>>0]|0;A=c[d+56>>2]|0;if(!(y<<24>>24!=0|(A|0)!=0)){d=0;return d|0}C=c[(o|0?l+12|0:l+8|0)>>2]|0;m=c[(o|0?l+20|0:l+16|0)>>2]|0;c[C+(B<<2)>>2]=c[n>>2];c[C+(B+1<<2)>>2]=c[n+4>>2];c[C+(B+2<<2)>>2]=c[n+8>>2];g[m+(B<<2)>>2]=-+g[n>>2];g[m+(B+1<<2)>>2]=-+g[n+4>>2];g[m+(B+2<<2)>>2]=-+g[n+8>>2];if(!o){q=+g[b+1176>>2];if(!(a[b+1301>>0]|0)){q=q-+g[e+48>>2];r=+g[b+1180>>2]-+g[e+52>>2];w=+g[b+1184>>2]-+g[e+56>>2];u=+g[n+8>>2];v=+g[n+4>>2];x=+g[n>>2];m=c[l+12>>2]|0;g[m+(B<<2)>>2]=r*u-w*v;g[m+(B+1<<2)>>2]=w*x-q*u;g[m+(B+2<<2)>>2]=q*v-r*x;x=+g[b+1176>>2]-+g[f+48>>2];r=+g[b+1180>>2]-+g[f+52>>2];v=+g[b+1184>>2]-+g[f+56>>2];q=+g[n+8>>2];u=+g[n+4>>2];w=+g[n>>2];m=c[l+20>>2]|0;g[m+(B<<2)>>2]=-(r*q-v*u);r=x*u-r*w;e=m;q=-(v*w-x*q);}else{I=q-+g[f+48>>2];H=+g[b+1180>>2]-+g[f+52>>2];F=+g[b+1184>>2]-+g[f+56>>2];r=+g[n>>2];G=+g[n+4>>2];E=+g[n+8>>2];K=+g[b+1112>>2]-+g[e+48>>2];q=+g[b+1116>>2]-+g[e+52>>2];s=+g[b+1120>>2]-+g[e+56>>2];u=+g[d+52>>2]-+g[d+48>>2];J=r*(r*K+G*q+E*s)+r*u-r*(I*r+H*G+F*E);D=G*(r*K+G*q+E*s)+G*u-G*(I*r+H*G+F*E);u=E*(r*K+G*q+E*s)+E*u-E*(I*r+H*G+F*E);w=+g[b+1272>>2];x=+g[b+1276>>2];t=E*(q-G*(r*K+G*q+E*s)+w*D)-G*(s-E*(r*K+G*q+E*s)+w*u);v=r*(s-E*(r*K+G*q+E*s)+w*u)-E*(K-r*(r*K+G*q+E*s)+w*J);s=G*(K-r*(r*K+G*q+E*s)+w*J)-r*(q-G*(r*K+G*q+E*s)+w*D);q=(H-G*(I*r+H*G+F*E)-x*D)*E-(F-E*(I*r+H*G+F*E)-x*u)*G;u=(F-E*(I*r+H*G+F*E)-x*u)*r-(I-r*(I*r+H*G+F*E)-x*J)*E;r=(I-r*(I*r+H*G+F*E)-x*J)*G-(H-G*(I*r+H*G+F*E)-x*D)*r;if(!((p|0)!=0|(a[b+1280>>0]|0)==0)){t=w*t;v=w*v;s=w*s;q=x*q;u=x*u;r=x*r;}m=(c[l+12>>2]|0)+(B<<2)|0;g[m>>2]=t;g[m+4>>2]=v;g[m+8>>2]=s;m=c[l+20>>2]|0;g[m+(B<<2)>>2]=-q;e=m;q=-u;}g[m+(B+1<<2)>>2]=q;g[e+(B+2<<2)>>2]=-r;}if(A|0?+g[d>>2]==+g[d+4>>2]:0){m=c[l+28>>2]|0;g[m+(B<<2)>>2]=0.0;q=0.0;}else z=12;do if((z|0)==12){e=c[l+28>>2]|0;g[e+(B<<2)>>2]=0.0;if(!(y<<24>>24)){if(A|0){m=e;q=0.0;break}else m=1;return m|0}c[(c[l+32>>2]|0)+(B<<2)>>2]=c[d+28>>2];if(A|0){m=e;q=+g[e+(B<<2)>>2];break}v=+g[d+8>>2];q=o|0?v:-v;r=+g[d+52>>2];s=+g[d>>2];t=+g[d+4>>2];u=+g[l>>2]*+g[d+32>>2];do if(!(s>t))if(!(s==t)){if(q/u<0.0)if(r>=s?s-q/u>r:0){q=(s-r)/(q/u);break}else{q=r<s?0.0:1.0;break}if(q/u>0.0)if(r<=t?t-q/u<r:0){q=(t-r)/(q/u);break}else{q=r>t?0.0:1.0;break}else q=0.0;}else q=0.0;else q=1.0;while(0);g[e+(B<<2)>>2]=q*v+ +g[e+(B<<2)>>2];g[(c[l+36>>2]|0)+(B<<2)>>2]=-+g[d+12>>2];c[(c[l+40>>2]|0)+(B<<2)>>2]=c[d+12>>2];C=1;return C|0}while(0);K=+g[l>>2]*+g[d+32>>2];f=m+(B<<2)|0;g[f>>2]=q+ +g[d+48>>2]*(o|0?-K:K);c[(c[l+32>>2]|0)+(B<<2)>>2]=c[d+36>>2];e=c[l+36>>2]|0;m=c[l+40>>2]|0;if(+g[d>>2]==+g[d+4>>2]){g[e+(B<<2)>>2]=-3402823466385288598117041.0e14;g[m+(B<<2)>>2]=3402823466385288598117041.0e14;C=1;return C|0}g[e+(B<<2)>>2]=(A|0)==1?0.0:-3402823466385288598117041.0e14;g[m+(B<<2)>>2]=(A|0)==1?3402823466385288598117041.0e14:0.0;r=+g[d+40>>2];if(!(r>0.0)){C=1;return C|0}d=o|0?j:h;C=o|0?k:i;J=+g[n>>2];K=+g[n+4>>2];q=+g[n+8>>2];q=+g[d>>2]*J+ +g[d+4>>2]*K+ +g[d+8>>2]*q-(J*+g[C>>2]+K*+g[C+4>>2]+q*+g[C+8>>2]);if((A|0)==1){if(!(q<0.0)){C=1;return C|0}if(!(+g[f>>2]<-(r*q))){C=1;return C|0}g[f>>2]=-(r*q);C=1;return C|0}else{if(!(q>0.0)){C=1;return C|0}if(!(+g[f>>2]>-(r*q))){C=1;return C|0}g[f>>2]=-(r*q);C=1;return C|0}return 0}function vd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0,k=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0;v=l;l=l+544|0;j=h;k=j+36|0;do{c[j>>2]=0;j=j+4|0;}while((j|0)<(k|0));c[v+384>>2]=a;c[v+384+4>>2]=d;o=+g[e>>2];E=+g[b>>2];n=+g[e+16>>2];i=+g[b+16>>2];m=+g[e+32>>2];F=+g[b+32>>2];w=+g[b+4>>2];H=+g[b+20>>2];x=+g[b+36>>2];t=+g[b+8>>2];r=+g[b+24>>2];p=+g[b+40>>2];D=+g[e+4>>2];C=+g[e+20>>2];B=+g[e+36>>2];A=+g[e+8>>2];z=+g[e+24>>2];y=+g[e+40>>2];g[v+384+8>>2]=o*E+n*i+m*F;g[v+384+12>>2]=o*w+n*H+m*x;g[v+384+16>>2]=o*t+n*r+m*p;g[v+384+20>>2]=0.0;g[v+384+24>>2]=E*D+i*C+F*B;g[v+384+28>>2]=w*D+H*C+x*B;g[v+384+32>>2]=t*D+r*C+p*B;g[v+384+36>>2]=0.0;g[v+384+40>>2]=E*A+i*z+F*y;g[v+384+44>>2]=w*A+H*z+x*y;g[v+384+48>>2]=t*A+r*z+p*y;g[v+384+52>>2]=0.0;p=+g[e+48>>2]-+g[b+48>>2];r=+g[e+52>>2]-+g[b+52>>2];t=+g[e+56>>2]-+g[b+56>>2];x=+g[b>>2];H=+g[e>>2];w=+g[b+16>>2];F=+g[e+16>>2];i=+g[b+32>>2];E=+g[e+32>>2];m=+g[b+4>>2];n=+g[b+20>>2];o=+g[b+36>>2];q=+g[b+8>>2];s=+g[b+24>>2];u=+g[b+40>>2];g[v+384+56>>2]=x*H+w*F+i*E;g[v+384+60>>2]=x*D+w*C+i*B;g[v+384+64>>2]=x*A+w*z+i*y;g[v+384+68>>2]=0.0;g[v+384+72>>2]=H*m+F*n+E*o;g[v+384+76>>2]=D*m+C*n+B*o;g[v+384+80>>2]=A*m+z*n+y*o;g[v+384+84>>2]=0.0;g[v+384+88>>2]=H*q+F*s+E*u;g[v+384+92>>2]=D*q+C*s+B*u;g[v+384+96>>2]=A*q+z*s+y*u;g[v+384+100>>2]=0.0;g[v+384+104>>2]=p*x+r*w+t*i;g[v+384+108>>2]=p*m+r*n+t*o;g[v+384+112>>2]=p*q+r*s+t*u;g[v+384+116>>2]=0.0;c[v+384+120>>2]=80;c[v+384+124>>2]=0;c[v+364>>2]=0;c[v+128>>2]=0;c[v+128+4>>2]=0;c[v+128+8>>2]=0;c[v+128+12>>2]=0;c[v+376>>2]=2;c[v+368>>2]=0;g[v+144>>2]=0.0;a=Bc(v,v+384|0,f)|0;if(a|0){c[h>>2]=(a|0)==1?1:2;h=0;l=v;return h|0}a=c[v+372>>2]|0;if(!(c[a+32>>2]|0)){q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;i=0.0;}else{f=0;o=0.0;p=0.0;q=0.0;i=0.0;m=0.0;n=0.0;do{u=+g[a+16+(f<<2)>>2];d=c[v+384+120>>2]|0;k=c[v+384+124>>2]|0;e=(c[v+384>>2]|0)+(k>>1)|0;if(k&1)d=c[(c[e>>2]|0)+d>>2]|0;Vb[d&127](v+528|0,e,c[a+(f<<2)>>2]|0);o=o+u*+g[v+528>>2];p=p+u*+g[v+528+4>>2];q=q+u*+g[v+528+8>>2];a=c[(c[v+372>>2]|0)+(f<<2)>>2]|0;r=-+g[a>>2];s=-+g[a+4>>2];t=-+g[a+8>>2];a=c[v+384+120>>2]|0;k=c[v+384+124>>2]|0;d=(c[v+384+4>>2]|0)+(k>>1)|0;if(k&1)a=c[(c[d>>2]|0)+a>>2]|0;F=+g[v+384+24>>2]*r+ +g[v+384+28>>2]*s+ +g[v+384+32>>2]*t;E=+g[v+384+40>>2]*r+ +g[v+384+44>>2]*s+ +g[v+384+48>>2]*t;g[v+512>>2]=+g[v+384+8>>2]*r+ +g[v+384+12>>2]*s+ +g[v+384+16>>2]*t;g[v+512+4>>2]=F;g[v+512+8>>2]=E;g[v+512+12>>2]=0.0;Vb[a&127](v+528|0,d,v+512|0);E=+g[v+528>>2];F=+g[v+528+4>>2];H=+g[v+528+8>>2];i=i+u*(E*+g[v+384+56>>2]+F*+g[v+384+60>>2]+H*+g[v+384+64>>2]+ +g[v+384+104>>2]);m=m+u*(E*+g[v+384+72>>2]+F*+g[v+384+76>>2]+H*+g[v+384+80>>2]+ +g[v+384+108>>2]);n=n+u*(E*+g[v+384+88>>2]+F*+g[v+384+92>>2]+H*+g[v+384+96>>2]+ +g[v+384+112>>2]);f=f+1|0;a=c[v+372>>2]|0;}while(f>>>0<(c[a+32>>2]|0)>>>0)}D=o*+g[b+16>>2]+p*+g[b+20>>2]+q*+g[b+24>>2]+ +g[b+52>>2];E=o*+g[b+32>>2]+p*+g[b+36>>2]+q*+g[b+40>>2]+ +g[b+56>>2];g[h+4>>2]=o*+g[b>>2]+p*+g[b+4>>2]+q*+g[b+8>>2]+ +g[b+48>>2];g[h+8>>2]=D;g[h+12>>2]=E;g[h+16>>2]=0.0;E=i*+g[b+16>>2]+m*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];D=i*+g[b+32>>2]+m*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[h+20>>2]=i*+g[b>>2]+m*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[h+24>>2]=E;g[h+28>>2]=D;g[h+32>>2]=0.0;D=o-i;E=p-m;H=q-n;g[h+48>>2]=0.0;F=+G(+(D*D+E*E+H*H));g[h+52>>2]=F;F=F>9.999999747378752e-05?1.0/F:1.0;g[h+36>>2]=F*D;g[h+40>>2]=F*E;g[h+44>>2]=F*H;h=1;l=v;return h|0}function wd(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var k=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0;D=c[b+88>>2]|0;if((D|0)==(c[b+92>>2]|0)?(o=D|0?D<<1:1,(D|0)<(o|0)):0){if(!o){k=0;m=D;}else{c[6436]=(c[6436]|0)+1;k=ic((o*152|3)+16|0)|0;if(!k)k=0;else{c[(k+4+15&-16)+-4>>2]=k;k=k+4+15&-16;}m=c[b+88>>2]|0;}if((m|0)>0){l=0;do{Vh(k+(l*152|0)|0,(c[b+96>>2]|0)+(l*152|0)|0,152)|0;l=l+1|0;}while((l|0)!=(m|0))}l=c[b+96>>2]|0;if(l|0){if(a[b+100>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[l+-4>>2]|0);}c[b+96>>2]=0;}a[b+100>>0]=1;c[b+96>>2]=k;c[b+92>>2]=o;k=c[b+88>>2]|0;}else k=D;c[b+88>>2]=k+1;C=c[b+96>>2]|0;c[C+(D*152|0)+140>>2]=h;c[C+(D*152|0)+16>>2]=0;c[C+(D*152|0)+16+4>>2]=0;c[C+(D*152|0)+16+8>>2]=0;c[C+(D*152|0)+16+12>>2]=0;g[C+(D*152|0)+48>>2]=-0.0;g[C+(D*152|0)+52>>2]=-0.0;g[C+(D*152|0)+56>>2]=-0.0;g[C+(D*152|0)+60>>2]=0.0;h=c[b+16>>2]|0;o=c[h+(e*244|0)+240>>2]|0;B=c[h+(f*244|0)+240>>2]|0;c[C+(D*152|0)+144>>2]=e;c[C+(D*152|0)+148>>2]=f;b=c[i+88>>2]|0;c[C+(D*152|0)+104>>2]=b;c[C+(D*152|0)+132>>2]=0;g[C+(D*152|0)+100>>2]=0.0;g[C+(D*152|0)+96>>2]=0.0;x=-+g[d>>2];y=-+g[d+4>>2];z=-+g[d+8>>2];g[C+(D*152|0)>>2]=x;g[C+(D*152|0)+4>>2]=y;g[C+(D*152|0)+8>>2]=z;g[C+(D*152|0)+12>>2]=0.0;A=(c[j>>2]=b,+g[j>>2]);if(o|0){k=(g[j>>2]=(+g[o+264>>2]*x+ +g[o+268>>2]*y+ +g[o+272>>2]*z)*+g[o+544>>2],c[j>>2]|0);l=(g[j>>2]=(+g[o+280>>2]*x+ +g[o+284>>2]*y+ +g[o+288>>2]*z)*+g[o+548>>2],c[j>>2]|0);m=(g[j>>2]=(+g[o+296>>2]*x+ +g[o+300>>2]*y+ +g[o+304>>2]*z)*+g[o+552>>2],c[j>>2]|0);}else{k=0;l=0;m=0;}c[C+(D*152|0)+64>>2]=k;c[C+(D*152|0)+68>>2]=l;c[C+(D*152|0)+72>>2]=m;g[C+(D*152|0)+76>>2]=0.0;u=+g[d>>2];v=+g[d+4>>2];w=+g[d+8>>2];d=c[d+12>>2]|0;g[C+(D*152|0)+32>>2]=u;g[C+(D*152|0)+36>>2]=v;g[C+(D*152|0)+40>>2]=w;c[C+(D*152|0)+44>>2]=d;if(B|0){k=(g[j>>2]=(u*+g[B+264>>2]+v*+g[B+268>>2]+w*+g[B+272>>2])*+g[B+544>>2],c[j>>2]|0);l=(g[j>>2]=(u*+g[B+280>>2]+v*+g[B+284>>2]+w*+g[B+288>>2])*+g[B+548>>2],c[j>>2]|0);m=(g[j>>2]=(u*+g[B+296>>2]+v*+g[B+300>>2]+w*+g[B+304>>2])*+g[B+552>>2],c[j>>2]|0);}else{k=0;l=0;m=0;}c[C+(D*152|0)+80>>2]=k;c[C+(D*152|0)+84>>2]=l;c[C+(D*152|0)+88>>2]=m;g[C+(D*152|0)+92>>2]=0.0;if(o|0){n=+g[o+264>>2]*x+ +g[o+268>>2]*y+ +g[o+272>>2]*z;p=+g[o+280>>2]*x+ +g[o+284>>2]*y+ +g[o+288>>2]*z;q=+g[o+296>>2]*x+ +g[o+300>>2]*y+ +g[o+304>>2]*z;}else{n=0.0;p=0.0;q=0.0;}if(B|0){r=+g[B+264>>2]*u+ +g[B+268>>2]*v+ +g[B+272>>2]*w;s=u*+g[B+280>>2]+v*+g[B+284>>2]+w*+g[B+288>>2];t=u*+g[B+296>>2]+v*+g[B+300>>2]+w*+g[B+304>>2];}else{r=0.0;s=0.0;t=0.0;}s=1.0/(n*x+p*y+q*z+0.0+(r*u+s*v+t*w));g[C+(D*152|0)+108>>2]=s;if(o|0){p=+g[h+(e*244|0)+192>>2];q=+g[h+(e*244|0)+196>>2];r=+g[h+(e*244|0)+200>>2];n=(+g[h+(e*244|0)+176>>2]+ +g[h+(e*244|0)+208>>2])*0.0+(+g[h+(e*244|0)+180>>2]+ +g[h+(e*244|0)+212>>2])*0.0+(+g[h+(e*244|0)+184>>2]+ +g[h+(e*244|0)+216>>2])*0.0;}else{p=0.0;q=0.0;r=0.0;n=0.0;}n=n+(p*x+q*y+r*z);if(!B){t=0.0;x=0.0;z=0.0;y=-0.0;u=t*u;x=x*v;x=u+x;z=z*w;z=x+z;z=y+z;z=n+z;z=0.0-z;z=s*z;f=C+(D*152|0)+112|0;g[f>>2]=z;f=C+(D*152|0)+116|0;g[f>>2]=0.0;A=-A;f=C+(D*152|0)+120|0;g[f>>2]=A;D=C+(D*152|0)+124|0;c[D>>2]=b;return}t=+g[h+(f*244|0)+192>>2];x=+g[h+(f*244|0)+196>>2];z=+g[h+(f*244|0)+200>>2];y=(+g[h+(f*244|0)+176>>2]+ +g[h+(f*244|0)+208>>2])*-0.0+(+g[h+(f*244|0)+180>>2]+ +g[h+(f*244|0)+212>>2])*-0.0+(+g[h+(f*244|0)+184>>2]+ +g[h+(f*244|0)+216>>2])*-0.0;u=t*u;x=x*v;x=u+x;z=z*w;z=x+z;z=y+z;z=n+z;z=0.0-z;z=s*z;f=C+(D*152|0)+112|0;g[f>>2]=z;f=C+(D*152|0)+116|0;g[f>>2]=0.0;A=-A;f=C+(D*152|0)+120|0;g[f>>2]=A;D=C+(D*152|0)+124|0;c[D>>2]=b;return}function xd(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0,i=0,k=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;n=l;l=l+16|0;c[b+236>>2]=2;c[b+312>>2]=0;c[b+312+4>>2]=0;c[b+312+8>>2]=0;c[b+312+12>>2]=0;c[b+312+16>>2]=0;c[b+312+20>>2]=0;c[b+312+24>>2]=0;c[b+312+28>>2]=0;c[b+544>>2]=1065353216;c[b+548>>2]=1065353216;c[b+552>>2]=1065353216;g[b+556>>2]=0.0;c[b+348>>2]=1065353216;c[b+352>>2]=1065353216;c[b+356>>2]=1065353216;e=b+360|0;h=e+36|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(h|0));c[b+412>>2]=0;c[b+412+4>>2]=0;c[b+412+8>>2]=0;c[b+412+12>>2]=0;c[b+412+16>>2]=0;c[b+412+20>>2]=0;c[b+412+24>>2]=0;c[b+412+28>>2]=0;f=+g[d+92>>2];m=+g[d+96>>2];g[n+12>>2]=f;g[n+8>>2]=m;g[n+4>>2]=0.0;g[n>>2]=1.0;c[b+444>>2]=c[(f<0.0?n+4|0:f>1.0?n:n+12|0)>>2];g[n+4>>2]=0.0;g[n>>2]=1.0;c[b+448>>2]=c[(m<0.0?n+4|0:m>1.0?n:n+8|0)>>2];c[b+472>>2]=c[d+112>>2];c[b+476>>2]=c[d+116>>2];e=c[d+4>>2]|0;c[b+480>>2]=e;c[b+608>>2]=0;c[b+612>>2]=0;a[b+452>>0]=a[d+120>>0]|0;c[b+456>>2]=c[d+124>>2];c[b+460>>2]=c[d+128>>2];c[b+464>>2]=c[d+132>>2];c[b+468>>2]=c[d+136>>2];if(!e){c[b+4>>2]=c[d+8>>2];c[b+4+4>>2]=c[d+8+4>>2];c[b+4+8>>2]=c[d+8+8>>2];c[b+4+12>>2]=c[d+8+12>>2];c[b+20>>2]=c[d+24>>2];c[b+20+4>>2]=c[d+24+4>>2];c[b+20+8>>2]=c[d+24+8>>2];c[b+20+12>>2]=c[d+24+12>>2];c[b+36>>2]=c[d+40>>2];c[b+36+4>>2]=c[d+40+4>>2];c[b+36+8>>2]=c[d+40+8>>2];c[b+36+12>>2]=c[d+40+12>>2];c[b+52>>2]=c[d+56>>2];c[b+52+4>>2]=c[d+56+4>>2];c[b+52+8>>2]=c[d+56+8>>2];c[b+52+12>>2]=c[d+56+12>>2];e=b+20|0;h=b+36|0;i=b+52|0;k=b+4|0;}else{nb[c[(c[e>>2]|0)+8>>2]&127](e,b+4|0);e=b+20|0;h=b+36|0;i=b+52|0;k=b+4|0;}c[b+68>>2]=c[k>>2];c[b+68+4>>2]=c[k+4>>2];c[b+68+8>>2]=c[k+8>>2];c[b+68+12>>2]=c[k+12>>2];c[b+84>>2]=c[e>>2];c[b+84+4>>2]=c[e+4>>2];c[b+84+8>>2]=c[e+8>>2];c[b+84+12>>2]=c[e+12>>2];c[b+100>>2]=c[h>>2];c[b+100+4>>2]=c[h+4>>2];c[b+100+8>>2]=c[h+8>>2];c[b+100+12>>2]=c[h+12>>2];c[b+116>>2]=c[i>>2];c[b+116+4>>2]=c[i+4>>2];c[b+116+8>>2]=c[i+8>>2];c[b+116+12>>2]=c[i+12>>2];c[b+132>>2]=0;c[b+132+4>>2]=0;c[b+132+8>>2]=0;c[b+132+12>>2]=0;c[b+132+16>>2]=0;c[b+132+20>>2]=0;c[b+132+24>>2]=0;c[b+132+28>>2]=0;c[b+224>>2]=c[d+100>>2];c[b+232>>2]=c[d+104>>2];c[b+228>>2]=c[d+108>>2];nb[c[(c[b>>2]|0)+12>>2]&127](b,c[d+72>>2]|0);e=c[5816]|0;c[5816]=e+1;c[b+508>>2]=e;f=+g[d>>2];e=c[b+204>>2]|0;if(f==0.0){c[b+204>>2]=e|1;m=0.0;}else{c[b+204>>2]=e&-2;m=1.0/f;}g[b+344>>2]=m;p=f*+g[b+384>>2];o=f*+g[b+388>>2];g[b+364>>2]=f*+g[b+380>>2];g[b+368>>2]=p;g[b+372>>2]=o;g[b+376>>2]=0.0;f=+g[d+76>>2];h=f!=0.0?(g[j>>2]=1.0/f,c[j>>2]|0):0;f=+g[d+80>>2];e=f!=0.0?(g[j>>2]=1.0/f,c[j>>2]|0):0;f=+g[d+84>>2];d=f!=0.0?(g[j>>2]=1.0/f,c[j>>2]|0):0;c[b+396>>2]=h;c[b+400>>2]=e;c[b+404>>2]=d;g[b+408>>2]=0.0;r=m*+g[b+352>>2];x=m*+g[b+356>>2];g[b+560>>2]=m*+g[b+348>>2];g[b+564>>2]=r;g[b+568>>2]=x;g[b+572>>2]=0.0;x=+g[b+4>>2];r=(c[j>>2]=h,+g[j>>2]);w=+g[b+8>>2];f=(c[j>>2]=e,+g[j>>2]);v=+g[b+12>>2];o=(c[j>>2]=d,+g[j>>2]);u=+g[b+20>>2];t=+g[b+24>>2];s=+g[b+28>>2];q=+g[b+36>>2];p=+g[b+40>>2];m=+g[b+44>>2];g[b+264>>2]=x*x*r+w*w*f+v*v*o;g[b+268>>2]=x*r*u+w*f*t+v*o*s;g[b+272>>2]=x*r*q+w*f*p+v*o*m;g[b+276>>2]=0.0;g[b+280>>2]=x*r*u+w*f*t+v*o*s;g[b+284>>2]=u*r*u+t*f*t+s*o*s;g[b+288>>2]=r*u*q+f*t*p+o*s*m;g[b+292>>2]=0.0;g[b+296>>2]=x*r*q+w*f*p+v*o*m;g[b+300>>2]=u*r*q+t*f*p+s*o*m;g[b+304>>2]=q*r*q+p*f*p+m*o*m;g[b+308>>2]=0.0;c[b+504>>2]=0;c[b+512>>2]=0;c[b+512+4>>2]=0;c[b+512+8>>2]=0;c[b+512+12>>2]=0;c[b+512+16>>2]=0;c[b+512+20>>2]=0;c[b+512+24>>2]=0;c[b+512+28>>2]=0;m=+g[b+344>>2];o=m*+g[b+352>>2];p=m*+g[b+356>>2];g[b+560>>2]=+g[b+348>>2]*m;g[b+564>>2]=o;g[b+568>>2]=p;e=b+572|0;h=e+36|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(h|0));l=n;return}function yd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0.0,k=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0;h=l;l=l+240|0;if(!(c[b+16>>2]|0)){K=c[b+12>>2]|0;b=c[b+20>>2]|0;x=+g[d>>2];q=+g[d+4>>2];u=+g[d+8>>2];j=+g[d+16>>2];r=+g[d+20>>2];i=+g[d+24>>2];m=+g[d+32>>2];s=+g[d+36>>2];n=+g[d+40>>2];F=+g[d+48>>2];E=+g[d+52>>2];D=+g[d+56>>2];J=+g[e>>2];I=+g[e+16>>2];z=+g[e+32>>2];H=+g[e+4>>2];G=+g[e+20>>2];y=+g[e+36>>2];v=+g[e+8>>2];k=+g[e+24>>2];p=+g[e+40>>2];C=-+g[e+48>>2];B=-+g[e+52>>2];w=-+g[e+56>>2];d=c[(c[K>>2]|0)+64>>2]|0;A=-+g[b+48>>2];t=-+g[b+52>>2];o=-+g[b+56>>2];g[h+16>>2]=(x*J+j*I+m*z)*A+(x*H+j*G+m*y)*t+(x*v+j*k+m*p)*o;g[h+16+4>>2]=(q*J+r*I+s*z)*A+(q*H+r*G+s*y)*t+(q*v+r*k+s*p)*o;g[h+16+8>>2]=(u*J+i*I+n*z)*A+(u*H+i*G+n*y)*t+(u*v+i*k+n*p)*o;g[h+16+12>>2]=0.0;Vb[d&127](h+152|0,K,h+16|0);o=+g[h+152>>2];t=+g[h+152+4>>2];A=+g[h+152+8>>2];z=F*J+E*I+D*z+(J*C+I*B+z*w)+((x*J+j*I+m*z)*o+(q*J+r*I+s*z)*t+(u*J+i*I+n*z)*A);y=F*H+E*G+D*y+(H*C+G*B+y*w)+((x*H+j*G+m*y)*o+(q*H+r*G+s*y)*t+(u*H+i*G+n*y)*A);A=F*v+E*k+D*p+(v*C+k*B+p*w)+((x*v+j*k+m*p)*o+(q*v+r*k+s*p)*t+(u*v+i*k+n*p)*A);p=+g[b+48>>2];n=+g[b+52>>2];k=+g[b+56>>2];i=k*A+(p*z+n*y)-+g[b+64>>2];v=+g[e>>2];u=+g[e+4>>2];t=+g[e+8>>2];s=+g[e+16>>2];r=+g[e+20>>2];q=+g[e+24>>2];o=+g[e+32>>2];m=+g[e+36>>2];j=+g[e+40>>2];x=(z-p*i)*s+(y-n*i)*r+(A-k*i)*q+ +g[e+52>>2];w=(z-p*i)*o+(y-n*i)*m+(A-k*i)*j+ +g[e+56>>2];g[h+16>>2]=t*(A-k*i)+(v*(z-p*i)+u*(y-n*i))+ +g[e+48>>2];g[h+16+4>>2]=x;g[h+16+8>>2]=w;g[h+16+12>>2]=0.0;g[h>>2]=v*p+u*n+t*k;g[h+4>>2]=p*s+n*r+k*q;g[h+8>>2]=p*o+n*m+k*j;g[h+12>>2]=0.0;Ub[c[(c[f>>2]|0)+16>>2]&15](f,h,h+16|0,i);l=h;return}else{N=c[b+4>>2]|0;a[N+312>>0]=0;c[N>>2]=0;a[N+356>>0]=1;c[N+292>>2]=1566444395;c[N+296>>2]=1566444395;c[N+300>>2]=1566444395;g[N+304>>2]=0.0;c[N+336>>2]=0;c[N+336+4>>2]=0;c[N+336+8>>2]=0;c[N+336+12>>2]=0;a[N+336+16>>0]=0;a[N+332>>0]=a[N+332>>0]&-16;N=c[b+12>>2]|0;M=c[b+16>>2]|0;L=c[N+4>>2]|0;K=c[M+4>>2]|0;I=+Db[c[(c[N>>2]|0)+48>>2]&15](N);O=c[b+16>>2]|0;J=+Db[c[(c[O>>2]|0)+48>>2]&15](O);O=c[b+4>>2]|0;b=c[b+8>>2]|0;c[h+152>>2]=9332;c[h+152+4>>2]=0;c[h+152+8>>2]=1065353216;c[h+152+12>>2]=0;g[h+152+16>>2]=0.0;c[h+152+20>>2]=b;c[h+152+24>>2]=O;c[h+152+28>>2]=N;c[h+152+32>>2]=M;c[h+152+36>>2]=L;c[h+152+40>>2]=K;g[h+152+44>>2]=I;g[h+152+48>>2]=J;a[h+152+52>>0]=0;c[h+152+60>>2]=-1;c[h+152+72>>2]=1;c[h+152+76>>2]=1;g[h+16+128>>2]=999999984306749440.0;c[h+16>>2]=c[d>>2];c[h+16+4>>2]=c[d+4>>2];c[h+16+8>>2]=c[d+8>>2];c[h+16+12>>2]=c[d+12>>2];c[h+16+16>>2]=c[d+16>>2];c[h+16+16+4>>2]=c[d+16+4>>2];c[h+16+16+8>>2]=c[d+16+8>>2];c[h+16+16+12>>2]=c[d+16+12>>2];c[h+16+32>>2]=c[d+32>>2];c[h+16+32+4>>2]=c[d+32+4>>2];c[h+16+32+8>>2]=c[d+32+8>>2];c[h+16+32+12>>2]=c[d+32+12>>2];c[h+16+48>>2]=c[d+48>>2];c[h+16+48+4>>2]=c[d+48+4>>2];c[h+16+48+8>>2]=c[d+48+8>>2];c[h+16+48+12>>2]=c[d+48+12>>2];c[h+16+64>>2]=c[e>>2];c[h+16+64+4>>2]=c[e+4>>2];c[h+16+64+8>>2]=c[e+8>>2];c[h+16+64+12>>2]=c[e+12>>2];c[h+16+80>>2]=c[e+16>>2];c[h+16+80+4>>2]=c[e+16+4>>2];c[h+16+80+8>>2]=c[e+16+8>>2];c[h+16+80+12>>2]=c[e+16+12>>2];c[h+16+96>>2]=c[e+32>>2];c[h+16+96+4>>2]=c[e+32+4>>2];c[h+16+96+8>>2]=c[e+32+8>>2];c[h+16+96+12>>2]=c[e+32+12>>2];c[h+16+112>>2]=c[e+48>>2];c[h+16+112+4>>2]=c[e+48+4>>2];c[h+16+112+8>>2]=c[e+48+8>>2];c[h+16+112+12>>2]=c[e+48+12>>2];Fc(h+152|0,h+16|0,f,0,0);l=h;return}}
function _b(d,f){d=d|0;f=f|0;var h=0,i=0,k=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0,H=0.0,I=0,J=0,K=0,L=0.0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0.0,ja=0.0,ka=0,la=0;ha=l;l=l+192|0;i=c[d+52>>2]|0;if(i|0?(lb[c[c[i>>2]>>2]&511](i),h=c[d+52>>2]|0,h|0):0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[6436]=(c[6436]|0)+1;h=ic(151)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}c[h>>2]=9476;a[h+20>>0]=1;c[h+16>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;a[h+40>>0]=1;c[h+36>>2]=0;c[h+28>>2]=0;c[h+32>>2]=0;a[h+60>>0]=1;c[h+56>>2]=0;c[h+48>>2]=0;c[h+52>>2]=0;c[d+52>>2]=h;n=0;o=0;ga=0;K=0;h=0;while(1){if((n|0)>=(pb[c[(c[d>>2]|0)+96>>2]&127](d)|0))break;do if((K|0)==(o|0)){i=o|0?o<<1:1;if((o|0)<(i|0)){if((i|0)!=0?(c[6436]=(c[6436]|0)+1,p=ic((i<<4|3)+16|0)|0,(p|0)!=0):0){c[(p+4+15&-16)+-4>>2]=p;k=p+4+15&-16;}else k=0;if((o|0)<=0){if(!ga){m=k;h=k;k=o;break}}else{h=0;do{fa=k+(h<<4)|0;ea=ga+(h<<4)|0;c[fa>>2]=c[ea>>2];c[fa+4>>2]=c[ea+4>>2];c[fa+8>>2]=c[ea+8>>2];c[fa+12>>2]=c[ea+12>>2];h=h+1|0;}while((h|0)!=(o|0))}c[6437]=(c[6437]|0)+1;Tc(c[ga+-4>>2]|0);m=k;h=k;k=o;}else{i=o;m=ga;k=o;}}else{i=o;m=ga;k=K;}while(0);o=m+(K<<4)|0;c[o>>2]=c[ha+136>>2];c[o+4>>2]=c[ha+136+4>>2];c[o+8>>2]=c[ha+136+8>>2];c[o+12>>2]=c[ha+136+12>>2];Vb[c[(c[d>>2]|0)+108>>2]&127](d,n,o);n=n+1|0;o=i;ga=m;K=k+1|0;}a[ha+76+16>>0]=1;fa=ha+76+12|0;c[fa>>2]=0;c[ha+76+4>>2]=0;c[ha+76+8>>2]=0;a[ha+76+36>>0]=1;ea=ha+76+32|0;c[ea>>2]=0;c[ha+76+24>>2]=0;c[ha+76+28>>2]=0;a[ha+76+56>>0]=1;da=ha+76+52|0;c[da>>2]=0;c[ha+76+44>>2]=0;c[ha+76+48>>2]=0;if(f){if((K|0)>0){J=0;i=0;k=0;m=0;while(1){h=J;J=J+1|0;if((J|0)<(K|0)){E=ga+(h<<4)|0;I=ga+(h<<4)+4|0;A=ga+(h<<4)+8|0;z=J;h=m;do{m=z;z=z+1|0;if((z|0)<(K|0)){x=ga+(m<<4)|0;y=ga+(m<<4)+4|0;w=ga+(m<<4)+8|0;f=z;do{D=+g[E>>2];v=+g[x>>2]-D;H=+g[I>>2];B=+g[y>>2]-H;L=+g[A>>2];C=+g[w>>2]-L;D=+g[ga+(f<<4)>>2]-D;H=+g[ga+(f<<4)+4>>2]-H;L=+g[ga+(f<<4)+8>>2]-L;q=1.0;p=0;while(1){t=(B*L-C*H)*q;u=(C*D-v*L)*q;r=(v*H-B*D)*q;a:do if(r*r+(t*t+u*u)>9.999999747378752e-05){s=1.0/+G(+(r*r+(t*t+u*u)));if((h|0)>0){m=0;do{if(t*s*+g[k+(m<<4)>>2]+u*s*+g[k+(m<<4)+4>>2]+r*s*+g[k+(m<<4)+8>>2]>.9990000128746033)break a;m=m+1|0;}while((m|0)<(h|0))}q=t*s*+g[E>>2]+u*s*+g[I>>2]+r*s*+g[A>>2];m=0;do{if(t*s*+g[ga+(m<<4)>>2]+u*s*+g[ga+(m<<4)+4>>2]+r*s*+g[ga+(m<<4)+8>>2]-q+-.009999999776482582>0.0)break a;m=m+1|0;}while((m|0)<(K|0));do if((h|0)==(i|0)){o=i|0?i<<1:1;if((i|0)<(o|0)){do if(!o)n=0;else{c[6436]=(c[6436]|0)+1;m=ic((o<<4|3)+16|0)|0;if(!m){n=0;break}c[(m+4+15&-16)+-4>>2]=m;n=m+4+15&-16;}while(0);if((i|0)<=0){if(!k){m=o;k=n;break}}else{m=0;do{aa=n+(m<<4)|0;$=k+(m<<4)|0;c[aa>>2]=c[$>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];m=m+1|0;}while((m|0)!=(i|0))}c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);m=o;k=n;}else m=i;}else{m=i;i=h;}while(0);g[k+(i<<4)>>2]=t*s;g[k+(i<<4)+4>>2]=u*s;g[k+(i<<4)+8>>2]=r*s;g[k+(i<<4)+12>>2]=-q;i=m;h=h+1|0;}while(0);p=p+1|0;if((p|0)==2)break;else q=-1.0;}f=f+1|0;}while((f|0)!=(K|0))}}while((z|0)!=(K|0))}else h=m;if((J|0)==(K|0)){f=h;break}else m=h;}if((f|0)>0){h=0;o=0;p=0;while(1){aa=k+(p<<4)|0;c[ha+136>>2]=c[aa>>2];c[ha+136+4>>2]=c[aa+4>>2];c[ha+136+8>>2]=c[aa+8>>2];q=+g[k+(p<<4)+12>>2];q=q-+Db[c[(c[d>>2]|0)+48>>2]&15](d);do if((p|0)==(h|0)){n=h|0?h<<1:1;if((h|0)<(n|0)){if((n|0)!=0?(c[6436]=(c[6436]|0)+1,M=ic((n<<4|3)+16|0)|0,(M|0)!=0):0){c[(M+4+15&-16)+-4>>2]=M;m=M+4+15&-16;}else m=0;if((h|0)<=0){if(!o)break}else{i=0;do{aa=m+(i<<4)|0;$=o+(i<<4)|0;c[aa>>2]=c[$>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];i=i+1|0;}while((i|0)!=(h|0))}c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);}else{n=h;m=o;}}else{n=h;m=o;h=p;}while(0);aa=m+(h<<4)|0;c[aa>>2]=c[ha+136>>2];c[aa+4>>2]=c[ha+136+4>>2];c[aa+8>>2]=c[ha+136+8>>2];g[m+(h<<4)+12>>2]=q;p=p+1|0;if((p|0)<(f|0)){h=n;o=m;}else break}if((p|0)>0){E=0;o=0;n=0;i=0;h=0;do{z=E;E=E+1|0;if((E|0)<(p|0)){A=E;do{y=A;A=A+1|0;if((A|0)<(p|0)){x=A;do{t=+g[m+(y<<4)+4>>2];q=+g[m+(x<<4)+8>>2];r=+g[m+(y<<4)+8>>2];u=+g[m+(x<<4)+4>>2];v=+g[m+(x<<4)>>2];B=+g[m+(y<<4)>>2];s=+g[m+(z<<4)+8>>2];C=+g[m+(z<<4)+4>>2];D=+g[m+(z<<4)>>2];b:do if((((u*B-t*v)*(u*B-t*v)+((t*q-r*u)*(t*q-r*u)+(r*v-q*B)*(r*v-q*B))>9.999999747378752e-05?(v*C-u*D)*(v*C-u*D)+((u*s-q*C)*(u*s-q*C)+(q*D-v*s)*(q*D-v*s))>9.999999747378752e-05:0)?(t*D-B*C)*(t*D-B*C)+((r*C-t*s)*(r*C-t*s)+(B*s-r*D)*(B*s-r*D))>9.999999747378752e-05:0)?(V=s*(u*B-t*v)+(C*(r*v-q*B)+(t*q-r*u)*D),+F(+V)>9.999999974752427e-07):0){ia=+g[m+(z<<4)+12>>2];L=+g[m+(y<<4)+12>>2];ja=+g[m+(x<<4)+12>>2];H=-1.0/V*((r*C-t*s)*ja+((t*q-r*u)*ia+(u*s-q*C)*L));r=-1.0/V*((B*s-r*D)*ja+((r*v-q*B)*ia+(q*D-v*s)*L));q=-1.0/V*((t*D-B*C)*ja+((u*B-t*v)*ia+(v*C-u*D)*L));f=0;do{if(+g[m+(f<<4)+12>>2]+(H*+g[m+(f<<4)>>2]+r*+g[m+(f<<4)+4>>2]+q*+g[m+(f<<4)+8>>2])+-.009999999776482582>0.0)break b;f=f+1|0;}while((f|0)<(p|0));do if((i|0)==(o|0)){w=o|0?o<<1:1;if((o|0)>=(w|0)){w=o;break}do if(!w)f=0;else{c[6436]=(c[6436]|0)+1;h=ic((w<<4|3)+16|0)|0;if(!h){f=0;break}c[(h+4+15&-16)+-4>>2]=h;f=h+4+15&-16;}while(0);if((o|0)<=0){if(!n){n=f;h=f;break}}else{h=0;do{aa=f+(h<<4)|0;$=n+(h<<4)|0;c[aa>>2]=c[$>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];h=h+1|0;}while((h|0)!=(o|0))}c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);n=f;h=f;}else{w=o;o=i;}while(0);g[n+(o<<4)>>2]=H;g[n+(o<<4)+4>>2]=r;g[n+(o<<4)+8>>2]=q;g[n+(o<<4)+12>>2]=0.0;o=w;i=i+1|0;}while(0);x=x+1|0;}while((x|0)!=(p|0))}}while((A|0)!=(p|0))}}while((E|0)!=(p|0))}else{n=0;i=0;h=0;}}else{n=0;m=0;i=0;h=0;}}else{n=0;m=0;k=0;i=0;h=0;}mc(ha+76|0,h,i);if(n|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}if(m|0){c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);}if(k|0){c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}}else mc(ha+76|0,h,K);I=c[ha+76+44>>2]|0;if((I|0)>0){c[6436]=(c[6436]|0)+1;h=ic((I<<4|3)+16|0)|0;if(!h)i=0;else{c[(h+4+15&-16)+-4>>2]=h;i=h+4+15&-16;}h=0;do{aa=i+(h<<4)|0;c[aa>>2]=c[ha+136>>2];c[aa+4>>2]=c[ha+136+4>>2];c[aa+8>>2]=c[ha+136+8>>2];c[aa+12>>2]=c[ha+136+12>>2];h=h+1|0;}while((h|0)!=(I|0));aa=i;_=i;}else{aa=0;_=0;}a[ha+56+16>>0]=1;$=ha+56+12|0;c[$>>2]=0;Z=ha+56+4|0;c[Z>>2]=0;c[ha+56+8>>2]=0;k=ha+136|0;n=k+19|0;do{a[k>>0]=0;k=k+1|0;}while((k|0)<(n|0));if((I|0)<0)Xa();if(I|0){xf(ha+56|0,I);i=c[$>>2]|0;h=0;do{a[i+(h*36|0)+16>>0]=1;k=i+(h*36|0)+4|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;k=i+(h*36|0)+20|0;m=ha+136+3|0;n=k+16|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0;}while((k|0)<(n|0));h=h+1|0;}while((h|0)!=(I|0))}c[Z>>2]=I;o=c[ha+76+4>>2]|0;n=c[d+52>>2]|0;m=c[n+8>>2]|0;if((m|0)<(o|0)){if((c[n+12>>2]|0)<(o|0)){if(!o){h=0;k=m;}else{c[6436]=(c[6436]|0)+1;h=ic((o<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}k=c[n+8>>2]|0;}if((k|0)>0){i=0;do{Y=h+(i<<4)|0;X=(c[n+16>>2]|0)+(i<<4)|0;c[Y>>2]=c[X>>2];c[Y+4>>2]=c[X+4>>2];c[Y+8>>2]=c[X+8>>2];c[Y+12>>2]=c[X+12>>2];i=i+1|0;}while((i|0)!=(k|0))}i=c[n+16>>2]|0;if(i|0){if(a[n+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[n+16>>2]=0;}a[n+20>>0]=1;c[n+16>>2]=h;c[n+12>>2]=o;i=n+16|0;}else i=n+16|0;h=m;do{Y=(c[i>>2]|0)+(h<<4)|0;c[Y>>2]=c[ha+136>>2];c[Y+4>>2]=c[ha+136+4>>2];c[Y+8>>2]=c[ha+136+8>>2];c[Y+12>>2]=c[ha+136+12>>2];h=h+1|0;}while((h|0)!=(o|0))}c[n+8>>2]=o;if((o|0)>0){h=0;do{X=(c[fa>>2]|0)+(h<<4)|0;Y=(c[(c[d+52>>2]|0)+16>>2]|0)+(h<<4)|0;c[Y>>2]=c[X>>2];c[Y+4>>2]=c[X+4>>2];c[Y+8>>2]=c[X+8>>2];c[Y+12>>2]=c[X+12>>2];h=h+1|0;}while((h|0)!=(o|0))}if((I|0)>0){E=0;do{z=(c[ea>>2]|0)+((c[(c[da>>2]|0)+(E<<2)>>2]|0)*12|0)|0;y=z;h=0;do{A=y+4|0;x=c[y+((c[A>>2]|0)*12|0)+8>>2]|0;f=c[$>>2]|0;w=f+(E*36|0)+4|0;i=c[w>>2]|0;p=f+(E*36|0)+8|0;if((i|0)==(c[p>>2]|0)?(N=i|0?i<<1:1,(i|0)<(N|0)):0){if(!N)o=0;else{c[6436]=(c[6436]|0)+1;i=ic((N<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}o=i;i=c[w>>2]|0;}n=f+(E*36|0)+12|0;m=c[n>>2]|0;if((i|0)<=0)if(!m)k=f+(E*36|0)+16|0;else ba=132;else{k=0;do{c[o+(k<<2)>>2]=c[m+(k<<2)>>2];k=k+1|0;}while((k|0)!=(i|0));ba=132;}if((ba|0)==132){ba=0;i=f+(E*36|0)+16|0;if(a[i>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);}c[n>>2]=0;k=i;i=c[w>>2]|0;}a[k>>0]=1;c[n>>2]=o;c[p>>2]=N;}c[(c[f+(E*36|0)+12>>2]|0)+(i<<2)>>2]=x;c[w>>2]=(c[w>>2]|0)+1;X=c[y+8>>2]|0;Y=c[fa>>2]|0;s=+g[Y+(X<<4)>>2]-+g[Y+(x<<4)>>2];t=+g[Y+(X<<4)+4>>2]-+g[Y+(x<<4)+4>>2];q=+g[Y+(X<<4)+8>>2]-+g[Y+(x<<4)+8>>2];r=1.0/+G(+(s*s+t*t+q*q));if((h|0)<2){g[ha+136+(h<<4)>>2]=s*r;g[ha+136+(h<<4)+4>>2]=t*r;g[ha+136+(h<<4)+8>>2]=q*r;g[ha+136+(h<<4)+12>>2]=0.0;h=h+1|0;}Y=y+((c[A>>2]|0)*12|0)|0;y=Y+((c[Y>>2]|0)*12|0)|0;}while((y|0)!=(z|0));if((h|0)==2){H=+g[ha+136+4>>2];L=+g[ha+136+24>>2];V=+g[ha+136+8>>2];ia=+g[ha+136+20>>2];D=+g[ha+136+16>>2];C=+g[ha+136>>2];X=aa+(E<<4)+4|0;Y=aa+(E<<4)+8|0;g[aa+(E<<4)+12>>2]=0.0;ja=1.0/+G(+((H*L-V*ia)*(H*L-V*ia)+(V*D-L*C)*(V*D-L*C)+(ia*C-H*D)*(ia*C-H*D)));g[aa+(E<<4)>>2]=(H*L-V*ia)*ja;g[X>>2]=(V*D-L*C)*ja;g[Y>>2]=(ia*C-H*D)*ja;n=c[$>>2]|0;g[n+(E*36|0)+20>>2]=(H*L-V*ia)*ja;c[n+(E*36|0)+24>>2]=c[X>>2];c[n+(E*36|0)+28>>2]=c[Y>>2];g[n+(E*36|0)+32>>2]=1000000015047466219876688.0e6;}else{n=aa+(E<<4)|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;n=c[$>>2]|0;}k=c[n+(E*36|0)+4>>2]|0;if((k|0)>0){m=c[(c[d+52>>2]|0)+16>>2]|0;r=+g[aa+(E<<4)>>2];s=+g[aa+(E<<4)+4>>2];t=+g[aa+(E<<4)+8>>2];i=c[n+(E*36|0)+12>>2]|0;h=0;q=1000000015047466219876688.0e6;do{Y=c[i+(h<<2)>>2]|0;ja=+g[m+(Y<<4)>>2]*r+ +g[m+(Y<<4)+4>>2]*s+ +g[m+(Y<<4)+8>>2]*t;q=q>ja?ja:q;h=h+1|0;}while((h|0)!=(k|0))}else q=1000000015047466219876688.0e6;g[n+(E*36|0)+32>>2]=-q;E=E+1|0;}while((E|0)!=(I|0))}if((c[Z>>2]|0)>0){i=0;m=0;k=0;n=0;o=0;while(1){do if((o|0)==(i|0)){i=o|0?o<<1:1;if((o|0)<(i|0)){if((i|0)!=0?(c[6436]=(c[6436]|0)+1,O=ic((i<<2|3)+16|0)|0,(O|0)!=0):0){c[(O+4+15&-16)+-4>>2]=O;k=O+4+15&-16;}else k=0;if((o|0)>0){h=0;do{c[k+(h<<2)>>2]=c[m+(h<<2)>>2];h=h+1|0;}while((h|0)!=(o|0));if(!n){m=k;Y=k;h=k;break}}else if((m|0)==0|(n|0)==0){m=k;Y=k;h=k;break}c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);m=k;Y=k;h=k;}else{i=o;Y=k;h=n;}}else{Y=k;h=n;}while(0);c[m+(o<<2)>>2]=o;o=o+1|0;if((o|0)>=(c[Z>>2]|0))break;else{k=Y;n=h;}}M=ha+36+12|0;N=ha+36+4|0;O=ha+136+12|0;k=o;while(1){w=k+-1|0;i=c[m+(w<<2)>>2]|0;c[6436]=(c[6436]|0)+1;h=ic(23)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}c[h>>2]=i;X=c[$>>2]|0;r=+g[X+(i*36|0)+20>>2];s=+g[X+(i*36|0)+24>>2];q=+g[X+(i*36|0)+28>>2];c:do if((k|0)>1){o=w;i=h;f=h;n=1;p=h;h=1;y=w;while(1){k=n;z=h;d:while(1){h=c[$>>2]|0;do{X=o;o=o+-1|0;if((X|0)<=0){K=i;J=p;I=z;k=y;break c}w=c[m+(o<<2)>>2]|0;}while(!(r*+g[h+(w*36|0)+20>>2]+s*+g[h+(w*36|0)+24>>2]+q*+g[h+(w*36|0)+28>>2]>.9990000128746033));do if((z|0)==(k|0)){k=z|0?z<<1:1;if((z|0)<(k|0)){do if(!k)n=0;else{c[6436]=(c[6436]|0)+1;h=ic((k<<2|3)+16|0)|0;if(!h){n=0;break}c[(h+4+15&-16)+-4>>2]=h;n=h+4+15&-16;}while(0);if((z|0)>0){h=0;do{c[n+(h<<2)>>2]=c[p+(h<<2)>>2];h=h+1|0;}while((h|0)!=(z|0));if(!f){x=k;p=n;i=n;f=n;break}}else if((p|0)==0|(f|0)==0){x=k;p=n;i=n;f=n;break}c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);x=k;p=n;i=n;f=n;}else x=z;}else x=k;while(0);c[p+(z<<2)>>2]=w;z=z+1|0;h=0;while(1){n=m+(h<<2)|0;if((c[n>>2]|0)==(w|0))break;h=h+1|0;if((h|0)>=(y|0)){k=x;continue d}}if((h|0)<(y|0))break;else k=x;}k=y+-1|0;X=m+(k<<2)|0;c[n>>2]=c[X>>2];c[X>>2]=w;if((y|0)>1){n=x;h=z;y=k;}else{n=x;h=z;ba=162;break}}}else{o=w;i=h;f=h;n=1;p=h;h=1;k=w;ba=162;}while(0);e:do if((ba|0)==162){ba=0;y=h;while(1){h=c[$>>2]|0;w=o;do{X=w;w=w+-1|0;if((X|0)<=0){K=i;J=p;I=y;break e}x=c[m+(w<<2)>>2]|0;}while(!(r*+g[h+(x*36|0)+20>>2]+s*+g[h+(x*36|0)+24>>2]+q*+g[h+(x*36|0)+28>>2]>.9990000128746033));do if((y|0)==(n|0)){n=y|0?y<<1:1;if((y|0)<(n|0)){do if(!n)o=0;else{c[6436]=(c[6436]|0)+1;h=ic((n<<2|3)+16|0)|0;if(!h){o=0;break}c[(h+4+15&-16)+-4>>2]=h;o=h+4+15&-16;}while(0);if((y|0)>0){h=0;do{c[o+(h<<2)>>2]=c[p+(h<<2)>>2];h=h+1|0;}while((h|0)!=(y|0));if(!f){p=o;i=o;h=o;break}}else if((p|0)==0|(f|0)==0){p=o;i=o;h=o;break}c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);p=o;i=o;h=o;}else{n=y;h=f;}}else h=f;while(0);c[p+(y<<2)>>2]=x;o=w;f=h;y=y+1|0;}}while(0);if((I|0)>1){a[ha+36+16>>0]=1;c[M>>2]=0;c[N>>2]=0;c[ha+36+8>>2]=0;z=0;q=0.0;r=0.0;s=0.0;n=0;do{i=c[J+(z<<2)>>2]|0;q=+g[h+(i*36|0)+20>>2]+q;r=+g[h+(i*36|0)+24>>2]+r;s=+g[h+(i*36|0)+28>>2]+s;y=h+(i*36|0)+4|0;if((c[y>>2]|0)>0){x=h+(i*36|0)+12|0;w=0;h=n;while(1){f=c[(c[x>>2]|0)+(w<<2)>>2]|0;X=(c[(c[d+52>>2]|0)+16>>2]|0)+(f<<4)|0;c[ha+136>>2]=c[X>>2];c[ha+136+4>>2]=c[X+4>>2];c[ha+136+8>>2]=c[X+8>>2];c[ha+136+12>>2]=c[X+12>>2];f:do if((h|0)>0){n=c[M>>2]|0;i=0;while(1){if((c[n+(i*24|0)+20>>2]|0)==(f|0))break f;i=i+1|0;if((i|0)>=(h|0)){ba=249;break}}}else ba=249;while(0);if((ba|0)==249){ba=0;c[ha>>2]=c[ha+136>>2];c[ha+4>>2]=c[ha+136+4>>2];c[ha+8>>2]=c[ha+136+8>>2];c[ha+12>>2]=c[ha+136+12>>2];do if((h|0)==(c[ha+36+8>>2]|0)){p=h|0?h<<1:1;if((h|0)>=(p|0))break;if(!p)o=0;else{c[6436]=(c[6436]|0)+1;h=ic((p*24|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}o=h;h=c[N>>2]|0;}n=c[M>>2]|0;if((h|0)<=0){if(n)ba=258;}else{i=0;do{ba=o+(i*24|0)|0;X=n+(i*24|0)|0;c[ba>>2]=c[X>>2];c[ba+4>>2]=c[X+4>>2];c[ba+8>>2]=c[X+8>>2];c[ba+12>>2]=c[X+12>>2];c[ba+16>>2]=c[X+16>>2];c[ba+20>>2]=c[X+20>>2];i=i+1|0;}while((i|0)!=(h|0));ba=258;}if((ba|0)==258){ba=0;if(a[ha+36+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);h=c[N>>2]|0;}c[M>>2]=0;}a[ha+36+16>>0]=1;c[M>>2]=o;c[ha+36+8>>2]=p;}while(0);X=c[M>>2]|0;W=X+(h*24|0)|0;c[W>>2]=c[ha>>2];c[W+4>>2]=c[ha+4>>2];c[W+8>>2]=c[ha+8>>2];c[W+12>>2]=c[ha+12>>2];c[W+16>>2]=c[ha+16>>2];c[X+(h*24|0)+20>>2]=f;h=(c[N>>2]|0)+1|0;c[N>>2]=h;}w=w+1|0;if((w|0)>=(c[y>>2]|0)){n=h;break}}}z=z+1|0;h=c[$>>2]|0;}while((z|0)!=(I|0));a[ha+16>>0]=1;c[ha+12>>2]=0;c[ha+4>>2]=0;c[ha+8>>2]=0;X=c[J>>2]|0;c[ha+20>>2]=c[h+(X*36|0)+20>>2];c[ha+24>>2]=c[h+(X*36|0)+24>>2];c[ha+28>>2]=c[h+(X*36|0)+28>>2];c[ha+32>>2]=c[h+(X*36|0)+32>>2];u=1.0/+G(+(q*q+r*r+s*s));B=q*u;v=r*u;u=s*u;if(+F(+u)>.7071067690849304){t=1.0/+G(+(u*u+v*v));r=0.0;s=v*t;t=-(u*t);}else{t=1.0/+G(+(B*B+v*v));r=-(v*t);s=0.0;t=B*t;}if((n|0)<2)if((n|0)==1){n=0;o=0;f=0;i=1;while(1){w=c[M>>2]|0;do if((n|0)==(o|0)){p=o|0?o<<1:1;if((o|0)>=(p|0)){p=o;h=f;break}do if(!p)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((p*24|3)+16|0)|0;if(!h){h=0;o=n;break}c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;o=n;}while(0);if((o|0)<=0){if(f|0)ba=212;}else{i=0;do{ba=h+(i*24|0)|0;X=f+(i*24|0)|0;c[ba>>2]=c[X>>2];c[ba+4>>2]=c[X+4>>2];c[ba+8>>2]=c[X+8>>2];c[ba+12>>2]=c[X+12>>2];c[ba+16>>2]=c[X+16>>2];c[ba+20>>2]=c[X+20>>2];i=i+1|0;}while((i|0)!=(o|0));ba=212;}if((ba|0)==212){ba=0;c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}o=n;i=c[N>>2]|0;}else{p=o;h=f;o=n;}while(0);X=h+(o*24|0)|0;c[X>>2]=c[w>>2];c[X+4>>2]=c[w+4>>2];c[X+8>>2]=c[w+8>>2];c[X+12>>2]=c[w+12>>2];c[X+16>>2]=c[w+16>>2];c[X+20>>2]=c[w+20>>2];n=n+1|0;if((n|0)<(i|0)){o=p;f=h;}else{ba=264;break}}}else{h=0;ba=303;}else{p=c[M>>2]|0;i=0;h=n;while(1){if(r*+g[p+(i*24|0)>>2]+t*+g[p+(i*24|0)+4>>2]+s*+g[p+(i*24|0)+8>>2]<r*+g[p>>2]+t*+g[p+4>>2]+s*+g[p+8>>2]){c[ha+136>>2]=c[p>>2];c[ha+136+4>>2]=c[p+4>>2];c[ha+136+8>>2]=c[p+8>>2];c[ha+136+12>>2]=c[p+12>>2];c[ha+136+16>>2]=c[p+16>>2];c[ha+136+20>>2]=c[p+20>>2];o=p+(i*24|0)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];c[p+16>>2]=c[o+16>>2];c[p+20>>2]=c[o+20>>2];o=p+(i*24|0)|0;c[o>>2]=c[ha+136>>2];c[o+4>>2]=c[ha+136+4>>2];c[o+8>>2]=c[ha+136+8>>2];c[o+12>>2]=c[ha+136+12>>2];c[o+16>>2]=c[ha+136+16>>2];c[o+20>>2]=c[ha+136+20>>2];o=n;}else o=h;i=i+1|0;if((i|0)>=(o|0))break;else h=o;}g[p+16>>2]=-1000000015047466219876688.0e6;if((o|0)>1){q=+g[p+4>>2];h=1;do{V=+g[p+(h*24|0)>>2]-+g[p>>2];ia=+g[p+(h*24|0)+4>>2]-q;ja=+g[p+(h*24|0)+8>>2]-+g[p+8>>2];g[p+(h*24|0)+16>>2]=((r*ia-t*V)*u+(B*(t*ja-s*ia)+v*(s*V-r*ja)))/+G(+(V*V+ia*ia+ja*ja));h=h+1|0;}while((h|0)!=(o|0))}c[ha+136>>2]=c[p>>2];c[ha+136+4>>2]=c[p+4>>2];c[ha+136+8>>2]=c[p+8>>2];c[ha+136+12>>2]=c[p+12>>2];gf(ha+36|0,ha+136|0,1,o+-1|0);i=c[M>>2]|0;c[6436]=(c[6436]|0)+1;h=ic(43)|0;if(!h)n=0;else{c[(h+4+15&-16)+-4>>2]=h;n=h+4+15&-16;}o=c[M>>2]|0;c[n>>2]=c[i>>2];c[n+4>>2]=c[i+4>>2];c[n+8>>2]=c[i+8>>2];c[n+12>>2]=c[i+12>>2];c[n+16>>2]=c[i+16>>2];c[n+20>>2]=c[i+20>>2];c[6436]=(c[6436]|0)+1;h=ic(67)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}c[h>>2]=c[n>>2];c[h+4>>2]=c[n+4>>2];c[h+8>>2]=c[n+8>>2];c[h+12>>2]=c[n+12>>2];c[h+16>>2]=c[n+16>>2];c[h+20>>2]=c[n+20>>2];if(n|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}i=h+24|0;c[i>>2]=c[o+24>>2];c[i+4>>2]=c[o+24+4>>2];c[i+8>>2]=c[o+24+8>>2];c[i+12>>2]=c[o+24+12>>2];c[i+16>>2]=c[o+24+16>>2];c[i+20>>2]=c[o+24+20>>2];i=c[N>>2]|0;if((i|0)==2){i=2;n=2;}else{x=2;n=2;w=2;o=2;while(1){g:do if((o|0)>1){ba=c[M>>2]|0;f=ba+(x*24|0)|0;q=+g[f>>2];r=+g[ba+(x*24|0)+4>>2];s=+g[ba+(x*24|0)+8>>2];while(1){ba=o+-2|0;p=o+-1|0;V=+g[h+(ba*24|0)>>2];ia=V-+g[h+(p*24|0)>>2];H=+g[h+(ba*24|0)+4>>2];D=H-+g[h+(p*24|0)+4>>2];ja=+g[h+(ba*24|0)+8>>2];L=ja-+g[h+(p*24|0)+8>>2];if((ia*(H-r)-D*(V-q))*u+(B*(D*(ja-s)-L*(H-r))+v*(L*(V-q)-ia*(ja-s)))>0.0)break;if((p|0)>1){n=p;o=p;}else{n=p;p=w;o=1;break g}}do if((o|0)==(w|0)){p=w<<1;if((w|0)>=(p|0)){p=w;o=w;break}c[6436]=(c[6436]|0)+1;i=ic((w*48|3)+16|0)|0;if(!i)o=0;else{c[(i+4+15&-16)+-4>>2]=i;o=i+4+15&-16;}if((n|0)>0){i=0;do{ba=o+(i*24|0)|0;X=h+(i*24|0)|0;c[ba>>2]=c[X>>2];c[ba+4>>2]=c[X+4>>2];c[ba+8>>2]=c[X+8>>2];c[ba+12>>2]=c[X+12>>2];c[ba+16>>2]=c[X+16>>2];c[ba+20>>2]=c[X+20>>2];i=i+1|0;}while((i|0)!=(n|0))}c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);i=c[N>>2]|0;h=o;o=n;}else p=w;while(0);o=h+(o*24|0)|0;c[o>>2]=c[f>>2];c[o+4>>2]=c[f+4>>2];c[o+8>>2]=c[f+8>>2];c[o+12>>2]=c[f+12>>2];c[o+16>>2]=c[f+16>>2];c[o+20>>2]=c[f+20>>2];o=n+1|0;n=o;}else p=w;while(0);x=x+1|0;if((x|0)==(i|0))break;else w=p;}}ba=264;}h:do if((ba|0)==264){ba=0;if((n|0)>0){E=0;o=c[ha+4>>2]|0;i=c[ha+8>>2]|0;w=a[ha+16>>0]|0;while(1){A=h+(E*24|0)+20|0;do if((o|0)==(i|0)){y=i|0?i<<1:1;if((i|0)>=(y|0)){z=w;o=i;y=i;break}do if(!y)f=0;else{c[6436]=(c[6436]|0)+1;o=ic((y<<2|3)+16|0)|0;if(!o){f=0;break}c[(o+4+15&-16)+-4>>2]=o;f=o+4+15&-16;}while(0);p=c[ha+12>>2]|0;if((i|0)<=0){if(p)ba=293;}else{o=0;do{c[f+(o<<2)>>2]=c[p+(o<<2)>>2];o=o+1|0;}while((o|0)!=(i|0));ba=293;}if((ba|0)==293){ba=0;if(w<<24>>24){c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);}c[ha+12>>2]=0;i=c[ha+4>>2]|0;}c[ha+12>>2]=f;c[ha+8>>2]=y;z=1;o=i;}else{z=w;y=i;}while(0);c[(c[ha+12>>2]|0)+(o<<2)>>2]=c[A>>2];o=o+1|0;c[ha+4>>2]=o;i=c[N>>2]|0;i:do if((i|0)>0){x=c[M>>2]|0;f=c[A>>2]|0;p=0;while(1){w=x+(p*24|0)+20|0;p=p+1|0;if((c[w>>2]|0)==(f|0))break;if((p|0)>=(i|0))break i}c[w>>2]=-1;}while(0);E=E+1|0;if((E|0)>=(n|0))break;else{i=y;w=z;}}a[ha+16>>0]=z;}if((i|0)<=0){ba=303;break}x=c[M>>2]|0;y=c[Z>>2]|0;z=c[$>>2]|0;A=(I|0)>0;if((y|0)>0)w=0;else{ba=303;break}while(1){E=c[x+(w*24|0)+20>>2]|0;j:do if((E|0)!=-1){if(A)f=0;else{o=0;while(1){p=c[z+(o*36|0)+4>>2]|0;if((p|0)>0){f=c[z+(o*36|0)+12>>2]|0;n=0;do{if((c[f+(n<<2)>>2]|0)==(E|0)){i=1;break h}n=n+1|0;}while((n|0)<(p|0))}o=o+1|0;if((o|0)>=(y|0))break j}}do{n=0;while(1){if((c[J+(n<<2)>>2]|0)==(f|0))break;n=n+1|0;if((n|0)>=(I|0)){ba=279;break}}do if((ba|0)==279){ba=0;o=c[z+(f*36|0)+4>>2]|0;if((o|0)<=0)break;p=c[z+(f*36|0)+12>>2]|0;n=0;do{if((c[p+(n<<2)>>2]|0)==(E|0)){i=1;break h}n=n+1|0;}while((n|0)<(o|0))}while(0);f=f+1|0;}while((f|0)<(y|0))}while(0);w=w+1|0;if((w|0)>=(i|0)){ba=303;break}}}while(0);if((ba|0)==303){ba=0;Tg((c[d+52>>2]|0)+24|0,ha);i=0;}if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}h=c[ha+12>>2]|0;if(h|0){if(a[ha+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[ha+12>>2]=0;}h=c[M>>2]|0;if(h|0){if(a[ha+36+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[M>>2]=0;}if(i&(I|0)>0){p=0;ba=315;}}else if((I|0)==1){p=0;ba=315;}if((ba|0)==315)while(1){ba=0;f=c[J+(p<<2)>>2]|0;w=c[$>>2]|0;a[ha+136+16>>0]=1;c[O>>2]=0;c[ha+136+4>>2]=0;c[ha+136+8>>2]=0;o=c[w+(f*36|0)+4>>2]|0;if((o|0)>0){c[6436]=(c[6436]|0)+1;i=ic((o<<2|3)+16|0)|0;do if(!i){h=0;n=0;}else{c[(i+4+15&-16)+-4>>2]=i;h=c[O>>2]|0;if((h|0)==0|(a[ha+136+16>>0]|0)==0){h=i+4+15&-16;n=i+4+15&-16;break}c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);h=i+4+15&-16;n=i+4+15&-16;}while(0);a[ha+136+16>>0]=1;c[O>>2]=h;c[ha+136+8>>2]=o;Ik(h|0,0,o<<2|0)|0;c[ha+136+4>>2]=o;i=c[w+(f*36|0)+12>>2]|0;h=0;do{c[n+(h<<2)>>2]=c[i+(h<<2)>>2];h=h+1|0;}while((h|0)!=(o|0));h=c[O>>2]|0;}else{c[ha+136+4>>2]=o;h=0;}c[ha+136+20>>2]=c[w+(f*36|0)+20>>2];c[ha+136+20+4>>2]=c[w+(f*36|0)+20+4>>2];c[ha+136+20+8>>2]=c[w+(f*36|0)+20+8>>2];c[ha+136+20+12>>2]=c[w+(f*36|0)+20+12>>2];Tg((c[d+52>>2]|0)+24|0,ha+136|0);if(h|0){if(a[ha+136+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[O>>2]=0;}p=p+1|0;if((p|0)>=(I|0))break;else ba=315;}if(!((J|0)==0|(K|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[K+-4>>2]|0);}if(!k)break}}else{Y=0;m=0;}X=c[d+52>>2]|0;c[X+64>>2]=0;c[X+64+4>>2]=0;c[X+64+8>>2]=0;c[X+64+12>>2]=0;h=c[X+28>>2]|0;if((h|0)>0){W=0;i=0;k=0;I=0;K=0;f=0;n=0;J=0;w=0;o=0;E=0;z=0;x=0;y=0;p=0;while(1){A=c[X+36>>2]|0;U=c[A+(W*36|0)+4>>2]|0;if((U|0)>0){T=W&65535;S=W|-65536;N=0;R=J;O=w;h=A;M=p;while(1){Q=N+1|0;d=c[h+(W*36|0)+12>>2]|0;w=c[d+(N<<2)>>2]&65535;N=c[d+(((Q|0)==(U|0)?0:Q)<<2)>>2]&65535;d=N<<16>>16>w<<16>>16?w:N;P=N<<16>>16>w<<16>>16?N:w;p=N<<16>>16>w<<16>>16?w:N;w=N<<16>>16>w<<16>>16?N:w;N=O+-1|0;k:do if((((p&65535)<<16)+(w<<16>>16)&N)>>>0<I>>>0?(ca=c[k+((((p&65535)<<16)+(w<<16>>16)&N)<<2)>>2]|0,(ca|0)!=-1):0){h=ca;while(1){if(w<<16>>16==(b[i+(h<<2)>>1]|0)?p<<16>>16==(b[i+(h<<2)+2>>1]|0):0)break;h=c[n+(h<<2)>>2]|0;if((h|0)==-1){J=0;break k}}J=o+(h<<2)|0;}else J=0;while(0);h=c[X+16>>2]|0;u=+g[h+(p<<16>>16<<4)>>2]-+g[h+(w<<16>>16<<4)>>2];v=+g[h+(p<<16>>16<<4)+4>>2]-+g[h+(w<<16>>16<<4)+4>>2];s=+g[h+(p<<16>>16<<4)+8>>2]-+g[h+(w<<16>>16<<4)+8>>2];t=1.0/+G(+(u*u+v*v+s*s));h=c[X+48>>2]|0;l:do if((h|0)>0){w=c[X+56>>2]|0;p=0;while(1){q=+g[w+(p<<4)>>2];r=+g[w+(p<<4)+8>>2];do if(!(+F(+(q-u*t))>1.0e-06)){if(+F(+(+g[w+(p<<4)+4>>2]-v*t))>1.0e-06)break;if(!(+F(+(r-s*t))>1.0e-06))break l}while(0);do if(!(+F(+(u*t+q))>1.0e-06)){if(+F(+(v*t+ +g[w+(p<<4)+4>>2]))>1.0e-06)break;if(!(+F(+(s*t+r))>1.0e-06))break l}while(0);p=p+1|0;if((p|0)>=(h|0)){ba=355;break}}}else ba=355;while(0);if((ba|0)==355){ba=0;do if((h|0)==(c[X+52>>2]|0)){A=h|0?h<<1:1;if((h|0)>=(A|0))break;if(!A)w=0;else{c[6436]=(c[6436]|0)+1;h=ic((A<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}w=h;h=c[X+48>>2]|0;}if((h|0)>0){p=0;do{ka=w+(p<<4)|0;la=(c[X+56>>2]|0)+(p<<4)|0;c[ka>>2]=c[la>>2];c[ka+4>>2]=c[la+4>>2];c[ka+8>>2]=c[la+8>>2];c[ka+12>>2]=c[la+12>>2];p=p+1|0;}while((p|0)!=(h|0))}h=c[X+56>>2]|0;if(h|0){if(a[X+60>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[X+56>>2]=0;}a[X+60>>0]=1;c[X+56>>2]=w;c[X+52>>2]=A;h=c[X+48>>2]|0;}while(0);la=c[X+56>>2]|0;g[la+(h<<4)>>2]=u*t;g[la+(h<<4)+4>>2]=v*t;g[la+(h<<4)+8>>2]=s*t;g[la+(h<<4)+12>>2]=0.0;c[X+48>>2]=(c[X+48>>2]|0)+1;}m:do if(!J){J=((d&65535)<<16)+(P<<16>>16)&N;n:do if(J>>>0<I>>>0){h=c[k+(J<<2)>>2]|0;if((h|0)==-1)break;while(1){if(P<<16>>16==(b[i+(h<<2)>>1]|0)?d<<16>>16==(b[i+(h<<2)+2>>1]|0):0)break;h=c[n+(h<<2)>>2]|0;if((h|0)==-1)break n}A=o+(h<<2)|0;b[A>>1]=S;b[A+2>>1]=S>>>16;A=K;J=R;w=O;h=z;p=M;break m}while(0);do if((R|0)==(O|0)){w=R|0?R<<1:1;if((R|0)>=(w|0)){w=R;break}do if(!w)p=0;else{c[6436]=(c[6436]|0)+1;h=ic((w<<2|3)+16|0)|0;if(!h){p=0;break}c[(h+4+15&-16)+-4>>2]=h;p=h+4+15&-16;}while(0);if((R|0)<=0){if(!o){o=p;break}}else{h=0;do{la=p+(h<<2)|0;ka=o+(h<<2)|0;ka=e[ka>>1]|e[ka+2>>1]<<16;b[la>>1]=ka;b[la+2>>1]=ka>>>16;h=h+1|0;}while((h|0)!=(R|0))}c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);o=p;}else w=O;while(0);N=o+(R<<2)|0;b[N>>1]=S;b[N+2>>1]=S>>>16;N=R+1|0;do if((E|0)==(x|0)){x=E|0?E<<1:1;if((E|0)>=(x|0)){x=E;break}do if(!x)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((x<<2|3)+16|0)|0;if(!h){h=0;break}c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}while(0);if((E|0)<=0){if(!i){i=h;break}}else{p=0;do{la=h+(p<<2)|0;ka=i+(p<<2)|0;ka=e[ka>>1]|e[ka+2>>1]<<16;b[la>>1]=ka;b[la+2>>1]=ka>>>16;p=p+1|0;}while((p|0)!=(E|0))}c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);i=h;}while(0);la=i+(E<<2)|0;b[la>>1]=(d&65535)<<16|P&65535;b[la+2>>1]=((d&65535)<<16|P&65535)>>>16;E=E+1|0;if((O|0)<(w|0)){do if((I|0)<(w|0)){do if((z|0)<(w|0)){do if(!w)p=0;else{c[6436]=(c[6436]|0)+1;h=ic((w<<2|3)+16|0)|0;if(!h){p=0;break}c[(h+4+15&-16)+-4>>2]=h;p=h+4+15&-16;}while(0);if((I|0)<=0){if(!k){k=p;J=w;M=p;break}}else{h=0;do{c[p+(h<<2)>>2]=c[k+(h<<2)>>2];h=h+1|0;}while((h|0)!=(I|0))}c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);k=p;J=w;M=p;}else J=z;while(0);z=w<<2;Ik(k+(I<<2)|0,0,z-(I<<2)|0)|0;if((K|0)<(w|0)){do if((f|0)<(w|0)){do if(!w)p=0;else{c[6436]=(c[6436]|0)+1;h=ic((z|3)+16|0)|0;if(!h){p=0;break}c[(h+4+15&-16)+-4>>2]=h;p=h+4+15&-16;}while(0);if((K|0)<=0){if(!n){f=w;n=p;h=p;break}}else{h=0;do{c[p+(h<<2)>>2]=c[n+(h<<2)>>2];h=h+1|0;}while((h|0)!=(K|0))}c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);f=w;n=p;h=p;}else h=y;while(0);Ik(n+(K<<2)|0,0,z-(K<<2)|0)|0;y=h;}if((w|0)>0){Ik(M|0,-1,z|0)|0;Ik(y|0,-1,z|0)|0;}if((I|0)<=0){I=w;A=w;h=J;p=M;break}p=w+-1|0;h=0;do{la=k+(((e[i+(h<<2)+2>>1]<<16)+(b[i+(h<<2)>>1]|0)&p)<<2)|0;c[n+(h<<2)>>2]=c[la>>2];c[la>>2]=h;h=h+1|0;}while((h|0)!=(I|0));I=w;A=w;h=J;p=M;}else{A=K;h=z;p=M;}while(0);J=((d&65535)<<16)+(P<<16>>16)&w+-1;}else{A=K;h=z;p=M;}J=k+(J<<2)|0;c[n+(R<<2)>>2]=c[J>>2];c[J>>2]=R;J=N;}else{b[J+2>>1]=T;A=K;J=R;w=O;h=z;p=M;}while(0);if((Q|0)>=(U|0))break;N=Q;K=A;R=J;O=w;z=h;h=c[X+36>>2]|0;M=p;}z=h;h=c[X+28>>2]|0;}else A=K;W=W+1|0;if((W|0)>=(h|0))break;else K=A;}if((h|0)>0){z=c[X+36>>2]|0;A=c[X+16>>2]|0;y=0;q=0.0;do{f=c[z+(y*36|0)+4>>2]|0;w=c[z+(y*36|0)+12>>2]|0;x=c[w>>2]|0;if((f+-2|0)>=1){p=1;r=+g[X+64>>2];s=+g[X+68>>2];t=+g[X+72>>2];do{ka=c[w+(p<<2)>>2]|0;p=p+1|0;la=c[w+(((p|0)%(f|0)|0)<<2)>>2]|0;u=+g[A+(x<<4)>>2];v=+g[A+(ka<<4)>>2];C=+g[A+(x<<4)+4>>2];D=+g[A+(ka<<4)+4>>2];L=+g[A+(x<<4)+8>>2];V=+g[A+(ka<<4)+8>>2];B=+g[A+(la<<4)>>2];H=+g[A+(la<<4)+4>>2];ia=+g[A+(la<<4)+8>>2];ja=+G(+(((u-v)*(C-H)-(C-D)*(u-B))*((u-v)*(C-H)-(C-D)*(u-B))+(((C-D)*(L-ia)-(L-V)*(C-H))*((C-D)*(L-ia)-(L-V)*(C-H))+((L-V)*(u-B)-(u-v)*(L-ia))*((L-V)*(u-B)-(u-v)*(L-ia)))))*.5;r=r+(u+v+B)*.3333333432674408*ja;g[X+64>>2]=r;s=(C+D+H)*.3333333432674408*ja+s;g[X+68>>2]=s;t=ja*(L+V+ia)*.3333333432674408+t;g[X+72>>2]=t;q=q+ja;}while((p|0)!=(f+-1|0))}y=y+1|0;}while((y|0)!=(h|0));p=X+64|0;w=i;f=k;i=1;}else ba=334;}else{i=0;k=0;n=0;o=0;ba=334;}if((ba|0)==334){q=0.0;p=X+64|0;w=i;f=k;i=0;}t=1.0/q;u=t*+g[p>>2];g[p>>2]=u;s=t*+g[X+68>>2];g[X+68>>2]=s;t=t*+g[X+72>>2];g[X+72>>2]=t;g[X+96>>2]=3402823466385288598117041.0e14;if(i){k=c[X+36>>2]|0;i=0;r=3402823466385288598117041.0e14;while(1){q=+F(+(+g[k+(i*36|0)+32>>2]+(+g[k+(i*36|0)+20>>2]*u+ +g[k+(i*36|0)+24>>2]*s+ +g[k+(i*36|0)+28>>2]*t)));if(q<r)g[X+96>>2]=q;else q=r;i=i+1|0;if((i|0)>=(h|0)){B=q;break}else r=q;}}else B=3402823466385288598117041.0e14;i=c[X+8>>2]|0;if((i|0)>0){k=c[X+16>>2]|0;h=0;u=-3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;t=-3402823466385288598117041.0e14;s=3402823466385288598117041.0e14;r=3402823466385288598117041.0e14;q=3402823466385288598117041.0e14;do{ja=+g[k+(h<<4)>>2];q=ja<q?ja:q;t=ja>t?ja:t;ja=+g[k+(h<<4)+4>>2];r=ja<r?ja:r;v=ja>v?ja:v;ja=+g[k+(h<<4)+8>>2];s=ja<s?ja:s;u=ja>u?ja:u;h=h+1|0;}while((h|0)!=(i|0))}else{u=-3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;t=-3402823466385288598117041.0e14;s=3402823466385288598117041.0e14;r=3402823466385288598117041.0e14;q=3402823466385288598117041.0e14;}g[X+100>>2]=q+t;g[X+104>>2]=r+v;g[X+108>>2]=s+u;g[X+112>>2]=0.0;ja=t-q;q=v-r;r=u-s;g[X+116>>2]=ja;g[X+120>>2]=q;g[X+124>>2]=r;g[X+128>>2]=0.0;s=B/1.7320507764816284;p=+g[X+116+((ja<q&1)<<2)>>2]<r?2:ja<q&1;q=(+g[X+116+(p<<2)>>2]*.5-s)*.0009765625;g[X+88>>2]=s;g[X+84>>2]=s;g[X+80>>2]=s;r=+g[X+116+(p<<2)>>2]*.5;g[X+80+(p<<2)>>2]=r;h=0;while(1){if(Og(X)|0){ba=440;break}r=r-q;g[X+80+(p<<2)>>2]=r;h=h+1|0;if((h|0)>=1024){ba=439;break}}o:do if((ba|0)==439){g[X+88>>2]=s;g[X+84>>2]=s;g[X+80>>2]=s;}else if((ba|0)==440){q=(+g[X+96>>2]-s)*.0009765625;h=0;k=c[X+80+((1<<(1<<p&3)&3)<<2)>>2]|0;while(1){i=c[X+80+((1<<p&3)<<2)>>2]|0;g[X+80+((1<<p&3)<<2)>>2]=q+(c[j>>2]=i,+g[j>>2]);r=q+ +g[X+80+((1<<(1<<p&3)&3)<<2)>>2];g[X+80+((1<<(1<<p&3)&3)<<2)>>2]=r;h=h+1|0;if(!(Og(X)|0))break;if((h|0)>=1024)break o;else k=(g[j>>2]=r,c[j>>2]|0);}c[X+80+((1<<p&3)<<2)>>2]=i;c[X+80+((1<<(1<<p&3)&3)<<2)>>2]=k;}while(0);if(w|0){c[6437]=(c[6437]|0)+1;Tc(c[w+-4>>2]|0);}if(o|0){c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);}if(n|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}if(f|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}if(!((m|0)==0|(Y|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[Y+-4>>2]|0);}o=c[Z>>2]|0;p=c[$>>2]|0;if((o|0)<=0){if(p|0)ba=461;}else{h=0;do{k=p+(h*36|0)+4|0;m=p+(h*36|0)+12|0;n=c[m>>2]|0;i=p+(h*36|0)+16|0;if(n|0){if(a[i>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}c[m>>2]=0;}a[i>>0]=1;c[m>>2]=0;c[k>>2]=0;c[p+(h*36|0)+8>>2]=0;h=h+1|0;}while((h|0)!=(o|0));ba=461;}if((ba|0)==461){if(a[ha+56+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);}c[$>>2]=0;}if(!((aa|0)==0|(_|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[_+-4>>2]|0);}h=c[da>>2]|0;if(h|0){if(a[ha+76+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[da>>2]=0;}a[ha+76+56>>0]=1;c[da>>2]=0;c[ha+76+44>>2]=0;c[ha+76+48>>2]=0;h=c[ea>>2]|0;if(h|0){if(a[ha+76+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[ea>>2]=0;}a[ha+76+36>>0]=1;c[ea>>2]=0;c[ha+76+24>>2]=0;c[ha+76+28>>2]=0;h=c[fa>>2]|0;if(h|0){if(a[ha+76+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[fa>>2]=0;}if(!ga){l=ha;return 1}c[6437]=(c[6437]|0)+1;Tc(c[ga+-4>>2]|0);l=ha;return 1}function $b(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,H=0.0,K=0,L=0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0.0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0,ta=0,ua=0,va=0;va=l;l=l+688|0;j=c[b+20>>2]|0;if(!j){j=c[b+4>>2]|0;j=zb[c[(c[j>>2]|0)+12>>2]&63](j,c[d+8>>2]|0,c[e+8>>2]|0)|0;c[b+20>>2]=j;a[b+16>>0]=1;}c[h+4>>2]=j;ra=c[d+4>>2]|0;sa=c[e+4>>2]|0;i=c[ra+4>>2]|0;k=c[sa+4>>2]|0;if((i|0)==10&(k|0)==10){O=+g[j+752>>2];ma=c[ra+52>>2]|0;s=+g[ra+28+(ma<<2)>>2];M=+g[ra+28+(((ma+2|0)%3|0)<<2)>>2];ta=c[sa+52>>2]|0;q=+g[sa+28+(ta<<2)>>2];H=+g[sa+28+(((ta+2|0)%3|0)<<2)>>2];b=c[d+12>>2]|0;t=c[e+12>>2]|0;A=+g[b+(ma<<2)>>2];C=+g[b+16+(ma<<2)>>2];B=+g[b+32+(ma<<2)>>2];p=+g[t+(ta<<2)>>2];r=+g[t+16+(ta<<2)>>2];v=+g[t+32+(ta<<2)>>2];x=+g[t+48>>2]-+g[b+48>>2];y=+g[t+52>>2]-+g[b+52>>2];z=+g[t+56>>2]-+g[b+56>>2];n=1.0-(A*p+C*r+B*v)*(A*p+C*r+B*v);if(!(n==0.0)){n=(A*x+C*y+B*z-(A*p+C*r+B*v)*(p*x+r*y+v*z))/n;if(!(n<-s)){if(n>s){n=s;ua=7;}}else{n=-s;ua=7;}}else{n=0.0;ua=7;}o=(A*p+C*r+B*v)*n-(p*x+r*y+v*z);if(o<-q){n=(A*p+C*r+B*v)*-q+(A*x+C*y+B*z);if(!(n<-s))if(n>s){o=-q;n=s;}else o=-q;else{o=-q;n=-s;}}else if(o>q){n=q*(A*p+C*r+B*v)+(A*x+C*y+B*z);if(!(n<-s))if(n>s){o=q;n=s;}else o=q;else{o=q;n=-s;}}u=p*o;s=r*o;r=v*o;p=u+(x-A*n);o=s+(y-C*n);n=r+(z-B*n);q=+G(+(n*n+(p*p+o*o)));if(!(q-M-H>O)){do if(n*n+(p*p+o*o)<=1.4210854715202004e-14)if(+F(+B)>.7071067690849304){n=1.0/+G(+(C*C+B*B));g[va+280>>2]=0.0;g[va+280+4>>2]=-(B*n);k=va+280|0;m=va+280+4|0;n=C*n;i=2;break}else{n=1.0/+G(+(A*A+C*C));g[va+280>>2]=-(C*n);g[va+280+4>>2]=A*n;k=va+280|0;m=va+280+4|0;n=0.0;i=2;break}else{g[va+280>>2]=p*-(1.0/q);g[va+280+4>>2]=o*-(1.0/q);g[va+280+8>>2]=n*-(1.0/q);k=va+280|0;m=va+280+4|0;n=0.0;i=3;}while(0);g[va+280+(i<<2)>>2]=n;pa=s+ +g[t+52>>2]+H*+g[m>>2];qa=r+ +g[t+56>>2]+H*+g[va+280+8>>2];g[va+264>>2]=u+ +g[t+48>>2]+H*+g[k>>2];g[va+264+4>>2]=pa;g[va+264+8>>2]=qa;g[va+264+12>>2]=0.0;}if(q-M-H<O){Ub[c[(c[h>>2]|0)+16>>2]&15](h,va+280|0,va+264|0,q-M-H);j=c[h+4>>2]|0;}if(!(c[j+748>>2]|0)){l=va;return}k=c[j+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;i=c[(c[h+12>>2]|0)+8>>2]|0;if((k|0)==(m|0)){Ue(j,k+4|0,i+4|0);l=va;return}else{Ue(j,i+4|0,m+4|0);l=va;return}}g[va+128+128>>2]=999999984306749440.0;t=c[b+8>>2]|0;w=c[b+12>>2]|0;c[va+48>>2]=9332;c[va+48+4>>2]=0;c[va+48+8>>2]=1065353216;c[va+48+12>>2]=0;g[va+48+16>>2]=0.0;c[va+48+20>>2]=w;c[va+48+24>>2]=t;c[va+48+28>>2]=ra;c[va+48+32>>2]=sa;c[va+48+36>>2]=i;c[va+48+40>>2]=k;g[va+48+44>>2]=+Db[c[(c[ra>>2]|0)+48>>2]&15](ra);g[va+48+48>>2]=+Db[c[(c[sa>>2]|0)+48>>2]&15](sa);a[va+48+52>>0]=0;c[va+48+60>>2]=-1;c[va+48+72>>2]=1;c[va+48+76>>2]=1;c[va+48+28>>2]=ra;c[va+48+32>>2]=sa;pa=+Db[c[(c[ra>>2]|0)+48>>2]&15](ra);qa=+Db[c[(c[sa>>2]|0)+48>>2]&15](sa);qa=pa+qa+ +g[(c[b+20>>2]|0)+752>>2];g[va+128+128>>2]=qa*qa;i=c[d+12>>2]|0;c[va+128>>2]=c[i>>2];c[va+128+4>>2]=c[i+4>>2];c[va+128+8>>2]=c[i+8>>2];c[va+128+12>>2]=c[i+12>>2];k=va+128+16|0;c[k>>2]=c[i+16>>2];c[k+4>>2]=c[i+16+4>>2];c[k+8>>2]=c[i+16+8>>2];c[k+12>>2]=c[i+16+12>>2];t=va+128+32|0;c[t>>2]=c[i+32>>2];c[t+4>>2]=c[i+32+4>>2];c[t+8>>2]=c[i+32+8>>2];c[t+12>>2]=c[i+32+12>>2];w=va+128+48|0;c[w>>2]=c[i+48>>2];c[w+4>>2]=c[i+48+4>>2];c[w+8>>2]=c[i+48+8>>2];c[w+12>>2]=c[i+48+12>>2];i=c[e+12>>2]|0;D=va+128+64|0;c[D>>2]=c[i>>2];c[D+4>>2]=c[i+4>>2];c[D+8>>2]=c[i+8>>2];c[D+12>>2]=c[i+12>>2];E=va+128+80|0;c[E>>2]=c[i+16>>2];c[E+4>>2]=c[i+16+4>>2];c[E+8>>2]=c[i+16+8>>2];c[E+12>>2]=c[i+16+12>>2];K=va+128+96|0;c[K>>2]=c[i+32>>2];c[K+4>>2]=c[i+32+4>>2];c[K+8>>2]=c[i+32+8>>2];c[K+12>>2]=c[i+32+12>>2];L=va+128+112|0;c[L>>2]=c[i+48>>2];c[L+4>>2]=c[i+48+4>>2];c[L+8>>2]=c[i+48+8>>2];c[L+12>>2]=c[i+48+12>>2];i=c[ra+4>>2]|0;if((i|0)<7?(m=c[sa+4>>2]|0,(m|0)<7):0){c[va+40>>2]=6204;if(!i){i=m;o=0.0;}else{o=+Db[c[(c[ra>>2]|0)+48>>2]&15](ra);i=c[sa+4>>2]|0;}if(!i)n=0.0;else n=+Db[c[(c[sa>>2]|0)+48>>2]&15](sa);c[va>>2]=6232;c[va+4>>2]=h;g[va+24>>2]=o;g[va+28>>2]=n;a[va+36>>0]=0;U=c[ra+52>>2]|0;a:do if(U|0){ma=c[sa+52>>2]|0;do if(!ma){if((c[sa+4>>2]|0)!=1)break a;w=va+624+16|0;a[w>>0]=1;D=va+624+12|0;c[D>>2]=0;t=va+624+4|0;c[t>>2]=0;m=va+624+8|0;c[m>>2]=0;i=c[e+12>>2]|0;pa=+g[sa+56>>2];qa=+g[sa+56+4>>2];p=+g[sa+56+8>>2];n=pa*+g[i>>2]+qa*+g[i+4>>2]+p*+g[i+8>>2]+ +g[i+48>>2];o=pa*+g[i+16>>2]+qa*+g[i+20>>2]+p*+g[i+24>>2]+ +g[i+52>>2];p=pa*+g[i+32>>2]+qa*+g[i+36>>2]+p*+g[i+40>>2]+ +g[i+56>>2];c[6436]=(c[6436]|0)+1;i=ic(35)|0;if(!i)j=0;else{c[(i+4+15&-16)+-4>>2]=i;j=i+4+15&-16;}i=c[D>>2]|0;if(!i)i=0;else{c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);i=c[t>>2]|0;c[D>>2]=0;}a[w>>0]=1;c[D>>2]=j;c[m>>2]=1;g[j+(i<<4)>>2]=n;g[j+(i<<4)+4>>2]=o;g[j+(i<<4)+8>>2]=p;g[j+(i<<4)+12>>2]=0.0;i=(c[t>>2]|0)+1|0;c[t>>2]=i;ua=c[e+12>>2]|0;pa=+g[sa+56+16>>2];qa=+g[sa+56+20>>2];p=+g[sa+56+24>>2];n=pa*+g[ua>>2]+qa*+g[ua+4>>2]+p*+g[ua+8>>2]+ +g[ua+48>>2];o=pa*+g[ua+16>>2]+qa*+g[ua+20>>2]+p*+g[ua+24>>2]+ +g[ua+52>>2];p=pa*+g[ua+32>>2]+qa*+g[ua+36>>2]+p*+g[ua+40>>2]+ +g[ua+56>>2];if((i|0)==(c[m>>2]|0)?(N=i|0?i<<1:1,(i|0)<(N|0)):0){if(!N)k=0;else{c[6436]=(c[6436]|0)+1;i=ic((N<<4|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}k=i;i=c[t>>2]|0;}if((i|0)>0){j=0;do{ua=k+(j<<4)|0;ta=(c[D>>2]|0)+(j<<4)|0;c[ua>>2]=c[ta>>2];c[ua+4>>2]=c[ta+4>>2];c[ua+8>>2]=c[ta+8>>2];c[ua+12>>2]=c[ta+12>>2];j=j+1|0;}while((j|0)!=(i|0))}i=c[D>>2]|0;if(i|0){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[D>>2]=0;}a[w>>0]=1;c[D>>2]=k;c[m>>2]=N;i=c[t>>2]|0;}ua=c[D>>2]|0;g[ua+(i<<4)>>2]=n;g[ua+(i<<4)+4>>2]=o;g[ua+(i<<4)+8>>2]=p;g[ua+(i<<4)+12>>2]=0.0;i=(c[t>>2]|0)+1|0;c[t>>2]=i;ua=c[e+12>>2]|0;pa=+g[sa+56+32>>2];qa=+g[sa+56+36>>2];p=+g[sa+56+40>>2];n=pa*+g[ua>>2]+qa*+g[ua+4>>2]+p*+g[ua+8>>2]+ +g[ua+48>>2];o=pa*+g[ua+16>>2]+qa*+g[ua+20>>2]+p*+g[ua+24>>2]+ +g[ua+52>>2];p=pa*+g[ua+32>>2]+qa*+g[ua+36>>2]+p*+g[ua+40>>2]+ +g[ua+56>>2];if((i|0)==(c[m>>2]|0)?(R=i|0?i<<1:1,(i|0)<(R|0)):0){if(!R)k=0;else{c[6436]=(c[6436]|0)+1;i=ic((R<<4|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}k=i;i=c[t>>2]|0;}if((i|0)>0){j=0;do{ua=k+(j<<4)|0;ta=(c[D>>2]|0)+(j<<4)|0;c[ua>>2]=c[ta>>2];c[ua+4>>2]=c[ta+4>>2];c[ua+8>>2]=c[ta+8>>2];c[ua+12>>2]=c[ta+12>>2];j=j+1|0;}while((j|0)!=(i|0))}i=c[D>>2]|0;if(i|0){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[D>>2]=0;}a[w>>0]=1;c[D>>2]=k;c[m>>2]=R;i=c[t>>2]|0;}ua=c[D>>2]|0;g[ua+(i<<4)>>2]=n;g[ua+(i<<4)+4>>2]=o;g[ua+(i<<4)+8>>2]=p;g[ua+(i<<4)+12>>2]=0.0;c[t>>2]=(c[t>>2]|0)+1;q=+g[(c[b+20>>2]|0)+752>>2];Fc(va+48|0,va+128|0,va+40|0,c[f+20>>2]|0,0);n=+g[va+48+4>>2];o=+g[va+48+8>>2];p=+g[va+48+12>>2];if(n*n+o*o+p*p>1.1920928955078125e-07){pa=1.0/(n*n+o*o+p*p);g[va+384>>2]=n*pa;g[va+384+4>>2]=o*pa;g[va+384+8>>2]=p*pa;g[va+384+12>>2]=0.0;pa=+g[va+48+56>>2];qa=+Db[c[(c[ra>>2]|0)+48>>2]&15](ra);qa=pa-qa-+Db[c[(c[sa>>2]|0)+48>>2]&15](sa);Gc(va+384|0,c[ra+52>>2]|0,c[d+12>>2]|0,va+624|0,qa-q,q,h);}do if(a[b+16>>0]|0?(S=c[h+4>>2]|0,c[S+748>>2]|0):0){j=c[S+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;i=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(k|0)){Ue(S,j+4|0,i+4|0);break}else{Ue(S,i+4|0,k+4|0);break}}while(0);i=c[D>>2]|0;if(i|0){if(a[w>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[D>>2]=0;}}else{qa=+g[(c[b+20>>2]|0)+752>>2];b:do if(!(a[f+24>>0]|0)){Fc(va+48|0,va+128|0,va,c[f+20>>2]|0,0);n=+g[va+32>>2];if(n<0.0&(a[va+36>>0]|0)!=0){o=+g[va+8>>2];p=+g[va+12>>2];q=+g[va+16>>2];i=c[va+20>>2]|0;ua=111;}}else{D=c[d+12>>2]|0;E=c[e+12>>2]|0;c[6419]=(c[6419]|0)+1;ha=+g[U+64>>2];ia=+g[U+68>>2];r=+g[D+4>>2];ja=+g[U+72>>2];s=+g[D+8>>2];v=+g[D+16>>2];y=+g[D+20>>2];A=+g[D+24>>2];B=+g[D+32>>2];z=+g[D+36>>2];x=+g[D+40>>2];ka=+g[ma+64>>2];la=+g[ma+68>>2];pa=+g[ma+72>>2];na=ha*+g[D>>2]+ia*r+ja*s+ +g[D+48>>2]-(ka*+g[E>>2]+la*+g[E+4>>2]+pa*+g[E+8>>2]+ +g[E+48>>2]);oa=ha*v+ia*y+ja*A+ +g[D+52>>2]-(ka*+g[E+16>>2]+la*+g[E+20>>2]+pa*+g[E+24>>2]+ +g[E+52>>2]);pa=ha*B+ia*z+ja*x+ +g[D+56>>2]-(ka*+g[E+32>>2]+la*+g[E+36>>2]+pa*+g[E+40>>2]+ +g[E+56>>2]);k=c[U+28>>2]|0;c:do if((k|0)>0){n=3402823466385288598117041.0e14;i=0;u=0.0;o=0.0;p=0.0;q=0.0;C=v;while(1){f=c[U+36>>2]|0;ja=+g[f+(i*36|0)+20>>2];ka=+g[f+(i*36|0)+24>>2];la=+g[f+(i*36|0)+28>>2];v=ja*+g[D>>2]+ka*r+la*s;s=ja*C+ka*y+la*A;r=ja*B+ka*z+la*x;g[va+296>>2]=v;g[va+296+4>>2]=s;g[va+296+8>>2]=r;g[va+296+12>>2]=0.0;if(na*v+oa*s+pa*r<0.0){g[va+296>>2]=-v;g[va+296+4>>2]=-s;g[va+296+8>>2]=-r;A=-v;s=-s;r=-r;}else A=v;c[6417]=(c[6417]|0)+1;if(oi(D,E,na,oa,pa,A,s,r,U,ma,n)|0){c[6418]=(c[6418]|0)+1;Ng(U,D,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);Ng(ma,E,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);v=+g[va+384>>2];x=+g[va+380>>2];do if(v<x)j=0;else{y=+g[va+376>>2];z=+g[va+624>>2];if(y<z){j=0;break}j=1;u=v-x<y-z?v-x:y-z;}while(0);if(!j)break;if(u<n){n=u;o=A;p=s;q=r;}}i=i+1|0;if((i|0)>=(k|0))break c;r=+g[D+4>>2];s=+g[D+8>>2];C=+g[D+16>>2];y=+g[D+20>>2];A=+g[D+24>>2];B=+g[D+32>>2];z=+g[D+36>>2];x=+g[D+40>>2];}break b}else{n=3402823466385288598117041.0e14;o=0.0;p=0.0;q=0.0;}while(0);k=c[ma+28>>2]|0;d:do if((k|0)>0){j=0;v=0.0;while(1){f=c[ma+36>>2]|0;ka=+g[f+(j*36|0)+20>>2];la=+g[f+(j*36|0)+24>>2];u=+g[f+(j*36|0)+28>>2];r=ka*+g[E>>2]+la*+g[E+4>>2]+u*+g[E+8>>2];s=ka*+g[E+16>>2]+la*+g[E+20>>2]+u*+g[E+24>>2];u=ka*+g[E+32>>2]+la*+g[E+36>>2]+u*+g[E+40>>2];g[va+296>>2]=r;g[va+296+4>>2]=s;g[va+296+8>>2]=u;g[va+296+12>>2]=0.0;if(na*r+oa*s+pa*u<0.0){g[va+296>>2]=-r;g[va+296+4>>2]=-s;g[va+296+8>>2]=-u;r=-r;s=-s;u=-u;}c[6417]=(c[6417]|0)+1;if(oi(D,E,na,oa,pa,r,s,u,U,ma,n)|0){c[6418]=(c[6418]|0)+1;Ng(U,D,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);Ng(ma,E,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);x=+g[va+384>>2];y=+g[va+380>>2];do if(x<y)i=0;else{z=+g[va+376>>2];A=+g[va+624>>2];if(z<A){i=0;break}i=1;v=x-y<z-A?x-y:z-A;}while(0);if(!i)break;if(v<n){n=v;o=r;p=s;q=u;}}j=j+1|0;if((j|0)>=(k|0))break d}break b}while(0);j=c[U+48>>2]|0;e:do if((j|0)>0){w=0;m=-1;i=-1;u=0.0;v=0.0;V=0.0;W=0.0;z=0.0;A=0.0;B=0.0;T=0.0;s=0.0;y=0.0;Q=0.0;r=0.0;x=0.0;O=0.0;P=0.0;X=0.0;C=0.0;H=0.0;M=0.0;k=c[ma+48>>2]|0;f:while(1){f=c[U+56>>2]|0;ha=+g[f+(w<<4)>>2];ia=+g[f+(w<<4)+4>>2];la=+g[f+(w<<4)+8>>2];ja=ha*+g[D>>2]+ia*+g[D+4>>2]+la*+g[D+8>>2];ka=ha*+g[D+16>>2]+ia*+g[D+20>>2]+la*+g[D+24>>2];la=ha*+g[D+32>>2]+ia*+g[D+36>>2]+la*+g[D+40>>2];if((k|0)>0){t=0;ha=u;ia=o;Z=v;ba=z;ca=A;ga=p;fa=q;ea=X;while(1){f=c[ma+56>>2]|0;$=+g[f+(t<<4)>>2];da=+g[f+(t<<4)+4>>2];aa=+g[f+(t<<4)+8>>2];X=$*+g[E>>2]+da*+g[E+4>>2]+aa*+g[E+8>>2];Y=$*+g[E+16>>2]+da*+g[E+20>>2]+aa*+g[E+24>>2];aa=$*+g[E+32>>2]+da*+g[E+36>>2]+aa*+g[E+40>>2];g[va+296>>2]=ka*aa-la*Y;g[va+296+4>>2]=la*X-ja*aa;g[va+296+8>>2]=ja*Y-ka*X;g[va+296+12>>2]=0.0;do if(!(+F(+(ka*aa-la*Y))>1.0e-06)){if(+F(+(la*X-ja*aa))>1.0e-06){ua=75;break}if(!(+F(+(ja*Y-ka*X))>1.0e-06)){u=ha;o=ia;_=V;$=W;da=B;p=ga;q=fa;X=ea;}else ua=75;}else ua=75;while(0);do if((ua|0)==75){ua=0;q=1.0/+G(+((ka*aa-la*Y)*(ka*aa-la*Y)+(la*X-ja*aa)*(la*X-ja*aa)+(ja*Y-ka*X)*(ja*Y-ka*X)));o=(ka*aa-la*Y)*q;g[va+296>>2]=o;p=(la*X-ja*aa)*q;g[va+296+4>>2]=p;q=(ja*Y-ka*X)*q;g[va+296+8>>2]=q;if(o*na+p*oa+pa*q<0.0){g[va+296>>2]=-o;g[va+296+4>>2]=-p;g[va+296+8>>2]=-q;o=-o;p=-p;q=-q;}c[6417]=(c[6417]|0)+1;if(!(oi(D,E,na,oa,pa,o,p,q,U,ma,n)|0)){u=ha;o=ia;_=V;$=W;da=B;p=ga;q=fa;X=ea;break}c[6418]=(c[6418]|0)+1;Ng(U,D,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);Ng(ma,E,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);u=+g[va+384>>2];v=+g[va+380>>2];do if(!(u<v)){z=+g[va+376>>2];A=+g[va+624>>2];if(z<A){j=0;u=ha;z=Z;v=ba;A=ca;break}if(u-v<z-A){j=1;u=u-v;z=+g[va+328>>2];V=+g[va+328+4>>2];W=+g[va+328+8>>2];v=+g[va+344>>2];A=+g[va+344+4>>2];B=+g[va+344+8>>2];break}else{j=1;u=z-A;z=+g[va+312>>2];V=+g[va+312+4>>2];W=+g[va+312+8>>2];v=+g[va+360>>2];A=+g[va+360+4>>2];B=+g[va+360+8>>2];break}}else{j=0;u=ha;z=Z;v=ba;A=ca;}while(0);if(!j)break f;if(!(u<n)){o=ia;Z=z;_=V;$=W;ba=v;ca=A;da=B;p=ga;q=fa;X=ea;break}n=u;m=t;i=w;Z=z;_=V;$=W;ba=v;ca=A;da=B;T=z;s=v;y=X;Q=ja;r=A;x=Y;O=ka;P=V;X=B;C=aa;H=la;M=W;}while(0);t=t+1|0;k=c[ma+48>>2]|0;if((t|0)>=(k|0))break;else{ha=u;ia=o;V=_;W=$;B=da;ga=p;fa=q;ea=X;}}v=Z;V=_;W=$;z=ba;A=ca;B=da;j=c[U+48>>2]|0;}w=w+1|0;if((w|0)>=(j|0)){j=m;n=X;break e}}break b}else{j=-1;i=-1;T=0.0;s=0.0;y=0.0;Q=0.0;r=0.0;x=0.0;O=0.0;P=0.0;n=0.0;C=0.0;H=0.0;M=0.0;}while(0);if((j|i|0)>-1){z=T-s;A=P-r;B=M-n;u=y*Q+x*O+C*H;v=z*Q+A*O+B*H;r=z*y+A*x+B*C;do if(!(1.0-u*u==0.0)){if((v-r*u)/(1.0-u*u)<-1000000015047466219876688.0e6){n=-1000000015047466219876688.0e6;ua=94;break}if((v-r*u)/(1.0-u*u)>1000000015047466219876688.0e6){n=1000000015047466219876688.0e6;ua=94;}else s=(v-r*u)/(1.0-u*u);}else{n=0.0;ua=94;}while(0);if((ua|0)==94)s=n;n=u*s-r;do if(n<-1000000015047466219876688.0e6){if(v-u*1000000015047466219876688.0e6<-1000000015047466219876688.0e6){n=-1000000015047466219876688.0e6;r=-1000000015047466219876688.0e6;break}if(!(v-u*1000000015047466219876688.0e6>1000000015047466219876688.0e6)){n=-1000000015047466219876688.0e6;r=v-u*1000000015047466219876688.0e6;break}n=-1000000015047466219876688.0e6;r=1000000015047466219876688.0e6;}else{if(!(n>1000000015047466219876688.0e6)){r=s;break}if(v+u*1000000015047466219876688.0e6<-1000000015047466219876688.0e6){n=1000000015047466219876688.0e6;r=-1000000015047466219876688.0e6;break}if(!(v+u*1000000015047466219876688.0e6>1000000015047466219876688.0e6)){n=1000000015047466219876688.0e6;r=v+u*1000000015047466219876688.0e6;break}n=1000000015047466219876688.0e6;r=1000000015047466219876688.0e6;}while(0);y=y*n;x=x*n;v=C*n;u=y+(z-Q*r);s=x+(A-O*r);n=v+(B-H*r);g[va+624>>2]=u;g[va+624+4>>2]=s;g[va+624+8>>2]=n;g[va+624+12>>2]=0.0;if(u*u+s*s+n*n>1.1920928955078125e-07){r=+G(+(u*u+s*s+n*n));g[va+624>>2]=u*(1.0/r);g[va+624+4>>2]=1.0/r*s;g[va+624+8>>2]=1.0/r*n;if(u*(1.0/r)*na+1.0/r*s*oa+1.0/r*n*pa<0.0){g[va+624>>2]=-(u*(1.0/r));g[va+624+4>>2]=-(1.0/r*s);g[va+624+8>>2]=-(1.0/r*n);}g[va+384>>2]=T+y;g[va+384+4>>2]=P+x;g[va+384+8>>2]=M+v;g[va+384+12>>2]=0.0;Ub[c[(c[h>>2]|0)+16>>2]&15](h,va+624|0,va+384|0,-r);}}if(na*o+oa*p+pa*q<0.0){n=-1000000015047466219876688.0e6;o=-o;p=-p;q=-q;i=0;ua=111;}else{n=-1000000015047466219876688.0e6;i=0;ua=111;}}while(0);if((ua|0)==111){U=c[ra+52>>2]|0;f=c[sa+52>>2]|0;S=c[d+12>>2]|0;R=c[e+12>>2]|0;O=n-qa;C=1.0/+G(+(o*o+p*p+q*q));M=o*C;H=p*C;C=q*C;g[va+624>>2]=M;g[va+624+4>>2]=H;g[va+624+8>>2]=C;c[va+624+12>>2]=i;k=c[f+28>>2]|0;t=c[f+36>>2]|0;if((k|0)>0){o=+g[R>>2];p=+g[R+4>>2];q=+g[R+8>>2];r=+g[R+16>>2];s=+g[R+20>>2];u=+g[R+24>>2];v=+g[R+32>>2];x=+g[R+36>>2];y=+g[R+40>>2];n=-3402823466385288598117041.0e14;j=0;i=-1;while(1){z=+g[t+(j*36|0)+20>>2];A=+g[t+(j*36|0)+24>>2];B=+g[t+(j*36|0)+28>>2];m=(z*o+A*p+B*q)*M+(z*r+A*s+B*u)*H+(z*v+A*x+B*y)*C>n;i=m?j:i;j=j+1|0;if((j|0)==(k|0)){E=i;break}else n=m?(z*o+A*p+B*q)*M+(z*r+A*s+B*u)*H+(z*v+A*x+B*y)*C:n;}}else E=-1;a[va+384+16>>0]=1;N=va+384+12|0;c[N>>2]=0;K=va+384+4|0;c[K>>2]=0;c[va+384+8>>2]=0;L=c[t+(E*36|0)+4>>2]|0;g:do if((L|0)>0){D=t+(E*36|0)+12|0;i=0;j=0;k=0;while(1){d=c[(c[D>>2]|0)+(i<<2)>>2]|0;e=c[f+16>>2]|0;oa=+g[e+(d<<4)>>2];pa=+g[e+(d<<4)+4>>2];p=+g[e+(d<<4)+8>>2];n=oa*+g[R>>2]+pa*+g[R+4>>2]+p*+g[R+8>>2]+ +g[R+48>>2];o=oa*+g[R+16>>2]+pa*+g[R+20>>2]+p*+g[R+24>>2]+ +g[R+52>>2];p=oa*+g[R+32>>2]+pa*+g[R+36>>2]+p*+g[R+40>>2]+ +g[R+56>>2];if((j|0)==(k|0)){w=k|0?k<<1:1;if((k|0)<(w|0)){if(!w){t=0;j=k;}else{c[6436]=(c[6436]|0)+1;j=ic((w<<4|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16;}t=j;j=c[K>>2]|0;}m=c[N>>2]|0;if((j|0)<=0){if(m)ua=126;}else{k=0;do{d=t+(k<<4)|0;ua=m+(k<<4)|0;c[d>>2]=c[ua>>2];c[d+4>>2]=c[ua+4>>2];c[d+8>>2]=c[ua+8>>2];c[d+12>>2]=c[ua+12>>2];k=k+1|0;}while((k|0)!=(j|0));ua=126;}if((ua|0)==126){ua=0;if(a[va+384+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[m+-4>>2]|0);j=c[K>>2]|0;}c[N>>2]=0;}a[va+384+16>>0]=1;c[N>>2]=t;c[va+384+8>>2]=w;}else j=k;}d=c[N>>2]|0;g[d+(j<<4)>>2]=n;g[d+(j<<4)+4>>2]=o;g[d+(j<<4)+8>>2]=p;g[d+(j<<4)+12>>2]=0.0;j=(c[K>>2]|0)+1|0;c[K>>2]=j;i=i+1|0;if((i|0)>=(L|0))break g;k=c[va+384+8>>2]|0;}}while(0);if((E|0)>-1)Gc(va+624|0,U,S,va+384|0,O,qa,h);i=c[N>>2]|0;if(i|0){if(a[va+384+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[N>>2]=0;}}if(a[b+16>>0]|0?(ta=c[h+4>>2]|0,c[ta+748>>2]|0):0){j=c[ta+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;i=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(k|0)){Ue(ta,j+4|0,i+4|0);break}else{Ue(ta,i+4|0,k+4|0);break}}}while(0);l=va;return}while(0)}Fc(va+48|0,va+128|0,h,c[f+20>>2]|0,0);if((c[b+28>>2]|0?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+32>>2]|0):0)?(O=+g[va+48+4>>2],P=+g[va+48+8>>2],Q=+g[va+48+12>>2],O*O+P*P+Q*Q>1.1920928955078125e-07):0){M=1.0/(O*O+P*P+Q*Q);if(+F(+(Q*M))>.7071067690849304){H=1.0/+G(+(Q*M*Q*M+P*M*P*M));B=0.0;C=P*M*H;H=-(Q*M*H);}else{H=1.0/+G(+(O*M*O*M+P*M*P*M));B=-(P*M*H);C=0.0;H=O*M*H;}A=+Db[c[(c[ra>>2]|0)+16>>2]&15](ra);y=+Db[c[(c[sa>>2]|0)+16>>2]&15](sa);n=.019999999552965164/(A<y?A:y);if(A<y){c[va+624>>2]=c[va+128>>2];c[va+624+4>>2]=c[va+128+4>>2];c[va+624+8>>2]=c[va+128+8>>2];c[va+624+12>>2]=c[va+128+12>>2];c[va+624+16>>2]=c[k>>2];c[va+624+16+4>>2]=c[k+4>>2];c[va+624+16+8>>2]=c[k+8>>2];c[va+624+16+12>>2]=c[k+12>>2];c[va+624+32>>2]=c[t>>2];c[va+624+32+4>>2]=c[t+4>>2];c[va+624+32+8>>2]=c[t+8>>2];c[va+624+32+12>>2]=c[t+12>>2];c[va+624+48>>2]=c[w>>2];c[va+624+48+4>>2]=c[w+4>>2];c[va+624+48+8>>2]=c[w+8>>2];c[va+624+48+12>>2]=c[w+12>>2];}else{c[va+624>>2]=c[D>>2];c[va+624+4>>2]=c[D+4>>2];c[va+624+8>>2]=c[D+8>>2];c[va+624+12>>2]=c[D+12>>2];c[va+624+16>>2]=c[E>>2];c[va+624+16+4>>2]=c[E+4>>2];c[va+624+16+8>>2]=c[E+8>>2];c[va+624+16+12>>2]=c[E+12>>2];c[va+624+32>>2]=c[K>>2];c[va+624+32+4>>2]=c[K+4>>2];c[va+624+32+8>>2]=c[K+8>>2];c[va+624+32+12>>2]=c[K+12>>2];c[va+624+48>>2]=c[L>>2];c[va+624+48+4>>2]=c[L+4>>2];c[va+624+48+8>>2]=c[L+8>>2];c[va+624+48+12>>2]=c[L+12>>2];}i=c[b+28>>2]|0;if((i|0)>0){z=B*B+H*H+C*C;x=(n>.39269909262657166?.39269909262657166:n)*.5;j=0;do{if(z>1.1920928955078125e-07){u=+J(+x)/+G(+z);r=B*u;s=H*u;u=C*u;v=+I(+x);q=+(j|0)*(6.2831854820251465/+(i|0))*.5;p=+J(+q)/+G(+(Q*M*Q*M+(O*M*O*M+P*M*P*M)));n=O*M*p;o=P*M*p;p=Q*M*p;q=+I(+q);if(A<y){la=p*(r*-p+(s*q+v*-o)-u*-n)+(n*(v*q-r*-n-s*-o-u*-p)+q*(u*-o+(r*q+v*-n)-s*-p))-o*(s*-n+(u*q+v*-p)-r*-o);oa=n*(s*-n+(u*q+v*-p)-r*-o)+(q*(r*-p+(s*q+v*-o)-u*-n)+o*(v*q-r*-n-s*-o-u*-p))-p*(u*-o+(r*q+v*-n)-s*-p);aa=o*(u*-o+(r*q+v*-n)-s*-p)+(p*(v*q-r*-n-s*-o-u*-p)+q*(s*-n+(u*q+v*-p)-r*-o))-n*(r*-p+(s*q+v*-o)-u*-n);ja=q*(v*q-r*-n-s*-o-u*-p)-n*(u*-o+(r*q+v*-n)-s*-p)-o*(r*-p+(s*q+v*-o)-u*-n)-p*(s*-n+(u*q+v*-p)-r*-o);na=la*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));pa=oa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ia=aa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ua=c[d+12>>2]|0;ba=+g[ua>>2];ca=+g[ua+16>>2];da=+g[ua+32>>2];ea=+g[ua+4>>2];fa=+g[ua+20>>2];ga=+g[ua+36>>2];ha=+g[ua+8>>2];ka=+g[ua+24>>2];qa=+g[ua+40>>2];g[va+128>>2]=(1.0-(oa*pa+aa*ia))*ba+(la*pa-ja*ia)*ca+(la*ia+ja*pa)*da;g[va+128+4>>2]=(1.0-(oa*pa+aa*ia))*ea+(la*pa-ja*ia)*fa+(la*ia+ja*pa)*ga;g[va+128+8>>2]=(1.0-(oa*pa+aa*ia))*ha+(la*pa-ja*ia)*ka+(la*ia+ja*pa)*qa;g[va+128+12>>2]=0.0;g[va+128+16>>2]=(la*pa+ja*ia)*ba+(1.0-(la*na+aa*ia))*ca+(oa*ia-ja*na)*da;g[va+128+20>>2]=(la*pa+ja*ia)*ea+(1.0-(la*na+aa*ia))*fa+(oa*ia-ja*na)*ga;g[va+128+24>>2]=(la*pa+ja*ia)*ha+(1.0-(la*na+aa*ia))*ka+(oa*ia-ja*na)*qa;g[va+128+28>>2]=0.0;g[va+128+32>>2]=(la*ia-ja*pa)*ba+(oa*ia+ja*na)*ca+(1.0-(la*na+oa*pa))*da;g[va+128+36>>2]=(la*ia-ja*pa)*ea+(oa*ia+ja*na)*fa+(1.0-(la*na+oa*pa))*ga;g[va+128+40>>2]=(la*ia-ja*pa)*ha+(oa*ia+ja*na)*ka+(1.0-(la*na+oa*pa))*qa;g[va+128+44>>2]=0.0;ua=c[e+12>>2]|0;c[D>>2]=c[ua>>2];c[D+4>>2]=c[ua+4>>2];c[D+8>>2]=c[ua+8>>2];c[D+12>>2]=c[ua+12>>2];c[E>>2]=c[ua+16>>2];c[E+4>>2]=c[ua+16+4>>2];c[E+8>>2]=c[ua+16+8>>2];c[E+12>>2]=c[ua+16+12>>2];c[K>>2]=c[ua+32>>2];c[K+4>>2]=c[ua+32+4>>2];c[K+8>>2]=c[ua+32+8>>2];c[K+12>>2]=c[ua+32+12>>2];c[L>>2]=c[ua+48>>2];c[L+4>>2]=c[ua+48+4>>2];c[L+8>>2]=c[ua+48+8>>2];c[L+12>>2]=c[ua+48+12>>2];}else{ua=c[d+12>>2]|0;c[va+128>>2]=c[ua>>2];c[va+128+4>>2]=c[ua+4>>2];c[va+128+8>>2]=c[ua+8>>2];c[va+128+12>>2]=c[ua+12>>2];c[k>>2]=c[ua+16>>2];c[k+4>>2]=c[ua+16+4>>2];c[k+8>>2]=c[ua+16+8>>2];c[k+12>>2]=c[ua+16+12>>2];c[t>>2]=c[ua+32>>2];c[t+4>>2]=c[ua+32+4>>2];c[t+8>>2]=c[ua+32+8>>2];c[t+12>>2]=c[ua+32+12>>2];c[w>>2]=c[ua+48>>2];c[w+4>>2]=c[ua+48+4>>2];c[w+8>>2]=c[ua+48+8>>2];c[w+12>>2]=c[ua+48+12>>2];la=p*(r*-p+(s*q+v*-o)-u*-n)+(n*(v*q-r*-n-s*-o-u*-p)+q*(u*-o+(r*q+v*-n)-s*-p))-o*(s*-n+(u*q+v*-p)-r*-o);oa=n*(s*-n+(u*q+v*-p)-r*-o)+(q*(r*-p+(s*q+v*-o)-u*-n)+o*(v*q-r*-n-s*-o-u*-p))-p*(u*-o+(r*q+v*-n)-s*-p);aa=o*(u*-o+(r*q+v*-n)-s*-p)+(p*(v*q-r*-n-s*-o-u*-p)+q*(s*-n+(u*q+v*-p)-r*-o))-n*(r*-p+(s*q+v*-o)-u*-n);ja=q*(v*q-r*-n-s*-o-u*-p)-n*(u*-o+(r*q+v*-n)-s*-p)-o*(r*-p+(s*q+v*-o)-u*-n)-p*(s*-n+(u*q+v*-p)-r*-o);na=la*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));pa=oa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ia=aa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ua=c[e+12>>2]|0;ba=+g[ua>>2];ca=+g[ua+16>>2];da=+g[ua+32>>2];ea=+g[ua+4>>2];fa=+g[ua+20>>2];ga=+g[ua+36>>2];ha=+g[ua+8>>2];ka=+g[ua+24>>2];qa=+g[ua+40>>2];g[va+128+64>>2]=(1.0-(oa*pa+aa*ia))*ba+(la*pa-ja*ia)*ca+(la*ia+ja*pa)*da;g[va+128+68>>2]=(1.0-(oa*pa+aa*ia))*ea+(la*pa-ja*ia)*fa+(la*ia+ja*pa)*ga;g[va+128+72>>2]=(1.0-(oa*pa+aa*ia))*ha+(la*pa-ja*ia)*ka+(la*ia+ja*pa)*qa;g[va+128+76>>2]=0.0;g[va+128+80>>2]=(la*pa+ja*ia)*ba+(1.0-(la*na+aa*ia))*ca+(oa*ia-ja*na)*da;g[va+128+84>>2]=(la*pa+ja*ia)*ea+(1.0-(la*na+aa*ia))*fa+(oa*ia-ja*na)*ga;g[va+128+88>>2]=(la*pa+ja*ia)*ha+(1.0-(la*na+aa*ia))*ka+(oa*ia-ja*na)*qa;g[va+128+92>>2]=0.0;g[va+128+96>>2]=(la*ia-ja*pa)*ba+(oa*ia+ja*na)*ca+(1.0-(la*na+oa*pa))*da;g[va+128+100>>2]=(la*ia-ja*pa)*ea+(oa*ia+ja*na)*fa+(1.0-(la*na+oa*pa))*ga;g[va+128+104>>2]=(la*ia-ja*pa)*ha+(oa*ia+ja*na)*ka+(1.0-(la*na+oa*pa))*qa;g[va+128+108>>2]=0.0;}i=c[f+20>>2]|0;c[va+384>>2]=6260;c[va+384+32>>2]=h;c[va+384+36>>2]=c[va+128>>2];c[va+384+36+4>>2]=c[va+128+4>>2];c[va+384+36+8>>2]=c[va+128+8>>2];c[va+384+36+12>>2]=c[va+128+12>>2];c[va+384+52>>2]=c[k>>2];c[va+384+52+4>>2]=c[k+4>>2];c[va+384+52+8>>2]=c[k+8>>2];c[va+384+52+12>>2]=c[k+12>>2];c[va+384+68>>2]=c[t>>2];c[va+384+68+4>>2]=c[t+4>>2];c[va+384+68+8>>2]=c[t+8>>2];c[va+384+68+12>>2]=c[t+12>>2];c[va+384+84>>2]=c[w>>2];c[va+384+84+4>>2]=c[w+4>>2];c[va+384+84+8>>2]=c[w+8>>2];c[va+384+84+12>>2]=c[w+12>>2];c[va+384+100>>2]=c[D>>2];c[va+384+100+4>>2]=c[D+4>>2];c[va+384+100+8>>2]=c[D+8>>2];c[va+384+100+12>>2]=c[D+12>>2];c[va+384+116>>2]=c[E>>2];c[va+384+116+4>>2]=c[E+4>>2];c[va+384+116+8>>2]=c[E+8>>2];c[va+384+116+12>>2]=c[E+12>>2];c[va+384+132>>2]=c[K>>2];c[va+384+132+4>>2]=c[K+4>>2];c[va+384+132+8>>2]=c[K+8>>2];c[va+384+132+12>>2]=c[K+12>>2];c[va+384+148>>2]=c[L>>2];c[va+384+148+4>>2]=c[L+4>>2];c[va+384+148+8>>2]=c[L+8>>2];c[va+384+148+12>>2]=c[L+12>>2];c[va+384+164>>2]=c[va+624>>2];c[va+384+164+4>>2]=c[va+624+4>>2];c[va+384+164+8>>2]=c[va+624+8>>2];c[va+384+164+12>>2]=c[va+624+12>>2];c[va+384+180>>2]=c[va+624+16>>2];c[va+384+180+4>>2]=c[va+624+16+4>>2];c[va+384+180+8>>2]=c[va+624+16+8>>2];c[va+384+180+12>>2]=c[va+624+16+12>>2];c[va+384+196>>2]=c[va+624+32>>2];c[va+384+196+4>>2]=c[va+624+32+4>>2];c[va+384+196+8>>2]=c[va+624+32+8>>2];c[va+384+196+12>>2]=c[va+624+32+12>>2];c[va+384+212>>2]=c[va+624+48>>2];c[va+384+212+4>>2]=c[va+624+48+4>>2];c[va+384+212+8>>2]=c[va+624+48+8>>2];c[va+384+212+12>>2]=c[va+624+48+12>>2];a[va+384+228>>0]=A<y&1;c[va+384+232>>2]=i;Fc(va+48|0,va+128|0,va+384|0,i,0);i=c[b+28>>2]|0;}j=j+1|0;}while((j|0)<(i|0))}}if(!(a[b+16>>0]|0)){l=va;return}j=c[h+4>>2]|0;if(!(c[j+748>>2]|0)){l=va;return}k=c[j+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;i=c[(c[h+12>>2]|0)+8>>2]|0;if((k|0)==(m|0)){Ue(j,k+4|0,i+4|0);l=va;return}else{Ue(j,i+4|0,m+4|0);l=va;return}}function ac(b){b=b|0;var d=0,e=0,f=0,h=0,i=0.0,k=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0;W=l;l=l+176|0;ec(b);if(!(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0)){l=W;return}if((c[b+328>>2]|0)<=0){l=W;return}Q=W+96+32|0;R=W+96+52|0;N=0;do{S=c[(c[b+336>>2]|0)+(N<<2)>>2]|0;if(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(M=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(pb[c[(c[M>>2]|0)+48>>2]&127](M)|0)&1|0):0){e=c[b+72>>2]|0;if(!(a[S+473>>0]|0))M=e;else{c[W+80>>2]=c[S+520>>2];c[W+80+4>>2]=c[S+520+4>>2];c[W+80+8>>2]=c[S+520+8>>2];c[W+80+12>>2]=c[S+520+12>>2];i=+g[S+584>>2];k=+g[S+536>>2];m=+g[S+600>>2];s=+g[S+540>>2];t=+g[S+616>>2];u=+g[S+544>>2];v=+g[S+588>>2];w=+g[S+604>>2];x=+g[S+620>>2];y=+g[S+592>>2];z=+g[S+608>>2];A=+g[S+624>>2];B=+g[S+552>>2];C=+g[S+556>>2];D=+g[S+560>>2];E=+g[S+568>>2];F=+g[S+572>>2];H=+g[S+576>>2];ga=i*k+m*s+t*u+(k*v+s*w+u*x)*0.0+(k*y+s*z+u*A)*0.0;ea=(y*B+z*C+A*D)*0.0+(i*B+m*C+t*D+(v*B+w*C+x*D)*0.0);da=(y*E+z*F+A*H)*0.0+(i*E+m*F+t*H+(v*E+w*F+x*H)*0.0);fa=1.0/+G(+(ga*ga+ea*ea+da*da));ca=(i*k+m*s+t*u)*0.0+(k*v+s*w+u*x)+(k*y+s*z+u*A)*0.0;aa=(y*B+z*C+A*D)*0.0+(v*B+w*C+x*D+(i*B+m*C+t*D)*0.0);$=(y*E+z*F+A*H)*0.0+(v*E+w*F+x*H+(i*E+m*F+t*H)*0.0);ba=1.0/+G(+(ca*ca+aa*aa+$*$));_=(i*k+m*s+t*u)*0.0+(k*v+s*w+u*x)*0.0+(k*y+s*z+u*A);Y=y*B+z*C+A*D+((i*B+m*C+t*D)*0.0+(v*B+w*C+x*D)*0.0);X=y*E+z*F+A*H+((i*E+m*F+t*H)*0.0+(v*E+w*F+x*H)*0.0);Z=1.0/+G(+(_*_+Y*Y+X*X));M=c[(c[e>>2]|0)+8>>2]|0;ea=ea*fa*10.0+ +g[W+80+4>>2];da=fa*da*10.0+ +g[W+80+8>>2];g[W+160>>2]=ga*fa*10.0+ +g[W+80>>2];g[W+160+4>>2]=ea;g[W+160+8>>2]=da;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=0;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Zb[M&127](e,W+80|0,W+160|0,W+96|0);M=c[(c[e>>2]|0)+8>>2]|0;aa=aa*ba*10.0+ +g[W+80+4>>2];$=ba*$*10.0+ +g[W+80+8>>2];g[W+160>>2]=ca*ba*10.0+ +g[W+80>>2];g[W+160+4>>2]=aa;g[W+160+8>>2]=$;g[W+160+12>>2]=0.0;c[W+96>>2]=0;c[W+96+4>>2]=1065353216;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Zb[M&127](e,W+80|0,W+160|0,W+96|0);M=c[(c[e>>2]|0)+8>>2]|0;Y=Y*Z*10.0+ +g[W+80+4>>2];X=Z*X*10.0+ +g[W+80+8>>2];g[W+160>>2]=_*Z*10.0+ +g[W+80>>2];g[W+160+4>>2]=Y;g[W+160+8>>2]=X;g[W+160+12>>2]=0.0;c[W+96>>2]=0;c[W+96+4>>2]=0;c[W+96+8>>2]=1065353216;g[W+96+12>>2]=0.0;Zb[M&127](e,W+80|0,W+160|0,W+96|0);if((c[S+484>>2]|0)>0){d=0;do{M=c[S+492>>2]|0;ca=+g[M+(d<<4)>>2];da=+g[M+(d<<4)+4>>2];ga=+g[M+(d<<4)+8>>2];ea=+g[W+80>>2]+((i*k+m*s+t*u)*ca+(k*v+s*w+u*x)*da+(k*y+s*z+u*A)*ga);fa=+g[W+80+4>>2]+((i*B+m*C+t*D)*ca+(v*B+w*C+x*D)*da+(y*B+z*C+A*D)*ga);ga=(i*E+m*F+t*H)*ca+(v*E+w*F+x*H)*da+(y*E+z*F+A*H)*ga+ +g[W+80+8>>2];c[W+64>>2]=1065353216;c[W+64+4>>2]=0;c[W+64+8>>2]=1065353216;g[W+64+12>>2]=0.0;M=c[(c[e>>2]|0)+8>>2]|0;g[W+160>>2]=ea+-.10000000149011612;g[W+160+4>>2]=fa;g[W+160+8>>2]=ga;g[W+160+12>>2]=0.0;g[W+96>>2]=ea+.10000000149011612;g[W+96+4>>2]=fa+0.0;g[W+96+8>>2]=ga+0.0;g[W+96+12>>2]=0.0;Zb[M&127](e,W+160|0,W+96|0,W+64|0);M=c[(c[e>>2]|0)+8>>2]|0;g[W+160>>2]=ea;g[W+160+4>>2]=fa+-.10000000149011612;g[W+160+8>>2]=ga;g[W+160+12>>2]=0.0;g[W+96>>2]=ea+0.0;g[W+96+4>>2]=fa+.10000000149011612;g[W+96+8>>2]=ga+0.0;g[W+96+12>>2]=0.0;Zb[M&127](e,W+160|0,W+96|0,W+64|0);M=c[(c[e>>2]|0)+8>>2]|0;g[W+160>>2]=ea;g[W+160+4>>2]=fa;g[W+160+8>>2]=ga+-.10000000149011612;g[W+160+12>>2]=0.0;g[W+96>>2]=ea+0.0;g[W+96+4>>2]=fa+0.0;g[W+96+8>>2]=ga+.10000000149011612;g[W+96+12>>2]=0.0;Zb[M&127](e,W+160|0,W+96|0,W+64|0);d=d+1|0;}while((d|0)<(c[S+484>>2]|0))}M=c[b+72>>2]|0;}L=c[b+344>>2]|0;c[W+80>>2]=0;c[W+80+4>>2]=0;c[W+80+8>>2]=0;c[W+80+12>>2]=0;c[W+64>>2]=1065353216;c[W+64+4>>2]=1065353216;c[W+64+8>>2]=1065353216;g[W+64+12>>2]=0.0;c[W+48>>2]=1065353216;c[W+48+4>>2]=0;c[W+48+8>>2]=0;g[W+48+12>>2]=0.0;if(!(L&256)){if(L&1|0?(T=c[S+712>>2]|0,(T|0)>0):0){f=0;d=T;do{e=c[S+720>>2]|0;if(c[(c[e+(f*104|0)+4>>2]|0)+16>>2]&1){d=c[(c[M>>2]|0)+8>>2]|0;K=e+(f*104|0)+8|0;I=e+(f*104|0)+12|0;q=c[I>>2]|0;J=e+(f*104|0)+16|0;r=c[J>>2]|0;g[W+160>>2]=+g[K>>2]+-.10000000149011612;c[W+160+4>>2]=q;c[W+160+8>>2]=r;g[W+160+12>>2]=0.0;fa=+g[I>>2]+0.0;ga=+g[J>>2]+0.0;g[W+96>>2]=+g[K>>2]+.10000000149011612;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;c[W+32>>2]=1065353216;c[W+32+4>>2]=0;c[W+32+8>>2]=0;g[W+32+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[(c[M>>2]|0)+8>>2]|0;ga=+g[I>>2]+-.10000000149011612;r=c[J>>2]|0;c[W+160>>2]=c[K>>2];g[W+160+4>>2]=ga;c[W+160+8>>2]=r;g[W+160+12>>2]=0.0;ga=+g[I>>2]+.10000000149011612;fa=+g[J>>2]+0.0;g[W+96>>2]=+g[K>>2]+0.0;g[W+96+4>>2]=ga;g[W+96+8>>2]=fa;g[W+96+12>>2]=0.0;c[W+32>>2]=0;c[W+32+4>>2]=1065353216;c[W+32+8>>2]=0;g[W+32+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[(c[M>>2]|0)+8>>2]|0;r=c[I>>2]|0;fa=+g[J>>2]+-.10000000149011612;c[W+160>>2]=c[K>>2];c[W+160+4>>2]=r;g[W+160+8>>2]=fa;g[W+160+12>>2]=0.0;fa=+g[I>>2]+0.0;ga=+g[J>>2]+.10000000149011612;g[W+96>>2]=+g[K>>2]+0.0;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;c[W+32>>2]=0;c[W+32+4>>2]=0;c[W+32+8>>2]=1065353216;g[W+32+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[S+712>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}if(L&2|0?(U=c[S+732>>2]|0,(U|0)>0):0){f=0;d=U;do{e=c[S+740>>2]|0;if(c[(c[e+(f*52|0)+4>>2]|0)+16>>2]&1){Zb[c[(c[M>>2]|0)+8>>2]&127](M,(c[e+(f*52|0)+8>>2]|0)+8|0,(c[e+(f*52|0)+12>>2]|0)+8|0,W+80|0);d=c[S+732>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}if(L&16|0?(V=c[S+712>>2]|0,(V|0)>0):0){f=0;d=V;do{e=c[S+720>>2]|0;if(c[(c[e+(f*104|0)+4>>2]|0)+16>>2]&1){ea=+g[e+(f*104|0)+72>>2]*.5;ga=+g[e+(f*104|0)+76>>2]*.5;fa=+g[e+(f*104|0)+80>>2]*.5;K=c[(c[M>>2]|0)+8>>2]|0;d=e+(f*104|0)+8|0;I=e+(f*104|0)+12|0;ca=ga+ +g[I>>2];J=e+(f*104|0)+16|0;da=fa+ +g[J>>2];g[W+160>>2]=ea+ +g[d>>2];g[W+160+4>>2]=ca;g[W+160+8>>2]=da;g[W+160+12>>2]=0.0;Zb[K&127](M,d,W+160|0,W+64|0);K=c[(c[M>>2]|0)+8>>2]|0;ga=+g[I>>2]-ga;fa=+g[J>>2]-fa;g[W+160>>2]=+g[d>>2]-ea;g[W+160+4>>2]=ga;g[W+160+8>>2]=fa;g[W+160+12>>2]=0.0;fa=+g[W+64+4>>2]*.5;ga=+g[W+64+8>>2]*.5;g[W+96>>2]=+g[W+64>>2]*.5;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[K&127](M,d,W+160|0,W+96|0);d=c[S+712>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}if(L&32|0){if((a[22664]|0)==0?iy(22664)|0:0){c[5804]=1065353216;c[5805]=0;c[5806]=0;c[5807]=0;c[5808]=0;c[5809]=1065353216;c[5810]=0;c[5811]=0;c[5812]=0;c[5813]=0;c[5814]=1065353216;g[5815]=0.0;}if((c[S+812>>2]|0)>0){d=0;do{K=c[S+820>>2]|0;I=c[K+(d*104|0)+24>>2]|0;B=+g[I+8>>2];J=K+(d*104|0)+4|0;C=+g[J>>2];F=+g[I+12>>2];r=K+(d*104|0)+8|0;H=+g[r>>2];fa=+g[I+16>>2];I=K+(d*104|0)+12|0;da=+g[I>>2];ba=+g[K+(d*104|0)+20>>2]+(B*C+F*H+fa*da);g[W+160>>2]=B-C*ba;g[W+160+4>>2]=F-H*ba;g[W+160+8>>2]=fa-da*ba;g[W+160+12>>2]=0.0;X=+g[J>>2];Z=+g[r>>2];D=+g[I>>2];K=+g[K+(d*104|0)+4+((!(X<Z)&1)<<2)>>2]<D?!(X<Z)&1:2;E=+g[23216+(K<<4)+8>>2];Y=+g[23216+(K<<4)+4>>2];_=+g[23216+(K<<4)>>2];$=1.0/+G(+((X*Y-Z*_)*(X*Y-Z*_)+((Z*E-D*Y)*(Z*E-D*Y)+(D*_-X*E)*(D*_-X*E))));aa=D*(D*_-X*E)*$-Z*(X*Y-Z*_)*$;ca=X*(X*Y-Z*_)*$-D*(Z*E-D*Y)*$;ga=Z*(Z*E-D*Y)*$-X*(D*_-X*E)*$;ea=1.0/+G(+(ga*ga+(aa*aa+ca*ca)));K=c[(c[M>>2]|0)+8>>2]|0;g[W+96>>2]=B-C*ba-(Z*E-D*Y)*$*.5;g[W+96+4>>2]=F-H*ba-(D*_-X*E)*$*.5;g[W+96+8>>2]=fa-da*ba-(X*Y-Z*_)*$*.5;g[W+96+12>>2]=0.0;g[W+32>>2]=(Z*E-D*Y)*$*.5+(B-C*ba);g[W+32+4>>2]=(D*_-X*E)*$*.5+(F-H*ba);g[W+32+8>>2]=(X*Y-Z*_)*$*.5+(fa-da*ba);g[W+32+12>>2]=0.0;Zb[K&127](M,W+96|0,W+32|0,W+48|0);K=c[(c[M>>2]|0)+8>>2]|0;ba=+g[W+160>>2];da=+g[W+160+4>>2];fa=+g[W+160+8>>2];g[W+96>>2]=ba-ea*aa*.5;g[W+96+4>>2]=da-ea*ca*.5;g[W+96+8>>2]=fa-ea*ga*.5;g[W+96+12>>2]=0.0;g[W+32>>2]=ea*aa*.5+ba;g[W+32+4>>2]=ea*ca*.5+da;g[W+32+8>>2]=ea*ga*.5+fa;g[W+32+12>>2]=0.0;Zb[K&127](M,W+96|0,W+32|0,W+48|0);K=c[(c[M>>2]|0)+8>>2]|0;fa=+g[r>>2]*.5*3.0+ +g[W+160+4>>2];ga=+g[I>>2]*.5*3.0+ +g[W+160+8>>2];g[W+96>>2]=+g[J>>2]*.5*3.0+ +g[W+160>>2];g[W+96+4>>2]=fa;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;c[W+32>>2]=1065353216;c[W+32+4>>2]=1065353216;c[W+32+8>>2]=0;g[W+32+12>>2]=0.0;Zb[K&127](M,W+160|0,W+96|0,W+32|0);d=d+1|0;}while((d|0)<(c[S+812>>2]|0))}}if(L&4|0?(c[W+160>>2]=0,c[W+160+4>>2]=1060320051,c[W+160+8>>2]=0,g[W+160+12>>2]=0.0,O=c[S+752>>2]|0,(O|0)>0):0){f=0;d=O;do{e=c[S+760>>2]|0;if(c[(c[e+(f*44|0)+4>>2]|0)+16>>2]&1){d=c[e+(f*44|0)+8>>2]|0;_=+g[d+8>>2];ba=+g[d+12>>2];ea=+g[d+16>>2];d=c[e+(f*44|0)+12>>2]|0;$=+g[d+8>>2];ca=+g[d+12>>2];fa=+g[d+16>>2];d=c[e+(f*44|0)+16>>2]|0;aa=+g[d+8>>2];da=+g[d+12>>2];ga=+g[d+16>>2];d=c[(c[M>>2]|0)+28>>2]|0;g[W+96>>2]=(_+$+aa)*.3333333432674408+(_-(_+$+aa)*.3333333432674408)*.800000011920929;g[W+96+4>>2]=(ba+ca+da)*.3333333432674408+(ba-(ba+ca+da)*.3333333432674408)*.800000011920929;g[W+96+8>>2]=(ea+fa+ga)*.3333333432674408+(ea-(ea+fa+ga)*.3333333432674408)*.800000011920929;g[W+96+12>>2]=0.0;g[W+32>>2]=(_+$+aa)*.3333333432674408+($-(_+$+aa)*.3333333432674408)*.800000011920929;g[W+32+4>>2]=(ba+ca+da)*.3333333432674408+(ca-(ba+ca+da)*.3333333432674408)*.800000011920929;g[W+32+8>>2]=(ea+fa+ga)*.3333333432674408+(fa-(ea+fa+ga)*.3333333432674408)*.800000011920929;g[W+32+12>>2]=0.0;g[W+16>>2]=(_+$+aa)*.3333333432674408+(aa-(_+$+aa)*.3333333432674408)*.800000011920929;g[W+16+4>>2]=(ba+ca+da)*.3333333432674408+(da-(ba+ca+da)*.3333333432674408)*.800000011920929;g[W+16+8>>2]=(ea+fa+ga)*.3333333432674408+(ga-(ea+fa+ga)*.3333333432674408)*.800000011920929;g[W+16+12>>2]=0.0;Ab[d&0](M,W+96|0,W+32|0,W+16|0,W+160|0,1.0);d=c[S+752>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}if(L&8|0?(c[W+160>>2]=1050253722,c[W+160+4>>2]=1050253722,c[W+160+8>>2]=1060320051,g[W+160+12>>2]=0.0,P=c[S+772>>2]|0,(P|0)>0):0){f=0;d=P;do{e=c[S+780>>2]|0;if(c[(c[e+(f*104|0)+4>>2]|0)+16>>2]&1){d=c[e+(f*104|0)+8>>2]|0;y=+g[d+8>>2];B=+g[d+12>>2];E=+g[d+16>>2];d=c[e+(f*104|0)+12>>2]|0;z=+g[d+8>>2];C=+g[d+12>>2];F=+g[d+16>>2];d=c[e+(f*104|0)+16>>2]|0;A=+g[d+8>>2];D=+g[d+12>>2];H=+g[d+16>>2];d=c[e+(f*104|0)+20>>2]|0;ea=+g[d+8>>2];fa=+g[d+12>>2];ga=+g[d+16>>2];d=c[(c[M>>2]|0)+28>>2]|0;ba=(y+z+A+ea)*.25+(y-(y+z+A+ea)*.25)*.800000011920929;ca=(B+C+D+fa)*.25+(B-(B+C+D+fa)*.25)*.800000011920929;da=(E+F+H+ga)*.25+(E-(E+F+H+ga)*.25)*.800000011920929;g[W+96>>2]=ba;g[W+96+4>>2]=ca;g[W+96+8>>2]=da;g[W+96+12>>2]=0.0;X=(y+z+A+ea)*.25+(z-(y+z+A+ea)*.25)*.800000011920929;Y=(B+C+D+fa)*.25+(C-(B+C+D+fa)*.25)*.800000011920929;Z=(E+F+H+ga)*.25+(F-(E+F+H+ga)*.25)*.800000011920929;g[W+32>>2]=X;g[W+32+4>>2]=Y;g[W+32+8>>2]=Z;g[W+32+12>>2]=0.0;_=(y+z+A+ea)*.25+(A-(y+z+A+ea)*.25)*.800000011920929;$=(B+C+D+fa)*.25+(D-(B+C+D+fa)*.25)*.800000011920929;aa=(E+F+H+ga)*.25+(H-(E+F+H+ga)*.25)*.800000011920929;g[W+16>>2]=_;g[W+16+4>>2]=$;g[W+16+8>>2]=aa;g[W+16+12>>2]=0.0;Ab[d&0](M,W+96|0,W+32|0,W+16|0,W+160|0,1.0);d=c[(c[M>>2]|0)+28>>2]|0;g[W+96>>2]=ba;g[W+96+4>>2]=ca;g[W+96+8>>2]=da;g[W+96+12>>2]=0.0;g[W+32>>2]=X;g[W+32+4>>2]=Y;g[W+32+8>>2]=Z;g[W+32+12>>2]=0.0;ea=(y+z+A+ea)*.25+(ea-(y+z+A+ea)*.25)*.800000011920929;fa=(B+C+D+fa)*.25+(fa-(B+C+D+fa)*.25)*.800000011920929;ga=(E+F+H+ga)*.25+(ga-(E+F+H+ga)*.25)*.800000011920929;g[W+16>>2]=ea;g[W+16+4>>2]=fa;g[W+16+8>>2]=ga;g[W+16+12>>2]=0.0;Ab[d&0](M,W+96|0,W+32|0,W+16|0,W+160|0,1.0);d=c[(c[M>>2]|0)+28>>2]|0;g[W+96>>2]=X;g[W+96+4>>2]=Y;g[W+96+8>>2]=Z;g[W+96+12>>2]=0.0;g[W+32>>2]=_;g[W+32+4>>2]=$;g[W+32+8>>2]=aa;g[W+32+12>>2]=0.0;g[W+16>>2]=ea;g[W+16+4>>2]=fa;g[W+16+8>>2]=ga;g[W+16+12>>2]=0.0;Ab[d&0](M,W+96|0,W+32|0,W+16|0,W+160|0,1.0);d=c[(c[M>>2]|0)+28>>2]|0;g[W+96>>2]=_;g[W+96+4>>2]=$;g[W+96+8>>2]=aa;g[W+96+12>>2]=0.0;g[W+32>>2]=ba;g[W+32+4>>2]=ca;g[W+32+8>>2]=da;g[W+32+12>>2]=0.0;g[W+16>>2]=ea;g[W+16+4>>2]=fa;g[W+16+8>>2]=ga;g[W+16+12>>2]=0.0;Ab[d&0](M,W+96|0,W+32|0,W+16|0,W+160|0,1.0);d=c[S+772>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}}else{JG();d=c[S+1112>>2]|0;if((d|0)>0){K=0;do{if(a[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+377>>0]|0){da=+(vr()|0)*4.656612873077393e-10;ea=+(vr()|0)*4.656612873077393e-10;fa=+(vr()|0)*4.656612873077393e-10;ga=1.0/+G(+(fa*fa+(da*da+ea*ea)));g[W+160>>2]=da*ga*.75;g[W+160+4>>2]=ea*ga*.75;g[W+160+8>>2]=fa*ga*.75;g[W+160+12>>2]=0.0;f=c[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+24>>2]|0;if((f|0)>0){c[6436]=(c[6436]|0)+1;d=ic((f<<4|3)+16|0)|0;if(!d)e=0;else{c[(d+4+15&-16)+-4>>2]=d;e=d+4+15&-16;}d=0;do{J=e+(d<<4)|0;c[J>>2]=c[W+96>>2];c[J+4>>2]=c[W+96+4>>2];c[J+8>>2]=c[W+96+8>>2];c[J+12>>2]=c[W+96+12>>2];d=d+1|0;}while((d|0)!=(f|0));d=0;do{I=(c[(c[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+32>>2]|0)+(d<<2)>>2]|0)+8|0;J=e+(d<<4)|0;c[J>>2]=c[I>>2];c[J+4>>2]=c[I+4>>2];c[J+8>>2]=c[I+8>>2];c[J+12>>2]=c[I+12>>2];d=d+1|0;}while((d|0)!=(f|0));J=e;I=e;}else{J=0;I=0;}a[W+96+16>>0]=1;c[W+96+12>>2]=0;c[W+96+4>>2]=0;c[W+96+8>>2]=0;a[W+96+36>>0]=1;c[Q>>2]=0;c[W+96+24>>2]=0;c[W+96+28>>2]=0;a[W+96+56>>0]=1;c[R>>2]=0;c[W+96+44>>2]=0;c[W+96+48>>2]=0;mc(W+96|0,I,f);q=c[W+96+44>>2]|0;if((q|0)>0){o=c[Q>>2]|0;n=0;do{r=c[(c[R>>2]|0)+(n<<2)>>2]|0;e=c[o+(r*12|0)+4>>2]|0;d=o+(r*12|0)+(e*12|0)+((c[o+(r*12|0)+(e*12|0)>>2]|0)*12|0)|0;if((d|0)!=(o+(r*12|0)|0)){p=c[W+96+12>>2]|0;e=c[o+(r*12|0)+(e*12|0)+8>>2]|0;f=c[o+(r*12|0)+8>>2]|0;while(1){h=c[d+8>>2]|0;Ab[c[(c[M>>2]|0)+28>>2]&0](M,p+(e<<4)|0,p+(f<<4)|0,p+(h<<4)|0,W+160|0,1.0);e=d+((c[d+4>>2]|0)*12|0)|0;d=e+((c[e>>2]|0)*12|0)|0;if((d|0)==(o+(r*12|0)|0))break;else{e=f;f=h;}}}n=n+1|0;}while((n|0)<(q|0))}d=c[R>>2]|0;if(d|0){if(a[W+96+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[R>>2]=0;}a[W+96+56>>0]=1;c[R>>2]=0;c[W+96+44>>2]=0;c[W+96+48>>2]=0;d=c[Q>>2]|0;if(d|0){if(a[W+96+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[Q>>2]=0;}a[W+96+36>>0]=1;c[Q>>2]=0;c[W+96+24>>2]=0;c[W+96+28>>2]=0;d=c[W+96+12>>2]|0;if(d|0){if(a[W+96+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[W+96+12>>2]=0;}if(!((J|0)==0|(I|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[I+-4>>2]|0);}d=c[S+1112>>2]|0;}K=K+1|0;}while((K|0)<(d|0))}}if(L&64|0){if((c[S+792>>2]|0)>0){d=0;do{K=c[S+800>>2]|0;q=c[K+(d*96|0)+20>>2]|0;ca=+g[K+(d*96|0)+4>>2];da=+g[K+(d*96|0)+8>>2];ea=+g[K+(d*96|0)+12>>2];fa=ca*+g[q+20>>2]+da*+g[q+24>>2]+ea*+g[q+28>>2]+ +g[q+56>>2];ga=ca*+g[q+36>>2]+da*+g[q+40>>2]+ea*+g[q+44>>2]+ +g[q+60>>2];g[W+32>>2]=ca*+g[q+4>>2]+da*+g[q+8>>2]+ea*+g[q+12>>2]+ +g[q+52>>2];g[W+32+4>>2]=fa;g[W+32+8>>2]=ga;g[W+32+12>>2]=0.0;K=K+(d*96|0)|0;q=c[K>>2]|0;c[W+16>>2]=1065353216;c[W+16+4>>2]=0;c[W+16+8>>2]=0;g[W+16+12>>2]=0.0;J=c[(c[M>>2]|0)+8>>2]|0;ga=+g[q+8>>2];I=c[q+12>>2]|0;r=c[q+16>>2]|0;g[W+160>>2]=ga+-.25;c[W+160+4>>2]=I;c[W+160+8>>2]=r;g[W+160+12>>2]=0.0;fa=(c[j>>2]=I,+g[j>>2])+0.0;ea=(c[j>>2]=r,+g[j>>2])+0.0;g[W+96>>2]=ga+.25;g[W+96+4>>2]=fa;g[W+96+8>>2]=ea;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);J=c[(c[M>>2]|0)+8>>2]|0;r=c[q+8>>2]|0;ea=+g[q+12>>2];I=c[q+16>>2]|0;c[W+160>>2]=r;g[W+160+4>>2]=ea+-.25;c[W+160+8>>2]=I;g[W+160+12>>2]=0.0;fa=(c[j>>2]=r,+g[j>>2])+0.0;ga=(c[j>>2]=I,+g[j>>2])+0.0;g[W+96>>2]=fa;g[W+96+4>>2]=ea+.25;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);J=c[(c[M>>2]|0)+8>>2]|0;I=c[q+8>>2]|0;r=c[q+12>>2]|0;ga=+g[q+16>>2];c[W+160>>2]=I;c[W+160+4>>2]=r;g[W+160+8>>2]=ga+-.25;g[W+160+12>>2]=0.0;ea=(c[j>>2]=I,+g[j>>2])+0.0;fa=(c[j>>2]=r,+g[j>>2])+0.0;g[W+96>>2]=ea;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga+.25;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);c[W+16>>2]=0;c[W+16+4>>2]=1065353216;c[W+16+8>>2]=0;g[W+16+12>>2]=0.0;J=c[(c[M>>2]|0)+8>>2]|0;ga=+g[W+32>>2];r=c[W+32+4>>2]|0;I=c[W+32+8>>2]|0;g[W+160>>2]=ga+-.25;c[W+160+4>>2]=r;c[W+160+8>>2]=I;g[W+160+12>>2]=0.0;fa=(c[j>>2]=r,+g[j>>2])+0.0;ea=(c[j>>2]=I,+g[j>>2])+0.0;g[W+96>>2]=ga+.25;g[W+96+4>>2]=fa;g[W+96+8>>2]=ea;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);J=c[(c[M>>2]|0)+8>>2]|0;I=c[W+32>>2]|0;ea=+g[W+32+4>>2];r=c[W+32+8>>2]|0;c[W+160>>2]=I;g[W+160+4>>2]=ea+-.25;c[W+160+8>>2]=r;g[W+160+12>>2]=0.0;fa=(c[j>>2]=I,+g[j>>2])+0.0;ga=(c[j>>2]=r,+g[j>>2])+0.0;g[W+96>>2]=fa;g[W+96+4>>2]=ea+.25;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);J=c[(c[M>>2]|0)+8>>2]|0;r=c[W+32>>2]|0;I=c[W+32+4>>2]|0;ga=+g[W+32+8>>2];c[W+160>>2]=r;c[W+160+4>>2]=I;g[W+160+8>>2]=ga+-.25;g[W+160+12>>2]=0.0;ea=(c[j>>2]=r,+g[j>>2])+0.0;fa=(c[j>>2]=I,+g[j>>2])+0.0;g[W+96>>2]=ea;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga+.25;g[W+96+12>>2]=0.0;Zb[J&127](M,W+160|0,W+96|0,W+16|0);J=c[(c[M>>2]|0)+8>>2]|0;K=(c[K>>2]|0)+8|0;c[W+160>>2]=1065353216;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;Zb[J&127](M,K,W+32|0,W+160|0);d=d+1|0;}while((d|0)<(c[S+792>>2]|0))}d=c[S+712>>2]|0;if((d|0)>0){f=0;do{e=c[S+720>>2]|0;if((c[(c[e+(f*104|0)+4>>2]|0)+16>>2]&1|0)!=0?+g[e+(f*104|0)+88>>2]<=0.0:0){J=e+(f*104|0)+8|0;c[W+32>>2]=1065353216;c[W+32+4>>2]=0;c[W+32+8>>2]=0;g[W+32+12>>2]=0.0;d=c[(c[M>>2]|0)+8>>2]|0;ga=+g[J>>2];K=e+(f*104|0)+12|0;r=c[K>>2]|0;I=e+(f*104|0)+16|0;q=c[I>>2]|0;g[W+160>>2]=ga+-.25;c[W+160+4>>2]=r;c[W+160+8>>2]=q;g[W+160+12>>2]=0.0;fa=(c[j>>2]=r,+g[j>>2])+0.0;ea=(c[j>>2]=q,+g[j>>2])+0.0;g[W+96>>2]=ga+.25;g[W+96+4>>2]=fa;g[W+96+8>>2]=ea;g[W+96+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[(c[M>>2]|0)+8>>2]|0;q=c[J>>2]|0;ea=+g[K>>2];r=c[I>>2]|0;c[W+160>>2]=q;g[W+160+4>>2]=ea+-.25;c[W+160+8>>2]=r;g[W+160+12>>2]=0.0;fa=(c[j>>2]=q,+g[j>>2])+0.0;ga=(c[j>>2]=r,+g[j>>2])+0.0;g[W+96>>2]=fa;g[W+96+4>>2]=ea+.25;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[(c[M>>2]|0)+8>>2]|0;J=c[J>>2]|0;K=c[K>>2]|0;ga=+g[I>>2];c[W+160>>2]=J;c[W+160+4>>2]=K;g[W+160+8>>2]=ga+-.25;g[W+160+12>>2]=0.0;ea=(c[j>>2]=J,+g[j>>2])+0.0;fa=(c[j>>2]=K,+g[j>>2])+0.0;g[W+96>>2]=ea;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga+.25;g[W+96+12>>2]=0.0;Zb[d&127](M,W+160|0,W+96|0,W+32|0);d=c[S+712>>2]|0;}f=f+1|0;}while((f|0)<(d|0))}}if(L&128|0?(c[S+692>>2]|0)>0:0){e=0;do{f=c[S+700>>2]|0;h=f+(e*60|0)+8|0;c[W+160>>2]=c[h>>2];c[W+160+4>>2]=c[h+4>>2];c[W+160+8>>2]=c[h+8>>2];c[W+160+12>>2]=c[h+12>>2];h=c[f+(e*60|0)+24>>2]|0;if((h|0)>0){d=0;i=+g[W+160>>2];k=+g[W+160+4>>2];m=+g[W+160+8>>2];do{K=c[f+(e*60|0)+28+(d<<2)>>2]|0;ga=+g[f+(e*60|0)+44+(d<<2)>>2];i=+g[K+8>>2]*ga+i;k=ga*+g[K+12>>2]+k;m=ga*+g[K+16>>2]+m;g[W+160+8>>2]=m;d=d+1|0;}while((d|0)!=(h|0));g[W+160>>2]=i;g[W+160+4>>2]=k;}Vb[c[(c[M>>2]|0)+40>>2]&127](M,W+160|0,c[f+(e*60|0)+4>>2]|0);e=e+1|0;}while((e|0)<(c[S+692>>2]|0))}if(L&512|0){K=c[S+928>>2]|0;c[W+160>>2]=1065353216;c[W+160+4>>2]=0;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=1065353216;c[W+96+8>>2]=1065353216;g[W+96+12>>2]=0.0;Af(M,K,0,W+160|0,W+96|0);}if(L&1024|0){K=c[S+988>>2]|0;c[W+160>>2]=0;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=0;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=0;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Af(M,K,0,W+160|0,W+96|0);}if(L&2048|0){K=c[S+1048>>2]|0;c[W+160>>2]=0;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=0;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Af(M,K,0,W+160|0,W+96|0);}a:do if(L&4096|0?(c[S+852>>2]|0)>0:0){d=0;while(1){e=c[(c[S+860>>2]|0)+(d<<2)>>2]|0;switch(pb[c[(c[e>>2]|0)+20>>2]&127](e)|0){case 0:{L=di(e+4|0)|0;ga=+g[e+28>>2];fa=+g[e+32>>2];ea=+g[e+36>>2];da=ga*+g[L+16>>2]+fa*+g[L+20>>2]+ea*+g[L+24>>2]+ +g[L+52>>2];ca=ga*+g[L+32>>2]+fa*+g[L+36>>2]+ea*+g[L+40>>2]+ +g[L+56>>2];g[W+32>>2]=ga*+g[L>>2]+fa*+g[L+4>>2]+ea*+g[L+8>>2]+ +g[L+48>>2];g[W+32+4>>2]=da;g[W+32+8>>2]=ca;g[W+32+12>>2]=0.0;L=di(e+16|0)|0;ca=+g[e+44>>2];da=+g[e+48>>2];ea=+g[e+52>>2];fa=ca*+g[L+16>>2]+da*+g[L+20>>2]+ea*+g[L+24>>2]+ +g[L+52>>2];ga=ca*+g[L+32>>2]+da*+g[L+36>>2]+ea*+g[L+40>>2]+ +g[L+56>>2];g[W+16>>2]=ca*+g[L>>2]+da*+g[L+4>>2]+ea*+g[L+8>>2]+ +g[L+48>>2];g[W+16+4>>2]=fa;g[W+16+8>>2]=ga;g[W+16+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;K=(di(e+4|0)|0)+48|0;c[W+160>>2]=1065353216;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=0;g[W+160+12>>2]=0.0;Zb[L&127](M,K,W+32|0,W+160|0);K=c[(c[M>>2]|0)+8>>2]|0;L=(di(e+16|0)|0)+48|0;c[W+160>>2]=0;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;Zb[K&127](M,L,W+16|0,W+160|0);c[W>>2]=1065353216;c[W+4>>2]=1065353216;c[W+8>>2]=0;g[W+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;ga=+g[W+32>>2];K=c[W+32+4>>2]|0;J=c[W+32+8>>2]|0;g[W+160>>2]=ga+-.25;c[W+160+4>>2]=K;c[W+160+8>>2]=J;g[W+160+12>>2]=0.0;fa=(c[j>>2]=K,+g[j>>2])+0.0;ea=(c[j>>2]=J,+g[j>>2])+0.0;g[W+96>>2]=ga+.25;g[W+96+4>>2]=fa;g[W+96+8>>2]=ea;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);L=c[(c[M>>2]|0)+8>>2]|0;J=c[W+32>>2]|0;ea=+g[W+32+4>>2];K=c[W+32+8>>2]|0;c[W+160>>2]=J;g[W+160+4>>2]=ea+-.25;c[W+160+8>>2]=K;g[W+160+12>>2]=0.0;fa=(c[j>>2]=J,+g[j>>2])+0.0;ga=(c[j>>2]=K,+g[j>>2])+0.0;g[W+96>>2]=fa;g[W+96+4>>2]=ea+.25;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);L=c[(c[M>>2]|0)+8>>2]|0;K=c[W+32>>2]|0;J=c[W+32+4>>2]|0;ga=+g[W+32+8>>2];c[W+160>>2]=K;c[W+160+4>>2]=J;g[W+160+8>>2]=ga+-.25;g[W+160+12>>2]=0.0;ea=(c[j>>2]=K,+g[j>>2])+0.0;fa=(c[j>>2]=J,+g[j>>2])+0.0;g[W+96>>2]=ea;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga+.25;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);c[W>>2]=0;c[W+4>>2]=1065353216;c[W+8>>2]=1065353216;g[W+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;ga=+g[W+16>>2];J=c[W+16+4>>2]|0;K=c[W+16+8>>2]|0;g[W+160>>2]=ga+-.25;c[W+160+4>>2]=J;c[W+160+8>>2]=K;g[W+160+12>>2]=0.0;fa=(c[j>>2]=J,+g[j>>2])+0.0;ea=(c[j>>2]=K,+g[j>>2])+0.0;g[W+96>>2]=ga+.25;g[W+96+4>>2]=fa;g[W+96+8>>2]=ea;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);L=c[(c[M>>2]|0)+8>>2]|0;K=c[W+16>>2]|0;ea=+g[W+16+4>>2];J=c[W+16+8>>2]|0;c[W+160>>2]=K;g[W+160+4>>2]=ea+-.25;c[W+160+8>>2]=J;g[W+160+12>>2]=0.0;fa=(c[j>>2]=K,+g[j>>2])+0.0;ga=(c[j>>2]=J,+g[j>>2])+0.0;g[W+96>>2]=fa;g[W+96+4>>2]=ea+.25;g[W+96+8>>2]=ga;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);L=c[(c[M>>2]|0)+8>>2]|0;J=c[W+16>>2]|0;K=c[W+16+4>>2]|0;ga=+g[W+16+8>>2];c[W+160>>2]=J;c[W+160+4>>2]=K;g[W+160+8>>2]=ga+-.25;g[W+160+12>>2]=0.0;ea=(c[j>>2]=J,+g[j>>2])+0.0;fa=(c[j>>2]=K,+g[j>>2])+0.0;g[W+96>>2]=ea;g[W+96+4>>2]=fa;g[W+96+8>>2]=ga+.25;g[W+96+12>>2]=0.0;Zb[L&127](M,W+160|0,W+96|0,W);break}case 1:{L=(di(e+4|0)|0)+48|0;c[W+160>>2]=c[L>>2];c[W+160+4>>2]=c[L+4>>2];c[W+160+8>>2]=c[L+8>>2];c[W+160+12>>2]=c[L+12>>2];L=(di(e+16|0)|0)+48|0;c[W+96>>2]=c[L>>2];c[W+96+4>>2]=c[L+4>>2];c[W+96+8>>2]=c[L+8>>2];c[W+96+12>>2]=c[L+12>>2];L=di(e+4|0)|0;aa=+g[e+28>>2];$=+g[e+32>>2];da=+g[e+36>>2];ba=+g[L>>2]*aa+ +g[L+4>>2]*$+ +g[L+8>>2]*da;ca=aa*+g[L+16>>2]+$*+g[L+20>>2]+da*+g[L+24>>2];da=aa*+g[L+32>>2]+$*+g[L+36>>2]+da*+g[L+40>>2];L=di(e+16|0)|0;$=+g[e+44>>2];aa=+g[e+48>>2];ga=+g[e+52>>2];ea=+g[L>>2]*$+ +g[L+4>>2]*aa+ +g[L+8>>2]*ga;fa=$*+g[L+16>>2]+aa*+g[L+20>>2]+ga*+g[L+24>>2];ga=$*+g[L+32>>2]+aa*+g[L+36>>2]+ga*+g[L+40>>2];L=c[(c[M>>2]|0)+8>>2]|0;aa=ca*10.0+ +g[W+160+4>>2];$=da*10.0+ +g[W+160+8>>2];g[W+32>>2]=ba*10.0+ +g[W+160>>2];g[W+32+4>>2]=aa;g[W+32+8>>2]=$;g[W+32+12>>2]=0.0;c[W+16>>2]=1065353216;c[W+16+4>>2]=1065353216;c[W+16+8>>2]=0;g[W+16+12>>2]=0.0;Zb[L&127](M,W+160|0,W+32|0,W+16|0);L=c[(c[M>>2]|0)+8>>2]|0;$=fa*10.0+ +g[W+160+4>>2];aa=ga*10.0+ +g[W+160+8>>2];g[W+32>>2]=ea*10.0+ +g[W+160>>2];g[W+32+4>>2]=$;g[W+32+8>>2]=aa;g[W+32+12>>2]=0.0;c[W+16>>2]=1065353216;c[W+16+4>>2]=1065353216;c[W+16+8>>2]=0;g[W+16+12>>2]=0.0;Zb[L&127](M,W+160|0,W+32|0,W+16|0);L=c[(c[M>>2]|0)+8>>2]|0;ca=ca*10.0+ +g[W+96+4>>2];da=da*10.0+ +g[W+96+8>>2];g[W+32>>2]=ba*10.0+ +g[W+96>>2];g[W+32+4>>2]=ca;g[W+32+8>>2]=da;g[W+32+12>>2]=0.0;c[W+16>>2]=0;c[W+16+4>>2]=1065353216;c[W+16+8>>2]=1065353216;g[W+16+12>>2]=0.0;Zb[L&127](M,W+96|0,W+32|0,W+16|0);L=c[(c[M>>2]|0)+8>>2]|0;fa=fa*10.0+ +g[W+96+4>>2];ga=ga*10.0+ +g[W+96+8>>2];g[W+32>>2]=ea*10.0+ +g[W+96>>2];g[W+32+4>>2]=fa;g[W+32+8>>2]=ga;g[W+32+12>>2]=0.0;c[W+16>>2]=0;c[W+16+4>>2]=1065353216;c[W+16+8>>2]=1065353216;g[W+16+12>>2]=0.0;Zb[L&127](M,W+96|0,W+32|0,W+16|0);break}default:{}}d=d+1|0;if((d|0)>=(c[S+852>>2]|0))break a}}while(0)}d=c[b+72>>2]|0;if(d|0?(pb[c[(c[d>>2]|0)+48>>2]&127](d)|0)&2|0:0){if(a[b+348>>0]|0){L=c[b+72>>2]|0;M=c[S+928>>2]|0;c[W+160>>2]=1065353216;c[W+160+4>>2]=0;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=1065353216;c[W+96+8>>2]=1065353216;g[W+96+12>>2]=0.0;Af(L,M,0,W+160|0,W+96|0);}if(a[b+349>>0]|0){L=c[b+72>>2]|0;M=c[S+988>>2]|0;c[W+160>>2]=0;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=0;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=0;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Af(L,M,0,W+160|0,W+96|0);}if(a[b+350>>0]|0){M=c[b+72>>2]|0;S=c[S+1048>>2]|0;c[W+160>>2]=0;c[W+160+4>>2]=1065353216;c[W+160+8>>2]=1065353216;g[W+160+12>>2]=0.0;c[W+96>>2]=1065353216;c[W+96+4>>2]=0;c[W+96+8>>2]=0;g[W+96+12>>2]=0.0;Af(M,S,0,W+160|0,W+96|0);}}N=N+1|0;}while((N|0)<(c[b+328>>2]|0));l=W;return}function bc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0.0,m=0.0,n=0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0;da=l;l=l+80|0;if((e|0)<=0){l=da;return}U=0;do{X=c[d+(U<<2)>>2]|0;Y=c[X+740>>2]|0;Z=c[X+744>>2]|0;_=Cj(b,Y,+g[f+12>>2])|0;$=Cj(b,Z,+g[f+12>>2])|0;aa=c[b+16>>2]|0;if(!(((((+g[aa+(_*244|0)+128>>2]==0.0?+g[aa+(_*244|0)+132>>2]==0.0:0)?+g[aa+(_*244|0)+136>>2]==0.0:0)?+g[aa+($*244|0)+128>>2]==0.0:0)?+g[aa+($*244|0)+132>>2]==0.0:0)?+g[aa+($*244|0)+136>>2]==0.0:0))ca=9;if((ca|0)==9?(ca=0,ba=c[X+748>>2]|0,(ba|0)>0):0){V=0;h=1;i=ba;do{S=X+4+(V*184|0)|0;p=X+4+(V*184|0)+80|0;if(+g[p>>2]<=+g[X+756>>2]){T=c[b+28>>2]|0;if((T|0)==(c[b+32>>2]|0)?(W=T|0?T<<1:1,(T|0)<(W|0)):0){if(!W){i=0;n=T;}else{c[6436]=(c[6436]|0)+1;i=ic((W*152|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}n=c[b+28>>2]|0;}if((n|0)>0){j=0;do{Vh(i+(j*152|0)|0,(c[b+36>>2]|0)+(j*152|0)|0,152)|0;j=j+1|0;}while((j|0)!=(n|0))}j=c[b+36>>2]|0;if(j|0){if(a[b+40>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[b+36>>2]=0;}a[b+40>>0]=1;c[b+36>>2]=i;c[b+32>>2]=W;i=c[b+28>>2]|0;}else i=T;c[b+28>>2]=i+1;R=c[b+36>>2]|0;q=(c[Y+236>>2]&2|0)==0?0:Y;r=(c[Z+236>>2]&2|0)==0?0:Z;c[R+(T*152|0)+144>>2]=_;c[R+(T*152|0)+148>>2]=$;c[R+(T*152|0)+132>>2]=S;z=+g[X+4+(V*184|0)+48>>2]-+g[Y+52>>2];A=+g[X+4+(V*184|0)+52>>2]-+g[Y+56>>2];y=+g[X+4+(V*184|0)+56>>2]-+g[Y+60>>2];g[da+64>>2]=z;g[da+64+4>>2]=A;g[da+64+8>>2]=y;g[da+64+12>>2]=0.0;D=+g[X+4+(V*184|0)+32>>2]-+g[Z+52>>2];E=+g[X+4+(V*184|0)+36>>2]-+g[Z+56>>2];C=+g[X+4+(V*184|0)+40>>2]-+g[Z+60>>2];g[da+48>>2]=D;g[da+48+4>>2]=E;g[da+48+8>>2]=C;g[da+48+12>>2]=0.0;if(!(c[aa+(_*244|0)+240>>2]|0)){m=0.0;s=0.0;u=0.0;}else{N=+g[aa+(_*244|0)+192>>2]+ +g[aa+(_*244|0)+224>>2];u=+g[aa+(_*244|0)+196>>2]+ +g[aa+(_*244|0)+228>>2];s=+g[aa+(_*244|0)+200>>2]+ +g[aa+(_*244|0)+232>>2];m=+g[aa+(_*244|0)+176>>2]+ +g[aa+(_*244|0)+208>>2]+(u*y-s*A);s=+g[aa+(_*244|0)+180>>2]+ +g[aa+(_*244|0)+212>>2]+(s*z-N*y);u=+g[aa+(_*244|0)+184>>2]+ +g[aa+(_*244|0)+216>>2]+(N*A-u*z);}if(!(c[aa+($*244|0)+240>>2]|0)){k=0.0;o=0.0;t=0.0;}else{N=+g[aa+($*244|0)+192>>2]+ +g[aa+($*244|0)+224>>2];t=+g[aa+($*244|0)+196>>2]+ +g[aa+($*244|0)+228>>2];o=+g[aa+($*244|0)+200>>2]+ +g[aa+($*244|0)+232>>2];k=+g[aa+($*244|0)+176>>2]+ +g[aa+($*244|0)+208>>2]+(t*C-o*E);o=+g[aa+($*244|0)+180>>2]+ +g[aa+($*244|0)+212>>2]+(o*D-N*C);t=+g[aa+($*244|0)+184>>2]+ +g[aa+($*244|0)+216>>2]+(N*E-t*D);}N=m-k;M=s-o;I=u-t;O=X+4+(V*184|0)+64|0;J=+g[O>>2];P=X+4+(V*184|0)+68|0;K=+g[P>>2];Q=X+4+(V*184|0)+72|0;L=+g[Q>>2];n=c[b+16>>2]|0;i=c[n+(_*244|0)+240>>2]|0;j=c[n+($*244|0)+240>>2]|0;if(i|0){k=((A*L-y*K)*+g[i+264>>2]+(y*J-L*z)*+g[i+268>>2]+(K*z-A*J)*+g[i+272>>2])*+g[i+544>>2];m=((A*L-y*K)*+g[i+280>>2]+(y*J-L*z)*+g[i+284>>2]+(K*z-A*J)*+g[i+288>>2])*+g[i+548>>2];o=((A*L-y*K)*+g[i+296>>2]+(y*J-L*z)*+g[i+300>>2]+(K*z-A*J)*+g[i+304>>2])*+g[i+552>>2];}else{k=0.0;m=0.0;o=0.0;}g[R+(T*152|0)+64>>2]=k;g[R+(T*152|0)+68>>2]=m;g[R+(T*152|0)+72>>2]=o;g[R+(T*152|0)+76>>2]=0.0;v=+g[Q>>2];w=+g[P>>2];x=+g[O>>2];if(j|0){s=(+g[j+264>>2]*-(E*v-C*w)+ +g[j+268>>2]*-(C*x-v*D)+ +g[j+272>>2]*-(w*D-E*x))*+g[j+544>>2];t=(+g[j+280>>2]*-(E*v-C*w)+ +g[j+284>>2]*-(C*x-v*D)+ +g[j+288>>2]*-(w*D-E*x))*+g[j+548>>2];u=(+g[j+296>>2]*-(E*v-C*w)+ +g[j+300>>2]*-(C*x-v*D)+ +g[j+304>>2]*-(w*D-E*x))*+g[j+552>>2];}else{s=0.0;t=0.0;u=0.0;}g[R+(T*152|0)+80>>2]=s;g[R+(T*152|0)+84>>2]=t;g[R+(T*152|0)+88>>2]=u;g[R+(T*152|0)+92>>2]=0.0;if(i|0)m=+g[i+344>>2]+((m*y-o*A)*+g[O>>2]+(o*z-y*k)*+g[P>>2]+(A*k-m*z)*+g[Q>>2]);else m=0.0;if(j|0){H=-s;k=-t;u=-u;k=+g[j+344>>2]+((C*k-E*u)*+g[O>>2]+(D*u-C*H)*+g[P>>2]+(E*H-D*k)*+g[Q>>2]);}else k=0.0;g[R+(T*152|0)+108>>2]=1.0/(m+k);if(i|0){c[R+(T*152|0)+16>>2]=c[O>>2];c[R+(T*152|0)+16+4>>2]=c[O+4>>2];c[R+(T*152|0)+16+8>>2]=c[O+8>>2];c[R+(T*152|0)+16+12>>2]=c[O+12>>2];g[R+(T*152|0)>>2]=A*L-y*K;g[R+(T*152|0)+4>>2]=y*J-L*z;g[R+(T*152|0)+8>>2]=K*z-A*J;g[R+(T*152|0)+12>>2]=0.0;}else{c[R+(T*152|0)>>2]=0;c[R+(T*152|0)+4>>2]=0;c[R+(T*152|0)+8>>2]=0;c[R+(T*152|0)+12>>2]=0;c[R+(T*152|0)+16>>2]=0;c[R+(T*152|0)+20>>2]=0;c[R+(T*152|0)+24>>2]=0;c[R+(T*152|0)+28>>2]=0;}if(j|0){u=-+g[P>>2];H=-+g[Q>>2];g[R+(T*152|0)+48>>2]=-+g[O>>2];g[R+(T*152|0)+52>>2]=u;g[R+(T*152|0)+56>>2]=H;g[R+(T*152|0)+60>>2]=0.0;g[R+(T*152|0)+32>>2]=-(E*v-C*w);g[R+(T*152|0)+36>>2]=-(C*x-v*D);g[R+(T*152|0)+40>>2]=-(w*D-E*x);g[R+(T*152|0)+44>>2]=0.0;}else{c[R+(T*152|0)+32>>2]=0;c[R+(T*152|0)+32+4>>2]=0;c[R+(T*152|0)+32+8>>2]=0;c[R+(T*152|0)+32+12>>2]=0;c[R+(T*152|0)+32+16>>2]=0;c[R+(T*152|0)+32+20>>2]=0;c[R+(T*152|0)+32+24>>2]=0;c[R+(T*152|0)+32+28>>2]=0;}H=+g[p>>2]+ +g[f+56>>2];if(i|0){s=+g[i+332>>2];t=+g[i+336>>2];x=+g[i+328>>2];u=s*y-t*A+ +g[i+312>>2];t=+g[i+316>>2]+(t*z-y*x);s=A*x-s*z+ +g[i+320>>2];}else{u=0.0;t=0.0;s=0.0;}if(j|0){k=+g[j+332>>2];m=+g[j+336>>2];A=+g[j+328>>2];o=k*C-m*E+ +g[j+312>>2];m=+g[j+316>>2]+(m*D-C*A);k=E*A-k*D+ +g[j+320>>2];}else{o=0.0;m=0.0;k=0.0;}C=(u-o)*+g[O>>2]+(t-m)*+g[P>>2]+(s-k)*+g[Q>>2];c[R+(T*152|0)+104>>2]=c[X+4+(V*184|0)+84>>2];C=-(C*+g[X+4+(V*184|0)+92>>2]);C=C<=0.0?0.0:C;do if(!(c[f+64>>2]&4))g[R+(T*152|0)+100>>2]=0.0;else{k=+g[X+4+(V*184|0)+120>>2]*+g[f+60>>2];g[R+(T*152|0)+100>>2]=k;do if(i|0){if(!(c[n+(_*244|0)+240>>2]|0))break;E=k*+g[R+(T*152|0)+20>>2]*+g[n+(_*244|0)+132>>2]*+g[i+352>>2]*+g[n+(_*244|0)+116>>2];D=k*+g[R+(T*152|0)+24>>2]*+g[n+(_*244|0)+136>>2]*+g[i+356>>2]*+g[n+(_*244|0)+120>>2];g[n+(_*244|0)+64>>2]=+g[n+(_*244|0)+112>>2]*k*+g[R+(T*152|0)+16>>2]*+g[n+(_*244|0)+128>>2]*+g[i+348>>2]+ +g[n+(_*244|0)+64>>2];g[n+(_*244|0)+68>>2]=E+ +g[n+(_*244|0)+68>>2];g[n+(_*244|0)+72>>2]=D+ +g[n+(_*244|0)+72>>2];D=k*+g[n+(_*244|0)+100>>2]*+g[R+(T*152|0)+68>>2];E=k*+g[n+(_*244|0)+104>>2]*+g[R+(T*152|0)+72>>2];g[n+(_*244|0)+80>>2]=k*+g[n+(_*244|0)+96>>2]*+g[R+(T*152|0)+64>>2]+ +g[n+(_*244|0)+80>>2];g[n+(_*244|0)+84>>2]=D+ +g[n+(_*244|0)+84>>2];g[n+(_*244|0)+88>>2]=E+ +g[n+(_*244|0)+88>>2];}while(0);if(!j)break;k=+g[R+(T*152|0)+100>>2];if(!(c[n+($*244|0)+240>>2]|0))break;E=+g[R+(T*152|0)+88>>2];D=+g[R+(T*152|0)+84>>2];A=+g[R+(T*152|0)+80>>2];y=k*+g[R+(T*152|0)+52>>2]*+g[n+($*244|0)+132>>2]*+g[j+352>>2]*+g[n+($*244|0)+116>>2];z=k*+g[R+(T*152|0)+56>>2]*+g[n+($*244|0)+136>>2]*+g[j+356>>2]*+g[n+($*244|0)+120>>2];g[n+($*244|0)+64>>2]=+g[n+($*244|0)+112>>2]*k*+g[R+(T*152|0)+48>>2]*+g[n+($*244|0)+128>>2]*+g[j+348>>2]+ +g[n+($*244|0)+64>>2];g[n+($*244|0)+68>>2]=y+ +g[n+($*244|0)+68>>2];g[n+($*244|0)+72>>2]=z+ +g[n+($*244|0)+72>>2];D=D*+g[n+($*244|0)+100>>2]*-k;E=E*+g[n+($*244|0)+104>>2]*-k;g[n+($*244|0)+80>>2]=+g[n+($*244|0)+80>>2]-A*+g[n+($*244|0)+96>>2]*-k;g[n+($*244|0)+84>>2]=+g[n+($*244|0)+84>>2]-D;g[n+($*244|0)+88>>2]=+g[n+($*244|0)+88>>2]-E;}while(0);g[R+(T*152|0)+96>>2]=0.0;if(!(c[n+(_*244|0)+240>>2]|0)){k=0.0;m=0.0;o=0.0;s=0.0;t=0.0;u=0.0;}else{k=+g[n+(_*244|0)+208>>2];m=+g[n+(_*244|0)+212>>2];o=+g[n+(_*244|0)+216>>2];s=+g[n+(_*244|0)+224>>2];t=+g[n+(_*244|0)+228>>2];u=+g[n+(_*244|0)+232>>2];}if(!(c[n+($*244|0)+240>>2]|0)){v=0.0;w=0.0;x=0.0;y=0.0;z=0.0;A=0.0;}else{v=+g[n+($*244|0)+208>>2];w=+g[n+($*244|0)+212>>2];x=+g[n+($*244|0)+216>>2];y=+g[n+($*244|0)+224>>2];z=+g[n+($*244|0)+228>>2];A=+g[n+($*244|0)+232>>2];}k=C-((k+ +g[n+(_*244|0)+176>>2])*+g[R+(T*152|0)+16>>2]+(m+ +g[n+(_*244|0)+180>>2])*+g[R+(T*152|0)+20>>2]+(o+ +g[n+(_*244|0)+184>>2])*+g[R+(T*152|0)+24>>2]+((s+ +g[n+(_*244|0)+192>>2])*+g[R+(T*152|0)>>2]+(t+ +g[n+(_*244|0)+196>>2])*+g[R+(T*152|0)+4>>2]+(u+ +g[n+(_*244|0)+200>>2])*+g[R+(T*152|0)+8>>2])+((v+ +g[n+($*244|0)+176>>2])*+g[R+(T*152|0)+48>>2]+(w+ +g[n+($*244|0)+180>>2])*+g[R+(T*152|0)+52>>2]+(x+ +g[n+($*244|0)+184>>2])*+g[R+(T*152|0)+56>>2]+((y+ +g[n+($*244|0)+192>>2])*+g[R+(T*152|0)+32>>2]+(z+ +g[n+($*244|0)+196>>2])*+g[R+(T*152|0)+36>>2]+(A+ +g[n+($*244|0)+200>>2])*+g[R+(T*152|0)+40>>2])));i=(c[f+44>>2]|0)==0;o=+g[f+12>>2];if(H>0.0){m=k-H/o;k=0.0;}else{m=k;k=-(H*(i|H>+g[f+48>>2]?+g[f+32>>2]:+g[f+36>>2]))/o;}D=+g[R+(T*152|0)+108>>2];E=k*D;D=m*D;B=i|H>+g[f+48>>2];g[R+(T*152|0)+112>>2]=B?E+D:D;g[R+(T*152|0)+128>>2]=B?0.0:E;g[R+(T*152|0)+116>>2]=0.0;g[R+(T*152|0)+120>>2]=0.0;g[R+(T*152|0)+124>>2]=1.0e10;c[R+(T*152|0)+140>>2]=c[b+68>>2];if(!q){m=0.0;u=0.0;v=0.0;}else{m=+g[q+328>>2];u=+g[q+332>>2];v=+g[q+336>>2];}if(!r){k=0.0;o=0.0;s=0.0;}else{k=+g[r+328>>2];o=+g[r+332>>2];s=+g[r+336>>2];}t=k-m;m=o-u;s=s-v;g[da+32>>2]=t;g[da+32+4>>2]=m;g[da+32+8>>2]=s;g[da+32+12>>2]=0.0;do if((h|0)>0?+g[X+4+(V*184|0)+88>>2]>0.0:0){h=h+-1|0;k=+G(+(t*t+m*m+s*s));if(k>+g[f+80>>2]){g[da+32>>2]=t*(1.0/k);g[da+32+4>>2]=m*(1.0/k);g[da+32+8>>2]=s*(1.0/k);if(!(c[Y+180>>2]&2)){o=t*(1.0/k);m=m*(1.0/k);k=s*(1.0/k);}else{v=+g[Y+4>>2];x=+g[Y+20>>2];A=+g[Y+36>>2];w=+g[Y+8>>2];y=+g[Y+24>>2];D=+g[Y+40>>2];o=+g[Y+12>>2];z=+g[Y+28>>2];H=+g[Y+44>>2];C=(v*t*(1.0/k)+x*m*(1.0/k)+s*(1.0/k)*A)*+g[Y+164>>2];E=(t*(1.0/k)*w+m*(1.0/k)*y+s*(1.0/k)*D)*+g[Y+168>>2];k=(t*(1.0/k)*o+m*(1.0/k)*z+s*(1.0/k)*H)*+g[Y+172>>2];g[da+32>>2]=v*C+w*E+o*k;g[da+32+4>>2]=x*C+y*E+z*k;g[da+32+8>>2]=A*C+D*E+H*k;g[da+32+12>>2]=0.0;o=v*C+w*E+o*k;m=x*C+y*E+z*k;k=A*C+D*E+H*k;}if(c[Z+180>>2]&2){u=+g[Z+4>>2];x=+g[Z+20>>2];A=+g[Z+36>>2];v=+g[Z+8>>2];y=+g[Z+24>>2];D=+g[Z+40>>2];w=+g[Z+12>>2];z=+g[Z+28>>2];H=+g[Z+44>>2];C=(u*o+x*m+A*k)*+g[Z+164>>2];E=(o*v+m*y+k*D)*+g[Z+168>>2];k=(o*w+m*z+k*H)*+g[Z+172>>2];g[da+32>>2]=u*C+v*E+w*k;g[da+32+4>>2]=x*C+y*E+z*k;g[da+32+8>>2]=A*C+D*E+H*k;g[da+32+12>>2]=0.0;o=u*C+v*E+w*k;m=x*C+y*E+z*k;k=A*C+D*E+H*k;}if(!(+G(+(o*o+m*m+k*k))>.001))break;wd(b,da+32|0,_,$,T,S);break}wd(b,O,_,$,T,S);k=+g[Q>>2];if(+F(+k)>.7071067690849304){o=+g[P>>2];m=1.0/+G(+(k*k+o*o));g[da+16>>2]=0.0;g[da+16+4>>2]=-(m*k);g[da+16+8>>2]=m*o;g[da>>2]=(k*k+o*o)*m;H=+g[O>>2];g[da+4>>2]=-(m*o*H);s=-(m*k);t=m*o;u=(k*k+o*o)*m;o=-(m*o*H);k=H*-(m*k);m=0.0;}else{E=+g[O>>2];H=+g[P>>2];m=1.0/+G(+(E*E+H*H));g[da+16>>2]=-(H*m);g[da+16+4>>2]=m*E;g[da+16+8>>2]=0.0;g[da>>2]=-(m*E*k);g[da+4>>2]=k*-(H*m);s=m*E;t=0.0;u=-(m*E*k);o=k*-(H*m);k=(E*E+H*H)*m;m=-(H*m);}g[da+8>>2]=k;if(c[Y+180>>2]&2){ea=+g[Y+4>>2];x=+g[Y+20>>2];A=+g[Y+36>>2];v=+g[Y+8>>2];y=+g[Y+24>>2];D=+g[Y+40>>2];w=+g[Y+12>>2];z=+g[Y+28>>2];H=+g[Y+44>>2];C=(ea*m+x*s+A*t)*+g[Y+164>>2];E=(m*v+s*y+t*D)*+g[Y+168>>2];t=(m*w+s*z+t*H)*+g[Y+172>>2];g[da+16>>2]=ea*C+v*E+w*t;g[da+16+4>>2]=x*C+y*E+z*t;g[da+16+8>>2]=A*C+D*E+H*t;g[da+16+12>>2]=0.0;m=ea*C+v*E+w*t;s=x*C+y*E+z*t;t=A*C+D*E+H*t;}if(c[Z+180>>2]&2){v=+g[Z+4>>2];y=+g[Z+20>>2];C=+g[Z+36>>2];w=+g[Z+8>>2];z=+g[Z+24>>2];E=+g[Z+40>>2];x=+g[Z+12>>2];A=+g[Z+28>>2];ea=+g[Z+44>>2];D=(v*m+y*s+C*t)*+g[Z+164>>2];H=(m*w+s*z+t*E)*+g[Z+168>>2];t=(m*x+s*A+t*ea)*+g[Z+172>>2];g[da+16>>2]=v*D+w*H+x*t;g[da+16+4>>2]=y*D+z*H+A*t;g[da+16+8>>2]=C*D+E*H+ea*t;g[da+16+12>>2]=0.0;m=v*D+w*H+x*t;s=y*D+z*H+A*t;t=C*D+E*H+ea*t;}do if(Y){if(!(c[Y+180>>2]&2))break;v=+g[Y+4>>2];y=+g[Y+20>>2];C=+g[Y+36>>2];w=+g[Y+8>>2];z=+g[Y+24>>2];E=+g[Y+40>>2];x=+g[Y+12>>2];A=+g[Y+28>>2];ea=+g[Y+44>>2];D=(v*u+y*o+C*k)*+g[Y+164>>2];H=(u*w+o*z+k*E)*+g[Y+168>>2];k=(u*x+o*A+k*ea)*+g[Y+172>>2];g[da>>2]=v*D+w*H+x*k;g[da+4>>2]=y*D+z*H+A*k;g[da+8>>2]=C*D+E*H+ea*k;g[da+12>>2]=0.0;u=v*D+w*H+x*k;o=y*D+z*H+A*k;k=C*D+E*H+ea*k;}while(0);do if(Z){if(!(c[Z+180>>2]&2))break;v=+g[Z+4>>2];y=+g[Z+20>>2];C=+g[Z+36>>2];w=+g[Z+8>>2];z=+g[Z+24>>2];E=+g[Z+40>>2];x=+g[Z+12>>2];A=+g[Z+28>>2];ea=+g[Z+44>>2];D=(v*u+y*o+C*k)*+g[Z+164>>2];H=(u*w+o*z+k*E)*+g[Z+168>>2];k=(u*x+o*A+k*ea)*+g[Z+172>>2];g[da>>2]=v*D+w*H+x*k;g[da+4>>2]=y*D+z*H+A*k;g[da+8>>2]=C*D+E*H+ea*k;g[da+12>>2]=0.0;u=v*D+w*H+x*k;o=y*D+z*H+A*k;k=C*D+E*H+ea*k;}while(0);if(+G(+(m*m+s*s+t*t))>.001)wd(b,da+16|0,_,$,T,S);if(+G(+(u*u+o*o+k*k))>.001)wd(b,da,_,$,T,S);}while(0);do if(!(c[f+64>>2]&32))ca=94;else{if(!(a[X+4+(V*184|0)+116>>0]|0)){ca=94;break}ad(b,X+4+(V*184|0)+152|0,_,$,T,S,da+64|0,da+48|0,1.0,+g[X+4+(V*184|0)+132>>2],+g[X+4+(V*184|0)+140>>2]);if(!(c[f+64>>2]&16))break;ad(b,X+4+(V*184|0)+168|0,_,$,T,S,da+64|0,da+48|0,1.0,+g[X+4+(V*184|0)+136>>2],+g[X+4+(V*184|0)+144>>2]);}while(0);do if((ca|0)==94){ca=0;k=+g[O>>2];w=+g[P>>2];v=+g[Q>>2];m=N-(N*J+M*K+I*L)*k;t=M-(N*J+M*K+I*L)*w;s=I-(N*J+M*K+I*L)*v;B=X+4+(V*184|0)+152|0;g[X+4+(V*184|0)+152>>2]=m;i=X+4+(V*184|0)+156|0;g[i>>2]=t;q=X+4+(V*184|0)+160|0;g[q>>2]=s;r=X+4+(V*184|0)+164|0;g[r>>2]=0.0;if((c[f+64>>2]&64|0)==0?m*m+t*t+s*s>1.1920928955078125e-07:0){k=1.0/+G(+(m*m+t*t+s*s));g[B>>2]=m*k;g[i>>2]=k*t;g[q>>2]=k*s;do if(!Y){o=m*k;m=k*t;k=k*s;}else{if(!(c[Y+180>>2]&1)){o=m*k;m=k*t;k=k*s;break}D=+g[Y+4>>2];H=+g[Y+20>>2];K=+g[Y+36>>2];E=+g[Y+8>>2];I=+g[Y+24>>2];M=+g[Y+40>>2];o=+g[Y+12>>2];J=+g[Y+28>>2];ea=+g[Y+44>>2];L=(D*m*k+H*k*t+k*s*K)*+g[Y+164>>2];N=(m*k*E+k*t*I+k*s*M)*+g[Y+168>>2];k=(m*k*o+k*t*J+k*s*ea)*+g[Y+172>>2];g[B>>2]=D*L+E*N+o*k;g[i>>2]=H*L+I*N+J*k;g[q>>2]=K*L+M*N+ea*k;g[r>>2]=0.0;o=D*L+E*N+o*k;m=H*L+I*N+J*k;k=K*L+M*N+ea*k;}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;A=+g[Z+4>>2];E=+g[Z+20>>2];J=+g[Z+36>>2];C=+g[Z+8>>2];H=+g[Z+24>>2];L=+g[Z+40>>2];D=+g[Z+12>>2];I=+g[Z+28>>2];N=+g[Z+44>>2];K=(A*o+E*m+J*k)*+g[Z+164>>2];M=(o*C+m*H+k*L)*+g[Z+168>>2];ea=(o*D+m*I+k*N)*+g[Z+172>>2];g[B>>2]=A*K+C*M+D*ea;g[i>>2]=E*K+H*M+I*ea;g[q>>2]=J*K+L*M+N*ea;g[r>>2]=0.0;}while(0);ad(b,B,_,$,T,S,da+64|0,da+48|0,1.0,0.0,0.0);if(!(c[f+64>>2]&16))break;N=+g[i>>2];o=+g[Q>>2];K=+g[q>>2];L=+g[P>>2];ea=+g[O>>2];M=+g[B>>2];p=X+4+(V*184|0)+168|0;g[X+4+(V*184|0)+168>>2]=N*o-K*L;i=X+4+(V*184|0)+172|0;j=X+4+(V*184|0)+176|0;n=X+4+(V*184|0)+180|0;g[n>>2]=0.0;m=1.0/+G(+((N*o-K*L)*(N*o-K*L)+(K*ea-o*M)*(K*ea-o*M)+(L*M-N*ea)*(L*M-N*ea)));k=(N*o-K*L)*m;g[p>>2]=k;o=(K*ea-o*M)*m;g[i>>2]=o;m=(L*M-N*ea)*m;g[j>>2]=m;do if(Y){if(!(c[Y+180>>2]&1))break;C=+g[Y+4>>2];H=+g[Y+20>>2];K=+g[Y+36>>2];D=+g[Y+8>>2];I=+g[Y+24>>2];M=+g[Y+40>>2];E=+g[Y+12>>2];J=+g[Y+28>>2];ea=+g[Y+44>>2];L=(C*k+H*o+m*K)*+g[Y+164>>2];N=(k*D+o*I+m*M)*+g[Y+168>>2];m=(k*E+o*J+m*ea)*+g[Y+172>>2];g[p>>2]=C*L+D*N+E*m;g[i>>2]=H*L+I*N+J*m;g[j>>2]=K*L+M*N+ea*m;g[n>>2]=0.0;k=C*L+D*N+E*m;o=H*L+I*N+J*m;m=K*L+M*N+ea*m;}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;A=+g[Z+4>>2];E=+g[Z+20>>2];J=+g[Z+36>>2];C=+g[Z+8>>2];H=+g[Z+24>>2];L=+g[Z+40>>2];D=+g[Z+12>>2];I=+g[Z+28>>2];N=+g[Z+44>>2];K=(A*k+E*o+J*m)*+g[Z+164>>2];M=(k*C+o*H+m*L)*+g[Z+168>>2];ea=(k*D+o*I+m*N)*+g[Z+172>>2];g[p>>2]=A*K+C*M+D*ea;g[i>>2]=E*K+H*M+I*ea;g[j>>2]=J*K+L*M+N*ea;g[n>>2]=0.0;}while(0);ad(b,p,_,$,T,S,da+64|0,da+48|0,1.0,0.0,0.0);break}p=X+4+(V*184|0)+168|0;if(+F(+v)>.7071067690849304){ea=1.0/+G(+(v*v+w*w));g[B>>2]=0.0;g[i>>2]=-(ea*v);g[q>>2]=ea*w;t=-(ea*w*k);u=k*-(ea*v);s=(v*v+w*w)*ea;o=0.0;m=-(ea*v);k=ea*w;}else{m=1.0/+G(+(k*k+w*w));g[B>>2]=-(w*m);g[i>>2]=m*k;g[q>>2]=0.0;t=v*-(w*m);u=(k*k+w*w)*m;s=-(m*k*v);o=-(w*m);m=m*k;k=0.0;}g[p>>2]=s;n=X+4+(V*184|0)+172|0;g[n>>2]=t;j=X+4+(V*184|0)+176|0;g[j>>2]=u;do if(Y){if(!(c[Y+180>>2]&1))break;C=+g[Y+4>>2];H=+g[Y+20>>2];K=+g[Y+36>>2];D=+g[Y+8>>2];I=+g[Y+24>>2];M=+g[Y+40>>2];E=+g[Y+12>>2];J=+g[Y+28>>2];ea=+g[Y+44>>2];L=(C*o+H*m+K*k)*+g[Y+164>>2];N=(o*D+m*I+k*M)*+g[Y+168>>2];k=(o*E+m*J+k*ea)*+g[Y+172>>2];g[B>>2]=C*L+D*N+E*k;g[i>>2]=H*L+I*N+J*k;g[q>>2]=K*L+M*N+ea*k;g[r>>2]=0.0;o=C*L+D*N+E*k;m=H*L+I*N+J*k;k=K*L+M*N+ea*k;}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;A=+g[Z+4>>2];E=+g[Z+20>>2];J=+g[Z+36>>2];C=+g[Z+8>>2];H=+g[Z+24>>2];L=+g[Z+40>>2];D=+g[Z+12>>2];I=+g[Z+28>>2];N=+g[Z+44>>2];K=(A*o+E*m+J*k)*+g[Z+164>>2];M=(o*C+m*H+k*L)*+g[Z+168>>2];ea=(o*D+m*I+k*N)*+g[Z+172>>2];g[B>>2]=A*K+C*M+D*ea;g[i>>2]=E*K+H*M+I*ea;g[q>>2]=J*K+L*M+N*ea;g[r>>2]=0.0;}while(0);ad(b,B,_,$,T,S,da+64|0,da+48|0,1.0,0.0,0.0);i=c[f+64>>2]|0;if(i&16){do if(Y|0){if(!(c[Y+180>>2]&1))break;A=+g[Y+4>>2];y=+g[p>>2];E=+g[Y+20>>2];z=+g[n>>2];J=+g[Y+36>>2];ea=+g[j>>2];C=+g[Y+8>>2];H=+g[Y+24>>2];L=+g[Y+40>>2];D=+g[Y+12>>2];I=+g[Y+28>>2];N=+g[Y+44>>2];K=(A*y+E*z+J*ea)*+g[Y+164>>2];M=(y*C+z*H+ea*L)*+g[Y+168>>2];ea=(y*D+z*I+ea*N)*+g[Y+172>>2];g[p>>2]=A*K+C*M+D*ea;g[n>>2]=E*K+H*M+I*ea;g[j>>2]=J*K+L*M+N*ea;g[X+4+(V*184|0)+180>>2]=0.0;}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;A=+g[Z+4>>2];y=+g[p>>2];E=+g[Z+20>>2];z=+g[n>>2];J=+g[Z+36>>2];ea=+g[j>>2];C=+g[Z+8>>2];H=+g[Z+24>>2];L=+g[Z+40>>2];D=+g[Z+12>>2];I=+g[Z+28>>2];N=+g[Z+44>>2];K=(A*y+E*z+J*ea)*+g[Z+164>>2];M=(y*C+z*H+ea*L)*+g[Z+168>>2];ea=(y*D+z*I+ea*N)*+g[Z+172>>2];g[p>>2]=A*K+C*M+D*ea;g[n>>2]=E*K+H*M+I*ea;g[j>>2]=J*K+L*M+N*ea;g[X+4+(V*184|0)+180>>2]=0.0;}while(0);ad(b,p,_,$,T,S,da+64|0,da+48|0,1.0,0.0,0.0);i=c[f+64>>2]|0;}if((i&80|0)!=80)break;a[X+4+(V*184|0)+116>>0]=1;}while(0);r=c[b+16>>2]|0;j=c[r+(_*244|0)+240>>2]|0;n=c[r+($*244|0)+240>>2]|0;p=c[R+(T*152|0)+140>>2]|0;q=c[b+76>>2]|0;i=c[f+64>>2]|0;do if(!(i&4))g[q+(p*152|0)+100>>2]=0.0;else{k=+g[X+4+(V*184|0)+124>>2]*+g[f+60>>2];g[q+(p*152|0)+100>>2]=k;if(j|0){M=+g[j+344>>2];ea=k*M*+g[q+(p*152|0)+20>>2]*+g[j+352>>2]*+g[r+(_*244|0)+116>>2];N=k*M*+g[q+(p*152|0)+24>>2]*+g[j+356>>2]*+g[r+(_*244|0)+120>>2];g[r+(_*244|0)+64>>2]=+g[r+(_*244|0)+112>>2]*k*M*+g[q+(p*152|0)+16>>2]*+g[j+348>>2]+ +g[r+(_*244|0)+64>>2];g[r+(_*244|0)+68>>2]=ea+ +g[r+(_*244|0)+68>>2];g[r+(_*244|0)+72>>2]=N+ +g[r+(_*244|0)+72>>2];N=k*+g[r+(_*244|0)+100>>2]*+g[q+(p*152|0)+68>>2];ea=k*+g[r+(_*244|0)+104>>2]*+g[q+(p*152|0)+72>>2];g[r+(_*244|0)+80>>2]=k*+g[r+(_*244|0)+96>>2]*+g[q+(p*152|0)+64>>2]+ +g[r+(_*244|0)+80>>2];g[r+(_*244|0)+84>>2]=N+ +g[r+(_*244|0)+84>>2];g[r+(_*244|0)+88>>2]=ea+ +g[r+(_*244|0)+88>>2];}if(!n)break;k=+g[n+344>>2];m=+g[q+(p*152|0)+100>>2];if(!(c[r+($*244|0)+240>>2]|0))break;ea=+g[q+(p*152|0)+88>>2];N=+g[q+(p*152|0)+84>>2];M=+g[q+(p*152|0)+80>>2];K=m*k*+g[q+(p*152|0)+52>>2]*+g[n+352>>2]*+g[r+($*244|0)+116>>2];L=m*k*+g[q+(p*152|0)+56>>2]*+g[n+356>>2]*+g[r+($*244|0)+120>>2];g[r+($*244|0)+64>>2]=+g[r+($*244|0)+112>>2]*m*k*+g[q+(p*152|0)+48>>2]*+g[n+348>>2]+ +g[r+($*244|0)+64>>2];g[r+($*244|0)+68>>2]=K+ +g[r+($*244|0)+68>>2];g[r+($*244|0)+72>>2]=L+ +g[r+($*244|0)+72>>2];N=N*+g[r+($*244|0)+100>>2]*-m;ea=ea*+g[r+($*244|0)+104>>2]*-m;g[r+($*244|0)+80>>2]=+g[r+($*244|0)+80>>2]-M*+g[r+($*244|0)+96>>2]*-m;g[r+($*244|0)+84>>2]=+g[r+($*244|0)+84>>2]-N;g[r+($*244|0)+88>>2]=+g[r+($*244|0)+88>>2]-ea;}while(0);do if(i&16|0){if(!(i&4)){g[q+((p+1|0)*152|0)+100>>2]=0.0;break}m=+g[X+4+(V*184|0)+128>>2]*+g[f+60>>2];g[q+((p+1|0)*152|0)+100>>2]=m;do if(j|0){k=+g[j+344>>2];if(!(c[r+(_*244|0)+240>>2]|0))break;ea=m*k*+g[q+((p+1|0)*152|0)+20>>2]*+g[r+(_*244|0)+116>>2];N=m*k*+g[q+((p+1|0)*152|0)+24>>2]*+g[r+(_*244|0)+120>>2];g[r+(_*244|0)+64>>2]=+g[r+(_*244|0)+112>>2]*m*k*+g[q+((p+1|0)*152|0)+16>>2]+ +g[r+(_*244|0)+64>>2];g[r+(_*244|0)+68>>2]=ea+ +g[r+(_*244|0)+68>>2];g[r+(_*244|0)+72>>2]=N+ +g[r+(_*244|0)+72>>2];N=m*+g[r+(_*244|0)+100>>2]*+g[q+((p+1|0)*152|0)+68>>2];ea=m*+g[r+(_*244|0)+104>>2]*+g[q+((p+1|0)*152|0)+72>>2];g[r+(_*244|0)+80>>2]=m*+g[r+(_*244|0)+96>>2]*+g[q+((p+1|0)*152|0)+64>>2]+ +g[r+(_*244|0)+80>>2];g[r+(_*244|0)+84>>2]=N+ +g[r+(_*244|0)+84>>2];g[r+(_*244|0)+88>>2]=ea+ +g[r+(_*244|0)+88>>2];}while(0);if(!n)break;k=+g[n+344>>2];m=+g[q+((p+1|0)*152|0)+100>>2];if(!(c[r+($*244|0)+240>>2]|0))break;ea=+g[q+((p+1|0)*152|0)+88>>2];N=+g[q+((p+1|0)*152|0)+84>>2];M=+g[q+((p+1|0)*152|0)+80>>2];K=m*k*+g[q+((p+1|0)*152|0)+52>>2]*+g[r+($*244|0)+116>>2];L=m*k*+g[q+((p+1|0)*152|0)+56>>2]*+g[r+($*244|0)+120>>2];g[r+($*244|0)+64>>2]=+g[r+($*244|0)+112>>2]*m*k*+g[q+((p+1|0)*152|0)+48>>2]+ +g[r+($*244|0)+64>>2];g[r+($*244|0)+68>>2]=K+ +g[r+($*244|0)+68>>2];g[r+($*244|0)+72>>2]=L+ +g[r+($*244|0)+72>>2];N=N*+g[r+($*244|0)+100>>2]*-m;ea=ea*+g[r+($*244|0)+104>>2]*-m;g[r+($*244|0)+80>>2]=+g[r+($*244|0)+80>>2]-M*+g[r+($*244|0)+96>>2]*-m;g[r+($*244|0)+84>>2]=+g[r+($*244|0)+84>>2]-N;g[r+($*244|0)+88>>2]=+g[r+($*244|0)+88>>2]-ea;}while(0);i=c[X+748>>2]|0;}V=V+1|0;}while((V|0)<(i|0))}U=U+1|0;}while((U|0)!=(e|0));l=da;return}function cc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0,P=0,Q=0,R=0.0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;Z=l;l=l+112|0;c[Z+40>>2]=0;a[Z+16>>0]=1;c[Z+12>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;a[Z+36>>0]=1;c[Z+32>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;i=e>>>0>8?e:8;if((i|0)>0){c[6436]=(c[6436]|0)+1;h=ic((i<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}h=0;do{Y=j+(h<<4)|0;c[Y>>2]=c[Z+48>>2];c[Y+4>>2]=c[Z+48+4>>2];c[Y+8>>2]=c[Z+48+8>>2];c[Y+12>>2]=c[Z+48+12>>2];h=h+1|0;}while((h|0)!=(i|0));Y=j;X=j;}else{Y=0;X=0;}do if(!e){p=0;h=0;k=0;m=0;n=0;}else{i=c[Z+24>>2]|0;if((i|0)<0){h=c[Z+32>>2]|0;if((c[Z+28>>2]|0)<0){if(!((h|0)==0|(a[Z+36>>0]|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}a[Z+36>>0]=1;c[Z+32>>2]=0;c[Z+28>>2]=0;h=0;}Ik(h+(i<<2)|0,0,S(i,-4)|0)|0;}c[Z+24>>2]=0;h=d;i=0;u=3402823466385288598117041.0e14;o=-3402823466385288598117041.0e14;w=3402823466385288598117041.0e14;r=-3402823466385288598117041.0e14;x=3402823466385288598117041.0e14;t=-3402823466385288598117041.0e14;while(1){R=+g[h>>2];u=R<u?R:u;o=R>o?R:o;R=+g[h+4>>2];w=R<w?R:w;r=R>r?R:r;R=+g[h+8>>2];x=R<x?R:x;t=R>t?R:t;i=i+1|0;if((i|0)==(e|0))break;else h=h+16|0;}s=o-u;R=r-w;o=t-x;I=u+s*.5;A=w+R*.5;z=x+o*.5;do if(e>>>0<3|(s<9.999999974752427e-07|R<9.999999974752427e-07|o<9.999999974752427e-07)){t=s>9.999999974752427e-07&s<3402823466385288598117041.0e14?s:3402823466385288598117041.0e14;t=R>9.999999974752427e-07&R<t?R:t;t=o>9.999999974752427e-07&o<t?o:t;if(!(t==3402823466385288598117041.0e14)){r=s<9.999999974752427e-07?t*.05000000074505806:s;s=R<9.999999974752427e-07?t*.05000000074505806:R;if(o<9.999999974752427e-07)o=t*.05000000074505806;}else{o=.009999999776482582;r=.009999999776482582;s=.009999999776482582;}D=z+o;E=A+s;H=I+r;x=z-o;w=A-s;t=I-r;s=1.0;r=1.0;o=1.0;W=51;}else{h=0;p=0;n=d;i=0;do{w=1.0/s*+g[n>>2];x=1.0/R*+g[n+4>>2];y=1.0/o*+g[n+8>>2];n=n+16|0;a:do if(h){j=0;while(1){d=Y+(j<<4)|0;r=+g[d>>2];k=Y+(j<<4)+4|0;t=+g[k>>2];m=Y+(j<<4)+8|0;u=+g[m>>2];if(+F(+(r-w))<1.0000000474974513e-03&+F(+(t-x))<1.0000000474974513e-03&+F(+(u-y))<1.0000000474974513e-03)break;j=j+1|0;if(j>>>0>=h>>>0){m=j;break a}}if((w-1.0/s*I)*(w-1.0/s*I)+(x-1.0/R*A)*(x-1.0/R*A)+(y-1.0/o*z)*(y-1.0/o*z)>(r-1.0/s*I)*(r-1.0/s*I)+(t-1.0/R*A)*(t-1.0/R*A)+(u-1.0/o*z)*(u-1.0/o*z)){g[d>>2]=w;g[k>>2]=x;g[m>>2]=y;m=j;}else m=j;}else m=0;while(0);if((m|0)==(h|0)){g[Y+(h<<4)>>2]=w;g[Y+(h<<4)+4>>2]=x;g[Y+(h<<4)+8>>2]=y;h=h+1|0;}if((i|0)==(c[Z+28>>2]|0)?(q=i|0?i<<1:1,(i|0)<(q|0)):0){if((q|0)!=0?(c[6436]=(c[6436]|0)+1,v=ic((q<<2|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;k=v+4+15&-16;}else k=0;d=c[Z+32>>2]|0;if((i|0)<=0){if(d)W=37;}else{j=0;do{c[k+(j<<2)>>2]=c[d+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0));W=37;}if((W|0)==37){W=0;if(a[Z+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[Z+32>>2]=0;i=c[Z+24>>2]|0;}a[Z+36>>0]=1;c[Z+32>>2]=k;c[Z+28>>2]=q;}c[(c[Z+32>>2]|0)+(i<<2)>>2]=m;i=(c[Z+24>>2]|0)+1|0;c[Z+24>>2]=i;p=p+1|0;}while((p|0)!=(e|0));if(!h){i=1;A=3402823466385288598117041.0e14;u=-3402823466385288598117041.0e14;z=3402823466385288598117041.0e14;t=-3402823466385288598117041.0e14;y=3402823466385288598117041.0e14;r=-3402823466385288598117041.0e14;}else{i=0;x=3402823466385288598117041.0e14;A=3402823466385288598117041.0e14;D=-3402823466385288598117041.0e14;u=-3402823466385288598117041.0e14;H=3402823466385288598117041.0e14;z=3402823466385288598117041.0e14;I=-3402823466385288598117041.0e14;t=-3402823466385288598117041.0e14;K=3402823466385288598117041.0e14;y=3402823466385288598117041.0e14;L=-3402823466385288598117041.0e14;r=-3402823466385288598117041.0e14;while(1){w=+g[Y+(i<<4)>>2];j=w<x;A=j?w:A;d=w>D;u=d?w:u;E=+g[Y+(i<<4)+4>>2];k=E<H;z=k?E:z;m=E>I;t=m?E:t;J=+g[Y+(i<<4)+8>>2];n=J<K;y=n?J:y;p=J>L;r=p?J:r;i=i+1|0;if((i|0)==(h|0))break;else{x=j?w:x;D=d?w:D;H=k?E:H;I=m?E:I;K=n?J:K;L=p?J:L;}}i=h>>>0<3;}u=u-A;w=t-z;x=r-y;if(!(i|(u<9.999999974752427e-07|w<9.999999974752427e-07|x<9.999999974752427e-07))){if(h|0){r=R;U=h;W=52;break}break}A=A+u*.5;z=z+w*.5;y=y+x*.5;t=u>=9.999999974752427e-07&u<3402823466385288598117041.0e14?u:3402823466385288598117041.0e14;t=w>=9.999999974752427e-07&w<t?w:t;t=x>=9.999999974752427e-07&x<t?x:t;if(!(t==3402823466385288598117041.0e14)){u=u<9.999999974752427e-07?t*.05000000074505806:u;r=w<9.999999974752427e-07?t*.05000000074505806:w;if(x<9.999999974752427e-07)t=t*.05000000074505806;else t=x;}else{t=.009999999776482582;r=.009999999776482582;u=.009999999776482582;}D=y+t;E=z+r;H=A+u;x=y-t;w=z-r;t=A-u;r=R;W=51;}while(0);if((W|0)==51){g[Y>>2]=t;g[Y+4>>2]=w;g[Y+8>>2]=x;g[Y+16>>2]=H;g[Y+20>>2]=w;g[Y+24>>2]=x;g[Y+32>>2]=H;g[Y+36>>2]=E;g[Y+40>>2]=x;g[Y+48>>2]=t;g[Y+52>>2]=E;g[Y+56>>2]=x;g[Y+64>>2]=t;g[Y+68>>2]=w;g[Y+72>>2]=D;g[Y+80>>2]=H;g[Y+84>>2]=w;g[Y+88>>2]=D;g[Y+96>>2]=H;g[Y+100>>2]=E;g[Y+104>>2]=D;g[Y+112>>2]=t;g[Y+116>>2]=E;g[Y+120>>2]=D;U=8;W=52;}if((W|0)==52){h=0;do{V=Y+(h<<4)|0;g[V>>2]=s*+g[V>>2];V=Y+(h<<4)+4|0;g[V>>2]=r*+g[V>>2];V=Y+(h<<4)+8|0;g[V>>2]=o*+g[V>>2];h=h+1|0;}while(h>>>0<U>>>0);if((U|0)>=4){o=+g[Y>>2];s=+g[Y+4>>2];r=+g[Y+8>>2];V=U<<2;c[6436]=(c[6436]|0)+1;h=ic((V|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}c[Z+48>>2]=0;c[6436]=(c[6436]|0)+1;i=ic((V|3)+16|0)|0;if(i){c[(i+4+15&-16)+-4>>2]=i;h=c[Z+48>>2]|0;if(!h)h=i+4+15&-16;else{c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);h=i+4+15&-16;}}else h=0;c[Z+48>>2]=h;x=o;u=o;w=r;n=U;q=j;v=0;t=s;o=s;h=U;p=j;d=j;while(1){if((v|0)==(h|0)?(B=v|0?v<<1:1,(v|0)<(B|0)):0){if((B|0)!=0?(c[6436]=(c[6436]|0)+1,C=ic((B<<2|3)+16|0)|0,(C|0)!=0):0){c[(C+4+15&-16)+-4>>2]=C;i=C+4+15&-16;}else i=0;j=c[Z+48>>2]|0;if((v|0)<=0){if(j|0)W=68;}else{h=0;do{c[i+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(v|0));W=68;}if((W|0)==68){W=0;c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);c[Z+48>>2]=0;}c[Z+48>>2]=i;m=B;}else m=h;c[(c[Z+48>>2]|0)+(v<<2)>>2]=1;k=v;v=v+1|0;do if((k|0)==(n|0)){i=k|0?k<<1:1;if((k|0)<(i|0)){if((i|0)!=0?(c[6436]=(c[6436]|0)+1,M=ic((i<<2|3)+16|0)|0,(M|0)!=0):0){c[(M+4+15&-16)+-4>>2]=M;j=M+4+15&-16;}else j=0;if((k|0)>0){h=0;do{c[j+(h<<2)>>2]=c[q+(h<<2)>>2];h=h+1|0;}while((h|0)!=(k|0));if(!d){q=j;d=j;p=j;break}}else if((q|0)==0|(d|0)==0){q=j;d=j;p=j;break}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);q=j;d=j;p=j;}else i=k;}else i=n;while(0);c[q+(k<<2)>>2]=0;K=+g[Y+(k<<4)>>2];u=K<u?K:u;L=+g[Y+(k<<4)+4>>2];o=L<o?L:o;R=+g[Y+(k<<4)+8>>2];r=R<r?R:r;x=x<K?K:x;t=t<L?L:t;w=w<R?R:w;if((v|0)>=(U|0))break;else{n=i;h=m;}}x=x-u;u=t-o;E=w-r;E=+G(+(x*x+u*u+E*E))*1.0000000474974513e-03;O=Je(Y,U,.009999999776482582,.019999999552965164,1.0,c[Z+48>>2]|0)|0;m=c[Z+48>>2]|0;P=Je(Y,U,-.009999999776482582,-.019999999552965164,-1.0,m)|0;n=Y+(O<<4)|0;v=Y+(P<<4)|0;u=+g[n>>2]-+g[v>>2];B=Y+(O<<4)+4|0;C=Y+(P<<4)+4|0;w=+g[B>>2]-+g[C>>2];M=Y+(O<<4)+8|0;N=Y+(P<<4)+8|0;x=+g[M>>2]-+g[N>>2];b:do if((O|0)!=(P|0)?!(x==0.0&w==0.0&u==0.0):0){o=+G(+((x*.019999999552965164-w*0.0)*(x*.019999999552965164-w*0.0)+(u*0.0-x)*(u*0.0-x)+(w-u*.019999999552965164)*(w-u*.019999999552965164)));r=+G(+((x-w*0.0)*(x-w*0.0)+(x*.019999999552965164+u*0.0)*(x*.019999999552965164+u*0.0)+(w*-.019999999552965164-u)*(w*-.019999999552965164-u)));if(o>r){s=(w-u*.019999999552965164)*(1.0/o);t=(x*.019999999552965164-w*0.0)*(1.0/o);o=(u*0.0-x)*(1.0/o);}else{s=(w*-.019999999552965164-u)*(1.0/r);t=(x-w*0.0)*(1.0/r);o=(x*.019999999552965164+u*0.0)*(1.0/r);}h=Je(Y,U,t,o,s,m)|0;if((h|0)==(O|0)|(h|0)==(P|0))i=Je(Y,U,-t,-o,-s,m)|0;else i=h;if(!((i|0)==(O|0)|(i|0)==(P|0))){j=Y+(i<<4)|0;o=+g[j>>2]-+g[n>>2];d=Y+(i<<4)+4|0;r=+g[d>>2]-+g[B>>2];k=Y+(i<<4)+8|0;s=+g[k>>2]-+g[M>>2];t=1.0/+G(+((w*o-r*u)*(w*o-r*u)+((r*x-s*w)*(r*x-s*w)+(s*u-x*o)*(s*u-x*o))));h=Je(Y,U,(r*x-s*w)*t,(s*u-x*o)*t,(w*o-r*u)*t,m)|0;if((h|0)==(i|0)|((h|0)==(O|0)|(h|0)==(P|0)))h=Je(Y,U,-((r*x-s*w)*t),-((s*u-x*o)*t),-((w*o-r*u)*t),m)|0;if(!((h|0)==(i|0)|((h|0)==(O|0)|(h|0)==(P|0)))?(A=+g[n>>2],I=+g[B>>2],z=+g[M>>2],L=+g[v>>2]-A,D=+g[C>>2]-I,J=+g[N>>2]-z,K=+g[j>>2]-A,H=+g[d>>2]-I,R=+g[k>>2]-z,Q=(+g[Y+(h<<4)+8>>2]-z)*(L*H-D*K)+((+g[Y+(h<<4)>>2]-A)*(D*R-J*H)+(+g[Y+(h<<4)+4>>2]-I)*(J*K-L*R))<0.0,T=Q?i:h,Q=Q?h:i,(O|0)!=-1):0){z=(+g[Y+(O<<4)>>2]+ +g[Y+(P<<4)>>2]+ +g[Y+(Q<<4)>>2]+ +g[Y+(T<<4)>>2])*.25;A=(+g[Y+(O<<4)+4>>2]+ +g[Y+(P<<4)+4>>2]+ +g[Y+(Q<<4)+4>>2]+ +g[Y+(T<<4)+4>>2])*.25;D=(+g[Y+(O<<4)+8>>2]+ +g[Y+(P<<4)+8>>2]+ +g[Y+(Q<<4)+8>>2]+ +g[Y+(T<<4)+8>>2])*.25;h=uh(Z,Q,T,P)|0;c[h+12>>2]=2;c[h+16>>2]=3;c[h+20>>2]=1;h=uh(Z,T,Q,O)|0;c[h+12>>2]=3;c[h+16>>2]=2;c[h+20>>2]=0;h=uh(Z,O,P,T)|0;c[h+12>>2]=0;c[h+16>>2]=1;c[h+20>>2]=3;h=uh(Z,P,O,Q)|0;c[h+12>>2]=1;c[h+16>>2]=0;c[h+20>>2]=2;c[q+(T<<2)>>2]=1;c[q+(Q<<2)>>2]=1;c[q+(P<<2)>>2]=1;c[q+(O<<2)>>2]=1;h=c[Z+4>>2]|0;if((h|0)>0){j=c[Z+12>>2]|0;i=0;do{h=c[j+(i<<2)>>2]|0;Q=c[h>>2]|0;P=c[h+4>>2]|0;T=c[h+8>>2]|0;u=+g[Y+(P<<4)>>2];s=u-+g[Y+(Q<<4)>>2];w=+g[Y+(P<<4)+4>>2];t=w-+g[Y+(Q<<4)+4>>2];r=+g[Y+(P<<4)+8>>2];o=r-+g[Y+(Q<<4)+8>>2];u=+g[Y+(T<<4)>>2]-u;w=+g[Y+(T<<4)+4>>2]-w;r=+g[Y+(T<<4)+8>>2]-r;x=+G(+((s*w-t*u)*(s*w-t*u)+((t*r-o*w)*(t*r-o*w)+(o*u-s*r)*(o*u-s*r))));if(x==0.0){y=1.0;r=0.0;o=0.0;}else{y=1.0/x*(t*r-o*w);r=1.0/x*(o*u-s*r);o=1.0/x*(s*w-t*u);}Q=Je(Y,U,y,r,o,c[Z+48>>2]|0)|0;c[h+28>>2]=Q;T=c[h>>2]|0;g[h+32>>2]=(+g[Y+(Q<<4)>>2]-+g[Y+(T<<4)>>2])*y+(+g[Y+(Q<<4)+4>>2]-+g[Y+(T<<4)+4>>2])*r+(+g[Y+(Q<<4)+8>>2]-+g[Y+(T<<4)+8>>2])*o;i=i+1|0;h=c[Z+4>>2]|0;}while((i|0)<(h|0))}if((e+-4|0)>0){v=e+-4|0;while(1){m=c[Z+12>>2]|0;d=0;i=0;do{j=c[m+(d<<2)>>2]|0;do if(i){if(!j)break;if(+g[i+32>>2]<+g[j+32>>2])W=104;}else W=104;while(0);if((W|0)==104){W=0;i=j;}d=d+1|0;}while((d|0)<(h|0));if((i|0)==0?1:!(+g[i+32>>2]>E)){h=1;break b}n=c[i+28>>2]|0;c[q+(n<<2)>>2]=1;h=c[Z+4>>2]|0;c:do if(h|0){j=Y+(n<<4)|0;d=Y+(n<<4)+4|0;k=Y+(n<<4)+8|0;i=m;while(1){h=h+-1|0;i=c[i+(h<<2)>>2]|0;do if(i|0){T=c[i>>2]|0;Q=c[i+4>>2]|0;e=c[i+8>>2]|0;K=+g[Y+(Q<<4)>>2];L=+g[Y+(T<<4)>>2];u=+g[Y+(Q<<4)+4>>2];x=+g[Y+(T<<4)+4>>2];H=+g[Y+(Q<<4)+8>>2];I=+g[Y+(T<<4)+8>>2];J=+g[Y+(e<<4)>>2]-K;w=+g[Y+(e<<4)+4>>2]-u;R=+g[Y+(e<<4)+8>>2]-H;y=+G(+(((K-L)*w-(u-x)*J)*((K-L)*w-(u-x)*J)+(((u-x)*R-(H-I)*w)*((u-x)*R-(H-I)*w)+((H-I)*J-(K-L)*R)*((H-I)*J-(K-L)*R))));if(!((y==0.0?0.0:1.0/y*((K-L)*w-(u-x)*J))*(+g[k>>2]-I)+((+g[j>>2]-L)*(y==0.0?1.0:1.0/y*((u-x)*R-(H-I)*w))+(+g[d>>2]-x)*(y==0.0?0.0:1.0/y*((H-I)*J-(K-L)*R)))>E*.009999999776482582))break;ae(Z,i,n);}while(0);if(!h)break;i=c[Z+12>>2]|0;}h=c[Z+4>>2]|0;if(!h)break;else i=h;d:do{i=i+-1|0;d=c[Z+12>>2]|0;k=c[d+(i<<2)>>2]|0;do if(k){m=c[k>>2]|0;do if((m|0)!=(n|0)){j=c[k+4>>2]|0;if((j|0)==(n|0)){j=n;break}if((c[k+8>>2]|0)!=(n|0))break d}else j=c[k+4>>2]|0;while(0);e=c[k+8>>2]|0;K=+g[Y+(j<<4)>>2];L=+g[Y+(m<<4)>>2];u=+g[Y+(j<<4)+4>>2];x=+g[Y+(m<<4)+4>>2];H=+g[Y+(j<<4)+8>>2];I=+g[Y+(m<<4)+8>>2];J=+g[Y+(e<<4)>>2]-K;w=+g[Y+(e<<4)+4>>2]-u;R=+g[Y+(e<<4)+8>>2]-H;y=+G(+(((K-L)*w-(u-x)*J)*((K-L)*w-(u-x)*J)+(((u-x)*R-(H-I)*w)*((u-x)*R-(H-I)*w)+((H-I)*J-(K-L)*R)*((H-I)*J-(K-L)*R))));if(!(y<E*E*.10000000149011612?1:(D-I)*(y==0.0?0.0:1.0/y*((K-L)*w-(u-x)*J))+((z-L)*(y==0.0?1.0:1.0/y*((u-x)*R-(H-I)*w))+(A-x)*(y==0.0?0.0:1.0/y*((H-I)*J-(K-L)*R)))>E*.009999999776482582))break;ae(Z,c[d+(c[k+12>>2]<<2)>>2]|0,n);h=c[Z+4>>2]|0;i=h;}while(0)}while((i|0)!=0);if(!h)break;d=c[Z+12>>2]|0;do{h=h+-1|0;j=c[d+(h<<2)>>2]|0;do if(j|0){if((c[j+28>>2]|0)>-1)break c;T=c[j>>2]|0;Q=c[j+4>>2]|0;e=c[j+8>>2]|0;u=+g[Y+(Q<<4)>>2];s=u-+g[Y+(T<<4)>>2];w=+g[Y+(Q<<4)+4>>2];t=w-+g[Y+(T<<4)+4>>2];r=+g[Y+(Q<<4)+8>>2];o=r-+g[Y+(T<<4)+8>>2];u=+g[Y+(e<<4)>>2]-u;w=+g[Y+(e<<4)+4>>2]-w;r=+g[Y+(e<<4)+8>>2]-r;x=+G(+((s*w-t*u)*(s*w-t*u)+((t*r-o*w)*(t*r-o*w)+(o*u-s*r)*(o*u-s*r))));if(x==0.0){y=1.0;r=0.0;o=0.0;}else{y=1.0/x*(t*r-o*w);r=1.0/x*(o*u-s*r);o=1.0/x*(s*w-t*u);}i=Je(Y,U,y,r,o,c[Z+48>>2]|0)|0;c[j+28>>2]=i;if(!(c[q+(i<<2)>>2]|0)){e=c[j>>2]|0;g[j+32>>2]=(+g[Y+(i<<4)>>2]-+g[Y+(e<<4)>>2])*y+(+g[Y+(i<<4)+4>>2]-+g[Y+(e<<4)+4>>2])*r+(+g[Y+(i<<4)+8>>2]-+g[Y+(e<<4)+8>>2])*o;break}else{c[j+28>>2]=-1;break}}while(0)}while((h|0)!=0)}while(0);if((v|0)<=1){h=1;break b}v=v+-1|0;h=c[Z+4>>2]|0;}}else h=1;}else h=0;}else h=0;}else h=0;while(0);i=c[Z+48>>2]|0;if(i|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);c[Z+48>>2]=0;}if(!((q|0)==0|(p|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[p+-4>>2]|0);}if(h){h=c[Z+4>>2]|0;if((h|0)>0){B=0;m=0;j=0;k=0;i=0;d=c[Z+12>>2]|0;n=0;do{p=c[d+(B<<2)>>2]|0;if(p){do if((k|0)==(m|0)){d=m|0?m<<1:1;if((m|0)>=(d|0)){d=m;break}do if(!d)i=0;else{c[6436]=(c[6436]|0)+1;h=ic((d<<2|3)+16|0)|0;if(!h){i=0;break}c[(h+4+15&-16)+-4>>2]=h;i=h+4+15&-16;}while(0);if((m|0)>0){h=0;do{c[i+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(m|0));if(!n){j=i;n=i;break}}else if((j|0)==0|(n|0)==0){j=i;n=i;break}c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);j=i;n=i;}else d=m;while(0);c[j+(k<<2)>>2]=c[p>>2];p=k+1|0;q=(c[(c[Z+12>>2]|0)+(B<<2)>>2]|0)+4|0;do if((p|0)==(d|0)){m=d|0?d<<1:1;if((d|0)>=(m|0)){v=n;break}do if(!m)i=0;else{c[6436]=(c[6436]|0)+1;h=ic((m<<2|3)+16|0)|0;if(!h){i=0;break}c[(h+4+15&-16)+-4>>2]=h;i=h+4+15&-16;}while(0);if((d|0)>0){h=0;do{c[i+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(d|0));if(!n){d=m;j=i;v=i;break}}else if((j|0)==0|(n|0)==0){d=m;j=i;v=i;break}c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);d=m;j=i;v=i;}else v=n;while(0);c[j+(p<<2)>>2]=c[q>>2];p=k+2|0;q=(c[(c[Z+12>>2]|0)+(B<<2)>>2]|0)+8|0;do if((p|0)==(d|0)){m=d|0?d<<1:1;if((d|0)>=(m|0)){m=d;n=v;break}do if(!m)n=0;else{c[6436]=(c[6436]|0)+1;h=ic((m<<2|3)+16|0)|0;if(!h){n=0;break}c[(h+4+15&-16)+-4>>2]=h;n=h+4+15&-16;}while(0);if((d|0)>0){h=0;do{c[n+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(d|0));if(!v){j=n;i=n;break}}else if((j|0)==0|(v|0)==0){j=n;i=n;break}c[6437]=(c[6437]|0)+1;Tc(c[v+-4>>2]|0);j=n;i=n;}else{m=d;n=v;}while(0);c[j+(p<<2)>>2]=c[q>>2];d=c[Z+12>>2]|0;h=c[d+(B<<2)>>2]|0;c[d+(c[h+24>>2]<<2)>>2]=0;if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}k=k+3|0;h=c[Z+4>>2]|0;}B=B+1|0;}while((B|0)<(h|0));c[Z+44>>2]=(k|0)/3|0;if((k|0)>0){c[6436]=(c[6436]|0)+1;h=ic((k<<2|3)+16|0)|0;if(!h)d=0;else{c[(h+4+15&-16)+-4>>2]=h;d=h+4+15&-16;}Ik(d|0,0,k<<2|0)|0;h=0;do{c[d+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(k|0));n=i;m=j;h=d;Q=k;P=d;}else{n=i;m=j;h=0;Q=k;P=0;}}else{c[Z+44>>2]=0;n=0;m=0;h=0;Q=0;P=0;}i=c[Z+4>>2]|0;if((i|0)<0){if((c[Z+8>>2]|0)<0){j=c[Z+12>>2]|0;if(j|0){if(a[Z+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[Z+12>>2]=0;}a[Z+16>>0]=1;c[Z+12>>2]=0;c[Z+8>>2]=0;}do{c[(c[Z+12>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while((i|0)!=0)}c[Z+4>>2]=0;if(!((m|0)==0|(n|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[n+-4>>2]|0);}O=c[Z+44>>2]|0;k=(U|0)>0;if(k){c[6436]=(c[6436]|0)+1;i=ic((U<<4|3)+16|0)|0;if(!i)j=0;else{c[(i+4+15&-16)+-4>>2]=i;j=i+4+15&-16;}i=0;do{e=j+(i<<4)|0;c[e>>2]=c[Z+48>>2];c[e+4>>2]=c[Z+48+4>>2];c[e+8>>2]=c[Z+48+8>>2];c[e+12>>2]=c[Z+48+12>>2];i=i+1|0;}while((i|0)!=(U|0));N=j;M=j;}else{N=0;M=0;}j=c[Z+24>>2]|0;do if((j|0)>0){c[6436]=(c[6436]|0)+1;i=ic((j<<2|3)+16|0)|0;if(!i)d=0;else{c[(i+4+15&-16)+-4>>2]=i;d=i+4+15&-16;}Ik(d|0,0,j<<2|0)|0;if((c[Z+24>>2]|0)<=0){C=d;B=d;break}j=c[Z+32>>2]|0;i=0;do{c[d+(i<<2)>>2]=c[j+(i<<2)>>2];i=i+1|0;}while((i|0)<(c[Z+24>>2]|0));C=d;B=d;}else{C=0;B=0;}while(0);if(k){c[6436]=(c[6436]|0)+1;i=ic((V|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}Ik(i|0,0,V|0)|0;q=i;v=i;}else{q=0;v=0;}Ik(v|0,0,V|0)|0;if((O|0)<=0)if(!q)p=0;else{i=0;W=221;}else{p=c[Z+32>>2]|0;n=0;i=0;do{j=h+(n<<2)|0;k=c[j>>2]|0;m=q+(k<<2)|0;d=c[m>>2]|0;if(!d){c[j>>2]=i;c[N+(i<<4)>>2]=c[X+(k<<4)>>2];c[N+(i<<4)+4>>2]=c[X+(k<<4)+4>>2];c[N+(i<<4)+8>>2]=c[X+(k<<4)+8>>2];d=c[Z+24>>2]|0;if((d|0)>0){j=0;do{if((c[C+(j<<2)>>2]|0)==(k|0))c[p+(j<<2)>>2]=i;j=j+1|0;}while((j|0)!=(d|0))}i=i+1|0;c[m>>2]=i;}else c[j>>2]=d+-1;n=n+1|0;}while((n|0)!=(O*3|0));W=221;}do if((W|0)==221){if(!v){p=i;break}c[6437]=(c[6437]|0)+1;Tc(c[v+-4>>2]|0);p=i;}while(0);if(!((C|0)==0|(B|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[B+-4>>2]|0);}if((p|0)>0){c[6436]=(c[6436]|0)+1;i=ic((p<<4|3)+16|0)|0;if(!i)j=0;else{c[(i+4+15&-16)+-4>>2]=i;j=i+4+15&-16;}i=0;do{W=j+(i<<4)|0;c[W>>2]=c[Z+48>>2];c[W+4>>2]=c[Z+48+4>>2];c[W+8>>2]=c[Z+48+8>>2];c[W+12>>2]=c[Z+48+12>>2];i=i+1|0;}while((i|0)!=(p|0));k=j;d=j;}else{k=0;d=0;}if((O|0)>0){c[6436]=(c[6436]|0)+1;i=ic((O*12|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}j=c[Z+40>>2]|0;if(j|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[Z+40>>2]=i;Ik(i|0,0,O*12|0)|0;}Vh(d|0,M|0,p<<4|0)|0;Vh(c[Z+40>>2]|0,P|0,O*12|0)|0;do if(Q){if(!h){h=0;break}c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);h=0;}while(0);if((N|0)==0|(M|0)==0){m=O;n=O*3|0;break}c[6437]=(c[6437]|0)+1;Tc(c[M+-4>>2]|0);m=O;n=O*3|0;break}}}p=0;h=0;k=0;m=0;n=0;}while(0);if(!((Y|0)==0|(X|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[X+-4>>2]|0);}if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[6436]=(c[6436]|0)+1;h=ic(1271)|0;if(!h)B=0;else{c[(h+4+15&-16)+-4>>2]=h;B=h+4+15&-16;}tc(B,b,p,k,0);if((m|0)>0){h=0;do{d=h*3|0;b=c[Z+40>>2]|0;i=c[b+(d<<2)>>2]|0;j=c[b+(d+1<<2)>>2]|0;d=c[b+(d+2<<2)>>2]|0;if((i|0)<(j|0))Ef(B,i,j,0,0);if((j|0)<(d|0))Ef(B,j,d,0,0);if((d|0)<(i|0))Ef(B,d,i,0,0);Nf(B,i,j,d,0);h=h+1|0;}while((h|0)!=(m|0))}if(p)if(!k)v=0;else{c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);v=0;}else v=k;if(n|0){h=c[Z+40>>2]|0;if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);c[Z+40>>2]=0;}c[Z+40>>2]=0;}if(f){j=c[B+732>>2]|0;if((j|0)>0){d=B+740|0;h=243703;i=0;do{k=c[d>>2]|0;m=k+(i*52|0)|0;h=(S(h,1664525)|0)+1013904223|0;n=Z+48|0;p=m;q=n+52|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));n=m;p=k+(((h>>>0)%(j>>>0)|0)*52|0)|0;q=n+52|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));n=k+(((h>>>0)%(j>>>0)|0)*52|0)|0;p=Z+48|0;q=n+52|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));i=i+1|0;}while((i|0)!=(j|0))}else h=243703;k=c[B+752>>2]|0;if((k|0)>0){m=B+760|0;i=0;do{d=c[m>>2]|0;j=d+(i*44|0)|0;h=(S(h,1664525)|0)+1013904223|0;d=d+(((h>>>0)%(k>>>0)|0)*44|0)|0;n=Z+48|0;p=j;q=n+44|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));n=j;p=d;q=n+44|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));n=d;p=Z+48|0;q=n+44|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0;}while((n|0)<(q|0));i=i+1|0;}while((i|0)!=(k|0))}}h=c[Z+32>>2]|0;if(h|0){if(a[Z+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[Z+32>>2]=0;}a[Z+36>>0]=1;c[Z+32>>2]=0;c[Z+24>>2]=0;c[Z+28>>2]=0;h=c[Z+12>>2]|0;if(h|0){if(a[Z+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[Z+12>>2]=0;}h=c[Z+40>>2]|0;if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);c[Z+40>>2]=0;}c[Z+40>>2]=0;if(!v){l=Z;return B|0}c[6437]=(c[6437]|0)+1;Tc(c[v+-4>>2]|0);l=Z;return B|0}function dc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0;K=l;l=l+16|0;f=c[b+1112>>2]|0;a:do if((f|0)>0)while(1){o=c[c[b+1120>>2]>>2]|0;f=c[o+348>>2]|0;if(f|0){hg(b+1048|0,f)|0;h=c[b+1052>>2]|0;if(h|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+1052>>2]=f;c[b+1060>>2]=(c[b+1060>>2]|0)+-1;}f=c[o+52>>2]|0;if(f|0){if(a[o+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[o+52>>2]=0;}a[o+56>>0]=1;c[o+52>>2]=0;c[o+44>>2]=0;c[o+48>>2]=0;f=c[o+32>>2]|0;if(f|0){if(a[o+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[o+32>>2]=0;}a[o+36>>0]=1;c[o+32>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;f=c[o+12>>2]|0;if(f|0){if(a[o+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[o+12>>2]=0;}a[o+16>>0]=1;c[o+12>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);f=c[b+1112>>2]|0;if((f|0)<=0){h=f;break a}j=c[b+1120>>2]|0;h=0;do{i=j+(h<<2)|0;if((c[i>>2]|0)==(o|0)){J=24;break}h=h+1|0;}while((h|0)<(f|0));if((J|0)==24){J=0;if((h|0)<(f|0)){c[i>>2]=c[j+(f+-1<<2)>>2];c[(c[b+1120>>2]|0)+(f+-1<<2)>>2]=o;c[b+1112>>2]=f+-1;f=f+-1|0;}}if((f|0)<=0){h=f;break}}else h=f;while(0);f=c[b+712>>2]|0;f=(f|0)>(d|0)?d:f;if((h|0)<(f|0)){if((c[b+1116>>2]|0)<(f|0)){if(f){c[6436]=(c[6436]|0)+1;i=ic((f<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}o=c[b+1112>>2]|0;if((o|0)>0){j=0;do{c[i+(j<<2)>>2]=c[(c[b+1120>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(o|0));j=i;i=b+1120|0;}else{j=i;i=b+1120|0;}}else{j=0;i=b+1120|0;}o=c[i>>2]|0;if(o|0){if(a[b+1124>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);}c[i>>2]=0;}a[b+1124>>0]=1;c[i>>2]=j;c[b+1116>>2]=f;}else i=b+1120|0;do{c[(c[i>>2]|0)+(h<<2)>>2]=0;h=h+1|0;}while((h|0)!=(f|0))}c[b+1112>>2]=f;if((f|0)>0){h=0;do{c[6436]=(c[6436]|0)+1;f=ic(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;j=f+348|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;j=c[b+1120>>2]|0;a[(c[j+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0;f=c[b+1112>>2]|0;}while((h|0)<(f|0));if((f|0)>0){h=c[b+712>>2]|0;if((h|0)>0){i=0;k=0.0;m=0.0;n=0.0;o=f;while(1){p=c[b+720>>2]|0;v=k+ +g[p+(i*104|0)+8>>2];m=m+ +g[p+(i*104|0)+12>>2];w=n+ +g[p+(i*104|0)+16>>2];d=c[j+(((i*29873|0)%(o|0)|0)<<2)>>2]|0;p=p+(i*104|0)|0;j=c[d+24>>2]|0;if((j|0)==(c[d+28>>2]|0)?(q=j|0?j<<1:1,(j|0)<(q|0)):0){if(!q)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((q<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}j=c[d+24>>2]|0;}if((j|0)>0){o=0;do{c[h+(o<<2)>>2]=c[(c[d+32>>2]|0)+(o<<2)>>2];o=o+1|0;}while((o|0)!=(j|0))}o=c[d+32>>2]|0;if(o){if(a[d+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[o+-4>>2]|0);j=c[d+24>>2]|0;}c[d+32>>2]=0;}a[d+36>>0]=1;c[d+32>>2]=h;c[d+28>>2]=q;h=c[b+712>>2]|0;}c[(c[d+32>>2]|0)+(j<<2)>>2]=p;c[d+24>>2]=j+1;i=i+1|0;if((i|0)>=(h|0))break;k=v;n=w;o=c[b+1112>>2]|0;j=c[b+1120>>2]|0;}k=1.0/+(h|0);if((f|0)>=0)if(!f){i=0;n=v*k;m=m*k;k=w*k;J=70;}else{n=v*k;m=m*k;k=w*k;J=68;}else{D=b+720|0;G=0;E=0;}}else{n=1.0/+(h|0)*0.0;m=1.0/+(h|0)*0.0;k=1.0/+(h|0)*0.0;J=68;}if((J|0)==68){c[6436]=(c[6436]|0)+1;h=ic((f<<4|3)+16|0)|0;if(!h){i=0;J=70;}else{c[(h+4+15&-16)+-4>>2]=h;i=h+4+15&-16;J=70;}}if((J|0)==70){h=0;do{g[i+(h<<4)>>2]=n;g[i+(h<<4)+4>>2]=m;g[i+(h<<4)+8>>2]=k;g[i+(h<<4)+12>>2]=0.0;h=h+1|0;}while((h|0)!=(f|0));D=b+720|0;G=i;E=i;}t=G+4|0;u=G+8|0;s=0;do{z=+(s|0)*.0625;z=2.0-(z>1.0?1.0:z);o=0;d=0;while(1){h=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;j=c[h+24>>2]|0;if((j|0)>0){i=c[h+32>>2]|0;h=0;k=0.0;m=0.0;n=0.0;do{r=c[i+(h<<2)>>2]|0;k=k+ +g[r+8>>2];m=m+ +g[r+12>>2];n=n+ +g[r+16>>2];h=h+1|0;}while((h|0)!=(j|0))}else{n=0.0;m=0.0;k=0.0;}if(!j)r=o;else{q=G+(d<<4)|0;w=+g[q>>2];r=G+(d<<4)+4|0;x=+g[r>>2];h=G+(d<<4)+8|0;y=+g[h>>2];v=w+z*(k*(1.0/+(j|0))-w);m=x+z*(m*(1.0/+(j|0))-x);k=y+z*(n*(1.0/+(j|0))-y);g[q>>2]=v;g[r>>2]=m;g[h>>2]=k;g[G+(d<<4)+12>>2]=0.0;j=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;h=c[j+24>>2]|0;if((h|0)<0){if((c[j+28>>2]|0)<0){i=c[j+32>>2]|0;if(i|0){if(a[j+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[j+32>>2]=0;}a[j+36>>0]=1;c[j+32>>2]=0;c[j+28>>2]=0;}do{c[(c[j+32>>2]|0)+(h<<2)>>2]=0;h=h+1|0;}while((h|0)!=0)}c[j+24>>2]=0;r=o|(v-w)*(v-w)+(m-x)*(m-x)+(k-y)*(k-y)>1.1920928955078125e-07;}d=d+1|0;if((d|0)>=(f|0))break;else o=r;}s=s+1|0;h=c[b+712>>2]|0;b:do if((h|0)>0){if((f|0)>1)q=0;else{p=0;while(1){o=c[c[b+1120>>2]>>2]|0;d=(c[D>>2]|0)+(p*104|0)|0;i=c[o+24>>2]|0;if((i|0)==(c[o+28>>2]|0)?(C=i|0?i<<1:1,(i|0)<(C|0)):0){if(!C)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((C<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}i=c[o+24>>2]|0;}if((i|0)>0){j=0;do{c[h+(j<<2)>>2]=c[(c[o+32>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0))}j=c[o+32>>2]|0;if(j){if(a[o+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);i=c[o+24>>2]|0;}c[o+32>>2]=0;}a[o+36>>0]=1;c[o+32>>2]=h;c[o+28>>2]=C;h=c[b+712>>2]|0;}c[(c[o+32>>2]|0)+(i<<2)>>2]=d;c[o+24>>2]=i+1;p=p+1|0;if((p|0)>=(h|0))break b}}do{d=c[D>>2]|0;m=+g[d+(q*104|0)+8>>2];n=+g[d+(q*104|0)+12>>2];v=+g[d+(q*104|0)+16>>2];i=1;k=+F(+(+g[G>>2]-m))+ +F(+(+g[t>>2]-n))+ +F(+(+g[u>>2]-v));j=0;while(1){w=+F(+(+g[G+(i<<4)>>2]-m))+ +F(+(+g[G+(i<<4)+4>>2]-n))+ +F(+(+g[G+(i<<4)+8>>2]-v));o=w<k;j=o?i:j;i=i+1|0;if((i|0)==(f|0))break;else k=o?w:k;}p=c[(c[b+1120>>2]|0)+(j<<2)>>2]|0;o=d+(q*104|0)|0;i=c[p+24>>2]|0;if((i|0)==(c[p+28>>2]|0)?(B=i|0?i<<1:1,(i|0)<(B|0)):0){if(!B)h=0;else{c[6436]=(c[6436]|0)+1;h=ic((B<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}i=c[p+24>>2]|0;}if((i|0)>0){j=0;do{c[h+(j<<2)>>2]=c[(c[p+32>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)!=(i|0))}j=c[p+32>>2]|0;if(j){if(a[p+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);i=c[p+24>>2]|0;}c[p+32>>2]=0;}a[p+36>>0]=1;c[p+32>>2]=h;c[p+28>>2]=B;h=c[b+712>>2]|0;}c[(c[p+32>>2]|0)+(i<<2)>>2]=o;c[p+24>>2]=i+1;q=q+1|0;}while((q|0)<(h|0))}while(0)}while((s|0)<(e|0)&r);if((h|0)>0){h=h<<2;c[6436]=(c[6436]|0)+1;f=ic((h|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}Ik(f|0,-1,h|0)|0;e=f;u=f;}else{e=0;u=0;}f=c[b+1112>>2]|0;if((f|0)>0){d=c[b+1120>>2]|0;o=0;do{j=c[d+(o<<2)>>2]|0;if((c[j+24>>2]|0)>0){i=c[D>>2]|0;h=c[j+32>>2]|0;f=0;do{c[e+((((c[h+(f<<2)>>2]|0)-i|0)/104|0)<<2)>>2]=o;f=f+1|0;}while((f|0)<(c[j+24>>2]|0));f=c[b+1112>>2]|0;}o=o+1|0;}while((o|0)<(f|0))}if((c[b+752>>2]|0)>0){r=0;do{C=c[b+760>>2]|0;q=c[D>>2]|0;f=((c[C+(r*44|0)+8>>2]|0)-q|0)/104|0;c[K>>2]=f;c[K+4>>2]=((c[C+(r*44|0)+12>>2]|0)-q|0)/104|0;c[K+8>>2]=((c[C+(r*44|0)+16>>2]|0)-q|0)/104|0;q=0;while(1){d=c[e+(f<<2)>>2]|0;o=1;do{f=c[K+(((o+q|0)%3|0)<<2)>>2]|0;c:do if((c[e+(f<<2)>>2]|0)!=(d|0)){p=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;j=(c[D>>2]|0)+(f*104|0)|0;h=c[p+24>>2]|0;d:do if((h|0)>0){i=c[p+32>>2]|0;f=0;while(1){if((c[i+(f<<2)>>2]|0)==(j|0))break;f=f+1|0;if((f|0)>=(h|0))break d}if((f|0)!=(h|0))break c}while(0);if((h|0)==(c[p+28>>2]|0)?(H=h|0?h<<1:1,(h|0)<(H|0)):0){if(!H)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((H<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[p+24>>2]|0;}if((h|0)>0){i=0;do{c[f+(i<<2)>>2]=c[(c[p+32>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0))}i=c[p+32>>2]|0;if(i){if(a[p+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);h=c[p+24>>2]|0;}c[p+32>>2]=0;}a[p+36>>0]=1;c[p+32>>2]=f;c[p+28>>2]=H;f=h;}else f=h;c[(c[p+32>>2]|0)+(f<<2)>>2]=j;c[p+24>>2]=f+1;}while(0);o=o+1|0;}while((o|0)!=3);f=q+1|0;if((f|0)>=3)break;q=f;f=c[K+(f<<2)>>2]|0;}r=r+1|0;}while((r|0)<(c[b+752>>2]|0));f=c[b+1112>>2]|0;}if((f|0)>1){c[6436]=(c[6436]|0)+1;f=ic(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;p=f+36|0;a[p>>0]=1;q=f+32|0;c[q>>2]=0;r=f+24|0;c[r>>2]=0;s=f+28|0;c[s>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;t=f+348|0;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;t=f;a[f+377>>0]=0;j=c[b+712>>2]|0;if((j|0)>0){c[6436]=(c[6436]|0)+1;f=ic((j<<2|3)+16|0)|0;if(!f)i=0;else{c[(f+4+15&-16)+-4>>2]=f;i=f+4+15&-16;}h=c[r>>2]|0;if((h|0)>0){f=0;do{c[i+(f<<2)>>2]=c[(c[q>>2]|0)+(f<<2)>>2];f=f+1|0;}while((f|0)!=(h|0))}f=c[q>>2]|0;if(f|0){if(a[p>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[q>>2]=0;}a[p>>0]=1;c[q>>2]=i;c[s>>2]=j;f=c[b+712>>2]|0;if((f|0)>0){d=0;i=c[r>>2]|0;h=j;while(1){o=(c[D>>2]|0)+(d*104|0)|0;do if((i|0)==(h|0)){j=h|0?h<<1:1;if((h|0)>=(j|0)){j=h;break}if(!j)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((j<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[r>>2]|0;}if((h|0)>0){i=0;do{c[f+(i<<2)>>2]=c[(c[q>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0))}i=c[q>>2]|0;if(i){if(a[p>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);h=c[r>>2]|0;}c[q>>2]=0;}a[p>>0]=1;c[q>>2]=f;c[s>>2]=j;f=c[b+712>>2]|0;}else{j=h;h=i;}while(0);c[(c[q>>2]|0)+(h<<2)>>2]=o;i=h+1|0;c[r>>2]=i;d=d+1|0;if((d|0)>=(f|0))break;else h=j;}}}f=c[b+1112>>2]|0;if((f|0)==(c[b+1116>>2]|0)?(I=f|0?f<<1:1,(f|0)<(I|0)):0){if(!I)i=0;else{c[6436]=(c[6436]|0)+1;f=ic((I<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=f;f=c[b+1112>>2]|0;}if((f|0)>0){h=0;do{c[i+(h<<2)>>2]=c[(c[b+1120>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(f|0))}h=c[b+1120>>2]|0;if(h){if(a[b+1124>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);f=c[b+1112>>2]|0;}c[b+1120>>2]=0;}a[b+1124>>0]=1;c[b+1120>>2]=i;c[b+1116>>2]=I;}c[(c[b+1120>>2]|0)+(f<<2)>>2]=t;I=f+1|0;c[b+1112>>2]=I;D=c[b+1120>>2]|0;f=D+(f<<2)|0;H=c[D>>2]|0;c[D>>2]=c[f>>2];c[f>>2]=H;f=I;}if((f|0)>0){h=0;do{d=c[(c[b+1120>>2]|0)+(h<<2)>>2]|0;e:do if(!(c[d+24>>2]|0)){h=h+-1|0;f=c[d+348>>2]|0;if(f|0){hg(b+1048|0,f)|0;i=c[b+1052>>2]|0;if(i|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[b+1052>>2]=f;c[b+1060>>2]=(c[b+1060>>2]|0)+-1;}f=c[d+52>>2]|0;if(f|0){if(a[d+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+52>>2]=0;}a[d+56>>0]=1;c[d+52>>2]=0;c[d+44>>2]=0;c[d+48>>2]=0;f=c[d+32>>2]|0;if(f|0){if(a[d+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+32>>2]=0;}a[d+36>>0]=1;c[d+32>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;f=c[d+12>>2]|0;if(f|0){if(a[d+16>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[d+12>>2]=0;}a[d+16>>0]=1;c[d+12>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);f=c[b+1112>>2]|0;if((f|0)>0){o=c[b+1120>>2]|0;i=0;while(1){j=o+(i<<2)|0;if((c[j>>2]|0)==(d|0))break;i=i+1|0;if((i|0)>=(f|0))break e}if((i|0)>=(f|0))break;c[j>>2]=c[o+(f+-1<<2)>>2];c[(c[b+1120>>2]|0)+(f+-1<<2)>>2]=d;c[b+1112>>2]=f+-1;f=f+-1|0;}}while(0);h=h+1|0;}while((h|0)<(f|0))}if(!((e|0)==0|(u|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[u+-4>>2]|0);}if(!((G|0)==0|(E|0)==0)){c[6437]=(c[6437]|0)+1;Tc(c[E+-4>>2]|0);}}else J=234;}else J=234;f:do if((J|0)==234){o=c[b+772>>2]|0;if(o|0){if((f|0)<(o|0)){if((c[b+1116>>2]|0)<(o|0)){c[6436]=(c[6436]|0)+1;h=ic((o<<2|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16;}i=c[b+1112>>2]|0;if((i|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[b+1120>>2]|0)+(h<<2)>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[b+1120>>2]|0;if(h|0){if(a[b+1124>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[b+1120>>2]=0;}a[b+1124>>0]=1;c[b+1120>>2]=j;c[b+1116>>2]=o;h=b+1120|0;}else h=b+1120|0;do{c[(c[h>>2]|0)+(f<<2)>>2]=0;f=f+1|0;}while((f|0)!=(o|0))}c[b+1112>>2]=o;if((o|0)>0){h=0;do{c[6436]=(c[6436]|0)+1;f=ic(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;I=f+348|0;c[I>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;c[I+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;a[(c[(c[b+1120>>2]|0)+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0;}while((h|0)<(c[b+1112>>2]|0))}if((c[b+772>>2]|0)<=0)break;o=0;while(1){j=0;do{d=c[(c[b+1120>>2]|0)+(o<<2)>>2]|0;p=(c[b+780>>2]|0)+(o*104|0)+8+(j<<2)|0;h=c[d+24>>2]|0;if((h|0)==(c[d+28>>2]|0)?(r=h|0?h<<1:1,(h|0)<(r|0)):0){if(!r)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((r<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+24>>2]|0;}if((h|0)>0){i=0;do{c[f+(i<<2)>>2]=c[(c[d+32>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0))}i=c[d+32>>2]|0;if(i){if(a[d+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);h=c[d+24>>2]|0;}c[d+32>>2]=0;}a[d+36>>0]=1;c[d+32>>2]=f;c[d+28>>2]=r;f=h;}else f=h;c[(c[d+32>>2]|0)+(f<<2)>>2]=c[p>>2];c[d+24>>2]=f+1;j=j+1|0;}while((j|0)!=4);o=o+1|0;if((o|0)>=(c[b+772>>2]|0))break f}}o=c[b+752>>2]|0;if((f|0)<(o|0)){if((c[b+1116>>2]|0)<(o|0)){if(o){c[6436]=(c[6436]|0)+1;h=ic((o<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16;}j=c[b+1112>>2]|0;if((j|0)>0){i=0;do{c[h+(i<<2)>>2]=c[(c[b+1120>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(j|0));j=b+1120|0;}else j=b+1120|0;}else{h=0;j=b+1120|0;}i=c[j>>2]|0;if(i|0){if(a[b+1124>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);}c[j>>2]=0;}a[b+1124>>0]=1;c[j>>2]=h;c[b+1116>>2]=o;}do{c[(c[b+1120>>2]|0)+(f<<2)>>2]=0;f=f+1|0;}while((f|0)!=(o|0))}c[b+1112>>2]=o;if((o|0)>0){h=0;do{c[6436]=(c[6436]|0)+1;f=ic(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;I=f+348|0;c[I>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;c[I+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;a[(c[(c[b+1120>>2]|0)+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0;}while((h|0)<(c[b+1112>>2]|0))}if((c[b+752>>2]|0)>0){o=0;do{j=0;do{d=c[(c[b+1120>>2]|0)+(o<<2)>>2]|0;p=(c[b+760>>2]|0)+(o*44|0)+8+(j<<2)|0;h=c[d+24>>2]|0;if((h|0)==(c[d+28>>2]|0)?(s=h|0?h<<1:1,(h|0)<(s|0)):0){if(!s)f=0;else{c[6436]=(c[6436]|0)+1;f=ic((s<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}h=c[d+24>>2]|0;}if((h|0)>0){i=0;do{c[f+(i<<2)>>2]=c[(c[d+32>>2]|0)+(i<<2)>>2];i=i+1|0;}while((i|0)!=(h|0))}i=c[d+32>>2]|0;if(i){if(a[d+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[i+-4>>2]|0);h=c[d+24>>2]|0;}c[d+32>>2]=0;}a[d+36>>0]=1;c[d+32>>2]=f;c[d+28>>2]=s;f=h;}else f=h;c[(c[d+32>>2]|0)+(f<<2)>>2]=c[p>>2];c[d+24>>2]=f+1;j=j+1|0;}while((j|0)!=3);o=o+1|0;}while((o|0)<(c[b+752>>2]|0))}}while(0);f=c[b+1112>>2]|0;if(!f){b=0;l=K;return b|0}if((f|0)>0){p=0;do{q=c[(c[b+1120>>2]|0)+(p<<2)>>2]|0;g[q+128>>2]=0.0;d=c[q+24>>2]|0;o=c[q+4>>2]|0;if((d|0)>(o|0)){if((c[q+8>>2]|0)<(d|0)){if(!d){f=0;i=o;}else{c[6436]=(c[6436]|0)+1;f=ic((d<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=c[q+4>>2]|0;}j=c[q+12>>2]|0;if((i|0)<=0)if(!j)h=q+16|0;else J=324;else{h=0;do{c[f+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0;}while((h|0)!=(i|0));J=324;}if((J|0)==324){J=0;if(!(a[q+16>>0]|0))h=q+16|0;else{c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);h=q+16|0;}}a[h>>0]=1;c[q+12>>2]=f;c[q+8>>2]=d;}else f=c[q+12>>2]|0;Ik(f+(o<<2)|0,0,d-o<<2|0)|0;o=c[q+24>>2]|0;}else o=d;c[q+4>>2]=d;j=(o|0)>0;if(j){h=c[q+32>>2]|0;i=c[q+12>>2]|0;f=0;do{k=+g[(c[h+(f<<2)>>2]|0)+88>>2];if(k==0.0){a[q+376>>0]=1;k=999999984306749440.0;}else k=1.0/k;g[i+(f<<2)>>2]=k;m=k+ +g[q+128>>2];g[q+128>>2]=m;f=f+1|0;}while((f|0)!=(o|0));g[q+128>>2]=1.0/m;f=0;k=0.0;n=0.0;v=0.0;do{I=c[h+(f<<2)>>2]|0;A=+g[i+(f<<2)>>2];k=k+ +g[I+8>>2]*A;n=n+A*+g[I+12>>2];v=v+A*+g[I+16>>2];f=f+1|0;}while((f|0)!=(o|0));m=1.0/m;}else{m=1.0/+g[q+128>>2];g[q+128>>2]=m;v=0.0;n=0.0;k=0.0;}A=k*m;z=n*m;y=v*m;g[q+228>>2]=A;g[q+232>>2]=z;g[q+236>>2]=y;g[q+240>>2]=0.0;f=q+316|0;h=f+36|0;do{c[f>>2]=0;f=f+4|0;}while((f|0)<(h|0));f=q+132|0;h=f+48|0;do{c[f>>2]=0;f=f+4|0;}while((f|0)<(h|0));if(j){h=c[q+32>>2]|0;i=c[q+12>>2]|0;f=0;k=0.0;w=0.0;x=0.0;m=0.0;n=0.0;v=0.0;do{I=c[h+(f<<2)>>2]|0;O=+g[I+8>>2]-A;M=+g[I+12>>2]-z;N=+g[I+16>>2]-y;L=+g[i+(f<<2)>>2];k=k+L*(M*M+N*N);g[q+132>>2]=k;w=L*(O*O+N*N)+w;g[q+152>>2]=w;x=(O*O+M*M)*L+x;g[q+172>>2]=x;m=m-M*O*L;g[q+136>>2]=m;n=n-N*O*L;g[q+140>>2]=n;v=v-N*M*L;g[q+156>>2]=v;f=f+1|0;}while((f|0)!=(o|0));f=q+136|0;h=q+140|0;i=q+156|0;j=q+152|0;}else{f=q+136|0;h=q+140|0;i=q+156|0;j=q+152|0;x=0.0;w=0.0;v=0.0;n=0.0;m=0.0;k=0.0;}L=w*x-v*v;M=v*n-x*m;N=v*m-w*n;O=1.0/(L*k+m*M+N*n);g[q+132>>2]=L*O;g[f>>2]=(v*n-x*m)*O;g[h>>2]=(v*m-w*n)*O;g[q+144>>2]=0.0;g[q+148>>2]=M*O;g[j>>2]=(x*k-n*n)*O;g[i>>2]=(m*n-v*k)*O;g[q+160>>2]=0.0;g[q+164>>2]=N*O;g[q+168>>2]=(n*m-v*k)*O;g[q+172>>2]=(w*k-m*m)*O;g[q+176>>2]=0.0;c[q+60>>2]=1065353216;c[q+64>>2]=0;c[q+64+4>>2]=0;c[q+64+8>>2]=0;c[q+64+12>>2]=0;c[q+80>>2]=1065353216;c[q+84>>2]=0;c[q+84+4>>2]=0;c[q+84+8>>2]=0;c[q+84+12>>2]=0;c[q+100>>2]=1065353216;c[q+104>>2]=0;c[q+108>>2]=c[q+228>>2];c[q+108+4>>2]=c[q+228+4>>2];c[q+108+8>>2]=c[q+228+8>>2];c[q+108+12>>2]=c[q+228+12>>2];o=c[q+24>>2]|0;j=c[q+44>>2]|0;if((j|0)<(o|0)){if((c[q+48>>2]|0)<(o|0)){if(!o){f=0;i=j;}else{c[6436]=(c[6436]|0)+1;f=ic((o<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=c[q+44>>2]|0;}if((i|0)>0){h=0;do{I=f+(h<<4)|0;H=(c[q+52>>2]|0)+(h<<4)|0;c[I>>2]=c[H>>2];c[I+4>>2]=c[H+4>>2];c[I+8>>2]=c[H+8>>2];c[I+12>>2]=c[H+12>>2];h=h+1|0;}while((h|0)!=(i|0))}h=c[q+52>>2]|0;if(h|0){if(a[q+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[h+-4>>2]|0);}c[q+52>>2]=0;}a[q+56>>0]=1;c[q+52>>2]=f;c[q+48>>2]=o;h=q+52|0;}else h=q+52|0;f=j;do{I=(c[h>>2]|0)+(f<<4)|0;c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];c[I+12>>2]=c[K+12>>2];f=f+1|0;}while((f|0)!=(o|0))}c[q+44>>2]=o;if((o|0)>0){f=0;do{H=c[(c[q+32>>2]|0)+(f<<2)>>2]|0;N=+g[H+12>>2]-+g[q+232>>2];O=+g[H+16>>2]-+g[q+236>>2];I=c[q+52>>2]|0;g[I+(f<<4)>>2]=+g[H+8>>2]-+g[q+228>>2];g[I+(f<<4)+4>>2]=N;g[I+(f<<4)+8>>2]=O;g[I+(f<<4)+12>>2]=0.0;f=f+1|0;}while((f|0)<(c[q+44>>2]|0))}p=p+1|0;}while((p|0)<(c[b+1112>>2]|0))}Mc(b);f=c[b+1112>>2]|0;d=S(f,f)|0;o=c[b+1132>>2]|0;if((d|0)>(o|0)){if((c[b+1136>>2]|0)<(d|0)){if(!d){f=0;i=o;}else{c[6436]=(c[6436]|0)+1;f=ic(d+19|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;}i=c[b+1132>>2]|0;}j=c[b+1140>>2]|0;if((i|0)<=0)if(!j)h=b+1144|0;else J=372;else{h=0;do{a[f+h>>0]=a[j+h>>0]|0;h=h+1|0;}while((h|0)!=(i|0));J=372;}if((J|0)==372)if(!(a[b+1144>>0]|0))h=b+1144|0;else{c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);h=b+1144|0;}a[h>>0]=1;c[b+1140>>2]=f;c[b+1136>>2]=d;}else f=c[b+1140>>2]|0;Ik(f+o|0,0,d-o|0)|0;f=c[b+1112>>2]|0;}c[b+1132>>2]=d;if((f|0)<=0){b=f;l=K;return b|0}e=c[b+1120>>2]|0;s=c[b+1140>>2]|0;r=0;do{t=c[e+(r<<2)>>2]|0;c[t+380>>2]=r;u=c[t+24>>2]|0;q=0;do{j=c[e+(q<<2)>>2]|0;g:do if((u|0)>0){o=c[j+24>>2]|0;h=0;while(1){if((o|0)>0){p=c[(c[t+32>>2]|0)+(h<<2)>>2]|0;d=c[j+32>>2]|0;i=0;do{if((p|0)==(c[d+(i<<2)>>2]|0)){h=1;break g}i=i+1|0;}while((i|0)<(o|0))}h=h+1|0;if((h|0)>=(u|0)){h=0;break}}}else h=0;while(0);a[s+((S(f,q)|0)+r)>>0]=h;q=q+1|0;}while((q|0)!=(f|0));r=r+1|0;}while((r|0)!=(f|0));l=K;return f|0}function ec(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,k=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0,oa=0;Z=l;l=l+176|0;aj(12398);Ud(b);a:do if(pb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(Y=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(pb[c[(c[Y>>2]|0)+48>>2]&127](Y)|0)&6144|0):0){Q=Z+112+44|0;L=Z+112+4|0;N=Z+112+8|0;O=Z+112+16|0;P=Z+112+20|0;E=Z+112+24|0;F=Z+112+32|0;G=Z+112+36|0;H=Z+112+40|0;D=Z+112+48|0;K=Z+112+52|0;M=Z+112+56|0;R=Z+112+48|0;S=Z+112+16|0;T=Z+112+32|0;U=Z+112+48|0;W=Z+112+16|0;X=Z+112+32|0;Y=Z+112+48|0;d=pb[c[(c[b>>2]|0)+104>>2]&127](b)|0;b:while(1){C=d+-1|0;if((d|0)<=0)break a;p=Kb[c[(c[b>>2]|0)+108>>2]&31](b,C)|0;d=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;d=((pb[c[(c[d>>2]|0)+48>>2]&127](d)|0)&2048|0)!=0;o=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=((pb[c[(c[o>>2]|0)+48>>2]&127](o)|0)&4096|0)!=0;B=+g[p+40>>2];if(B<=0.0){d=C;continue}switch(c[p+4>>2]|0){case 3:{c[Z+112>>2]=1065353216;c[Z+112+4>>2]=0;c[Z+112+4+4>>2]=0;c[Z+112+4+8>>2]=0;c[Z+112+4+12>>2]=0;c[Z+112+20>>2]=1065353216;c[Z+112+24>>2]=0;c[Z+112+24+4>>2]=0;c[Z+112+24+8>>2]=0;c[Z+112+24+12>>2]=0;c[Z+112+40>>2]=1065353216;c[Q>>2]=0;c[Q+4>>2]=0;c[Q+8>>2]=0;c[Q+12>>2]=0;c[Q+16>>2]=0;A=+g[p+300>>2];z=+g[p+304>>2];y=+g[p+308>>2];o=c[p+28>>2]|0;x=A*+g[o+20>>2]+z*+g[o+24>>2]+y*+g[o+28>>2]+ +g[o+56>>2];w=A*+g[o+36>>2]+z*+g[o+40>>2]+y*+g[o+44>>2]+ +g[o+60>>2];g[Z+112+48>>2]=A*+g[o+4>>2]+z*+g[o+8>>2]+y*+g[o+12>>2]+ +g[o+52>>2];g[Z+112+52>>2]=x;g[Z+112+56>>2]=w;g[Z+112+60>>2]=0.0;o=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[o>>2]|0)+56>>2]&7](o,Z+112|0,B);w=+g[p+316>>2];x=+g[p+320>>2];y=+g[p+324>>2];p=c[p+32>>2]|0;z=w*+g[p+20>>2]+x*+g[p+24>>2]+y*+g[p+28>>2]+ +g[p+56>>2];A=w*+g[p+36>>2]+x*+g[p+40>>2]+y*+g[p+44>>2]+ +g[p+60>>2];g[Z+112+48>>2]=w*+g[p+4>>2]+x*+g[p+8>>2]+y*+g[p+12>>2]+ +g[p+52>>2];g[Z+112+52>>2]=z;g[Z+112+56>>2]=A;g[Z+112+60>>2]=0.0;if(d){p=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[p>>2]|0)+56>>2]&7](p,Z+112|0,B);}d=C;continue b}case 4:{n=c[p+28>>2]|0;e=+g[p+552>>2];da=+g[n+4>>2];f=+g[p+552+16>>2];ca=+g[n+8>>2];h=+g[p+552+32>>2];ba=+g[n+12>>2];i=+g[p+552+4>>2];q=+g[p+552+20>>2];r=+g[p+552+36>>2];s=+g[p+552+8>>2];u=+g[p+552+24>>2];w=+g[p+552+40>>2];aa=+g[n+20>>2];$=+g[n+24>>2];_=+g[n+28>>2];t=+g[n+36>>2];v=+g[n+40>>2];x=+g[n+44>>2];fa=+g[p+552+48>>2];ea=+g[p+552+52>>2];A=+g[p+552+56>>2];y=+g[n+52>>2]+(da*fa+ca*ea+ba*A);z=aa*fa+$*ea+_*A+ +g[n+56>>2];A=t*fa+v*ea+x*A+ +g[n+60>>2];g[Z+112>>2]=e*da+f*ca+h*ba;g[Z+112+4>>2]=da*i+ca*q+ba*r;g[Z+112+8>>2]=da*s+ca*u+ba*w;g[Z+112+12>>2]=0.0;g[Z+112+16>>2]=e*aa+f*$+h*_;g[Z+112+20>>2]=i*aa+q*$+r*_;g[Z+112+24>>2]=s*aa+u*$+w*_;g[Z+112+28>>2]=0.0;g[Z+112+32>>2]=e*t+f*v+h*x;g[Z+112+36>>2]=i*t+q*v+r*x;g[Z+112+40>>2]=s*t+u*v+w*x;g[Z+112+44>>2]=0.0;g[Z+112+48>>2]=y;g[Z+112+52>>2]=z;g[Z+112+56>>2]=A;g[Z+112+60>>2]=0.0;if(d){n=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[n>>2]|0)+56>>2]&7](n,Z+112|0,B);n=c[p+32>>2]|0;u=+g[p+616>>2];h=+g[n+4>>2];v=+g[p+616+16>>2];i=+g[n+8>>2];w=+g[p+616+32>>2];q=+g[n+12>>2];x=+g[p+616+4>>2];y=+g[p+616+20>>2];z=+g[p+616+36>>2];A=+g[p+616+8>>2];$=+g[p+616+24>>2];ba=+g[p+616+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+616+48>>2];f=+g[p+616+52>>2];fa=+g[p+616+56>>2];da=+g[n+52>>2]+(h*e+i*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Z+112>>2]=u*h+v*i+w*q;g[Z+112+4>>2]=h*x+i*y+q*z;g[Z+112+8>>2]=h*A+i*$+q*ba;g[Z+112+12>>2]=0.0;g[Z+112+16>>2]=u*r+v*s+w*t;g[Z+112+20>>2]=x*r+y*s+z*t;g[Z+112+24>>2]=A*r+$*s+ba*t;g[Z+112+28>>2]=0.0;g[Z+112+32>>2]=u*_+v*aa+w*ca;g[Z+112+36>>2]=x*_+y*aa+z*ca;g[Z+112+40>>2]=A*_+$*aa+ba*ca;g[Z+112+44>>2]=0.0;g[Z+112+48>>2]=da;g[Z+112+52>>2]=ea;g[Z+112+56>>2]=fa;g[Z+112+60>>2]=0.0;n=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[n>>2]|0)+56>>2]&7](n,Z+112|0,B);}else{n=c[p+32>>2]|0;u=+g[p+616>>2];h=+g[n+4>>2];v=+g[p+616+16>>2];i=+g[n+8>>2];w=+g[p+616+32>>2];q=+g[n+12>>2];x=+g[p+616+4>>2];y=+g[p+616+20>>2];z=+g[p+616+36>>2];A=+g[p+616+8>>2];$=+g[p+616+24>>2];ba=+g[p+616+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+616+48>>2];f=+g[p+616+52>>2];fa=+g[p+616+56>>2];da=+g[n+52>>2]+(h*e+i*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Z+112>>2]=u*h+v*i+w*q;g[Z+112+4>>2]=h*x+i*y+q*z;g[Z+112+8>>2]=h*A+i*$+q*ba;g[Z+112+12>>2]=0.0;g[Z+112+16>>2]=u*r+v*s+w*t;g[Z+112+20>>2]=x*r+y*s+z*t;g[Z+112+24>>2]=A*r+$*s+ba*t;g[Z+112+28>>2]=0.0;g[Z+112+32>>2]=u*_+v*aa+w*ca;g[Z+112+36>>2]=x*_+y*aa+z*ca;g[Z+112+40>>2]=A*_+$*aa+ba*ca;g[Z+112+44>>2]=0.0;g[Z+112+48>>2]=da;g[Z+112+52>>2]=ea;g[Z+112+56>>2]=fa;g[Z+112+60>>2]=0.0;}i=+g[p+688>>2];f=+g[p+688+4>>2];e=+Wg(i-f,6.2831854820251465);if(!(e<-3.1415927410125732))if(e>3.1415927410125732)h=e+-6.2831854820251465;else h=e;else h=e+6.2831854820251465;e=+Wg(i+f,6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465;}else e=e+6.2831854820251465;if(!(h==e)?(V=h>e,o):0){c[Z+96>>2]=c[Z+112+8>>2];c[Z+96+4>>2]=c[Z+112+24>>2];c[Z+96+8>>2]=c[Z+112+40>>2];g[Z+96+12>>2]=0.0;c[Z+80>>2]=c[Z+112>>2];c[Z+80+4>>2]=c[Z+112+16>>2];c[Z+80+8>>2]=c[Z+112+32>>2];g[Z+80+12>>2]=0.0;p=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=c[(c[p>>2]|0)+60>>2]|0;c[Z+64>>2]=0;c[Z+64+4>>2]=0;c[Z+64+8>>2]=0;c[Z+64+12>>2]=0;wb[o&0](p,Z+112+48|0,Z+96|0,Z+80|0,B,B,V?0.0:h,V?6.2831854820251465:e,Z+64|0,V^1,10.0);}d=C;continue b}case 5:{n=c[p+28>>2]|0;u=+g[p+300>>2];h=+g[n+4>>2];v=+g[p+300+16>>2];i=+g[n+8>>2];w=+g[p+300+32>>2];q=+g[n+12>>2];x=+g[p+300+4>>2];y=+g[p+300+20>>2];z=+g[p+300+36>>2];A=+g[p+300+8>>2];$=+g[p+300+24>>2];ba=+g[p+300+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+300+48>>2];f=+g[p+300+52>>2];fa=+g[p+300+56>>2];da=+g[n+52>>2]+(h*e+i*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Z+112>>2]=u*h+v*i+w*q;g[L>>2]=h*x+i*y+q*z;g[N>>2]=h*A+i*$+q*ba;g[Z+112+12>>2]=0.0;g[O>>2]=u*r+v*s+w*t;g[P>>2]=x*r+y*s+z*t;g[E>>2]=A*r+$*s+ba*t;g[Z+112+28>>2]=0.0;g[F>>2]=u*_+v*aa+w*ca;g[G>>2]=x*_+y*aa+z*ca;g[H>>2]=A*_+$*aa+ba*ca;g[Z+112+44>>2]=0.0;g[D>>2]=da;g[K>>2]=ea;g[M>>2]=fa;g[Z+112+60>>2]=0.0;if(d){n=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[n>>2]|0)+56>>2]&7](n,Z+112|0,B);n=c[p+32>>2]|0;u=+g[p+364>>2];h=+g[n+4>>2];v=+g[p+364+16>>2];i=+g[n+8>>2];w=+g[p+364+32>>2];q=+g[n+12>>2];x=+g[p+364+4>>2];y=+g[p+364+20>>2];z=+g[p+364+36>>2];A=+g[p+364+8>>2];$=+g[p+364+24>>2];ba=+g[p+364+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+364+48>>2];f=+g[p+364+52>>2];fa=+g[p+364+56>>2];da=+g[n+52>>2]+(h*e+i*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Z+112>>2]=u*h+v*i+w*q;g[L>>2]=h*x+i*y+q*z;g[N>>2]=h*A+i*$+q*ba;g[Z+112+12>>2]=0.0;g[O>>2]=u*r+v*s+w*t;g[P>>2]=x*r+y*s+z*t;g[E>>2]=A*r+$*s+ba*t;g[Z+112+28>>2]=0.0;g[F>>2]=u*_+v*aa+w*ca;g[G>>2]=x*_+y*aa+z*ca;g[H>>2]=A*_+$*aa+ba*ca;g[Z+112+44>>2]=0.0;g[D>>2]=da;g[K>>2]=ea;g[M>>2]=fa;g[Z+112+60>>2]=0.0;n=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[n>>2]|0)+56>>2]&7](n,Z+112|0,B);}else{n=c[p+32>>2]|0;u=+g[p+364>>2];h=+g[n+4>>2];v=+g[p+364+16>>2];i=+g[n+8>>2];w=+g[p+364+32>>2];q=+g[n+12>>2];x=+g[p+364+4>>2];y=+g[p+364+20>>2];z=+g[p+364+36>>2];A=+g[p+364+8>>2];$=+g[p+364+24>>2];ba=+g[p+364+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+364+48>>2];f=+g[p+364+52>>2];fa=+g[p+364+56>>2];da=+g[n+52>>2]+(h*e+i*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Z+112>>2]=u*h+v*i+w*q;g[L>>2]=h*x+i*y+q*z;g[N>>2]=h*A+i*$+q*ba;g[Z+112+12>>2]=0.0;g[O>>2]=u*r+v*s+w*t;g[P>>2]=x*r+y*s+z*t;g[E>>2]=A*r+$*s+ba*t;g[Z+112+28>>2]=0.0;g[F>>2]=u*_+v*aa+w*ca;g[G>>2]=x*_+y*aa+z*ca;g[H>>2]=A*_+$*aa+ba*ca;g[Z+112+44>>2]=0.0;g[D>>2]=da;g[K>>2]=ea;g[M>>2]=fa;g[Z+112+60>>2]=0.0;}if(o){mk(Z+96|0,p,6.0868353843688965,B);ba=+g[Z+96>>2];ca=+g[Z+96+4>>2];da=+g[Z+96+8>>2];ea=ba*+g[O>>2]+ca*+g[P>>2]+da*+g[E>>2]+ +g[K>>2];fa=ba*+g[F>>2]+ca*+g[G>>2]+da*+g[H>>2]+ +g[M>>2];g[Z+96>>2]=ba*+g[Z+112>>2]+ca*+g[L>>2]+da*+g[N>>2]+ +g[D>>2];g[Z+96+4>>2]=ea;g[Z+96+8>>2]=fa;g[Z+96+12>>2]=0.0;d=0;do{mk(Z+80|0,p,+(d|0)*6.283185005187988*.03125,B);ba=+g[Z+80>>2];ca=+g[Z+80+4>>2];da=+g[Z+80+8>>2];ea=ba*+g[O>>2]+ca*+g[P>>2]+da*+g[E>>2]+ +g[K>>2];fa=ba*+g[F>>2]+ca*+g[G>>2]+da*+g[H>>2]+ +g[M>>2];g[Z+80>>2]=ba*+g[Z+112>>2]+ca*+g[L>>2]+da*+g[N>>2]+ +g[D>>2];g[Z+80+4>>2]=ea;g[Z+80+8>>2]=fa;g[Z+80+12>>2]=0.0;o=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;n=c[(c[o>>2]|0)+8>>2]|0;c[Z+64>>2]=0;c[Z+64+4>>2]=0;c[Z+64+8>>2]=0;c[Z+64+12>>2]=0;Zb[n&127](o,Z+96|0,Z+80|0,Z+64|0);if(!(d&3)){o=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;n=c[(c[o>>2]|0)+8>>2]|0;c[Z+64>>2]=0;c[Z+64+4>>2]=0;c[Z+64+8>>2]=0;c[Z+64+12>>2]=0;Zb[n&127](o,R,Z+80|0,Z+64|0);}c[Z+96>>2]=c[Z+80>>2];c[Z+96+4>>2]=c[Z+80+4>>2];c[Z+96+8>>2]=c[Z+80+8>>2];c[Z+96+12>>2]=c[Z+80+12>>2];d=d+1|0;}while((d|0)!=32);z=+g[p+452>>2];A=+g[p+512>>2];d=c[p+32>>2]|0;if(+g[d+344>>2]>0.0){_=+g[p+364>>2];aa=+g[d+4>>2];$=+g[p+364+16>>2];ba=+g[d+8>>2];x=+g[p+364+32>>2];y=+g[d+12>>2];ha=+g[p+364+4>>2];ga=+g[p+364+20>>2];w=+g[p+364+36>>2];ja=+g[p+364+8>>2];ia=+g[p+364+24>>2];v=+g[p+364+40>>2];la=+g[d+20>>2];ka=+g[d+24>>2];u=+g[d+28>>2];ca=+g[d+36>>2];ea=+g[d+40>>2];fa=+g[d+44>>2];da=+g[p+364+48>>2];e=+g[p+364+52>>2];f=+g[p+364+56>>2];h=la*da+ka*e+u*f;i=ja*ca+ia*ea+v*fa;q=ha*ca+ga*ea+w*fa;r=_*ca+$*ea+x*fa;s=ja*la+ia*ka+v*u;t=ha*la+ga*ka+w*u;u=_*la+$*ka+x*u;v=aa*ja+ba*ia+y*v;w=aa*ha+ba*ga+y*w;x=_*aa+$*ba+x*y;y=aa*da+ba*e+y*f;d=d+4|0;e=ca*da+ea*e;f=fa*f;}else{d=c[p+28>>2]|0;ea=+g[p+300>>2];ga=+g[d+4>>2];fa=+g[p+300+16>>2];ha=+g[d+8>>2];x=+g[p+300+32>>2];y=+g[d+12>>2];ca=+g[p+300+4>>2];da=+g[p+300+20>>2];w=+g[p+300+36>>2];aa=+g[p+300+8>>2];ba=+g[p+300+24>>2];v=+g[p+300+40>>2];_=+g[d+20>>2];$=+g[d+24>>2];u=+g[d+28>>2];ia=+g[d+36>>2];ka=+g[d+40>>2];la=+g[d+44>>2];ja=+g[p+300+48>>2];e=+g[p+300+52>>2];f=+g[p+300+56>>2];h=_*ja+$*e+u*f;i=aa*ia+ba*ka+v*la;q=ca*ia+da*ka+w*la;r=ea*ia+fa*ka+x*la;s=aa*_+ba*$+v*u;t=ca*_+da*$+w*u;u=ea*_+fa*$+x*u;v=ga*aa+ha*ba+y*v;w=ga*ca+ha*da+y*w;x=ea*ga+fa*ha+x*y;y=ga*ja+ha*e+y*f;d=d+4|0;e=ia*ja+ka*e;f=la*f;}ja=y+ +g[d+48>>2];ka=h+ +g[d+52>>2];la=f+e+ +g[d+56>>2];g[Z+112>>2]=x;g[L>>2]=w;g[N>>2]=v;g[Z+112+12>>2]=0.0;g[O>>2]=u;g[P>>2]=t;g[E>>2]=s;g[Z+112+28>>2]=0.0;g[F>>2]=r;g[G>>2]=q;g[H>>2]=i;g[Z+112+44>>2]=0.0;g[D>>2]=ja;g[K>>2]=ka;g[M>>2]=la;g[Z+112+60>>2]=0.0;c[Z+80>>2]=c[R>>2];c[Z+80+4>>2]=c[R+4>>2];c[Z+80+8>>2]=c[R+8>>2];c[Z+80+12>>2]=c[R+12>>2];g[Z+64>>2]=x;g[Z+64+4>>2]=u;g[Z+64+8>>2]=r;g[Z+64+12>>2]=0.0;g[Z+48>>2]=w;g[Z+48+4>>2]=t;g[Z+48+8>>2]=q;g[Z+48+12>>2]=0.0;p=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=c[(c[p>>2]|0)+60>>2]|0;c[Z+32>>2]=0;c[Z+32+4>>2]=0;c[Z+32+8>>2]=0;c[Z+32+12>>2]=0;wb[o&0](p,Z+80|0,Z+64|0,Z+48|0,B,B,-A-z,z-A,Z+32|0,1,10.0);}d=C;continue b}case 6:case 9:{c[Z+112>>2]=c[p+1064>>2];c[Z+112+4>>2]=c[p+1064+4>>2];c[Z+112+8>>2]=c[p+1064+8>>2];c[Z+112+12>>2]=c[p+1064+12>>2];k=p+1064+16|0;c[S>>2]=c[k>>2];c[S+4>>2]=c[k+4>>2];c[S+8>>2]=c[k+8>>2];c[S+12>>2]=c[k+12>>2];m=p+1064+32|0;c[T>>2]=c[m>>2];c[T+4>>2]=c[m+4>>2];c[T+8>>2]=c[m+8>>2];c[T+12>>2]=c[m+12>>2];n=p+1064+48|0;c[U>>2]=c[n>>2];c[U+4>>2]=c[n+4>>2];c[U+8>>2]=c[n+8>>2];c[U+12>>2]=c[n+12>>2];if(d){d=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[d>>2]|0)+56>>2]&7](d,Z+112|0,B);c[Z+112>>2]=c[p+1128>>2];c[Z+112+4>>2]=c[p+1128+4>>2];c[Z+112+8>>2]=c[p+1128+8>>2];c[Z+112+12>>2]=c[p+1128+12>>2];c[S>>2]=c[p+1128+16>>2];c[S+4>>2]=c[p+1128+16+4>>2];c[S+8>>2]=c[p+1128+16+8>>2];c[S+12>>2]=c[p+1128+16+12>>2];c[T>>2]=c[p+1128+32>>2];c[T+4>>2]=c[p+1128+32+4>>2];c[T+8>>2]=c[p+1128+32+8>>2];c[T+12>>2]=c[p+1128+32+12>>2];c[U>>2]=c[p+1128+48>>2];c[U+4>>2]=c[p+1128+48+4>>2];c[U+8>>2]=c[p+1128+48+8>>2];c[U+12>>2]=c[p+1128+48+12>>2];d=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[d>>2]|0)+56>>2]&7](d,Z+112|0,B);}else{c[Z+112>>2]=c[p+1128>>2];c[Z+112+4>>2]=c[p+1128+4>>2];c[Z+112+8>>2]=c[p+1128+8>>2];c[Z+112+12>>2]=c[p+1128+12>>2];c[S>>2]=c[p+1128+16>>2];c[S+4>>2]=c[p+1128+16+4>>2];c[S+8>>2]=c[p+1128+16+8>>2];c[S+12>>2]=c[p+1128+16+12>>2];c[T>>2]=c[p+1128+32>>2];c[T+4>>2]=c[p+1128+32+4>>2];c[T+8>>2]=c[p+1128+32+8>>2];c[T+12>>2]=c[p+1128+32+12>>2];c[U>>2]=c[p+1128+48>>2];c[U+4>>2]=c[p+1128+48+4>>2];c[U+8>>2]=c[p+1128+48+8>>2];c[U+12>>2]=c[p+1128+48+12>>2];}if(o){c[Z+112>>2]=c[p+1064>>2];c[Z+112+4>>2]=c[p+1064+4>>2];c[Z+112+8>>2]=c[p+1064+8>>2];c[Z+112+12>>2]=c[p+1064+12>>2];c[S>>2]=c[k>>2];c[S+4>>2]=c[k+4>>2];c[S+8>>2]=c[k+8>>2];c[S+12>>2]=c[k+12>>2];c[T>>2]=c[m>>2];c[T+4>>2]=c[m+4>>2];c[T+8>>2]=c[m+8>>2];c[T+12>>2]=c[m+12>>2];c[U>>2]=c[n>>2];c[U+4>>2]=c[n+4>>2];c[U+8>>2]=c[n+8>>2];c[U+12>>2]=c[n+12>>2];d=p+1128+48|0;c[Z+96>>2]=c[Z+112+8>>2];c[Z+96+4>>2]=c[Z+112+24>>2];c[Z+96+8>>2]=c[Z+112+40>>2];g[Z+96+12>>2]=0.0;c[Z+80>>2]=c[Z+112>>2];c[Z+80+4>>2]=c[Z+112+16>>2];c[Z+80+8>>2]=c[Z+112+32>>2];g[Z+80+12>>2]=0.0;ha=+g[p+932>>2];e=+g[p+932+4>>2];ka=+g[p+996>>2];ja=+g[p+996+4>>2];na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ma=c[(c[na>>2]|0)+64>>2]|0;c[Z+64>>2]=0;c[Z+64+4>>2]=0;c[Z+64+8>>2]=0;c[Z+64+12>>2]=0;Qb[ma&0](na,d,Z+96|0,Z+80|0,B*.8999999761581421,ha,e,ka,ja,Z+64|0,10.0,1);na=c[Z+112+4>>2]|0;ma=c[Z+112+20>>2]|0;o=c[Z+112+36>>2]|0;c[Z+80>>2]=na;c[Z+80+4>>2]=ma;c[Z+80+8>>2]=o;g[Z+80+12>>2]=0.0;ja=+g[p+1196>>2];ka=+g[p+1200>>2];e=+I(+ja);ja=+J(+ja);ha=+I(+ka);ka=+J(+ka);ia=(c[j>>2]=na,+g[j>>2]);la=(c[j>>2]=ma,+g[j>>2]);f=(c[j>>2]=o,+g[j>>2]);g[Z+64>>2]=e*ha*ia+e*ka*la-ja*f;g[Z+64+4>>2]=ha*la-ka*ia;g[Z+64+8>>2]=ja*ha*ia+ja*ka*la+e*f;c[Z+112>>2]=c[p+1128>>2];c[Z+112+4>>2]=c[p+1128+4>>2];c[Z+112+8>>2]=c[p+1128+8>>2];c[Z+112+12>>2]=c[p+1128+12>>2];c[S>>2]=c[p+1128+16>>2];c[S+4>>2]=c[p+1128+16+4>>2];c[S+8>>2]=c[p+1128+16+8>>2];c[S+12>>2]=c[p+1128+16+12>>2];c[T>>2]=c[p+1128+32>>2];c[T+4>>2]=c[p+1128+32+4>>2];c[T+8>>2]=c[p+1128+32+8>>2];c[T+12>>2]=c[p+1128+32+12>>2];c[U>>2]=c[d>>2];c[U+4>>2]=c[d+4>>2];c[U+8>>2]=c[d+8>>2];c[U+12>>2]=c[d+12>>2];f=-+g[Z+112+16>>2];e=-+g[Z+112+32>>2];g[Z+48>>2]=-+g[Z+112>>2];g[Z+48+4>>2]=f;g[Z+48+8>>2]=e;g[Z+48+12>>2]=0.0;e=+g[p+868>>2];f=+g[p+868+4>>2];if(!(e>f)){if(e<f){na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ma=c[(c[na>>2]|0)+60>>2]|0;c[Z+32>>2]=0;c[Z+32+4>>2]=0;c[Z+32+8>>2]=0;c[Z+32+12>>2]=0;wb[ma&0](na,d,Z+48|0,Z+64|0,B,B,e,f,Z+32|0,1,10.0);}}else{na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ma=c[(c[na>>2]|0)+60>>2]|0;c[Z+32>>2]=0;c[Z+32+4>>2]=0;c[Z+32+8>>2]=0;c[Z+32+12>>2]=0;wb[ma&0](na,d,Z+48|0,Z+64|0,B,B,-3.1415927410125732,3.1415927410125732,Z+32|0,0,10.0);}c[Z+112>>2]=c[p+1064>>2];c[Z+112+4>>2]=c[p+1064+4>>2];c[Z+112+8>>2]=c[p+1064+8>>2];c[Z+112+12>>2]=c[p+1064+12>>2];c[S>>2]=c[k>>2];c[S+4>>2]=c[k+4>>2];c[S+8>>2]=c[k+8>>2];c[S+12>>2]=c[k+12>>2];c[T>>2]=c[m>>2];c[T+4>>2]=c[m+4>>2];c[T+8>>2]=c[m+8>>2];c[T+12>>2]=c[m+12>>2];c[U>>2]=c[n>>2];c[U+4>>2]=c[n+4>>2];c[U+8>>2]=c[n+8>>2];c[U+12>>2]=c[n+12>>2];c[Z+32>>2]=c[p+680>>2];c[Z+32+4>>2]=c[p+680+4>>2];c[Z+32+8>>2]=c[p+680+8>>2];c[Z+32+12>>2]=c[p+680+12>>2];c[Z+16>>2]=c[p+680+16>>2];c[Z+16+4>>2]=c[p+680+16+4>>2];c[Z+16+8>>2]=c[p+680+16+8>>2];c[Z+16+12>>2]=c[p+680+16+12>>2];na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ma=c[(c[na>>2]|0)+72>>2]|0;c[Z>>2]=0;c[Z+4>>2]=0;c[Z+8>>2]=0;c[Z+12>>2]=0;jb[ma&31](na,Z+32|0,Z+16|0,Z+112|0,Z);}d=C;continue b}case 7:{c[Z+112>>2]=c[p+824>>2];c[Z+112+4>>2]=c[p+824+4>>2];c[Z+112+8>>2]=c[p+824+8>>2];c[Z+112+12>>2]=c[p+824+12>>2];c[W>>2]=c[p+824+16>>2];c[W+4>>2]=c[p+824+16+4>>2];c[W+8>>2]=c[p+824+16+8>>2];c[W+12>>2]=c[p+824+16+12>>2];c[X>>2]=c[p+824+32>>2];c[X+4>>2]=c[p+824+32+4>>2];c[X+8>>2]=c[p+824+32+8>>2];c[X+12>>2]=c[p+824+32+12>>2];c[Y>>2]=c[p+824+48>>2];c[Y+4>>2]=c[p+824+48+4>>2];c[Y+8>>2]=c[p+824+48+8>>2];c[Y+12>>2]=c[p+824+48+12>>2];if(d){na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[na>>2]|0)+56>>2]&7](na,Z+112|0,B);c[Z+112>>2]=c[p+888>>2];c[Z+112+4>>2]=c[p+888+4>>2];c[Z+112+8>>2]=c[p+888+8>>2];c[Z+112+12>>2]=c[p+888+12>>2];c[W>>2]=c[p+888+16>>2];c[W+4>>2]=c[p+888+16+4>>2];c[W+8>>2]=c[p+888+16+8>>2];c[W+12>>2]=c[p+888+16+12>>2];c[X>>2]=c[p+888+32>>2];c[X+4>>2]=c[p+888+32+4>>2];c[X+8>>2]=c[p+888+32+8>>2];c[X+12>>2]=c[p+888+32+12>>2];c[Y>>2]=c[p+888+48>>2];c[Y+4>>2]=c[p+888+48+4>>2];c[Y+8>>2]=c[p+888+48+8>>2];c[Y+12>>2]=c[p+888+48+12>>2];na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Xb[c[(c[na>>2]|0)+56>>2]&7](na,Z+112|0,B);}else{c[Z+112>>2]=c[p+888>>2];c[Z+112+4>>2]=c[p+888+4>>2];c[Z+112+8>>2]=c[p+888+8>>2];c[Z+112+12>>2]=c[p+888+12>>2];c[W>>2]=c[p+888+16>>2];c[W+4>>2]=c[p+888+16+4>>2];c[W+8>>2]=c[p+888+16+8>>2];c[W+12>>2]=c[p+888+16+12>>2];c[X>>2]=c[p+888+32>>2];c[X+4>>2]=c[p+888+32+4>>2];c[X+8>>2]=c[p+888+32+8>>2];c[X+12>>2]=c[p+888+32+12>>2];c[Y>>2]=c[p+888+48>>2];c[Y+4>>2]=c[p+888+48+4>>2];c[Y+8>>2]=c[p+888+48+8>>2];c[Y+12>>2]=c[p+888+48+12>>2];}if(o){d=a[p+180>>0]|0?p+824|0:p+888|0;k=c[d>>2]|0;o=c[d+4>>2]|0;m=c[d+16>>2]|0;ma=c[d+20>>2]|0;n=c[d+32>>2]|0;na=c[d+36>>2]|0;$=+g[d+48>>2];da=+g[d+52>>2];ha=+g[d+56>>2];ka=+g[p+184>>2];ca=(c[j>>2]=k,+g[j>>2]);ba=(c[j>>2]=o,+g[j>>2])*0.0;aa=+g[d+8>>2]*0.0;ga=(c[j>>2]=m,+g[j>>2]);fa=(c[j>>2]=ma,+g[j>>2])*0.0;ea=+g[d+24>>2]*0.0;la=(c[j>>2]=n,+g[j>>2]);ja=(c[j>>2]=na,+g[j>>2])*0.0;ia=+g[d+40>>2]*0.0;g[Z+96>>2]=$+(aa+(ba+ca*ka));g[Z+96+4>>2]=da+(ea+(fa+ga*ka));g[Z+96+8>>2]=ha+(ia+(ja+la*ka));g[Z+96+12>>2]=0.0;ka=+g[p+188>>2];g[Z+80>>2]=$+(aa+(ba+ca*ka));g[Z+80+4>>2]=da+(ea+(fa+ga*ka));g[Z+80+8>>2]=ha+(ia+(ja+la*ka));g[Z+80+12>>2]=0.0;d=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;oa=c[(c[d>>2]|0)+8>>2]|0;c[Z+64>>2]=0;c[Z+64+4>>2]=0;c[Z+64+8>>2]=0;c[Z+64+12>>2]=0;Zb[oa&127](d,Z+96|0,Z+80|0,Z+64|0);c[Z+64>>2]=k;c[Z+64+4>>2]=m;c[Z+64+8>>2]=n;g[Z+64+12>>2]=0.0;c[Z+48>>2]=o;c[Z+48+4>>2]=ma;c[Z+48+8>>2]=na;g[Z+48+12>>2]=0.0;ka=+g[p+192>>2];la=+g[p+196>>2];na=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ma=c[(c[na>>2]|0)+60>>2]|0;c[Z+32>>2]=0;c[Z+32+4>>2]=0;c[Z+32+8>>2]=0;c[Z+32+12>>2]=0;wb[ma&0](na,p+888+48|0,Z+64|0,Z+48|0,B,B,ka,la,Z+32|0,1,10.0);}d=C;continue b}default:{d=C;continue b}}}}while(0);if((((pb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(oa=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(pb[c[(c[oa>>2]|0)+48>>2]&127](oa)|0)&16387|0):0)?pb[c[(c[b>>2]|0)+20>>2]&127](b)|0:0)?(oa=pb[c[(c[b>>2]|0)+20>>2]&127](b)|0,pb[c[(c[oa>>2]|0)+48>>2]&127](oa)|0):0)?(c[b+280>>2]|0)>0:0){d=0;do{oa=c[(c[b+288>>2]|0)+(d<<2)>>2]|0;nb[c[(c[oa>>2]|0)+12>>2]&127](oa,c[b+72>>2]|0);d=d+1|0;}while((d|0)<(c[b+280>>2]|0))}d=c[2388]|0;oa=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=oa;if(oa|0){l=Z;return}do if(c[d+4>>2]|0){Za(Z+112|0,0)|0;oa=c[6435]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[Z+112+4>>2]|0)-(c[oa+4>>2]|0)+(((c[Z+112>>2]|0)-(c[oa>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2388]|0;break}else{l=Z;return}}while(0);c[2388]=c[d+20>>2];l=Z;return}function fc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=l;l=l+80|0;$e(b,e,f)|0;a[A+16>>0]=1;c[A+12>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;a[A+36>>0]=1;c[A+32>>2]=0;c[A+24>>2]=0;c[A+28>>2]=0;a[A+56>>0]=1;c[A+52>>2]=0;c[A+44>>2]=0;c[A+48>>2]=0;a[A+76>>0]=1;c[A+72>>2]=0;c[A+64>>2]=0;c[A+68>>2]=0;y=c[b+872>>2]|0;c[e+292>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,b+868|0)|0;c[e+260>>2]=y;if(y|0){i=c[e+292>>2]|0;m=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,i)|0;if((i|0)>0){g=c[m+8>>2]|0;h=0;while(1){j=c[(c[b+880>>2]|0)+(h<<2)>>2]|0;if(!j)k=0;else k=Kb[c[(c[f>>2]|0)+28>>2]&31](f,j)|0;c[g>>2]=k;if(!(Kb[c[(c[f>>2]|0)+24>>2]&31](f,j)|0)){y=zb[c[(c[f>>2]|0)+16>>2]&63](f,16,1)|0;t=c[y+8>>2]|0;c[t+12>>2]=c[j+16>>2];c[t+4>>2]=c[j+8>>2];c[t>>2]=c[j+4>>2];c[t+8>>2]=c[j+12>>2];jb[c[(c[f>>2]|0)+20>>2]&31](f,y,10794,1414349395,j);}h=h+1|0;if((h|0)>=(i|0)){g=f;break}else g=g+4|0;}}else g=f;jb[c[(c[g>>2]|0)+20>>2]&31](f,m,10794,1497453121,b+868|0);}}else c[e+260>>2]=0;y=c[b+712>>2]|0;c[e+296>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,b+708|0)|0;c[e+264>>2]=y;if(y|0){s=c[e+296>>2]|0;t=zb[c[(c[f>>2]|0)+16>>2]&63](f,100,s)|0;if((s|0)>0){q=0;r=c[t+8>>2]|0;while(1){h=c[b+720>>2]|0;c[r+52>>2]=c[h+(q*104|0)+56>>2];c[r+56>>2]=c[h+(q*104|0)+60>>2];c[r+60>>2]=c[h+(q*104|0)+64>>2];c[r+64>>2]=c[h+(q*104|0)+68>>2];c[r+88>>2]=c[h+(q*104|0)+92>>2];c[r+92>>2]=(a[h+(q*104|0)+100>>0]<<7&255)<<24>>24>>7<<24>>24;c[r+84>>2]=c[h+(q*104|0)+88>>2];g=c[h+(q*104|0)+4>>2]|0;if(!g){i=0;g=h;}else{i=Kb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;g=c[b+720>>2]|0;}c[r>>2]=i;c[r+68>>2]=c[g+(q*104|0)+72>>2];c[r+72>>2]=c[g+(q*104|0)+76>>2];c[r+76>>2]=c[g+(q*104|0)+80>>2];c[r+80>>2]=c[g+(q*104|0)+84>>2];c[r+4>>2]=c[g+(q*104|0)+8>>2];c[r+8>>2]=c[g+(q*104|0)+12>>2];c[r+12>>2]=c[g+(q*104|0)+16>>2];c[r+16>>2]=c[g+(q*104|0)+20>>2];c[r+20>>2]=c[g+(q*104|0)+24>>2];c[r+24>>2]=c[g+(q*104|0)+28>>2];c[r+28>>2]=c[g+(q*104|0)+32>>2];c[r+32>>2]=c[g+(q*104|0)+36>>2];c[r+36>>2]=c[g+(q*104|0)+40>>2];c[r+40>>2]=c[g+(q*104|0)+44>>2];c[r+44>>2]=c[g+(q*104|0)+48>>2];c[r+48>>2]=c[g+(q*104|0)+52>>2];m=(c[b+720>>2]|0)+(q*104|0)|0;p=(m+~(m<<15)>>10^m+~(m<<15))*9|0;p=(p>>6^p)+~((p>>6^p)<<11)>>16^(p>>6^p)+~((p>>6^p)<<11);n=c[A+48>>2]|0;a:do if((p&n+-1)>>>0<(c[A+4>>2]|0)>>>0?(u=c[(c[A+12>>2]|0)+((p&n+-1)<<2)>>2]|0,(u|0)!=-1):0){h=c[A+72>>2]|0;i=c[A+32>>2]|0;g=u;while(1){if((m|0)==(c[h+(g<<3)>>2]|0))break;g=c[i+(g<<2)>>2]|0;if((g|0)==-1){z=27;break a}}h=q;i=c[A+52>>2]|0;}else z=27;while(0);if((z|0)==27){z=0;h=c[A+44>>2]|0;if((h|0)==(n|0)){g=n|0?n<<1:1;if((n|0)<(g|0)){if((g|0)!=0?(c[6436]=(c[6436]|0)+1,v=ic((g<<2|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;k=v+4+15&-16;}else k=0;j=c[A+52>>2]|0;if((n|0)<=0)if(!j)i=n;else z=35;else{i=0;do{c[k+(i<<2)>>2]=c[j+(i<<2)>>2];i=i+1|0;}while((i|0)!=(n|0));z=35;}if((z|0)==35){z=0;if(a[A+56>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[j+-4>>2]|0);}c[A+52>>2]=0;i=c[A+44>>2]|0;}a[A+56>>0]=1;c[A+52>>2]=k;c[A+48>>2]=g;}else{g=n;i=n;}}else{g=n;i=h;}c[(c[A+52>>2]|0)+(i<<2)>>2]=q;c[A+44>>2]=i+1;i=c[A+64>>2]|0;if((i|0)==(c[A+68>>2]|0)?(w=i|0?i<<1:1,(i|0)<(w|0)):0){if((w|0)!=0?(c[6436]=(c[6436]|0)+1,x=ic((w<<3|3)+16|0)|0,(x|0)!=0):0){c[(x+4+15&-16)+-4>>2]=x;j=x+4+15&-16;}else j=0;if((i|0)>0){g=0;do{k=(c[A+72>>2]|0)+(g<<3)|0;o=c[k+4>>2]|0;y=j+(g<<3)|0;c[y>>2]=c[k>>2];c[y+4>>2]=o;g=g+1|0;}while((g|0)!=(i|0))}g=c[A+72>>2]|0;if(g|0){if(a[A+76>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[g+-4>>2]|0);}c[A+72>>2]=0;}a[A+76>>0]=1;c[A+72>>2]=j;c[A+68>>2]=w;i=c[A+64>>2]|0;g=c[A+48>>2]|0;}c[(c[A+72>>2]|0)+(i<<3)>>2]=m;c[A+64>>2]=i+1;if((n|0)<(g|0)){o=c[A+4>>2]|0;do if((o|0)<(g|0)){if((c[A+8>>2]|0)<(g|0)){do if(!g)i=0;else{c[6436]=(c[6436]|0)+1;i=ic((g<<2|3)+16|0)|0;if(!i){i=0;break}c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}while(0);k=c[A+12>>2]|0;if((o|0)>0){j=0;do{c[i+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(o|0));if(a[A+16>>0]|0)z=62;}else if(!((k|0)==0|(a[A+16>>0]|0)==0))z=62;if((z|0)==62){z=0;c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}a[A+16>>0]=1;c[A+12>>2]=i;c[A+8>>2]=g;}else i=c[A+12>>2]|0;n=g<<2;Ik(i+(o<<2)|0,0,n-(o<<2)|0)|0;c[A+4>>2]=g;m=c[A+24>>2]|0;if((m|0)<(g|0)){if((c[A+28>>2]|0)<(g|0)){do if(!g)i=0;else{c[6436]=(c[6436]|0)+1;i=ic((n|3)+16|0)|0;if(!i){i=0;break}c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16;}while(0);k=c[A+32>>2]|0;if((m|0)>0){j=0;do{c[i+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0;}while((j|0)!=(m|0));if(a[A+36>>0]|0)z=74;}else if(!((k|0)==0|(a[A+36>>0]|0)==0))z=74;if((z|0)==74){z=0;c[6437]=(c[6437]|0)+1;Tc(c[k+-4>>2]|0);}a[A+36>>0]=1;c[A+32>>2]=i;c[A+28>>2]=g;}else i=c[A+32>>2]|0;Ik(i+(m<<2)|0,0,n-(m<<2)|0)|0;}c[A+24>>2]=g;if((g|0)>0){Ik(c[A+12>>2]|0,-1,n|0)|0;Ik(c[A+32>>2]|0,-1,n|0)|0;}if((o|0)<=0){g=c[A+48>>2]|0;break}j=c[A+72>>2]|0;k=c[A+12>>2]|0;m=c[A+32>>2]|0;g=c[A+48>>2]|0;i=0;do{y=c[j+(i<<3)>>2]|0;y=(y+~(y<<15)>>10^y+~(y<<15))*9|0;y=k+((((y>>6^y)+~((y>>6^y)<<11)>>16^(y>>6^y)+~((y>>6^y)<<11))&g+-1)<<2)|0;c[m+(i<<2)>>2]=c[y>>2];c[y>>2]=i;i=i+1|0;}while((i|0)!=(o|0))}while(0);g=p&g+-1;}else g=p&n+-1;i=c[A+12>>2]|0;c[(c[A+32>>2]|0)+(h<<2)>>2]=c[i+(g<<2)>>2];}c[i+(g<<2)>>2]=h;q=q+1|0;if((q|0)>=(s|0))break;else r=r+100|0;}}jb[c[(c[f>>2]|0)+20>>2]&31](f,t,10815,1145979475,b+708|0);}}else c[e+264>>2]=0;y=c[b+732>>2]|0;c[e+300>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+740>>2]|0)|0;c[e+268>>2]=y;if(y|0){m=c[e+300>>2]|0;n=zb[c[(c[f>>2]|0)+16>>2]&63](f,20,m)|0;if((m|0)>0){i=c[b+740>>2]|0;j=c[n+8>>2]|0;k=0;g=i;while(1){c[j+16>>2]=(a[i+(k*52|0)+20>>0]<<7&255)<<24>>24>>7<<24>>24;h=c[i+(k*52|0)+4>>2]|0;if(!h)h=0;else{h=Kb[c[(c[f>>2]|0)+28>>2]&31](f,h)|0;i=c[b+740>>2]|0;g=i;}c[j>>2]=h;h=c[i+(k*52|0)+8>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+4>>2]=h;h=c[i+(k*52|0)+12>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+8>>2]=h;c[j+12>>2]=c[i+(k*52|0)+16>>2];k=k+1|0;if((k|0)>=(m|0))break;else j=j+20|0;}}else g=c[b+740>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,n,10832,1497453121,g);}}else c[e+268>>2]=0;y=c[b+752>>2]|0;c[e+304>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+760>>2]|0)|0;c[e+272>>2]=y;if(y|0){m=c[e+304>>2]|0;n=zb[c[(c[f>>2]|0)+16>>2]&63](f,36,m)|0;if((m|0)>0){i=c[b+760>>2]|0;j=c[n+8>>2]|0;k=0;g=i;while(1){h=c[i+(k*44|0)+4>>2]|0;if(!h)h=0;else{h=Kb[c[(c[f>>2]|0)+28>>2]&31](f,h)|0;i=c[b+760>>2]|0;g=i;}c[j+16>>2]=h;c[j>>2]=c[i+(k*44|0)+20>>2];c[j+4>>2]=c[i+(k*44|0)+24>>2];c[j+8>>2]=c[i+(k*44|0)+28>>2];c[j+12>>2]=c[i+(k*44|0)+32>>2];h=c[i+(k*44|0)+8>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+20>>2]=h;h=c[i+(k*44|0)+12>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+24>>2]=h;h=c[i+(k*44|0)+16>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+28>>2]=h;c[j+32>>2]=c[i+(k*44|0)+36>>2];k=k+1|0;if((k|0)>=(m|0))break;else j=j+36|0;}}else g=c[b+760>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,n,10849,1497453121,g);}}else c[e+272>>2]=0;y=c[b+772>>2]|0;c[e+308>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+780>>2]|0)|0;c[e+276>>2]=y;if(y|0){m=c[e+308>>2]|0;n=zb[c[(c[f>>2]|0)+16>>2]&63](f,100,m)|0;if((m|0)>0){i=c[b+780>>2]|0;j=c[n+8>>2]|0;k=0;g=i;while(1){c[j>>2]=c[i+(k*104|0)+32>>2];c[j+4>>2]=c[i+(k*104|0)+36>>2];c[j+8>>2]=c[i+(k*104|0)+40>>2];c[j+12>>2]=c[i+(k*104|0)+44>>2];h=c[i+8>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+68>>2]=h;c[j+16>>2]=c[i+(k*104|0)+48>>2];c[j+20>>2]=c[i+(k*104|0)+52>>2];c[j+24>>2]=c[i+(k*104|0)+56>>2];c[j+28>>2]=c[i+(k*104|0)+60>>2];h=c[i+116>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+72>>2]=h;c[j+32>>2]=c[i+(k*104|0)+64>>2];c[j+36>>2]=c[i+(k*104|0)+68>>2];c[j+40>>2]=c[i+(k*104|0)+72>>2];c[j+44>>2]=c[i+(k*104|0)+76>>2];h=c[i+224>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+76>>2]=h;c[j+48>>2]=c[i+(k*104|0)+80>>2];c[j+52>>2]=c[i+(k*104|0)+84>>2];c[j+56>>2]=c[i+(k*104|0)+88>>2];c[j+60>>2]=c[i+(k*104|0)+92>>2];h=c[i+332>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[j+80>>2]=h;c[j+88>>2]=c[i+(k*104|0)+96>>2];c[j+92>>2]=c[i+(k*104|0)+100>>2];h=c[i+(k*104|0)+4>>2]|0;if(!h)h=0;else{h=Kb[c[(c[f>>2]|0)+28>>2]&31](f,h)|0;i=c[b+780>>2]|0;g=i;}c[j+64>>2]=h;c[j+84>>2]=c[i+(k*104|0)+24>>2];k=k+1|0;if((k|0)>=(m|0))break;else j=j+100|0;}}else g=c[b+780>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,n,10866,1497453121,g);}}else c[e+276>>2]=0;y=c[b+792>>2]|0;c[e+312>>2]=y;if(y){y=Kb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+800>>2]|0)|0;c[e+280>>2]=y;if(!y)y=f;else{k=c[e+312>>2]|0;m=zb[c[(c[f>>2]|0)+16>>2]&63](f,92,k)|0;if((k|0)>0){i=c[m+8>>2]|0;j=0;while(1){h=c[b+800>>2]|0;c[i>>2]=c[h+(j*96|0)+28>>2];c[i+4>>2]=c[h+(j*96|0)+32>>2];c[i+8>>2]=c[h+(j*96|0)+36>>2];c[i+12>>2]=c[h+(j*96|0)+40>>2];c[i+16>>2]=c[h+(j*96|0)+44>>2];c[i+20>>2]=c[h+(j*96|0)+48>>2];c[i+24>>2]=c[h+(j*96|0)+52>>2];c[i+28>>2]=c[h+(j*96|0)+56>>2];c[i+32>>2]=c[h+(j*96|0)+60>>2];c[i+36>>2]=c[h+(j*96|0)+64>>2];c[i+40>>2]=c[h+(j*96|0)+68>>2];c[i+44>>2]=c[h+(j*96|0)+72>>2];c[i+48>>2]=c[h+(j*96|0)+76>>2];c[i+52>>2]=c[h+(j*96|0)+80>>2];c[i+56>>2]=c[h+(j*96|0)+84>>2];c[i+60>>2]=c[h+(j*96|0)+88>>2];c[i+88>>2]=c[h+(j*96|0)+92>>2];h=c[b+800>>2]|0;c[i+64>>2]=c[h+(j*96|0)+4>>2];c[i+68>>2]=c[h+(j*96|0)+8>>2];c[i+72>>2]=c[h+(j*96|0)+12>>2];c[i+76>>2]=c[h+(j*96|0)+16>>2];g=c[h+(j*96|0)>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[i+84>>2]=g;g=c[h+(j*96|0)+20>>2]|0;if(!g)g=0;else g=Kb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;c[i+80>>2]=g;j=j+1|0;if((j|0)>=(k|0))break;else i=i+92|0;}}jb[c[(c[f>>2]|0)+20>>2]&31](f,m,10884,1497453121,c[b+800>>2]|0);y=f;}}else{c[e+280>>2]=0;y=f;}c[e+352>>2]=c[b+316>>2];c[e+328>>2]=c[b+292>>2];c[e+344>>2]=c[b+308>>2];c[e+324>>2]=c[b+288>>2];c[e+340>>2]=c[b+304>>2];c[e+336>>2]=c[b+300>>2];c[e+412>>2]=c[b+376>>2];c[e+416>>2]=c[b+380>>2];c[e+420>>2]=c[b+384>>2];c[e+408>>2]=c[b+372>>2];n=c[b+364>>2]|0;c[e+332>>2]=c[b+296>>2];c[e+356>>2]=c[b+320>>2];c[e+424>>2]=c[b+388>>2];c[e+348>>2]=c[b+312>>2];c[e+360>>2]=c[b+324>>2];c[e+364>>2]=c[b+328>>2];c[e+368>>2]=c[b+332>>2];c[e+372>>2]=c[b+336>>2];c[e+404>>2]=c[b+368>>2];c[e+400>>2]=n;c[e+376>>2]=c[b+340>>2];c[e+380>>2]=c[b+344>>2];c[e+384>>2]=c[b+348>>2];c[e+388>>2]=c[b+352>>2];c[e+392>>2]=c[b+356>>2];c[e+396>>2]=c[b+360>>2];c[e+256>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,b+472|0)|0;n=zb[c[(c[f>>2]|0)+16>>2]&63](f,192,1)|0;m=c[n+8>>2]|0;c[m+96>>2]=c[b+632>>2];c[m+100>>2]=c[b+636>>2];c[m+104>>2]=c[b+640>>2];c[m+108>>2]=c[b+644>>2];c[m+112>>2]=c[b+648>>2];c[m+116>>2]=c[b+652>>2];c[m+120>>2]=c[b+656>>2];c[m+124>>2]=c[b+660>>2];c[m+128>>2]=c[b+664>>2];c[m+132>>2]=c[b+668>>2];c[m+136>>2]=c[b+672>>2];c[m+140>>2]=c[b+676>>2];c[m+180>>2]=d[b+473>>0];c[m+176>>2]=d[b+472>>0];c[m+144>>2]=c[b+520>>2];c[m+148>>2]=c[b+524>>2];c[m+152>>2]=c[b+528>>2];c[m+156>>2]=c[b+532>>2];x=c[b+484>>2]|0;c[m+168>>2]=x;if(x){x=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[b+492>>2]|0)|0;j=c[m+168>>2]|0;c[m+160>>2]=x;if(j|0){k=zb[c[(c[f>>2]|0)+16>>2]&63](f,16,j)|0;if((j|0)>0){g=c[b+492>>2]|0;h=c[k+8>>2]|0;i=0;while(1){c[h>>2]=c[g+(i<<4)>>2];c[h+4>>2]=c[g+(i<<4)+4>>2];c[h+8>>2]=c[g+(i<<4)+8>>2];c[h+12>>2]=c[g+(i<<4)+12>>2];i=i+1|0;if((i|0)==(j|0))break;else h=h+16|0;}}else g=c[b+492>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,k,19398,1497453121,g);}}else c[m+160>>2]=0;c[m+184>>2]=c[b+476>>2];c[m>>2]=c[b+536>>2];c[m+4>>2]=c[b+540>>2];c[m+8>>2]=c[b+544>>2];c[m+12>>2]=c[b+548>>2];c[m+16>>2]=c[b+552>>2];c[m+20>>2]=c[b+556>>2];c[m+24>>2]=c[b+560>>2];c[m+28>>2]=c[b+564>>2];c[m+32>>2]=c[b+568>>2];c[m+36>>2]=c[b+572>>2];c[m+40>>2]=c[b+576>>2];c[m+44>>2]=c[b+580>>2];c[m+48>>2]=c[b+584>>2];c[m+52>>2]=c[b+588>>2];c[m+56>>2]=c[b+592>>2];c[m+60>>2]=c[b+596>>2];c[m+64>>2]=c[b+600>>2];c[m+68>>2]=c[b+604>>2];c[m+72>>2]=c[b+608>>2];c[m+76>>2]=c[b+612>>2];c[m+80>>2]=c[b+616>>2];c[m+84>>2]=c[b+620>>2];c[m+88>>2]=c[b+624>>2];c[m+92>>2]=c[b+628>>2];x=c[b+504>>2]|0;c[m+172>>2]=x;if(x){x=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[b+512>>2]|0)|0;j=c[m+172>>2]|0;c[m+164>>2]=x;if(!j)z=147;else{k=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,j)|0;if((j|0)>0){g=c[b+512>>2]|0;h=0;i=c[k+8>>2]|0;while(1){c[i>>2]=c[g+(h<<2)>>2];h=h+1|0;if((h|0)==(j|0))break;else i=i+4|0;}}else g=c[b+512>>2]|0;jb[c[(c[f>>2]|0)+20>>2]&31](f,k,10904,1497453121,g);x=f;}}else{c[m+164>>2]=0;z=147;}if((z|0)==147)x=f;jb[c[(c[x>>2]|0)+20>>2]&31](f,n,10910,1497453121,b+472|0);z=c[b+1112>>2]|0;c[e+316>>2]=z;if(z){z=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[c[b+1120>>2]>>2]|0)|0;v=c[e+316>>2]|0;c[e+284>>2]=z;if(v|0){w=zb[c[(c[f>>2]|0)+16>>2]&63](f,348,v)|0;if((v|0)>0){t=0;u=c[w+8>>2]|0;while(1){h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;z=u+320|0;c[z>>2]=c[h+360>>2];c[u+256>>2]=c[h+332>>2];c[u+260>>2]=c[h+336>>2];c[u+264>>2]=c[h+340>>2];c[u+268>>2]=c[h+344>>2];c[u+344>>2]=c[h+380>>2];c[u+340>>2]=d[h+377>>0];c[u+160>>2]=c[h+228>>2];c[u+164>>2]=c[h+232>>2];c[u+168>>2]=c[h+236>>2];c[u+172>>2]=c[h+240>>2];c[u+336>>2]=d[h+376>>0];c[u+208>>2]=c[h+276>>2];c[u+212>>2]=c[h+280>>2];c[u+216>>2]=c[h+284>>2];c[u+220>>2]=c[h+288>>2];c[u+224>>2]=c[h+292>>2];c[u+228>>2]=c[h+296>>2];c[u+232>>2]=c[h+300>>2];c[u+236>>2]=c[h+304>>2];h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;c[u>>2]=c[h+60>>2];c[u+4>>2]=c[h+64>>2];c[u+8>>2]=c[h+68>>2];c[u+12>>2]=c[h+72>>2];c[u+16>>2]=c[h+76>>2];c[u+20>>2]=c[h+80>>2];c[u+24>>2]=c[h+84>>2];c[u+28>>2]=c[h+88>>2];c[u+32>>2]=c[h+92>>2];c[u+36>>2]=c[h+96>>2];c[u+40>>2]=c[h+100>>2];c[u+44>>2]=c[h+104>>2];c[u+48>>2]=c[h+108>>2];c[u+52>>2]=c[h+112>>2];c[u+56>>2]=c[h+116>>2];c[u+60>>2]=c[h+120>>2];c[u+296>>2]=c[h+124>>2];h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;c[u+300>>2]=c[h+128>>2];c[u+112>>2]=c[h+180>>2];c[u+116>>2]=c[h+184>>2];c[u+120>>2]=c[h+188>>2];c[u+124>>2]=c[h+192>>2];c[u+128>>2]=c[h+196>>2];c[u+132>>2]=c[h+200>>2];c[u+136>>2]=c[h+204>>2];c[u+140>>2]=c[h+208>>2];c[u+144>>2]=c[h+212>>2];c[u+148>>2]=c[h+216>>2];c[u+152>>2]=c[h+220>>2];c[u+156>>2]=c[h+224>>2];g=u+316|0;c[g>>2]=c[h+356>>2];c[u+64>>2]=c[h+132>>2];c[u+68>>2]=c[h+136>>2];c[u+72>>2]=c[h+140>>2];c[u+76>>2]=c[h+144>>2];c[u+80>>2]=c[h+148>>2];c[u+84>>2]=c[h+152>>2];c[u+88>>2]=c[h+156>>2];c[u+92>>2]=c[h+160>>2];c[u+96>>2]=c[h+164>>2];c[u+100>>2]=c[h+168>>2];c[u+104>>2]=c[h+172>>2];c[u+108>>2]=c[h+176>>2];h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;c[u+240>>2]=c[h+316>>2];c[u+244>>2]=c[h+320>>2];c[u+248>>2]=c[h+324>>2];c[u+252>>2]=c[h+328>>2];c[u+324>>2]=c[h+364>>2];c[u+328>>2]=c[h+368>>2];c[u+312>>2]=c[h+352>>2];c[g>>2]=c[h+356>>2];c[z>>2]=c[h+360>>2];c[u+332>>2]=c[h+372>>2];z=c[h+44>>2]|0;g=u+284|0;c[g>>2]=z;n=u+292|0;c[n>>2]=c[h+4>>2];o=u+288|0;c[o>>2]=c[h+24>>2];c[u+304>>2]=c[h+308>>2];c[u+176>>2]=c[h+244>>2];c[u+180>>2]=c[h+248>>2];c[u+184>>2]=c[h+252>>2];c[u+188>>2]=c[h+256>>2];c[u+192>>2]=c[h+260>>2];c[u+196>>2]=c[h+264>>2];c[u+200>>2]=c[h+268>>2];c[u+204>>2]=c[h+272>>2];h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;c[u+308>>2]=c[h+312>>2];if(z){z=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[h+52>>2]|0)|0;c[u+272>>2]=z;if(z|0){j=c[g>>2]|0;m=zb[c[(c[f>>2]|0)+16>>2]&63](f,16,j)|0;if((j|0)>0){g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;k=c[g+52>>2]|0;h=0;i=c[m+8>>2]|0;while(1){c[i>>2]=c[k+(h<<4)>>2];c[i+4>>2]=c[k+(h<<4)+4>>2];c[i+8>>2]=c[k+(h<<4)+8>>2];c[i+12>>2]=c[k+(h<<4)+12>>2];h=h+1|0;if((h|0)==(j|0))break;else i=i+16|0;}}else g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;jb[c[(c[x>>2]|0)+20>>2]&31](f,m,19398,1497453121,c[g+52>>2]|0);}}else c[u+272>>2]=0;if(c[n>>2]|0){z=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[(c[(c[b+1120>>2]|0)+(t<<2)>>2]|0)+12>>2]|0)|0;c[u+280>>2]=z;if(z|0){j=c[n>>2]|0;m=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,j)|0;if((j|0)>0){g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;k=c[g+12>>2]|0;h=0;i=c[m+8>>2]|0;while(1){c[i>>2]=c[k+(h<<2)>>2];h=h+1|0;if((h|0)==(j|0))break;else i=i+4|0;}}else g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;jb[c[(c[x>>2]|0)+20>>2]&31](f,m,10904,1497453121,c[g+12>>2]|0);}}else c[u+280>>2]=0;if(c[o>>2]|0){z=Kb[c[(c[y>>2]|0)+28>>2]&31](f,(c[(c[b+1120>>2]|0)+(t<<2)>>2]|0)+20|0)|0;c[u+276>>2]=z;if(z|0){m=c[n>>2]|0;s=zb[c[(c[f>>2]|0)+16>>2]&63](f,4,m)|0;if((m|0)>0){g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;n=c[g+32>>2]|0;o=c[A+12>>2]|0;p=c[A+72>>2]|0;q=c[A+52>>2]|0;r=c[A+32>>2]|0;j=0;k=c[s+8>>2]|0;while(1){i=c[n+(j<<2)>>2]|0;h=(i+~(i<<15)>>10^i+~(i<<15))*9|0;h=c[o+((((h>>6^h)+~((h>>6^h)<<11)>>16^(h>>6^h)+~((h>>6^h)<<11))&(c[A+48>>2]|0)+-1)<<2)>>2]|0;if((i|0)!=(c[p+(h<<3)>>2]|0))do h=c[r+(h<<2)>>2]|0;while((i|0)!=(c[p+(h<<3)>>2]|0));c[k>>2]=c[q+(h<<2)>>2];j=j+1|0;if((j|0)==(m|0))break;else k=k+4|0;}}else g=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;jb[c[(c[x>>2]|0)+20>>2]&31](f,s,10947,1497453121,g+20|0);}}else c[u+276>>2]=0;t=t+1|0;if((t|0)>=(v|0))break;else u=u+348|0;}}jb[c[(c[x>>2]|0)+20>>2]&31](f,w,10927,1497453121,c[c[b+1120>>2]>>2]|0);}}else c[e+284>>2]=0;z=c[b+852>>2]|0;c[e+320>>2]=z;if(!z){c[e+288>>2]=0;Ui(A);l=A;return 10971}z=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[b+860>>2]|0)|0;c[e+288>>2]=z;if(!z){Ui(A);l=A;return 10971}k=c[b+852>>2]|0;m=zb[c[(c[f>>2]|0)+16>>2]&63](f,104,k)|0;if((k|0)>0){i=0;j=c[m+8>>2]|0;while(1){g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;c[j+96>>2]=pb[c[(c[g>>2]|0)+20>>2]&127](g)|0;g=(c[b+860>>2]|0)+(i<<2)|0;h=c[g>>2]|0;c[j+8>>2]=c[h+28>>2];c[j+12>>2]=c[h+32>>2];c[j+16>>2]=c[h+36>>2];c[j+20>>2]=c[h+40>>2];c[j+24>>2]=c[h+44>>2];c[j+28>>2]=c[h+48>>2];c[j+32>>2]=c[h+52>>2];c[j+36>>2]=c[h+56>>2];c[j+40>>2]=c[h+60>>2];c[j+44>>2]=c[h+64>>2];c[j+48>>2]=c[h+68>>2];c[j+52>>2]=d[h+152>>0];h=j+56|0;c[j>>2]=0;n=j+4|0;c[n>>2]=0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;g=c[g>>2]|0;h=c[g+4>>2]|0;if(h){c[j+88>>2]=1;c[j>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;}if(c[g+12>>2]|0){c[j+88>>2]=3;c[j>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,c[(c[(c[b+860>>2]|0)+(i<<2)>>2]|0)+12>>2]|0)|0;}g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;h=c[g+8>>2]|0;if(h){c[j+88>>2]=2;c[j>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;}h=c[g+16>>2]|0;if(h){c[j+92>>2]=1;c[n>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;}h=c[g+24>>2]|0;if(h){c[j+92>>2]=3;c[n>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(i<<2)>>2]|0;}g=c[g+20>>2]|0;if(g|0){c[j+92>>2]=2;c[n>>2]=Kb[c[(c[y>>2]|0)+28>>2]&31](f,g)|0;}i=i+1|0;if((i|0)>=(k|0))break;else j=j+104|0;}}jb[c[(c[x>>2]|0)+20>>2]&31](f,m,10951,1497453121,c[b+860>>2]|0);Ui(A);l=A;return 10971}function gc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;K=l;l=l+144|0;a:do switch(d-b|0){case 0:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;l=K;return}case 2:{f=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;b=c[f+88>>2]|0;d=c[f+200>>2]|0;h=c[f+92>>2]|0;g=c[f+204>>2]|0;if((b|0)==(d|0)&(h|0)==(g|0))if((c[f+96>>2]|0)==(c[f+208>>2]|0))break a;else g=h;g=h-g|0;if(!(g|b-d)){i=(c[f+96>>2]|0)>(c[f+208>>2]|0);J=i?f+112|0:f;c[J>>2]=J;c[J+4>>2]=J;h=J;i=i?f:f+112|0;j=J;k=J;m=J;f=J;}else{c[f>>2]=f+112;c[f+4>>2]=f+112;c[f+112>>2]=f;c[f+116>>2]=f;k=(b-d|0)<0|(b-d|0)==0&(g|0)<0;h=f;i=f+112|0;j=k?f+112|0:f;k=k?f:f+112|0;m=(g|0)<0|(b-d|0)<0&(g|0)==0?f:f+112|0;f=(g|0)<0|(b-d|0)<0&(g|0)==0?f+112|0:f;}c[e>>2]=k;c[e+4>>2]=j;c[e+8>>2]=m;c[e+12>>2]=f;a=Rf(a,h,i)|0;c[a>>2]=a;c[a+4>>2]=a;c[h+8>>2]=a;a=c[a+8>>2]|0;c[a>>2]=a;c[a+4>>2]=a;c[i+8>>2]=a;l=K;return}case 1:{f=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;break}default:{n=((d-b|0)/2|0)+b|0;m=c[a+92>>2]|0;k=c[m+(n+-1<<2)>>2]|0;i=c[k+88>>2]|0;j=c[k+92>>2]|0;k=c[k+96>>2]|0;b:do if((n|0)<(d|0)){f=n;do{g=c[m+(f<<2)>>2]|0;if((c[g+88>>2]|0)!=(i|0))break b;if((c[g+92>>2]|0)!=(j|0))break b;if((c[g+96>>2]|0)!=(k|0))break b;f=f+1|0;}while((f|0)<(d|0))}else f=n;while(0);gc(a,b,n,e);c[K+96>>2]=0;c[K+96+4>>2]=0;c[K+96+8>>2]=0;c[K+96+12>>2]=0;gc(a,f,d,K+96|0);k=c[K+96+4>>2]|0;c:do if(k|0){A=c[e+4>>2]|0;if(!A){c[e>>2]=c[K+96>>2];c[e+4>>2]=c[K+96+4>>2];c[e+8>>2]=c[K+96+8>>2];c[e+12>>2]=c[K+96+12>>2];break}c[a+100>>2]=(c[a+100>>2]|0)+-1;i=c[e+12>>2]|0;j=c[K+96+8>>2]|0;g=c[i+88>>2]|0;do if((g|0)==(c[j+88>>2]|0)?(h=c[i+92>>2]|0,(h|0)==(c[j+92>>2]|0)):0){f=c[j+4>>2]|0;if((f|0)==(j|0)){f=c[j+8>>2]|0;if(!f)f=g;else{h=c[f+12>>2]|0;j=h;f=c[h+88>>2]|0;h=c[h+92>>2]|0;}b=j;n=f+1|0;g=i;o=c[j+96>>2]|0;break}i=c[j>>2]|0;c[f>>2]=i;c[i+4>>2]=f;if((j|0)==(c[K+96>>2]|0)){g=c[i+88>>2]|0;h=c[f+88>>2]|0;do if((g|0)<(h|0))g=i;else{if((g|0)==(h|0)?(c[i+92>>2]|0)<(c[f+92>>2]|0):0){g=i;break}g=f;}while(0);c[K+96>>2]=g;}if((j|0)==(k|0)){g=c[i+88>>2]|0;h=c[f+88>>2]|0;do if((g|0)>(h|0))f=i;else if((g|0)==(h|0)?(c[i+92>>2]|0)>(c[f+92>>2]|0):0){f=i;break}while(0);c[K+96+4>>2]=f;H=36;}else{f=k;H=36;}}else{f=k;H=36;}while(0);if((H|0)==36){y=c[e>>2]|0;z=c[K+96>>2]|0;d=A;h=0;j=0;w=1;x=0;o=f;while(1){m=c[o+88>>2]|0;n=c[d+88>>2]|0;i=S(m-n|0,w)|0;d:do if((i|0)<=0){if((i|0)<0){v=(x|0)!=0;k=d;g=o;b=c[d+92>>2]|0;u=c[o+92>>2]|0;while(1){r=c[(v?g+4|0:g)>>2]|0;s=(r|0)==(g|0);t=g+88|0;while(1){d=k+88|0;p=u-b|0;if(!s?(B=c[r+88>>2]|0,C=S(B-m|0,w)|0,E=c[r+92>>2]|0,F=E-u|0,(F|0)>-1):0){if(!C)break;if((C|0)<0?(S(F,i)|0)<=(S(C,p)|0):0)break}q=c[(v?k+4|0:k)>>2]|0;if((q|0)==(k|0))break d;G=c[q+88>>2]|0;n=S(G-(c[d>>2]|0)|0,w)|0;o=c[q+92>>2]|0;d=o-b|0;m=c[t>>2]|0;b=i;i=S(m-G|0,w)|0;if(!((d|0)>0&(i|0)<0))break d;if(!n){k=q;b=o;continue}if((n|0)>=0)break d;if((S(d,b)|0)>=(S(n,p)|0))break d;else{k=q;b=o;}}g=r;i=S(B-(c[d>>2]|0)|0,w)|0;u=E;m=B;}}g=c[d+92>>2]|0;b=(x|0)!=0;e:do if(b){k=d;while(1){i=c[k>>2]|0;if((i|0)==(d|0)){m=k;break e}if((c[i+88>>2]|0)!=(n|0)){m=k;break e}G=g;g=c[i+92>>2]|0;if((g|0)>(G|0)){m=k;break}else k=i;}}else{k=d;while(1){i=c[k+4>>2]|0;if((i|0)==(d|0)){m=k;break e}if((c[i+88>>2]|0)!=(n|0)){m=k;break e}G=g;g=c[i+92>>2]|0;if((g|0)>(G|0)){m=k;break}else k=i;}}while(0);i=c[o+92>>2]|0;if(b){g=o;while(1){k=c[g+4>>2]|0;if((k|0)==(o|0)){k=m;break d}if((c[k+88>>2]|0)!=(n|0)){k=m;break d}G=i;i=c[k+92>>2]|0;if((i|0)<(G|0)){k=m;break}else g=k;}}else{g=o;while(1){k=c[g>>2]|0;if((k|0)==(o|0)){k=m;break d}if((c[k+88>>2]|0)!=(n|0)){k=m;break d}G=i;i=c[k+92>>2]|0;if((i|0)<(G|0)){k=m;break}else g=k;}}}else{u=(x|0)!=0;k=d;g=o;t=n;s=c[o+92>>2]|0;while(1){r=g+88|0;b=c[k+92>>2]|0;d=s-b|0;m=c[(u?k:k+4|0)>>2]|0;f:do if((m|0)!=(k|0))if(u){p=i;q=m;o=t;n=b;while(1){m=o;o=c[q+88>>2]|0;m=S(o-m|0,w)|0;b=n;n=c[q+92>>2]|0;b=n-b|0;if((b|0)>=1)break f;if(m|0){if((m|0)>=0)break f;if((S(b,p)|0)>(S(m,d)|0))break f}k=S((c[r>>2]|0)-o|0,w)|0;d=s-n|0;m=c[q>>2]|0;if((m|0)==(q|0)){p=k;k=q;break}else{G=q;p=k;q=m;k=G;}}}else{p=i;q=m;o=t;n=b;while(1){m=o;o=c[q+88>>2]|0;m=S(o-m|0,w)|0;b=n;n=c[q+92>>2]|0;b=n-b|0;if((b|0)>=1)break f;if(m|0){if((m|0)>=0)break f;if((S(b,p)|0)>(S(m,d)|0))break f}k=S((c[r>>2]|0)-o|0,w)|0;d=s-n|0;m=c[q+4>>2]|0;if((m|0)==(q|0)){p=k;k=q;break}else{G=q;p=k;q=m;k=G;}}}else p=i;while(0);n=c[(u?g:g+4|0)>>2]|0;if((n|0)==(g|0))break d;i=c[n+88>>2]|0;m=S(i-(c[r>>2]|0)|0,w)|0;b=s;s=c[n+92>>2]|0;b=s-b|0;t=c[k+88>>2]|0;i=S(i-t|0,w)|0;if(!((b|0)<0&(i|0)>0))break d;if(!m){g=n;continue}if((m|0)>=0)break d;if((S(b,p)|0)>=(S(m,d)|0))break;else g=n;}}while(0);i=(x|0)==0;j=i?g:j;h=i?k:h;o=i?z:g;d=i?y:k;x=x+1|0;if((x|0)==2)break;else w=i?-1:w;}c[d+4>>2]=o;c[o>>2]=d;c[h>>2]=j;c[j+4>>2]=h;if((c[z+88>>2]|0)<(c[y+88>>2]|0))c[e>>2]=z;if((c[f+88>>2]|0)>=(c[A+88>>2]|0))c[e+4>>2]=f;c[e+12>>2]=c[K+96+12>>2];g=h;F=j;s=c[j+88>>2]|0;n=c[h+88>>2]|0;t=c[j+92>>2]|0;u=c[h+92>>2]|0;v=c[j+96>>2]|0;o=c[h+96>>2]|0;w=((t-u|0)<0)<<31>>31;x=0-(s-n)|0;y=Wt(0,0,x|0,((x|0)<0)<<31>>31|0)|0;y=_r(v-o|0,((v-o|0)<0)<<31>>31|0,y|0,D|0)|0;z=D;A=_r(v-o|0,((v-o|0)<0)<<31>>31|0,t-u|0,w|0)|0;B=D;p=_r(s-n|0,((s-n|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;E=D;C=_r(t-u|0,w|0,t-u|0,w|0)|0;C=Wt(p|0,E|0,C|0,D|0)|0;E=D;p=c[h+8>>2]|0;c[K+120>>2]=0;if(!p)p=0;else{q=Wt(0,0,t-u|0,w|0)|0;r=D;d=p;f=0;do{m=c[d+12>>2]|0;i=c[m+88>>2]|0;k=c[m+92>>2]|0;m=c[m+96>>2]|0;b=_r(k-u|0,((k-u|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;G=D;e=_r(i-n|0,((i-n|0)<0)<<31>>31|0,q|0,r|0)|0;g:do if((b|0)==(e|0)&(G|0)==(D|0)?(e=_r(i-n|0,((i-n|0)<0)<<31>>31|0,y|0,z|0)|0,b=D,G=_r(k-u|0,((k-u|0)<0)<<31>>31|0,A|0,B|0)|0,b=xv(G|0,D|0,e|0,b|0)|0,e=D,G=_r(m-o|0,((m-o|0)<0)<<31>>31|0,C|0,E|0)|0,G=xv(b|0,e|0,G|0,D|0)|0,e=D,(e|0)>0|(e|0)==0&G>>>0>0):0){do if(f|0){b=(c[f+4>>2]|0)==(d|0);if((c[f>>2]|0)!=(d|0))if(b)break;else break g;if(!b)break g;e=c[f+12>>2]|0;L=c[(c[d+8>>2]|0)+12>>2]|0;G=c[L+88>>2]|0;b=c[L+92>>2]|0;L=c[L+96>>2]|0;M=(c[e+96>>2]|0)-L|0;b=(S(m-L|0,(c[e+92>>2]|0)-b|0)|0)-(S(M,k-b|0)|0)|0;G=(S(M,i-G|0)|0)-(S(m-L|0,(c[e+88>>2]|0)-G|0)|0)|0;b=_r(b|0,((b|0)<0)<<31>>31|0,t-u|0,w|0)|0;e=D;G=_r(G|0,((G|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;G=xv(b|0,e|0,G|0,D|0)|0;e=D;if((e|0)>0|(e|0)==0&G>>>0>0)break g}while(0);f=d;}while(0);d=c[d>>2]|0;}while((d|0)!=(p|0));c[K+120>>2]=f;p=f;}d=c[j+8>>2]|0;c[K+72>>2]=0;if(!d)f=0;else{n=Wt(0,0,t-u|0,w|0)|0;o=D;b=d;f=0;do{m=c[b+12>>2]|0;i=c[m+88>>2]|0;k=c[m+92>>2]|0;m=c[m+96>>2]|0;G=_r(k-t|0,((k-t|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;M=D;L=_r(i-s|0,((i-s|0)<0)<<31>>31|0,n|0,o|0)|0;do if((G|0)==(L|0)&(M|0)==(D|0)?(L=_r(i-s|0,((i-s|0)<0)<<31>>31|0,y|0,z|0)|0,G=D,M=_r(k-t|0,((k-t|0)<0)<<31>>31|0,A|0,B|0)|0,G=xv(M|0,D|0,L|0,G|0)|0,L=D,M=_r(m-v|0,((m-v|0)<0)<<31>>31|0,C|0,E|0)|0,M=xv(G|0,L|0,M|0,D|0)|0,L=D,(L|0)>0|(L|0)==0&M>>>0>0):0){if(f|0){if((c[f>>2]|0)!=(b|0))break;if((c[f+4>>2]|0)==(b|0)?(L=c[f+12>>2]|0,e=c[(c[b+8>>2]|0)+12>>2]|0,M=c[e+88>>2]|0,G=c[e+92>>2]|0,e=c[e+96>>2]|0,r=(c[L+96>>2]|0)-e|0,G=(S(m-e|0,(c[L+92>>2]|0)-G|0)|0)-(S(r,k-G|0)|0)|0,M=(S(r,i-M|0)|0)-(S(m-e|0,(c[L+88>>2]|0)-M|0)|0)|0,G=_r(G|0,((G|0)<0)<<31>>31|0,t-u|0,w|0)|0,L=D,M=_r(M|0,((M|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0,M=xv(G|0,L|0,M|0,D|0)|0,L=D,!((L|0)>0|(L|0)==0&M>>>0>0)):0)break}f=b;}while(0);b=c[b>>2]|0;}while((b|0)!=(d|0));c[K+72>>2]=f;}if((p|0)!=0|(f|0)!=0){lc(a,h,j,K+120|0,K+72|0);f=c[K+120>>2]|0;if(f){h=c[f+12>>2]|0;g=h;}f=c[K+72>>2]|0;if(!f){f=F;i=h;}else{j=c[f+12>>2]|0;f=j;i=h;}}else{f=F;i=h;}b=f;n=c[j+88>>2]|0;o=(c[j+96>>2]|0)+1|0;h=c[j+92>>2]|0;}f=0;e=0;k=0;z=0;G=1;C=0;m=0;d=0;A=0;F=b;B=o;x=j;w=i;while(1){y=c[w+88>>2]|0;u=(c[x+88>>2]|0)-y|0;M=c[w+92>>2]|0;E=(c[x+92>>2]|0)-M|0;t=c[w+96>>2]|0;r=(c[x+96>>2]|0)-t|0;c[K+120>>2]=u;c[K+120+4>>2]=E;c[K+120+8>>2]=r;c[K+120+12>>2]=-1;y=n-y|0;M=h-M|0;t=B-t|0;s=(S(r,M)|0)-(S(E,t)|0)|0;t=(S(u,t)|0)-(S(r,y)|0)|0;M=(S(E,y)|0)-(S(u,M)|0)|0;c[K+72>>2]=s;c[K+72+4>>2]=((s|0)<0)<<31>>31;c[K+72+8>>2]=t;c[K+72+8+4>>2]=((t|0)<0)<<31>>31;c[K+72+16>>2]=M;c[K+72+16+4>>2]=((M|0)<0)<<31>>31;y=_r(E|0,((E|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;L=D;v=_r(r|0,((r|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;v=Wt(y|0,L|0,v|0,D|0)|0;L=D;r=_r(s|0,((s|0)<0)<<31>>31|0,r|0,((r|0)<0)<<31>>31|0)|0;y=D;M=_r(u|0,((u|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;M=Wt(r|0,y|0,M|0,D|0)|0;y=D;t=_r(u|0,((u|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;u=D;E=_r(s|0,((s|0)<0)<<31>>31|0,E|0,((E|0)<0)<<31>>31|0)|0;E=Wt(t|0,u|0,E|0,D|0)|0;c[K+48>>2]=v;c[K+48+4>>2]=L;c[K+48+8>>2]=M;c[K+48+8+4>>2]=y;c[K+48+16>>2]=E;c[K+48+16+4>>2]=D;c[K+24>>2]=0;c[K+24+4>>2]=0;c[K+24+8>>2]=0;c[K+24+12>>2]=0;c[K+24+16>>2]=0;E=td(a,0,w,K+120|0,K+72|0,K+48|0,K+24|0)|0;c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;c[K+16>>2]=0;y=td(a,1,x,K+120|0,K+72|0,K+48|0,K)|0;do if((E|0)!=0|(y|0)!=0){b=E|0?-1:1;do if((E|0)!=0&(y|0)!=0){v=c[K+24+16>>2]|0;b=c[K+16>>2]|0;if((v|0)!=(b|0)){u=v-b|0;break}if(!v)u=0;else{M=c[K+24>>2]|0;t=c[K+24+4>>2]|0;p=c[K+8>>2]|0;N=c[K+8+4>>2]|0;o=_r(p|0,0,M|0,0)|0;b=D;M=_r(N|0,0,M|0,0)|0;L=D;p=_r(p|0,0,t|0,0)|0;q=D;t=_r(N|0,0,t|0,0)|0;N=D;p=xv(M|0,0,p|0,0)|0;M=D;N=xv(L|0,0,t|0,N|0)|0;q=xv(N|0,D|0,q|0,0)|0;M=xv(q|0,D|0,M|0,0)|0;q=D;b=xv(0,p|0,o|0,b|0)|0;o=D;p=xv(M|0,q|0,(o>>>0<p>>>0|(o|0)==(p|0)&b>>>0<0)&1|0,0)|0;q=D;M=c[K+24+8>>2]|0;N=c[K+24+8+4>>2]|0;t=c[K>>2]|0;L=c[K+4>>2]|0;s=_r(t|0,0,M|0,0)|0;r=D;M=_r(L|0,0,M|0,0)|0;O=D;t=_r(t|0,0,N|0,0)|0;u=D;N=_r(L|0,0,N|0,0)|0;L=D;t=xv(M|0,0,t|0,0)|0;M=D;L=xv(O|0,0,N|0,L|0)|0;u=xv(L|0,D|0,u|0,0)|0;M=xv(u|0,D|0,M|0,0)|0;u=D;r=xv(0,t|0,s|0,r|0)|0;s=D;t=xv(M|0,u|0,(s>>>0<t>>>0|(s|0)==(t|0)&r>>>0<0)&1|0,0)|0;u=D;if(q>>>0<u>>>0|(q|0)==(u|0)&p>>>0<t>>>0)b=-1;else b=q>>>0>u>>>0|(q|0)==(u|0)&p>>>0>t>>>0?1:o>>>0<s>>>0|(o|0)==(s|0)&b>>>0<r>>>0?-1:(o>>>0>s>>>0|(o|0)==(s|0)&b>>>0>r>>>0)&1;u=S(b,v)|0;}}else u=b;while(0);do if(!G)if((u|0)>-1)if((c[K+16>>2]|0)<0&((c[K+8>>2]|0)==0?(c[K+8+4>>2]|0)==0:0)){o=z;s=A;break}else{H=133;break}else if((c[K+24+16>>2]|0)<0&((c[K+24+8>>2]|0)==0?(c[K+24+8+4>>2]|0)==0:0)){o=z;s=A;break}else{H=133;break}else H=133;while(0);if((H|0)==133){H=0;o=Rf(a,w,x)|0;if(!z)k=o;else c[z+4>>2]=o;c[o>>2]=z;b=c[o+8>>2]|0;if(!A)d=b;else c[A>>2]=b;c[b+4>>2]=A;s=b;}c[K+116>>2]=E;c[K+112>>2]=y;if(!u){lc(a,g,F,K+116|0,K+112|0);b=c[K+112>>2]|0;}else b=y;if((u|0)>-1&(b|0)!=0){q=(C|0)!=0;if(q?(I=c[C>>2]|0,(I|0)!=(y|0)):0){n=I;do{p=n;n=c[n>>2]|0;r=c[p+8>>2]|0;if((n|0)==(p|0))h=0;else{c[n+4>>2]=c[p+4>>2];c[c[p+4>>2]>>2]=n;h=n;}c[(c[r+12>>2]|0)+8>>2]=h;h=c[r>>2]|0;if((h|0)==(r|0))h=0;else{c[h+4>>2]=c[r+4>>2];c[c[r+4>>2]>>2]=h;}c[(c[p+12>>2]|0)+8>>2]=h;c[p+4>>2]=0;c[p+4+4>>2]=0;c[p+4+8>>2]=0;c[p+4+12>>2]=0;c[p>>2]=c[a+56>>2];c[a+56>>2]=p;c[r+4>>2]=0;c[r+4+4>>2]=0;c[r+4+8>>2]=0;c[r+4+12>>2]=0;c[r>>2]=c[a+56>>2];c[a+56>>2]=r;c[a+116>>2]=(c[a+116>>2]|0)+-1;}while((n|0)!=(y|0))}if(!s){m=q?m:y;h=d;}else{if(q)h=C;else{m=d;h=c[y+4>>2]|0;}c[h>>2]=d;c[d+4>>2]=h;c[s>>2]=y;c[y+4>>2]=s;h=0;b=c[K+112>>2]|0;}O=F;t=c[b+8>>2]|0;s=0;A=h;z=c[b+12>>2]|0;n=c[O+88>>2]|0;d=c[O+96>>2]|0;h=c[O+92>>2]|0;}else{t=C;A=d;z=F;d=B;}b=c[K+116>>2]|0;if((u|0)<1&(b|0)!=0){p=(f|0)!=0;if(p?(J=c[f+4>>2]|0,(J|0)!=(E|0)):0){d=J;do{q=d+4|0;n=d;d=c[q>>2]|0;h=c[n>>2]|0;r=c[n+8>>2]|0;if((h|0)==(n|0))h=0;else{c[h+4>>2]=d;c[c[q>>2]>>2]=h;}c[(c[r+12>>2]|0)+8>>2]=h;h=c[r>>2]|0;if((h|0)==(r|0))h=0;else{c[h+4>>2]=c[r+4>>2];c[c[r+4>>2]>>2]=h;}c[(c[n+12>>2]|0)+8>>2]=h;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[n>>2]=c[a+56>>2];c[a+56>>2]=n;c[r+4>>2]=0;c[r+4+4>>2]=0;c[r+4+8>>2]=0;c[r+4+12>>2]=0;c[r>>2]=c[a+56>>2];c[a+56>>2]=r;c[a+116>>2]=(c[a+116>>2]|0)+-1;}while((d|0)!=(E|0))}if(!o)h=p?e:E;else{if(p)h=e;else{h=k;f=c[E>>2]|0;}c[k>>2]=f;c[f+4>>2]=k;c[E>>2]=o;c[o+4>>2]=E;k=0;b=c[K+116>>2]|0;}O=g;f=c[b+8>>2]|0;r=h;w=0;y=c[O+88>>2]|0;g=c[b+12>>2]|0;x=c[O+96>>2]|0;h=c[O+92>>2]|0;}else{r=e;w=o;y=n;x=d;}if((g|0)==(i|0)&(z|0)==(j|0)){if(f){q=f+4|0;b=c[q>>2]|0;if((b|0)!=(r|0))do{o=b+4|0;n=b;b=c[o>>2]|0;d=c[n>>2]|0;p=c[n+8>>2]|0;if((d|0)==(n|0))d=0;else{c[d+4>>2]=b;c[c[o>>2]>>2]=d;}c[(c[p+12>>2]|0)+8>>2]=d;d=c[p>>2]|0;if((d|0)==(p|0))d=0;else{c[d+4>>2]=c[p+4>>2];c[c[p+4>>2]>>2]=d;}c[(c[n+12>>2]|0)+8>>2]=d;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[n>>2]=c[a+56>>2];c[a+56>>2]=n;c[p+4>>2]=0;c[p+4+4>>2]=0;c[p+4+8>>2]=0;c[p+4+12>>2]=0;c[p>>2]=c[a+56>>2];c[a+56>>2]=p;c[a+116>>2]=(c[a+116>>2]|0)+-1;}while((b|0)!=(r|0));if(w|0){c[k>>2]=f;c[q>>2]=k;c[r>>2]=w;c[w+4>>2]=r;}}else{c[k>>2]=w;c[w+4>>2]=k;c[g+8>>2]=w;}if(!t){c[s>>2]=A;c[A+4>>2]=s;c[j+8>>2]=s;v=0;u=G;t=0;q=w;d=A;p=z;n=y;o=g;b=x;break}b=c[t>>2]|0;if((b|0)!=(m|0))do{n=b;b=c[b>>2]|0;o=c[n+8>>2]|0;if((b|0)==(n|0))d=0;else{c[b+4>>2]=c[n+4>>2];c[c[n+4>>2]>>2]=b;d=b;}c[(c[o+12>>2]|0)+8>>2]=d;d=c[o>>2]|0;if((d|0)==(o|0))d=0;else{c[d+4>>2]=c[o+4>>2];c[c[o+4>>2]>>2]=d;}c[(c[n+12>>2]|0)+8>>2]=d;c[n+4>>2]=0;c[n+4+4>>2]=0;c[n+4+8>>2]=0;c[n+4+12>>2]=0;c[n>>2]=c[a+56>>2];c[a+56>>2]=n;c[o+4>>2]=0;c[o+4+4>>2]=0;c[o+4+8>>2]=0;c[o+4+12>>2]=0;c[o>>2]=c[a+56>>2];c[a+56>>2]=o;c[a+116>>2]=(c[a+116>>2]|0)+-1;}while((b|0)!=(m|0));if(!s){v=0;u=G;q=w;s=0;d=A;p=z;n=y;o=g;b=x;}else{c[t>>2]=A;c[A+4>>2]=t;c[s>>2]=m;c[m+4>>2]=s;v=0;u=G;q=w;d=A;p=z;n=y;o=g;b=x;}}else{v=1;u=0;q=w;d=A;p=z;n=y;o=g;b=x;}}else{v=Rf(a,w,x)|0;c[v>>2]=v;c[v+4>>2]=v;c[w+8>>2]=v;v=c[v+8>>2]|0;c[v>>2]=v;c[v+4>>2]=v;c[x+8>>2]=v;v=0;u=G;t=C;r=e;q=z;s=A;p=F;o=g;b=B;}while(0);if(!v)break c;e=r;z=q;G=u;C=t;A=s;F=p;g=o;B=b;x=p;w=o;}}while(0);l=K;return}}while(0);c[f+8>>2]=0;c[f>>2]=f;c[f+4>>2]=f;c[e>>2]=f;c[e+4>>2]=f;c[e+8>>2]=f;c[e+12>>2]=f;l=K;return}function hc(b,d){b=b|0;d=+d;var e=0,f=0,h=0,i=0.0,k=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0,fa=0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0;ea=l;l=l+240|0;e=c[b+24>>2]|0;if((e|0)<=0){l=ea;return}K=ea+128+76|0;L=ea+80+16|0;T=ea+80+32|0;J=0;do{I=c[(c[b+32>>2]|0)+(J<<2)>>2]|0;switch(c[I+216>>2]|0){case 2:case 5:break;default:{if(a[I+924>>0]|0){a[I+924>>0]=0;f=c[I+732>>2]|0;if((f|0)>0){h=c[I+740>>2]|0;e=0;do{n=c[h+(e*52|0)+8>>2]|0;y=c[h+(e*52|0)+12>>2]|0;D=+g[n+8>>2]-+g[y+8>>2];E=+g[n+12>>2]-+g[y+12>>2];H=+g[n+16>>2]-+g[y+16>>2];H=+G(+(D*D+E*E+H*H));g[h+(e*52|0)+16>>2]=H;g[h+(e*52|0)+28>>2]=H*H;e=e+1|0;}while((e|0)!=(f|0));e=0;do{g[h+(e*52|0)+24>>2]=(+g[(c[h+(e*52|0)+8>>2]|0)+88>>2]+ +g[(c[h+(e*52|0)+12>>2]|0)+88>>2])/+g[(c[h+(e*52|0)+4>>2]|0)+4>>2];e=e+1|0;}while((e|0)!=(f|0))}Ff(I);jl(I+988|0);if(c[I+388>>2]&16|0)Lg(I);}m=+g[I+368>>2]*d;g[I+452>>2]=m;g[I+456>>2]=1.0/m;g[I+460>>2]=m*3.0;f=c[I+192>>2]|0;m=+Db[c[(c[f>>2]|0)+48>>2]&15](f);g[I+464>>2]=m;g[I+468>>2]=m*.25;f=c[I+684>>2]|0;m=+g[I+452>>2];i=+g[f+40>>2]*m;k=m*+g[f+44>>2];m=m*+g[f+48>>2];f=c[I+712>>2]|0;if((f|0)>0){h=c[I+720>>2]|0;e=0;do{if(+g[h+(e*104|0)+88>>2]>0.0){y=h+(e*104|0)+40|0;g[y>>2]=i+ +g[y>>2];y=h+(e*104|0)+44|0;g[y>>2]=k+ +g[y>>2];y=h+(e*104|0)+48|0;g[y>>2]=m+ +g[y>>2];}e=e+1|0;}while((e|0)!=(f|0))}aj(11149);E=+g[I+308>>2];H=+g[I+312>>2];n=+g[I+304>>2]>0.0?1:+g[I+300>>2]>0.0;y=c[I+712>>2]|0;if(E!=0.0|H>0.0){if((y|0)>0){f=c[I+720>>2]|0;k=+g[f+8>>2];m=+g[f+12>>2];o=+g[f+16>>2];f=c[I+752>>2]|0;if((f|0)>0){h=c[I+760>>2]|0;e=0;i=0.0;do{fa=c[h+(e*44|0)+8>>2]|0;ga=c[h+(e*44|0)+12>>2]|0;C=+g[ga+8>>2]-k;x=+g[ga+12>>2]-m;A=+g[ga+16>>2]-o;ga=c[h+(e*44|0)+16>>2]|0;B=+g[ga+8>>2]-k;z=+g[ga+12>>2]-m;D=+g[ga+16>>2]-o;i=i+((+g[fa+16>>2]-o)*(C*z-x*B)+((+g[fa+8>>2]-k)*(x*D-A*z)+(+g[fa+12>>2]-m)*(A*B-C*D)));e=e+1|0;}while((e|0)!=(f|0))}else i=0.0;i=i/6.0;}else i=0.0;D=E*(1.0/+F(+i));C=H*(+g[I+476>>2]-i);}else{C=0.0;D=0.0;}a:do if((y|0)>0){if(!n){f=c[I+720>>2]|0;e=0;while(1){if(+g[f+(e*104|0)+88>>2]>0.0){if(E!=0.0){z=D*+g[f+(e*104|0)+92>>2];A=z*+g[f+(e*104|0)+76>>2];B=z*+g[f+(e*104|0)+80>>2];ga=f+(e*104|0)+56|0;g[ga>>2]=+g[f+(e*104|0)+72>>2]*z+ +g[ga>>2];ga=f+(e*104|0)+60|0;g[ga>>2]=A+ +g[ga>>2];ga=f+(e*104|0)+64|0;g[ga>>2]=B+ +g[ga>>2];}if(H>0.0){z=C*+g[f+(e*104|0)+92>>2];A=z*+g[f+(e*104|0)+76>>2];B=z*+g[f+(e*104|0)+80>>2];ga=f+(e*104|0)+56|0;g[ga>>2]=+g[f+(e*104|0)+72>>2]*z+ +g[ga>>2];ga=f+(e*104|0)+60|0;g[ga>>2]=A+ +g[ga>>2];ga=f+(e*104|0)+64|0;g[ga>>2]=B+ +g[ga>>2];}}e=e+1|0;if((e|0)==(y|0))break a}}f=c[I+720>>2]|0;e=0;do{x=+g[f+(e*104|0)+88>>2];if(x>0.0){z=+g[I+452>>2];q=+g[I+304>>2];o=+g[I+300>>2];b:do if((q>0.0|o>0.0?(M=c[c[I+684>>2]>>2]|0,(c[I+288>>2]|0)<4):0)?(N=+g[f+(e*104|0)+40>>2],O=N-+g[I+1212>>2],P=+g[f+(e*104|0)+44>>2],Q=P-+g[I+1216>>2],R=+g[f+(e*104|0)+48>>2],S=R-+g[I+1220>>2],U=+G(+(O*O+Q*Q+S*S)),O*O+Q*Q+S*S>1.1920928955078125e-07):0){v=O*(1.0/U);A=Q*(1.0/U);B=S*(1.0/U);s=+g[f+(e*104|0)+72>>2];t=+g[f+(e*104|0)+76>>2];u=+g[f+(e*104|0)+80>>2];switch(c[I+288>>2]|0){case 2:break;case 1:case 3:case 0:{i=O*s+Q*t+S*u<0.0?-1.0:1.0;if(!(S*u*i+(O*s*i+Q*t*i)>0.0))break b;w=-((c[j>>2]=M,+g[j>>2])*(O*O+Q*Q+S*S)*(S*u*i+(O*s*i+Q*t*i))*+g[f+(e*104|0)+92>>2]*.5);m=v*o*w+(s*i*q*w+0.0);k=A*o*w+(t*i*q*w+0.0);i=B*o*w+(u*i*q*w+0.0);if(z*x*i*z*x*i+(z*x*m*z*x*m+z*x*k*z*x*k)>N*N+P*P+R*R){B=1.0/+G(+(i*i+(m*m+k*k)));ga=f+(e*104|0)+56|0;g[ga>>2]=+g[ga>>2]-1.0/(z*x)*m*B*(R*i*B+(N*m*B+P*k*B));ga=f+(e*104|0)+60|0;g[ga>>2]=+g[ga>>2]-1.0/(z*x)*k*B*(R*i*B+(N*m*B+P*k*B));ga=f+(e*104|0)+64|0;g[ga>>2]=+g[ga>>2]-1.0/(z*x)*i*B*(R*i*B+(N*m*B+P*k*B));break b}else{ga=f+(e*104|0)+56|0;g[ga>>2]=m+ +g[ga>>2];ga=f+(e*104|0)+60|0;g[ga>>2]=k+ +g[ga>>2];ga=f+(e*104|0)+64|0;g[ga>>2]=i+ +g[ga>>2];break b}}default:break b}p=O*s+Q*t+S*u<0.0?-1.0:1.0;i=B*u*p+(v*s*p+A*t*p);k=+g[f+(e*104|0)+92>>2]*.5;m=(c[j>>2]=M,+g[j>>2]);w=i*o*.5*m*(O*O+Q*Q+S*S)*k;if(i>0.0&i<.9847999811172485){o=q*.5*m*U*k*+G(+(1.0-i*i));q=(B*(v*u*p-B*s*p)-A*(A*s*p-v*t*p))*o;r=(v*(A*s*p-v*t*p)-B*(B*t*p-A*u*p))*o;o=(A*(B*t*p-A*u*p)-v*(v*u*p-B*s*p))*o;}else{q=0.0;r=0.0;o=0.0;}i=z*x*-(B*w)*z*x*-(B*w)+(x*-(v*w)*z*x*-(v*w)*z+z*x*-(A*w)*z*x*-(A*w));if(i>0.0?i>=N*N+P*P+R*R:0){i=+G(+(N*N+P*P+R*R))/+G(+i)*.800000011920929;m=i*-(v*w);k=i*-(B*w);i=i*-(A*w);}else{m=-(v*w);k=-(B*w);i=-(A*w);}n=f+(e*104|0)+56|0;fa=f+(e*104|0)+60|0;A=i+ +g[fa>>2];ga=f+(e*104|0)+64|0;B=k+ +g[ga>>2];g[n>>2]=q+(m+ +g[n>>2]);g[fa>>2]=r+A;g[ga>>2]=o+B;}while(0);if(E!=0.0){z=D*+g[f+(e*104|0)+92>>2];A=z*+g[f+(e*104|0)+76>>2];B=z*+g[f+(e*104|0)+80>>2];ga=f+(e*104|0)+56|0;g[ga>>2]=+g[f+(e*104|0)+72>>2]*z+ +g[ga>>2];ga=f+(e*104|0)+60|0;g[ga>>2]=A+ +g[ga>>2];ga=f+(e*104|0)+64|0;g[ga>>2]=B+ +g[ga>>2];}if(H>0.0){z=C*+g[f+(e*104|0)+92>>2];A=z*+g[f+(e*104|0)+76>>2];B=z*+g[f+(e*104|0)+80>>2];ga=f+(e*104|0)+56|0;g[ga>>2]=+g[f+(e*104|0)+72>>2]*z+ +g[ga>>2];ga=f+(e*104|0)+60|0;g[ga>>2]=A+ +g[ga>>2];ga=f+(e*104|0)+64|0;g[ga>>2]=B+ +g[ga>>2];}}e=e+1|0;}while((e|0)!=(y|0))}while(0);n=c[I+752>>2]|0;if((n|0)>0){h=0;do{v=+g[I+452>>2];r=+g[I+304>>2];p=+g[I+300>>2];c:do if((r>0.0|p>0.0?(V=c[I+288>>2]|0,(V|0)>3):0)?(W=c[I+760>>2]|0,X=c[W+(h*44|0)+8>>2]|0,fa=c[W+(h*44|0)+12>>2]|0,Y=+g[X+40>>2],Z=+g[X+44>>2],_=+g[X+48>>2],ga=c[W+(h*44|0)+16>>2]|0,$=c[c[I+684>>2]>>2]|0,aa=(Y+ +g[fa+40>>2]+ +g[ga+40>>2])*.3333333432674408-+g[I+1212>>2],ba=(Z+ +g[fa+44>>2]+ +g[ga+44>>2])*.3333333432674408-+g[I+1216>>2],ca=(_+ +g[fa+48>>2]+ +g[ga+48>>2])*.3333333432674408-+g[I+1220>>2],da=+G(+(aa*aa+ba*ba+ca*ca)),aa*aa+ba*ba+ca*ca>1.1920928955078125e-07):0){w=aa*(1.0/da);x=ba*(1.0/da);z=ca*(1.0/da);q=+g[W+(h*44|0)+20>>2];s=+g[W+(h*44|0)+24>>2];u=+g[W+(h*44|0)+28>>2];switch(V|0){case 5:break;case 4:case 6:{i=aa*q+ba*s+ca*u<0.0?-1.0:1.0;if(!(ca*u*i+(aa*q*i+ba*s*i)>0.0))break c;k=-((c[j>>2]=$,+g[j>>2])*(aa*aa+ba*ba+ca*ca)*(ca*u*i+(aa*q*i+ba*s*i))*+g[W+(h*44|0)+36>>2]);t=(w*p*k+(q*i*r*k+0.0))*.3333333432674408;q=(x*p*k+(s*i*r*k+0.0))*.3333333432674408;p=(z*p*k+(u*i*r*k+0.0))*.3333333432674408;e=0;f=X;k=Y;m=Z;o=_;while(1){i=v*+g[f+88>>2];if(p*i*p*i+(t*i*t*i+q*i*q*i)>k*k+m*m+o*o){E=1.0/+G(+(p*p+(t*t+q*q)));H=o*p*E+(k*t*E+m*q*E);ga=f+56|0;g[ga>>2]=+g[ga>>2]-1.0/i*t*E*H;ga=f+60|0;g[ga>>2]=+g[ga>>2]-1.0/i*q*E*H;ga=f+64|0;g[ga>>2]=+g[ga>>2]-1.0/i*p*E*H;}else{ga=f+56|0;g[ga>>2]=t+ +g[ga>>2];ga=f+60|0;g[ga>>2]=q+ +g[ga>>2];ga=f+64|0;g[ga>>2]=p+ +g[ga>>2];}e=e+1|0;if((e|0)==3)break c;ga=c[W+(h*44|0)+8+(e<<2)>>2]|0;f=ga;k=+g[ga+40>>2];m=+g[ga+44>>2];o=+g[ga+48>>2];}}default:break c}o=aa*q+ba*s+ca*u<0.0?-1.0:1.0;i=z*u*o+(w*q*o+x*s*o);k=+g[W+(h*44|0)+36>>2]*.5;m=(c[j>>2]=$,+g[j>>2]);t=i*(aa*aa+ba*ba+ca*ca)*p*.5*m*k;if(i>0.0&i<.9847999811172485){B=da*r*.5*m*k*+G(+(1.0-i*i));C=(z*(w*u*o-z*q*o)-x*(x*q*o-w*s*o))*B*.3333333432674408;D=(w*(x*q*o-w*s*o)-z*(z*s*o-x*u*o))*B*.3333333432674408;B=(x*(z*s*o-x*u*o)-w*(w*u*o-z*q*o))*B*.3333333432674408;}else{C=0.0;D=0.0;B=0.0;}f=0;i=z*t*-.3333333432674408;m=x*t*-.3333333432674408;A=w*t*-.3333333432674408;e=X;o=w*t*-.3333333432674408;p=x*t*-.3333333432674408;v=z*t*-.3333333432674408;while(1){k=+g[e+88>>2];if(k>0.0){q=+g[I+452>>2];t=o*k*q;u=p*k*q;k=v*k*q;q=+g[e+40>>2];r=+g[e+44>>2];s=+g[e+48>>2];if(k*k+(t*t+u*u)>0.0?k*k+(t*t+u*u)>=q*q+r*r+s*s:0){i=+G(+(q*q+r*r+s*s))/+G(+(k*k+(t*t+u*u)))*.800000011920929;k=o*i;m=p*i;i=v*i;o=k;p=m;q=i;}else{q=v;k=A;}y=e+56|0;fa=e+60|0;E=m+ +g[fa>>2];ga=e+64|0;H=i+ +g[ga>>2];g[y>>2]=C+(k+ +g[y>>2]);g[fa>>2]=D+E;g[ga>>2]=B+H;}else{k=A;q=v;}e=f+1|0;if((e|0)==3)break c;f=e;A=k;e=c[W+(h*44|0)+8+(e<<2)>>2]|0;v=q;}}while(0);h=h+1|0;}while((h|0)!=(n|0))}e=c[2388]|0;ga=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=ga;do if(!ga){if(c[e+4>>2]|0){Za(ea+128|0,0)|0;ga=c[6435]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[ea+128+4>>2]|0)-(c[ga+4>>2]|0)+(((c[ea+128>>2]|0)-(c[ga>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2388]|0;}c[2388]=c[e+20>>2];}while(0);f=c[I+712>>2]|0;if((f|0)>0){e=0;do{fa=c[I+720>>2]|0;y=fa+(e*104|0)+8|0;ga=fa+(e*104|0)+24|0;c[ga>>2]=c[y>>2];c[ga+4>>2]=c[y+4>>2];c[ga+8>>2]=c[y+8>>2];c[ga+12>>2]=c[y+12>>2];ga=fa+(e*104|0)+56|0;E=+g[fa+(e*104|0)+88>>2];H=+g[I+452>>2];C=+g[ga>>2]*E*H;D=E*+g[fa+(e*104|0)+60>>2]*H;E=H*E*+g[fa+(e*104|0)+64>>2];H=+g[(c[I+684>>2]|0)+12>>2]/H;C=C>H?H:C;D=D>H?H:D;E=E>H?H:E;n=fa+(e*104|0)+40|0;C=(C<-H?-H:C)+ +g[n>>2];g[n>>2]=C;n=fa+(e*104|0)+44|0;D=(D<-H?-H:D)+ +g[n>>2];g[n>>2]=D;n=fa+(e*104|0)+48|0;E=(E<-H?-H:E)+ +g[n>>2];g[n>>2]=E;H=+g[I+452>>2];g[y>>2]=C*H+ +g[y>>2];y=fa+(e*104|0)+12|0;g[y>>2]=H*D+ +g[y>>2];fa=fa+(e*104|0)+16|0;g[fa>>2]=E*H+ +g[fa>>2];c[ga>>2]=0;c[ga+4>>2]=0;c[ga+8>>2]=0;c[ga+12>>2]=0;e=e+1|0;}while((e|0)!=(f|0))}Mc(I);e=c[I+928>>2]|0;if(e){ga=c[I+192>>2]|0;D=+Db[c[(c[ga>>2]|0)+48>>2]&15](ga);H=+g[e+4>>2]-D;E=+g[e+8>>2]-D;g[I+892>>2]=+g[e>>2]-D;g[I+896>>2]=H;g[I+900>>2]=E;g[I+904>>2]=0.0;E=D+ +g[e+20>>2];H=D+ +g[e+24>>2];g[I+908>>2]=D+ +g[e+16>>2];g[I+912>>2]=E;g[I+916>>2]=H;g[I+920>>2]=0.0;e=c[I+188>>2]|0;if(e|0){ga=c[I+684>>2]|0;fa=c[ga+32>>2]|0;jb[c[(c[fa>>2]|0)+16>>2]&31](fa,e,I+892|0,I+908|0,c[ga+36>>2]|0);}}else{c[I+892>>2]=0;c[I+892+4>>2]=0;c[I+892+8>>2]=0;c[I+892+12>>2]=0;c[I+892+16>>2]=0;c[I+892+20>>2]=0;c[I+892+24>>2]=0;c[I+892+28>>2]=0;}f=c[I+712>>2]|0;if((f|0)>0){e=0;do{fa=c[I+720>>2]|0;E=+g[I+464>>2];C=+g[fa+(e*104|0)+8>>2];H=+g[fa+(e*104|0)+12>>2];D=+g[fa+(e*104|0)+16>>2];g[ea>>2]=C-E;g[ea+4>>2]=H-E;g[ea+8>>2]=D-E;g[ea+12>>2]=0.0;g[ea+16>>2]=E+C;g[ea+20>>2]=E+H;g[ea+24>>2]=E+D;g[ea+28>>2]=0.0;ga=c[fa+(e*104|0)+96>>2]|0;D=+g[I+460>>2];E=D*+g[fa+(e*104|0)+44>>2];H=D*+g[fa+(e*104|0)+48>>2];g[ea+128>>2]=+g[fa+(e*104|0)+40>>2]*D;g[ea+128+4>>2]=E;g[ea+128+8>>2]=H;g[ea+128+12>>2]=0.0;bh(I+928|0,ga,ea,ea+128|0,+g[I+468>>2])|0;e=e+1|0;}while((e|0)!=(f|0))}if(c[I+988>>2]|0?(c[I+752>>2]|0)>0:0){e=0;do{ga=c[I+760>>2]|0;n=c[ga+(e*44|0)+8>>2]|0;y=c[ga+(e*44|0)+12>>2]|0;fa=c[ga+(e*44|0)+16>>2]|0;C=(+g[n+40>>2]+ +g[y+40>>2]+ +g[fa+40>>2])*.3333333432674408;D=(+g[n+44>>2]+ +g[y+44>>2]+ +g[fa+44>>2])*.3333333432674408;E=(+g[n+48>>2]+ +g[y+48>>2]+ +g[fa+48>>2])*.3333333432674408;x=+g[I+464>>2];u=+g[n+8>>2];w=+g[n+12>>2];A=+g[n+16>>2];H=+g[n+20>>2];B=+g[y+8>>2];p=B<u?B:u;z=+g[y+12>>2];q=z<w?z:w;v=+g[y+16>>2];r=v<A?v:A;t=+g[y+20>>2];s=t<H?t:H;u=u<B?B:u;w=w<z?z:w;A=A<v?v:A;H=H<t?t:H;t=+g[fa+8>>2];v=+g[fa+12>>2];z=+g[fa+16>>2];B=+g[fa+20>>2];g[ea>>2]=(t<p?t:p)-x;g[ea+4>>2]=(v<q?v:q)-x;g[ea+8>>2]=(z<r?z:r)-x;g[ea+12>>2]=B<s?B:s;g[ea+16>>2]=x+(u<t?t:u);g[ea+20>>2]=x+(w<v?v:w);g[ea+24>>2]=x+(A<z?z:A);g[ea+28>>2]=H<B?B:H;ga=c[ga+(e*44|0)+40>>2]|0;H=+g[I+460>>2];g[ea+128>>2]=C*H;g[ea+128+4>>2]=D*H;g[ea+128+8>>2]=E*H;g[ea+128+12>>2]=0.0;bh(I+988|0,ga,ea,ea+128|0,+g[I+468>>2])|0;e=e+1|0;}while((e|0)<(c[I+752>>2]|0))}do if(a[I+473>>0]|0){y=c[I+712>>2]|0;if((y|0)>0){f=c[I+720>>2]|0;h=c[I+512>>2]|0;e=0;i=0.0;k=0.0;m=0.0;do{H=+g[h+(e<<2)>>2];i=i+ +g[f+(e*104|0)+8>>2]*H;k=k+H*+g[f+(e*104|0)+12>>2];m=m+H*+g[f+(e*104|0)+16>>2];e=e+1|0;}while((e|0)!=(y|0))}else{i=0.0;k=0.0;m=0.0;}g[I+520>>2]=i;g[I+524>>2]=k;g[I+528>>2]=m;g[I+532>>2]=0.0;h=ea+128+4|0;n=h+44|0;do{c[h>>2]=0;h=h+4|0;}while((h|0)<(n|0));g[ea+128>>2]=1.1920928955078125e-07;g[ea+128+20>>2]=2.384185791015625e-07;g[ea+128+40>>2]=3.5762786865234375e-07;if((y|0)>0){f=c[I+512>>2]|0;h=c[I+720>>2]|0;n=c[I+492>>2]|0;e=0;o=1.1920928955078125e-07;p=0.0;q=0.0;r=0.0;s=2.384185791015625e-07;t=0.0;u=0.0;v=0.0;w=3.5762786865234375e-07;do{E=+g[f+(e<<2)>>2];A=(+g[h+(e*104|0)+8>>2]-i)*E;B=(+g[h+(e*104|0)+12>>2]-k)*E;E=E*(+g[h+(e*104|0)+16>>2]-m);C=+g[n+(e<<4)>>2];D=+g[n+(e<<4)+4>>2];H=+g[n+(e<<4)+8>>2];o=A*C+o;p=A*D+p;q=A*H+q;r=B*C+r;s=B*D+s;t=B*H+t;u=E*C+u;v=E*D+v;w=E*H+w;e=e+1|0;}while((e|0)!=(y|0));g[ea+128>>2]=o;g[ea+128+4>>2]=p;g[ea+128+8>>2]=q;g[ea+128+16>>2]=r;g[ea+128+20>>2]=s;g[ea+128+24>>2]=t;g[ea+128+32>>2]=u;g[ea+128+36>>2]=v;g[ea+128+40>>2]=w;}if((a[22648]|0)==0?iy(22648)|0:0){g[5788]=9.999999747378752e-05;c[5789]=16;}Zc(ea+128|0,ea+80|0,ea+32|0);c[I+536>>2]=c[ea+80>>2];c[I+536+4>>2]=c[ea+80+4>>2];c[I+536+8>>2]=c[ea+80+8>>2];c[I+536+12>>2]=c[ea+80+12>>2];c[I+552>>2]=c[L>>2];c[I+552+4>>2]=c[L+4>>2];c[I+552+8>>2]=c[L+8>>2];c[I+552+12>>2]=c[L+12>>2];c[I+568>>2]=c[T>>2];c[I+568+4>>2]=c[T+4>>2];c[I+568+8>>2]=c[T+8>>2];c[I+568+12>>2]=c[T+12>>2];ja=+g[ea+80>>2];w=+g[L>>2];B=+g[T>>2];ia=+g[ea+80+4>>2];x=+g[ea+80+20>>2];D=+g[ea+80+36>>2];ha=+g[ea+80+8>>2];z=+g[ea+80+24>>2];H=+g[ea+80+40>>2];p=+g[I+632>>2];o=+g[I+636>>2];m=+g[I+640>>2];pa=+g[I+648>>2];oa=+g[I+652>>2];q=+g[I+656>>2];C=+g[I+664>>2];E=+g[I+668>>2];u=+g[I+672>>2];na=+g[ea+128>>2];ma=+g[ea+128+16>>2];r=+g[ea+128+32>>2];i=(ja*p+ia*o+ha*m)*na+(w*p+x*o+z*m)*ma+(B*p+D*o+H*m)*r;la=+g[ea+128+4>>2];ka=+g[ea+128+20>>2];s=+g[ea+128+36>>2];k=(ja*p+ia*o+ha*m)*la+(w*p+x*o+z*m)*ka+(B*p+D*o+H*m)*s;v=+g[ea+128+8>>2];A=+g[ea+128+24>>2];t=+g[ea+128+40>>2];m=(ja*p+ia*o+ha*m)*v+(w*p+x*o+z*m)*A+(B*p+D*o+H*m)*t;o=(ja*pa+ia*oa+ha*q)*na+(w*pa+x*oa+z*q)*ma+(B*pa+D*oa+H*q)*r;p=(ja*pa+ia*oa+ha*q)*la+(w*pa+x*oa+z*q)*ka+(B*pa+D*oa+H*q)*s;q=(ja*pa+ia*oa+ha*q)*v+(w*pa+x*oa+z*q)*A+(B*pa+D*oa+H*q)*t;r=na*(ja*C+ia*E+ha*u)+ma*(w*C+x*E+z*u)+(B*C+D*E+H*u)*r;s=(ja*C+ia*E+ha*u)*la+(w*C+x*E+z*u)*ka+(B*C+D*E+H*u)*s;t=(ja*C+ia*E+ha*u)*v+(w*C+x*E+z*u)*A+(B*C+D*E+H*u)*t;g[I+584>>2]=i;g[I+588>>2]=k;g[I+592>>2]=m;g[I+596>>2]=0.0;g[I+600>>2]=o;g[I+604>>2]=p;g[I+608>>2]=q;g[I+612>>2]=0.0;g[I+616>>2]=r;g[I+620>>2]=s;g[I+624>>2]=t;g[I+628>>2]=0.0;u=+g[I+364>>2];if(u>1.0){pa=1.0/(m*(s*o-p*r)+(i*(p*t-q*s)+k*(q*r-t*o)))<1.0?1.0:1.0/(m*(s*o-p*r)+(i*(p*t-q*s)+k*(q*r-t*o)))>u?u:1.0/(m*(s*o-p*r)+(i*(p*t-q*s)+k*(q*r-t*o)));g[I+584>>2]=i*pa;g[I+588>>2]=k*pa;g[I+592>>2]=m*pa;g[I+596>>2]=0.0;g[I+600>>2]=o*pa;g[I+604>>2]=p*pa;g[I+608>>2]=q*pa;g[I+612>>2]=0.0;g[I+616>>2]=r*pa;g[I+620>>2]=s*pa;g[I+624>>2]=pa*t;g[I+628>>2]=0.0;}if(a[I+473>>0]|0){if(!(+g[I+320>>2]>0.0))break;i=+g[I+536>>2];p=+g[I+540>>2];q=+g[I+544>>2];r=+g[I+552>>2];s=+g[I+556>>2];t=+g[I+560>>2];k=+g[I+568>>2];m=+g[I+572>>2];o=+g[I+576>>2];f=c[I+712>>2]|0;if((f|0)<=0)break;e=0;do{h=c[I+720>>2]|0;if(+g[h+(e*104|0)+88>>2]>0.0){y=c[I+492>>2]|0;ka=+g[y+(e<<4)>>2];la=+g[y+(e<<4)+4>>2];ma=+g[y+(e<<4)+8>>2];ja=+g[I+320>>2];y=h+(e*104|0)+8|0;na=+g[y>>2];fa=h+(e*104|0)+12|0;oa=+g[fa>>2];ga=h+(e*104|0)+16|0;pa=+g[ga>>2];oa=oa+ja*(r*ka+s*la+t*ma+ +g[I+524>>2]-oa);pa=pa+ja*(k*ka+m*la+o*ma+ +g[I+528>>2]-pa);g[y>>2]=na+ja*(+g[I+520>>2]+(i*ka+p*la+q*ma)-na);g[fa>>2]=oa;g[ga>>2]=pa;g[h+(e*104|0)+20>>2]=0.0;}e=e+1|0;}while((e|0)!=(f|0))}}while(0);h=ea+128|0;n=h+104|0;do{c[h>>2]=0;h=h+4|0;}while((h|0)<(n|0));e=c[I+812>>2]|0;if((e|0)<0){if((c[I+816>>2]|0)<0){f=c[I+820>>2]|0;if(f|0){if(a[I+824>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[I+820>>2]=0;}a[I+824>>0]=1;c[I+820>>2]=0;c[I+816>>2]=0;}do{ga=c[I+820>>2]|0;fa=ga+(e*104|0)|0;c[fa>>2]=c[ea+128>>2];c[fa+4>>2]=c[ea+128+4>>2];c[fa+8>>2]=c[ea+128+8>>2];c[fa+12>>2]=c[ea+128+12>>2];c[fa+16>>2]=c[ea+128+16>>2];c[fa+20>>2]=c[ea+128+20>>2];c[fa+24>>2]=c[ea+128+24>>2];fa=ga+(e*104|0)+28|0;c[fa>>2]=c[ea+128+28>>2];c[fa+4>>2]=c[ea+128+28+4>>2];c[fa+8>>2]=c[ea+128+28+8>>2];c[fa+12>>2]=c[ea+128+28+12>>2];fa=ga+(e*104|0)+44|0;c[fa>>2]=c[ea+128+44>>2];c[fa+4>>2]=c[ea+128+44+4>>2];c[fa+8>>2]=c[ea+128+44+8>>2];c[fa+12>>2]=c[ea+128+44+12>>2];fa=ga+(e*104|0)+60|0;c[fa>>2]=c[ea+128+60>>2];c[fa+4>>2]=c[ea+128+60+4>>2];c[fa+8>>2]=c[ea+128+60+8>>2];c[fa+12>>2]=c[ea+128+60+12>>2];ga=ga+(e*104|0)+76|0;c[ga>>2]=c[K>>2];c[ga+4>>2]=c[K+4>>2];c[ga+8>>2]=c[K+8>>2];c[ga+12>>2]=c[K+12>>2];c[ga+16>>2]=c[K+16>>2];c[ga+20>>2]=c[K+20>>2];c[ga+24>>2]=c[K+24>>2];e=e+1|0;}while((e|0)!=0)}c[I+812>>2]=0;h=ea+128|0;n=h+56|0;do{c[h>>2]=0;h=h+4|0;}while((h|0)<(n|0));e=c[I+832>>2]|0;if((e|0)<0){if((c[I+836>>2]|0)<0){f=c[I+840>>2]|0;if(f|0){if(a[I+844>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[f+-4>>2]|0);}c[I+840>>2]=0;}a[I+844>>0]=1;c[I+840>>2]=0;c[I+836>>2]=0;}do{h=(c[I+840>>2]|0)+(e*56|0)|0;f=ea+128|0;n=h+56|0;do{c[h>>2]=c[f>>2];h=h+4|0;f=f+4|0;}while((h|0)<(n|0));e=e+1|0;}while((e|0)!=0)}c[I+832>>2]=0;Wf(I+928|0,1);Wf(I+988|0,1);Wf(I+1048|0,1);e=c[b+24>>2]|0;}}J=J+1|0;}while((J|0)<(e|0));l=ea;return}
function pk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=c[b+8>>2]|0;if((k|0)<=0)return;j=c[b+16>>2]|0;i=0;b=0;do{h=c[j+(i<<2)>>2]|0;if(!(c[h+204>>2]&3)){g=c[a+16>>2]|0;e=g+(b<<3)|0;d=c[e>>2]|0;if((d|0)==(b|0))d=b;else{f=d;do{d=g+(f<<3)|0;c[e>>2]=c[d>>2];d=c[d>>2]|0;e=g+(d<<3)|0;f=c[e>>2]|0;}while((d|0)!=(f|0))}c[h+208>>2]=d;c[g+(b<<3)+4>>2]=i;c[h+212>>2]=-1;b=b+1|0;}else{c[h+208>>2]=-1;c[h+212>>2]=-2;}i=i+1|0;}while((i|0)!=(k|0));return}function qk(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0;while(1){g=c[a+12>>2]|0;if(!(((e[f>>1]|0)>=(e[a>>1]|0)?(e[d>>1]|0)<=(e[a+6>>1]|0):0)&(e[d+4>>1]|0)<=(e[a+10>>1]|0)&(e[f+4>>1]|0)>=(e[a+4>>1]|0)&(e[d+2>>1]|0)<=(e[a+8>>1]|0)&(e[f+2>>1]|0)>=(e[a+2>>1]|0))){h=6;break}if((g|0)>-1)break;i=a+16|0;qk(i,b,d,f);g=c[a+28>>2]|0;a=i+(((g|0)>-1?1:0-g|0)<<4)|0;}if((h|0)==6)return;Vb[c[(c[b>>2]|0)+8>>2]&127](b,g>>>21,g&2097151);return}function rk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=Qr()|0;Ld(f,b,d,e);c[f>>2]=4612;c[f+4>>2]=9;a[f+1309>>0]=0;g[f+1316>>2]=0.0;g[f+1340>>2]=0.0;g[f+1364>>2]=1.0;a[f+1310>>0]=0;g[f+1320>>2]=0.0;g[f+1344>>2]=0.0;g[f+1368>>2]=1.0;a[f+1311>>0]=0;g[f+1324>>2]=0.0;g[f+1348>>2]=0.0;g[f+1372>>2]=1.0;a[f+1312>>0]=0;g[f+1328>>2]=0.0;g[f+1352>>2]=0.0;g[f+1376>>2]=1.0;a[f+1313>>0]=0;g[f+1332>>2]=0.0;g[f+1356>>2]=0.0;g[f+1380>>2]=1.0;a[f+1314>>0]=0;g[f+1336>>2]=0.0;g[f+1360>>2]=0.0;g[f+1384>>2]=1.0;return f|0}function sk(a,b){a=a|0;b=+b;var d=0,e=0;d=l;l=l+16|0;We(a,b);aj(11781);a=c[a+452>>2]|0;kb[c[(c[a>>2]|0)+24>>2]&31](a,b);a=c[2388]|0;e=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=e;if(e|0){l=d;return}do if(c[a+4>>2]|0){Za(d|0,0)|0;e=c[6435]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[d+4>>2]|0)-(c[e+4>>2]|0)+(((c[d>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2388]|0;break}else{l=d;return}}while(0);c[2388]=c[a+20>>2];l=d;return}function tk(b,d){b=b|0;d=d|0;a[b+148>>0]=0;if((((Rd(b,d)|0?(a[b+148>>0]=1,Rd(b,d)|0):0)?(a[b+148>>0]=1,Rd(b,d)|0):0)?(a[b+148>>0]=1,Rd(b,d)|0):0)?(a[b+148>>0]=1,Rd(b,d)|0):0)a[b+148>>0]=1;d=(c[b+8>>2]|0)+52|0;c[b+92>>2]=c[d>>2];c[b+92+4>>2]=c[d+4>>2];c[b+92+8>>2]=c[d+8>>2];c[b+92+12>>2]=c[d+12>>2];hp(b+112|0,d|0,16)|0;return}function uk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;h=+g[a+56>>2];k=+g[a+72>>2]-h;j=+g[a+60>>2];i=+g[a+76>>2]-j;l=+g[a+64>>2];m=+g[a+80>>2]-l;h=+g[a+88>>2]-h;j=+g[a+92>>2]-j;l=+g[a+96>>2]-l;g[d+12>>2]=0.0;f=1.0/+G(+((k*j-i*h)*(k*j-i*h)+((i*l-m*j)*(i*l-m*j)+(m*h-k*l)*(m*h-k*l))));g[d>>2]=(i*l-m*j)*f;g[d+4>>2]=(m*h-k*l)*f;g[d+8>>2]=(k*j-i*h)*f;c[e>>2]=c[a+56>>2];c[e+4>>2]=c[a+56+4>>2];c[e+8>>2]=c[a+56+8>>2];c[e+12>>2]=c[a+56+12>>2];return}function vk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=l;l=l+224|0;e=g+80|0;f=e+40|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(f|0));c[g+120>>2]=c[d>>2];if((Sc(0,b,g+120|0,g,g+80|0)|0)>=0){e=c[2390]|0;if((a[9634]|0)<1)c[2390]=e&-33;if(!(c[2402]|0)){d=c[2401]|0;c[2401]=g+136;c[2397]=g+136;c[2395]=g+136;c[2402]=80;c[2394]=g+136+80;Sc(9560,b,g+120|0,g,g+80|0)|0;if(d|0){zb[c[9596>>2]&63](9560,0,0)|0;c[2401]=d;c[2402]=0;c[2394]=0;c[2397]=0;c[2395]=0;}}else Sc(9560,b,g+120|0,g,g+80|0)|0;c[2390]=c[2390]|e&32;}l=g;return}function wk(b,d){b=b|0;d=d|0;do if(b){if(d>>>0<128){a[b>>0]=d;b=1;break}if(!(c[6448]|0))if((d&-128|0)==57216){a[b>>0]=d;b=1;break}else{c[6581]=84;b=-1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;break}else{c[6581]=84;b=-1;break}}else b=1;while(0);return b|0}function xk(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=6288;e=c[b+12>>2]|0;if((e|0)>0){d=0;do{f=c[(c[b+20>>2]|0)+(d<<2)>>2]|0;if(f|0){lb[c[c[f>>2]>>2]&511](f);f=c[b+4>>2]|0;nb[c[(c[f>>2]|0)+60>>2]&127](f,c[(c[b+20>>2]|0)+(d<<2)>>2]|0);}d=d+1|0;}while((d|0)!=(e|0))}d=c[b+20>>2]|0;if(!d){a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;b=b+16|0;c[b>>2]=0;return}if(a[b+24>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+20>>2]=0;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;b=b+16|0;c[b>>2]=0;return}function yk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;i=+g[a+56>>2];k=+g[a+72>>2]-i;j=+g[a+60>>2];f=+g[a+76>>2]-j;d=+g[a+64>>2];h=+g[a+80>>2]-d;i=+g[a+88>>2]-i;j=+g[a+92>>2]-j;d=+g[a+96>>2]-d;g[c+12>>2]=0.0;e=1.0/+G(+((k*j-f*i)*(k*j-f*i)+((f*d-h*j)*(f*d-h*j)+(h*i-k*d)*(h*i-k*d))));g[c>>2]=(f*d-h*j)*e;g[c+4>>2]=(h*i-k*d)*e;g[c+8>>2]=(k*j-f*i)*e;if(!b)return;g[c>>2]=-((f*d-h*j)*e);g[c+4>>2]=-((h*i-k*d)*e);g[c+8>>2]=-((k*j-f*i)*e);return}function zk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=c[a+720>>2]|0;g=c[a+752>>2]|0;if((g|0)<=0){h=0;return h|0}f=c[a+760>>2]|0;a=0;while(1){i=c[f+(a*44|0)+8>>2]|0;if(((i|0)==(h+(e*104|0)|0)|((i|0)==(h+(b*104|0)|0)|(i|0)==(h+(d*104|0)|0))?(i=c[f+(a*44|0)+12>>2]|0,(i|0)==(h+(e*104|0)|0)|((i|0)==(h+(b*104|0)|0)|(i|0)==(h+(d*104|0)|0))):0)?(i=c[f+(a*44|0)+16>>2]|0,(i|0)==(h+(e*104|0)|0)|((i|0)==(h+(b*104|0)|0)|(i|0)==(h+(d*104|0)|0))):0){a=1;f=7;break}a=a+1|0;if((a|0)>=(g|0)){a=0;f=7;break}}if((f|0)==7)return a|0;return 0}function Ak(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0,j=0;i=c[a+96>>2]|0;j=c[a+104>>2]|0;f=+g[j+(((b|0)%(i|0)|0)<<4)+4>>2]*+g[a+16>>2];h=+g[j+(((b|0)%(i|0)|0)<<4)+8>>2]*+g[a+20>>2];g[d>>2]=+g[j+(((b|0)%(i|0)|0)<<4)>>2]*+g[a+12>>2];g[d+4>>2]=f;g[d+8>>2]=h;g[d+12>>2]=0.0;d=c[a+104>>2]|0;h=+g[d+(((b+1|0)%(i|0)|0)<<4)+4>>2]*+g[a+16>>2];f=+g[d+(((b+1|0)%(i|0)|0)<<4)+8>>2]*+g[a+20>>2];g[e>>2]=+g[d+(((b+1|0)%(i|0)|0)<<4)>>2]*+g[a+12>>2];g[e+4>>2]=h;g[e+8>>2]=f;g[e+12>>2]=0.0;return}function Bk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,i=0;e=l;l=l+32|0;d=c[a+184>>2]|0;if(+g[d+4>>2]==0.0){d=0;l=e;return d|0}b=c[b>>2]|0;if(!(Kb[c[(c[d>>2]|0)+8>>2]&31](d,c[b+188>>2]|0)|0)){d=1;l=e;return d|0}h=c[a+192>>2]|0;i=c[b+192>>2]|0;d=c[a+184>>2]|0;f=+g[a+188>>2];c[e>>2]=0;c[e+4>>2]=i;c[e+8>>2]=b;c[e+12>>2]=b+4;c[e+16>>2]=-1;c[e+20>>2]=-1;sc(h,a+36|0,a+100|0,e,d,f);d=1;l=e;return d|0}function Ck(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=l;l=l+16|0;k=+g[d>>2];j=+g[d+4>>2];i=+g[d+8>>2];h=k*+g[b+56>>2]+j*+g[b+60>>2]+i*+g[b+64>>2];f=k*+g[b+72>>2]+j*+g[b+76>>2]+i*+g[b+80>>2];i=k*+g[b+88>>2]+j*+g[b+92>>2]+i*+g[b+96>>2];g[e>>2]=h;g[e+4>>2]=f;g[e+8>>2]=i;g[e+12>>2]=0.0;d=b+56+((+g[e+((h<f&1)<<2)>>2]<i?2:h<f&1)<<4)|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];l=e;return}function Dk(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=c[a+8>>2]|0;c[b+260>>2]=(c[b+260>>2]|0)+1;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+52>>2]=c[d>>2];c[b+52+4>>2]=c[d+4>>2];c[b+52+8>>2]=c[d+8>>2];c[b+52+12>>2]=c[d+12>>2];l=d;return}function Ek(a){a=a|0;var b=0,d=0;b=l;l=l+16|0;aj(15049);d=c[a+68>>2]|0;nb[c[(c[d>>2]|0)+32>>2]&127](d,c[a+24>>2]|0);a=c[2388]|0;d=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=d;if(d|0){l=b;return}do if(c[a+4>>2]|0){Za(b|0,0)|0;d=c[6435]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[b+4>>2]|0)-(c[d+4>>2]|0)+(((c[b>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2388]|0;break}else{l=b;return}}while(0);c[2388]=c[a+20>>2];l=b;return}function Fk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;do switch(b|0){case 0:{b=1;f=0;break}case 1:{b=2;f=0;break}case 2:{b=3;f=1;break}case 3:{f=2;break}case 4:{f=0;break}case 5:{f=1;break}case 6:{f=2;break}case 7:{f=3;break}case 8:{b=5;f=4;break}case 9:{b=6;f=4;break}case 10:{b=7;f=5;break}case 11:{b=7;f=6;break}default:{b=0;f=0;}}while(0);Vb[c[(c[a>>2]|0)+108>>2]&127](a,f,d);Vb[c[(c[a>>2]|0)+108>>2]&127](a,b,e);return}function Gk(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;k=+Db[c[(c[a>>2]|0)+48>>2]&15](a);h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);d=+Db[c[(c[a>>2]|0)+48>>2]&15](a);m=(k+ +g[a+28>>2])/+g[a+12>>2];j=(h+ +g[a+32>>2])/+g[a+16>>2];f=(d+ +g[a+36>>2])/+g[a+20>>2];l=+F(+(+g[b>>2]));i=+F(+(+g[b+4>>2]));e=+F(+(+g[b+8>>2]));g[a+12>>2]=l;g[a+16>>2]=i;g[a+20>>2]=e;g[a+24>>2]=0.0;g[a+28>>2]=m*l-k;g[a+32>>2]=j*i-h;g[a+36>>2]=f*e-d;g[a+40>>2]=0.0;return}function Hk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0,j=0;if(a[b+527>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}c[d>>2]=3;c[d+4>>2]=3;j=c[b+28>>2]|0;i=c[b+32>>2]|0;pc(b,j+4|0,i+4|0,j+264|0,i+264|0);if((a[b+526>>0]|0?(e=c[d>>2]|0,c[d>>2]=e+1,f=c[d+4>>2]|0,c[d+4>>2]=f+-1,h=+g[b+456>>2],+g[b+444>>2]<h):0)?+g[b+448>>2]<h:0){c[d>>2]=e+2;c[d+4>>2]=f+-2;}if(!(a[b+525>>0]|0))return;c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1;return}function Ik(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=b+e|0;d=d&255;if((e|0)>=67){while(b&3){a[b>>0]=d;b=b+1|0;}g=d|d<<8|d<<16|d<<24;while((b|0)<=((f&-4)-64|0)){c[b>>2]=g;c[b+4>>2]=g;c[b+8>>2]=g;c[b+12>>2]=g;c[b+16>>2]=g;c[b+20>>2]=g;c[b+24>>2]=g;c[b+28>>2]=g;c[b+32>>2]=g;c[b+36>>2]=g;c[b+40>>2]=g;c[b+44>>2]=g;c[b+48>>2]=g;c[b+52>>2]=g;c[b+56>>2]=g;c[b+60>>2]=g;b=b+64|0;}while((b|0)<(f&-4|0)){c[b>>2]=g;b=b+4|0;}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0;}return f-e|0}function Jk(a,b,c,d,e,f,h,i,j,k){a=+a;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=+j;k=k|0;if(!(((h-d)*b-(i-e)*a)*f+(((i-e)*c-(j-f)*b)*d+((j-f)*a-(h-d)*c)*e)<0.0)){k=0;return k|0}do if(!((h-d)*d+(i-e)*e+(j-f)*f>0.0))if((h-d)*h+(i-e)*i+(j-f)*j<0.0){a=h*h+i*i+j*j;break}else{a=((h*h+i*i+j*j)*(d*d+e*e+f*f)-(h*d+i*e+j*f)*(h*d+i*e+j*f))/((h-d)*(h-d)+(i-e)*(i-e)+(j-f)*(j-f));a=a>0.0?a:0.0;break}else a=d*d+e*e+f*f;while(0);g[k>>2]=+G(+a);k=1;return k|0}function Kk(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0,h=0,i=0;b=c[b+36>>2]|0;i=c[b+8>>2]|0;h=c[b+12>>2]|0;f=c[b+16>>2]|0;e=+g[a+52>>2];d=+oh(a+4|0,+g[a+36>>2],+g[a+40>>2],+g[a+44>>2],+g[i+8>>2],+g[i+12>>2],+g[i+16>>2],+g[h+8>>2],+g[h+12>>2],+g[h+16>>2],+g[f+8>>2],+g[f+12>>2],+g[f+16>>2],e);if(!(d>0.0&d<e)){i=a+60|0;h=c[i>>2]|0;h=h+1|0;c[i>>2]=h;return}g[a+52>>2]=d;c[a+56>>2]=b;i=a+60|0;h=c[i>>2]|0;h=h+1|0;c[i>>2]=h;return}function Lk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do if(c>>>0>=3)if((c+-3|0)>>>0<3)switch(b|0){case 2:{d=+g[a+868+(c+-3<<6)+32>>2];break a}case 4:{d=+g[a+868+(c+-3<<6)+36>>2];break a}case 3:{d=+g[a+868+(c+-3<<6)+28>>2];break a}default:{d=0.0;break a}}else d=0.0;else switch(b|0){case 2:{d=+g[a+756+(c<<2)>>2];break a}case 4:{d=+g[a+772+(c<<2)>>2];break a}case 3:{d=+g[a+740+(c<<2)>>2];break a}default:{d=0.0;break a}}while(0);return +d}function Mk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;Vb[c[(c[b>>2]|0)+68>>2]&127](a,b,d);if(!(+Db[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0))return;h=+g[d>>2];f=+g[d+4>>2];e=+g[d+8>>2];j=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:h;i=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:f;e=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:e;f=1.0/+G(+(e*e+(j*j+i*i)));h=+Db[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+h*f*j;g[a+4>>2]=h*f*i+ +g[a+4>>2];g[a+8>>2]=h*f*e+ +g[a+8>>2];return}function Nk(b,d,e){b=b|0;d=d|0;e=+e;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;a[b+171>>0]=0;c[b+60>>2]=c[d>>2];c[b+60+4>>2]=c[d+4>>2];c[b+60+8>>2]=c[d+8>>2];c[b+60+12>>2]=c[d+12>>2];f=+g[b+60>>2];h=+g[b+64>>2];i=+g[b+68>>2];j=1.0/+G(+(f*f+h*h+i*i));if(+G(+(i*j*i*j+(f*j*f*j+h*j*h*j)))<1.1920928955078125e-07){k=0.0;h=0.0;f=0.0;d=0;}else{k=f*j;h=h*j;f=i*j;d=c[b+72>>2]|0;}g[b+76>>2]=k;g[b+80>>2]=h;g[b+84>>2]=f;c[b+88>>2]=d;g[b+172>>2]=+g[b+172>>2]+e;return}function Ok(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if(!(JB(b,c[d+8>>2]|0)|0)){if(JB(b,c[d>>2]|0)|0){if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1;}}else ur(d,e,f);while(0);return}function Pk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if(!(JB(b,c[d+8>>2]|0)|0)){h=c[b+12>>2]|0;Pn(b+16|0,d,e,f);if((h|0)>1){g=b+24|0;do{Pn(g,d,e,f);if(a[d+54>>0]|0)break a;g=g+8|0;}while(g>>>0<(b+16+(h<<3)|0)>>>0)}}else Fm(d,e,f);while(0);return}function Qk(b,d,e,f,h){b=b|0;d=+d;e=e|0;f=f|0;h=h|0;g[b>>2]=d;c[b+4>>2]=e;c[b+72>>2]=f;c[b+76>>2]=c[h>>2];c[b+76+4>>2]=c[h+4>>2];c[b+76+8>>2]=c[h+8>>2];c[b+76+12>>2]=c[h+12>>2];g[b+92>>2]=0.0;g[b+96>>2]=0.0;g[b+100>>2]=.5;g[b+104>>2]=0.0;g[b+108>>2]=0.0;g[b+112>>2]=.800000011920929;g[b+116>>2]=1.0;a[b+120>>0]=0;g[b+124>>2]=.004999999888241291;g[b+128>>2]=.009999999776482582;g[b+132>>2]=.009999999776482582;g[b+136>>2]=.009999999776482582;rq(b+8|0);return}function Rk(b,d,e){b=b|0;d=d|0;e=e|0;b=Er(152)|0;c[b>>2]=4944;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;c[b+100>>2]=e;g[b+104>>2]=0.0;a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+116>>2]=d;c[b+120>>2]=0;c[b+124>>2]=2;c[b+128>>2]=1;g[b+112>>2]=0.0;g[b+108>>2]=0.0;return b|0}function Sk(b){b=b|0;var d=0,e=0,f=0;e=Er(5260)|0;c[e>>2]=5256;c[e+4>>2]=2;a[e+24>>0]=1;c[e+20>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+28>>2]=5728;c[e+5256>>2]=b;c[e+60>>2]=79;c[e+64>>2]=pb[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[e+68>>2]=pb[c[(c[b>>2]|0)+8>>2]&127](b)|0;b=0;do{d=0;do{f=c[e+5256>>2]|0;c[e+72+(b*144|0)+(d<<2)>>2]=zb[c[(c[f>>2]|0)+16>>2]&63](f,b,d)|0;d=d+1|0;}while((d|0)<36);b=b+1|0;}while((b|0)<36);return e|0}function Tk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+52>>2];return 17959}function Uk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+52>>2];return 17503}function Vk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+68>>2];return 16523}function Wk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=l;l=l+32|0;if(!(+g[a+344>>2]!=0.0)){l=d;return}In(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);if(!(fH(a+544|0)|0)){l=d;return}tp(d,+g[b>>2],+g[b+4>>2],+g[b+8>>2],+g[a+348>>2],+g[a+352>>2],+g[a+356>>2]);Fo(d+16|0,+g[c>>2],+g[c+4>>2],+g[c+8>>2],+g[d>>2],+g[d+4>>2],+g[d+8>>2]);Jn(a,+g[d+16>>2],+g[d+16+4>>2],+g[d+16+8>>2]);l=d;return}function Xk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;a[b+53>>0]=1;do if((c[b+4>>2]|0)==(e|0)){a[b+52>>0]=1;e=c[b+16>>2]|0;if(!e){c[b+16>>2]=d;c[b+24>>2]=f;c[b+36>>2]=1;if(!((f|0)==1?(c[b+48>>2]|0)==1:0))break;a[b+54>>0]=1;break}if((e|0)!=(d|0)){c[b+36>>2]=(c[b+36>>2]|0)+1;a[b+54>>0]=1;break}e=c[b+24>>2]|0;if((e|0)==2){c[b+24>>2]=f;e=f;}if((e|0)==1?(c[b+48>>2]|0)==1:0)a[b+54>>0]=1;}while(0);return}function Yk(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0,k=0;e=l;l=l+16|0;j=c[a+52>>2]|0;k=c[a+28+(((j+2|0)%3|0)<<2)>>2]|0;c[e>>2]=k;c[e+4>>2]=k;c[e+8>>2]=k;g[e+12>>2]=0.0;g[e+(j<<2)>>2]=+g[a+28+(j<<2)>>2]+ +g[e+(j<<2)>>2];h=(+g[e>>2]+.03999999910593033)*2.0;f=(+g[e+4>>2]+.03999999910593033)*2.0;i=(+g[e+8>>2]+.03999999910593033)*2.0;g[d>>2]=b*.0833333283662796*(f*f+i*i);g[d+4>>2]=b*.0833333283662796*(h*h+i*i);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);l=e;return}function Zk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;g=l;l=l+64|0;if(!(JB(a,b)|0))if((b|0)!=0?(f=Ri(b,2744)|0,(f|0)!=0):0){b=g+4|0;e=b+52|0;do{c[b>>2]=0;b=b+4|0;}while((b|0)<(e|0));c[g>>2]=f;c[g+8>>2]=a;c[g+12>>2]=-1;c[g+48>>2]=1;Zb[c[(c[f>>2]|0)+28>>2]&127](f,g,c[d>>2]|0,1);if((c[g+24>>2]|0)==1){c[d>>2]=c[g+16>>2];b=1;}else b=0;}else b=0;else b=1;l=g;return b|0}function _k(b,d){b=b|0;d=d|0;var e=0;e=Zr()|0;c[e+8>>2]=0;c[e+12>>2]=1065353216;c[e+16>>2]=1065353216;c[e+20>>2]=1065353216;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e+52>>2]=0;c[e+56>>2]=1065353216;c[e+60>>2]=1065353216;c[e+64>>2]=1065353216;g[e+68>>2]=0.0;c[e+72>>2]=-1082130432;c[e+76>>2]=-1082130432;c[e+80>>2]=-1082130432;g[e+84>>2]=0.0;a[e+88>>0]=0;c[e>>2]=7816;c[e+92>>2]=b;c[e+4>>2]=3;if(!d)return e|0;dj(e);return e|0}function $k(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+32>>2];h=+g[a+28>>2];i=b+(m<<4)|0;k=+g[b+(m<<4)+4>>2];f=+g[b+(m<<4)+8>>2];l=+G(+(k*k+f*f));if(l!=0.0){j=f*(e/l);f=+g[i>>2]<0.0?-h:h;e=k*(e/l);}else{j=0.0;f=+g[i>>2]<0.0?-h:h;}g[c+(m<<4)>>2]=f;g[c+(m<<4)+4>>2]=e;g[c+(m<<4)+8>>2]=j;m=m+1|0;}while((m|0)!=(d|0));return}function al(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;j=c[b>>2]|0;if(!e)e=c[a+188>>2]|0;i=c[a+268>>2]|0;if((i|0)<=0)return;h=c[a+276>>2]|0;f=0;while(1){g=h+(f<<2)|0;if((c[g>>2]|0)==(j|0))break;f=f+1|0;if((f|0)>=(i|0)){k=9;break}}if((k|0)==9)return;if((f|0)>=(i|0))return;c[g>>2]=c[h+(i+-1<<2)>>2];c[a+268>>2]=i+-1;k=c[a+284>>2]|0;tb[c[(c[k>>2]|0)+12>>2]&31](k,e,b,d)|0;return}function bl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=l;l=l+32|0;d=c[a+216>>2]|0;if(+g[d+4>>2]==0.0){d=0;l=e;return d|0}b=c[b>>2]|0;if(!(Kb[c[(c[d>>2]|0)+8>>2]&31](d,c[b+188>>2]|0)|0)){d=1;l=e;return d|0}f=c[b+192>>2]|0;d=c[a+216>>2]|0;c[e>>2]=0;c[e+4>>2]=f;c[e+8>>2]=b;c[e+12>>2]=b+4;c[e+16>>2]=-1;c[e+20>>2]=-1;Nc(a+68|0,a+132|0,e,d);d=1;l=e;return d|0}function cl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];return 11184}function dl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+12>>2]=c[a+68>>2];c[b+16>>2]=c[a+72>>2];c[b+20>>2]=c[a+76>>2];c[b+24>>2]=c[a+80>>2];c[b+28>>2]=c[a+48>>2];c[b+32>>2]=c[a+52>>2];c[b+36>>2]=c[a+56>>2];c[b+40>>2]=c[a+60>>2];c[b+44>>2]=c[a+64>>2];return 17200}function el(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;a[b+171>>0]=1;c[b+60>>2]=c[d>>2];c[b+60+4>>2]=c[d+4>>2];c[b+60+8>>2]=c[d+8>>2];c[b+60+12>>2]=c[d+12>>2];e=+g[b+60>>2];f=+g[b+64>>2];h=+g[b+68>>2];i=1.0/+G(+(e*e+f*f+h*h));if(+G(+(h*i*h*i+(e*i*e*i+f*i*f*i)))<1.1920928955078125e-07){j=0.0;f=0.0;e=0.0;d=0;}else{j=e*i;f=f*i;e=h*i;d=c[b+72>>2]|0;}g[b+76>>2]=j;g[b+80>>2]=f;g[b+84>>2]=e;c[b+88>>2]=d;return}function fl(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0;j=c[a+68>>2]|0;i=c[a+64>>2]|0;h=c[a+72>>2]|0;e=+g[a+60>>2]*(+g[b+(j<<2)>>2]/+g[a+12+(j<<2)>>2]);g[a+60>>2]=e;f=+g[a+56>>2]*(+g[b+(i<<2)>>2]/+g[a+12+(i<<2)>>2]+ +g[b+(h<<2)>>2]/+g[a+12+(h<<2)>>2])*.5;g[a+56>>2]=f;g[a+52>>2]=f/+G(+(e*e+f*f));f=+F(+(+g[b>>2]));e=+F(+(+g[b+4>>2]));d=+F(+(+g[b+8>>2]));g[a+12>>2]=f;g[a+16>>2]=e;g[a+20>>2]=d;g[a+24>>2]=0.0;return}function gl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+28>>2];i=+g[a+36>>2];k=+g[b+(m<<4)>>2];f=+g[b+(m<<4)+4>>2];l=+G(+(k*k+f*f));h=+g[b+(m<<4)+8>>2];if(l!=0.0){j=f*(e/l);f=h<0.0?-i:i;e=k*(e/l);}else{j=0.0;f=h<0.0?-i:i;}g[c+(m<<4)>>2]=e;g[c+(m<<4)+4>>2]=j;g[c+(m<<4)+8>>2]=f;m=m+1|0;}while((m|0)!=(d|0));return}function hl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+28>>2];i=+g[a+32>>2];k=+g[b+(m<<4)>>2];f=+g[b+(m<<4)+8>>2];l=+G(+(k*k+f*f));h=+g[b+(m<<4)+4>>2];if(l!=0.0){j=f*(e/l);f=h<0.0?-i:i;e=k*(e/l);}else{j=0.0;f=h<0.0?-i:i;}g[c+(m<<4)>>2]=e;g[c+(m<<4)+4>>2]=f;g[c+(m<<4)+8>>2]=j;m=m+1|0;}while((m|0)!=(d|0));return}function il(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=l;l=l+48|0;c[f+32>>2]=9064;c[f+32+4>>2]=e;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[f+16>>2]=c[d>>2];c[f+16+4>>2]=c[d+4>>2];c[f+16+8>>2]=c[d+8>>2];c[f+16+12>>2]=c[d+12>>2];Xe(c[a+4>>2]|0,f,f+32|0);Xe(c[a+64>>2]|0,f,f+32|0);l=f;return}function jl(b){b=b|0;var d=0;d=c[b>>2]|0;if(d|0)Sm(b,d);d=c[b+4>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+4>>2]=0;c[b+8>>2]=-1;d=c[b+32>>2]|0;if(!d){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;d=b+28|0;c[d>>2]=0;b=b+16|0;c[b>>2]=0;return}if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;d=b+28|0;c[d>>2]=0;b=b+16|0;c[b>>2]=0;return}function kl(b,d){b=b|0;d=+d;var e=0,f=0,h=0.0;d=1.0/+g[(c[b+116>>2]|0)+344>>2];if((c[b+136>>2]|0)<=0)return;e=0;do{f=c[b+144>>2]|0;if(!(a[f+(e*284|0)+84>>0]|0))h=0.0;else{h=+g[f+(e*284|0)+272>>2];h=d*(+g[f+(e*284|0)+216>>2]*(+g[f+(e*284|0)+204>>2]-+g[f+(e*284|0)+32>>2])*+g[f+(e*284|0)+268>>2]-h*+g[(h<0.0?f+(e*284|0)+220|0:f+(e*284|0)+224|0)>>2]);h=h<0.0?0.0:h;}g[f+(e*284|0)+276>>2]=h;e=e+1|0;}while((e|0)<(c[b+136>>2]|0));return}function ll(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0,f=0.0,h=0.0,i=0.0;e=l;l=l+48|0;f=+VG(b);h=+VG(c);i=+VG(d);b=+UG(b);c=+UG(c);d=+UG(d);g[e+32>>2]=h*i;g[e+28>>2]=c*b*i-f*d;g[e+24>>2]=c*f*i+b*d;g[e+20>>2]=h*d;g[e+16>>2]=c*b*d+f*i;g[e+12>>2]=c*f*d-b*i;g[e+8>>2]=-c;g[e+4>>2]=h*b;g[e>>2]=h*f;Qo(a,e+32|0,e+28|0,e+24|0,e+20|0,e+16|0,e+12|0,e+8|0,e+4|0,e);l=e;return}function ml(a,d,f,g,h,i){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;j=c[a+108>>2]|0;if(j|0){Bb[c[(c[j>>2]|0)+24>>2]&7](j,d,f,g,h,i);return}d=b[a+56>>1]|0;if(!(d<<16>>16))return;h=1;i=1;do{f=c[a+68>>2]|0;if(b[f+(i<<2)>>1]&1){Kb[c[(c[g>>2]|0)+8>>2]&31](g,(c[a+60>>2]|0)+((e[f+(i<<2)+2>>1]|0)<<6)|0)|0;d=b[a+56>>1]|0;}h=h+1<<16>>16;i=h&65535;}while(i>>>0<((d&65535)<<1|1)>>>0);return}function nl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,80)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5632;a[b+8>>0]=1;c[b+12>>2]=5680;c[b+60>>2]=d;c[b+64>>2]=0;c[b+16>>2]=f;c[b+20>>2]=e;f=zb[c[(c[d>>2]|0)+12>>2]&63](d,c[f+8>>2]|0,c[e+8>>2]|0)|0;c[b+76>>2]=f;e=c[b+60>>2]|0;nb[c[(c[e>>2]|0)+20>>2]&127](e,f);return b|0}function ol(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0.0;e=+g[a+28>>2];i=+g[a+32>>2];h=+g[a+36>>2];switch(d|0){case 0:{a=0;d=0;f=1065353216;break}case 1:{a=0;d=0;f=-1082130432;break}case 2:{a=0;d=1065353216;f=0;e=i;break}case 3:{a=0;d=-1082130432;f=0;e=i;break}case 4:{a=1065353216;d=0;f=0;e=h;break}case 5:{a=-1082130432;d=0;f=0;e=h;break}default:return}c[b>>2]=f;c[b+4>>2]=d;c[b+8>>2]=a;g[b+12>>2]=-e;return}function pl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,80)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5632;a[b+8>>0]=0;c[b+12>>2]=5680;c[b+60>>2]=d;c[b+64>>2]=0;c[b+16>>2]=e;c[b+20>>2]=f;f=zb[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;c[b+76>>2]=f;e=c[b+60>>2]|0;nb[c[(c[e>>2]|0)+20>>2]&127](e,f);return b|0}function ql(b){b=b|0;var d=0;c[b>>2]=5212;d=c[b+284>>2]|0;lb[c[c[d>>2]>>2]&511](d);d=c[b+284>>2]|0;if(d|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b>>2]=5168;d=c[b+276>>2]|0;if(!d){a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;d=b+272|0;c[d>>2]=0;c[b>>2]=5132;return}if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+276>>2]=0;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;d=b+272|0;c[d>>2]=0;c[b>>2]=5132;return}function rl(a){a=a|0;var b=0,d=0,e=0,f=0.0,h=0.0;e=c[a+232>>2]|0;if((e|0)<=0)return;b=c[a+240>>2]|0;a=0;do{d=c[b+(a<<2)>>2]|0;switch(c[d+216>>2]|0){case 2:case 5:break;default:if(!(c[d+204>>2]&3)){h=+g[d+368>>2]*+g[d+352>>2];f=+g[d+372>>2]*+g[d+356>>2];g[d+412>>2]=+g[d+364>>2]*+g[d+348>>2]+ +g[d+412>>2];g[d+416>>2]=h+ +g[d+416>>2];g[d+420>>2]=f+ +g[d+420>>2];}}a=a+1|0;}while((a|0)!=(e|0));return}function sl(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,m=0.0;c=l;l=l+16|0;m=+g[a+12>>2];i=+g[(fH(b)|0)>>2];j=+g[a>>2];k=+g[b+12>>2];h=+g[a+4>>2];d=+g[(LG(b)|0)>>2];e=+g[a+8>>2];f=+g[(MG(b)|0)>>2];g[c+12>>2]=m*i+j*k+h*d-e*f;g[c+8>>2]=m*f+h*k+e*i-j*d;g[c+4>>2]=m*d+e*k+j*f-h*i;g[c>>2]=m*k-j*i-h*f-e*d;lr(a,c+12|0,c+8|0,c+4|0,c);l=c;return a|0}function tl(b){b=b|0;var d=0;d=Zr()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+52>>2]=0;c[d+56>>2]=1065353216;c[d+60>>2]=1065353216;c[d+64>>2]=1065353216;g[d+68>>2]=0.0;c[d+72>>2]=-1082130432;c[d+76>>2]=-1082130432;c[d+80>>2]=-1082130432;g[d+84>>2]=0.0;a[d+88>>0]=0;c[d>>2]=7816;c[d+92>>2]=b;c[d+4>>2]=3;dj(d);return d|0}function ul(a,b){a=a|0;b=+b;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0;h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);e=+Db[c[(c[a>>2]|0)+48>>2]&15](a);i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);h=h+ +g[a+28>>2];e=e+ +g[a+32>>2];i=i+ +g[a+36>>2];g[a+44>>2]=b;f=+Db[c[(c[a>>2]|0)+48>>2]&15](a);d=+Db[c[(c[a>>2]|0)+48>>2]&15](a);b=i-+Db[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=h-f;g[a+32>>2]=e-d;g[a+36>>2]=b;g[a+40>>2]=0.0;return}function vl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((c[a+8>>2]|0)<=0)return;e=0;a:while(1){while(1){f=c[a+16>>2]|0;g=f+(e<<4)|0;if(!(Kb[c[(c[b>>2]|0)+8>>2]&31](b,g)|0))break;tb[c[(c[a>>2]|0)+12>>2]&31](a,c[g>>2]|0,c[f+(e<<4)+4>>2]|0,d)|0;c[6164]=(c[6164]|0)+-1;if((e|0)>=(c[a+8>>2]|0)){e=7;break a}}e=e+1|0;if((e|0)>=(c[a+8>>2]|0)){e=7;break}}if((e|0)==7)return}function wl(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;f=(a[b+16>>0]|0)!=0;h=c[(f?e:d)+8>>2]|0;f=f?d:e;g=c[f+8>>2]|0;d=c[h+268>>2]|0;a:do if((d|0)>0){e=c[h+276>>2]|0;b=0;while(1){if((c[e+(b<<2)>>2]|0)==(g|0))break;b=b+1|0;if((b|0)>=(d|0))break a}if((b|0)!=(d|0))return}while(0);e=c[h+284>>2]|0;Vb[c[(c[e>>2]|0)+36>>2]&127](e,h,f);return}function xl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,16)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5700;a[b+8>>0]=0;c[b+12>>2]=0;if(!(zb[c[(c[d>>2]|0)+24>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0))return b|0;d=c[b+4>>2]|0;c[b+12>>2]=zb[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[b+8>>0]=1;return b|0}function yl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);f=+Db[c[(c[a>>2]|0)+48>>2]&15](a);k=+g[b+52>>2]-h;j=+g[b+56>>2]-f;g[d>>2]=+g[b+48>>2]-i;g[d+4>>2]=k;g[d+8>>2]=j;g[d+12>>2]=0.0;h=h+ +g[b+52>>2];f=f+ +g[b+56>>2];g[e>>2]=i+ +g[b+48>>2];g[e+4>>2]=h;g[e+8>>2]=f;g[e+12>>2]=0.0;return}function zl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=c[a+720>>2]|0;h=c[a+732>>2]|0;if((h|0)<=0){h=0;return h|0}e=c[a+740>>2]|0;a=0;while(1){f=c[e+(a*52|0)+8>>2]|0;if((f|0)==(g+(b*104|0)|0)?(c[e+(a*52|0)+12>>2]|0)==(g+(d*104|0)|0):0){a=1;e=8;break}if((f|0)==(g+(d*104|0)|0)?(c[e+(a*52|0)+12>>2]|0)==(g+(b*104|0)|0):0){a=1;e=8;break}a=a+1|0;if((a|0)>=(h|0)){a=0;e=8;break}}if((e|0)==8)return a|0;return 0}function Al(a){a=a|0;var b=0,d=0,e=0.0,f=0.0;if((c[a+136>>2]|0)<=0)return;b=0;do{d=c[a+144>>2]|0;c[d+(b*284|0)+32>>2]=c[d+(b*284|0)+204>>2];g[d+(b*284|0)+272>>2]=0.0;f=-+g[d+(b*284|0)+56>>2];e=-+g[d+(b*284|0)+60>>2];g[d+(b*284|0)>>2]=-+g[d+(b*284|0)+52>>2];g[d+(b*284|0)+4>>2]=f;g[d+(b*284|0)+8>>2]=e;g[d+(b*284|0)+12>>2]=0.0;g[d+(b*284|0)+268>>2]=1.0;b=b+1|0;}while((b|0)<(c[a+136>>2]|0));return}function Bl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=c[d>>2]|0;g=Kb[c[(c[g>>2]|0)+56>>2]&31](g,20)|0;h=c[d+4>>2]|0;i=a[b+4>>0]|0;b=c[d>>2]|0;c[g+4>>2]=b;c[g>>2]=6128;a[g+8>>0]=0;c[g+12>>2]=h;a[g+16>>0]=i;if(h|0)return g|0;c[g+12>>2]=zb[c[(c[b>>2]|0)+12>>2]&63](b,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[g+8>>0]=1;return g|0}function Cl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,44)|0;c[b+4>>2]=c[d>>2];c[b>>2]=6288;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;a[b+28>>0]=1;c[b+32>>2]=c[d+4>>2];a[b+36>>0]=0;c[b+40>>2]=c[(c[f+4>>2]|0)+68>>2];Pg(b,e,f);return b|0}function Dl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,44)|0;c[b+4>>2]=c[d>>2];c[b>>2]=6288;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;a[b+28>>0]=0;c[b+32>>2]=c[d+4>>2];a[b+36>>0]=0;c[b+40>>2]=c[(c[e+4>>2]|0)+68>>2];Pg(b,e,f);return b|0}function El(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;f=c[d>>2]|0;f=Kb[c[(c[f>>2]|0)+56>>2]&31](f,36)|0;h=c[d+4>>2]|0;j=c[b+12>>2]|0;i=c[b+8>>2]|0;g=c[b+16>>2]|0;e=c[b+20>>2]|0;c[f+4>>2]=c[d>>2];c[f>>2]=6176;c[f+8>>2]=j;c[f+12>>2]=i;a[f+16>>0]=0;c[f+20>>2]=h;a[f+24>>0]=0;c[f+28>>2]=g;c[f+32>>2]=e;return f|0}function Fl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=l;l=l+48|0;c[f>>2]=7152;c[f+4>>2]=b;c[f+8>>2]=c[d>>2];c[f+8+4>>2]=c[d+4>>2];c[f+8+8>>2]=c[d+8>>2];c[f+8+12>>2]=c[d+12>>2];c[f+24>>2]=c[e>>2];c[f+24+4>>2]=c[e+4>>2];c[f+24+8>>2]=c[e+8>>2];c[f+24+12>>2]=c[e+12>>2];b=c[a+48>>2]|0;Zb[c[(c[b>>2]|0)+8>>2]&127](b,f,d,e);l=f;return}function Gl(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;i=+g[a+28>>2];f=+g[a+32>>2];j=+g[a+36>>2];h=+Db[c[(c[a>>2]|0)+48>>2]&15](a);e=+Db[c[(c[a>>2]|0)+48>>2]&15](a);j=(j+ +Db[c[(c[a>>2]|0)+48>>2]&15](a))*2.0;g[d>>2]=b/12.0*((f+e)*2.0*(f+e)*2.0+j*j);g[d+4>>2]=b/12.0*((i+h)*2.0*(i+h)*2.0+j*j);g[d+8>>2]=b/12.0*((i+h)*2.0*(i+h)*2.0+(f+e)*2.0*(f+e)*2.0);g[d+12>>2]=0.0;return}function Hl(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0.0,h=0.0,i=0.0;d=ks()|0;c[d+4>>2]=35;c[d+8>>2]=0;g[d+12>>2]=0.0;c[d>>2]=7172;i=+g[a>>2];h=+g[a+4>>2];f=+g[a+8>>2];a=c[a+12>>2]|0;e=1.0/+G(+(i*i+h*h+f*f));g[d+48>>2]=i*e;g[d+52>>2]=h*e;g[d+56>>2]=f*e;c[d+60>>2]=a;g[d+64>>2]=b;c[d+68>>2]=0;c[d+68+4>>2]=0;c[d+68+8>>2]=0;c[d+68+12>>2]=0;c[d+4>>2]=28;return d|0}function Il(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=l;l=l+32|0;Cp(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);tp(d,+g[b>>2],+g[b+4>>2],+g[b+8>>2],+g[a+348>>2],+g[a+352>>2],+g[a+356>>2]);Fo(d+16|0,+g[c>>2],+g[c+4>>2],+g[c+8>>2],+g[d>>2],+g[d+4>>2],+g[d+8>>2]);Hp(a,+g[d+16>>2],+g[d+16+4>>2],+g[d+16+8>>2]);l=d;return}function Jl(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+64|0;c[d>>2]=1065353216;c[d+4>>2]=0;c[d+4+4>>2]=0;c[d+4+8>>2]=0;c[d+4+12>>2]=0;c[d+20>>2]=1065353216;c[d+24>>2]=0;c[d+24+4>>2]=0;c[d+24+8>>2]=0;c[d+24+12>>2]=0;c[d+40>>2]=1065353216;c[d+44>>2]=0;c[d+48>>2]=c[b>>2];c[d+48+4>>2]=c[b+4>>2];c[d+48+8>>2]=c[b+8>>2];c[d+48+12>>2]=c[b+12>>2];Bd(a,d);l=d;return}function Kl(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;var f=0,h=0;f=l;l=l+16|0;h=bF(b,0)|0;g[f+8>>2]=+bx(+g[h>>2],+g[h+4>>2],+g[h+8>>2],c,d,e);h=bF(b,1)|0;g[f+4>>2]=+bx(+g[h>>2],+g[h+4>>2],+g[h+8>>2],c,d,e);b=bF(b,2)|0;g[f>>2]=+bx(+g[b>>2],+g[b+4>>2],+g[b+8>>2],c,d,e);Xr(a,f+8|0,f+4|0,f);l=f;return}function Ll(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0?1:(c[d+236>>2]&2|0)==0){g=1;return g|0}g=c[b+488>>2]|0;if((g|0)<=0){g=1;return g|0}e=c[b+496>>2]|0;b=0;while(1){f=c[e+(b<<2)>>2]|0;if(a[f+20>>0]|0){if((c[f+28>>2]|0)==(d|0)){b=0;e=8;break}if((c[f+32>>2]|0)==(d|0)){b=0;e=8;break}}b=b+1|0;if((b|0)>=(g|0)){b=1;e=8;break}}if((e|0)==8)return b|0;return 0}function Ml(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;j=+g[a+28>>2];h=+g[a+32>>2];e=+g[a+36>>2];i=+Db[c[(c[a>>2]|0)+48>>2]&15](a);f=+Db[c[(c[a>>2]|0)+48>>2]&15](a);e=e+ +Db[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=+(b&1^1|0)*(j+i)-+(b&1|0)*(j+i);g[d+4>>2]=+(b>>>1&1^1|0)*(h+f)-+(b>>>1&1|0)*(h+f);g[d+8>>2]=+(b>>>2&1^1|0)*e-+(b>>>2&1|0)*e;g[d+12>>2]=0.0;return}function Nl(b,d){b=b|0;d=d|0;if((c[b+16>>2]|0)!=(0-(c[b+76>>2]|0)|0))return;jl(b+4|0);jl(b+64|0);a[b+193>>0]=0;a[b+194>>0]=1;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+124>>2]=0;c[b+124+4>>2]=0;c[b+124+8>>2]=0;c[b+168>>2]=0;c[b+168+4>>2]=0;c[b+168+8>>2]=0;c[b+168+12>>2]=0;c[b+168+16>>2]=0;c[b+168+20>>2]=0;return}function Ol(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;var f=0,h=0,i=0,j=0;f=l;l=l+16|0;j=bF(b,0)|0;i=bF(b,1)|0;h=bF(b,2)|0;vm(f,c,d,e,+g[j>>2],+g[j+4>>2],+g[j+8>>2],+g[i>>2],+g[i+4>>2],+g[i+8>>2],+g[h>>2],+g[h+4>>2],+g[h+8>>2]);sp(a,+g[f>>2],+g[f+4>>2],+g[f+8>>2],+g[b+48>>2],+g[b+52>>2],+g[b+56>>2]);l=f;return}function Pl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;i=+g[b+28>>2];j=+g[b+32>>2];e=+g[b+36>>2];h=+Db[c[(c[b>>2]|0)+48>>2]&15](b);f=+Db[c[(c[b>>2]|0)+48>>2]&15](b);e=e+ +Db[c[(c[b>>2]|0)+48>>2]&15](b);f=+g[d+4>>2]>=0.0?j+f:-(j+f);e=+g[d+8>>2]>=0.0?e:-e;g[a>>2]=+g[d>>2]>=0.0?i+h:-(i+h);g[a+4>>2]=f;g[a+8>>2]=e;g[a+12>>2]=0.0;return}function Ql(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0;if((d|0)<=0)return;e=0;do{i=+g[a+28>>2];h=+g[a+32>>2];h=+g[b+(e<<4)+4>>2]>=0.0?h:-h;f=+g[a+36>>2];f=+g[b+(e<<4)+8>>2]>=0.0?f:-f;g[c+(e<<4)>>2]=+g[b+(e<<4)>>2]>=0.0?i:-i;g[c+(e<<4)+4>>2]=h;g[c+(e<<4)+8>>2]=f;g[c+(e<<4)+12>>2]=0.0;e=e+1|0;}while((e|0)!=(d|0));return}function Rl(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;a=c[a+32>>2]|0;c[d>>2]=c[a+(k<<5)+12>>2];c[b>>2]=c[a+(k<<5)+16>>2];c[e>>2]=c[a+(k<<5)+28>>2];c[f>>2]=c[a+(k<<5)+20>>2];c[i>>2]=c[a+(k<<5)>>2];c[g>>2]=c[a+(k<<5)+4>>2];c[h>>2]=c[a+(k<<5)+8>>2];c[j>>2]=c[a+(k<<5)+24>>2];return}function Sl(b){b=b|0;var d=0,e=0;c[b>>2]=6416;d=c[b+64>>2]|0;if(d|0?(Rh(d),e=c[b+64>>2]|0,e|0):0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}d=c[b+24>>2]|0;if(!d){a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;b=b+20|0;c[b>>2]=0;return}if(a[b+28>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+24>>2]=0;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;b=b+20|0;c[b>>2]=0;return}function Tl(b){b=b|0;var d=0,e=0;c[b>>2]=7380;d=c[b+104>>2]|0;if(d|0){if(a[b+108>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+104>>2]=0;}a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b>>2]=7248;d=c[b+52>>2]|0;if(d|0?(lb[c[c[d>>2]>>2]&511](d),e=c[b+52>>2]|0,e|0):0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function Ul(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;switch(b|0){case 0:{a=0;b=0;e=1065353216;break}case 1:{a=0;b=0;e=-1082130432;break}case 2:{a=0;b=1065353216;e=0;break}case 3:{a=0;b=-1082130432;e=0;break}case 4:{a=1065353216;b=0;e=0;break}case 5:{a=-1082130432;b=0;e=0;break}default:return}c[d>>2]=e;c[d+4>>2]=b;c[d+8>>2]=a;g[d+12>>2]=0.0;return}function Vl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;c[b+4>>2]=c[d>>2];c[b+4+4>>2]=c[d+4>>2];c[b+4+8>>2]=c[d+8>>2];c[b+4+12>>2]=c[d+12>>2];c[b+20>>2]=c[e>>2];c[b+20+4>>2]=c[e+4>>2];c[b+20+8>>2]=c[e+8>>2];c[b+20+12>>2]=c[e+12>>2];g[b+36>>2]=f;a[b+40>>0]=1;return}function Wl(a,e,f){a=a|0;e=e|0;f=f|0;var h=0.0;switch(c[a+96>>2]|0){case 0:{h=+g[(c[a+92>>2]|0)+((S(c[a+64>>2]|0,f)|0)+e<<2)>>2];return +h}case 5:{h=+(d[(c[a+92>>2]|0)+((S(c[a+64>>2]|0,f)|0)+e)>>0]|0)*+g[a+88>>2];return +h}case 3:{h=+(b[(c[a+92>>2]|0)+((S(c[a+64>>2]|0,f)|0)+e<<1)>>1]|0)*+g[a+88>>2];return +h}default:{h=0.0;return +h}}return 0.0}function Xl(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=l;l=l+32|0;c=+g[b+12>>2];if(1.0-c*c<1.1920928955078125e-06){g[d+20>>2]=1.0;g[d+16>>2]=0.0;g[d+12>>2]=0.0;Xr(a,d+20|0,d+16|0,d+12|0);l=d;return}else{c=1.0/+TG(1.0-c*c);g[d+8>>2]=+g[b>>2]*c;g[d+4>>2]=+g[b+4>>2]*c;g[d>>2]=+g[b+8>>2]*c;Xr(a,d+8|0,d+4|0,d);l=d;return}}function Yl(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;d=l;l=l+16|0;c[d>>2]=9100;c[d+4>>2]=e;ne(a+4|0,c[a+4>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);ne(a+64|0,c[a+64>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);l=d;return}function Zl(b){b=b|0;var d=0;c[b>>2]=7380;d=c[b+104>>2]|0;if(d|0){if(a[b+108>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+104>>2]=0;}a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b>>2]=7248;d=c[b+52>>2]|0;if(!d)return;lb[c[c[d>>2]>>2]&511](d);d=c[b+52>>2]|0;if(!d)return;c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);return}function _l(a,b){a=+a;b=b|0;var d=0,e=0,f=0;h[j>>3]=a;d=c[j>>2]|0;e=c[j+4>>2]|0;f=Ct(d|0,e|0,52)|0;switch(f&2047){case 0:{if(a!=0.0){a=+_l(a*18446744073709551616.0,b);d=(c[b>>2]|0)+-64|0;}else d=0;c[b>>2]=d;break}case 2047:break;default:{c[b>>2]=(f&2047)+-1022;c[j>>2]=d;c[j+4>>2]=e&-2146435073|1071644672;a=+h[j>>3];}}return +a}function $l(a,b){a=+a;b=+b;var d=0;d=Cs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;g[d+52>>2]=a/+G(+(a*a+b*b));c[d>>2]=6596;c[d+64>>2]=0;c[d+68>>2]=2;c[d+72>>2]=1;g[d+28>>2]=a;g[d+36>>2]=b;g[d+32>>2]=a;return d|0}function am(a,b){a=+a;b=+b;var d=0;d=Cs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;g[d+52>>2]=a/+G(+(a*a+b*b));c[d>>2]=6696;c[d+64>>2]=1;c[d+68>>2]=0;c[d+72>>2]=2;g[d+32>>2]=a;g[d+28>>2]=b;g[d+36>>2]=a;return d|0}function bm(a,b){a=+a;b=+b;var d=0;d=Cs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d>>2]=6496;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;c[d+64>>2]=0;c[d+68>>2]=1;c[d+72>>2]=2;g[d+28>>2]=a;g[d+32>>2]=b;g[d+36>>2]=a;g[d+52>>2]=a/+G(+(a*a+b*b));return d|0}function cm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0;e=l;l=l+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+16>>2];if(!(c[b+4>>2]|0))c[b+4>>2]=e;g=c[a+12>>2]|0;f=+Lb[c[(c[g>>2]|0)+12>>2]&15](g,b,d);c[a+4>>2]=c[(c[a+12>>2]|0)+4>>2];l=e;return +f}function dm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=fH(c[a+4>>2]|0)|0;if((e|0)>(b|0)){c[a+4>>2]=b;return}if((e|0)<(b|0))vn(a,b);while(1){if((e|0)>=(b|0))break;f=(c[a+12>>2]|0)+(e*104|0)|0;g=d;h=f+104|0;do{c[f>>2]=c[g>>2];f=f+4|0;g=g+4|0;}while((f|0)<(h|0));e=e+1|0;}c[a+4>>2]=b;return}function em(b,e){b=b|0;e=e|0;var f=0,g=0;g=0;while(1){if((d[19511+g>>0]|0)==(b|0)){b=2;break}f=g+1|0;if((f|0)==87){f=19599;g=87;b=5;break}else g=f;}if((b|0)==2)if(!g)f=19599;else{f=19599;b=5;}if((b|0)==5)while(1){do{b=f;f=f+1|0;}while((a[b>>0]|0)!=0);g=g+-1|0;if(!g)break;else b=5;}return mF(f,c[e+20>>2]|0)|0}function fm(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+16|0;c[a+348>>2]=c[b>>2];c[a+348+4>>2]=c[b+4>>2];c[a+348+8>>2]=c[b+8>>2];c[a+348+12>>2]=c[b+12>>2];Xp(d,+g[a+348>>2],+g[a+352>>2],+g[a+356>>2],+g[a+344>>2]);c[a+560>>2]=c[d>>2];c[a+560+4>>2]=c[d+4>>2];c[a+560+8>>2]=c[d+8>>2];c[a+560+12>>2]=c[d+12>>2];l=d;return}function gm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=c[a+268>>2]|0;if((g|0)<=0)return;b=c[b>>2]|0;f=c[a+276>>2]|0;d=0;while(1){e=f+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(g|0)){h=7;break}}if((h|0)==7)return;if((d|0)>=(g|0))return;c[e>>2]=c[f+(g+-1<<2)>>2];c[a+268>>2]=g+-1;return}function hm(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0,f=0.0,h=0.0,i=0.0;e=l;l=l+16|0;f=+VG(b*.5);b=+UG(b*.5);h=+VG(c*.5);c=+UG(c*.5);i=+VG(d*.5);d=+UG(d*.5);g[e+12>>2]=d*h*f-i*c*b;g[e+8>>2]=i*c*f+d*h*b;g[e+4>>2]=i*h*b-d*c*f;g[e>>2]=i*h*f+d*c*b;lr(a,e+12|0,e+8|0,e+4|0,e);l=e;return}function im(a){a=a|0;var b=0;b=l;l=l+32|0;g[a>>2]=1.2000000476837158;g[a+4>>2]=0.0;g[a+8>>2]=0.0;g[a+12>>2]=1.0e3;g[b+20>>2]=0.0;g[b+16>>2]=0.0;g[b+12>>2]=0.0;Xr(a+16|0,b+20|0,b+16|0,b+12|0);c[a+32>>2]=0;c[a+36>>2]=0;g[b+8>>2]=0.0;g[b+4>>2]=-10.0;g[b>>2]=0.0;Xr(a+40|0,b+8|0,b+4|0,b);IA(a+56|0);l=b;return}function jm(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295){while(1){e=Br(b|0,c|0,10,0)|0;d=d+-1|0;a[d>>0]=e&255|48;e=b;b=Oz(b|0,c|0,10,0)|0;if(!(c>>>0>9|(c|0)==9&e>>>0>4294967295))break;else c=D;}c=b;}else c=b;if(c)while(1){d=d+-1|0;a[d>>0]=(c>>>0)%10|0|48;if(c>>>0<10)break;else c=(c>>>0)/10|0;}return d|0}function km(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;c[a>>2]=b;c[a+4>>2]=d;c[a+8>>2]=c[e>>2];c[a+8+4>>2]=c[e+4>>2];c[a+8+8>>2]=c[e+8>>2];c[a+8+12>>2]=c[e+12>>2];c[a+24>>2]=c[f>>2];c[a+24+4>>2]=c[f+4>>2];c[a+24+8>>2]=c[f+8>>2];c[a+24+12>>2]=c[f+12>>2];g[a+40>>2]=h;return}function lm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+280>>2]|0;if((f|0)<=0)return;g=c[a+288>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=7;break}}if((h|0)==7)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+288>>2]|0)+(f+-1<<2)>>2]=b;c[a+280>>2]=f+-1;return}function mm(){var b=0;b=l;l=l+48|0;if(a[22584]|0){l=b;return}if(!(iy(22584)|0)){l=b;return}g[b+32>>2]=1.0;g[b+28>>2]=0.0;g[b+24>>2]=0.0;g[b+20>>2]=0.0;g[b+16>>2]=1.0;g[b+12>>2]=0.0;g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=1.0;_p(22912,b+32|0,b+28|0,b+24|0,b+20|0,b+16|0,b+12|0,b+8|0,b+4|0,b);l=b;return}function nm(){var b=0,e=0,f=0;f=l;l=l+16|0;a[f>>0]=10;b=c[2394]|0;if(!b)if(!(ho(9560)|0)){b=c[2394]|0;e=4;}else b=-1;else e=4;do if((e|0)==4){e=c[2395]|0;if(!(e>>>0>=b>>>0|(a[9635]|0)==10)){c[2395]=e+1;a[e>>0]=10;b=10;break}if((zb[c[9596>>2]&63](9560,f,1)|0)==1)b=d[f>>0]|0;else b=-1;}while(0);l=f;return b|0}function om(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0;e=l;l=l+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+24>>2];if(!(c[b+4>>2]|0))c[b+4>>2]=e;g=c[a+20>>2]|0;f=+Lb[c[(c[g>>2]|0)+12>>2]&15](g,b,d);c[a+4>>2]=c[(c[a+20>>2]|0)+4>>2];l=e;return +f}function pm(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0.0;d=l;l=l+16|0;e=+dz(+g[b>>2],+g[b+4>>2],+g[b+8>>2]);e=+UG(c*.5)/e;g[d+12>>2]=+g[(fH(b)|0)>>2]*e;g[d+8>>2]=+g[(MG(b)|0)>>2]*e;g[d+4>>2]=+g[(LG(b)|0)>>2]*e;g[d>>2]=+VG(c*.5);lr(a,d+12|0,d+8|0,d+4|0,d);l=d;return}function qm(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];c[a+16>>2]=c[b+16>>2];c[a+16+4>>2]=c[b+16+4>>2];c[a+16+8>>2]=c[b+16+8>>2];c[a+16+12>>2]=c[b+16+12>>2];c[a+32>>2]=c[b+32>>2];c[a+32+4>>2]=c[b+32+4>>2];c[a+32+8>>2]=c[b+32+8>>2];c[a+32+12>>2]=c[b+32+12>>2];return}function rm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(b|0){case 2:case 1:{if(c>>>0<3){d=+g[a+600>>2];break a}if((c+-3|0)>>>0<3)d=+g[a+432>>2];else d=0.0;break}case 4:case 3:{if(c>>>0<3){d=+g[a+596>>2];break a}if((c+-3|0)>>>0<3)d=+g[a+604>>2];else d=0.0;break}default:d=0.0;}while(0);return +d}function sm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Kb[c[(c[b>>2]|0)+56>>2]&31](b,16)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=9380;a[b+8>>0]=0;c[b+12>>2]=0;c[b+12>>2]=zb[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[b+8>>0]=1;return b|0}function tm(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+56>>2]|0;if(!d)return;e=pb[c[(c[d>>2]|0)+8>>2]&127](d)|0;e=zb[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=c[a+56>>2]|0;d=zb[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1346456916,c[a+56>>2]|0);return}function um(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+52>>2]|0;if(!d)return;e=pb[c[(c[d>>2]|0)+12>>2]&127](d)|0;e=zb[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=c[a+52>>2]|0;d=zb[c[(c[d>>2]|0)+16>>2]&63](d,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1213612625,c[a+52>>2]|0);return}function vm(a,b,c,d,e,f,h,i,j,k,m,n,o){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=+j;k=+k;m=+m;n=+n;o=+o;var p=0;p=l;l=l+16|0;g[p+8>>2]=+bx(b,c,d,e,f,h);g[p+4>>2]=+bx(b,c,d,i,j,k);g[p>>2]=+bx(b,c,d,m,n,o);Xr(a,p+8|0,p+4|0,p);l=p;return}function wm(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0,f=0.0,h=0.0;e=+g[a+28>>2];f=+g[a+32>>2];h=+g[a+36>>2];d=+g[b>>2];if(!(d<=e+c)){b=0;return b|0}if(!(d>=-e-c)){b=0;return b|0}d=+g[b+4>>2];if(!(d<=f+c)){b=0;return b|0}if(!(d>=-f-c)){b=0;return b|0}d=+g[b+8>>2];if(!(d<=h+c)){b=0;return b|0}b=d>=-h-c;return b|0}function xm(a,b,d){a=a|0;b=b|0;d=d|0;gv(a);c[a>>2]=3076;c[a+12>>2]=c[b>>2];c[a+12+4>>2]=c[b+4>>2];c[a+12+8>>2]=c[b+8>>2];c[a+12+12>>2]=c[b+12>>2];c[a+28>>2]=c[d>>2];c[a+28+4>>2]=c[d+4>>2];c[a+28+8>>2]=c[d+8>>2];c[a+28+12>>2]=c[d+12>>2];c[a+76>>2]=0;return}function ym(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;if(!(+g[b+36>>2]>f))return;a[b+40>>0]=1;c[b+4>>2]=c[d>>2];c[b+4+4>>2]=c[d+4>>2];c[b+4+8>>2]=c[d+8>>2];c[b+4+12>>2]=c[d+12>>2];c[b+20>>2]=c[e>>2];c[b+20+4>>2]=c[e+4>>2];c[b+20+8>>2]=c[e+8>>2];c[b+20+12>>2]=c[e+12>>2];g[b+36>>2]=f;return}function zm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=+g[b+28>>2];i=+g[b+36>>2];k=+g[c>>2];e=+g[c+4>>2];j=+G(+(k*k+e*e));f=+g[c+8>>2];if(j!=0.0){h=e*(d/j);e=f<0.0?-i:i;d=k*(d/j);}else{h=0.0;e=f<0.0?-i:i;}g[a>>2]=d;g[a+8>>2]=e;g[a+4>>2]=h;return}function Am(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=+g[b+28>>2];i=+g[b+32>>2];k=+g[c>>2];e=+g[c+8>>2];j=+G(+(k*k+e*e));f=+g[c+4>>2];if(j!=0.0){h=e*(d/j);e=f<0.0?-i:i;d=k*(d/j);}else{h=0.0;e=f<0.0?-i:i;}g[a>>2]=d;g[a+4>>2]=e;g[a+8>>2]=h;return}function Bm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;d=+g[b+32>>2];f=+g[b+28>>2];j=+g[c+4>>2];e=+g[c+8>>2];i=+G(+(j*j+e*e));if(i!=0.0){h=e*(d/i);e=+g[c>>2]<0.0?-f:f;d=j*(d/i);}else{h=0.0;e=+g[c>>2]<0.0?-f:f;}g[a+4>>2]=d;g[a>>2]=e;g[a+8>>2]=h;return}function Cm(a,b){a=a|0;b=+b;var c=0,d=0.0;c=l;l=l+16|0;if(!(+g[a+68>>2]>0.0)){l=c;return}d=-+g[a+92>>2];b=-+g[a+96>>2];g[c>>2]=-+g[a+88>>2];g[c+4>>2]=d;g[c+8>>2]=b;g[c+12>>2]=0.0;Ni(a+4|0,c,a+164|0);Ni(a+16|0,a+88|0,a+180|0);l=c;return}function Dm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0;if((d|0)>-1|(d|0)==-1&c>>>0>4294967295){e=(+(c>>>0)+4294967296.0*+(d>>>0))*18446744073709551616.0+(+(a>>>0)+4294967296.0*+(b>>>0));return +e}else{g=Wt(0,0,a|0,b|0)|0;f=D;d=xv((a|0)==0&(b|0)==0&1|0,0,~c|0,~d|0)|0;e=-+Dm(g,f,d,D);return +e}return 0.0}function Em(a){a=a|0;var b=0.0,d=0.0,e=0.0;d=+g[(c[a+28>>2]|0)+344>>2];e=+g[(c[a+32>>2]|0)+344>>2];e=e==0.0?1.0:d/(d+e);d=+g[a+1116>>2]*e+(1.0-e)*+g[a+1180>>2];b=e*+g[a+1120>>2]+(1.0-e)*+g[a+1184>>2];g[a+1284>>2]=+g[a+1112>>2]*e+ +g[a+1176>>2]*(1.0-e);g[a+1288>>2]=d;g[a+1292>>2]=b;g[a+1296>>2]=0.0;return}function Fm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=c[b+16>>2]|0;do if(f){if((f|0)!=(d|0)){c[b+36>>2]=(c[b+36>>2]|0)+1;c[b+24>>2]=2;a[b+54>>0]=1;break}if((c[b+24>>2]|0)==2)c[b+24>>2]=e;}else{c[b+16>>2]=d;c[b+24>>2]=e;c[b+36>>2]=1;}while(0);return}function Gm(a,d){a=a|0;d=d|0;var e=0,f=0;e=c[d>>2]|0;f=c[a+80>>2]|0;if((e|0)==(f|0)){f=0;return f|0}if(!((b[a+10>>1]&b[d+4>>1])<<16>>16)){f=0;return f|0}if(!((b[d+6>>1]&b[a+8>>1])<<16>>16)){f=0;return f|0}d=c[a+92>>2]|0;f=zb[c[(c[d>>2]|0)+28>>2]&63](d,f,e)|0;return f|0}function Hm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=c[a+8>>2]|0;a=c[f+8>>2]|0;if((a|0)<=0)return;e=0;do{d=c[(c[f+16>>2]|0)+(e*12|0)+8>>2]|0;if(d){nb[c[(c[d>>2]|0)+16>>2]&127](d,b);a=c[f+8>>2]|0;}e=e+1|0;}while((e|0)<(a|0));return}function Im(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(e|0){case 5:case -1:break;default:return}switch(b|0){case 2:{g[a+760>>2]=d;c[a+748>>2]=c[a+748>>2]|2;return}case 4:{g[a+756>>2]=d;c[a+748>>2]=c[a+748>>2]|1;return}case 3:{g[a+752>>2]=d;c[a+748>>2]=c[a+748>>2]|4;return}default:return}}function Jm(a,b,d){a=a|0;b=b|0;d=d|0;Ms(a);c[a>>2]=2904;c[a+20>>2]=c[b>>2];c[a+20+4>>2]=c[b+4>>2];c[a+20+8>>2]=c[b+8>>2];c[a+20+12>>2]=c[b+12>>2];c[a+36>>2]=c[d>>2];c[a+36+4>>2]=c[d+4>>2];c[a+36+8>>2]=c[d+8>>2];c[a+36+12>>2]=c[d+12>>2];return}function Km(){var b=0,d=0,e=0;do if((c[2409]|0)>=0?(jH()|0)!=0:0){if((a[9635]|0)!=10?(b=c[2395]|0,b>>>0<(c[2394]|0)>>>0):0){c[2395]=b+1;a[b>>0]=10;break}nm()|0;}else e=3;while(0);do if((e|0)==3){if((a[9635]|0)!=10?(d=c[2395]|0,d>>>0<(c[2394]|0)>>>0):0){c[2395]=d+1;a[d>>0]=10;break}nm()|0;}while(0);return}function Lm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[d>>2]|0;a=Rw(c[b>>2]|0)|0;f=Rw(f)|0;if(a|0)Zb[c[(c[a>>2]|0)+32>>2]&127](a,d,e,b);if(!f)return 0;Zb[c[(c[f>>2]|0)+32>>2]&127](f,b,e,d);return 0}function Mm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=l;l=l+48|0;f=c[b+192>>2]|0;Zb[c[(c[f>>2]|0)+8>>2]&127](f,b+4|0,e+32|0,e+16|0);c[e>>2]=6080;c[e+4>>2]=b;c[e+8>>2]=a;c[e+12>>2]=d;d=c[a+68>>2]|0;Zb[c[(c[d>>2]|0)+28>>2]&127](d,e+32|0,e+16|0,e);l=e;return}function Nm(a,b,d){a=a|0;b=b|0;d=d|0;a:do switch(c[b+216>>2]|0){case 2:case 5:{switch(c[d+216>>2]|0){case 2:case 5:{a=0;break}default:break a}return a|0}default:{}}while(0);if(c[b+256>>2]|0?!(Kb[c[c[b>>2]>>2]&31](b,d)|0):0){d=0;return d|0}d=1;return d|0}function Om(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=l;l=l+256|0;if((c|0)>(d|0)&(e&73728|0)==0){Ik(f|0,b|0,((c-d|0)>>>0<256?c-d|0:256)|0)|0;if((c-d|0)>>>0>255){b=c-d|0;do{ty(a,f,256);b=b+-256|0;}while(b>>>0>255);b=c-d&255;}else b=c-d|0;ty(a,f,b);}l=f;return}function Pm(a,b,d){a=a|0;b=b|0;d=d|0;Uh(a,b,d)|0;c[b+52>>2]=c[a+300>>2];c[b+56>>2]=c[a+304>>2];c[b+60>>2]=c[a+308>>2];c[b+64>>2]=c[a+312>>2];c[b+68>>2]=c[a+316>>2];c[b+72>>2]=c[a+320>>2];c[b+76>>2]=c[a+324>>2];c[b+80>>2]=c[a+328>>2];return 12689}function Qm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;f=l;l=l+112|0;d=fH(c[b+4>>2]|0)|0;e=f;g=e+104|0;do{c[e>>2]=0;e=e+4|0;}while((e|0)<(g|0));SE(f);dm(a,d,f);Tn(b,d,c[a+12>>2]|0);l=f;return}function Rm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=fH(b)|0;i=fH(b+16|0)|0;h=fH(b+32|0)|0;g=MG(b)|0;f=MG(b+16|0)|0;e=MG(b+32|0)|0;d=LG(b)|0;c=LG(b+16|0)|0;_p(a,j,i,h,g,f,e,d,c,LG(b+32|0)|0);return}function Sm(a,b){a=a|0;b=b|0;var d=0;if(c[b+40>>2]|0){Sm(a,c[b+36>>2]|0);Sm(a,c[b+40>>2]|0);}if((c[a>>2]|0)==(b|0))c[a>>2]=0;d=c[a+4>>2]|0;if(!d){c[a+4>>2]=b;return}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);c[a+4>>2]=b;return}function Tm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=c[a+32>>2]|0;c[g>>2]=(c[g>>2]|0)+1;$f(a,Cd(a,b,f)|0);$f(a,Cd(a,d,f)|0);$f(a,Cd(a,e,f)|0);return}function Um(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(JB(a,c[b+8>>2]|0)|0)Xk(b,d,e,f);else{a=c[a+8>>2]|0;Bb[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e,f,g);}return}function Vm(a){a=a|0;var b=0;b=l;l=l+48|0;g[b+32>>2]=1.0;g[b+28>>2]=0.0;g[b+24>>2]=0.0;g[b+20>>2]=0.0;g[b+16>>2]=1.0;g[b+12>>2]=0.0;g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=1.0;Qo(a,b+32|0,b+28|0,b+24|0,b+20|0,b+16|0,b+12|0,b+8|0,b+4|0,b);l=b;return}function Wm(a,b){a=a|0;b=b|0;var d=0,e=0;c[a+68>>2]=(c[a+68>>2]|0)+1;d=c[a+16>>2]|0;if((d|0)>0)do{e=d;d=d+-1|0;if((c[(c[a+24>>2]|0)+(d*80|0)+64>>2]|0)==(b|0))ie(a,d);}while((e|0)>1);lb[c[(c[a>>2]|0)+68>>2]&511](a);return}function Xm(a,b){a=+a;b=+b;var d=0;d=Gs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+4>>2]=10;c[d>>2]=7716;c[d+52>>2]=2;g[d+28>>2]=a;g[d+32>>2]=a;g[d+36>>2]=b*.5;g[d+40>>2]=0.0;return d|0}function Ym(a,b){a=+a;b=+b;var d=0;d=Gs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+4>>2]=10;c[d>>2]=7616;c[d+52>>2]=0;g[d+28>>2]=b*.5;g[d+32>>2]=a;g[d+36>>2]=a;g[d+40>>2]=0.0;return d|0}function Zm(a,b){a=+a;b=+b;var d=0;d=Gs()|0;c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d>>2]=7516;c[d+4>>2]=10;c[d+52>>2]=1;g[d+28>>2]=a;g[d+32>>2]=b*.5;g[d+36>>2]=a;g[d+40>>2]=0.0;return d|0}function _m(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(c|0){case 5:case -1:switch(b|0){case 2:{d=+g[a+760>>2];break a}case 4:{d=+g[a+756>>2];break a}case 3:{d=+g[a+752>>2];break a}default:{d=0.0;break a}}default:d=0.0;}while(0);return +d}function $m(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(b|0){case 2:case 1:if(e>>>0<3){g[a+600>>2]=d;c[a+592>>2]=c[a+592>>2]|2;return}else{g[a+432>>2]=d;return}case 4:case 3:{g[(e>>>0<3?a+596|0:a+604|0)>>2]=d;c[a+592>>2]=c[a+592>>2]|(e>>>0<3?1:4);return}default:return}}function an(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=l;l=l+16|0;c[f>>2]=a;c[f+4>>2]=e;e=c[a+72+((c[(c[b+4>>2]|0)+4>>2]|0)*144|0)+(c[(c[d+4>>2]|0)+4>>2]<<2)>>2]|0;e=tb[c[(c[e>>2]|0)+8>>2]&31](e,f,b,d)|0;l=f;return e|0}function bn(a,b){a=a|0;b=b|0;var d=0;a=c[a+64>>2]|0;if(!b)return;d=c[a+16>>2]|0;if(d>>>0<=b>>>0?(d+(S(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;return}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function cn(a){a=a|0;var b=0,d=0;if((c[a+232>>2]|0)<=0)return;b=0;do{d=(c[(c[a+240>>2]|0)+(b<<2)>>2]|0)+412|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;b=b+1|0;}while((b|0)<(c[a+232>>2]|0));return}function dn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+12>>2]|0;if((d|0)<=0)return;f=0;do{e=c[(c[a+20>>2]|0)+(f<<2)>>2]|0;if(e){nb[c[(c[e>>2]|0)+16>>2]&127](e,b);d=c[a+12>>2]|0;}f=f+1|0;}while((f|0)<(d|0));return}function en(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=fH(c[a+4>>2]|0)|0;if((e|0)>(b|0)){c[a+4>>2]=b;return}if((e|0)<(b|0))on(a,b);while(1){if((e|0)>=(b|0))break;c[(c[a+12>>2]|0)+(e<<2)>>2]=c[d>>2];e=e+1|0;}c[a+4>>2]=b;return}function fn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[a+32>>2]|0;c[f>>2]=(c[f>>2]|0)+1;$f(a,Cd(a,b,0)|0);$f(a,Cd(a,d,0)|0);$f(a,Cd(a,e,0)|0);return}function gn(a,b,d){a=a|0;b=b|0;d=d|0;c[a+52>>2]=c[b>>2];c[a+52+4>>2]=c[b+4>>2];c[a+52+8>>2]=c[b+8>>2];c[a+52+12>>2]=c[b+12>>2];c[a+68>>2]=c[d>>2];c[a+68+4>>2]=c[d+4>>2];c[a+68+8>>2]=c[d+8>>2];c[a+68+12>>2]=c[d+12>>2];c[a+48>>2]=1;return}function hn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[d>>2]|0;a=Rw(c[b>>2]|0)|0;e=Rw(e)|0;if(a|0)Vb[c[(c[a>>2]|0)+28>>2]&127](a,d,b);if(!e)return 0;Vb[c[(c[e>>2]|0)+28>>2]&127](e,b,d);return 0}function jn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;e=b;f=d+104|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0;}while((d|0)<(f|0));Hu(a+104|0,b+104|0);Iu(a+124|0,b+124|0);Iu(a+144|0,b+144|0);return}function kn(a,d){a=a|0;d=d|0;var e=0,f=0;if(b[a+56>>1]|0)return;b[a+64>>1]=1;d=b[a+58>>1]|0;f=c[a+60>>2]|0;if((d&65535)>1){e=1;do{d=e;e=e+1|0;b[f+(d<<6)+48>>1]=e;d=b[a+58>>1]|0;}while(e>>>0<(d&65535)>>>0)}b[f+((d&65535)+-1<<6)+48>>1]=0;return}function ln(a,b,c){a=+a;b=b|0;c=c|0;var d=0,e=0;e=l;l=l+32|0;d=Er(140)|0;g[e+8>>2]=0.0;g[e+4>>2]=0.0;g[e>>2]=0.0;Xr(e+16|0,e+8|0,e+4|0,e);Qk(d,a,b,c,e+16|0);l=e;return d|0}function mn(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];Hv(d)|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];l=d;return}function nn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[d>>2]=c[b+16>>2];c[d+4>>2]=c[b+16+4>>2];c[d+8>>2]=c[b+16+8>>2];c[d+12>>2]=c[b+16+12>>2];c[e>>2]=c[b+32>>2];c[e+4>>2]=c[b+32+4>>2];c[e+8>>2]=c[b+32+8>>2];c[e+12>>2]=c[b+32+12>>2];return}function on(b,d){b=b|0;d=d|0;var e=0;if((fH(c[b+8>>2]|0)|0)>=(d|0))return;e=Bs(d)|0;Bq(b,fH(c[b+4>>2]|0)|0,e);as(b);a[b+16>>0]=1;c[b+12>>2]=e;c[b+8>>2]=d;return}function pn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;i=c[a+4>>2]|0;if(!(i&1))h=i>>8;else h=c[(c[e>>2]|0)+(i>>8)>>2]|0;a=c[a>>2]|0;Bb[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e+h|0,i&2|0?f:2,g);return}function qn(a,b){a=a|0;b=b|0;var d=0;a=c[a+64>>2]|0;d=c[a+8>>2]|0;if(d|0){b=c[a+12>>2]|0;c[a+12>>2]=c[b>>2];c[a+8>>2]=d+-1;return b|0}c[6436]=(c[6436]|0)+1;a=ic(b+19|0)|0;if(!a){b=0;return b|0}c[(a+4+15&-16)+-4>>2]=a;b=a+4+15&-16;return b|0}function rn(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;g[a+692>>2]=(c-b)*.5;b=+Wg((c-b)*.5+b,6.2831854820251465);if(!(b<-3.1415927410125732)){if(b>3.1415927410125732)b=b+-6.2831854820251465;}else b=b+6.2831854820251465;g[a+688>>2]=b;g[a+696>>2]=d;g[a+700>>2]=e;g[a+704>>2]=f;return}function sn(a,b,d){a=a|0;b=+b;d=+d;var e=0;e=l;l=l+16|0;g[e+12>>2]=b;g[e+8>>2]=d;g[e+4>>2]=0.0;g[e>>2]=1.0;c[a+444>>2]=c[(b<0.0?e+4|0:b>1.0?e:e+12|0)>>2];g[e+4>>2]=0.0;g[e>>2]=1.0;c[a+448>>2]=c[(d<0.0?e+4|0:d>1.0?e:e+8|0)>>2];l=e;return}function tn(){var b=0;b=l;l=l+32|0;if(a[22576]|0){l=b;return}if(!(iy(22576)|0)){l=b;return}mm();g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=0.0;Xr(b+16|0,b+8|0,b+4|0,b);cq(22848,22912,b+16|0);l=b;return}function un(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[(c[b>>2]|0)+16>>2]|0;e=pb[c[(c[a>>2]|0)+16>>2]&127](a)|0;e=zb[d&63](b,e,1)|0;d=zb[c[(c[a>>2]|0)+20>>2]&63](a,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1497645650,a);return}function vn(b,d){b=b|0;d=d|0;var e=0;if((fH(c[b+8>>2]|0)|0)>=(d|0))return;e=Ws(d)|0;Tn(b,fH(c[b+4>>2]|0)|0,e);as(b);a[b+16>>0]=1;c[b+12>>2]=e;c[b+8>>2]=d;return}function wn(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+32|0;Kl(e,fH(a+4|0)|0,b,c,d);tp(e+16|0,+g[e>>2],+g[e+4>>2],+g[e+8>>2],+g[a+348>>2],+g[a+352>>2],+g[a+356>>2]);yr(a+412|0,e+16|0)|0;l=e;return}function xn(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+52>>2];c[b+4>>2]=c[a+52+4>>2];c[b+8>>2]=c[a+52+8>>2];c[b+12>>2]=c[a+52+12>>2];c[d>>2]=c[a+68>>2];c[d+4>>2]=c[a+68+4>>2];c[d+8>>2]=c[a+68+8>>2];c[d+12>>2]=c[a+68+12>>2];return}function yn(a){a=a|0;var b=0,d=0,e=0;b=c[a+24>>2]|0;if((b|0)<=0)return;e=0;do{d=c[(c[a+32>>2]|0)+(e<<2)>>2]|0;switch(c[d+216>>2]|0){case 2:case 5:break;default:{jg(d);b=c[a+24>>2]|0;}}e=e+1|0;}while((e|0)<(b|0));return}function zn(a,b){a=a|0;b=b|0;var d=0,e=0;e=pb[c[(c[a>>2]|0)+16>>2]&127](a)|0;e=zb[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=zb[c[(c[a>>2]|0)+20>>2]&63](a,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1245859651,a);return}function An(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(JB(a,c[b+8>>2]|0)|0)Fm(b,d,e);else{a=c[a+8>>2]|0;Zb[c[(c[a>>2]|0)+28>>2]&127](a,b,d,e);}return}function Bn(a,b,c){a=a|0;b=b|0;c=+c;var d=0;d=l;l=l+16|0;g[d+12>>2]=+g[(fH(b)|0)>>2]*c;g[d+8>>2]=+g[(MG(b)|0)>>2]*c;g[d+4>>2]=+g[(LG(b)|0)>>2]*c;g[d>>2]=+g[b+12>>2]*c;Xu(a,d+12|0,d+8|0,d+4|0,d);l=d;return}function Cn(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+8>>2];c[b+4>>2]=c[a+8+4>>2];c[b+8>>2]=c[a+8+8>>2];c[b+12>>2]=c[a+8+12>>2];c[d>>2]=c[a+24>>2];c[d+4>>2]=c[a+24+4>>2];c[d+8>>2]=c[a+24+8>>2];c[d+12>>2]=c[a+24+12>>2];return}function Dn(a,b){a=a|0;b=b|0;var d=0,e=0;e=pb[c[(c[a>>2]|0)+52>>2]&127](a)|0;e=zb[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=zb[c[(c[a>>2]|0)+56>>2]&63](a,c[e+8>>2]|0,b)|0;jb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1346455635,a);return}function En(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+32|0;Kl(e,fH(a+4|0)|0,b,c,d);tp(e+16|0,+g[e>>2],+g[e+4>>2],+g[e+8>>2],+g[a+544>>2],+g[a+548>>2],+g[a+552>>2]);yr(a+428|0,e+16|0)|0;l=e;return}function Fn(a,b){a=a|0;b=b|0;var c=0;c=l;l=l+80|0;Rm(c+32|0,b);Jq(c,+g[b+48>>2],+g[b+52>>2],+g[b+56>>2]);Kl(c+16|0,c+32|0,+g[c>>2],+g[c+4>>2],+g[c+8>>2]);cq(a,c+32|0,c+16|0);l=c;return}function Gn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=c[a+4>>2]|0;if(!(h&1))g=h>>8;else g=c[(c[d>>2]|0)+(h>>8)>>2]|0;a=c[a>>2]|0;jb[c[(c[a>>2]|0)+24>>2]&31](a,b,d+g|0,h&2|0?e:2,f);return}function Hn(b){b=b|0;var d=0;c[b>>2]=5168;d=c[b+276>>2]|0;if(d|0){if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+276>>2]=0;}a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b>>2]=5132;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function In(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+32|0;tp(e,b,c,d,+g[a+348>>2],+g[a+352>>2],+g[a+356>>2]);Xp(e+16|0,+g[e>>2],+g[e+4>>2],+g[e+8>>2],+g[a+344>>2]);yr(a+312|0,e+16|0)|0;l=e;return}function Jn(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+32|0;Kl(e,a+264|0,b,c,d);tp(e+16|0,+g[e>>2],+g[e+4>>2],+g[e+8>>2],+g[a+544>>2],+g[a+548>>2],+g[a+552>>2]);yr(a+328|0,e+16|0)|0;l=e;return}function Kn(a,b,d){a=a|0;b=b|0;d=d|0;c[a+164>>2]=c[b>>2];c[a+164+4>>2]=c[b+4>>2];c[a+164+8>>2]=c[b+8>>2];c[a+164+12>>2]=c[b+12>>2];b=fH(b)|0;if((!(+g[b>>2]!=1.0)?!(+g[b+4>>2]!=1.0):0)?!(+g[b+8>>2]!=1.0):0)d=0;c[a+180>>2]=d;return}function Ln(b){b=b|0;var d=0;c[b>>2]=4236;d=c[b+496>>2]|0;if(d|0){if(a[b+500>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+496>>2]=0;}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;c[b>>2]=5132;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function Mn(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+892>>2];c[b+4>>2]=c[a+892+4>>2];c[b+8>>2]=c[a+892+8>>2];c[b+12>>2]=c[a+892+12>>2];c[d>>2]=c[a+908>>2];c[d+4>>2]=c[a+908+4>>2];c[d+8>>2]=c[a+908+8>>2];c[d+12>>2]=c[a+908+12>>2];return}function Nn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do if((c|0)==-1)switch(b|0){case 2:case 1:{d=+g[a+336>>2];break a}case 4:case 3:{d=+g[a+340>>2];break a}default:{d=3402823466385288598117041.0e14;break a}}else d=3402823466385288598117041.0e14;while(0);return +d}function On(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;f=+g[b+28>>2];e=+g[b+32>>2];e=+g[c+4>>2]>=0.0?e:-e;d=+g[b+36>>2];d=+g[c+8>>2]>=0.0?d:-d;g[a>>2]=+g[c>>2]>=0.0?f:-f;g[a+4>>2]=e;g[a+8>>2]=d;g[a+12>>2]=0.0;return}function Pn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=c[a+4>>2]|0;if(!(g&1))f=g>>8;else f=c[(c[d>>2]|0)+(g>>8)>>2]|0;a=c[a>>2]|0;Zb[c[(c[a>>2]|0)+28>>2]&127](a,b,d+f|0,g&2|0?e:2);return}function Qn(b){b=b|0;var d=0;c[b>>2]=5e3;d=c[b+140>>2]|0;if(d|0){if(a[b+144>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+140>>2]=0;}a[b+144>>0]=1;c[b+140>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function Rn(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22552]|0))iy(22552)|0;Go(d,c[b+116>>2]|0,c[b+128>>2]|0);c[5700]=c[d>>2];c[5701]=c[d+4>>2];c[5702]=c[d+8>>2];c[5703]=c[d+12>>2];l=d;return 22800}function Sn(a,b){a=a|0;b=b|0;var d=0;d=c[a+4>>2]|0;if((c[b>>2]|0)!=(d|0)?(c[b+4>>2]|0)!=(d|0):0)return 0;d=c[a+8>>2]|0;Vb[c[(c[d>>2]|0)+32>>2]&127](d,b,c[a+12>>2]|0);return 0}function Tn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=0;while(1){if((e|0)>=(b|0))break;f=d+(e*104|0)|0;g=(c[a+12>>2]|0)+(e*104|0)|0;h=f+104|0;do{c[f>>2]=c[g>>2];f=f+4|0;g=g+4|0;}while((f|0)<(h|0));e=e+1|0;}return}function Un(b){b=b|0;var d=0;c[b>>2]=9492;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function Vn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Kb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Kb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)nb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];return 17319}function Wn(a,b){a=a|0;b=b|0;var c=0;c=l;l=l+16|0;g[c+12>>2]=-+g[(fH(b)|0)>>2];g[c+8>>2]=-+g[(MG(b)|0)>>2];g[c+4>>2]=-+g[(LG(b)|0)>>2];g[c>>2]=-+g[b+12>>2];Xu(a,c+12|0,c+8|0,c+4|0,c);l=c;return}function Xn(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0;e=l;l=l+16|0;d=+MD(a);d=+TG(d*+MD(b));c=+No(a,b);if(c<0.0){Wn(e,b);c=+No(a,e);}d=+sz(c/d)*2.0;l=e;return +d}function Yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0;h=c[a+104>>2]|0;f=+g[h+(b<<4)+4>>2]*+g[a+16>>2];e=+g[h+(b<<4)+8>>2]*+g[a+20>>2];g[d>>2]=+g[h+(b<<4)>>2]*+g[a+12>>2];g[d+4>>2]=f;g[d+8>>2]=e;g[d+12>>2]=0.0;return}function Zn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=l;l=l+32|0;c[e>>2]=c[a+60>>2];c[e+4>>2]=0;c[e+8>>2]=b;c[e+12>>2]=e+20;c[e+16>>2]=d;if((gB(bb(140,e|0)|0)|0)<0){c[e+20>>2]=-1;a=-1;}else a=c[e+20>>2]|0;l=e;return a|0}function _n(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;f=c[d>>2]|0;f=Kb[c[(c[f>>2]|0)+56>>2]&31](f,20)|0;e=a[b+4>>0]|0;c[f+4>>2]=c[d>>2];c[f>>2]=3740;a[f+16>>0]=e;return f|0}function $n(b,c){b=b|0;c=c|0;var d=0,e=0;d=a[b>>0]|0;e=a[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24)b=e;else{do{b=b+1|0;c=c+1|0;d=a[b>>0]|0;e=a[c>>0]|0;}while(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24));b=e;}return (d&255)-(b&255)|0}function ao(a,b){a=a|0;b=b|0;var c=0.0;c=+g[(fH(b)|0)>>2];g[a>>2]=+g[a>>2]+c;c=+g[(MG(b)|0)>>2];g[a+4>>2]=+g[a+4>>2]+c;c=+g[(LG(b)|0)>>2];g[a+8>>2]=+g[a+8>>2]+c;g[a+12>>2]=+g[a+12>>2]+ +g[b+12>>2];return a|0}function bo(a,b){a=a|0;b=b|0;var c=0.0;c=+g[(fH(b)|0)>>2];g[a>>2]=+g[a>>2]-c;c=+g[(MG(b)|0)>>2];g[a+4>>2]=+g[a+4>>2]-c;c=+g[(LG(b)|0)>>2];g[a+8>>2]=+g[a+8>>2]-c;g[a+12>>2]=+g[a+12>>2]-+g[b+12>>2];return a|0}function co(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22544]|0))iy(22544)|0;nb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[5696]=c[d>>2];c[5697]=c[d+4>>2];c[5698]=c[d+8>>2];c[5699]=c[d+12>>2];l=d;return 22784}function eo(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22600]|0))iy(22600)|0;nb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[5744]=c[d>>2];c[5745]=c[d+4>>2];c[5746]=c[d+8>>2];c[5747]=c[d+12>>2];l=d;return 22976}function fo(a){a=a|0;var b=0,d=0;d=a+15&-16|0;b=c[i>>2]|0;a=b+d|0;if((d|0)>0&(a|0)<(b|0)|(a|0)<0){_()|0;Va(12);return -1}c[i>>2]=a;if((a|0)>(Z()|0)?(Y()|0)==0:0){Va(12);c[i>>2]=b;return -1}return b|0}function go(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+16|0;e=fH(c[b+4>>2]|0)|0;c[d>>2]=0;en(a,e,d);Bq(b,e,c[a+12>>2]|0);l=d;return}function ho(b){b=b|0;var d=0;d=a[b+74>>0]|0;a[b+74>>0]=d+255|d;d=c[b>>2]|0;if(!(d&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);b=0;}else{c[b>>2]=d|32;b=-1;}return b|0}function io(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if((e|0)!=-1)return;switch(b|0){case 2:case 1:{g[a+336>>2]=d;c[a+332>>2]=c[a+332>>2]|1;return}case 4:case 3:{g[a+340>>2]=d;c[a+332>>2]=c[a+332>>2]|2;return}default:return}}function jo(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+g[(LG(a)|0)>>2];c=c*+g[(fH(b)|0)>>2];d=+g[(LG(a+16|0)|0)>>2];d=c+d*+g[(MG(b)|0)>>2];c=+g[(LG(a+32|0)|0)>>2];return +(d+c*+g[(LG(b)|0)>>2])}function ko(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+g[(MG(a)|0)>>2];c=c*+g[(fH(b)|0)>>2];d=+g[(MG(a+16|0)|0)>>2];d=c+d*+g[(MG(b)|0)>>2];c=+g[(MG(a+32|0)|0)>>2];return +(d+c*+g[(LG(b)|0)>>2])}function lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((b|0)==(d|0))return;e=c[(c[a+4>>2]|0)+136>>2]|0;zb[c[(c[e>>2]|0)+8>>2]&63](e,c[b+36>>2]|0,c[d+36>>2]|0)|0;d=(c[a+4>>2]|0)+160|0;c[d>>2]=(c[d>>2]|0)+1;return}function mo(b,d,e){b=b|0;d=d|0;e=+e;var f=0;f=l;l=l+16|0;if(!(a[22560]|0))iy(22560)|0;Ki(f,b,d,e);c[5704]=c[f>>2];c[5705]=c[f+4>>2];c[5706]=c[f+8>>2];c[5707]=c[f+12>>2];l=f;return 22816}function no(b,d,e){b=b|0;d=d|0;e=+e;var f=0;f=l;l=l+16|0;if(!(a[22608]|0))iy(22608)|0;Ki(f,b,d,e);c[5748]=c[f>>2];c[5749]=c[f+4>>2];c[5750]=c[f+8>>2];c[5751]=c[f+12>>2];l=f;return 22992}function oo(a){a=a|0;var b=0,d=0.0,e=0.0,f=0.0;b=l;l=l+32|0;Vb[c[(c[a>>2]|0)+12>>2]&127](a,b+8|0,b);f=+g[b+8>>2];e=+g[b+8+4>>2];d=+g[b+8+8>>2];d=+G(+(f*f+e*e+d*d));l=b;return +(d+ +g[b>>2])}function po(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=l;l=l+16|0;c[f>>2]=5328;c[f+4>>2]=d;c[f+8>>2]=a;Vb[c[(c[b>>2]|0)+48>>2]&127](b,f,e);l=f;return}function qo(a,b,d){a=a|0;b=b|0;d=d|0;a=c[b+8>>2]|0;if(!((d|0)!=0&(a|0)!=0))return;lb[c[c[a>>2]>>2]&511](a);nb[c[(c[d>>2]|0)+60>>2]&127](d,c[b+8>>2]|0);c[b+8>>2]=0;return}function ro(b){b=b|0;var d=0;c[b>>2]=5168;d=c[b+276>>2]|0;if(d|0){if(a[b+280>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+276>>2]=0;}a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b>>2]=5132;return}function so(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=l;l=l+16|0;c[e>>2]=8924;c[e+4>>2]=b;c[e+8>>2]=a;c[e+12>>2]=d;Vb[c[(c[a>>2]|0)+48>>2]&127](a,e,d);l=e;return}function to(b){b=b|0;var d=0;c[b>>2]=6896;if(a[b+61>>0]|0?(d=c[b+52>>2]|0,lb[c[c[d>>2]>>2]&511](d),d=c[b+52>>2]|0,d|0):0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function uo(b){b=b|0;var d=0;c[b>>2]=4236;d=c[b+496>>2]|0;if(d|0){if(a[b+500>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+496>>2]=0;}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;c[b>>2]=5132;return}function vo(a,b,c,d){a=+a;b=+b;c=+c;d=+d;var e=0,f=0;f=l;l=l+16|0;g[f+12>>2]=a;g[f+8>>2]=b;g[f+4>>2]=c;g[f>>2]=d;e=Is()|0;Ht(e,f+12|0,f+8|0,f+4|0,f);l=f;return e|0}function wo(a,b,c,d){a=+a;b=+b;c=+c;d=+d;var e=0,f=0;f=l;l=l+16|0;g[f+12>>2]=a;g[f+8>>2]=b;g[f+4>>2]=c;g[f>>2]=d;e=Er(16)|0;Xu(e,f+12|0,f+8|0,f+4|0,f);l=f;return e|0}function xo(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(JB(a,c[b+8>>2]|0)|0)Xk(b,d,e,f);return}function yo(a){a=a|0;var b=0.0,d=0,e=0,f=0.0;e=c[a+712>>2]|0;if((e|0)<=0){b=0.0;return +b}d=c[a+720>>2]|0;a=0;b=0.0;do{f=+g[d+(a*104|0)+88>>2];b=b+(f>0.0?1.0/f:0.0);a=a+1|0;}while((a|0)!=(e|0));return +b}function zo(a){a=a|0;var b=0;c[a>>2]=5632;c[a+12>>2]=5680;b=c[a+60>>2]|0;nb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+76>>2]|0);b=c[a+60>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+76>>2]|0);aH(a);return}function Ao(b){b=b|0;var d=0;c[b>>2]=5e3;d=c[b+140>>2]|0;if(d|0){if(a[b+144>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+140>>2]=0;}a[b+144>>0]=1;c[b+140>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;return}function Bo(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22536]|0))iy(22536)|0;Ty(d,b);c[5692]=c[d>>2];c[5693]=c[d+4>>2];c[5694]=c[d+8>>2];c[5695]=c[d+12>>2];l=d;return 22768}function Co(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22528]|0))iy(22528)|0;Fx(d,b);c[5688]=c[d>>2];c[5689]=c[d+4>>2];c[5690]=c[d+8>>2];c[5691]=c[d+12>>2];l=d;return 22752}function Do(a,b,d){a=a|0;b=+b;d=d|0;b=b*.4000000059604645*+Db[c[(c[a>>2]|0)+48>>2]&15](a);b=b*+Db[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;return}function Eo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=c[b>>2]|0;e=Kb[c[(c[e>>2]|0)+56>>2]&31](e,24)|0;c[e+4>>2]=c[b>>2];c[e>>2]=4208;return e|0}function Fo(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;var i=0;i=l;l=l+16|0;g[i+8>>2]=c*h-d*f;g[i+4>>2]=d*e-b*h;g[i>>2]=b*f-c*e;Xr(a,i+8|0,i+4|0,i);l=i;return}function Go(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;b=fH(b+4|0)|0;e=(fH(bF(b,0)|0)|0)+(c<<2)|0;d=(fH(bF(b,1)|0)|0)+(c<<2)|0;Xr(a,e,d,(fH(bF(b,2)|0)|0)+(c<<2)|0);return}function Ho(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[d>>2]=-581039253;c[d+4>>2]=-581039253;c[d+8>>2]=-581039253;g[d+12>>2]=0.0;c[e>>2]=1566444395;c[e+4>>2]=1566444395;c[e+8>>2]=1566444395;g[e+12>>2]=0.0;return}function Io(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+g[(fH(a)|0)>>2];c=c*+g[(fH(b)|0)>>2];d=+g[(fH(a+16|0)|0)>>2];d=c+d*+g[(MG(b)|0)>>2];c=+g[(fH(a+32|0)|0)>>2];return +(d+c*+g[(LG(b)|0)>>2])}function Jo(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22568]|0))iy(22568)|0;mn(d,b);c[5708]=c[d>>2];c[5709]=c[d+4>>2];c[5710]=c[d+8>>2];c[5711]=c[d+12>>2];l=d;return 22832}function Ko(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22616]|0))iy(22616)|0;mn(d,b);c[5752]=c[d>>2];c[5753]=c[d+4>>2];c[5754]=c[d+8>>2];c[5755]=c[d+12>>2];l=d;return 23008}function Lo(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22512]|0))iy(22512)|0;vp(d,b);c[5680]=c[d>>2];c[5681]=c[d+4>>2];c[5682]=c[d+8>>2];c[5683]=c[d+12>>2];l=d;return 22720}function Mo(b){b=b|0;var d=0;d=l;l=l+16|0;if(!(a[22520]|0))iy(22520)|0;Xl(d,b);c[5684]=c[d>>2];c[5685]=c[d+4>>2];c[5686]=c[d+8>>2];c[5687]=c[d+12>>2];l=d;return 22736}function No(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+g[a>>2];c=c*+g[(fH(b)|0)>>2];d=+g[a+4>>2];d=c+d*+g[(MG(b)|0)>>2];c=+g[a+8>>2];c=d+c*+g[(LG(b)|0)>>2];return +(c+ +g[a+12>>2]*+g[b+12>>2])}function Oo(b){b=b|0;var d=0;c[b>>2]=8964;if(a[b+192>>0]|0?(d=c[b+136>>2]|0,lb[c[c[d>>2]>>2]&511](d),d=c[b+136>>2]|0,d|0):0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}Rh(b+64|0);Rh(b+4|0);return}function Po(b){b=b|0;var d=0;c[b>>2]=9492;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function Qo(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Xr(a,b,c,d);Xr(a+16|0,e,f,g);Xr(a+32|0,h,i,j);return}function Ro(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=l;l=l+64|0;kk(d+16|0,b,c);Ol(d,b,+g[c+48>>2],+g[c+52>>2],+g[c+56>>2]);cq(a,d+16|0,d);l=d;return}function So(a){a=a|0;var b=0;c[a>>2]=5632;c[a+12>>2]=5680;b=c[a+60>>2]|0;nb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+76>>2]|0);b=c[a+60>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+76>>2]|0);return}function To(b){b=b|0;var d=0;c[b>>2]=3124;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+32>>2]=0;}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function Uo(a){a=a|0;var b=0,d=0;c[a>>2]=7248;b=c[a+52>>2]|0;if(b|0?(lb[c[c[b>>2]>>2]&511](b),d=c[a+52>>2]|0,d|0):0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Vo(a,b){a=a|0;b=b|0;var d=0;d=(c[a+92>>2]|0)+4|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];dj(a);return}function Wo(b,d){b=b|0;d=d|0;var e=0;if(a[b+273>>0]|0?(e=c[b+200>>2]|0,e|0):0){c[6437]=(c[6437]|0)+1;Tc(c[e+-4>>2]|0);}a[b+273>>0]=0;c[b+200>>2]=d;c[(c[b+196>>2]|0)+8>>2]=d;return}function Xo(b){b=b|0;var d=0;c[b>>2]=5256;d=c[b+20>>2]|0;if(d|0){if(a[b+24>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+20>>2]=0;}a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;return}function Yo(a,b){a=a|0;b=+b;c[a+8>>2]=0;c[a+12>>2]=1065353216;c[a+16>>2]=1065353216;c[a+20>>2]=1065353216;g[a+24>>2]=0.0;g[a+44>>2]=.03999999910593033;c[a>>2]=6796;c[a+4>>2]=8;PE(a+28|0,b);g[a+44>>2]=b;return}function Zo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=c[b>>2]|0;e=Kb[c[(c[e>>2]|0)+56>>2]&31](e,8)|0;c[e+4>>2]=c[b>>2];c[e>>2]=9352;return e|0}function _o(b){b=b|0;var d=0;c[b>>2]=8772;d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);}c[b+16>>2]=0;}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;return}function $o(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;var f=0;f=l;l=l+16|0;g[f+12>>2]=b;g[f+8>>2]=c;g[f+4>>2]=d;g[f>>2]=e;lr(a,f+12|0,f+8|0,f+4|0,f);l=f;return}function ap(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;f=c[b+8>>2]|0;e=c[f+284>>2]|0;Vb[c[(c[e>>2]|0)+40>>2]&127](e,f,c[d+8>>2]|0);return}function bp(b){b=b|0;var d=0,e=0;c[b>>2]=6128;if(!(a[b+8>>0]|0)){aH(b);return}d=c[b+12>>2]|0;if(!d){aH(b);return}e=c[b+4>>2]|0;nb[c[(c[e>>2]|0)+16>>2]&127](e,d);aH(b);return}function cp(b){b=b|0;var d=0,e=0;c[b>>2]=9380;if(!(a[b+8>>0]|0)){aH(b);return}d=c[b+12>>2]|0;if(!d){aH(b);return}e=c[b+4>>2]|0;nb[c[(c[e>>2]|0)+16>>2]&127](e,d);aH(b);return}function dp(b){b=b|0;var d=0,e=0;c[b>>2]=5604;if(!(a[b+8>>0]|0)){aH(b);return}d=c[b+12>>2]|0;if(!d){aH(b);return}e=c[b+4>>2]|0;nb[c[(c[e>>2]|0)+16>>2]&127](e,d);aH(b);return}function ep(b){b=b|0;var d=0;c[b>>2]=6896;if(!(a[b+61>>0]|0))return;d=c[b+52>>2]|0;lb[c[c[d>>2]>>2]&511](d);b=c[b+52>>2]|0;if(!b)return;c[6437]=(c[6437]|0)+1;Tc(c[b+-4>>2]|0);return}function fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=l;l=l+16|0;c[e>>2]=8944;c[e+4>>2]=b;Vb[c[(c[a>>2]|0)+48>>2]&127](a,e,d);l=e;return}function gp(b){b=b|0;var d=0,e=0;c[b>>2]=5700;if(!(a[b+8>>0]|0)){aH(b);return}d=c[b+12>>2]|0;if(!d){aH(b);return}e=c[b+4>>2]|0;nb[c[(c[e>>2]|0)+16>>2]&127](e,d);aH(b);return}function hp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0;}b=e;}else Vh(b,c,d)|0;return b|0}function ip(){var a=0,b=0;b=l;l=l+32|0;a=Er(112)|0;Ps(b);cg(a,b);l=b;return a|0}function jp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=S(b&65535,a&65535)|0;e=(c>>>16)+(S(b&65535,a>>>16)|0)|0;d=S(b>>>16,a&65535)|0;return (D=(e>>>16)+(S(b>>>16,a>>>16)|0)+(((e&65535)+d|0)>>>16)|0,e+d<<16|c&65535|0)|0}function kp(b){b=b|0;var d=0,e=0;c[b>>2]=6176;if(!(a[b+16>>0]|0)){aH(b);return}d=c[b+20>>2]|0;if(!d){aH(b);return}e=c[b+4>>2]|0;nb[c[(c[e>>2]|0)+16>>2]&127](e,d);aH(b);return}function lp(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;e=+F(+(+g[b>>2]));d=+F(+(+g[b+4>>2]));c=+F(+(+g[b+8>>2]));g[a+12>>2]=e;g[a+16>>2]=d;g[a+20>>2]=c;g[a+24>>2]=0.0;return}function mp(a,b){a=a|0;b=b|0;Gf(a,c[b+36>>2]|0);return}function np(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(JB(a,c[b+8>>2]|0)|0)Fm(b,d,e);return}function op(a){a=a|0;var b=0;c[a>>2]=5680;b=c[a+48>>2]|0;nb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+64>>2]|0);b=c[a+48>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+64>>2]|0);aH(a);return}function pp(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=+j;k=k|0;l=+l;m=m|0;Qb[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,+j,k|0,+l,m|0);}function qp(b){b=b|0;var d=0,e=0,f=0;e=c[b>>2]|0;f=(a[e>>0]|0)+-48|0;if(f>>>0<10){d=0;do{d=f+(d*10|0)|0;e=e+1|0;c[b>>2]=e;f=(a[e>>0]|0)+-48|0;}while(f>>>0<10)}else d=0;return d|0}function rp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;g[a>>2]=(1.0-d)*+g[b>>2]+ +g[c>>2]*d;g[a+4>>2]=(1.0-d)*+g[b+4>>2]+ +g[c+4>>2]*d;g[a+8>>2]=(1.0-d)*+g[b+8>>2]+ +g[c+8>>2]*d;return}function sp(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;var i=0;i=l;l=l+16|0;g[i+8>>2]=b+e;g[i+4>>2]=c+f;g[i>>2]=d+h;Xr(a,i+8|0,i+4|0,i);l=i;return}function tp(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;var i=0;i=l;l=l+16|0;g[i+8>>2]=b*e;g[i+4>>2]=c*f;g[i>>2]=d*h;Xr(a,i+8|0,i+4|0,i);l=i;return}function up(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;var i=0;i=l;l=l+16|0;g[i+8>>2]=b-e;g[i+4>>2]=c-f;g[i>>2]=d-h;Xr(a,i+8|0,i+4|0,i);l=i;return}function vp(a,b){a=a|0;b=b|0;var c=0;c=l;l=l+16|0;g[c+8>>2]=-+g[b>>2];g[c+4>>2]=-+g[b+4>>2];g[c>>2]=-+g[b+8>>2];Xu(a,c+8|0,c+4|0,c,b+12|0);l=c;return}function wp(a){a=a|0;var b=0;c[a>>2]=7248;b=c[a+52>>2]|0;if(!b)return;lb[c[c[b>>2]>>2]&511](b);a=c[a+52>>2]|0;if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function xp(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return +(+db(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0))}function yp(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;if(!((b|0)==0&(c|0)==0))do{e=e+-1|0;a[e>>0]=d[21919+(b&15)>>0]|0|f;b=Ct(b|0,c|0,4)|0;c=D;}while(!((b|0)==0&(c|0)==0));return e|0}function zp(a){a=a|0;var b=0;c[a>>2]=5680;b=c[a+48>>2]|0;nb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+64>>2]|0);b=c[a+48>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+64>>2]|0);return}function Ap(){var b=0;b=Er(40)|0;g[b+12>>2]=1.0;c[b+8>>2]=0;c[b+4>>2]=5;c[b>>2]=3124;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;a[b+16>>0]=1;return b|0}function Bp(b){b=b|0;var c=0;c=a[n+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[n+(b>>>24)>>0]|0)+24|0}function Cp(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+16|0;tp(e,b,c,d,+g[a+348>>2],+g[a+352>>2],+g[a+356>>2]);yr(a+412|0,e)|0;l=e;return}function Dp(a,b,c){a=+a;b=+b;c=+c;var d=0,e=0;e=l;l=l+16|0;g[e+8>>2]=a;g[e+4>>2]=b;g[e>>2]=c;d=Is()|0;Xr(d,e+8|0,e+4|0,e);l=e;return d|0}function Ep(a,b){a=a|0;b=b|0;c[a+12>>2]=c[b>>2];c[a+12+4>>2]=c[b+4>>2];c[a+12+8>>2]=c[b+8>>2];c[a+12+12>>2]=c[b+12>>2];dj(a);return}function Fp(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return ob[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function Gp(a,b){a=a|0;b=b|0;a=c[a+12>>2]|0;return Kb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0}function Hp(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+16|0;tp(e,b,c,d,+g[a+544>>2],+g[a+548>>2],+g[a+552>>2]);yr(a+428|0,e)|0;l=e;return}function Ip(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return +Mb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function Jp(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=ms()|0;re(h,a,b,c,d,e,f,g);return h|0}function Lp(a,b,d){a=a|0;b=b|0;d=d|0;zy(a,b);c[a+48>>2]=c[d>>2];c[a+48+4>>2]=c[d+4>>2];c[a+48+8>>2]=c[d+8>>2];c[a+48+12>>2]=c[d+12>>2];return}function Mp(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+328>>2]=c[b>>2];c[a+328+4>>2]=c[b+4>>2];c[a+328+8>>2]=c[b+8>>2];c[a+328+12>>2]=c[b+12>>2];return}function Np(){var a=0,b=0;b=l;l=l+32|0;a=Er(92)|0;Ps(b);Kd(a,b);l=b;return a|0}function Op(a,b,d){a=a|0;b=b|0;d=d|0;c[d>>2]=c[a+56+(b<<4)>>2];c[d+4>>2]=c[a+56+(b<<4)+4>>2];c[d+8>>2]=c[a+56+(b<<4)+8>>2];c[d+12>>2]=c[a+56+(b<<4)+12>>2];return}function Pp(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+312>>2]=c[b>>2];c[a+312+4>>2]=c[b+4>>2];c[a+312+8>>2]=c[b+8>>2];c[a+312+12>>2]=c[b+12>>2];return}function Qp(b,d){b=b|0;d=d|0;if(!(a[22592]|0))iy(22592)|0;d=bF(b,d)|0;c[5740]=c[d>>2];c[5741]=c[d+4>>2];c[5742]=c[d+8>>2];c[5743]=c[d+12>>2];return 22960}function Rp(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+544>>2]=c[b>>2];c[a+544+4>>2]=c[b+4>>2];c[a+544+8>>2]=c[b+8>>2];c[a+544+12>>2]=c[b+12>>2];return}function Sp(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=j|0;k=k|0;l=+l;wb[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,j|0,k|0,+l);}function Tp(a){a=a|0;var b=0.0,d=0.0;d=+g[a+32>>2];+Db[c[(c[a>>2]|0)+48>>2]&15](a);b=+Db[c[(c[a>>2]|0)+48>>2]&15](a);+Db[c[(c[a>>2]|0)+48>>2]&15](a);return +(d+b)}function Up(a){a=a|0;var b=0.0,d=0.0;d=+g[a+28>>2];b=+Db[c[(c[a>>2]|0)+48>>2]&15](a);+Db[c[(c[a>>2]|0)+48>>2]&15](a);+Db[c[(c[a>>2]|0)+48>>2]&15](a);return +(d+b)}function Vp(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;Jb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0);}function Wp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=l;l=l+16|0;c[e>>2]=c[d>>2];a=zb[c[(c[a>>2]|0)+16>>2]&63](a,b,e)|0;if(a)c[d>>2]=c[e>>2];l=e;return a&1|0}function Xp(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;var f=0;f=l;l=l+16|0;g[f+8>>2]=b*e;g[f+4>>2]=c*e;g[f>>2]=d*e;Xr(a,f+8|0,f+4|0,f);l=f;return}function Yp(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]*+g[b>>2];g[a+4>>2]=+g[a+4>>2]*+g[b>>2];g[a+8>>2]=+g[a+8>>2]*+g[b>>2];g[a+12>>2]=+g[a+12>>2]*+g[b>>2];return a|0}function Zp(){var a=0;a=Er(8)|0;c[6435]=a;Za(a|0,0)|0;c[6425]=19506;c[6426]=0;c[6427]=0;c[6428]=0;c[6429]=0;c[6430]=0;c[6431]=0;c[6432]=0;c[6433]=0;_q(25700);return}function _p(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Qo(a,b,c,d,e,f,g,h,i,j);return}function $p(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=Rr(324)|0;Od(d,a,b,c);return d|0}function aq(b){b=b|0;var d=0;c[b>>2]=3124;d=c[b+32>>2]|0;if(!d){aH(b);return}if(!(a[b+36>>0]|0)){aH(b);return}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);aH(b);return}function bq(a,b,d){a=a|0;b=b|0;d=d|0;b=c[b+204>>2]|0;if(b&4|0)return 0;a=c[d+204>>2]|0;if(!(a&4))return (b&3|0)==0|(a&3|0)==0|0;else return 0;return 0}function cq(a,b,d){a=a|0;b=b|0;d=d|0;qm(a,b);c[a+48>>2]=c[d>>2];c[a+48+4>>2]=c[d+4>>2];c[a+48+8>>2]=c[d+8>>2];c[a+48+12>>2]=c[d+12>>2];return}function dq(b){b=b|0;var d=0;c[b>>2]=6128;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function eq(b){b=b|0;var d=0;c[b>>2]=5256;d=c[b+20>>2]|0;if(!d){aH(b);return}if(!(a[b+24>>0]|0)){aH(b);return}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);aH(b);return}function fq(a,b){a=a|0;b=b|0;var c=0;c=l;l=l+128|0;Fn(c,a+68|0);Ro(c+64|0,c,a+4|0);Cq(b,c+64|0);l=c;return}function gq(b){b=b|0;var d=0;c[b>>2]=9380;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function hq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=ms()|0;re(g,a,b,c,d,e,f,0);return g|0}function iq(b){b=b|0;var d=0;c[b>>2]=5604;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function jq(a,b){a=a|0;b=b|0;a=c[a+4>>2]|0;return ((c[b>>2]|0)==(a|0)?1:(c[b+4>>2]|0)==(a|0))|0}function kq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=$r()|0;xe(f,a,b,c,d,e);return f|0}function lq(a,b){a=a|0;b=b|0;a=c[a+20>>2]|0;return Kb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0}function mq(b){b=b|0;var d=0;c[b>>2]=8772;d=c[b+16>>2]|0;if(!d){aH(b);return}if(!(a[b+20>>0]|0)){aH(b);return}c[6437]=(c[6437]|0)+1;Tc(c[d+-4>>2]|0);aH(b);return}function nq(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+16|0;g[e+8>>2]=b;g[e+4>>2]=c;g[e>>2]=d;Xr(a,e+8|0,e+4|0,e);l=e;return}function oq(b){b=b|0;var d=0;c[b>>2]=5700;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function pq(a,b,d){a=a|0;b=b|0;d=d|0;WF(a);c[a>>2]=3008;Cq(a+4|0,b);Cq(a+68|0,d);Cq(a+132|0,b);c[a+196>>2]=0;return}function qq(b){b=b|0;var d=0;c[b>>2]=6176;if(!(a[b+16>>0]|0))return;d=c[b+20>>2]|0;if(!d)return;b=c[b+4>>2]|0;nb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function rq(a){a=a|0;var b=0;b=l;l=l+16|0;Vm(a);g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=0.0;Xr(a+48|0,b+8|0,b+4|0,b);l=b;return}function sq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return Tb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function tq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var f=0;f=Er(44)|0;km(f,a,b,c,d,e);return f|0}function uq(a,b,c){a=a|0;b=b|0;c=+c;switch(b|0){case 3:{a=a+452|0;break}case 4:{a=a+448|0;break}case 5:{a=a+444|0;break}default:return}g[a>>2]=c;return}function vq(a,b){a=a|0;b=b|0;b=c[b+36>>2]|0;Ge(a,c[(c[(c[(c[a+4>>2]|0)+4>>2]|0)+24>>2]|0)+(b*80|0)+64>>2]|0,b);return}function wq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return +Ob[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function xq(a,b){a=a|0;b=b|0;var c=0;c=0;while(1){if((c|0)==3)break;g[a+868+(c<<6)+4>>2]=+ls(+g[(fH(b)|0)+(c<<2)>>2]);c=c+1|0;}return}function yq(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;var e=0;e=Er(140)|0;Qk(e,a,b,c,d);return e|0}function zq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return +(+vb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,i))}function Aq(b,c,d){b=b|0;c=c|0;d=d|0;if(!((b|0)==0&(c|0)==0))do{d=d+-1|0;a[d>>0]=b&7|48;b=Ct(b|0,c|0,3)|0;c=D;}while(!((b|0)==0&(c|0)==0));return d|0}function Bq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=0;while(1){if((e|0)>=(b|0))break;c[d+(e<<2)>>2]=c[(c[a+12>>2]|0)+(e<<2)>>2];e=e+1|0;}return}function Cq(a,b){a=a|0;b=b|0;qm(a,b);c[a+48>>2]=c[b+48>>2];c[a+48+4>>2]=c[b+48+4>>2];c[a+48+8>>2]=c[b+48+8>>2];c[a+48+12>>2]=c[b+48+12>>2];return}function Dq(a,b){a=a|0;b=b|0;Xr(a,b,b+16|0,b+32|0);Xr(a+16|0,b+4|0,b+20|0,b+36|0);Xr(a+32|0,b+8|0,b+24|0,b+40|0);return}function Eq(a,b){a=a|0;b=b|0;var c=0;c=0;while(1){if((c|0)==3)break;g[a+868+(c<<6)>>2]=+ls(+g[(fH(b)|0)+(c<<2)>>2]);c=c+1|0;}return}function Fq(a){a=a|0;c[6436]=(c[6436]|0)+1;a=ic((a<<2|3)+16|0)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Gq(a,b){a=a|0;b=b|0;lb[c[(c[b>>2]|0)+32>>2]&511](b);dd(a,b);lb[c[(c[b>>2]|0)+36>>2]&511](b);return}function Hq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Ib[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0);}function Iq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Vb[c[(c[a>>2]|0)+108>>2]&127](a,b,d);Vb[c[(c[a>>2]|0)+108>>2]&127](a,(b+1|0)%3|0,e);return}function Jq(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0;e=l;l=l+16|0;g[e+8>>2]=-b;g[e+4>>2]=-c;g[e>>2]=-d;Xr(a,e+8|0,e+4|0,e);l=e;return}function Kq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ds()|0;Xd(f,a,b,c&65535,d,e);return f|0}function Lq(a){a=a|0;c[6436]=(c[6436]|0)+1;a=ic((a*104|3)+16|0)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Mq(a,b){a=a|0;b=b|0;c[a+12>>2]=c[b>>2];c[a+12+4>>2]=c[b+4>>2];c[a+12+8>>2]=c[b+8>>2];c[a+12+12>>2]=c[b+12>>2];return}function Nq(a,b){a=a|0;b=b|0;c[a+44>>2]=c[b>>2];c[a+44+4>>2]=c[b+4>>2];c[a+44+8>>2]=c[b+8>>2];c[a+44+12>>2]=c[b+12>>2];return}function Oq(a,c){a=a|0;c=c|0;if(!((b[c+4>>1]&b[a+6>>1])<<16>>16)){c=0;return c|0}c=(b[a+4>>1]&b[c+6>>1])<<16>>16!=0;return c|0}function Pq(a,c){a=a|0;c=c|0;if(!((b[c+4>>1]&b[a+10>>1])<<16>>16)){c=0;return c|0}c=(b[a+8>>1]&b[c+6>>1])<<16>>16!=0;return c|0}function Qq(a,b){a=a|0;b=b|0;c[a+696>>2]=c[b>>2];c[a+696+4>>2]=c[b+4>>2];c[a+696+8>>2]=c[b+8>>2];c[a+696+12>>2]=c[b+12>>2];return}function Rq(a,b){a=a|0;b=b|0;c[a+680>>2]=c[b>>2];c[a+680+4>>2]=c[b+4>>2];c[a+680+8>>2]=c[b+8>>2];c[a+680+12>>2]=c[b+12>>2];return}function Sq(a,b){a=a|0;b=b|0;c[a+60>>2]=c[b>>2];c[a+60+4>>2]=c[b+4>>2];c[a+60+8>>2]=c[b+8>>2];c[a+60+12>>2]=c[b+12>>2];return}function Tq(a,b){a=a|0;b=b|0;c[a+28>>2]=c[b>>2];c[a+28+4>>2]=c[b+4>>2];c[a+28+8>>2]=c[b+8>>2];c[a+28+12>>2]=c[b+12>>2];return}function Uq(a,b){a=a|0;b=b|0;c[a+156>>2]=c[b>>2];c[a+156+4>>2]=c[b+4>>2];c[a+156+8>>2]=c[b+8>>2];c[a+156+12>>2]=c[b+12>>2];return}function Vq(b,c,d){b=b|0;c=c|0;d=d|0;a[b+1309+c>>0]=d&1;if((c|0)<3){a[b+788+c>>0]=d&1;return}else{a[b+868+(c+-3<<6)+44>>0]=d&1;return}}function Wq(a,c){a=a|0;c=c|0;if(!((b[c+4>>1]&b[a+14>>1])<<16>>16)){c=0;return c|0}c=(b[a+12>>1]&b[c+6>>1])<<16>>16!=0;return c|0}function Xq(a,b){a=a|0;b=b|0;c[a+108>>2]=c[b>>2];c[a+108+4>>2]=c[b+4>>2];c[a+108+8>>2]=c[b+8>>2];c[a+108+12>>2]=c[b+12>>2];return}function Yq(b){b=b|0;if(a[22640]|0)return 23136;if(!(iy(22640)|0))return 23136;c[5784]=1065353216;c[5785]=1065353216;c[5786]=1065353216;g[5787]=0.0;return 23136}function Zq(a,b){a=a|0;b=b|0;c[a+20>>2]=c[b>>2];c[a+20+4>>2]=c[b+4>>2];c[a+20+8>>2]=c[b+8>>2];c[a+20+12>>2]=c[b+12>>2];return}function _q(a){a=a|0;var b=0;do{c[a+4>>2]=0;g[a+8>>2]=0.0;b=c[a+24>>2]|0;if(b|0)_q(b);a=c[a+28>>2]|0;}while((a|0)!=0);return}function $q(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;zd(a,b,c,d,e,f);return}function ar(a,b){a=a|0;b=b|0;c[a+172>>2]=c[b>>2];c[a+172+4>>2]=c[b+4>>2];c[a+172+8>>2]=c[b+8>>2];c[a+172+12>>2]=c[b+12>>2];return}function br(a,b){a=a|0;b=b|0;c[a+32>>2]=c[b>>2];c[a+32+4>>2]=c[b+4>>2];c[a+32+8>>2]=c[b+8>>2];c[a+32+12>>2]=c[b+12>>2];return}function cr(a){a=a|0;g[a>>2]=5.880000114440918;g[a+4>>2]=.8299999833106995;g[a+8>>2]=.8799999952316284;g[a+12>>2]=500.0;g[a+16>>2]=10.5;g[a+20>>2]=6.0e3;return}function dr(a,b){a=a|0;b=b|0;c[a+24>>2]=c[b>>2];c[a+24+4>>2]=c[b+4>>2];c[a+24+8>>2]=c[b+8>>2];c[a+24+12>>2]=c[b+12>>2];return}function er(a,b){a=a|0;b=b|0;c[a+316>>2]=c[b>>2];c[a+316+4>>2]=c[b+4>>2];c[a+316+8>>2]=c[b+8>>2];c[a+316+12>>2]=c[b+12>>2];return}function fr(a,b){a=a|0;b=b|0;c[a+300>>2]=c[b>>2];c[a+300+4>>2]=c[b+4>>2];c[a+300+8>>2]=c[b+8>>2];c[a+300+12>>2]=c[b+12>>2];return}function gr(a,b){a=a|0;b=b|0;c[a+64>>2]=c[b>>2];c[a+64+4>>2]=c[b+4>>2];c[a+64+8>>2]=c[b+8>>2];c[a+64+12>>2]=c[b+12>>2];return}function hr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ds()|0;Xd(e,a,b,c&65535,d,0);return e|0}function ir(a,b){a=a|0;b=b|0;c[a+52>>2]=c[b>>2];c[a+52+4>>2]=c[b+4>>2];c[a+52+8>>2]=c[b+8>>2];c[a+52+12>>2]=c[b+12>>2];return}function jr(a,b){a=a|0;b=b|0;c[a+188>>2]=c[b>>2];c[a+188+4>>2]=c[b+4>>2];c[a+188+8>>2]=c[b+8>>2];c[a+188+12>>2]=c[b+12>>2];return}function kr(a,b){a=a|0;b=b|0;c[a+40>>2]=c[b>>2];c[a+40+4>>2]=c[b+4>>2];c[a+40+8>>2]=c[b+8>>2];c[a+40+12>>2]=c[b+12>>2];return}function lr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[d>>2];c[a+8>>2]=c[e>>2];c[a+12>>2]=c[f>>2];return}function mr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return +vb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function nr(a,b){a=a|0;b=b|0;c[a+16>>2]=c[b>>2];c[a+16+4>>2]=c[b+4>>2];c[a+16+8>>2]=c[b+8>>2];c[a+16+12>>2]=c[b+12>>2];return}function or(a,b,d){a=a|0;b=b|0;d=+d;nb[c[(c[a>>2]|0)+32>>2]&127](a,b);Xb[c[(c[a>>2]|0)+36>>2]&7](a,b,d);return}function pr(a,b){a=a|0;b=b|0;c[a+68>>2]=c[b>>2];c[a+68+4>>2]=c[b+4>>2];c[a+68+8>>2]=c[b+8>>2];c[a+68+12>>2]=c[b+12>>2];return}function qr(a,b){a=a|0;b=b|0;c[a+36>>2]=c[b>>2];c[a+36+4>>2]=c[b+4>>2];c[a+36+8>>2]=c[b+8>>2];c[a+36+12>>2]=c[b+12>>2];return}function rr(a,b){a=a|0;b=b|0;c[a>>2]=c[b+248>>2];c[a+4>>2]=c[b+248+4>>2];c[a+8>>2]=c[b+248+8>>2];c[a+12>>2]=c[b+248+12>>2];return}function sr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=$r()|0;Ld(d,a,b,c);return d|0}function tr(){var a=0;a=hs()|0;tn();tn();pq(a,22848,22848);return a|0}function ur(a,b,d){a=a|0;b=b|0;d=d|0;if((c[a+4>>2]|0)==(b|0)?(c[a+28>>2]|0)!=1:0)c[a+28>>2]=d;return}function vr(){var a=0,b=0;b=_r(c[5678]|0,c[5679]|0,1284865837,1481765933)|0;b=xv(b|0,D|0,1,0)|0;a=D;c[5678]=b;c[5679]=a;a=Ct(b|0,a|0,33)|0;return a|0}function wr(a,b){a=a|0;b=b|0;c[a+48>>2]=c[b>>2];c[a+48+4>>2]=c[b+4>>2];c[a+48+8>>2]=c[b+8>>2];c[a+48+12>>2]=c[b+12>>2];return}function xr(){var a=0,b=0;a=l;l=l+16|0;if(!(_a(26312,3)|0)){b=Qa(c[6579]|0)|0;l=a;return b|0}else Cv(22212,a);return 0}function yr(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]+ +g[b>>2];g[a+4>>2]=+g[a+4>>2]+ +g[b+4>>2];g[a+8>>2]=+g[a+8>>2]+ +g[b+8>>2];return a|0}function zr(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]-+g[b>>2];g[a+4>>2]=+g[a+4>>2]-+g[b+4>>2];g[a+8>>2]=+g[a+8>>2]-+g[b+8>>2];return a|0}function Ar(a,b){a=a|0;b=b|0;var c=0;c=l;l=l+64|0;Ro(c,b,a+68|0);Cq(a+4|0,c);l=c;return}function Br(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=l;l=l+16|0;Oe(a,b,d,e,f|0)|0;l=f;return (D=c[f+4>>2]|0,c[f>>2]|0)|0}function Cr(a){a=a|0;var b=0;b=Er(112)|0;cg(b,a);return b|0}function Dr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ds()|0;Xd(d,a,b,c&65535,0,0);return d|0}function Er(a){a=a|0;var b=0;b=(a|0)==0?1:a;while(1){a=ic(b)|0;if(a|0)break;a=uD()|0;if(!a){a=0;break}Wb[a&3]();}return a|0}function Fr(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];return}function Gr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Rr(1252)|0;tc(e,a,b,c,d);return e|0}function Hr(a,b){a=a|0;b=b|0;c[a+72>>2]=c[b>>2];c[a+72+4>>2]=c[b+4>>2];c[a+72+8>>2]=c[b+8>>2];c[a+72+12>>2]=c[b+12>>2];return}function Ir(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]*+g[b>>2];g[a+4>>2]=+g[a+4>>2]*+g[b>>2];g[a+8>>2]=+g[a+8>>2]*+g[b>>2];return a|0}function Jr(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;g[a+(c[b+52>>2]<<2)>>2]=1.0;return}function Kr(a){a=a|0;var b=0;b=l;l=l+16|0;Tc(a);if(!(Sa(c[6579]|0,0)|0)){l=b;return}else Cv(22311,b);}function Lr(a,b){a=a|0;b=b|0;c[a+8>>2]=c[b>>2];c[a+8+4>>2]=c[b+4>>2];c[a+8+8>>2]=c[b+8>>2];c[a+8+12>>2]=c[b+12>>2];return}function Mr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(215)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Nr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Cs()|0;Ne(d,a,b,c);return d|0}function Or(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cc(b,c,d,e)|0}function Pr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(203)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Qr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(1407)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Rr(a){a=a|0;c[6436]=(c[6436]|0)+1;a=ic(a+19|0)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Sr(a){a=a|0;var b=0;b=hs()|0;tn();pq(b,a,22848);return b|0}function Tr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(191)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Ur(a,b){a=a|0;b=b|0;if(!b?c[a+204>>2]&3|0:0)return;if((c[a+216>>2]&-2|0)!=4)c[a+216>>2]=1;g[a+220>>2]=0.0;return}function Vr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a+-4>>2]|0)+8>>2]&127](a+-4|0,b,d,e);return}function Wr(a,b){a=a|0;b=b|0;var c=0.0;c=+MD(a);c=+TG(c*+MD(b));return +(+sz(+No(a,b)/c))}function Xr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[d>>2];c[a+8>>2]=c[e>>2];g[a+12>>2]=0.0;return}function Yr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(143)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Zr(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(115)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function _r(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=jp(a,c)|0;f=D;return (D=(S(b,c)|0)+(S(d,a)|0)+f|f&0,e|0|0)|0}function $r(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(1331)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function as(b){b=b|0;var d=0;d=c[b+12>>2]|0;if(!d)return;if(a[b+16>>0]&1)Zw(d);c[b+12>>2]=0;return}function bs(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Hb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0);}function cs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(379)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function ds(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(135)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function es(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(627)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function fs(a,b){a=a|0;b=b|0;var c=0;c=ds()|0;Xd(c,a,b,16384,0,0);return c|0}function gs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(791)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function hs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(219)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function is(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(1147)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function js(a,b){a=a|0;b=b|0;var c=0;c=Er(80)|0;xm(c,a,b);return c|0}function ks(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(103)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function ls(a){a=+a;a=+_F(a);if(a<-3.1415927410125732){a=a+6.2831854820251465;return +a}if(!(a>3.1415927410125732))return +a;a=a+-6.2831854820251465;return +a}function ms(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(783)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function ns(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(131)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function os(a,b){a=a|0;b=b|0;c[a+348>>2]=c[b>>2];c[a+348+4>>2]=c[b+4>>2];c[a+348+8>>2]=c[b+8>>2];return}function ps(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)<=0)return;Ik(c|0,0,d<<4|0)|0;return}function qs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(111)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function rs(a,b){a=a|0;b=b|0;c[a+480>>2]=b;if(!b)return;nb[c[(c[b>>2]|0)+8>>2]&127](b,a+4|0);return}function ss(a,b){a=a|0;b=b|0;var c=0;c=Cs()|0;Ne(c,a,b,1);return c|0}function ts(a){a=a|0;var b=0;b=Er(92)|0;Kd(b,a);return b|0}function us(a,b){a=a|0;b=b|0;c[a>>2]=1065353216;c[a+4>>2]=1065353216;c[a+8>>2]=1065353216;g[a+12>>2]=0.0;return}function vs(b){b=b|0;if(!(pb[c[(c[b>>2]|0)+40>>2]&127](b)|0))return;c[b+16>>2]=c[b+28>>2];a[b+169>>0]=1;return}function ws(a){a=a|0;Pz(a+144|0);Pz(a+124|0);Pz(a+104|0);return}function xs(a,b){a=a|0;b=b|0;var d=0;d=c[a+8>>2]|0;Vb[c[d+60>>2]&127](b,d,c[a+4>>2]|0);return 0}function ys(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(71)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function zs(a,b){a=a|0;b=b|0;var d=0;d=a+92|0;do{c[a>>2]=c[b>>2];a=a+4|0;b=b+4|0;}while((a|0)<(d|0));return}function As(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;wg(a,b,c,d);return}function Bs(a){a=a|0;if(!a){a=0;return a|0}a=Fq(a)|0;return a|0}function Cs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(95)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Ds(a,b){a=a|0;b=b|0;return +(+bx(+g[a>>2],+g[a+4>>2],+g[a+8>>2],+g[b>>2],+g[b+4>>2],+g[b+8>>2]))}function Es(a,b){a=a|0;b=b|0;var c=0;c=Er(84)|0;Jm(c,a,b);return c|0}function Fs(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return}function Gs(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(75)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Hs(a){a=a|0;var b=0;b=l;l=l+16|0;c[b>>2]=fH(c[a+60>>2]|0)|0;a=gB(Wa(6,b|0)|0)|0;l=b;return a|0}function Is(){var a=0;c[6436]=(c[6436]|0)+1;a=ic(35)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function Js(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Eb[a&3](b|0,c|0,d|0,e|0,f|0,g|0)|0}function Ks(a){a=a|0;Yf(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Ls(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+8>>2]&127](a,b,d,e);return}function Ms(a){a=a|0;c[a>>2]=2928;g[a+4>>2]=1.0;c[a+8>>2]=0;b[a+12>>1]=1;b[a+14>>1]=-1;c[a+16>>2]=0;return}function Ns(a){a=a|0;var b=0;b=Gs()|0;Kh(b,a);c[b>>2]=8472;c[b+52>>2]=2;return b|0}function Os(a){a=a|0;var b=0;b=Gs()|0;Kh(b,a);c[b>>2]=8368;c[b+52>>2]=0;return b|0}function Ps(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=4096;c[a+12>>2]=4096;c[a+16>>2]=0;c[a+20>>2]=1;return}function Qs(a,b,d){a=a|0;b=b|0;d=d|0;me(c[a+116>>2]|0,c[a+144>>2]|0,b,d);return}function Rs(a,b){a=a|0;b=+b;var c=0;c=l;l=l+16|0;g[c>>2]=b;a=Yp(a,c)|0;l=c;return a|0}function Ss(a,b){a=a|0;b=b|0;var c=0;c=hs()|0;pq(c,a,b);return c|0}function Ts(a,b,d){a=a|0;b=b|0;d=d|0;Vb[c[(c[b>>2]|0)+64>>2]&127](a,b,d);return}function Us(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0.0}function Vs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+80>>2]&127](a,b,d,e);return}function Ws(a){a=a|0;if(!a){a=0;return a|0}a=Lq(a)|0;return a|0}function Xs(){var a=0;a=l;l=l+16|0;if(!(Ta(26316,261)|0)){l=a;return}else Cv(22261,a);}function Ys(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;return +Fb[a&3](b|0,c|0,d|0,+e,f|0,g|0)}function Zs(a,b){a=a|0;b=+b;var c=0;c=l;l=l+16|0;g[c>>2]=b;a=Ir(a,c)|0;l=c;return a|0}function _s(a){a=a|0;if(c[a+204>>2]&3|0)return;if((c[a+216>>2]&-2|0)!=4)c[a+216>>2]=1;g[a+220>>2]=0.0;return}function $s(a,b){a=a|0;b=b|0;wn(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function at(){var a=0;a=Er(8)|0;c[a>>2]=0;c[a+4>>2]=0;Wx(a);return a|0}function bt(a,b){a=a|0;b=b|0;a=c[a+4>>2]|0;Kb[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;return}function ct(a,b){a=a|0;b=b|0;Dq(a,b);Xr(a+48|0,b+48|0,b+52|0,b+56|0);return}function dt(a,b,d){a=a|0;b=b|0;d=d|0;zg(c[a+116>>2]|0,b,d);return}function et(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+192>>2]=b;c[a+200>>2]=b;return}function ft(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Bb[a&7](b|0,c|0,d|0,e|0,f|0,g|0);}function gt(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=+i;j=j|0;k=+k;l=l|0;W(33);}function ht(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+24>>2]&127](a,b,d,e);return}function it(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+88>>2]&127](a,b,d,e);return}function jt(a,b,d){a=a|0;b=b|0;d=d|0;Vb[c[(c[b>>2]|0)+68>>2]&127](a,b,d);return}function kt(b,d){b=b|0;d=d|0;b=(a[b+344>>0]|0)==0?3:0;c[d>>2]=b;c[d+4>>2]=b;return}function lt(a,b){a=a|0;b=+b;var c=0;c=l;l=l+16|0;g[c>>2]=1.0/b;a=Yp(a,c)|0;l=c;return a|0}function mt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+36>>2]&127](a,b,d,e);return}function nt(a,b,d){a=a|0;b=+b;d=d|0;return Yb[c[(c[a>>2]|0)+52>>2]&1](a,b,d,.01666666753590107)|0}function ot(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}D=a<<c-32;return 0}function pt(a,b,d){a=a|0;b=+b;d=d|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;return}function qt(a,b){a=a|0;b=b|0;In(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function rt(a,b,d,e){a=a|0;b=+b;d=d|0;e=+e;return Yb[c[(c[a>>2]|0)+52>>2]&1](a,b,d,e)|0}function st(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1065353216;g[a+12>>2]=0.0;return}function tt(a,b){a=a|0;b=b|0;c[a>>2]=1065353216;c[a+4>>2]=0;c[a+8>>2]=0;g[a+12>>2]=0.0;return}function ut(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=1065353216;c[a+8>>2]=0;g[a+12>>2]=0.0;return}function vt(a,b){a=a|0;b=b|0;Vb[c[(c[a>>2]|0)+8>>2]&127](a,b,c[(c[a+8>>2]|0)+48>>2]|0);return}function wt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Ab[a&0](b|0,c|0,d|0,e|0,f|0,+g);}function xt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;mb[a&0](b|0,c|0,d|0,+e,f|0,g|0);}function yt(a,b){a=a|0;b=b|0;Jn(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function zt(b,d,e){b=b|0;d=d|0;e=+e;g[(c[b+720>>2]|0)+(d*104|0)+88>>2]=e>0.0?1.0/e:0.0;a[b+924>>0]=1;return}function At(a,b,d){a=a|0;b=b|0;d=+d;Xb[c[(c[a>>2]|0)+20>>2]&7](a,b,d);return}function Bt(a){a=a|0;return +(+Oi(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0))}function Ct(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=0;return b>>>c-32|0}function Dt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+124>>2]&127](a,e,b,d);return}function Et(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a+120>>2]=b;c[a+124>>2]=d;c[a+128>>2]=e;return}function Ft(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;tb[c[(c[a>>2]|0)+8>>2]&31](a,b,d,e)|0;return}function Gt(a,b){a=a|0;b=b|0;Cp(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function Ht(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;Xr(a,b,d,e);c[a+12>>2]=c[f>>2];return}function It(a,b){a=a|0;b=+b;var c=0;c=l;l=l+16|0;g[c>>2]=1.0/b;a=Ir(a,c)|0;l=c;return a|0}function Jt(b,c,d,e){b=b|0;c=c|0;d=+d;e=+e;a[b+737>>0]=c&1;g[b+680>>2]=d;g[b+684>>2]=e;return}function Kt(a,b){a=a|0;b=b|0;En(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function Lt(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;rn(a,b,c,d,e,f);return}function Mt(a){a=a|0;Oj(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Nt(a){a=a|0;ql(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Ot(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;rb[a&0](b|0,+c,+d,e|0,f|0,g|0);}function Pt(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;W(29);return 0.0}function Qt(a,b,d){a=a|0;b=b|0;d=d|0;Zb[c[(c[a>>2]|0)+36>>2]&127](a,b,d,-3);return}function Rt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function St(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function Tt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;Zb[c[(c[a>>2]|0)+32>>2]&127](a,b,d,e);return}function Ut(a){a=a|0;xg(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Vt(){}function Wt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (D=d,a-c>>>0|0)|0}function Xt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Ef(a,b,c,d,e);return}function Yt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Nf(a,b,c,d,e);return}function Zt(a){a=a|0;var b=0.0,c=0;c=+No(a,a)<0.0;b=+g[a+12>>2];return +(+sz(c?b:-b)*2.0)}function _t(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;W(5);return 0}function $t(a,b){a=a|0;b=b|0;Le(a,b);return}function au(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=i|0;j=j|0;k=+k;W(13);}function bu(a,b){a=a|0;b=b|0;zg(c[a+116>>2]|0,b,1);return}function cu(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;Cq(a+4|0,b);return}function du(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return +xb[a&15](b|0,c|0,d|0,e|0,f|0)}function eu(a,b){a=a|0;b=b|0;var c=0;c=Tr()|0;Sf(c,a,b);return c|0}function fu(a,b){a=a|0;b=b|0;if(!b)b=0;else b=Ei(c[b>>2]|0,c[b+4>>2]|0,a)|0;return (b|0?b:a)|0}function gu(a,b){a=a|0;b=b|0;Hp(a,+g[b>>2],+g[b+4>>2],+g[b+8>>2]);return}function hu(a,b,d){a=a|0;b=b|0;d=d|0;Zb[c[(c[a>>2]|0)+36>>2]&127](a,b,d,-1);return}function iu(a,b){a=a|0;b=+b;return Yb[c[(c[a>>2]|0)+52>>2]&1](a,b,1,.01666666753590107)|0}function ju(a){a=a|0;var b=0;b=Er(8)|0;$u(b,a);return b|0}function ku(a,b,d){a=a|0;b=b|0;d=d|0;Vb[c[(c[a>>2]|0)+56>>2]&127](a,b,d);return}function lu(a,b,d){a=a|0;b=b|0;d=+d;Xb[c[(c[a>>2]|0)+36>>2]&7](a,b,d);return}function mu(a){a=a|0;Xh(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function nu(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;W(26);}function ou(a){a=a|0;cj(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function pu(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;rn(a,b,c,d,e,1.0);return}function qu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return +Rb[a&3](b|0,c|0,+d,e|0,f|0)}function ru(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;Jt(a,b,c,d);return}function su(a){a=a|0;c[a>>2]=8184;if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function tu(a,b){a=a|0;b=b|0;return c[(tA(c[a+24>>2]|0,b)|0)+64>>2]|0}function uu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;jb[a&31](b|0,c|0,d|0,e|0,f|0);}function vu(a){a=a|0;if(!(c[a+12>>2]|0)){a=0;return a|0}a=c[a+20>>2]|0;return a|0}function wu(a){a=a|0;as(a);qv(a);return}function xu(a){a=a|0;Sl(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function yu(a,b){a=a|0;b=b|0;var c=0;c=Er(64)|0;Lp(c,a,b);return c|0}function zu(){var a=0;a=Er(24)|0;Ps(a);return a|0}function Au(a,b,d){a=a|0;b=b|0;d=+d;kb[c[(c[a>>2]|0)+16>>2]&31](a,d);return}function Bu(a,b,c){a=a|0;b=b|0;c=c|0;Kn(a,b,c);return}function Cu(a,b){a=a|0;b=b|0;Zb[c[(c[a>>2]|0)+36>>2]&127](a,b,2,-3);return}function Du(a,b,d){a=a|0;b=+b;d=d|0;ub[c[(c[a>>2]|0)+32>>2]&15](a,b,d);return}function Eu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function Fu(a){a=a|0;Yh(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Gu(a){a=a|0;_h(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Hu(a,b){a=a|0;b=b|0;go(a,b);return}function Iu(a,b){a=a|0;b=b|0;go(a,b);return}function Ju(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;W(31);return 0.0}function Ku(a,b){a=a|0;b=b|0;go(a,b);return}function Lu(a,b){a=a|0;b=b|0;return c[(sC(c[a+276>>2]|0,b)|0)>>2]|0}function Mu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;Nb[a&1](b|0,c|0,d|0,e|0,+f);}function Nu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;Gb[a&0](b|0,c|0,+d,e|0,f|0);}function Ou(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;W(36);return 0}function Pu(a){a=a|0;if(!(+g[a+16>>2]==0.0)){a=0;return a|0}a=+g[a+20>>2]==0.0;return a|0}function Qu(a){a=a|0;c[a>>2]=4560;if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Ru(a){a=a|0;c[a>>2]=5132;if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function Su(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+16>>2]&127](a,b);return}function Tu(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+40>>2]&127](a,b);return}function Uu(a,b,d){a=a|0;b=b|0;d=+d;Xb[c[(c[a>>2]|0)+8>>2]&7](a,b,d);return}function Vu(a,b){a=a|0;b=b|0;Ny(a,b);return}function Wu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Jc(a,b,c,d)|0;return 1}function Xu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;lr(a,b,c,d,e);return}function Yu(a){a=a|0;var b=0;b=Tr()|0;Sf(b,a,1);return b|0}function Zu(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+232>>2]=b;return}function _u(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+252>>2]=b;return}function $u(a,b){a=a|0;b=b|0;FF(a);c[a>>2]=4980;c[a+4>>2]=b;return}function av(a,b){a=a|0;b=b|0;xq(a,b);return}function bv(a,b){a=a|0;b=b|0;Eq(a,b);return}function cv(a,b){a=a|0;b=b|0;Zb[c[(c[a>>2]|0)+36>>2]&127](a,b,1,-1);return}function dv(a){a=+a;var b=0;h[j>>3]=a;b=c[j>>2]|0;D=c[j+4>>2]|0;return b|0}function ev(a,b,c){a=a|0;b=b|0;c=c|0;Jh(b,c);return}function fv(a){a=a|0;ld(a);if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function gv(a){a=a|0;c[a>>2]=3100;g[a+4>>2]=1.0;b[a+8>>1]=1;b[a+10>>1]=-1;return}function hv(a,b){a=a|0;b=b|0;return c[(sC(c[a+12>>2]|0,b)|0)>>2]|0}function iv(a,b){a=a|0;b=b|0;if((c[a+216>>2]&-2|0)==4)return;c[a+216>>2]=b;return}function jv(a,b){a=a|0;b=b|0;Qq(a,b);return}function kv(a,b){a=a|0;b=b|0;Rq(a,b);return}function lv(a,b){a=a|0;b=b|0;Vb[c[(c[a>>2]|0)+56>>2]&127](a,b,0);return}function mv(a,b){a=a|0;b=+b;Nw(a,b);return}function nv(a,b){a=a|0;b=b|0;return Kb[c[(c[a>>2]|0)+40>>2]&31](a,b)|0}function ov(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+60>>2]&127](a,b);return}function pv(a,b,d){a=a|0;b=b|0;d=+d;nb[c[(c[a>>2]|0)+12>>2]&127](a,b);return}function qv(b){b=b|0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function rv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+92>>2]&127](a,b);return}function sv(a,b){a=a|0;b=b|0;Qm(a,b);return}function tv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return tb[a&31](b|0,c|0,d|0,e|0)|0}function uv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+32>>2]&127](a,b);return}function vv(a){a=a|0;var b=0;b=Gs()|0;Kh(b,a);return b|0}function wv(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;W(25);}function xv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (D=b+d+(a+c>>>0>>>0<a>>>0|0)>>>0,a+c>>>0|0)|0}function yv(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+256>>2]=b;return}function zv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+84>>2]&127](a,b);return}function Av(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;hm(a,b,c,d);return}function Bv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+28>>2]&127](a,b);return}function Cv(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+16|0;c[d>>2]=b;vk(a,d);Km();Ua();}function Dv(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+232>>2]=b;return}function Ev(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return +Sb[a&1](b|0,c|0,d|0,e|0)}function Fv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+72>>2]&127](a,b);return}function Gv(){var a=0;a=ns()|0;Zf(a,0,0,16);return a|0}function Hv(a){a=a|0;return It(a,+dz(+g[a>>2],+g[a+4>>2],+g[a+8>>2]))|0}function Iv(a){a=a|0;var b=0;b=Er(284)|0;qj(b,a);return b|0}function Jv(a){a=a|0;if(!a)return;lb[c[(c[a>>2]|0)+8>>2]&511](a);return}function Kv(a,b){a=a|0;b=+b;g[a+36>>2]=b;g[a+40>>2]=+I(+b);return}function Lv(a){a=a|0;if(!a)return;lb[c[(c[a>>2]|0)+4>>2]&511](a);return}function Mv(a,b){a=a|0;b=+b;return +(+Db[c[(c[a>>2]|0)+16>>2]&15](a)*b)}function Nv(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;W(12);return 0.0}function Ov(a,b){a=a|0;b=b|0;Ku(a+868|0,b);return}function Pv(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+228>>2]=b;return}function Qv(a,b){a=a|0;b=b|0;Ee(a,b);return}function Rv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+8>>2]&127](a,b);return}function Sv(a){a=a|0;if(!a)return;Pz(a);aH(a);return}function Tv(a,b,c){a=a|0;b=b|0;c=c|0;gi(a,b,c);return}function Uv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Zb[a&127](b|0,c|0,d|0,e|0);}function Vv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+12>>2]&127](a,b);return}function Wv(a,b,c){a=a|0;b=b|0;c=c|0;Wk(a,b,c);return}function Xv(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+68>>2]&127](a,b);return}function Yv(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+224>>2]=b;return}function Zv(){var a=0;a=Tr()|0;Sf(a,1,1);return a|0}function _v(a,b,c){a=a|0;b=+b;c=+c;Jw(a,b,c);return}function $v(a,b){a=a|0;b=+b;kb[c[(c[a>>2]|0)+20>>2]&31](a,b);return}function aw(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;ll(a,b,c,d);return}function bw(a,b){a=a|0;b=+b;kb[c[(c[a>>2]|0)+16>>2]&31](a,b);return}function cw(a,b){a=a|0;b=b|0;return +(+g[(c[a+144>>2]|0)+(b*284|0)+232>>2])}function dw(){var a=0;a=Er(196)|0;zh(a,0);return a|0}function ew(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+24>>2]&127](a,b);return}function fw(a,b,d){a=a|0;b=b|0;d=d|0;c[a+20>>2]=b;c[a+28>>2]=d;return}function gw(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=b;c[a+24>>2]=d;return}function hw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function iw(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=+e;return Yb[a&1](b|0,+c,d|0,+e)|0}function jw(a,b,c){a=a|0;b=b|0;c=+c;pm(a,b,c);return}function kw(a,b){a=a|0;b=b|0;nb[c[(c[a>>2]|0)+64>>2]&127](a,b);return}function lw(a){a=a|0;var b=0;b=((fH(c[a+236>>2]|0)|0)&2|0)==0;return (b?0:a)|0}function mw(a,b){a=a|0;b=b|0;return CA(c[a+12>>2]|0,b)|0}function nw(a,b,c){a=a|0;b=b|0;c=c|0;Il(a,b,c);return}function ow(a,b,c){a=a|0;b=b|0;c=+c;g[a+1340+(b<<2)>>2]=c;return}function pw(a,b,c){a=a|0;b=b|0;c=c|0;return dc(a,b,c)|0}function qw(a,b){a=a|0;b=b|0;Hw(a,b);return}function rw(a,b,c){a=a|0;b=b|0;c=+c;uq(a,b,c);return}function sw(a){a=a|0;c[a>>2]=3768;zi(a+12|0);aH(a);return}function tw(a,b){a=a|0;b=b|0;sv(a+708|0,b);return}function uw(a){a=a|0;if(!a)return;JD(a);aH(a);return}function vw(a,b,c){a=a|0;b=b|0;c=+c;g[a+1364+(b<<2)>>2]=c;return}function ww(a,b){a=a|0;b=b|0;ie(a,b);return}function xw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;Ub[a&15](b|0,c|0,d|0,+e);}function yw(a){a=+a;var b=0;b=ys()|0;Yo(b,a);return b|0}function zw(a,b){a=a|0;b=b|0;cu(a,b);return}function Aw(a,b){a=a|0;b=+b;g[a+132>>2]=b;return}function Bw(a,b){a=a|0;b=+b;Ox(a,b);return}function Cw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;qb[a&7](b|0,c|0,+d,e|0);}function Dw(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;sb[a&0](b|0,+c,d|0,e|0);}function Ew(a,b){a=a|0;b=+b;g[a+128>>2]=b;return}function Fw(a,b){a=a|0;b=b|0;er(a,b);return}function Gw(a,b){a=a|0;b=b|0;fr(a,b);return}function Hw(a,b){a=a|0;b=b|0;c[a+176>>2]=(b|0)<0?0:(b|0)<2?b:2;return}function Iw(a,b){a=a|0;b=b|0;c[a+24>>2]=b;return}function Jw(a,b,c){a=a|0;b=+b;c=+c;g[a+472>>2]=b;g[a+476>>2]=c;return}function Kw(a,b){a=a|0;b=b|0;return UA(a,b)|0}function Lw(a,b){a=a|0;b=b|0;g[a+48>>2]=+(b|0);return}function Nw(b,c){b=b|0;c=+c;g[b+572>>2]=c;a[b+553>>0]=1;return}function Ow(a,b){a=a|0;b=b|0;return c[(c[a+20>>2]|0)+(b<<2)>>2]|0}function Pw(a){a=a|0;return +(+qG(+g[a+16>>2]))}function Qw(a){a=a|0;return pb[c[(c[a>>2]|0)+40>>2]&127](a)|0}function Rw(a){a=a|0;var b=0;b=(fH(c[a+236>>2]|0)|0)==4;return (b?a:0)|0}function Sw(a){a=a|0;return +(+dz(+g[a>>2],+g[a+4>>2],+g[a+8>>2]))}function Tw(a,b){a=a|0;b=+b;uA(a,b);return}function Uw(a,b){a=a|0;b=b|0;sA(a,b);return}function Vw(a,b){a=a|0;b=+b;kb[c[(c[a>>2]|0)+44>>2]&31](a,b);return}function Ww(a,b){a=a|0;b=b|0;Mp(a,b);return}function Xw(a,b){a=a|0;b=+b;g[a+136>>2]=b;return}function Yw(a){a=a|0;return yE(+g[a+4>>2])|0}function Zw(a){a=a|0;if(!a)return;c[6437]=(c[6437]|0)+1;Tc(c[a+-4>>2]|0);return}function _w(a,b){a=a|0;b=b|0;CB(a,b);return}function $w(a,b){a=a|0;b=b|0;return (c[a+144>>2]|0)+(b*284|0)+92|0}function ax(a,b){a=a|0;b=b|0;return Lu(a,b)|0}function bx(a,b,c,d,e,f){a=+a;b=+b;c=+c;d=+d;e=+e;f=+f;return +(a*d+b*e+c*f)}function cx(a){a=a|0;c[a>>2]=2880;b[a+4>>1]=1;b[a+6>>1]=-1;return}function dx(a){a=a|0;var b=0;b=(fH(c[a+236>>2]|0)|0)==8;return (b?a:0)|0}function ex(){var a=0;a=Er(24)|0;cr(a);return a|0}function fx(a,b){a=a|0;b=b|0;Pp(a,b);return}function gx(a,b){a=a|0;b=+b;iB(a,b);return}function hx(a){a=a|0;g[a>>2]=.30000001192092896;g[a+4>>2]=1.0;g[a+8>>2]=0.0;return}function ix(a,b){a=a|0;b=+b;EA(a,b);return}function jx(a,b){a=a|0;b=b|0;DB(a,b);return}function kx(a){a=a|0;lb[c[(c[a>>2]|0)+44>>2]&511](a);return}function lx(a,b){a=a|0;b=b|0;Cq(a+4|0,b);return}function mx(a){a=a|0;return YD(c[a+204>>2]|0)|0}function nx(a,b){a=a|0;b=+b;jB(a,b);return}function ox(a,b){a=a|0;b=+b;qy(a,b);return}function px(a,b){a=a|0;b=+b;kB(a,b);return}function qx(a,b){a=a|0;b=+b;ry(a,b);return}function rx(a,b){a=a|0;b=b|0;rs(a,b);return}function sx(a,b){a=a|0;b=b|0;Rp(a,b);return}function tx(a){a=a|0;return +(+qG(+g[a+112>>2]))}function ux(b,c){b=b|0;c=c|0;a[b+32>>0]=c&1;return}function vx(a){a=a|0;return RD(c[a+8>>2]|0)|0}function wx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return zb[a&63](b|0,c|0,d|0)|0}function xx(a,b){a=a|0;b=+b;cD(a,b);return}function yx(a,b){a=a|0;b=b|0;return +(+Xn(a,b))}function zx(a,b){a=a|0;b=b|0;gi(a,b,1);return}function Ax(a,b){a=a|0;b=b|0;NA(a,b);return}function Bx(a){a=a|0;if(!a)a=0;else a=(Ri(a,2816)|0)!=0;return a&1|0}function Cx(a){a=a|0;sj(a);aH(a);return}function Dx(a,b){a=a|0;b=b|0;fm(a,b);return}function Ex(a,b){a=a|0;b=+b;g[a+116>>2]=b;return}function Fx(a,b){a=a|0;b=b|0;Gz(a,b,+IC(b));return}function Gx(a){a=a|0;c[a>>2]=3768;zi(a+12|0);return}function Hx(a,b){a=a|0;b=b|0;hB(a,b);return}function Ix(a,b){a=a|0;b=b|0;ct(a,b);return}function Jx(){var a=0;a=Er(100)|0;im(a);return a|0}function Kx(a,b){a=a|0;b=+b;g[a+112>>2]=b;return}function Lx(a,b){a=a|0;b=+b;g[a+124>>2]=b;return}function Mx(a,b){a=a|0;b=b|0;VA(a,b);return}function Nx(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function Ox(b,c){b=b|0;c=+c;g[b+572>>2]=c;a[b+553>>0]=0;return}function Px(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return +Lb[a&15](b|0,c|0,d|0)}function Qx(a,b){a=a|0;b=b|0;WA(a,b);return}function Rx(a,b){a=a|0;b=b|0;return dc(a,b,8192)|0}function Sx(b,c){b=b|0;c=c|0;a[b+120>>0]=c&1;return}function Tx(){var a=0;a=Er(12)|0;hx(a);return a|0}function Ux(a){a=a|0;if(!a)return;ws(a);aH(a);return}function Vx(a){a=a|0;return pb[c[(c[a>>2]|0)+48>>2]&127](a)|0}function Wx(a){a=a|0;cx(a);c[a>>2]=2856;return}function Xx(a){a=a|0;return AE(a)|0}function Yx(a,b){a=a|0;b=+b;Dv(a,b);return}function Zx(a,b){a=a|0;b=b|0;return +(+mf(a,b))}function _x(a){a=a|0;return +(+qG(+g[a+120>>2]))}function $x(){var a=0;a=Er(4)|0;kA(a);return a|0}function ay(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function by(a,b){a=a|0;b=+b;WB(a,b);return}function cy(a,b){a=a|0;b=b|0;fh(a,b);return}function dy(a,b){a=a|0;b=+b;UB(a,b);return}function ey(a,b){a=a|0;b=b|0;return tu(a,b)|0}function fy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return Cb[a&7](b|0,c|0,+d)|0}function gy(a){a=a|0;return +(+g[a+132>>2])}function hy(a){a=a|0;return Gy(c[a+68>>2]|0)|0}function iy(b){b=b|0;if((a[b>>0]|0)==1)b=0;else{a[b>>0]=1;b=1;}return b|0}function jy(b,c){b=b|0;c=c|0;a[b+80>>0]=c&1;return}function ky(a){a=a|0;return +(+g[a+128>>2])}function ly(a,b){a=a|0;b=b|0;return (c[a+144>>2]|0)+(b*284|0)|0}function my(a,b){a=a|0;b=b|0;qB(a,b);return}function ny(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;W(24);}function oy(a){a=a|0;return TB(a)|0}function py(a){a=a|0;qv(a);return}function qy(a,b){a=a|0;b=+b;g[a+196>>2]=+ls(b);return}function ry(a,b){a=a|0;b=+b;g[a+192>>2]=+ls(b);return}function sy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Vb[a&127](b|0,c|0,d|0);}function ty(a,b,d){a=a|0;b=b|0;d=d|0;if(!(c[a>>2]&32))ik(b,d,a);return}function uy(a,b){a=a|0;b=b|0;Cq(a+92|0,b);return}function vy(a){a=a|0;pj(a);aH(a);return}function wy(a,b){a=a|0;b=+b;g[a+268>>2]=b;return}function xy(a){a=a|0;return +(+qG(+g[a+80>>2]))}function yy(a,b){a=a|0;b=b|0;c[b+748>>2]=0;return}function zy(a,b){a=a|0;b=b|0;hk(a,b);return}function Ay(a){a=a|0;return cF(a)|0}function By(a,b){a=a|0;b=+b;Pv(a,b);return}function Cy(a,b){a=a|0;b=+b;g[a+96>>2]=b;return}function Dy(a){a=a|0;return +(+Db[c[(c[a>>2]|0)+48>>2]&15](a))}function Ey(a,c){a=a|0;c=c|0;b[a+10>>1]=c;return}function Fy(a,c){a=a|0;c=c|0;b[a+8>>1]=c;return}function Gy(a){a=a|0;return pb[c[(c[a>>2]|0)+36>>2]&127](a)|0}function Hy(a){a=a|0;var b=0;b=l;l=l+a|0;l=l+15&-16;return b|0}function Iy(a,b){a=a|0;b=b|0;Bd(a,b);return}function Jy(a,b){a=a|0;b=b|0;VB(a,b);return}function Ky(a,b){a=a|0;b=+b;g[a+92>>2]=b;return}function Ly(a){a=a|0;return +(+g[a+136>>2])}function My(b){b=b|0;return (a[b+32>>0]&1)!=0|0}function Ny(b,c){b=b|0;c=c|0;a[b+170>>0]=c&1;return}function Oy(a,b){a=a|0;b=b|0;wr(a,b);return}function Py(a,b){a=a|0;b=b|0;jn(a+288|0,b);return}function Qy(a,b){a=a|0;b=b|0;return lw(b)|0}function Ry(a,b){a=a|0;b=+b;g[a+108>>2]=b;return}function Sy(a,c){a=a|0;c=c|0;b[a+12>>1]=c;return}function Ty(a,b){a=a|0;b=b|0;fh(b,a);return}function Uy(a,b){a=a|0;b=+b;g[a+272>>2]=b;return}function Vy(a){a=a|0;return fF(a)|0}function Wy(a){a=a|0;return gF(a)|0}function Xy(a){a=a|0;return jF(a)|0}function Yy(a,c){a=a|0;c=c|0;b[a+4>>1]=c;return}function Zy(a,c){a=a|0;c=c|0;b[a+14>>1]=c;return}function _y(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;W(21);return 0}function $y(a,b){a=a|0;b=b|0;zy(a,b);return}function az(a,b){a=a|0;b=b|0;return dx(b)|0}function bz(a,b){a=a|0;b=b|0;c[a+44>>2]=b&1;return}function cz(a,c){a=a|0;c=c|0;b[a+6>>1]=c;return}function dz(a,b,c){a=+a;b=+b;c=+c;return +(+TG(+rz(a,b,c)))}function ez(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;ub[a&15](b|0,+c,d|0);}function fz(a,b){a=a|0;b=b|0;if(!a)a=0;else a=wk(a,b)|0;return a|0}function gz(a,b){a=a|0;b=+b;g[a+220>>2]=b;return}function hz(a,b){a=a|0;b=+b;g[a+100>>2]=b;return}function iz(b){b=b|0;return (a[b+120>>0]&1)!=0|0}function jz(b,c){b=b|0;c=c|0;a[b+24>>0]=c&1;return}function kz(a){a=a|0;return ~~+g[a+48>>2]|0}function lz(b,c){b=b|0;c=c|0;a[b+180>>0]=c&1;return}function mz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;Xb[a&7](b|0,c|0,+d);}function nz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;W(22);return 0.0}function oz(a,b){a=a|0;b=+b;g[a+224>>2]=b;return}function pz(a,b){a=a|0;b=+b;Yv(a,b);return}function qz(a){a=a|0;return SA(c[a+216>>2]|0)|0}function rz(a,b,c){a=+a;b=+b;c=+c;return +(+bx(a,b,c,a,b,c))}function sz(a){a=+a;if(!(a<-1.0)){if(a>1.0)a=1.0;}else a=-1.0;return +(+L(+a))}function tz(a){a=a|0;return +(+g[a+116>>2])}function uz(a){a=a|0;return +(+Zt(a))}function vz(b,c){b=b|0;c=c|0;a[b+16>>0]=c&1;return}function wz(a,b){a=a|0;b=b|0;c[a+20>>2]=b;return}function xz(a){a=a|0;return HC(a)|0}function yz(a,b){a=a|0;b=+b;g[a+276>>2]=b;return}function zz(a,b){a=a|0;b=+b;g[a+204>>2]=b;return}function Az(a,b){a=a|0;b=+b;g[a+208>>2]=b;return}function Bz(a){a=a|0;return +(+g[a+112>>2])}function Cz(a){a=a|0;return +(+g[a+124>>2])}function Dz(a){a=a|0;return sF(a)|0}function Ez(a){a=a|0;return tF(a)|0}function Fz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function Gz(a,b,c){a=a|0;b=b|0;c=+c;Bn(a,b,1.0/c);return}function Hz(a){a=a|0;Ye(a);aH(a);return}function Iz(a,b){a=a|0;b=b|0;var c=0;c=fA(a|0)|0;return ((b|0)==0?a:c)|0}function Jz(a,b){a=a|0;b=+b;g[a+216>>2]=b;return}function Kz(b){b=b|0;return (a[b+80>>0]&1)!=0|0}function Lz(a){a=a|0;if(!a)return;Zw(a);return}function Mz(a,b){a=a|0;b=b|0;c[a+36>>2]=b;return}function Nz(a,b){a=a|0;b=b|0;c[a+32>>2]=b;return}function Oz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Oe(a,b,c,d,0)|0}function Pz(a){a=a|0;wu(a);return}function Qz(b,c){b=b|0;c=c|0;a[b+260>>0]=c&1;return}function Rz(a){a=a|0;return GF(a)|0}function Sz(b,c){b=b|0;c=c|0;a[b+25>>0]=c&1;return}function Tz(a,b,c){a=a|0;b=+b;c=c|0;return}function Uz(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function Vz(a){a=a|0;lt(a,+IC(a))|0;return}function Wz(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;yb[a&7](b|0,+c,+d);}function Xz(a){a=a|0;return +(+JF(+g[a+12>>2]))}function Yz(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function Zz(a){a=a|0;return CF(a)|0}function _z(a,b){a=a|0;b=b|0;return +(+Wr(a,b))}function $z(a,b){a=a|0;b=b|0;c[a+216>>2]=b;return}function aA(b,c){b=b|0;c=c|0;a[b+26>>0]=c&1;return}function bA(b,c){b=b|0;c=c|0;a[b+84>>0]=c&1;return}function cA(a){a=a|0;_j(a);aH(a);return}function dA(a){a=a|0;xk(a);aH(a);return}function eA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;W(18);}function fA(a){a=a|0;return (a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function gA(a){a=a|0;return KF(a)|0}function hA(a){a=a|0;return fD(a)|0}function iA(a){a=a|0;return (c[a+116>>2]|0)+4|0}function jA(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function kA(a){a=a|0;QE(a);c[a>>2]=2952;return}function lA(a,b,c){a=a|0;b=b|0;c=c|0;return Kb[a&31](b|0,c|0)|0}function mA(a,b){a=a|0;b=+b;g[a+244>>2]=b;return}function nA(a,b){a=a|0;b=+b;g[a+240>>2]=b;return}function oA(a){a=a|0;return +(+g[a+104>>2])}function pA(a,b){a=a|0;b=b|0;return sl(a,b)|0}function qA(a){a=a|0;return QF(a)|0}function rA(a){a=a|0;Zj(a);aH(a);return}function sA(b,c){b=b|0;c=c|0;a[b+524>>0]=c&1;return}function tA(a,b){a=a|0;b=b|0;return a+(b*80|0)|0}function uA(a,b){a=a|0;b=+b;g[a+248>>2]=b;return}function vA(a,b){a=a|0;b=+b;g[a+212>>2]=b;return}function wA(a,b){a=a|0;b=+b;g[a+228>>2]=b;return}function xA(a){a=a|0;return +(+g[a+268>>2])}function yA(a){a=a|0;return fH(c[a+84>>2]|0)|0}function zA(a,b){a=a|0;b=b|0;return bo(a,b)|0}function AA(a,b){a=a|0;b=b|0;return ao(a,b)|0}function BA(a,b){a=a|0;b=b|0;return +(+No(a,b))}function CA(a,b){a=a|0;b=b|0;return a+(b*104|0)|0}function DA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;W(17);}function EA(a,b){a=a|0;b=+b;g[a+252>>2]=b;return}function FA(a){a=a|0;return +(+g[a+96>>2])}function GA(a){a=a|0;return (c[a+44>>2]|0)!=0|0}function HA(a){a=a|0;zi(a);aH(a);return}function IA(a){a=a|0;py(a);return}function JA(a){a=a|0;return +(+g[a+92>>2])}function KA(a){a=a|0;return fH(c[a+88>>2]|0)|0}function LA(a){a=a|0;return fH(c[a+748>>2]|0)|0}function MA(b){b=b|0;return (a[b+24>>0]&1)!=0|0}function NA(b,c){b=b|0;c=c|0;a[b+552>>0]=c&1;return}function OA(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function PA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;W(3);}function QA(a){a=a|0;return eE(a)|0}function RA(a){a=a|0;return +(+g[a+108>>2])}function SA(a){a=a|0;a=fH(a)|0;return (a|0)!=5&(a|0)!=2|0}function TA(a){a=a|0;$j(a);aH(a);return}function UA(a,b){a=a|0;b=b|0;return a+4+(b*184|0)|0}function VA(b,c){b=b|0;c=c|0;a[b+736>>0]=c&1;return}function WA(a,b){a=a|0;b=b|0;c[a+204>>2]=b;return}function XA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;W(14);return 0.0}function YA(a,b){a=a|0;b=+b;g[a+232>>2]=b;return}function ZA(a,b){a=a|0;b=+b;g[a+280>>2]=b;return}function _A(a,b){a=a|0;b=+b;g[a+236>>2]=b;return}function $A(a){a=a|0;return +(+g[a+272>>2])}function aB(a){a=a|0;return TF(a)|0}function bB(a,b){a=a|0;b=+b;return lt(a,b)|0}function cB(b){b=b|0;return (a[b+16>>0]&1)!=0|0}function dB(a,b){a=a|0;b=b|0;c[a>>2]=b;return}function eB(a){a=a|0;return b[a+10>>1]|0}function fB(a){a=a|0;return b[a+8>>1]|0}function gB(a){a=a|0;if(a>>>0>4294963200){c[6581]=0-a;a=-1;}return a|0}function hB(b,c){b=b|0;c=c|0;a[b+21>>0]=c&1;return}function iB(a,b){a=a|0;b=+b;g[a+684>>2]=b;return}function jB(a,b){a=a|0;b=+b;g[a+188>>2]=b;return}function kB(a,b){a=a|0;b=+b;g[a+184>>2]=b;return}function lB(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=d|0;e=e|0;f=f|0;W(8);}function mB(a){a=a|0;return +(+g[a+220>>2])}function nB(a){a=a|0;return +(+g[a+100>>2])}function oB(a){a=a|0;return fH(c[a+128>>2]|0)|0}function pB(a){a=a|0;return b[a+12>>1]|0}function qB(b,c){b=b|0;c=c|0;a[b+737>>0]=c&1;return}function rB(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;W(34);return 0.0}function sB(a,b){a=a|0;b=+b;g[a+256>>2]=b;return}function tB(a){a=a|0;return +(+g[a+224>>2])}function uB(a,b){a=a|0;b=b|0;return zr(a,b)|0}function vB(a,b){a=a|0;b=b|0;return yr(a,b)|0}function wB(a){a=a|0;return Sg(a)|0}function xB(a){a=a|0;return fH(c[a+188>>2]|0)|0}function yB(a){a=a|0;return fH(c[a+32>>2]|0)|0}function zB(a){a=a|0;return fH(c[a+28>>2]|0)|0}function AB(a){a=a|0;return b[a+4>>1]|0}function BB(a){a=a|0;return b[a+14>>1]|0}function CB(a,b){a=a|0;b=b|0;c[a+84>>2]=b;return}function DB(a,b){a=a|0;b=b|0;c[a+88>>2]=b;return}function EB(a,b){a=a|0;b=b|0;c[a+92>>2]=b;return}function FB(a,b){a=a|0;b=b|0;c[a+100>>2]=b;return}function GB(a,b){a=a|0;b=b|0;c[a+96>>2]=b;return}function HB(a){a=a|0;return (c[a+48>>2]|0)==1|0}function IB(a){a=a|0;ak(a);aH(a);return}function JB(a,b){a=a|0;b=b|0;return (a|0)==(b|0)|0}function KB(a,b){a=a|0;b=b|0;if(!o){o=a;p=b;}}function LB(b){b=b|0;return (a[b+260>>0]&1)!=0|0}function MB(a){a=a|0;return fH(c[a+116>>2]|0)|0}function NB(a){a=a|0;return fH(c[a+120>>2]|0)|0}function OB(a){a=a|0;return fH(c[a+744>>2]|0)|0}function PB(a){a=a|0;return fH(c[a+740>>2]|0)|0}function QB(b){b=b|0;return (a[b+25>>0]&1)!=0|0}function RB(a){a=a|0;return b[a+6>>1]|0}function SB(a){a=a|0;return (c[a+92>>2]|0)+4|0}function TB(a){a=a|0;return fH(c[a+268>>2]|0)|0}function UB(a,b){a=a|0;b=+b;g[a+440>>2]=b;return}function VB(a,b){a=a|0;b=b|0;c[a+240>>2]=b;return}function WB(a,b){a=a|0;b=+b;g[a+104>>2]=b;return}function XB(a,b,c){a=a|0;b=b|0;c=c|0;nb[a&127](b|0,c|0);}function YB(a,b,c){a=a|0;b=b|0;c=+c;return +Pb[a&1](b|0,+c)}function ZB(a){a=a|0;return +(+g[a+276>>2])}function _B(a){a=a|0;return +(+g[a+208>>2])}function $B(a){a=a|0;return fH(c[a+192>>2]|0)|0}function aC(a){a=a|0;return fH(c[a+204>>2]|0)|0}function bC(a){a=a|0;return fH(c[a+24>>2]|0)|0}function cC(a){a=a|0;return fH(c[a+68>>2]|0)|0}function dC(a,b){a=a|0;b=b|0;c[a+16>>2]=b;return}function eC(a,b){a=a|0;b=+b;g[a+64>>2]=b;return}function fC(a,b){a=a|0;b=+b;g[a+68>>2]=b;return}function gC(a){a=+a;return (g[j>>2]=a,c[j>>2]|0)|0}function hC(a){a=a|0;if(!a)return;aH(a);return}function iC(a){a=a|0;return +(+g[a+216>>2])}function jC(a){a=a|0;return fH(c[a+480>>2]|0)|0}function kC(a){a=a|0;return fH(c[a+124>>2]|0)|0}function lC(a,b){a=a|0;b=+b;ZD(a,b);return}function mC(b){b=b|0;return (a[b+26>>0]&1)!=0|0}function nC(a){a=a|0;return c[a+20>>2]|0}function oC(b){b=b|0;return (a[b+84>>0]&1)!=0|0}function pC(a,b){a=a|0;b=+b;g[a+80>>2]=b;return}function qC(a,b){a=a|0;b=+b;g[a+76>>2]=b;return}function rC(a){a=a|0;return +(+g[a+28>>2]*+g[a+12>>2])}function sC(a,b){a=a|0;b=b|0;return a+(b<<2)|0}function tC(a){a=a|0;return +(+g[a+248>>2])}function uC(a){a=a|0;return fH(c[a+240>>2]|0)|0}function vC(a,b){a=a|0;b=+b;g[a+60>>2]=b;return}function wC(a,b){a=a|0;b=+b;g[a+52>>2]=b;return}function xC(a,b){a=a|0;b=+b;g[a+56>>2]=b;return}function yC(a,b,c){a=a|0;b=b|0;c=+c;return 0}function zC(a){a=a|0;return +(+g[a+204>>2])}function AC(a){a=a|0;rq(a);return}function BC(a,b){a=a|0;b=+b;vE(a,b);return}function CC(a,b){a=a|0;b=+b;wE(a,b);return}function DC(a,b){a=a|0;b=+b;PE(a,b);return}function EC(a){a=a|0;return c[a+36>>2]|0}function FC(a){a=a|0;return c[a+32>>2]|0}function GC(a){a=a|0;return (c[a+48>>2]|0)+4|0}function HC(a){a=a|0;return fH(c[a+16>>2]|0)|0}function IC(a){a=a|0;return +(+TG(+MD(a)))}function JC(a){a=a|0;return a+44|0}function KC(a){a=a|0;return c[a+68>>2]|0}function LC(a){a=a|0;Pz(a);return}function MC(a,b,c){a=a|0;b=b|0;c=+c;kb[a&31](b|0,+c);}function NC(a){a=a|0;return +(+g[(LG(a)|0)>>2])}function OC(a){a=a|0;return +(+g[(MG(a)|0)>>2])}function PC(a){a=a|0;return +(+g[(KG(a)|0)>>2])}function QC(a){a=a|0;return gG(a)|0}function RC(a){a=a|0;Vz(a);return}function SC(a){a=a|0;return c[a+8>>2]|0}function TC(a,b){a=a|0;b=+b;g[a+40>>2]=b;return}function UC(a,b){a=a|0;b=+b;g[a+36>>2]=b;return}function VC(a,b){a=a|0;b=+b;g[a+48>>2]=b;return}function WC(a){a=a|0;return a+60|0}function XC(a){a=a|0;return c[a+200>>2]|0}function YC(a){a=a|0;return +(+g[a+244>>2])}function ZC(a){a=a|0;return +(+g[a+240>>2])}function _C(a){a=a|0;return +(+MD(a))}function $C(a,b){a=a|0;b=+b;g[a+24>>2]=b;return}function aD(a,b){a=a|0;b=+b;g[a+20>>2]=b;return}function bD(a,b){a=a|0;b=+b;g[a+32>>2]=b;return}function cD(a,b){a=a|0;b=+b;g[a+16>>2]=b;return}function dD(a,b){a=a|0;b=+b;g[a+28>>2]=b;return}function eD(a){a=a|0;return c[a+212>>2]|0}function fD(a){a=a|0;return fH(c[a+136>>2]|0)|0}function gD(a){a=a|0;c[a+192>>2]=0;return}function hD(a,b,c){a=a|0;b=b|0;c=c|0;return}function iD(a,b){a=a|0;b=+b;g[a+72>>2]=b;return}function jD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;W(0);}function kD(a){a=a|0;return +(+g[a+212>>2])}function lD(a){a=a|0;return +(+g[a+228>>2])}function mD(a){a=a|0;return c[a+24>>2]|0}function nD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;W(30);}function oD(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;W(23);}function pD(a){a=a|0;return +(+g[a+252>>2])}function qD(a){a=a|0;Hv(a)|0;return}function rD(a){a=a|0;return MG(a)|0}function sD(a){a=a|0;return +(+IC(a))}function tD(a){a=a|0;return c[a+4>>2]|0}function uD(){var a=0;a=c[6580]|0;c[6580]=a+0;return a|0}function vD(a){a=a|0;return c[a+136>>2]|0}function wD(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function xD(a){a=a|0;return a+156|0}function yD(a){a=a|0;return a+20|0}function AD(a){a=a|0;ai(a);aH(a);return}function BD(a){a=a|0;Oo(a);aH(a);return}function CD(a){a=a|0;xj(a);aH(a);return}function DD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;W(35);return 0.0}function ED(a){a=a|0;return +(+g[a+232>>2])}function FD(a){a=a|0;return +(+g[a+280>>2])}function GD(a){a=a|0;return +(+g[a+236>>2])}function HD(a){a=a|0;return 348}function ID(a){a=a|0;return c[a+12>>2]|0}function JD(a){a=a|0;LC(a+56|0);return}function KD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;W(10);return 0}function LD(a){a=a|0;return fH(c[a+4>>2]|0)|0}function MD(a){a=a|0;return +(+No(a,a))}function ND(a){a=a|0;return +(+g[a+256>>2])}function OD(a){a=a|0;return a+348|0}function PD(a){a=a|0;return +(+g[a>>2])}function QD(a){a=a|0;return c[a>>2]|0}function RD(a){a=a|0;return (a|0)!=0|0}function SD(a,b){a=a|0;b=b|0;return pb[a&127](b|0)|0}function TD(a){a=a|0;return a+24|0}function VD(a){a=a|0;return a+64|0}function WD(a){a=a|0;return +(+g[a+64>>2])}function XD(a){a=a|0;return +(+g[a+68>>2])}function YD(a){a=a|0;return (a&2|0)!=0|0}function ZD(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function _D(a){a=a|0;return a+172|0}function $D(a){a=a|0;return c[a+84>>2]|0}function aE(a){a=a|0;return c[a+88>>2]|0}function bE(a){a=a|0;return c[a+92>>2]|0}function cE(a){a=a|0;return c[a+100>>2]|0}function dE(a){a=a|0;return 252}function eE(a){a=a|0;return c[a+240>>2]|0}function fE(a,b,c,d){a=a|0;b=+b;c=c|0;d=+d;W(41);return 0}function gE(a){a=a|0;return +(+g[(fH(a)|0)>>2])}function hE(a){a=a|0;return a+52|0}function iE(a){a=a|0;return +(+g[a+80>>2])}function jE(a){a=a|0;return +(+g[a+76>>2])}function kE(a){a=a|0;return 28}function lE(a){a=a|0;return c[a+72>>2]|0}function mE(a,b){a=a|0;b=b|0;return +Db[a&15](b|0)}function nE(a){a=a|0;return a+40|0}function oE(a){a=a|0;return c[a+16>>2]|0}function pE(a){a=a|0;return +(+g[a+60>>2])}function qE(a){a=a|0;return +(+g[a+52>>2])}function rE(a){a=a|0;return +(+g[a+56>>2])}function sE(a){a=a|0;return a+108|0}function tE(a){a=a|0;return 212}function uE(a){a=a|0;return c[a+96>>2]|0}function vE(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function wE(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function xE(a){a=a|0;return a+16|0}function yE(a){a=+a;return a<1.0|0}function zE(a,b){a=a|0;b=b|0;return 1}function AE(a){a=a|0;return a+324|0}function BE(a){a=a|0;RF(a);return}function CE(a,b){a=a|0;b=b|0;l=a;m=b;}function DE(a){a=a|0;return a+188|0}function EE(a){a=a|0;return 204}function FE(a,b){a=a|0;b=b|0;return}function GE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;W(42);}function HE(a){a=a|0;return a+36|0}function IE(a){a=a|0;return +(+g[a+44>>2])}function JE(a){a=a|0;return +(+g[a+40>>2])}function KE(a){a=a|0;return +(+g[a+36>>2])}function LE(a){a=a|0;return +(+g[a+48>>2])}function ME(a){a=a|0;return 220}function NE(a){a=a|0;return 256}function OE(a){a=a|0;return +(+g[a+72>>2])}function PE(a,b){a=a|0;b=+b;g[a>>2]=b;return}function QE(a){a=a|0;c[a>>2]=2980;return}function RE(a){a=a|0;c[a>>2]=8184;return}function SE(a){a=a|0;BE(a);return}function TE(a){a=a|0;return +(+g[a+24>>2])}function UE(a){a=a|0;return +(+g[a+4>>2])}function VE(a){a=a|0;return +(+g[a+20>>2])}function WE(a){a=a|0;return +(+g[a+32>>2])}function XE(a){a=a|0;return +(+g[a+16>>2])}function YE(a){a=a|0;return +(+g[a+12>>2])}function ZE(a){a=a|0;return +(+g[a+28>>2])}function _E(a){a=a|0;return 52}function $E(a){a=a|0;return 68}function aF(a){a=a|0;return 84}function bF(a,b){a=a|0;b=b|0;return a+(b<<4)|0}function cF(a){a=a|0;return a+352|0}function dF(a){a=a|0;return a+868|0}function eF(a){a=a|0;return +(+g[a+8>>2])}function fF(a){a=a|0;return a+316|0}function gF(a){a=a|0;return a+300|0}function hF(a,b){a=a|0;b=b|0;lb[a&511](b|0);}function iF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;W(37);}function jF(a){a=a|0;return a+32|0}function kF(a){a=a|0;return 24}function lF(a,b){a=a|0;b=+b;return}function mF(a,b){a=a|0;b=b|0;return fu(a,b)|0}function nF(a){a=a|0;return a+68|0}function oF(a){a=a|0;Zw(a);return}function pF(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;W(9);}function qF(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;W(7);}function rF(a){a=a|0;aH(a+-4|0);return}function sF(a){a=a|0;return a+616|0}function tF(a){a=a|0;return a+552|0}function uF(a){a=a|0;_h(a);return}function vF(a,b,c){a=a|0;b=b|0;c=c|0;W(28);return 0.0}function wF(a){a=a|0;return fH(a)|0}function xF(a){a=a|0;return a+708|0}function yF(a){a=a|0;return 488}function zF(a,b,c){a=a|0;b=b|0;c=c|0;W(16);return 0}function AF(a){a=a|0;return 32}function BF(a){a=a|0;return a+76|0}function CF(a){a=a|0;return a+328|0}function DF(a){a=a|0;return 60}function EF(a){a=a|0;return 428}function FF(a){a=a|0;c[a>>2]=3056;return}function GF(a){a=a|0;return a+28|0}function HF(a){a=a|0;return a+288|0}function IF(){return Er(1)|0}function JF(a){a=+a;return +(+sz(a)*2.0)}function KF(a){a=a|0;return a+312|0}function LF(a){a=a|0;c[a>>2]=4560;return}function MF(a){a=a|0;c[a>>2]=5132;return}function NF(a){a=a|0;return (a&255)<<8|a>>8&255|0}function OF(a,b,c){a=a|0;b=b|0;c=+c;W(19);return 0}function PF(a){a=a|0;return 11210}function QF(a){a=a|0;return a+92|0}function RF(a){a=a|0;c[a>>2]=0;return}function SF(a){a=a|0;return 4}function TF(a){a=a|0;return a+428|0}function UF(a){a=a|0;return 17919}function VF(a){a=a|0;return 17635}function WF(a){a=a|0;c[a>>2]=3032;return}function XF(){return Is()|0}function YF(a){a=a|0;return 11098}function ZF(a){a=a|0;return 16781}function _F(a){a=+a;return +(+Wg(a,6.2831854820251465))}function $F(a){a=a|0;return a+72|0}function aG(a,b,c){a=a|0;b=b|0;c=c|0;W(38);}function bG(a){a=a|0;return 17165}function cG(a){a=a|0;return 0}function dG(a,b){a=+a;b=b|0;return +(+_l(a,b))}function eG(){return Er(64)|0}function fG(a){a=a|0;return 17223}function gG(a){a=a|0;return a+48|0}function hG(a){a=a|0;return 17421}function iG(a){a=a|0;return 1}function jG(a,b,c){a=a|0;b=b|0;c=+c;W(40);}function kG(a,b,c){a=a|0;b=+b;c=c|0;W(11);}function lG(a){a=a|0;return 18036}function mG(a){a=a|0;return 18007}function nG(a){a=a|0;return 3}function oG(a){a=a|0;return em(a,25792)|0}function pG(a){a=a|0;return 11477}function qG(a){a=+a;return +a}function rG(a){a=a|0;return 17979}function sG(a){a=a|0;return 16496}function tG(a){a=a|0;return 17579}function uG(a){a=a|0;return 17552}function vG(a){a=a|0;return 17522}function wG(a){a=a|0;return 8}function xG(a,b,c){a=a|0;b=+b;c=+c;W(15);}function yG(a){a=a|0;return 16600}function zG(a,b){a=a|0;b=b|0;W(27);return 0}function AG(a){a=a|0;return 16558}function BG(a){a=a|0;return 16579}function CG(a){a=a|0;return 6}function DG(a){a=a|0;return 12}function EG(){return 4}function FG(a){a=a|0;return 16539}function GG(a,b){a=a|0;b=+b;W(32);return 0.0}function HG(a){a=a|0;return 2}function IG(a){a=a|0;return 17694}function JG(){c[5678]=1805;c[5679]=0;return}function KG(a){a=a|0;return a+12|0}function LG(a){a=a|0;return a+8|0}function MG(a){a=a|0;return a+4|0}function NG(a){a=a|0;Wb[a&3]();}function OG(){return 2}function PG(){return 1}function QG(){return 5}function RG(){return 3}function SG(){fb();}function TG(a){a=+a;return +(+G(+a))}function UG(a){a=+a;return +(+J(+a))}function VG(a){a=+a;return +(+I(+a))}function WG(a,b){a=a|0;b=b|0;W(4);}function XG(a){a=a|0;return}function YG(a){a=a|0;return Er(a)|0}function ZG(a){a=a|0;aH(a);return}function _G(a){a=a|0;l=a;}function $G(a,b){a=a|0;b=+b;W(1);}function aH(a){a=a|0;Tc(a);return}function bH(a){a=a|0;D=a;}function cH(a){a=a|0;W(20);return 0.0}function dH(){return 25752}function eH(a){a=a|0;W(6);return 0}function fH(a){a=a|0;return a|0}function gH(){return D|0}function hH(){return l|0}function iH(a){a=a|0;W(2);}function jH(){return 0}function kH(){W(39);}

// EMSCRIPTEN_END_FUNCS
var jb=[jD,Jg,wl,Xf,ap,Ic,Re,Mf,If,$b,Yc,wc,pd,Td,Fc,St,og,kc,Jd,Ok,xi,Ze,jD,jD,jD,jD,jD,jD,jD,jD,jD,jD];var kb=[$G,hc,Pc,Cm,ZD,wD,lF,wD,sk,Wc,Kf,le,gg,Qj,We,Lc,se,zc,iD,wD,ul,ul,ul,Vi,$G,$G,$G,$G,$G,$G,$G,$G];var lb=[iH,XG,ZG,XG,ZG,XG,ZG,XG,ZG,XG,ZG,XG,ZG,XG,oF,XG,ZG,XG,ZG,XG,ZG,XG,ZG,To,aq,yn,sj,Cx,XG,ZG,ZG,ZG,ZG,ld,fv,XG,ZG,XG,ZG,XG,Zw,ZG,ZG,XG,Zw,ZG,ZG,XG,ZG,Gx,sw,XG,ZG,XG,ZG,wp,Uo,zi,HA,Oj,Mt,pe,Ek,ac,yh,Vf,cn,Pe,rl,XG,ZG,XG,ZG,uo,Ln,xg,Ut,ec,ZG,Zj,rA,LF,Qu,Fd,Em,Qu,XG,Qu,Qu,Be,Qu,Qu,ge,Qu,Hc,Yf,Ks,gD,ai,AD,ZG,Ao,Qn,vs,ZG,XG,ZG,MF,Ru,ro,Hn,ql,Nt,Xo,eq,XG,ZG,Ye,Hz,ZG,ZG,ZG,ZG,ZG,ZG,ZG,ZG,ZG,ZG,$j,TA,iq,dp,So,zo,ZG,zp,op,oq,gp,XG,ZG,xj,CD,Ud,ZG,ZG,ZG,ZG,ZG,XG,ZG,XG,rF,ZG,ZG,ZG,ZG,ZG,ZG,dq,bp,XG,ZG,qq,kp,ZG,ZG,ZG,xk,dA,ZG,pj,vy,ZG,Sl,xu,Qi,Zw,Zw,Zw,Zw,ep,to,XG,ZG,ZG,ZG,XG,Zw,ZG,XG,ZG,XG,Zw,Uo,Zl,Tl,Zw,Zw,Zw,Uo,ZG,Uo,uF,Gu,ZG,ZG,RE,su,Zw,Zw,Zw,Yh,Fu,cj,ou,XG,ou,_o,mq,_j,cA,ZG,ZG,Oo,BD,XG,ZG,ZG,ZG,_h,Gu,ZG,XG,ZG,ZG,ZG,ZG,ZG,ZG,XG,ZG,XG,ZG,gq,cp,ZG,ZG,ak,IB,Xh,mu,Po,Un,XG,ZG,XG,XG,ZG,ZG,Kr,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH,iH];var mb=[PA];var nb=[WG,fq,Ar,FE,jA,Yz,FE,zn,Kk,FE,us,Dn,yc,be,lp,FE,FE,FE,FE,Uz,Zh,fg,gh,Ej,lm,yj,rr,_g,ui,Wo,kw,Xv,kw,Xv,Cc,FE,Wi,et,un,Aj,Hh,ug,Pf,ih,kt,hf,mh,rc,Hk,hd,mj,qc,Fi,FE,el,nk,Dk,tk,lz,ok,yy,bn,pk,Wi,fj,Wi,lk,Gq,mp,Wi,Yi,dn,vq,Hm,Wd,Wm,fl,ut,st,tt,hh,um,tm,Hg,pr,Ep,Gk,Jr,Vo,Gk,md,kd,Xq,Gk,Jr,FE,FE,ph,rh,fe,kn,FE,FE,FE,Iw,Uz,jf,fd,Nl,vt,bt,bt,FE,Wi,FE,FE,WG,WG,WG,WG,WG,WG,WG,WG,WG,WG,WG,WG];var ob=[_t,Kc,Xg,_t];var pb=[eH,cG,iG,tD,SC,SC,oE,mD,EF,HG,Yq,YF,DG,KG,PF,_E,cG,AF,pG,HG,nG,nG,iG,lE,XC,eD,SF,yF,HG,dE,_E,HD,aF,EE,tE,ME,iG,Vx,Pu,NE,ID,vu,KC,KC,BF,sG,kF,FG,DF,AG,BG,yG,GC,ZF,DF,bG,nF,fG,_E,hG,$E,uE,uE,cG,vG,DF,uG,tG,SB,VF,cG,cG,cG,IG,CG,wG,DG,CG,aF,sE,UF,rG,DF,mG,lG,mD,HB,kE,bE,bE,oE,oE,MG,cG,iG,oE,oE,MG,SC,cG,vD,vD,oE,Hs,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH,eH];var qb=[qF,Wj,io,Gi,$m,Im,qF,qF];var rb=[lB];var sb=[pF];var tb=[KD,Lm,Eo,_n,dk,ck,Gh,an,pl,nl,Dl,eg,Cl,Zo,sm,Bl,xl,Bi,El,Jc,Wu,hw,sf,KD,KD,KD,KD,KD,KD,KD,KD,KD];var ub=[kG,Ig,Tz,Tz,pt,Fj,Hi,Do,pt,pt,Ti,Yk,Gl,pt,yi,kG];var vb=[Nv,xp];var wb=[au];var xb=[XA,Rt,Yd,Rt,Rt,Zd,Rt,Rt,Jf,kf,Us,Rt,Rt,XA,XA,XA];var yb=[xG,Qd,ig,gj,Qf,uf,xG,xG];var zb=[zF,hn,ni,fc,Vn,cl,ag,Qg,Uh,pf,Pm,Ch,sh,rf,$e,nf,Nm,bq,Tj,wf,Vk,rg,dl,Nh,Uk,Ae,Tk,Ad,OA,OA,ff,Nj,Cg,sg,ci,Zn,Zk,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF];var Ab=[DA];var Bb=[eA,Nd,ml,Yl,xo,Um,Ci,eA];var Cb=[OF,th,yC,yC,wm,OF,OF,OF];var Db=[cH,oo,YE,Dy,IE,OE,rC,Up,Tp,Up,cH,cH,cH,cH,cH,cH];var Eb=[_y,bd,od,Hd];var Fb=[nz,fk,ek,nz];var Gb=[oD];var Hb=[ny,Fg];var Ib=[wv,qh];var Jb=[nu,Rl,Rl,nu];var Kb=[zG,Oq,Wq,Pq,zE,zE,zE,_b,Nx,Nx,sd,Ll,Gm,Ow,qn,xs,bl,lq,Gp,Bk,ii,Sn,jq,zG,zG,zG,zG,zG,zG,zG,zG,zG];var Lb=[vF,nj,Vj,ei,Lk,Nn,Lj,rm,_m,Ah,om,cm,Wl,vF,vF,vF];var Mb=[Pt,Mi,Oc,Pt];var Nb=[nD,Eu];var Ob=[Ju,nc,ri,Ju];var Pb=[GG,Mv];var Qb=[gt];var Rb=[rB,Uj,Uj,rB];var Sb=[DD,Qc];var Tb=[Ou,ed,Df,Ou];var Ub=[iF,ay,jc,_d,Me,ay,oj,qe,Vl,ym,iF,iF,iF,iF,iF,iF];var Vb=[aG,hD,ki,we,ev,Wh,Mn,hD,hj,uj,Ts,hD,Ed,jd,hD,Mk,Ck,yk,Op,Li,df,Qh,hD,hD,ti,Th,bf,gw,fw,hD,hD,hD,hD,qd,Ph,Dj,jk,Fs,jh,jt,_e,Ce,Ce,Yg,Mk,Gj,Yn,kh,Mk,Mh,hD,Pl,On,Ul,Ml,ol,Jj,Am,Bm,zm,gn,xn,ef,Cn,hD,hD,hD,hD,fp,qo,so,vl,ij,Oh,lo,hD,hD,hD,hD,ji,rd,Lh,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG,aG];var Wb=[kH,SG,bk,Xs];var Xb=[jG,pv,Au,or,Nk,uc,jG,jG];var Yb=[fE,kg];var Zb=[GE,Qe,Fz,Fz,Fz,Hf,Cf,Vs,wj,Iq,Dt,uk,Dc,xc,Ve,As,ah,zf,bc,Et,gm,al,po,Cf,Se,wg,Lf,ue,Ls,Vr,mg,dh,Vs,$h,yl,ps,ch,Pd,Fl,$i,lj,Ho,_f,Bg,vh,pi,Ak,Fz,wh,Dg,fi,Fz,Fz,Zi,bj,Ql,Fk,Sj,$d,oe,bi,Ec,bj,hl,$k,gl,_c,nn,kj,nn,il,np,An,Pk,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE,GE];return{_emscripten_bind_btCylinderShape___destroy___0:Lv,_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1:Hx,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3:mt,_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1:vz,_llvm_cttz_i32:Bp,_emscripten_bind_btCollisionObject_isActive_0:qz,_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1:fC,_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1:cD,_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4:$p,_emscripten_bind_btCapsuleShapeX_getMargin_0:Dy,_emscripten_bind_Node_set_m_n_1:Hr,_emscripten_bind_btCompoundShape_getMargin_0:Dy,_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1:ir,_emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0:xE,_emscripten_bind_btContactSolverInfo___destroy___0:hC,_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1:yz,_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0:nF,_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0:aC,_emscripten_bind_btQuaternion_setX_1:DC,_emscripten_bind_btCylinderShapeZ_getMargin_0:Dy,_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0:YE,_emscripten_bind_btQuaternion_setZ_1:BC,_emscripten_bind_btCollisionObject_getUserIndex_0:QA,_emscripten_bind_btCapsuleShapeZ_getMargin_0:Dy,_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1:wE,_emscripten_bind_btKinematicCharacterController_setMaxSlope_1:Kv,_emscripten_bind_btQuadWord_z_0:NC,_emscripten_bind_btSoftBody_setCcdMotionThreshold_1:ix,_emscripten_bind_Material___destroy___0:hC,_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0:YE,_emscripten_bind_btSoftBody_rotate_1:Pj,_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0:zC,_emscripten_bind_btQuaternion_dot_1:BA,_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0:iC,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1:Aw,_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0:Lv,_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1:ov,_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0:nF,_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0:FA,_emscripten_bind_btCollisionDispatcher___destroy___0:Lv,_emscripten_bind_btRigidBody_applyCentralImpulse_1:qt,_emscripten_bind_btConvexHullShape_getMargin_0:Dy,_emscripten_bind_btDefaultMotionState_getWorldTransform_1:Rv,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1:iu,_emscripten_bind_btRaycastVehicle_getNumWheels_0:hA,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3:rt,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2:nt,_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1:kw,_emscripten_bind_btDynamicsWorld_rayTest_3:Tt,_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1:cz,_emscripten_bind_Config_set_kSR_SPLT_CL_1:eC,_emscripten_bind_btQuadWord_x_0:gE,_emscripten_bind_Config_get_diterations_0:bE,_emscripten_bind_btCollisionObject_isKinematicObject_0:mx,_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1:wi,_emscripten_bind_ConvexResultCallback___destroy___0:Lv,_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1:jv,_emscripten_bind_btQuaternion_getAngleShortestPath_0:uz,_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1:Nq,_emscripten_bind_btSoftBody_isKinematicObject_0:mx,_emscripten_bind_btRigidBody_getCenterOfMassTransform_0:rD,_emscripten_bind_btGhostObject_isKinematicObject_0:mx,_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5:gk,_emscripten_bind_btWheelInfoConstructionInfo___destroy___0:hC,_emscripten_bind_btCapsuleShape___destroy___0:Lv,_emscripten_bind_btCollisionObject_activate_1:Ur,_emscripten_bind_btCollisionObject_activate_0:_s,_emscripten_bind_btKinematicCharacterController_setUpAxis_1:qw,_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1:lv,_emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0:fH,_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0:jE,_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1:ZD,_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1:Sk,_emscripten_bind_btVector3_setX_1:DC,_emscripten_bind_btCollisionConfiguration___destroy___0:Lv,_emscripten_bind_btCapsuleShapeZ_setMargin_1:Vw,_emscripten_bind_btHingeConstraint_enableFeedback_1:Hx,_emscripten_bind_btActionInterface_updateAction_2:Uu,_emscripten_bind_btSphereShape___destroy___0:Lv,_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1:ew,_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1:bv,_emscripten_bind_btRaycastVehicle_updateSuspension_1:kl,_emscripten_bind_btManifoldPoint_set_m_localPointB_1:nr,_emscripten_bind_btVector3_setZ_1:BC,_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1:Vu,_emscripten_bind_btQuaternion_setValue_4:$o,_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1:Yz,_emscripten_bind_btSoftBody_transform_1:Iy,_emscripten_bind_LocalShapeInfo___destroy___0:hC,_emscripten_bind_btSoftBody_appendAnchor_4:Id,_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0:PD,_emscripten_bind_btPoint2PointConstraint_get_m_setting_0:OD,_emscripten_bind_btQuadWord_setY_1:CC,_emscripten_bind_btRigidBody_setUserPointer_1:Jy,_emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0:WE,_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1:Ry,_emscripten_bind_btVector4_rotate_2:mo,_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0:MG,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3:it,_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0:RB,_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0:LE,_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0:qA,_emscripten_bind_btCylinderShape_setMargin_1:Vw,_emscripten_bind_btRaycastVehicle_rayCast_1:Zx,_emscripten_bind_btCollisionWorld___destroy___0:Lv,_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0:FC,_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0:TD,_emscripten_bind_btBoxShape_btBoxShape_1:Ih,_emscripten_bind_btPersistentManifold_getBody1_0:OB,_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1:Yz,_emscripten_bind_RaycastInfo_set_m_isInContact_1:bA,_emscripten_bind_btKinematicCharacterController_setGravity_1:wD,_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5:kq,_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3:sr,_emscripten_bind_btQuaternion_setY_1:CC,_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1:Xv,_emscripten_bind_btWheelInfo_get_m_rollInfluence_0:YC,_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1:ew,_emscripten_bind_tNodeArray_size_0:LD,_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_btRigidBody_getUserIndex_0:QA,_emscripten_bind_btQuaternion_getW_0:PC,_emscripten_bind_btDynamicsWorld_getDispatchInfo_0:Rz,_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1:ww,_emscripten_bind_btSoftBody_appendFace_4:Yt,_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2:_k,_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1:tl,_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1:Sq,_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1:Zy,_emscripten_bind_btBoxShape_getMargin_0:Dy,_emscripten_bind_btPairCachingGhostObject___destroy___0:Jv,_emscripten_bind_btSoftBodyHelpers_CreateRope_5:Dh,_emscripten_bind_btPairCachingGhostObject_setUserPointer_1:Jy,_emscripten_bind_btPairCachingGhostObject_activate_0:_s,_emscripten_bind_btPairCachingGhostObject_activate_1:Ur,_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1:vC,_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0:kz,_emscripten_bind_btSoftBody_setUserPointer_1:Jy,_emscripten_bind_btDynamicsWorld_getDispatcher_0:bC,_emscripten_bind_btSoftBody_setMass_2:zt,_emscripten_bind_btConeShape_btConeShape_2:bm,_emscripten_bind_btDynamicsWorld___destroy___0:Lv,_emscripten_bind_Config_get_kCHR_0:KE,_emscripten_bind_btPairCachingGhostObject_forceActivationState_1:$z,_emscripten_bind_btDefaultMotionState___destroy___0:Lv,_emscripten_bind_btDispatcherInfo_get_m_stepCount_0:tD,_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1:Yy,_emscripten_bind_btQuadWord_setW_1:lC,_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0:nB,_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2:Ym,_emscripten_bind_LocalShapeInfo_set_m_shapePart_1:dB,_emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0:Kz,_emscripten_bind_btRigidBody_setLinearFactor_1:Dx,_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1:ux,_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1:Fv,_emscripten_bind_btRaycastVehicle_getUpAxis_0:kC,_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0:tx,_emscripten_bind_btWheelInfo_get_m_engineForce_0:pD,_emscripten_bind_Config_get_kSR_SPLT_CL_0:WD,_emscripten_bind_btRaycastVehicle_setSteeringValue_2:Zu,_emscripten_bind_btPoint2PointConstraint___destroy___0:Lv,_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0:pE,_emscripten_bind_btSoftBody_getUserPointer_0:uC,_emscripten_bind_btCollisionShape_setMargin_1:Vw,_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1:av,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2:ku,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1:lv,_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1:Ex,_emscripten_bind_Config_get_kVCF_0:UE,_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1:dD,_emscripten_bind_btRaycastVehicle_getRightAxis_0:NB,_emscripten_bind_btContactSolverInfo_set_m_numIterations_1:wz,_malloc:ic,_emscripten_bind_btDispatcherInfo_get_m_useEpa_0:mC,_emscripten_bind_btTransform_btTransform_2:yu,_emscripten_bind_btTransform_btTransform_0:eG,_emscripten_bind_btPairCachingGhostObject_getUserIndex_0:QA,_emscripten_bind_Config_set_kVC_1:$C,_emscripten_bind_btVector3_op_sub_1:uB,_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1:vA,_emscripten_bind_btQuaternion_length_0:sD,_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1:Sz,_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0:WD,_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1:gz,_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4:Kg,_emscripten_bind_btCollisionObject_setActivationState_1:iv,_emscripten_bind_btQuaternion_angle_1:_z,_emscripten_bind_btPersistentManifold___destroy___0:Lz,_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0:eF,_emscripten_bind_btCylinderShapeZ___destroy___0:Lv,_emscripten_bind_btMatrix3x3___destroy___0:hC,_emscripten_bind_btQuaternion_angleShortestPath_1:yx,_emscripten_bind_btWheelInfo_get_m_skidInfo_0:FD,_emscripten_bind_ConvexResultCallback_hasHit_0:Yw,_emscripten_bind_btCollisionShape_calculateLocalInertia_2:Du,_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_Config_set_kPR_1:aD,_emscripten_bind_btCollisionWorld_convexSweepTest_5:$q,_emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1:iD,_emscripten_bind_btVector3_length_0:Sw,_emscripten_bind_btSoftBody_set_m_materials_1:Ov,_emscripten_enum_PHY_ScalarType_PHY_UCHAR:QG,_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1:pr,_emscripten_bind_btVehicleRaycasterResult___destroy___0:hC,_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2:Du,_emscripten_bind_btConstraintSetting_set_m_damping_1:wE,_emscripten_bind_btVehicleRaycaster___destroy___0:Lv,_emscripten_bind_btSoftBody_set_m_cfg_1:Py,_emscripten_bind_btRigidBody_setCcdMotionThreshold_1:ix,_emscripten_bind_btConvexHullShape_setMargin_1:Vw,_emscripten_bind_btRigidBody_applyForce_2:nw,_emscripten_bind_btConeShapeZ_calculateLocalInertia_2:Du,_emscripten_bind_btConstraintSetting_set_m_tau_1:PE,_emscripten_bind_btConvexHullShape_calculateLocalInertia_2:Du,_emscripten_bind_btQuaternion_op_div_1:bB,___uremdi3:Br,_emscripten_bind_RaycastInfo_get_m_contactPointWS_0:xE,_emscripten_bind_btRigidBody_getTotalTorque_0:aB,_emscripten_bind_btRaycastVehicle_getForwardAxis_0:oB,_emscripten_bind_btSphereShape_calculateLocalInertia_2:Du,_emscripten_bind_btSoftBody_appendMaterial_0:wB,_emscripten_bind_btVector4_normalize_0:qD,_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0:qA,_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1:nv,_emscripten_bind_btSoftBody_setTotalMass_2:Vg,_emscripten_bind_LocalConvexResult_LocalConvexResult_5:tq,_emscripten_bind_btGhostObject_setFriction_1:pz,_emscripten_bind_btCollisionWorld_rayTest_3:Tt,_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1:Tw,_emscripten_bind_btCylinderShapeZ_setMargin_1:Vw,_emscripten_bind_btRigidBody_setFriction_1:pz,_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1:dr,_emscripten_bind_btGhostObject_setWorldTransform_1:zw,_emscripten_bind_tMaterialArray_size_0:LD,_emscripten_bind_btManifoldPoint_getAppliedImpulse_0:_x,_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1:rv,_emscripten_bind_btConvexHullShape___destroy___0:Lv,_emscripten_bind_RaycastInfo_set_m_suspensionLength_1:bD,_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0:cC,_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0:EC,_emscripten_bind_btKinematicCharacterController_jump_0:kx,_emscripten_bind_btCollisionObject_getUserPointer_0:uC,_emscripten_bind_btWheelInfo_set_m_raycastInfo_1:zs,_emscripten_bind_btSoftBody_generateClusters_1:Rx,_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1:mv,_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1:ew,_emscripten_bind_btRigidBody_upcast_1:Qy,_emscripten_bind_btCollisionObject_getWorldTransform_0:rD,_emscripten_bind_btVector4_setZ_1:BC,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1:br,___cxa_can_catch:Wp,_emscripten_bind_btTransform_getBasis_0:wF,_emscripten_bind_btPairCachingGhostObject_setFriction_1:pz,_emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0:OE,_emscripten_bind_btQuaternion_getAngle_0:Xz,_emscripten_bind_Config_set_kSRHR_CL_1:wC,_emscripten_bind_btCollisionDispatcher_getNumManifolds_0:Gy,_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1:Qz,_emscripten_bind_ClosestRayResultCallback___destroy___0:Lv,_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2:ow,_emscripten_bind_btCylinderShapeX_setMargin_1:Vw,_emscripten_bind_btQuadWord_w_0:PC,_emscripten_bind_Node___destroy___0:hC,_emscripten_bind_btDynamicsWorld_contactTest_2:Mm,_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2:Mm,_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2:Du,_emscripten_bind_btTransform_setOrigin_1:Oy,_emscripten_bind_btCompoundShape_getNumChildShapes_0:xz,_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1:Nz,_emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1:wy,_emscripten_bind_btGhostObject_btGhostObject_0:Di,_emscripten_bind_tNodeArray___destroy___0:Sv,_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2:js,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1:Xw,_emscripten_bind_btManifoldPoint_set_m_localPointA_1:Fr,_emscripten_bind_LocalConvexResult___destroy___0:hC,_emscripten_bind_btVector3_dot_1:Ds,_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0:YE,_emscripten_bind_btVector4_op_add_1:vB,_emscripten_bind_btWheelInfo___destroy___0:hC,_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0:Xx,_emscripten_bind_btTransform_setRotation_1:$y,_emscripten_bind_Config_set_kSHR_1:wD,_emscripten_bind_btPoint2PointConstraint_enableFeedback_1:Hx,_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1:Sy,_emscripten_bind_btAxisSweep3_btAxisSweep3_2:fs,_emscripten_bind_btAxisSweep3_btAxisSweep3_3:Dr,_emscripten_bind_btSoftBody_setCollisionFlags_1:Qx,_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1:vE,_emscripten_bind_btVector3_setY_1:CC,_emscripten_bind_btAxisSweep3_btAxisSweep3_4:hr,_emscripten_bind_btAxisSweep3_btAxisSweep3_5:Kq,_emscripten_bind_btQuadWord_setX_1:DC,_emscripten_bind_tMaterialArray___destroy___0:Sv,_emscripten_bind_btQuaternion_length2_0:_C,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0:ky,_emscripten_bind_Config_set_piterations_1:DB,_emscripten_bind_btOverlappingPairCache___destroy___0:Lv,_emscripten_bind_btRigidBody_setUserIndex_1:Jy,_emscripten_bind_Material_get_m_kAST_0:eF,_emscripten_bind_btConstraintSetting___destroy___0:hC,_emscripten_bind_btWheelInfo_btWheelInfo_1:Iv,_emscripten_bind_RayResultCallback___destroy___0:Lv,_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0:fH,_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0:UE,_emscripten_bind_btPersistentManifold_getBody0_0:PB,_emscripten_bind_btConeShapeX_btConeShapeX_2:am,_emscripten_bind_btQuaternion_z_0:NC,_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1:Tw,_emscripten_bind_btConeTwistConstraint_enableFeedback_1:Hx,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0:ip,_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1:ew,_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0:UE,_emscripten_bind_btSoftBody_translate_1:Jl,_emscripten_bind_btSliderConstraint_setUpperLinLimit_1:nx,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2:Eg,_emscripten_bind_btVector3_op_mul_1:Zs,_emscripten_bind_btConcaveShape___destroy___0:Lv,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4:lg,_emscripten_bind_btQuaternion_x_0:gE,_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5:of,_emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1:bD,_emscripten_bind_Config_set_timescale_1:pC,_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1:Lr,_emscripten_bind_btConcaveShape_setLocalScaling_1:ew,_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0:Rz,_emscripten_bind_btConeShapeX_setLocalScaling_1:ew,_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1:aD,_emscripten_bind_btSoftBody_appendLink_4:Xt,_emscripten_bind_btCylinderShapeZ_setLocalScaling_1:ew,_emscripten_bind_btConvexHullShape_btConvexHullShape_0:Gv,_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1:uA,_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1:Zy,_emscripten_bind_btSoftBody_getTotalMass_0:yo,_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1:Tu,_emscripten_bind_Config_get_kLF_0:XE,_emscripten_bind_btGhostObject___destroy___0:Jv,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2:Qt,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1:Cu,_emscripten_bind_btGhostObject_setContactProcessingThreshold_1:px,_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4:Or,_emscripten_bind_btCollisionWorld_getBroadphase_0:cC,_emscripten_bind_btQuaternion_op_mulq_1:pA,_emscripten_bind_btQuaternion___destroy___0:hC,_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2:Du,_emscripten_bind_btKinematicCharacterController_updateAction_2:Uu,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2:Ss,_emscripten_bind_Material_set_m_flags_1:dC,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0:tr,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1:Sr,_emscripten_bind_Config_get_viterations_0:$D,_emscripten_bind_btKinematicCharacterController_canJump_0:Qw,_emscripten_bind_btSoftBodyArray_at_1:hv,_emscripten_bind_btVector4_length_0:Sw,_emscripten_bind_btPairCachingGhostObject_setUserIndex_1:Jy,_emscripten_bind_btRigidBody_isActive_0:qz,_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3:Rk,_emscripten_bind_btMotionState_setWorldTransform_1:Vv,_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0:bC,_emscripten_bind_btCylinderShape_setLocalScaling_1:ew,_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0:rD,_emscripten_bind_btCompoundShape_calculateLocalInertia_2:Du,_emscripten_bind_btCollisionWorld_getDispatchInfo_0:Rz,_emscripten_enum_PHY_ScalarType_PHY_DOUBLE:PG,_emscripten_bind_btRigidBody_setCollisionShape_1:Vv,_emscripten_bind_btSoftBody_appendTetra_5:Bf,_emscripten_bind_btConeShapeX___destroy___0:Lv,_emscripten_bind_btCollisionObject_getCollisionFlags_0:aC,_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1:jz,_emscripten_bind_btConeTwistConstraint_enableMotor_1:Ax,_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1:Uq,_emscripten_bind_btSoftBody_checkLink_2:zl,_emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0:fH,_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3:ht,_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4:Rj,_emscripten_bind_btVector3_normalize_0:qD,_emscripten_bind_btPairCachingGhostObject_setRestitution_1:By,_emscripten_bind_Config_set_kAHR_1:VC,_emscripten_bind_btHeightfieldTerrainShape_getMargin_0:Dy,_emscripten_bind_btWheelInfo_updateWheel_2:Ji,_emscripten_bind_btBroadphaseInterface___destroy___0:Lv,_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3:Tt,_emscripten_bind_Config_get_kSRHR_CL_0:qE,_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1:Lx,_emscripten_bind_btWheelInfo_get_m_brake_0:ND,_emscripten_bind_btStaticPlaneShape___destroy___0:Lv,_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0:LB,_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1:px,_emscripten_bind_btCompoundShape___destroy___0:Lv,_emscripten_bind_btHingeConstraint_setMotorTarget_2:Kj,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0:Ly,_emscripten_bind_btCapsuleShapeX_setMargin_1:Vw,_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0:Lv,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1:Ew,_emscripten_bind_btRigidBody_getCollisionFlags_0:aC,_emscripten_bind_btCollisionShape_setLocalScaling_1:ew,_emscripten_bind_Config_get_piterations_0:aE,_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0:QD,_emscripten_bind_btMatrix3x3_setEulerZYX_3:aw,_emscripten_bind_btRigidBody_setRollingFriction_1:Yx,_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0:KE,_emscripten_bind_btRigidBody_getUserPointer_0:uC,_emscripten_bind_Config_get_kSHR_0:IE,_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2:Du,_emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1:Fr,_emscripten_bind_btRigidBody_setMotionState_1:rx,_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0:BB,_emscripten_bind_btCollisionWorld_getDispatcher_0:bC,_emscripten_bind_btVector4_dot_1:Ds,_emscripten_bind_btCollisionObject_setRollingFriction_1:Yx,_emscripten_bind_Config_set_kSK_SPLT_CL_1:fC,_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1:Sy,_emscripten_bind_btTriangleMesh_btTriangleMesh_1:Yu,_i64Subtract:Wt,_emscripten_bind_btCylinderShapeX_getMargin_0:Dy,_emscripten_bind_btRigidBody_setDamping_2:sn,_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0:pB,_emscripten_bind_btGhostObject_setCollisionFlags_1:Qx,_emscripten_bind_btMatrix3x3_getRotation_1:cy,_emscripten_bind_btWheelInfo_set_m_engineForce_1:EA,_emscripten_bind_btRigidBody_getBroadphaseProxy_0:xB,_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1:Bw,_emscripten_bind_btPersistentManifold_getNumContacts_0:LA,_emscripten_bind_btCylinderShapeX_setLocalScaling_1:ew,_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0:dw,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0:iz,_emscripten_bind_btCompoundShape_setLocalScaling_1:ew,_emscripten_bind_btOverlappingPairCallback___destroy___0:Lv,_emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0:$A,_emscripten_bind_btDynamicsWorld_convexSweepTest_5:$q,_emscripten_bind_btCylinderShape_calculateLocalInertia_2:Du,_emscripten_bind_btHingeConstraint_getHingeAngle_0:Bt,_emscripten_bind_btRigidBody_getCollisionShape_0:$B,_emscripten_bind_btRigidBody_setContactProcessingThreshold_1:px,_emscripten_bind_btRigidBody_getLinearVelocity_0:gA,_emscripten_bind_btRigidBody_applyImpulse_2:Wv,_emscripten_bind_btConcaveShape_calculateLocalInertia_2:Du,_emscripten_bind_btHingeConstraint_getRigidBodyB_0:yB,_emscripten_bind_RaycastInfo_get_m_groundObject_0:aE,_emscripten_bind_btRigidBody_setWorldTransform_1:zw,_emscripten_bind_btVehicleRaycaster_castRay_3:Ft,_emscripten_bind_btRigidBody_setAngularVelocity_1:Ww,_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3:rk,_emscripten_bind_Config_get_kDP_0:eF,_emscripten_bind_btConvexShape_setLocalScaling_1:ew,_emscripten_bind_Config_get_collisions_0:cE,_emscripten_bind_btSoftBody_activate_0:_s,_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2:Du,_emscripten_bind_btVector4_setX_1:DC,_emscripten_bind_btRaycastVehicle_setUserConstraintId_1:jx,_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0:xD,_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1:px,_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1:jv,_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0:BB,_emscripten_bind_RayResultCallback_hasHit_0:vx,_emscripten_bind_btSoftBody_isActive_0:qz,_emscripten_bind_btRigidBody_applyLocalTorque_1:Kt,_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1:eC,_emscripten_bind_Config___destroy___0:Ux,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0:gy,_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0:eF,_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1:$w,_emscripten_bind_btQuaternion_normalize_0:RC,_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0:GF,_emscripten_bind_btQuadWord_setZ_1:BC,_emscripten_bind_btConeShapeZ_setLocalScaling_1:ew,_emscripten_bind_Config_get_kPR_0:VE,_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0:Lv,_emscripten_bind_btConvexTriangleMeshShape___destroy___0:Lv,_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1:ZD,_emscripten_bind_Material_set_m_kAST_1:vE,_emscripten_bind_btGhostObject_setRollingFriction_1:Yx,_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1:Ns,___muldi3:_r,_emscripten_bind_btRigidBody_getAngularVelocity_0:Zz,_emscripten_bind_btCompoundShape_btCompoundShape_0:jj,_emscripten_bind_btCompoundShape_btCompoundShape_1:_i,_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1:ov,_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2:Hl,_emscripten_bind_btSphereShape_getMargin_0:Dy,_emscripten_bind_btCollisionObject_setAnisotropicFriction_2:Bu,_emscripten_bind_btHingeConstraint_setAngularOnly_1:Mx,_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2:Mm,_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1:qC,_emscripten_bind_Config_get_kDG_0:YE,_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2:Bu,_emscripten_bind_Node_get_m_x_0:LG,_emscripten_bind_btSoftBodyArray_size_0:LD,_emscripten_bind_ClosestRayResultCallback_hasHit_0:vx,_emscripten_bind_btCompoundShape_addChildShape_2:Dd,_emscripten_bind_btDispatcher___destroy___0:Lv,_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0:UE,_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1:PE,_llvm_bswap_i16:NF,_emscripten_bind_btDiscreteDynamicsWorld___destroy___0:Lv,_emscripten_bind_btConvexShape___destroy___0:Lv,_emscripten_bind_btWheelInfo_set_m_brake_1:sB,_memmove:hp,_emscripten_bind_btWheelInfo_set_m_worldTransform_1:uy,___cxa_is_pointer_type:Bx,_emscripten_bind_btCapsuleShapeX_setLocalScaling_1:ew,_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1:Qx,_emscripten_bind_btSoftBody_getCollisionFlags_0:aC,_emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0:iA,_emscripten_enum_PHY_ScalarType_PHY_INTEGER:OG,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1:Cr,_emscripten_bind_btCollisionObject_setRestitution_1:By,_emscripten_bind_btRigidBody_applyCentralForce_1:Gt,_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1:xC,_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1:kr,_emscripten_bind_LocalConvexResult_get_m_hitFraction_0:JE,_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0:QB,_emscripten_bind_btQuaternion_w_0:PC,_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0:fB,_emscripten_bind_btTransform_getRotation_0:Bo,_emscripten_bind_Config_set_kSKHR_CL_1:xC,_emscripten_bind_btHingeConstraint_btHingeConstraint_6:hq,_emscripten_bind_btHingeConstraint_btHingeConstraint_7:Jp,_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0:LG,_emscripten_bind_btHingeConstraint_btHingeConstraint_5:qg,_emscripten_bind_btHingeConstraint_btHingeConstraint_2:Uf,_emscripten_bind_btHingeConstraint_btHingeConstraint_3:Tf,_emscripten_bind_RaycastInfo___destroy___0:hC,_emscripten_bind_btSoftBody_setWorldTransform_1:zw,_emscripten_bind_btBoxShape_setMargin_1:Vw,_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1:wC,_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0:JC,_emscripten_bind_btVector4_y_0:OC,_emscripten_bind_Config_get_kSK_SPLT_CL_0:XD,_emscripten_bind_btTypedConstraint___destroy___0:Lv,_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1:Os,_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1:av,_emscripten_bind_btConeTwistConstraint_setDamping_1:dy,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1:zv,_emscripten_bind_Config_set_collisions_1:FB,_emscripten_bind_btQuaternion_btQuaternion_4:wo,_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0:cC,_emscripten_bind_btSoftBody_getCollisionShape_0:$B,_emscripten_bind_btWheelInfo_set_m_rotation_1:_A,_emscripten_bind_btSphereShape_btSphereShape_1:yw,_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0:ZB,_emscripten_bind_btQuaternion_y_0:OC,_emscripten_bind_btCollisionWorld_addCollisionObject_1:cv,_emscripten_bind_btCollisionWorld_addCollisionObject_2:hu,_emscripten_bind_btCollisionWorld_addCollisionObject_3:mt,_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1:Fy,_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1:Fr,_emscripten_bind_btHingeConstraint_getRigidBodyA_0:zB,_emscripten_bind_RaycastInfo_get_m_isInContact_0:oC,_emscripten_bind_Config_set_kKHR_1:TC,_emscripten_bind_btHeightfieldTerrainShape_setMargin_1:Vw,_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0:fB,_emscripten_bind_btCapsuleShape_setMargin_1:Vw,_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1:ju,_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7:zq,_emscripten_bind_btCollisionObject_setUserPointer_1:Jy,_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0:Mj,_emscripten_bind_btActionInterface___destroy___0:Lv,_emscripten_bind_btSoftBody_generateClusters_2:pw,_emscripten_bind_btDefaultMotionState_setWorldTransform_1:Vv,_emscripten_bind_btCollisionWorld_contactTest_2:Mm,_emscripten_bind_RayResultCallback_get_m_collisionObject_0:SC,_emscripten_bind_btPoint2PointConstraint_getPivotInA_0:Wy,_emscripten_bind_Config_get_kAHR_0:LE,_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0:KG,_emscripten_bind_btVector4_setY_1:CC,_emscripten_bind_btCompoundShape_setMargin_1:Vw,_emscripten_bind_btGhostObject_setRestitution_1:By,_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1:Tw,_emscripten_bind_btDynamicsWorld_addCollisionObject_1:cv,_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0:eB,_emscripten_bind_btDynamicsWorld_addCollisionObject_3:mt,_emscripten_bind_btDynamicsWorld_addCollisionObject_2:hu,_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0:co,_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0:bC,_emscripten_bind_btVector3_rotate_2:no,_emscripten_bind_btHeightfieldTerrainShape___destroy___0:Lv,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0:jF,_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0:_B,_emscripten_bind_Config_get_kVC_0:TE,_emscripten_bind_btVector4_op_mul_1:Zs,_emscripten_bind_btCylinderShape_btCylinderShape_1:vv,_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1:nr,_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1:br,_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1:Jz,_emscripten_bind_Material_get_m_kVST_0:YE,_emscripten_bind_Config_set_kVCF_1:wE,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3:rt,_emscripten_bind_btGhostObject_getUserIndex_0:QA,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1:iu,_emscripten_bind_btSoftBody_setRestitution_1:By,_emscripten_bind_btVector3___destroy___0:Lz,_bitshift64Lshr:Ct,_emscripten_bind_btRigidBody_setAngularFactor_1:sx,_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2:Du,_emscripten_bind_btWheelInfo_set_m_steering_1:YA,_emscripten_bind_btMotionState_getWorldTransform_1:Rv,_emscripten_bind_btDynamicsWorld_getSolverInfo_0:qA,_emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1:nr,_emscripten_bind_Config_get_kMT_0:WE,_emscripten_bind_btDynamicsWorld_getBroadphase_0:cC,_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1:UC,_emscripten_bind_Config_get_timescale_0:iE,_emscripten_bind_btVector3_x_0:gE,_emscripten_bind_btWheelInfo_set_m_skidInfo_1:ZA,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3:ln,_emscripten_bind_btCollisionObject_getCollisionShape_0:$B,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4:yq,_emscripten_bind_btManifoldPoint___destroy___0:hC,_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1:WB,_emscripten_bind_btVector3_z_0:NC,_emscripten_bind_btGhostObject_setUserIndex_1:Jy,_emscripten_bind_btWheelInfo_getSuspensionRestLength_0:zC,_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1:lx,_emscripten_bind_ClosestConvexResultCallback___destroy___0:Lv,_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0:hC,_emscripten_bind_btCollisionObject_setFriction_1:pz,_emscripten_bind_btQuadWord_y_0:OC,_emscripten_bind_btDefaultCollisionConfiguration___destroy___0:Lv,_emscripten_bind_btRigidBody_setMassProps_2:Bj,_emscripten_bind_btVector3_setValue_3:nq,_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1:ix,_emscripten_bind_RaycastInfo_get_m_suspensionLength_0:WE,_emscripten_bind_btGhostObject_getCollisionFlags_0:aC,_emscripten_bind_btCapsuleShapeX___destroy___0:Lv,_emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0:_D,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4:Yj,_emscripten_bind_Config_set_kDG_1:ZD,_emscripten_bind_btRigidBody_setActivationState_1:iv,_emscripten_bind_btQuaternion_getAxis_0:Mo,_emscripten_bind_btRigidBody_updateInertiaTensor_0:vj,_emscripten_bind_btRaycastVehicle_getUserConstraintId_0:KA,_emscripten_bind_btRaycastVehicle_updateAction_2:Uu,_emscripten_bind_btHingeConstraint_setLimit_4:pu,_emscripten_bind_btHingeConstraint_setLimit_5:Lt,_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0:Jx,_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0:tB,_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1:Az,_emscripten_bind_btConeShape_setLocalScaling_1:ew,_emscripten_bind_btSoftBody_scale_1:Ke,_emscripten_bind_Config_get_citerations_0:uE,_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btGhostObject_getCollisionShape_0:$B,_emscripten_bind_Config_get_kSSHR_CL_0:pE,_emscripten_bind_btBoxShape___destroy___0:Lv,_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0:jF,_emscripten_bind_btPersistentManifold_getContactPoint_1:Kw,_emscripten_bind_btVector3_btVector3_0:XF,_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btConeShapeX_calculateLocalInertia_2:Du,_emscripten_bind_RaycastInfo_set_m_groundObject_1:DB,_emscripten_bind_btGhostObject_activate_1:Ur,_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2:Vq,_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0:Xy,_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0:rE,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0:gG,_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0:Ap,_bitshift64Shl:ot,_emscripten_bind_btSphereShape_setMargin_1:Vw,_emscripten_bind_btSoftBody_get_m_cfg_0:HF,_emscripten_bind_btCollisionObject_setUserIndex_1:Jy,_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1:Lw,_emscripten_bind_btSliderConstraint_setUpperAngLimit_1:ox,_emscripten_bind_btDynamicsWorld_contactPairTest_3:zj,_emscripten_bind_btCollisionWorld_getPairCache_0:hy,_emscripten_bind_btConeTwistConstraint_setMotorTarget_1:Sh,_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1:Mq,_emscripten_bind_btTransform_getOrigin_0:QC,_emscripten_bind_btWheelInfo_set_m_rollInfluence_1:mA,_emscripten_bind_btRigidBody_getWorldTransform_0:rD,_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0:zu,_emscripten_bind_btGhostObject_forceActivationState_1:$z,_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5:he,_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0:at,_emscripten_bind_VoidPtr___destroy___0:hC,_emscripten_bind_btSliderConstraint_setLowerAngLimit_1:qx,_emscripten_bind_btSoftBody_get_m_materials_0:dF,_emscripten_bind_btVector4_op_sub_1:uB,_emscripten_bind_RaycastInfo_set_m_contactPointWS_1:nr,_emscripten_bind_RayResultCallback_set_m_collisionObject_1:Yz,_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0:yD,_emscripten_bind_btSoftBody_setContactProcessingThreshold_1:px,_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0:oy,_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0:Fh,_emscripten_bind_Config_get_kDF_0:ZE,_emscripten_bind_btWheelInfo_get_m_steering_0:ED,_emscripten_bind_btConstraintSetting_get_m_tau_0:PD,_emscripten_bind_btSliderConstraint___destroy___0:Lv,_emscripten_bind_btCollisionObject_setCollisionShape_1:Vv,_emscripten_bind_btCollisionShape___destroy___0:Lv,_emscripten_bind_btMatrix3x3_getRow_1:Qp,_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0:UE,_emscripten_bind_btTriangleMesh_addTriangle_4:Tm,_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0:SC,_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0:oA,_emscripten_bind_btSoftBody_getUserIndex_0:QA,_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1:Vv,_emscripten_bind_btKinematicCharacterController_warp_1:Bv,_emscripten_bind_btAxisSweep3___destroy___0:Lv,_emscripten_bind_btSoftBody_getWorldTransform_0:rD,___muldsi3:jp,_emscripten_bind_btTriangleMesh___destroy___0:Lv,_emscripten_bind_btKinematicCharacterController_preStep_1:uv,_emscripten_bind_btRaycastVehicle_applyEngineForce_2:_u,_emscripten_bind_btRaycastVehicle_setBrake_2:yv,_emscripten_bind_ConcreteContactResultCallback___destroy___0:Lv,_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1:pr,_emscripten_bind_btRaycastVehicle_updateVehicle_1:bw,_emscripten_bind_btCollisionObject___destroy___0:Jv,_emscripten_bind_btQuaternion_normalized_0:Co,_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1:vE,_emscripten_bind_btRigidBody_applyTorqueImpulse_1:yt,_emscripten_bind_btTriangleMeshShape_setLocalScaling_1:ew,_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1:Kx,_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1:$t,_emscripten_bind_btQuaternion_op_mul_1:Rs,_emscripten_bind_btDispatcherInfo_set_m_timeStep_1:PE,_emscripten_bind_btVector3_btVector3_3:Dp,_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1:Fr,_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1:hz,_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0:eo,_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0:WC,_emscripten_bind_btCollisionShape_getMargin_0:Dy,_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1:vE,_emscripten_bind_btRigidBody_isKinematicObject_0:mx,_emscripten_bind_RaycastInfo_get_m_hardPointWS_0:HE,_emscripten_bind_btConeTwistConstraint___destroy___0:Lv,_emscripten_bind_btQuadWord___destroy___0:hC,_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3:zj,_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1:Zq,_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2:vw,_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0:hE,_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0:hE,_emscripten_bind_btSoftBody_setUserIndex_1:Jy,_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1:xx,_emscripten_bind_btSoftBody_setCollisionShape_1:Vv,_emscripten_bind_btGhostObject_setAnisotropicFriction_2:Bu,_emscripten_bind_btConstraintSolver___destroy___0:Lv,_emscripten_bind_btDbvtBroadphase___destroy___0:Lv,_emscripten_bind_btCapsuleShape_btCapsuleShape_2:Zm,_emscripten_bind_btTypedConstraint_enableFeedback_1:Hx,_emscripten_bind_btSoftBody_setRollingFriction_1:Yx,_emscripten_bind_btGhostObject_activate_0:_s,_emscripten_bind_btCapsuleShape_setLocalScaling_1:ew,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0:Cz,_emscripten_bind_btRigidBody_setAnisotropicFriction_2:Bu,_emscripten_bind_btSoftBody_btSoftBody_4:Gr,_emscripten_bind_btQuaternion_setRotation_2:jw,_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1:PE,_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1:wE,_emscripten_bind_btVector3_op_add_1:vB,_emscripten_bind_btPersistentManifold_btPersistentManifold_0:Ii,_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0:eB,_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2:Es,_emscripten_bind_btVector4___destroy___0:Lz,_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0:mx,_emscripten_bind_btConstraintSetting_get_m_damping_0:UE,_emscripten_bind_tNodeArray_at_1:mw,_i64Add:xv,_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1:bz,_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10:Vd,_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1:ix,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0:Np,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1:ts,_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3:Xj,_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0:tz,_emscripten_bind_btWheelInfo_get_m_deltaRotation_0:ZC,_emscripten_bind_btPoint2PointConstraint_getPivotInB_0:Vy,_emscripten_bind_btKinematicCharacterController_playerStep_2:lu,_emscripten_bind_btDispatcherInfo___destroy___0:hC,_emscripten_bind_btCapsuleShape_getMargin_0:Dy,_emscripten_bind_btCylinderShape_getMargin_0:Dy,_emscripten_bind_btHingeConstraint_getFrameOffsetB_0:Dz,_emscripten_bind_btStaticPlaneShape_setLocalScaling_1:ew,_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2:Du,_emscripten_bind_btVector4_setValue_4:$o,_emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1:jy,_emscripten_bind_ContactResultCallback_addSingleResult_7:zq,_emscripten_bind_btGhostObject_getWorldTransform_0:rD,_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0:hy,_emscripten_bind_LocalConvexResult_set_m_hitFraction_1:TC,_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2:Du,_emscripten_bind_btDispatcherInfo_get_m_timeStep_0:PD,_emscripten_bind_btConvexTriangleMeshShape_setMargin_1:Vw,_emscripten_bind_btWheelInfo_get_m_frictionSlip_0:lD,_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1:wE,_emscripten_bind_btBoxShape_calculateLocalInertia_2:Du,_emscripten_bind_btMotionState___destroy___0:Lv,_emscripten_bind_btCollisionObject_setCollisionFlags_1:Qx,_emscripten_bind_btPairCachingGhostObject_setActivationState_1:iv,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1:Cu,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2:Qt,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3:mt,_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1:Hx,_emscripten_bind_Config_set_kSSHR_CL_1:vC,_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1:nv,_emscripten_bind_btSoftBodyWorldInfo___destroy___0:uw,_emscripten_bind_btConvexTriangleMeshShape_getMargin_0:Dy,_emscripten_bind_btSoftBodySolver___destroy___0:Lv,_emscripten_bind_Node_get_m_n_0:$F,_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1:jA,_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1:zw,_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btConeTwistConstraint_setAngularOnly_1:Uw,_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1:Tw,_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0:AB,_emscripten_bind_btRaycastVehicle_updateFriction_1:$v,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2:Hj,_emscripten_bind_btGhostObject_getNumOverlappingObjects_0:oy,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0:Lv,_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1:Fy,_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88:EG,_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1:ax,_emscripten_bind_btRaycastVehicle_getForwardVector_0:Rn,_emscripten_bind_btRigidBodyConstructionInfo___destroy___0:hC,_emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1:jr,_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1:xx,_sbrk:fo,_emscripten_bind_btPoint2PointConstraint_setPivotA_1:Gw,_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1:Tq,_memcpy:Vh,_emscripten_bind_Config_get_maxvolume_0:jE,_emscripten_bind_btCapsuleShape_calculateLocalInertia_2:Du,_emscripten_bind_btRigidBody___destroy___0:Jv,_emscripten_bind_btVector3_y_0:OC,_emscripten_bind_btDispatcherInfo_set_m_useEpa_1:aA,_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0:VE,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2:ss,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3:Nr,_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0:tD,_emscripten_bind_Config_set_kDF_1:dD,_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9:dg,_emscripten_bind_btSoftBody_activate_1:Ur,_emscripten_bind_btConeShapeZ_btConeShapeZ_2:$l,_emscripten_bind_btGhostObject_setCollisionShape_1:Vv,_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1:dD,_emscripten_bind_btQuaternion_setW_1:lC,_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1:Yx,_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1:Fv,_emscripten_get_global_libc:dH,_emscripten_bind_btGhostObject_isActive_0:qz,_emscripten_bind_btVector4_z_0:NC,_emscripten_bind_btCollisionObject_forceActivationState_1:$z,_emscripten_bind_btKinematicCharacterController_onGround_0:Vx,_emscripten_bind_btRaycastVehicle_getWheelInfo_1:ly,_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btConeTwistConstraint_setLimit_2:rw,_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1:Ey,_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0:xE,_emscripten_bind_Node_set_m_x_1:Lr,_emscripten_bind_btSoftBody_setFriction_1:pz,_emscripten_bind_btRigidBody_setSleepingThresholds_2:_v,_emscripten_bind_btSoftBody_upcast_1:az,_emscripten_bind_btCollisionObject_setWorldTransform_1:zw,_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0:tD,_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1:Mz,_emscripten_bind_btStridingMeshInterface___destroy___0:Lv,_emscripten_bind_btSoftBody_setActivationState_1:iv,_emscripten_bind_btManifoldPoint_get_m_localPointA_0:fH,_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0:JA,_emscripten_bind_btSoftBodyHelpers_CreatePatch_9:De,_emscripten_bind_btDispatcher_getNumManifolds_0:Gy,_emscripten_bind_btConvexShape_setMargin_1:Vw,_emscripten_bind_btSoftBody_get_m_nodes_0:xF,_emscripten_bind_btSoftBody___destroy___0:Jv,_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0:Bz,_emscripten_bind_btRigidBody_activate_1:Ur,_emscripten_bind_btRaycastVehicle_updateWheelTransform_2:Qs,_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2:dt,_emscripten_bind_btRaycastVehicle___destroy___0:Lv,_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0:nE,_emscripten_bind_btGhostObject_setActivationState_1:iv,_emscripten_bind_btSoftBodyArray___destroy___0:Sv,_emscripten_bind_Material_set_m_kLST_1:wE,_emscripten_bind_btCollisionWorld_contactPairTest_3:zj,_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0:cB,_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1:gx,___udivdi3:Oz,_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0:XD,_emscripten_bind_Config_get_kSS_SPLT_CL_0:OE,_emscripten_bind_btCylinderShapeX___destroy___0:Lv,_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0:Ay,_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0:QC,_emscripten_bind_ContactResultCallback___destroy___0:Lv,_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0:My,_emscripten_bind_btSoftBody_setAnisotropicFriction_2:Bu,_emscripten_bind_btConstraintSetting_btConstraintSetting_0:Tx,_emscripten_bind_btRigidBody_getMotionState_0:jC,_emscripten_bind_btKinematicCharacterController_getGhostObject_0:SC,_emscripten_bind_btRigidBody_btRigidBody_1:qi,_emscripten_bind_btTriangleMeshShape___destroy___0:Lv,_emscripten_bind_btKinematicCharacterController_setWalkDirection_1:Su,_emscripten_bind_btDynamicsWorld_removeAction_1:Xv,_emscripten_bind_btRigidBody_applyTorque_1:gu,_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0:RA,_emscripten_bind_btTransform_setIdentity_0:AC,_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0:PD,_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1:gr,_emscripten_bind_btGhostObject_setUserPointer_1:Jy,_emscripten_bind_btKinematicCharacterController_getGravity_0:IE,___udivmoddi4:Oe,_emscripten_enum_PHY_ScalarType_PHY_SHORT:RG,_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_btDiscreteDynamicsWorld_addAction_1:kw,_emscripten_bind_btRaycastVehicle_setPitchControl_1:by,_emscripten_bind_btQuaternion_op_sub_1:zA,_emscripten_bind_btHingeConstraint_btHingeConstraint_4:tg,_emscripten_bind_LocalShapeInfo_get_m_shapePart_0:QD,_emscripten_bind_btConeShape_calculateLocalInertia_2:Du,_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2:Du,_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1:Ey,_llvm_bswap_i32:fA,_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1:rv,_emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1:Uy,_emscripten_bind_btSphereShape_setLocalScaling_1:ew,_emscripten_bind_btRigidBody_applyCentralLocalForce_1:$s,_emscripten_bind_btVector4_w_0:PC,_emscripten_bind_btWheelInfo_get_m_worldTransform_0:QF,_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0:VD,_emscripten_bind_btBvhTriangleMeshShape___destroy___0:Lv,_emscripten_bind_Config_set_citerations_1:GB,_emscripten_bind_btSoftBody_checkFace_3:zk,_emscripten_bind_Config_get_kSKHR_CL_0:rE,_free:Tc,_emscripten_bind_btDefaultVehicleRaycaster_castRay_3:Ft,_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0:HE,_emscripten_bind_btContactSolverInfo_get_m_numIterations_0:nC,_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0:qE,_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1:wE,_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1:ov,_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0:IF,_emscripten_bind_Config_set_diterations_1:EB,_emscripten_bind_btRaycastVehicle_getUserConstraintType_0:yA,_emscripten_bind_btGeneric6DofConstraint___destroy___0:Lv,_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1:zv,_emscripten_bind_btVector4_btVector4_4:vo,_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3:it,_emscripten_bind_btVector4_x_0:gE,_emscripten_bind_Config_set_kDP_1:vE,_emscripten_bind_btGhostObject_getUserPointer_0:uC,_emscripten_bind_btConvexHullShape_addPoint_1:zx,_emscripten_bind_btConvexHullShape_addPoint_2:Tv,_emscripten_bind_btRaycastVehicle_resetSuspension_0:Al,_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0:Pw,_emscripten_bind_Config_set_kMT_1:bD,_emscripten_bind_btRigidBody_activate_0:_s,_emscripten_bind_btBroadphaseProxy___destroy___0:Lz,_emscripten_bind_Config_get_kKHR_0:JE,_emscripten_bind_Material_get_m_kLST_0:UE,_emscripten_bind_btHingeConstraint___destroy___0:Lv,_emscripten_bind_btPairCachingGhostObject_getUserPointer_0:uC,_emscripten_bind_btSoftBody_set_m_nodes_1:tw,_emscripten_bind_Config_set_viterations_1:CB,_emscripten_bind_btConvexShape_calculateLocalInertia_2:Du,_memset:Ik,_emscripten_bind_btKinematicCharacterController___destroy___0:Lv,_emscripten_bind_btConvexHullShape_setLocalScaling_1:ew,_emscripten_bind_btTriangleMesh_btTriangleMesh_0:Zv,_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0:$B,_emscripten_bind_btTriangleMesh_btTriangleMesh_2:eu,_emscripten_bind_btTransform___destroy___0:hC,_emscripten_bind_btWheelInfo_set_m_frictionSlip_1:wA,_emscripten_bind_btSoftBodyHelpers___destroy___0:hC,_emscripten_bind_btHingeConstraint_enableAngularMotor_3:ru,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1:wr,_emscripten_bind_btRigidBody_setCenterOfMassTransform_1:Qv,_emscripten_bind_btManifoldPoint_get_m_localPointB_0:xE,_emscripten_bind_btQuaternion_inverse_0:Lo,_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3:zj,_emscripten_bind_btSliderConstraint_setLowerLinLimit_1:px,_emscripten_bind_btPoint2PointConstraint_set_m_setting_1:os,_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1:Cy,_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1:Tw,_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0:kD,_emscripten_bind_btRigidBody_setLinearVelocity_1:fx,_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0:xE,_emscripten_bind_btVehicleTuning_btVehicleTuning_0:ex,_emscripten_bind_Config_set_maxvolume_1:qC,_emscripten_bind_btDefaultSoftBodySolver___destroy___0:Lv,_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1:qr,_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0:pB,_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1:oz,_emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0:xA,_emscripten_bind_btDynamicsWorld_addAction_1:kw,_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1:Xv,_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1:ZD,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2:nt,_emscripten_bind_btDefaultVehicleRaycaster___destroy___0:Lv,_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1:Ky,_emscripten_bind_btQuaternion_setEulerZYX_3:Av,_emscripten_bind_Config_set_kLF_1:cD,_emscripten_bind_btWheelInfo_get_m_rotation_0:GD,_emscripten_enum_PHY_ScalarType_PHY_FLOAT:jH,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1:Sx,_emscripten_bind_Config_set_kSS_SPLT_CL_1:iD,_emscripten_bind_btSoftBody_forceActivationState_1:$z,_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1:VC,_emscripten_bind_btKinematicCharacterController_setFallSpeed_1:$C,_emscripten_bind_Material_get_m_flags_0:oE,_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0:mB,_emscripten_bind_btSoftBody_appendNode_2:Xc,_emscripten_bind_ClosestConvexResultCallback_hasHit_0:Yw,_emscripten_bind_btCapsuleShapeZ___destroy___0:Lv,_emscripten_bind_btRaycastVehicle_getRigidBody_0:MB,_emscripten_bind_btHingeConstraint_getFrameOffsetA_0:Ez,_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0:tC,_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0:SC,_emscripten_bind_btTriangleMesh_addTriangle_3:fn,_emscripten_bind_btGhostObject_getOverlappingObject_1:ax,_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0:hy,_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0:Rz,_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1:nr,_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2:ku,_emscripten_bind_btCompoundShape_getChildShape_1:ey,_emscripten_bind_btRigidBody_setCollisionFlags_1:Qx,_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1:zz,_emscripten_bind_Config_set_kCHR_1:UC,_emscripten_bind_btRaycastVehicle_setUserConstraintType_1:_w,_emscripten_bind_btConeShape___destroy___0:Lv,_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2:Xm,_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3:Xi,_emscripten_bind_btSliderConstraint_btSliderConstraint_5:lf,_emscripten_bind_btSliderConstraint_btSliderConstraint_3:de,_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0:ZE,_emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0:DE,_emscripten_bind_RaycastInfo_set_m_hardPointWS_1:qr,_emscripten_bind_btRigidBody_forceActivationState_1:$z,_emscripten_bind_btPoint2PointConstraint_setPivotB_1:Fw,_emscripten_bind_btManifoldPoint_getDistance_0:xy,_emscripten_bind_btWheelInfo_set_m_deltaRotation_1:nA,_emscripten_bind_btGhostPairCallback___destroy___0:Lv,_emscripten_bind_btTransform_setFromOpenGLMatrix_1:Ix,_emscripten_bind_btKinematicCharacterController_getMaxSlope_0:KE,_emscripten_bind_btSliderConstraint_enableFeedback_1:Hx,_emscripten_bind_btRaycastVehicle_addWheel_7:Md,_emscripten_bind_btQuaternion_op_add_1:AA,_emscripten_bind_btPairCachingGhostObject_isActive_0:qz,_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1:jA,_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1:bu,_emscripten_bind_btHingeConstraint_enableMotor_1:my,_emscripten_bind_btDispatcherInfo_set_m_stepCount_1:jA,_emscripten_bind_btBoxShape_setLocalScaling_1:ew,_emscripten_bind_btConeShapeZ___destroy___0:Lv,_emscripten_bind_btDynamicsWorld_getPairCache_0:hy,_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5:$q,_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5:$q,_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2:At,_emscripten_bind_btRigidBody_setRestitution_1:By,_emscripten_bind_btVector4_btVector4_0:XF,_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0:MA,_emscripten_bind_btGhostObject_setCcdMotionThreshold_1:ix,_emscripten_bind_btVector4_normalized_0:Jo,_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1:kv,_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1:kv,_emscripten_bind_tMaterialArray_at_1:hv,_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1:dB,_emscripten_bind_Material_set_m_kVST_1:ZD,_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1:bv,_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0:eF,_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3:Tt,_emscripten_bind_btWheelInfo_get_m_raycastInfo_0:fH,_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0:GA,_emscripten_bind_btConvexShape_getMargin_0:Dy,_emscripten_bind_btVector3_normalized_0:Ko,_emscripten_bind_btRaycastVehicle_getSteeringValue_1:cw,_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0:$x,_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1:bD,_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1:ir,_emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1:ar,_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0:XE,__GLOBAL__sub_I_btQuickprof_cpp:Zp,runPostSets:Vt,stackAlloc:Hy,stackSave:hH,stackRestore:_G,establishStackSpace:CE,setTempRet0:bH,getTempRet0:gH,setThrew:KB,stackAlloc:Hy,stackSave:hH,stackRestore:_G,establishStackSpace:CE,setThrew:KB,setTempRet0:bH,getTempRet0:gH,dynCall_viiiii:uu,dynCall_vid:MC,dynCall_vi:hF,dynCall_viiidii:xt,dynCall_vii:XB,dynCall_iiiiiiiiiii:Fp,dynCall_ii:SD,dynCall_viidi:Cw,dynCall_viddiii:Ot,dynCall_vidii:Dw,dynCall_iiiii:tv,dynCall_vidi:ez,dynCall_diiiiiiii:mr,dynCall_viiiiddddiid:Sp,dynCall_diiiii:du,dynCall_vidd:Wz,dynCall_iiii:wx,dynCall_viiiiid:wt,dynCall_viiiiii:ft,dynCall_iiid:fy,dynCall_di:mE,dynCall_iiiiiii:Js,dynCall_diiidii:Ys,dynCall_viidii:Nu,dynCall_viiiiiii:bs,dynCall_viiiiiiiii:Hq,dynCall_viiiiiiiiii:Vp,dynCall_iii:lA,dynCall_diii:Px,dynCall_diiiiiiiiii:Ip,dynCall_viiiid:Mu,dynCall_diiiiiiiii:wq,dynCall_did:YB,dynCall_viiiidddddidi:pp,dynCall_diidii:qu,dynCall_diiii:Ev,dynCall_iiiiiiiiii:sq,dynCall_viiid:xw,dynCall_viii:sy,dynCall_v:NG,dynCall_viid:mz,dynCall_iidid:iw,dynCall_viiii:Uv}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _emscripten_bind_btCylinderShape___destroy___0=Module["_emscripten_bind_btCylinderShape___destroy___0"]=asm["_emscripten_bind_btCylinderShape___destroy___0"];var _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=Module["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"];var _emscripten_bind_btGhostObject___destroy___0=Module["_emscripten_bind_btGhostObject___destroy___0"]=asm["_emscripten_bind_btGhostObject___destroy___0"];var _emscripten_bind_Config_get_kSRHR_CL_0=Module["_emscripten_bind_Config_get_kSRHR_CL_0"]=asm["_emscripten_bind_Config_get_kSRHR_CL_0"];var _emscripten_bind_btPoint2PointConstraint_set_m_setting_1=Module["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"]=asm["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"];var _emscripten_bind_btQuaternion_dot_1=Module["_emscripten_bind_btQuaternion_dot_1"]=asm["_emscripten_bind_btQuaternion_dot_1"];var _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"];var _emscripten_bind_btKinematicCharacterController_setWalkDirection_1=Module["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"]=asm["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"];var _emscripten_bind_btCollisionObject_isActive_0=Module["_emscripten_bind_btCollisionObject_isActive_0"]=asm["_emscripten_bind_btCollisionObject_isActive_0"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1"];var _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=Module["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"];var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];var _emscripten_bind_btCapsuleShapeX_getMargin_0=Module["_emscripten_bind_btCapsuleShapeX_getMargin_0"]=asm["_emscripten_bind_btCapsuleShapeX_getMargin_0"];var _emscripten_bind_Node_set_m_n_1=Module["_emscripten_bind_Node_set_m_n_1"]=asm["_emscripten_bind_Node_set_m_n_1"];var _emscripten_bind_btCompoundShape_getMargin_0=Module["_emscripten_bind_btCompoundShape_getMargin_0"]=asm["_emscripten_bind_btCompoundShape_getMargin_0"];var _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=Module["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"];var _emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0=Module["_emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0"]=asm["_emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0"];var _emscripten_bind_btRigidBody_setUserPointer_1=Module["_emscripten_bind_btRigidBody_setUserPointer_1"]=asm["_emscripten_bind_btRigidBody_setUserPointer_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"];var _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btQuaternion_setX_1=Module["_emscripten_bind_btQuaternion_setX_1"]=asm["_emscripten_bind_btQuaternion_setX_1"];var _emscripten_bind_btCylinderShapeZ_getMargin_0=Module["_emscripten_bind_btCylinderShapeZ_getMargin_0"]=asm["_emscripten_bind_btCylinderShapeZ_getMargin_0"];var _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=Module["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"];var _emscripten_bind_btQuaternion_setZ_1=Module["_emscripten_bind_btQuaternion_setZ_1"]=asm["_emscripten_bind_btQuaternion_setZ_1"];var _emscripten_bind_btCollisionObject_getUserIndex_0=Module["_emscripten_bind_btCollisionObject_getUserIndex_0"]=asm["_emscripten_bind_btCollisionObject_getUserIndex_0"];var _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=Module["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"];var _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"];var _emscripten_bind_btKinematicCharacterController_setMaxSlope_1=Module["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"]=asm["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"];var _emscripten_bind_btQuadWord_z_0=Module["_emscripten_bind_btQuadWord_z_0"]=asm["_emscripten_bind_btQuadWord_z_0"];var _emscripten_bind_btSoftBody_setCcdMotionThreshold_1=Module["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"];var _emscripten_bind_Material___destroy___0=Module["_emscripten_bind_Material___destroy___0"]=asm["_emscripten_bind_Material___destroy___0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_2=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"];var _emscripten_bind_btSoftBody_rotate_1=Module["_emscripten_bind_btSoftBody_rotate_1"]=asm["_emscripten_bind_btSoftBody_rotate_1"];var _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=Module["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"]=asm["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"];var _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=Module["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"]=asm["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"];var _emscripten_bind_btVector4_setY_1=Module["_emscripten_bind_btVector4_setY_1"]=asm["_emscripten_bind_btVector4_setY_1"];var _emscripten_enum_PHY_ScalarType_PHY_UCHAR=Module["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"]=asm["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"];var _emscripten_bind_btQuaternion_setW_1=Module["_emscripten_bind_btQuaternion_setW_1"]=asm["_emscripten_bind_btQuaternion_setW_1"];var _emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=Module["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"];var _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=Module["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"];var _emscripten_bind_btCollisionDispatcher___destroy___0=Module["_emscripten_bind_btCollisionDispatcher___destroy___0"]=asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];var _emscripten_bind_btRigidBody_applyCentralImpulse_1=Module["_emscripten_bind_btRigidBody_applyCentralImpulse_1"]=asm["_emscripten_bind_btRigidBody_applyCentralImpulse_1"];var _emscripten_bind_btConvexHullShape_getMargin_0=Module["_emscripten_bind_btConvexHullShape_getMargin_0"]=asm["_emscripten_bind_btConvexHullShape_getMargin_0"];var _emscripten_bind_btDefaultMotionState_getWorldTransform_1=Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"]=asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"];var _emscripten_bind_btDynamicsWorld_rayTest_3=Module["_emscripten_bind_btDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btDynamicsWorld_rayTest_3"];var _emscripten_bind_Material_set_m_flags_1=Module["_emscripten_bind_Material_set_m_flags_1"]=asm["_emscripten_bind_Material_set_m_flags_1"];var _emscripten_bind_Config_set_kSR_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSR_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSR_SPLT_CL_1"];var _emscripten_bind_btQuadWord_x_0=Module["_emscripten_bind_btQuadWord_x_0"]=asm["_emscripten_bind_btQuadWord_x_0"];var _emscripten_bind_Config_get_diterations_0=Module["_emscripten_bind_Config_get_diterations_0"]=asm["_emscripten_bind_Config_get_diterations_0"];var _emscripten_bind_btCollisionObject_isKinematicObject_0=Module["_emscripten_bind_btCollisionObject_isKinematicObject_0"]=asm["_emscripten_bind_btCollisionObject_isKinematicObject_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"];var _emscripten_bind_btSphereShape___destroy___0=Module["_emscripten_bind_btSphereShape___destroy___0"]=asm["_emscripten_bind_btSphereShape___destroy___0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"];var _emscripten_bind_btQuaternion_getAngleShortestPath_0=Module["_emscripten_bind_btQuaternion_getAngleShortestPath_0"]=asm["_emscripten_bind_btQuaternion_getAngleShortestPath_0"];var _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"];var _emscripten_bind_btSoftBody_isKinematicObject_0=Module["_emscripten_bind_btSoftBody_isKinematicObject_0"]=asm["_emscripten_bind_btSoftBody_isKinematicObject_0"];var _emscripten_bind_btRigidBody_getCenterOfMassTransform_0=Module["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"]=asm["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"];var _emscripten_bind_btTransform_setIdentity_0=Module["_emscripten_bind_btTransform_setIdentity_0"]=asm["_emscripten_bind_btTransform_setIdentity_0"];var _emscripten_bind_btGhostObject_isKinematicObject_0=Module["_emscripten_bind_btGhostObject_isKinematicObject_0"]=asm["_emscripten_bind_btGhostObject_isKinematicObject_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"];var _emscripten_bind_btWheelInfoConstructionInfo___destroy___0=Module["_emscripten_bind_btWheelInfoConstructionInfo___destroy___0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo___destroy___0"];var _emscripten_bind_btCapsuleShape___destroy___0=Module["_emscripten_bind_btCapsuleShape___destroy___0"]=asm["_emscripten_bind_btCapsuleShape___destroy___0"];var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"]=asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];var _emscripten_bind_btCollisionObject_activate_1=Module["_emscripten_bind_btCollisionObject_activate_1"]=asm["_emscripten_bind_btCollisionObject_activate_1"];var _emscripten_bind_btCollisionObject_activate_0=Module["_emscripten_bind_btCollisionObject_activate_0"]=asm["_emscripten_bind_btCollisionObject_activate_0"];var _emscripten_bind_btKinematicCharacterController_setUpAxis_1=Module["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"]=asm["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"];var _emscripten_bind_Config_set_kSSHR_CL_1=Module["_emscripten_bind_Config_set_kSSHR_CL_1"]=asm["_emscripten_bind_Config_set_kSSHR_CL_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0"];var _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=Module["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"];var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"]=asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];var _emscripten_bind_btVector3_setX_1=Module["_emscripten_bind_btVector3_setX_1"]=asm["_emscripten_bind_btVector3_setX_1"];var _emscripten_bind_btCollisionConfiguration___destroy___0=Module["_emscripten_bind_btCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];var _emscripten_bind_btCapsuleShapeZ_setMargin_1=Module["_emscripten_bind_btCapsuleShapeZ_setMargin_1"]=asm["_emscripten_bind_btCapsuleShapeZ_setMargin_1"];var _emscripten_bind_btHingeConstraint_enableFeedback_1=Module["_emscripten_bind_btHingeConstraint_enableFeedback_1"]=asm["_emscripten_bind_btHingeConstraint_enableFeedback_1"];var _emscripten_bind_btActionInterface_updateAction_2=Module["_emscripten_bind_btActionInterface_updateAction_2"]=asm["_emscripten_bind_btActionInterface_updateAction_2"];var stackAlloc=Module["stackAlloc"]=asm["stackAlloc"];var _emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=Module["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"]=asm["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"];var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"];var _emscripten_bind_btRaycastVehicle_updateSuspension_1=Module["_emscripten_bind_btRaycastVehicle_updateSuspension_1"]=asm["_emscripten_bind_btRaycastVehicle_updateSuspension_1"];var _emscripten_bind_btManifoldPoint_set_m_localPointB_1=Module["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"];var _emscripten_bind_btVector3_setZ_1=Module["_emscripten_bind_btVector3_setZ_1"]=asm["_emscripten_bind_btVector3_setZ_1"];var _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=Module["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"]=asm["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"];var _emscripten_bind_btQuaternion_setValue_4=Module["_emscripten_bind_btQuaternion_setValue_4"]=asm["_emscripten_bind_btQuaternion_setValue_4"];var _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=Module["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"];var _emscripten_bind_btQuaternion_setRotation_2=Module["_emscripten_bind_btQuaternion_setRotation_2"]=asm["_emscripten_bind_btQuaternion_setRotation_2"];var _emscripten_bind_btMotionState_setWorldTransform_1=Module["_emscripten_bind_btMotionState_setWorldTransform_1"]=asm["_emscripten_bind_btMotionState_setWorldTransform_1"];var _emscripten_bind_LocalShapeInfo___destroy___0=Module["_emscripten_bind_LocalShapeInfo___destroy___0"]=asm["_emscripten_bind_LocalShapeInfo___destroy___0"];var _emscripten_bind_btSoftBody_appendAnchor_4=Module["_emscripten_bind_btSoftBody_appendAnchor_4"]=asm["_emscripten_bind_btSoftBody_appendAnchor_4"];var _emscripten_bind_btPoint2PointConstraint_get_m_setting_0=Module["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"]=asm["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"];var _emscripten_bind_btQuadWord_setY_1=Module["_emscripten_bind_btQuadWord_setY_1"]=asm["_emscripten_bind_btQuadWord_setY_1"];var _emscripten_bind_btRigidBody_isKinematicObject_0=Module["_emscripten_bind_btRigidBody_isKinematicObject_0"]=asm["_emscripten_bind_btRigidBody_isKinematicObject_0"];var _emscripten_bind_ContactResultCallback_addSingleResult_7=Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"]=asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"];var _emscripten_bind_btVector4_rotate_2=Module["_emscripten_bind_btVector4_rotate_2"]=asm["_emscripten_bind_btVector4_rotate_2"];var _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=Module["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"]=asm["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"];var _emscripten_bind_btSliderConstraint_btSliderConstraint_5=Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"]=asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"];var _emscripten_bind_btConeTwistConstraint_setDamping_1=Module["_emscripten_bind_btConeTwistConstraint_setDamping_1"]=asm["_emscripten_bind_btConeTwistConstraint_setDamping_1"];var _emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=Module["_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0"];var _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btCylinderShape_setMargin_1=Module["_emscripten_bind_btCylinderShape_setMargin_1"]=asm["_emscripten_bind_btCylinderShape_setMargin_1"];var _emscripten_bind_btRaycastVehicle_rayCast_1=Module["_emscripten_bind_btRaycastVehicle_rayCast_1"]=asm["_emscripten_bind_btRaycastVehicle_rayCast_1"];var _emscripten_bind_btCollisionWorld___destroy___0=Module["_emscripten_bind_btCollisionWorld___destroy___0"]=asm["_emscripten_bind_btCollisionWorld___destroy___0"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"];var _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"];var _emscripten_bind_btBoxShape_btBoxShape_1=Module["_emscripten_bind_btBoxShape_btBoxShape_1"]=asm["_emscripten_bind_btBoxShape_btBoxShape_1"];var _emscripten_bind_btPersistentManifold_getBody1_0=Module["_emscripten_bind_btPersistentManifold_getBody1_0"]=asm["_emscripten_bind_btPersistentManifold_getBody1_0"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];var _emscripten_bind_RaycastInfo_set_m_isInContact_1=Module["_emscripten_bind_RaycastInfo_set_m_isInContact_1"]=asm["_emscripten_bind_RaycastInfo_set_m_isInContact_1"];var _emscripten_bind_btKinematicCharacterController_setGravity_1=Module["_emscripten_bind_btKinematicCharacterController_setGravity_1"]=asm["_emscripten_bind_btKinematicCharacterController_setGravity_1"];var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"]=asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"];var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"]=asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"];var _emscripten_bind_LocalShapeInfo_get_m_shapePart_0=Module["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"]=asm["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"];var _emscripten_bind_btWheelInfo_get_m_rollInfluence_0=Module["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"]=asm["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"];var _emscripten_bind_btRigidBody_activate_0=Module["_emscripten_bind_btRigidBody_activate_0"]=asm["_emscripten_bind_btRigidBody_activate_0"];var _emscripten_bind_btVector4_setValue_4=Module["_emscripten_bind_btVector4_setValue_4"]=asm["_emscripten_bind_btVector4_setValue_4"];var _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_tNodeArray_size_0=Module["_emscripten_bind_tNodeArray_size_0"]=asm["_emscripten_bind_tNodeArray_size_0"];var _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btQuaternion_getW_0=Module["_emscripten_bind_btQuaternion_getW_0"]=asm["_emscripten_bind_btQuaternion_getW_0"];var _emscripten_bind_btDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=Module["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"]=asm["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"];var _emscripten_bind_btSoftBody_appendFace_4=Module["_emscripten_bind_btSoftBody_appendFace_4"]=asm["_emscripten_bind_btSoftBody_appendFace_4"];var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"]=asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"];var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"];var _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_btBoxShape_getMargin_0=Module["_emscripten_bind_btBoxShape_getMargin_0"]=asm["_emscripten_bind_btBoxShape_getMargin_0"];var _emscripten_bind_btPairCachingGhostObject___destroy___0=Module["_emscripten_bind_btPairCachingGhostObject___destroy___0"]=asm["_emscripten_bind_btPairCachingGhostObject___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_setUserPointer_1=Module["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btPairCachingGhostObject_activate_0=Module["_emscripten_bind_btPairCachingGhostObject_activate_0"]=asm["_emscripten_bind_btPairCachingGhostObject_activate_0"];var _emscripten_bind_btPairCachingGhostObject_activate_1=Module["_emscripten_bind_btPairCachingGhostObject_activate_1"]=asm["_emscripten_bind_btPairCachingGhostObject_activate_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1"];var _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"]=asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"];var _emscripten_bind_btSoftBody_setUserPointer_1=Module["_emscripten_bind_btSoftBody_setUserPointer_1"]=asm["_emscripten_bind_btSoftBody_setUserPointer_1"];var _emscripten_bind_btSoftBody_setMass_2=Module["_emscripten_bind_btSoftBody_setMass_2"]=asm["_emscripten_bind_btSoftBody_setMass_2"];var _emscripten_bind_Config_get_kCHR_0=Module["_emscripten_bind_Config_get_kCHR_0"]=asm["_emscripten_bind_Config_get_kCHR_0"];var _emscripten_bind_btPairCachingGhostObject_forceActivationState_1=Module["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"]=asm["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"];var _emscripten_bind_btDefaultMotionState___destroy___0=Module["_emscripten_bind_btDefaultMotionState___destroy___0"]=asm["_emscripten_bind_btDefaultMotionState___destroy___0"];var _emscripten_bind_btDispatcherInfo_get_m_stepCount_0=Module["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"];var _emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=Module["_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1"];var _emscripten_bind_btQuadWord_setW_1=Module["_emscripten_bind_btQuadWord_setW_1"]=asm["_emscripten_bind_btQuadWord_setW_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"];var _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=Module["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"]=asm["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"];var _emscripten_bind_LocalShapeInfo_set_m_shapePart_1=Module["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"]=asm["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"];var _emscripten_bind_btRigidBody_setLinearFactor_1=Module["_emscripten_bind_btRigidBody_setLinearFactor_1"]=asm["_emscripten_bind_btRigidBody_setLinearFactor_1"];var _emscripten_bind_btCompoundShape_getChildShape_1=Module["_emscripten_bind_btCompoundShape_getChildShape_1"]=asm["_emscripten_bind_btCompoundShape_getChildShape_1"];var _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"];var _emscripten_bind_btRaycastVehicle_getUpAxis_0=Module["_emscripten_bind_btRaycastVehicle_getUpAxis_0"]=asm["_emscripten_bind_btRaycastVehicle_getUpAxis_0"];var _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=Module["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"]=asm["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"];var _emscripten_bind_btWheelInfo_get_m_engineForce_0=Module["_emscripten_bind_btWheelInfo_get_m_engineForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_engineForce_0"];var _emscripten_bind_Config_get_kSR_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSR_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSR_SPLT_CL_0"];var _emscripten_bind_btRaycastVehicle_setSteeringValue_2=Module["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"]=asm["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"];var _emscripten_bind_btPoint2PointConstraint___destroy___0=Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"]=asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];var _emscripten_bind_btSoftBody_getUserPointer_0=Module["_emscripten_bind_btSoftBody_getUserPointer_0"]=asm["_emscripten_bind_btSoftBody_getUserPointer_0"];var _emscripten_bind_btCollisionShape_setMargin_1=Module["_emscripten_bind_btCollisionShape_setMargin_1"]=asm["_emscripten_bind_btCollisionShape_setMargin_1"];var _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"];var _emscripten_bind_Config_get_kVCF_0=Module["_emscripten_bind_Config_get_kVCF_0"]=asm["_emscripten_bind_Config_get_kVCF_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0"];var _emscripten_bind_btRaycastVehicle_getRightAxis_0=Module["_emscripten_bind_btRaycastVehicle_getRightAxis_0"]=asm["_emscripten_bind_btRaycastVehicle_getRightAxis_0"];var _emscripten_bind_btContactSolverInfo_set_m_numIterations_1=Module["_emscripten_bind_btContactSolverInfo_set_m_numIterations_1"]=asm["_emscripten_bind_btContactSolverInfo_set_m_numIterations_1"];var _malloc=Module["_malloc"]=asm["_malloc"];var _emscripten_bind_btDispatcherInfo_get_m_useEpa_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"];var _emscripten_bind_btTransform_btTransform_2=Module["_emscripten_bind_btTransform_btTransform_2"]=asm["_emscripten_bind_btTransform_btTransform_2"];var _emscripten_bind_btTransform_btTransform_0=Module["_emscripten_bind_btTransform_btTransform_0"]=asm["_emscripten_bind_btTransform_btTransform_0"];var _emscripten_bind_btPairCachingGhostObject_getUserIndex_0=Module["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"];var _emscripten_bind_Config_set_kVC_1=Module["_emscripten_bind_Config_set_kVC_1"]=asm["_emscripten_bind_Config_set_kVC_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"];var _emscripten_bind_btVector3_op_sub_1=Module["_emscripten_bind_btVector3_op_sub_1"]=asm["_emscripten_bind_btVector3_op_sub_1"];var _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"];var _emscripten_bind_btQuaternion_length_0=Module["_emscripten_bind_btQuaternion_length_0"]=asm["_emscripten_bind_btQuaternion_length_0"];var _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=Module["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0"];var _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=Module["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"]=asm["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"];var _emscripten_bind_btHingeConstraint_getRigidBodyA_0=Module["_emscripten_bind_btHingeConstraint_getRigidBodyA_0"]=asm["_emscripten_bind_btHingeConstraint_getRigidBodyA_0"];var _emscripten_bind_btCollisionObject_setActivationState_1=Module["_emscripten_bind_btCollisionObject_setActivationState_1"]=asm["_emscripten_bind_btCollisionObject_setActivationState_1"];var _emscripten_bind_btQuaternion_angle_1=Module["_emscripten_bind_btQuaternion_angle_1"]=asm["_emscripten_bind_btQuaternion_angle_1"];var _emscripten_bind_btPersistentManifold___destroy___0=Module["_emscripten_bind_btPersistentManifold___destroy___0"]=asm["_emscripten_bind_btPersistentManifold___destroy___0"];var _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=Module["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"];var _emscripten_bind_btCylinderShapeZ___destroy___0=Module["_emscripten_bind_btCylinderShapeZ___destroy___0"]=asm["_emscripten_bind_btCylinderShapeZ___destroy___0"];var _emscripten_bind_btMatrix3x3___destroy___0=Module["_emscripten_bind_btMatrix3x3___destroy___0"]=asm["_emscripten_bind_btMatrix3x3___destroy___0"];var setTempRet0=Module["setTempRet0"]=asm["setTempRet0"];var _emscripten_bind_btQuaternion_angleShortestPath_1=Module["_emscripten_bind_btQuaternion_angleShortestPath_1"]=asm["_emscripten_bind_btQuaternion_angleShortestPath_1"];var _emscripten_bind_Config_set_kKHR_1=Module["_emscripten_bind_Config_set_kKHR_1"]=asm["_emscripten_bind_Config_set_kKHR_1"];var _emscripten_bind_ConvexResultCallback_hasHit_0=Module["_emscripten_bind_ConvexResultCallback_hasHit_0"]=asm["_emscripten_bind_ConvexResultCallback_hasHit_0"];var _emscripten_bind_btCollisionShape_calculateLocalInertia_2=Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];var _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_Config_set_kPR_1=Module["_emscripten_bind_Config_set_kPR_1"]=asm["_emscripten_bind_Config_set_kPR_1"];var _emscripten_bind_btCollisionWorld_convexSweepTest_5=Module["_emscripten_bind_btCollisionWorld_convexSweepTest_5"]=asm["_emscripten_bind_btCollisionWorld_convexSweepTest_5"];var _emscripten_bind_btSoftBody_set_m_materials_1=Module["_emscripten_bind_btSoftBody_set_m_materials_1"]=asm["_emscripten_bind_btSoftBody_set_m_materials_1"];var _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"];var _emscripten_bind_btVehicleRaycasterResult___destroy___0=Module["_emscripten_bind_btVehicleRaycasterResult___destroy___0"]=asm["_emscripten_bind_btVehicleRaycasterResult___destroy___0"];var _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"];var _emscripten_bind_btConstraintSetting_set_m_damping_1=Module["_emscripten_bind_btConstraintSetting_set_m_damping_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_damping_1"];var _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=Module["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"]=asm["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"];var _emscripten_bind_btRigidBody_setCcdMotionThreshold_1=Module["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"];var _emscripten_bind_btConvexHullShape_setMargin_1=Module["_emscripten_bind_btConvexHullShape_setMargin_1"]=asm["_emscripten_bind_btConvexHullShape_setMargin_1"];var _emscripten_bind_btRigidBody_applyForce_2=Module["_emscripten_bind_btRigidBody_applyForce_2"]=asm["_emscripten_bind_btRigidBody_applyForce_2"];var _emscripten_bind_btConeShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btConstraintSetting_set_m_tau_1=Module["_emscripten_bind_btConstraintSetting_set_m_tau_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_tau_1"];var _emscripten_bind_btConvexHullShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"];var _emscripten_bind_btQuaternion_op_div_1=Module["_emscripten_bind_btQuaternion_op_div_1"]=asm["_emscripten_bind_btQuaternion_op_div_1"];var ___uremdi3=Module["___uremdi3"]=asm["___uremdi3"];var _emscripten_bind_RaycastInfo_get_m_contactPointWS_0=Module["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"];var _emscripten_bind_btRigidBody_getTotalTorque_0=Module["_emscripten_bind_btRigidBody_getTotalTorque_0"]=asm["_emscripten_bind_btRigidBody_getTotalTorque_0"];var _emscripten_bind_btSoftBody_setCollisionFlags_1=Module["_emscripten_bind_btSoftBody_setCollisionFlags_1"]=asm["_emscripten_bind_btSoftBody_setCollisionFlags_1"];var _emscripten_bind_btSphereShape_calculateLocalInertia_2=Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];var _emscripten_bind_Config_set_maxvolume_1=Module["_emscripten_bind_Config_set_maxvolume_1"]=asm["_emscripten_bind_Config_set_maxvolume_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=Module["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"]=asm["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"];var _emscripten_bind_btSoftBody_setTotalMass_2=Module["_emscripten_bind_btSoftBody_setTotalMass_2"]=asm["_emscripten_bind_btSoftBody_setTotalMass_2"];var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];var _emscripten_bind_btGhostObject_setFriction_1=Module["_emscripten_bind_btGhostObject_setFriction_1"]=asm["_emscripten_bind_btGhostObject_setFriction_1"];var _emscripten_bind_btCollisionWorld_rayTest_3=Module["_emscripten_bind_btCollisionWorld_rayTest_3"]=asm["_emscripten_bind_btCollisionWorld_rayTest_3"];var stackRestore=Module["stackRestore"]=asm["stackRestore"];var _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"];var _emscripten_bind_btCylinderShapeZ_setMargin_1=Module["_emscripten_bind_btCylinderShapeZ_setMargin_1"]=asm["_emscripten_bind_btCylinderShapeZ_setMargin_1"];var _emscripten_bind_btRigidBody_setFriction_1=Module["_emscripten_bind_btRigidBody_setFriction_1"]=asm["_emscripten_bind_btRigidBody_setFriction_1"];var _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"];var _emscripten_bind_btGhostObject_setWorldTransform_1=Module["_emscripten_bind_btGhostObject_setWorldTransform_1"]=asm["_emscripten_bind_btGhostObject_setWorldTransform_1"];var _emscripten_bind_tMaterialArray_size_0=Module["_emscripten_bind_tMaterialArray_size_0"]=asm["_emscripten_bind_tMaterialArray_size_0"];var _emscripten_bind_RaycastInfo_set_m_hardPointWS_1=Module["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"];var _emscripten_bind_btManifoldPoint_getAppliedImpulse_0=Module["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"]=asm["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"];var _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"];var _emscripten_bind_btConvexHullShape___destroy___0=Module["_emscripten_bind_btConvexHullShape___destroy___0"]=asm["_emscripten_bind_btConvexHullShape___destroy___0"];var _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btDiscreteDynamicsWorld_addAction_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"];var _emscripten_bind_btVector4_setX_1=Module["_emscripten_bind_btVector4_setX_1"]=asm["_emscripten_bind_btVector4_setX_1"];var _emscripten_bind_btKinematicCharacterController_jump_0=Module["_emscripten_bind_btKinematicCharacterController_jump_0"]=asm["_emscripten_bind_btKinematicCharacterController_jump_0"];var _emscripten_bind_btCollisionObject_getUserPointer_0=Module["_emscripten_bind_btCollisionObject_getUserPointer_0"]=asm["_emscripten_bind_btCollisionObject_getUserPointer_0"];var _emscripten_bind_btWheelInfo_set_m_raycastInfo_1=Module["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"]=asm["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"];var _emscripten_bind_btCollisionWorld_contactTest_2=Module["_emscripten_bind_btCollisionWorld_contactTest_2"]=asm["_emscripten_bind_btCollisionWorld_contactTest_2"];var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"];var _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_btRigidBody_upcast_1=Module["_emscripten_bind_btRigidBody_upcast_1"]=asm["_emscripten_bind_btRigidBody_upcast_1"];var _emscripten_bind_btTransform_setOrigin_1=Module["_emscripten_bind_btTransform_setOrigin_1"]=asm["_emscripten_bind_btTransform_setOrigin_1"];var _emscripten_bind_btVector4_setZ_1=Module["_emscripten_bind_btVector4_setZ_1"]=asm["_emscripten_bind_btVector4_setZ_1"];var _emscripten_bind_btQuadWord_y_0=Module["_emscripten_bind_btQuadWord_y_0"]=asm["_emscripten_bind_btQuadWord_y_0"];var _emscripten_bind_btTransform_getBasis_0=Module["_emscripten_bind_btTransform_getBasis_0"]=asm["_emscripten_bind_btTransform_getBasis_0"];var _emscripten_bind_btPairCachingGhostObject_setFriction_1=Module["_emscripten_bind_btPairCachingGhostObject_setFriction_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setFriction_1"];var _emscripten_bind_btSoftBody_setRollingFriction_1=Module["_emscripten_bind_btSoftBody_setRollingFriction_1"]=asm["_emscripten_bind_btSoftBody_setRollingFriction_1"];var _emscripten_bind_Config_set_kSRHR_CL_1=Module["_emscripten_bind_Config_set_kSRHR_CL_1"]=asm["_emscripten_bind_Config_set_kSRHR_CL_1"];var _emscripten_bind_btCollisionDispatcher_getNumManifolds_0=Module["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"]=asm["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"];var _emscripten_bind_btVehicleRaycaster___destroy___0=Module["_emscripten_bind_btVehicleRaycaster___destroy___0"]=asm["_emscripten_bind_btVehicleRaycaster___destroy___0"];var _emscripten_bind_ClosestRayResultCallback___destroy___0=Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"]=asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];var _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"];var _emscripten_bind_btCylinderShapeX_setMargin_1=Module["_emscripten_bind_btCylinderShapeX_setMargin_1"]=asm["_emscripten_bind_btCylinderShapeX_setMargin_1"];var _emscripten_bind_btQuadWord_w_0=Module["_emscripten_bind_btQuadWord_w_0"]=asm["_emscripten_bind_btQuadWord_w_0"];var _emscripten_bind_Node___destroy___0=Module["_emscripten_bind_Node___destroy___0"]=asm["_emscripten_bind_Node___destroy___0"];var _emscripten_bind_btAxisSweep3___destroy___0=Module["_emscripten_bind_btAxisSweep3___destroy___0"]=asm["_emscripten_bind_btAxisSweep3___destroy___0"];var _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"];var _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"];var _emscripten_bind_btCompoundShape_setMargin_1=Module["_emscripten_bind_btCompoundShape_setMargin_1"]=asm["_emscripten_bind_btCompoundShape_setMargin_1"];var _emscripten_bind_btCompoundShape_getNumChildShapes_0=Module["_emscripten_bind_btCompoundShape_getNumChildShapes_0"]=asm["_emscripten_bind_btCompoundShape_getNumChildShapes_0"];var _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"];var _emscripten_bind_btCapsuleShape_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShape_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShape_setLocalScaling_1"];var _emscripten_bind_btGhostObject_btGhostObject_0=Module["_emscripten_bind_btGhostObject_btGhostObject_0"]=asm["_emscripten_bind_btGhostObject_btGhostObject_0"];var _emscripten_bind_btConeShape_btConeShape_2=Module["_emscripten_bind_btConeShape_btConeShape_2"]=asm["_emscripten_bind_btConeShape_btConeShape_2"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"];var _emscripten_bind_btManifoldPoint_set_m_localPointA_1=Module["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"];var _emscripten_bind_btCapsuleShapeX_setMargin_1=Module["_emscripten_bind_btCapsuleShapeX_setMargin_1"]=asm["_emscripten_bind_btCapsuleShapeX_setMargin_1"];var _emscripten_bind_Config_set_kMT_1=Module["_emscripten_bind_Config_set_kMT_1"]=asm["_emscripten_bind_Config_set_kMT_1"];var _emscripten_bind_btVector3_dot_1=Module["_emscripten_bind_btVector3_dot_1"]=asm["_emscripten_bind_btVector3_dot_1"];var _emscripten_bind_btGhostObject_getUserPointer_0=Module["_emscripten_bind_btGhostObject_getUserPointer_0"]=asm["_emscripten_bind_btGhostObject_getUserPointer_0"];var _emscripten_bind_btVector4_op_add_1=Module["_emscripten_bind_btVector4_op_add_1"]=asm["_emscripten_bind_btVector4_op_add_1"];var _emscripten_bind_btWheelInfo___destroy___0=Module["_emscripten_bind_btWheelInfo___destroy___0"]=asm["_emscripten_bind_btWheelInfo___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_4=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"];var _emscripten_bind_btTransform_setRotation_1=Module["_emscripten_bind_btTransform_setRotation_1"]=asm["_emscripten_bind_btTransform_setRotation_1"];var _emscripten_bind_Config_set_kSHR_1=Module["_emscripten_bind_Config_set_kSHR_1"]=asm["_emscripten_bind_Config_set_kSHR_1"];var _emscripten_bind_btPoint2PointConstraint_enableFeedback_1=Module["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"]=asm["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_2=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_3=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];var _emscripten_bind_btDynamicsWorld___destroy___0=Module["_emscripten_bind_btDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btDynamicsWorld___destroy___0"];var _emscripten_bind_btVector3_setY_1=Module["_emscripten_bind_btVector3_setY_1"]=asm["_emscripten_bind_btVector3_setY_1"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_4=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_5=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];var _emscripten_bind_btQuadWord_setX_1=Module["_emscripten_bind_btQuadWord_setX_1"]=asm["_emscripten_bind_btQuadWord_setX_1"];var _emscripten_bind_tMaterialArray___destroy___0=Module["_emscripten_bind_tMaterialArray___destroy___0"]=asm["_emscripten_bind_tMaterialArray___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"];var _emscripten_bind_Config_set_piterations_1=Module["_emscripten_bind_Config_set_piterations_1"]=asm["_emscripten_bind_Config_set_piterations_1"];var _emscripten_bind_btOverlappingPairCache___destroy___0=Module["_emscripten_bind_btOverlappingPairCache___destroy___0"]=asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];var _emscripten_bind_btRigidBody_setUserIndex_1=Module["_emscripten_bind_btRigidBody_setUserIndex_1"]=asm["_emscripten_bind_btRigidBody_setUserIndex_1"];var _emscripten_bind_Material_get_m_kAST_0=Module["_emscripten_bind_Material_get_m_kAST_0"]=asm["_emscripten_bind_Material_get_m_kAST_0"];var _emscripten_bind_btConstraintSetting___destroy___0=Module["_emscripten_bind_btConstraintSetting___destroy___0"]=asm["_emscripten_bind_btConstraintSetting___destroy___0"];var _emscripten_bind_btWheelInfo_btWheelInfo_1=Module["_emscripten_bind_btWheelInfo_btWheelInfo_1"]=asm["_emscripten_bind_btWheelInfo_btWheelInfo_1"];var _emscripten_bind_RayResultCallback___destroy___0=Module["_emscripten_bind_RayResultCallback___destroy___0"]=asm["_emscripten_bind_RayResultCallback___destroy___0"];var _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=Module["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"];var _emscripten_bind_btPersistentManifold_getBody0_0=Module["_emscripten_bind_btPersistentManifold_getBody0_0"]=asm["_emscripten_bind_btPersistentManifold_getBody0_0"];var _emscripten_bind_btConeShapeX_btConeShapeX_2=Module["_emscripten_bind_btConeShapeX_btConeShapeX_2"]=asm["_emscripten_bind_btConeShapeX_btConeShapeX_2"];var _emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"];var _emscripten_bind_btConeTwistConstraint_enableFeedback_1=Module["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"]=asm["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"];var _emscripten_bind_btRaycastVehicle_setPitchControl_1=Module["_emscripten_bind_btRaycastVehicle_setPitchControl_1"]=asm["_emscripten_bind_btRaycastVehicle_setPitchControl_1"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"];var _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"];var _emscripten_bind_Config_get_piterations_0=Module["_emscripten_bind_Config_get_piterations_0"]=asm["_emscripten_bind_Config_get_piterations_0"];var _emscripten_bind_btSoftBody_translate_1=Module["_emscripten_bind_btSoftBody_translate_1"]=asm["_emscripten_bind_btSoftBody_translate_1"];var _emscripten_bind_btSliderConstraint_setUpperLinLimit_1=Module["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"];var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"]=asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];var _emscripten_bind_btVector3_op_mul_1=Module["_emscripten_bind_btVector3_op_mul_1"]=asm["_emscripten_bind_btVector3_op_mul_1"];var _emscripten_bind_btConcaveShape___destroy___0=Module["_emscripten_bind_btConcaveShape___destroy___0"]=asm["_emscripten_bind_btConcaveShape___destroy___0"];var _emscripten_bind_Config_get_kSK_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSK_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSK_SPLT_CL_0"];var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"]=asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];var _emscripten_bind_btQuaternion_x_0=Module["_emscripten_bind_btQuaternion_x_0"]=asm["_emscripten_bind_btQuaternion_x_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=Module["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"];var _emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1=Module["_emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1"]=asm["_emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1"];var _emscripten_bind_Config_set_timescale_1=Module["_emscripten_bind_Config_set_timescale_1"]=asm["_emscripten_bind_Config_set_timescale_1"];var _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"];var _emscripten_bind_btConcaveShape_setLocalScaling_1=Module["_emscripten_bind_btConcaveShape_setLocalScaling_1"]=asm["_emscripten_bind_btConcaveShape_setLocalScaling_1"];var _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btConeShapeX_setLocalScaling_1=Module["_emscripten_bind_btConeShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btConeShapeX_setLocalScaling_1"];var _emscripten_bind_btSoftBody_appendLink_4=Module["_emscripten_bind_btSoftBody_appendLink_4"]=asm["_emscripten_bind_btSoftBody_appendLink_4"];var _emscripten_bind_btQuaternion_z_0=Module["_emscripten_bind_btQuaternion_z_0"]=asm["_emscripten_bind_btQuaternion_z_0"];var _emscripten_bind_btConvexHullShape_btConvexHullShape_0=Module["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"]=asm["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"];var _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"];var _emscripten_bind_btConstraintSetting_get_m_damping_0=Module["_emscripten_bind_btConstraintSetting_get_m_damping_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_damping_0"];var _emscripten_bind_btVector4_op_mul_1=Module["_emscripten_bind_btVector4_op_mul_1"]=asm["_emscripten_bind_btVector4_op_mul_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"];var _emscripten_bind_Config_get_kLF_0=Module["_emscripten_bind_Config_get_kLF_0"]=asm["_emscripten_bind_Config_get_kLF_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_btGhostObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"];var _emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=Module["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"];var _emscripten_bind_btCollisionWorld_getBroadphase_0=Module["_emscripten_bind_btCollisionWorld_getBroadphase_0"]=asm["_emscripten_bind_btCollisionWorld_getBroadphase_0"];var _emscripten_bind_btCylinderShape_btCylinderShape_1=Module["_emscripten_bind_btCylinderShape_btCylinderShape_1"]=asm["_emscripten_bind_btCylinderShape_btCylinderShape_1"];var _emscripten_bind_btDispatcherInfo_set_m_stepCount_1=Module["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"];var _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"]=asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"];var _emscripten_bind_btKinematicCharacterController_updateAction_2=Module["_emscripten_bind_btKinematicCharacterController_updateAction_2"]=asm["_emscripten_bind_btKinematicCharacterController_updateAction_2"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];var _emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=Module["_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];var _emscripten_bind_Config_get_viterations_0=Module["_emscripten_bind_Config_get_viterations_0"]=asm["_emscripten_bind_Config_get_viterations_0"];var _emscripten_bind_btKinematicCharacterController_canJump_0=Module["_emscripten_bind_btKinematicCharacterController_canJump_0"]=asm["_emscripten_bind_btKinematicCharacterController_canJump_0"];var _emscripten_bind_btSoftBodyArray_at_1=Module["_emscripten_bind_btSoftBodyArray_at_1"]=asm["_emscripten_bind_btSoftBodyArray_at_1"];var _emscripten_bind_btPairCachingGhostObject_setUserIndex_1=Module["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"];var _emscripten_bind_btRigidBody_isActive_0=Module["_emscripten_bind_btRigidBody_isActive_0"]=asm["_emscripten_bind_btRigidBody_isActive_0"];var _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=Module["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"]=asm["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"];var _emscripten_bind_btSoftBody_transform_1=Module["_emscripten_bind_btSoftBody_transform_1"]=asm["_emscripten_bind_btSoftBody_transform_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btCylinderShape_setLocalScaling_1=Module["_emscripten_bind_btCylinderShape_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShape_setLocalScaling_1"];var _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=Module["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"];var _emscripten_bind_btCompoundShape_calculateLocalInertia_2=Module["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"];var _emscripten_bind_btCollisionWorld_getDispatchInfo_0=Module["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"];var _emscripten_bind_btRigidBody_setCollisionShape_1=Module["_emscripten_bind_btRigidBody_setCollisionShape_1"]=asm["_emscripten_bind_btRigidBody_setCollisionShape_1"];var _emscripten_bind_btSoftBody_appendTetra_5=Module["_emscripten_bind_btSoftBody_appendTetra_5"]=asm["_emscripten_bind_btSoftBody_appendTetra_5"];var _emscripten_bind_btConeShapeX___destroy___0=Module["_emscripten_bind_btConeShapeX___destroy___0"]=asm["_emscripten_bind_btConeShapeX___destroy___0"];var _emscripten_bind_btCollisionObject_getCollisionFlags_0=Module["_emscripten_bind_btCollisionObject_getCollisionFlags_0"]=asm["_emscripten_bind_btCollisionObject_getCollisionFlags_0"];var _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=Module["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"];var _emscripten_bind_btConeTwistConstraint_enableMotor_1=Module["_emscripten_bind_btConeTwistConstraint_enableMotor_1"]=asm["_emscripten_bind_btConeTwistConstraint_enableMotor_1"];var _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=Module["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"]=asm["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"];var _emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0=Module["_emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0"]=asm["_emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0"];var _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"];var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"]=asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];var _emscripten_bind_btPairCachingGhostObject_setRestitution_1=Module["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"];var _emscripten_bind_Config_set_kAHR_1=Module["_emscripten_bind_Config_set_kAHR_1"]=asm["_emscripten_bind_Config_set_kAHR_1"];var _emscripten_bind_btHeightfieldTerrainShape_getMargin_0=Module["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"]=asm["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"];var _emscripten_bind_ConvexResultCallback___destroy___0=Module["_emscripten_bind_ConvexResultCallback___destroy___0"]=asm["_emscripten_bind_ConvexResultCallback___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"];var _emscripten_bind_btQuaternion_getAngle_0=Module["_emscripten_bind_btQuaternion_getAngle_0"]=asm["_emscripten_bind_btQuaternion_getAngle_0"];var _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"];var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"]=asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"];var _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"];var _emscripten_bind_btCompoundShape___destroy___0=Module["_emscripten_bind_btCompoundShape___destroy___0"]=asm["_emscripten_bind_btCompoundShape___destroy___0"];var _emscripten_bind_btHingeConstraint_setMotorTarget_2=Module["_emscripten_bind_btHingeConstraint_setMotorTarget_2"]=asm["_emscripten_bind_btHingeConstraint_setMotorTarget_2"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"];var _emscripten_bind_LocalConvexResult___destroy___0=Module["_emscripten_bind_LocalConvexResult___destroy___0"]=asm["_emscripten_bind_LocalConvexResult___destroy___0"];var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"]=asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];var setThrew=Module["setThrew"]=asm["setThrew"];var _emscripten_bind_btSoftBodyHelpers_CreateRope_5=Module["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"];var _emscripten_bind_btRaycastVehicle___destroy___0=Module["_emscripten_bind_btRaycastVehicle___destroy___0"]=asm["_emscripten_bind_btRaycastVehicle___destroy___0"];var _emscripten_bind_btCollisionWorld_addCollisionObject_3=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_3"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_3"];var _emscripten_bind_btRigidBody_getCollisionFlags_0=Module["_emscripten_bind_btRigidBody_getCollisionFlags_0"]=asm["_emscripten_bind_btRigidBody_getCollisionFlags_0"];var _emscripten_bind_btCollisionShape_setLocalScaling_1=Module["_emscripten_bind_btCollisionShape_setLocalScaling_1"]=asm["_emscripten_bind_btCollisionShape_setLocalScaling_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"];var _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"];var _emscripten_bind_btMatrix3x3_setEulerZYX_3=Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"]=asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];var _emscripten_bind_btSoftBody_getTotalMass_0=Module["_emscripten_bind_btSoftBody_getTotalMass_0"]=asm["_emscripten_bind_btSoftBody_getTotalMass_0"];var _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=Module["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"];var _emscripten_bind_btRigidBody_getUserPointer_0=Module["_emscripten_bind_btRigidBody_getUserPointer_0"]=asm["_emscripten_bind_btRigidBody_getUserPointer_0"];var _emscripten_bind_Config_get_kSHR_0=Module["_emscripten_bind_Config_get_kSHR_0"]=asm["_emscripten_bind_Config_get_kSHR_0"];var _emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=Module["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"];var _emscripten_bind_btRigidBody_setMotionState_1=Module["_emscripten_bind_btRigidBody_setMotionState_1"]=asm["_emscripten_bind_btRigidBody_setMotionState_1"];var _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_btCollisionWorld_getDispatcher_0=Module["_emscripten_bind_btCollisionWorld_getDispatcher_0"]=asm["_emscripten_bind_btCollisionWorld_getDispatcher_0"];var _emscripten_bind_btVector4_dot_1=Module["_emscripten_bind_btVector4_dot_1"]=asm["_emscripten_bind_btVector4_dot_1"];var _emscripten_bind_btSoftBody_forceActivationState_1=Module["_emscripten_bind_btSoftBody_forceActivationState_1"]=asm["_emscripten_bind_btSoftBody_forceActivationState_1"];var _emscripten_bind_btCollisionObject_setRollingFriction_1=Module["_emscripten_bind_btCollisionObject_setRollingFriction_1"]=asm["_emscripten_bind_btCollisionObject_setRollingFriction_1"];var _emscripten_bind_Config_set_kSK_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSK_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSK_SPLT_CL_1"];var _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btVehicleRaycaster_castRay_3=Module["_emscripten_bind_btVehicleRaycaster_castRay_3"]=asm["_emscripten_bind_btVehicleRaycaster_castRay_3"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _emscripten_bind_btCylinderShapeX_getMargin_0=Module["_emscripten_bind_btCylinderShapeX_getMargin_0"]=asm["_emscripten_bind_btCylinderShapeX_getMargin_0"];var _emscripten_bind_btRigidBody_setDamping_2=Module["_emscripten_bind_btRigidBody_setDamping_2"]=asm["_emscripten_bind_btRigidBody_setDamping_2"];var _emscripten_bind_btDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btGhostObject_setCollisionFlags_1=Module["_emscripten_bind_btGhostObject_setCollisionFlags_1"]=asm["_emscripten_bind_btGhostObject_setCollisionFlags_1"];var _emscripten_bind_btMatrix3x3_getRotation_1=Module["_emscripten_bind_btMatrix3x3_getRotation_1"]=asm["_emscripten_bind_btMatrix3x3_getRotation_1"];var _emscripten_bind_btWheelInfo_set_m_engineForce_1=Module["_emscripten_bind_btWheelInfo_set_m_engineForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_engineForce_1"];var _emscripten_bind_btRigidBody_getBroadphaseProxy_0=Module["_emscripten_bind_btRigidBody_getBroadphaseProxy_0"]=asm["_emscripten_bind_btRigidBody_getBroadphaseProxy_0"];var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"];var _emscripten_bind_btPersistentManifold_getNumContacts_0=Module["_emscripten_bind_btPersistentManifold_getNumContacts_0"]=asm["_emscripten_bind_btPersistentManifold_getNumContacts_0"];var _emscripten_bind_btCylinderShapeX_setLocalScaling_1=Module["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"];var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"]=asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];var _emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=Module["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"]=asm["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0"];var _emscripten_bind_btOverlappingPairCallback___destroy___0=Module["_emscripten_bind_btOverlappingPairCallback___destroy___0"]=asm["_emscripten_bind_btOverlappingPairCallback___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0=Module["_emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0"]=asm["_emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0"];var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"];var _emscripten_bind_tNodeArray___destroy___0=Module["_emscripten_bind_tNodeArray___destroy___0"]=asm["_emscripten_bind_tNodeArray___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btHingeConstraint_enableAngularMotor_3=Module["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"]=asm["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"];var _emscripten_bind_btRigidBody_setContactProcessingThreshold_1=Module["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"];var _emscripten_bind_btRigidBody_getLinearVelocity_0=Module["_emscripten_bind_btRigidBody_getLinearVelocity_0"]=asm["_emscripten_bind_btRigidBody_getLinearVelocity_0"];var _emscripten_bind_btRigidBody_applyImpulse_2=Module["_emscripten_bind_btRigidBody_applyImpulse_2"]=asm["_emscripten_bind_btRigidBody_applyImpulse_2"];var _emscripten_bind_btConcaveShape_calculateLocalInertia_2=Module["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"];var _emscripten_bind_btHingeConstraint_getRigidBodyB_0=Module["_emscripten_bind_btHingeConstraint_getRigidBodyB_0"]=asm["_emscripten_bind_btHingeConstraint_getRigidBodyB_0"];var _emscripten_bind_RaycastInfo_get_m_groundObject_0=Module["_emscripten_bind_RaycastInfo_get_m_groundObject_0"]=asm["_emscripten_bind_RaycastInfo_get_m_groundObject_0"];var _emscripten_bind_btRigidBody_setWorldTransform_1=Module["_emscripten_bind_btRigidBody_setWorldTransform_1"]=asm["_emscripten_bind_btRigidBody_setWorldTransform_1"];var _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=Module["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"];var _emscripten_bind_btRigidBody_setAngularVelocity_1=Module["_emscripten_bind_btRigidBody_setAngularVelocity_1"]=asm["_emscripten_bind_btRigidBody_setAngularVelocity_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"];var _emscripten_bind_Config_get_kDP_0=Module["_emscripten_bind_Config_get_kDP_0"]=asm["_emscripten_bind_Config_get_kDP_0"];var _emscripten_bind_btConvexShape_setLocalScaling_1=Module["_emscripten_bind_btConvexShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexShape_setLocalScaling_1"];var _emscripten_bind_Config_get_collisions_0=Module["_emscripten_bind_Config_get_collisions_0"]=asm["_emscripten_bind_Config_get_collisions_0"];var _emscripten_bind_Node_get_m_n_0=Module["_emscripten_bind_Node_get_m_n_0"]=asm["_emscripten_bind_Node_get_m_n_0"];var _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"];var stackSave=Module["stackSave"]=asm["stackSave"];var ___udivdi3=Module["___udivdi3"]=asm["___udivdi3"];var _emscripten_bind_btRaycastVehicle_setUserConstraintId_1=Module["_emscripten_bind_btRaycastVehicle_setUserConstraintId_1"]=asm["_emscripten_bind_btRaycastVehicle_setUserConstraintId_1"];var _free=Module["_free"]=asm["_free"];var _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"];var _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_RayResultCallback_hasHit_0=Module["_emscripten_bind_RayResultCallback_hasHit_0"]=asm["_emscripten_bind_RayResultCallback_hasHit_0"];var _emscripten_bind_btRigidBody_applyLocalTorque_1=Module["_emscripten_bind_btRigidBody_applyLocalTorque_1"]=asm["_emscripten_bind_btRigidBody_applyLocalTorque_1"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _emscripten_bind_Config___destroy___0=Module["_emscripten_bind_Config___destroy___0"]=asm["_emscripten_bind_Config___destroy___0"];var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"];var _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"];var _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=Module["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"]=asm["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"];var _emscripten_bind_btQuaternion_normalize_0=Module["_emscripten_bind_btQuaternion_normalize_0"]=asm["_emscripten_bind_btQuaternion_normalize_0"];var _emscripten_bind_btQuaternion___destroy___0=Module["_emscripten_bind_btQuaternion___destroy___0"]=asm["_emscripten_bind_btQuaternion___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_frictionSlip_0=Module["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"]=asm["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"];var _emscripten_bind_btConeShapeZ_setLocalScaling_1=Module["_emscripten_bind_btConeShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btConeShapeZ_setLocalScaling_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"];var _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=Module["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"];var _emscripten_bind_btRaycastVehicle_getNumWheels_0=Module["_emscripten_bind_btRaycastVehicle_getNumWheels_0"]=asm["_emscripten_bind_btRaycastVehicle_getNumWheels_0"];var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"];var _emscripten_bind_Material_set_m_kAST_1=Module["_emscripten_bind_Material_set_m_kAST_1"]=asm["_emscripten_bind_Material_set_m_kAST_1"];var _emscripten_bind_btGhostObject_setRollingFriction_1=Module["_emscripten_bind_btGhostObject_setRollingFriction_1"]=asm["_emscripten_bind_btGhostObject_setRollingFriction_1"];var _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=Module["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"]=asm["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"];var ___muldi3=Module["___muldi3"]=asm["___muldi3"];var _emscripten_bind_btSoftBodyArray___destroy___0=Module["_emscripten_bind_btSoftBodyArray___destroy___0"]=asm["_emscripten_bind_btSoftBodyArray___destroy___0"];var _emscripten_bind_btCompoundShape_btCompoundShape_0=Module["_emscripten_bind_btCompoundShape_btCompoundShape_0"]=asm["_emscripten_bind_btCompoundShape_btCompoundShape_0"];var _emscripten_bind_btCompoundShape_btCompoundShape_1=Module["_emscripten_bind_btCompoundShape_btCompoundShape_1"]=asm["_emscripten_bind_btCompoundShape_btCompoundShape_1"];var _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=Module["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"]=asm["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"];var _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=Module["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"]=asm["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"];var __GLOBAL__sub_I_btQuickprof_cpp=Module["__GLOBAL__sub_I_btQuickprof_cpp"]=asm["__GLOBAL__sub_I_btQuickprof_cpp"];var _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=Module["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"];var _emscripten_bind_btSoftBody_checkLink_2=Module["_emscripten_bind_btSoftBody_checkLink_2"]=asm["_emscripten_bind_btSoftBody_checkLink_2"];var _emscripten_bind_btSoftBody_getCollisionShape_0=Module["_emscripten_bind_btSoftBody_getCollisionShape_0"]=asm["_emscripten_bind_btSoftBody_getCollisionShape_0"];var _emscripten_bind_Config_get_kDG_0=Module["_emscripten_bind_Config_get_kDG_0"]=asm["_emscripten_bind_Config_get_kDG_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"];var _emscripten_bind_btDefaultVehicleRaycaster___destroy___0=Module["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"]=asm["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=Module["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"];var _emscripten_bind_Node_get_m_x_0=Module["_emscripten_bind_Node_get_m_x_0"]=asm["_emscripten_bind_Node_get_m_x_0"];var _emscripten_bind_btCollisionObject_getWorldTransform_0=Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"]=asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];var _emscripten_bind_ClosestRayResultCallback_hasHit_0=Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"]=asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];var _emscripten_bind_btCompoundShape_addChildShape_2=Module["_emscripten_bind_btCompoundShape_addChildShape_2"]=asm["_emscripten_bind_btCompoundShape_addChildShape_2"];var _emscripten_bind_btDispatcher___destroy___0=Module["_emscripten_bind_btDispatcher___destroy___0"]=asm["_emscripten_bind_btDispatcher___destroy___0"];var _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"];var _llvm_bswap_i16=Module["_llvm_bswap_i16"]=asm["_llvm_bswap_i16"];var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0=Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];var _emscripten_bind_btConvexShape___destroy___0=Module["_emscripten_bind_btConvexShape___destroy___0"]=asm["_emscripten_bind_btConvexShape___destroy___0"];var _emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1=Module["_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1"]=asm["_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1"];var _emscripten_bind_btWheelInfo_set_m_brake_1=Module["_emscripten_bind_btWheelInfo_set_m_brake_1"]=asm["_emscripten_bind_btWheelInfo_set_m_brake_1"];var _memmove=Module["_memmove"]=asm["_memmove"];var _emscripten_bind_btWheelInfo_set_m_worldTransform_1=Module["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"]=asm["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"];var _emscripten_bind_btCapsuleShapeX_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"];var _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=Module["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"];var _emscripten_bind_btSoftBody_getCollisionFlags_0=Module["_emscripten_bind_btSoftBody_getCollisionFlags_0"]=asm["_emscripten_bind_btSoftBody_getCollisionFlags_0"];var _emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0=Module["_emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0"]=asm["_emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0"];var _emscripten_bind_btCollisionObject_setRestitution_1=Module["_emscripten_bind_btCollisionObject_setRestitution_1"]=asm["_emscripten_bind_btCollisionObject_setRestitution_1"];var _emscripten_bind_btRigidBody_applyCentralForce_1=Module["_emscripten_bind_btRigidBody_applyCentralForce_1"]=asm["_emscripten_bind_btRigidBody_applyCentralForce_1"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"];var _emscripten_bind_LocalConvexResult_get_m_hitFraction_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"];var _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btQuaternion_w_0=Module["_emscripten_bind_btQuaternion_w_0"]=asm["_emscripten_bind_btQuaternion_w_0"];var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btTransform_getRotation_0=Module["_emscripten_bind_btTransform_getRotation_0"]=asm["_emscripten_bind_btTransform_getRotation_0"];var _emscripten_bind_Config_set_kSKHR_CL_1=Module["_emscripten_bind_Config_set_kSKHR_CL_1"]=asm["_emscripten_bind_Config_set_kSKHR_CL_1"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_6=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_7=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"];var _emscripten_bind_btCapsuleShapeZ_getMargin_0=Module["_emscripten_bind_btCapsuleShapeZ_getMargin_0"]=asm["_emscripten_bind_btCapsuleShapeZ_getMargin_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_5=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_3=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"];var _emscripten_bind_btSoftBody_setWorldTransform_1=Module["_emscripten_bind_btSoftBody_setWorldTransform_1"]=asm["_emscripten_bind_btSoftBody_setWorldTransform_1"];var _emscripten_bind_btBoxShape_setMargin_1=Module["_emscripten_bind_btBoxShape_setMargin_1"]=asm["_emscripten_bind_btBoxShape_setMargin_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0"];var _emscripten_bind_btTypedConstraint___destroy___0=Module["_emscripten_bind_btTypedConstraint___destroy___0"]=asm["_emscripten_bind_btTypedConstraint___destroy___0"];var _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=Module["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"]=asm["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];var _emscripten_bind_Config_set_collisions_1=Module["_emscripten_bind_Config_set_collisions_1"]=asm["_emscripten_bind_Config_set_collisions_1"];var _emscripten_bind_btQuaternion_btQuaternion_4=Module["_emscripten_bind_btQuaternion_btQuaternion_4"]=asm["_emscripten_bind_btQuaternion_btQuaternion_4"];var _emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btWheelInfo_set_m_rotation_1=Module["_emscripten_bind_btWheelInfo_set_m_rotation_1"]=asm["_emscripten_bind_btWheelInfo_set_m_rotation_1"];var _emscripten_bind_btSphereShape_btSphereShape_1=Module["_emscripten_bind_btSphereShape_btSphereShape_1"]=asm["_emscripten_bind_btSphereShape_btSphereShape_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"];var _emscripten_bind_btQuaternion_y_0=Module["_emscripten_bind_btQuaternion_y_0"]=asm["_emscripten_bind_btQuaternion_y_0"];var _emscripten_bind_btCollisionWorld_addCollisionObject_1=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_1"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_1"];var _emscripten_bind_btCollisionWorld_addCollisionObject_2=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_2"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_2"];var _emscripten_bind_btCompoundShape_setLocalScaling_1=Module["_emscripten_bind_btCompoundShape_setLocalScaling_1"]=asm["_emscripten_bind_btCompoundShape_setLocalScaling_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1"];var _emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=Module["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"];var _emscripten_bind_RaycastInfo_get_m_isInContact_0=Module["_emscripten_bind_RaycastInfo_get_m_isInContact_0"]=asm["_emscripten_bind_RaycastInfo_get_m_isInContact_0"];var _emscripten_bind_btWheelInfo_get_m_skidInfo_0=Module["_emscripten_bind_btWheelInfo_get_m_skidInfo_0"]=asm["_emscripten_bind_btWheelInfo_get_m_skidInfo_0"];var _emscripten_bind_btHeightfieldTerrainShape_setMargin_1=Module["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"]=asm["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btCapsuleShape_setMargin_1=Module["_emscripten_bind_btCapsuleShape_setMargin_1"]=asm["_emscripten_bind_btCapsuleShape_setMargin_1"];var _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=Module["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"]=asm["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"];var _emscripten_bind_btDynamicsWorld_contactTest_2=Module["_emscripten_bind_btDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btDynamicsWorld_contactTest_2"];var _emscripten_bind_btCollisionObject_setUserPointer_1=Module["_emscripten_bind_btCollisionObject_setUserPointer_1"]=asm["_emscripten_bind_btCollisionObject_setUserPointer_1"];var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"]=asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];var _emscripten_bind_btActionInterface___destroy___0=Module["_emscripten_bind_btActionInterface___destroy___0"]=asm["_emscripten_bind_btActionInterface___destroy___0"];var _emscripten_bind_btSoftBody_generateClusters_2=Module["_emscripten_bind_btSoftBody_generateClusters_2"]=asm["_emscripten_bind_btSoftBody_generateClusters_2"];var _emscripten_bind_btDefaultMotionState_setWorldTransform_1=Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"]=asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];var _emscripten_bind_btSoftBody_generateClusters_1=Module["_emscripten_bind_btSoftBody_generateClusters_1"]=asm["_emscripten_bind_btSoftBody_generateClusters_1"];var _emscripten_bind_RayResultCallback_get_m_collisionObject_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];var _emscripten_bind_btPoint2PointConstraint_getPivotInA_0=Module["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"];var _emscripten_bind_Config_get_kAHR_0=Module["_emscripten_bind_Config_get_kAHR_0"]=asm["_emscripten_bind_Config_get_kAHR_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"];var _emscripten_bind_btCylinderShape_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1"];var _emscripten_bind_ClosestConvexResultCallback___destroy___0=Module["_emscripten_bind_ClosestConvexResultCallback___destroy___0"]=asm["_emscripten_bind_ClosestConvexResultCallback___destroy___0"];var _emscripten_bind_btQuaternion_normalized_0=Module["_emscripten_bind_btQuaternion_normalized_0"]=asm["_emscripten_bind_btQuaternion_normalized_0"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"];var ___cxa_can_catch=Module["___cxa_can_catch"]=asm["___cxa_can_catch"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btCollisionObject_setFriction_1=Module["_emscripten_bind_btCollisionObject_setFriction_1"]=asm["_emscripten_bind_btCollisionObject_setFriction_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"];var _emscripten_bind_btVector3_rotate_2=Module["_emscripten_bind_btVector3_rotate_2"]=asm["_emscripten_bind_btVector3_rotate_2"];var _emscripten_bind_btHeightfieldTerrainShape___destroy___0=Module["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"]=asm["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"]=asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"];var _emscripten_bind_Config_get_kVC_0=Module["_emscripten_bind_Config_get_kVC_0"]=asm["_emscripten_bind_Config_get_kVC_0"];var _emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1=Module["_emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1"]=asm["_emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1"];var _emscripten_bind_btQuaternion_op_mulq_1=Module["_emscripten_bind_btQuaternion_op_mulq_1"]=asm["_emscripten_bind_btQuaternion_op_mulq_1"];var _emscripten_bind_btPairCachingGhostObject_setActivationState_1=Module["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1"];var _emscripten_bind_Material_get_m_kVST_0=Module["_emscripten_bind_Material_get_m_kVST_0"]=asm["_emscripten_bind_Material_get_m_kVST_0"];var _emscripten_bind_Config_set_kVCF_1=Module["_emscripten_bind_Config_set_kVCF_1"]=asm["_emscripten_bind_Config_set_kVCF_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"];var _emscripten_bind_btGhostObject_getUserIndex_0=Module["_emscripten_bind_btGhostObject_getUserIndex_0"]=asm["_emscripten_bind_btGhostObject_getUserIndex_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"];var _emscripten_bind_btWheelInfo_set_m_deltaRotation_1=Module["_emscripten_bind_btWheelInfo_set_m_deltaRotation_1"]=asm["_emscripten_bind_btWheelInfo_set_m_deltaRotation_1"];var _emscripten_bind_btVector3___destroy___0=Module["_emscripten_bind_btVector3___destroy___0"]=asm["_emscripten_bind_btVector3___destroy___0"];var _emscripten_bind_RaycastInfo___destroy___0=Module["_emscripten_bind_RaycastInfo___destroy___0"]=asm["_emscripten_bind_RaycastInfo___destroy___0"];var _emscripten_bind_btRigidBody_setAngularFactor_1=Module["_emscripten_bind_btRigidBody_setAngularFactor_1"]=asm["_emscripten_bind_btRigidBody_setAngularFactor_1"];var _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btConeShapeZ_btConeShapeZ_2=Module["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"]=asm["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"];var _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=Module["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"]=asm["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"];var _emscripten_bind_btMotionState_getWorldTransform_1=Module["_emscripten_bind_btMotionState_getWorldTransform_1"]=asm["_emscripten_bind_btMotionState_getWorldTransform_1"];var _emscripten_bind_btDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1=Module["_emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1"]=asm["_emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_Config_get_kMT_0=Module["_emscripten_bind_Config_get_kMT_0"]=asm["_emscripten_bind_Config_get_kMT_0"];var _emscripten_bind_btDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btSphereShape_getMargin_0=Module["_emscripten_bind_btSphereShape_getMargin_0"]=asm["_emscripten_bind_btSphereShape_getMargin_0"];var _emscripten_bind_Config_get_timescale_0=Module["_emscripten_bind_Config_get_timescale_0"]=asm["_emscripten_bind_Config_get_timescale_0"];var _emscripten_bind_btVector3_x_0=Module["_emscripten_bind_btVector3_x_0"]=asm["_emscripten_bind_btVector3_x_0"];var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=asm["___cxa_is_pointer_type"];var _emscripten_bind_btConvexTriangleMeshShape___destroy___0=Module["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"];var _emscripten_bind_btCollisionObject_getCollisionShape_0=Module["_emscripten_bind_btCollisionObject_getCollisionShape_0"]=asm["_emscripten_bind_btCollisionObject_getCollisionShape_0"];var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];var _emscripten_bind_btManifoldPoint___destroy___0=Module["_emscripten_bind_btManifoldPoint___destroy___0"]=asm["_emscripten_bind_btManifoldPoint___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"];var _emscripten_bind_btVector4_length_0=Module["_emscripten_bind_btVector4_length_0"]=asm["_emscripten_bind_btVector4_length_0"];var _emscripten_bind_btGhostObject_setUserIndex_1=Module["_emscripten_bind_btGhostObject_setUserIndex_1"]=asm["_emscripten_bind_btGhostObject_setUserIndex_1"];var _emscripten_bind_btWheelInfo_getSuspensionRestLength_0=Module["_emscripten_bind_btWheelInfo_getSuspensionRestLength_0"]=asm["_emscripten_bind_btWheelInfo_getSuspensionRestLength_0"];var _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=Module["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"]=asm["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"];var _emscripten_bind_btGhostObject_setRestitution_1=Module["_emscripten_bind_btGhostObject_setRestitution_1"]=asm["_emscripten_bind_btGhostObject_setRestitution_1"];var _emscripten_bind_btConeTwistConstraint_setAngularOnly_1=Module["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"]=asm["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"];var _emscripten_bind_btQuadWord_setZ_1=Module["_emscripten_bind_btQuadWord_setZ_1"]=asm["_emscripten_bind_btQuadWord_setZ_1"];var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0=Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];var _emscripten_bind_btRigidBody_setMassProps_2=Module["_emscripten_bind_btRigidBody_setMassProps_2"]=asm["_emscripten_bind_btRigidBody_setMassProps_2"];var getTempRet0=Module["getTempRet0"]=asm["getTempRet0"];var _emscripten_bind_btVector3_setValue_3=Module["_emscripten_bind_btVector3_setValue_3"]=asm["_emscripten_bind_btVector3_setValue_3"];var _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"];var _emscripten_bind_RaycastInfo_get_m_suspensionLength_0=Module["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"]=asm["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"];var _emscripten_bind_btGhostObject_getCollisionFlags_0=Module["_emscripten_bind_btGhostObject_getCollisionFlags_0"]=asm["_emscripten_bind_btGhostObject_getCollisionFlags_0"];var _emscripten_bind_btCapsuleShapeX___destroy___0=Module["_emscripten_bind_btCapsuleShapeX___destroy___0"]=asm["_emscripten_bind_btCapsuleShapeX___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0"];var _emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=Module["_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1"];var _emscripten_bind_Material_get_m_flags_0=Module["_emscripten_bind_Material_get_m_flags_0"]=asm["_emscripten_bind_Material_get_m_flags_0"];var _emscripten_bind_btQuaternion_getAxis_0=Module["_emscripten_bind_btQuaternion_getAxis_0"]=asm["_emscripten_bind_btQuaternion_getAxis_0"];var _emscripten_bind_btRaycastVehicle_getUserConstraintId_0=Module["_emscripten_bind_btRaycastVehicle_getUserConstraintId_0"]=asm["_emscripten_bind_btRaycastVehicle_getUserConstraintId_0"];var _emscripten_bind_btRaycastVehicle_updateAction_2=Module["_emscripten_bind_btRaycastVehicle_updateAction_2"]=asm["_emscripten_bind_btRaycastVehicle_updateAction_2"];var _emscripten_bind_btHingeConstraint_setLimit_4=Module["_emscripten_bind_btHingeConstraint_setLimit_4"]=asm["_emscripten_bind_btHingeConstraint_setLimit_4"];var _emscripten_bind_btHingeConstraint_setLimit_5=Module["_emscripten_bind_btHingeConstraint_setLimit_5"]=asm["_emscripten_bind_btHingeConstraint_setLimit_5"];var _emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=Module["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"];var _emscripten_bind_Config_set_kDG_1=Module["_emscripten_bind_Config_set_kDG_1"]=asm["_emscripten_bind_Config_set_kDG_1"];var _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"]=asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"];var _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"];var _emscripten_bind_btSoftBody_scale_1=Module["_emscripten_bind_btSoftBody_scale_1"]=asm["_emscripten_bind_btSoftBody_scale_1"];var _emscripten_bind_Config_get_citerations_0=Module["_emscripten_bind_Config_get_citerations_0"]=asm["_emscripten_bind_Config_get_citerations_0"];var _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btGhostObject_getCollisionShape_0=Module["_emscripten_bind_btGhostObject_getCollisionShape_0"]=asm["_emscripten_bind_btGhostObject_getCollisionShape_0"];var _emscripten_bind_btCollisionObject_setAnisotropicFriction_2=Module["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"];var _emscripten_bind_btBoxShape___destroy___0=Module["_emscripten_bind_btBoxShape___destroy___0"]=asm["_emscripten_bind_btBoxShape___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=Module["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"]=asm["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"];var _emscripten_bind_btPersistentManifold_getContactPoint_1=Module["_emscripten_bind_btPersistentManifold_getContactPoint_1"]=asm["_emscripten_bind_btPersistentManifold_getContactPoint_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_RaycastInfo_set_m_groundObject_1=Module["_emscripten_bind_RaycastInfo_set_m_groundObject_1"]=asm["_emscripten_bind_RaycastInfo_set_m_groundObject_1"];var _emscripten_bind_btGhostObject_activate_1=Module["_emscripten_bind_btGhostObject_activate_1"]=asm["_emscripten_bind_btGhostObject_activate_1"];var _emscripten_bind_btRaycastVehicle_getForwardAxis_0=Module["_emscripten_bind_btRaycastVehicle_getForwardAxis_0"]=asm["_emscripten_bind_btRaycastVehicle_getForwardAxis_0"];var _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"];var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"];var _emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=Module["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"]=asm["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"];var _emscripten_bind_btSphereShape_setMargin_1=Module["_emscripten_bind_btSphereShape_setMargin_1"]=asm["_emscripten_bind_btSphereShape_setMargin_1"];var _emscripten_bind_btSoftBody_get_m_cfg_0=Module["_emscripten_bind_btSoftBody_get_m_cfg_0"]=asm["_emscripten_bind_btSoftBody_get_m_cfg_0"];var _emscripten_bind_btCollisionObject_setUserIndex_1=Module["_emscripten_bind_btCollisionObject_setUserIndex_1"]=asm["_emscripten_bind_btCollisionObject_setUserIndex_1"];var _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"]=asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"];var _emscripten_bind_btSliderConstraint_setUpperAngLimit_1=Module["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"];var _emscripten_bind_btDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btCollisionWorld_getPairCache_0=Module["_emscripten_bind_btCollisionWorld_getPairCache_0"]=asm["_emscripten_bind_btCollisionWorld_getPairCache_0"];var _emscripten_bind_btConeTwistConstraint_setMotorTarget_1=Module["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"];var _emscripten_bind_btWheelInfo_set_m_rollInfluence_1=Module["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"]=asm["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"];var _emscripten_bind_btGhostObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"];var _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"];var _emscripten_enum_PHY_ScalarType_PHY_INTEGER=Module["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"]=asm["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"];var _emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=Module["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"]=asm["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"];var _emscripten_bind_btGhostObject_forceActivationState_1=Module["_emscripten_bind_btGhostObject_forceActivationState_1"]=asm["_emscripten_bind_btGhostObject_forceActivationState_1"];var _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=Module["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"]=asm["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"];var _emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=Module["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"];var _emscripten_bind_btVector4_y_0=Module["_emscripten_bind_btVector4_y_0"]=asm["_emscripten_bind_btVector4_y_0"];var _emscripten_bind_VoidPtr___destroy___0=Module["_emscripten_bind_VoidPtr___destroy___0"]=asm["_emscripten_bind_VoidPtr___destroy___0"];var establishStackSpace=Module["establishStackSpace"]=asm["establishStackSpace"];var _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=Module["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"];var _emscripten_bind_btSliderConstraint_setLowerAngLimit_1=Module["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];var _emscripten_bind_RaycastInfo_set_m_contactPointWS_1=Module["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"];var _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=Module["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"]=asm["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"];var _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"];var _emscripten_bind_btSoftBody_setContactProcessingThreshold_1=Module["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"];var _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=Module["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"];var _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=Module["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"]=asm["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"];var _emscripten_bind_btSliderConstraint_enableFeedback_1=Module["_emscripten_bind_btSliderConstraint_enableFeedback_1"]=asm["_emscripten_bind_btSliderConstraint_enableFeedback_1"];var _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_enum_PHY_ScalarType_PHY_DOUBLE=Module["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"]=asm["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"];var _emscripten_bind_btConstraintSetting_get_m_tau_0=Module["_emscripten_bind_btConstraintSetting_get_m_tau_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_tau_0"];var _emscripten_bind_btConeShape_setLocalScaling_1=Module["_emscripten_bind_btConeShape_setLocalScaling_1"]=asm["_emscripten_bind_btConeShape_setLocalScaling_1"];var _emscripten_bind_btCollisionObject_setCollisionShape_1=Module["_emscripten_bind_btCollisionObject_setCollisionShape_1"]=asm["_emscripten_bind_btCollisionObject_setCollisionShape_1"];var _emscripten_bind_btCollisionShape___destroy___0=Module["_emscripten_bind_btCollisionShape___destroy___0"]=asm["_emscripten_bind_btCollisionShape___destroy___0"];var _emscripten_bind_btMatrix3x3_getRow_1=Module["_emscripten_bind_btMatrix3x3_getRow_1"]=asm["_emscripten_bind_btMatrix3x3_getRow_1"];var _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=Module["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"];var _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=Module["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"];var _emscripten_bind_btSoftBody_getUserIndex_0=Module["_emscripten_bind_btSoftBody_getUserIndex_0"]=asm["_emscripten_bind_btSoftBody_getUserIndex_0"];var _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=Module["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"];var _emscripten_bind_btKinematicCharacterController_warp_1=Module["_emscripten_bind_btKinematicCharacterController_warp_1"]=asm["_emscripten_bind_btKinematicCharacterController_warp_1"];var _emscripten_bind_btContactSolverInfo___destroy___0=Module["_emscripten_bind_btContactSolverInfo___destroy___0"]=asm["_emscripten_bind_btContactSolverInfo___destroy___0"];var _emscripten_bind_btSoftBody_getWorldTransform_0=Module["_emscripten_bind_btSoftBody_getWorldTransform_0"]=asm["_emscripten_bind_btSoftBody_getWorldTransform_0"];var ___muldsi3=Module["___muldsi3"]=asm["___muldsi3"];var _emscripten_bind_btTriangleMesh___destroy___0=Module["_emscripten_bind_btTriangleMesh___destroy___0"]=asm["_emscripten_bind_btTriangleMesh___destroy___0"];var _emscripten_bind_btKinematicCharacterController_preStep_1=Module["_emscripten_bind_btKinematicCharacterController_preStep_1"]=asm["_emscripten_bind_btKinematicCharacterController_preStep_1"];var _emscripten_bind_btRaycastVehicle_applyEngineForce_2=Module["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"]=asm["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"];var _emscripten_bind_btBoxShape_calculateLocalInertia_2=Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];var _emscripten_bind_btRaycastVehicle_setBrake_2=Module["_emscripten_bind_btRaycastVehicle_setBrake_2"]=asm["_emscripten_bind_btRaycastVehicle_setBrake_2"];var _emscripten_bind_ConcreteContactResultCallback___destroy___0=Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"]=asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];var _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=Module["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"];var _emscripten_bind_btRaycastVehicle_updateVehicle_1=Module["_emscripten_bind_btRaycastVehicle_updateVehicle_1"]=asm["_emscripten_bind_btRaycastVehicle_updateVehicle_1"];var _emscripten_bind_btCollisionObject___destroy___0=Module["_emscripten_bind_btCollisionObject___destroy___0"]=asm["_emscripten_bind_btCollisionObject___destroy___0"];var _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"];var _emscripten_bind_btConvexTriangleMeshShape_setMargin_1=Module["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"];var _emscripten_bind_btTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_Config_get_kSSHR_CL_0=Module["_emscripten_bind_Config_get_kSSHR_CL_0"]=asm["_emscripten_bind_Config_get_kSSHR_CL_0"];var _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=Module["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"];var _emscripten_bind_btQuaternion_op_mul_1=Module["_emscripten_bind_btQuaternion_op_mul_1"]=asm["_emscripten_bind_btQuaternion_op_mul_1"];var _emscripten_bind_btDispatcherInfo_set_m_timeStep_1=Module["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"];var _emscripten_bind_btVector3_btVector3_3=Module["_emscripten_bind_btVector3_btVector3_3"]=asm["_emscripten_bind_btVector3_btVector3_3"];var _emscripten_bind_btVector3_btVector3_0=Module["_emscripten_bind_btVector3_btVector3_0"]=asm["_emscripten_bind_btVector3_btVector3_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];var _emscripten_bind_btVector3_z_0=Module["_emscripten_bind_btVector3_z_0"]=asm["_emscripten_bind_btVector3_z_0"];var _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"];var _emscripten_bind_btCollisionShape_getMargin_0=Module["_emscripten_bind_btCollisionShape_getMargin_0"]=asm["_emscripten_bind_btCollisionShape_getMargin_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"];var _emscripten_bind_btBroadphaseInterface___destroy___0=Module["_emscripten_bind_btBroadphaseInterface___destroy___0"]=asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];var _emscripten_bind_btWheelInfo_updateWheel_2=Module["_emscripten_bind_btWheelInfo_updateWheel_2"]=asm["_emscripten_bind_btWheelInfo_updateWheel_2"];var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"]=asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];var _emscripten_bind_RaycastInfo_get_m_hardPointWS_0=Module["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"];var _emscripten_bind_btConeTwistConstraint___destroy___0=Module["_emscripten_bind_btConeTwistConstraint___destroy___0"]=asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];var _emscripten_bind_btQuadWord___destroy___0=Module["_emscripten_bind_btQuadWord___destroy___0"]=asm["_emscripten_bind_btQuadWord___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btQuaternion_setEulerZYX_3=Module["_emscripten_bind_btQuaternion_setEulerZYX_3"]=asm["_emscripten_bind_btQuaternion_setEulerZYX_3"];var _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"];var _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=Module["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"];var _emscripten_bind_btRigidBody_setCenterOfMassTransform_1=Module["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"]=asm["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"];var _emscripten_bind_btSoftBody_setUserIndex_1=Module["_emscripten_bind_btSoftBody_setUserIndex_1"]=asm["_emscripten_bind_btSoftBody_setUserIndex_1"];var _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=Module["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"]=asm["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"];var _emscripten_bind_btSoftBody_setCollisionShape_1=Module["_emscripten_bind_btSoftBody_setCollisionShape_1"]=asm["_emscripten_bind_btSoftBody_setCollisionShape_1"];var _emscripten_bind_btGhostObject_setAnisotropicFriction_2=Module["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"];var _emscripten_bind_btConstraintSolver___destroy___0=Module["_emscripten_bind_btConstraintSolver___destroy___0"]=asm["_emscripten_bind_btConstraintSolver___destroy___0"];var _emscripten_bind_btSoftBody_isActive_0=Module["_emscripten_bind_btSoftBody_isActive_0"]=asm["_emscripten_bind_btSoftBody_isActive_0"];var _emscripten_bind_btCapsuleShape_btCapsuleShape_2=Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"]=asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];var _emscripten_bind_btTypedConstraint_enableFeedback_1=Module["_emscripten_bind_btTypedConstraint_enableFeedback_1"]=asm["_emscripten_bind_btTypedConstraint_enableFeedback_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0"];var _emscripten_bind_btGhostObject_activate_0=Module["_emscripten_bind_btGhostObject_activate_0"]=asm["_emscripten_bind_btGhostObject_activate_0"];var _emscripten_bind_btConstraintSetting_btConstraintSetting_0=Module["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"]=asm["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"];var _emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1=Module["_emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1"]=asm["_emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"];var _emscripten_bind_btRigidBody_setAnisotropicFriction_2=Module["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"]=asm["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"];var _emscripten_bind_btSoftBody_btSoftBody_4=Module["_emscripten_bind_btSoftBody_btSoftBody_4"]=asm["_emscripten_bind_btSoftBody_btSoftBody_4"];var _emscripten_bind_btSoftBody_activate_0=Module["_emscripten_bind_btSoftBody_activate_0"]=asm["_emscripten_bind_btSoftBody_activate_0"];var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];var _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=Module["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"];var _emscripten_bind_btPersistentManifold_btPersistentManifold_0=Module["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"]=asm["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"];var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"]=asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];var _emscripten_bind_btVector4___destroy___0=Module["_emscripten_bind_btVector4___destroy___0"]=asm["_emscripten_bind_btVector4___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=Module["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"]=asm["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_tNodeArray_at_1=Module["_emscripten_bind_tNodeArray_at_1"]=asm["_emscripten_bind_tNodeArray_at_1"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=Module["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"];var _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"];var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"]=asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"];var _emscripten_bind_btSoftBody_set_m_cfg_1=Module["_emscripten_bind_btSoftBody_set_m_cfg_1"]=asm["_emscripten_bind_btSoftBody_set_m_cfg_1"];var _emscripten_bind_btWheelInfo_get_m_brake_0=Module["_emscripten_bind_btWheelInfo_get_m_brake_0"]=asm["_emscripten_bind_btWheelInfo_get_m_brake_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"];var _emscripten_bind_btWheelInfo_get_m_deltaRotation_0=Module["_emscripten_bind_btWheelInfo_get_m_deltaRotation_0"]=asm["_emscripten_bind_btWheelInfo_get_m_deltaRotation_0"];var _emscripten_bind_btPoint2PointConstraint_getPivotInB_0=Module["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"];var _emscripten_bind_btKinematicCharacterController_playerStep_2=Module["_emscripten_bind_btKinematicCharacterController_playerStep_2"]=asm["_emscripten_bind_btKinematicCharacterController_playerStep_2"];var _emscripten_bind_btDispatcherInfo___destroy___0=Module["_emscripten_bind_btDispatcherInfo___destroy___0"]=asm["_emscripten_bind_btDispatcherInfo___destroy___0"];var _emscripten_bind_btCapsuleShape_getMargin_0=Module["_emscripten_bind_btCapsuleShape_getMargin_0"]=asm["_emscripten_bind_btCapsuleShape_getMargin_0"];var _emscripten_bind_btCylinderShape_getMargin_0=Module["_emscripten_bind_btCylinderShape_getMargin_0"]=asm["_emscripten_bind_btCylinderShape_getMargin_0"];var _emscripten_bind_btHingeConstraint_getFrameOffsetB_0=Module["_emscripten_bind_btHingeConstraint_getFrameOffsetB_0"]=asm["_emscripten_bind_btHingeConstraint_getFrameOffsetB_0"];var _emscripten_bind_btSoftBodyArray_size_0=Module["_emscripten_bind_btSoftBodyArray_size_0"]=asm["_emscripten_bind_btSoftBodyArray_size_0"];var _emscripten_bind_btStaticPlaneShape_setLocalScaling_1=Module["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"]=asm["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"];var _emscripten_bind_btHingeConstraint_getHingeAngle_0=Module["_emscripten_bind_btHingeConstraint_getHingeAngle_0"]=asm["_emscripten_bind_btHingeConstraint_getHingeAngle_0"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"];var _emscripten_bind_btGhostObject_getWorldTransform_0=Module["_emscripten_bind_btGhostObject_getWorldTransform_0"]=asm["_emscripten_bind_btGhostObject_getWorldTransform_0"];var _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"];var _emscripten_bind_LocalConvexResult_set_m_hitFraction_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"];var _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btDispatcherInfo_get_m_timeStep_0=Module["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"];var _emscripten_bind_btHingeConstraint_setAngularOnly_1=Module["_emscripten_bind_btHingeConstraint_setAngularOnly_1"]=asm["_emscripten_bind_btHingeConstraint_setAngularOnly_1"];var _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"];var _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=Module["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"];var _emscripten_bind_btMotionState___destroy___0=Module["_emscripten_bind_btMotionState___destroy___0"]=asm["_emscripten_bind_btMotionState___destroy___0"];var _emscripten_bind_btCollisionObject_setCollisionFlags_1=Module["_emscripten_bind_btCollisionObject_setCollisionFlags_1"]=asm["_emscripten_bind_btCollisionObject_setCollisionFlags_1"];var _emscripten_bind_Config_get_kPR_0=Module["_emscripten_bind_Config_get_kPR_0"]=asm["_emscripten_bind_Config_get_kPR_0"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=Module["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"]=asm["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"];var _emscripten_bind_RaycastInfo_set_m_suspensionLength_1=Module["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"]=asm["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"];var _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=Module["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"]=asm["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"];var _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btSoftBodyWorldInfo___destroy___0=Module["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"]=asm["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"];var _emscripten_bind_btConvexTriangleMeshShape_getMargin_0=Module["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"]=asm["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"];var _emscripten_bind_btSoftBodySolver___destroy___0=Module["_emscripten_bind_btSoftBodySolver___destroy___0"]=asm["_emscripten_bind_btSoftBodySolver___destroy___0"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _emscripten_bind_btWheelInfo_set_m_steering_1=Module["_emscripten_bind_btWheelInfo_set_m_steering_1"]=asm["_emscripten_bind_btWheelInfo_set_m_steering_1"];var _emscripten_bind_Node_set_m_x_1=Module["_emscripten_bind_Node_set_m_x_1"]=asm["_emscripten_bind_Node_set_m_x_1"];var _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=Module["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"];var _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"]=asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];var _emscripten_bind_btConeShape___destroy___0=Module["_emscripten_bind_btConeShape___destroy___0"]=asm["_emscripten_bind_btConeShape___destroy___0"];var _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"]=asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];var _emscripten_bind_btRaycastVehicle_updateFriction_1=Module["_emscripten_bind_btRaycastVehicle_updateFriction_1"]=asm["_emscripten_bind_btRaycastVehicle_updateFriction_1"];var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"]=asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];var _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=Module["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"]=asm["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"];var _emscripten_bind_btConeShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"];var _emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=Module["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"]=asm["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"];var _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=Module["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"]=asm["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"];var _emscripten_bind_btGhostObject_getNumOverlappingObjects_0=Module["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"]=asm["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"];var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0=Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];var _emscripten_bind_btGhostPairCallback___destroy___0=Module["_emscripten_bind_btGhostPairCallback___destroy___0"]=asm["_emscripten_bind_btGhostPairCallback___destroy___0"];var _emscripten_bind_btRigidBody_getWorldTransform_0=Module["_emscripten_bind_btRigidBody_getWorldTransform_0"]=asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];var _sbrk=Module["_sbrk"]=asm["_sbrk"];var _emscripten_bind_btPoint2PointConstraint_setPivotA_1=Module["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _emscripten_bind_Config_get_maxvolume_0=Module["_emscripten_bind_Config_get_maxvolume_0"]=asm["_emscripten_bind_Config_get_maxvolume_0"];var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"];var _emscripten_bind_btVector3_y_0=Module["_emscripten_bind_btVector3_y_0"]=asm["_emscripten_bind_btVector3_y_0"];var _emscripten_bind_btDispatcherInfo_set_m_useEpa_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"];var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"];var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"]=asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"];var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"]=asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"];var _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=Module["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"]=asm["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"];var _emscripten_bind_Config_set_kDF_1=Module["_emscripten_bind_Config_set_kDF_1"]=asm["_emscripten_bind_Config_set_kDF_1"];var _emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=Module["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"]=asm["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"];var _emscripten_bind_btSoftBody_activate_1=Module["_emscripten_bind_btSoftBody_activate_1"]=asm["_emscripten_bind_btSoftBody_activate_1"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1"];var _emscripten_bind_btGhostObject_setCollisionShape_1=Module["_emscripten_bind_btGhostObject_setCollisionShape_1"]=asm["_emscripten_bind_btGhostObject_setCollisionShape_1"];var _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=Module["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"];var _emscripten_bind_btRigidBody_setRollingFriction_1=Module["_emscripten_bind_btRigidBody_setRollingFriction_1"]=asm["_emscripten_bind_btRigidBody_setRollingFriction_1"];var _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=Module["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];var _emscripten_get_global_libc=Module["_emscripten_get_global_libc"]=asm["_emscripten_get_global_libc"];var _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"];var _emscripten_bind_btVector4_z_0=Module["_emscripten_bind_btVector4_z_0"]=asm["_emscripten_bind_btVector4_z_0"];var _emscripten_bind_btCollisionObject_forceActivationState_1=Module["_emscripten_bind_btCollisionObject_forceActivationState_1"]=asm["_emscripten_bind_btCollisionObject_forceActivationState_1"];var _emscripten_bind_btKinematicCharacterController_onGround_0=Module["_emscripten_bind_btKinematicCharacterController_onGround_0"]=asm["_emscripten_bind_btKinematicCharacterController_onGround_0"];var _emscripten_bind_btRaycastVehicle_getWheelInfo_1=Module["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"]=asm["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"];var _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btVector3_length_0=Module["_emscripten_bind_btVector3_length_0"]=asm["_emscripten_bind_btVector3_length_0"];var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"];var _emscripten_bind_btVector3_normalize_0=Module["_emscripten_bind_btVector3_normalize_0"]=asm["_emscripten_bind_btVector3_normalize_0"];var _emscripten_bind_btConeTwistConstraint_setLimit_2=Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"]=asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];var _emscripten_bind_btSoftBody_setFriction_1=Module["_emscripten_bind_btSoftBody_setFriction_1"]=asm["_emscripten_bind_btSoftBody_setFriction_1"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _emscripten_bind_btRigidBody_setSleepingThresholds_2=Module["_emscripten_bind_btRigidBody_setSleepingThresholds_2"]=asm["_emscripten_bind_btRigidBody_setSleepingThresholds_2"];var _emscripten_bind_btSoftBody_upcast_1=Module["_emscripten_bind_btSoftBody_upcast_1"]=asm["_emscripten_bind_btSoftBody_upcast_1"];var _emscripten_bind_btCollisionObject_setWorldTransform_1=Module["_emscripten_bind_btCollisionObject_setWorldTransform_1"]=asm["_emscripten_bind_btCollisionObject_setWorldTransform_1"];var _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=Module["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"];var _emscripten_bind_btConvexHullShape_setLocalScaling_1=Module["_emscripten_bind_btConvexHullShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexHullShape_setLocalScaling_1"];var _emscripten_bind_btStridingMeshInterface___destroy___0=Module["_emscripten_bind_btStridingMeshInterface___destroy___0"]=asm["_emscripten_bind_btStridingMeshInterface___destroy___0"];var _emscripten_bind_btSoftBody_setActivationState_1=Module["_emscripten_bind_btSoftBody_setActivationState_1"]=asm["_emscripten_bind_btSoftBody_setActivationState_1"];var _emscripten_bind_btRigidBody_getUserIndex_0=Module["_emscripten_bind_btRigidBody_getUserIndex_0"]=asm["_emscripten_bind_btRigidBody_getUserIndex_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"];var _emscripten_bind_btSoftBodyHelpers_CreatePatch_9=Module["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"]=asm["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"];var _emscripten_bind_btDispatcher_getNumManifolds_0=Module["_emscripten_bind_btDispatcher_getNumManifolds_0"]=asm["_emscripten_bind_btDispatcher_getNumManifolds_0"];var _emscripten_bind_btConvexShape_setMargin_1=Module["_emscripten_bind_btConvexShape_setMargin_1"]=asm["_emscripten_bind_btConvexShape_setMargin_1"];var _emscripten_bind_btSoftBody_get_m_nodes_0=Module["_emscripten_bind_btSoftBody_get_m_nodes_0"]=asm["_emscripten_bind_btSoftBody_get_m_nodes_0"];var _emscripten_bind_btSoftBody___destroy___0=Module["_emscripten_bind_btSoftBody___destroy___0"]=asm["_emscripten_bind_btSoftBody___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"];var _emscripten_bind_btRigidBody_activate_1=Module["_emscripten_bind_btRigidBody_activate_1"]=asm["_emscripten_bind_btRigidBody_activate_1"];var _emscripten_bind_btRaycastVehicle_updateWheelTransform_2=Module["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"]=asm["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"];var _emscripten_bind_Material_set_m_kVST_1=Module["_emscripten_bind_Material_set_m_kVST_1"]=asm["_emscripten_bind_Material_set_m_kVST_1"];var _emscripten_bind_btGhostObject_setActivationState_1=Module["_emscripten_bind_btGhostObject_setActivationState_1"]=asm["_emscripten_bind_btGhostObject_setActivationState_1"];var _emscripten_bind_Material_set_m_kLST_1=Module["_emscripten_bind_Material_set_m_kLST_1"]=asm["_emscripten_bind_Material_set_m_kLST_1"];var _emscripten_bind_btCollisionWorld_contactPairTest_3=Module["_emscripten_bind_btCollisionWorld_contactPairTest_3"]=asm["_emscripten_bind_btCollisionWorld_contactPairTest_3"];var _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"];var _emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=Module["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"]=asm["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0"];var _emscripten_bind_Config_get_kSS_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSS_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSS_SPLT_CL_0"];var _emscripten_bind_btCylinderShapeX___destroy___0=Module["_emscripten_bind_btCylinderShapeX___destroy___0"]=asm["_emscripten_bind_btCylinderShapeX___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"];var _emscripten_bind_btRigidBody_updateInertiaTensor_0=Module["_emscripten_bind_btRigidBody_updateInertiaTensor_0"]=asm["_emscripten_bind_btRigidBody_updateInertiaTensor_0"];var _emscripten_bind_ContactResultCallback___destroy___0=Module["_emscripten_bind_ContactResultCallback___destroy___0"]=asm["_emscripten_bind_ContactResultCallback___destroy___0"];var _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"];var _emscripten_bind_btSoftBody_setAnisotropicFriction_2=Module["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"]=asm["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"];var _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=Module["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"];var _emscripten_bind_btRigidBody_getMotionState_0=Module["_emscripten_bind_btRigidBody_getMotionState_0"]=asm["_emscripten_bind_btRigidBody_getMotionState_0"];var _emscripten_bind_btKinematicCharacterController_getGhostObject_0=Module["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"]=asm["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"];var _emscripten_bind_btRigidBody_btRigidBody_1=Module["_emscripten_bind_btRigidBody_btRigidBody_1"]=asm["_emscripten_bind_btRigidBody_btRigidBody_1"];var _emscripten_bind_btTriangleMeshShape___destroy___0=Module["_emscripten_bind_btTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btTriangleMeshShape___destroy___0"];var _llvm_cttz_i32=Module["_llvm_cttz_i32"]=asm["_llvm_cttz_i32"];var _emscripten_bind_btDynamicsWorld_removeAction_1=Module["_emscripten_bind_btDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btDynamicsWorld_removeAction_1"];var _emscripten_bind_btRigidBody_applyTorque_1=Module["_emscripten_bind_btRigidBody_applyTorque_1"]=asm["_emscripten_bind_btRigidBody_applyTorque_1"];var _emscripten_bind_btManifoldPoint_get_m_localPointA_0=Module["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"];var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"]=asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];var _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"];var _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=Module["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"];var _emscripten_bind_btGhostObject_setUserPointer_1=Module["_emscripten_bind_btGhostObject_setUserPointer_1"]=asm["_emscripten_bind_btGhostObject_setUserPointer_1"];var _emscripten_bind_btConvexHullShape_addPoint_2=Module["_emscripten_bind_btConvexHullShape_addPoint_2"]=asm["_emscripten_bind_btConvexHullShape_addPoint_2"];var _emscripten_bind_btKinematicCharacterController_getGravity_0=Module["_emscripten_bind_btKinematicCharacterController_getGravity_0"]=asm["_emscripten_bind_btKinematicCharacterController_getGravity_0"];var ___udivmoddi4=Module["___udivmoddi4"]=asm["___udivmoddi4"];var _emscripten_enum_PHY_ScalarType_PHY_SHORT=Module["_emscripten_enum_PHY_ScalarType_PHY_SHORT"]=asm["_emscripten_enum_PHY_ScalarType_PHY_SHORT"];var _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"];var _emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0=Module["_emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0"]=asm["_emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0"];var _emscripten_bind_btQuaternion_op_sub_1=Module["_emscripten_bind_btQuaternion_op_sub_1"]=asm["_emscripten_bind_btQuaternion_op_sub_1"];var _emscripten_bind_btVector4_normalize_0=Module["_emscripten_bind_btVector4_normalize_0"]=asm["_emscripten_bind_btVector4_normalize_0"];var _emscripten_bind_btQuaternion_setY_1=Module["_emscripten_bind_btQuaternion_setY_1"]=asm["_emscripten_bind_btQuaternion_setY_1"];var _emscripten_bind_btConeShape_calculateLocalInertia_2=Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];var _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"];var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"];var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=asm["_llvm_bswap_i32"];var _emscripten_bind_btRaycastVehicle_getForwardVector_0=Module["_emscripten_bind_btRaycastVehicle_getForwardVector_0"]=asm["_emscripten_bind_btRaycastVehicle_getForwardVector_0"];var _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=Module["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"]=asm["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"];var _emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1=Module["_emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1"]=asm["_emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1"];var _emscripten_bind_btSphereShape_setLocalScaling_1=Module["_emscripten_bind_btSphereShape_setLocalScaling_1"]=asm["_emscripten_bind_btSphereShape_setLocalScaling_1"];var _emscripten_bind_btRigidBody_applyCentralLocalForce_1=Module["_emscripten_bind_btRigidBody_applyCentralLocalForce_1"]=asm["_emscripten_bind_btRigidBody_applyCentralLocalForce_1"];var _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"];var _emscripten_bind_btVector4_w_0=Module["_emscripten_bind_btVector4_w_0"]=asm["_emscripten_bind_btVector4_w_0"];var _emscripten_bind_btWheelInfo_get_m_worldTransform_0=Module["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"]=asm["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"];var _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"];var _emscripten_bind_btBvhTriangleMeshShape___destroy___0=Module["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"];var _emscripten_bind_Config_set_citerations_1=Module["_emscripten_bind_Config_set_citerations_1"]=asm["_emscripten_bind_Config_set_citerations_1"];var _emscripten_bind_btSoftBody_checkFace_3=Module["_emscripten_bind_btSoftBody_checkFace_3"]=asm["_emscripten_bind_btSoftBody_checkFace_3"];var _emscripten_bind_Config_get_kSKHR_CL_0=Module["_emscripten_bind_Config_get_kSKHR_CL_0"]=asm["_emscripten_bind_Config_get_kSKHR_CL_0"];var _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=Module["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"];var _emscripten_bind_btDefaultVehicleRaycaster_castRay_3=Module["_emscripten_bind_btDefaultVehicleRaycaster_castRay_3"]=asm["_emscripten_bind_btDefaultVehicleRaycaster_castRay_3"];var _emscripten_bind_LocalConvexResult_LocalConvexResult_5=Module["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"]=asm["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"];var _emscripten_bind_btContactSolverInfo_get_m_numIterations_0=Module["_emscripten_bind_btContactSolverInfo_get_m_numIterations_0"]=asm["_emscripten_bind_btContactSolverInfo_get_m_numIterations_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0"];var _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"]=asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];var _emscripten_bind_Config_set_diterations_1=Module["_emscripten_bind_Config_set_diterations_1"]=asm["_emscripten_bind_Config_set_diterations_1"];var _emscripten_bind_btRaycastVehicle_getUserConstraintType_0=Module["_emscripten_bind_btRaycastVehicle_getUserConstraintType_0"]=asm["_emscripten_bind_btRaycastVehicle_getUserConstraintType_0"];var _emscripten_bind_btGeneric6DofConstraint___destroy___0=Module["_emscripten_bind_btGeneric6DofConstraint___destroy___0"]=asm["_emscripten_bind_btGeneric6DofConstraint___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"];var _emscripten_bind_Config_set_kDP_1=Module["_emscripten_bind_Config_set_kDP_1"]=asm["_emscripten_bind_Config_set_kDP_1"];var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"];var _emscripten_bind_btConvexHullShape_addPoint_1=Module["_emscripten_bind_btConvexHullShape_addPoint_1"]=asm["_emscripten_bind_btConvexHullShape_addPoint_1"];var _emscripten_bind_btQuaternion_length2_0=Module["_emscripten_bind_btQuaternion_length2_0"]=asm["_emscripten_bind_btQuaternion_length2_0"];var _emscripten_bind_btRaycastVehicle_resetSuspension_0=Module["_emscripten_bind_btRaycastVehicle_resetSuspension_0"]=asm["_emscripten_bind_btRaycastVehicle_resetSuspension_0"];var _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"];var _emscripten_bind_btTransform_getOrigin_0=Module["_emscripten_bind_btTransform_getOrigin_0"]=asm["_emscripten_bind_btTransform_getOrigin_0"];var _emscripten_bind_btBroadphaseProxy___destroy___0=Module["_emscripten_bind_btBroadphaseProxy___destroy___0"]=asm["_emscripten_bind_btBroadphaseProxy___destroy___0"];var _emscripten_bind_Config_get_kKHR_0=Module["_emscripten_bind_Config_get_kKHR_0"]=asm["_emscripten_bind_Config_get_kKHR_0"];var _emscripten_bind_Material_get_m_kLST_0=Module["_emscripten_bind_Material_get_m_kLST_0"]=asm["_emscripten_bind_Material_get_m_kLST_0"];var _emscripten_bind_btHingeConstraint___destroy___0=Module["_emscripten_bind_btHingeConstraint___destroy___0"]=asm["_emscripten_bind_btHingeConstraint___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_getUserPointer_0=Module["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"];var _emscripten_bind_btSoftBody_set_m_nodes_1=Module["_emscripten_bind_btSoftBody_set_m_nodes_1"]=asm["_emscripten_bind_btSoftBody_set_m_nodes_1"];var _emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"];var _emscripten_bind_btDbvtBroadphase___destroy___0=Module["_emscripten_bind_btDbvtBroadphase___destroy___0"]=asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];var _emscripten_bind_Config_set_viterations_1=Module["_emscripten_bind_Config_set_viterations_1"]=asm["_emscripten_bind_Config_set_viterations_1"];var _emscripten_bind_btConvexShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexShape_calculateLocalInertia_2"];var _memset=Module["_memset"]=asm["_memset"];var _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_0=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_1=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_2=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"];var _emscripten_bind_btWheelInfo_set_m_frictionSlip_1=Module["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"]=asm["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"];var _emscripten_bind_btSoftBodyHelpers___destroy___0=Module["_emscripten_bind_btSoftBodyHelpers___destroy___0"]=asm["_emscripten_bind_btSoftBodyHelpers___destroy___0"];var _emscripten_bind_btRigidBody_getCollisionShape_0=Module["_emscripten_bind_btRigidBody_getCollisionShape_0"]=asm["_emscripten_bind_btRigidBody_getCollisionShape_0"];var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"];var _emscripten_bind_btManifoldPoint_get_m_localPointB_0=Module["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"];var _emscripten_bind_btQuaternion_inverse_0=Module["_emscripten_bind_btQuaternion_inverse_0"]=asm["_emscripten_bind_btQuaternion_inverse_0"];var _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btSliderConstraint_setLowerLinLimit_1=Module["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"];var _emscripten_bind_btRigidBody_getAngularVelocity_0=Module["_emscripten_bind_btRigidBody_getAngularVelocity_0"]=asm["_emscripten_bind_btRigidBody_getAngularVelocity_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"];var _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"];var _emscripten_bind_btRigidBody_setLinearVelocity_1=Module["_emscripten_bind_btRigidBody_setLinearVelocity_1"]=asm["_emscripten_bind_btRigidBody_setLinearVelocity_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0"];var _emscripten_bind_btVehicleTuning_btVehicleTuning_0=Module["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"]=asm["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"];var _emscripten_bind_RayResultCallback_set_m_collisionObject_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];var _emscripten_bind_btDefaultSoftBodySolver___destroy___0=Module["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"]=asm["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"];var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"];var _emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0=Module["_emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0"]=asm["_emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0"];var _emscripten_bind_btDynamicsWorld_addAction_1=Module["_emscripten_bind_btDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btDynamicsWorld_addAction_1"];var _emscripten_bind_btSoftBody_appendMaterial_0=Module["_emscripten_bind_btSoftBody_appendMaterial_0"]=asm["_emscripten_bind_btSoftBody_appendMaterial_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"];var _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=Module["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"];var _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"];var _emscripten_bind_btSoftBody_setRestitution_1=Module["_emscripten_bind_btSoftBody_setRestitution_1"]=asm["_emscripten_bind_btSoftBody_setRestitution_1"];var _emscripten_bind_Config_set_kLF_1=Module["_emscripten_bind_Config_set_kLF_1"]=asm["_emscripten_bind_Config_set_kLF_1"];var _emscripten_bind_btWheelInfo_get_m_rotation_0=Module["_emscripten_bind_btWheelInfo_get_m_rotation_0"]=asm["_emscripten_bind_btWheelInfo_get_m_rotation_0"];var _emscripten_enum_PHY_ScalarType_PHY_FLOAT=Module["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"]=asm["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"];var _emscripten_bind_btWheelInfo_set_m_skidInfo_1=Module["_emscripten_bind_btWheelInfo_set_m_skidInfo_1"]=asm["_emscripten_bind_btWheelInfo_set_m_skidInfo_1"];var _emscripten_bind_Config_set_kSS_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSS_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSS_SPLT_CL_1"];var _emscripten_bind_btGhostObject_isActive_0=Module["_emscripten_bind_btGhostObject_isActive_0"]=asm["_emscripten_bind_btGhostObject_isActive_0"];var _emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1=Module["_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1"];var _emscripten_bind_btKinematicCharacterController_setFallSpeed_1=Module["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"]=asm["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"];var _emscripten_bind_btRigidBody_setActivationState_1=Module["_emscripten_bind_btRigidBody_setActivationState_1"]=asm["_emscripten_bind_btRigidBody_setActivationState_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"];var _emscripten_bind_btSoftBody_appendNode_2=Module["_emscripten_bind_btSoftBody_appendNode_2"]=asm["_emscripten_bind_btSoftBody_appendNode_2"];var _emscripten_bind_ClosestConvexResultCallback_hasHit_0=Module["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"];var _emscripten_bind_btCapsuleShapeZ___destroy___0=Module["_emscripten_bind_btCapsuleShapeZ___destroy___0"]=asm["_emscripten_bind_btCapsuleShapeZ___destroy___0"];var _emscripten_bind_btRaycastVehicle_getRigidBody_0=Module["_emscripten_bind_btRaycastVehicle_getRigidBody_0"]=asm["_emscripten_bind_btRaycastVehicle_getRigidBody_0"];var _emscripten_bind_btHingeConstraint_getFrameOffsetA_0=Module["_emscripten_bind_btHingeConstraint_getFrameOffsetA_0"]=asm["_emscripten_bind_btHingeConstraint_getFrameOffsetA_0"];var _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"];var _emscripten_bind_btSoftBody_get_m_materials_0=Module["_emscripten_bind_btSoftBody_get_m_materials_0"]=asm["_emscripten_bind_btSoftBody_get_m_materials_0"];var _emscripten_bind_btTriangleMesh_addTriangle_3=Module["_emscripten_bind_btTriangleMesh_addTriangle_3"]=asm["_emscripten_bind_btTriangleMesh_addTriangle_3"];var _emscripten_bind_btGhostObject_getOverlappingObject_1=Module["_emscripten_bind_btGhostObject_getOverlappingObject_1"]=asm["_emscripten_bind_btGhostObject_getOverlappingObject_1"];var _emscripten_bind_btTriangleMesh_addTriangle_4=Module["_emscripten_bind_btTriangleMesh_addTriangle_4"]=asm["_emscripten_bind_btTriangleMesh_addTriangle_4"];var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"];var _emscripten_bind_Config_get_kDF_0=Module["_emscripten_bind_Config_get_kDF_0"]=asm["_emscripten_bind_Config_get_kDF_0"];var _emscripten_bind_btRigidBody_applyTorqueImpulse_1=Module["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"]=asm["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"];var _emscripten_bind_btVector3_op_add_1=Module["_emscripten_bind_btVector3_op_add_1"]=asm["_emscripten_bind_btVector3_op_add_1"];var _emscripten_bind_btRigidBody_setCollisionFlags_1=Module["_emscripten_bind_btRigidBody_setCollisionFlags_1"]=asm["_emscripten_bind_btRigidBody_setCollisionFlags_1"];var _emscripten_bind_btWheelInfo_get_m_steering_0=Module["_emscripten_bind_btWheelInfo_get_m_steering_0"]=asm["_emscripten_bind_btWheelInfo_get_m_steering_0"];var _emscripten_bind_btRigidBody___destroy___0=Module["_emscripten_bind_btRigidBody___destroy___0"]=asm["_emscripten_bind_btRigidBody___destroy___0"];var _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=Module["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"]=asm["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"];var _emscripten_bind_Config_set_kCHR_1=Module["_emscripten_bind_Config_set_kCHR_1"]=asm["_emscripten_bind_Config_set_kCHR_1"];var _emscripten_bind_btRaycastVehicle_setUserConstraintType_1=Module["_emscripten_bind_btRaycastVehicle_setUserConstraintType_1"]=asm["_emscripten_bind_btRaycastVehicle_setUserConstraintType_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"];var _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=Module["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"]=asm["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"];var _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=Module["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"];var _emscripten_bind_btSliderConstraint_btSliderConstraint_3=Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"]=asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"];var _emscripten_bind_btTransform___destroy___0=Module["_emscripten_bind_btTransform___destroy___0"]=asm["_emscripten_bind_btTransform___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0"];var _emscripten_bind_btDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_btSliderConstraint___destroy___0=Module["_emscripten_bind_btSliderConstraint___destroy___0"]=asm["_emscripten_bind_btSliderConstraint___destroy___0"];var _emscripten_bind_btRigidBody_forceActivationState_1=Module["_emscripten_bind_btRigidBody_forceActivationState_1"]=asm["_emscripten_bind_btRigidBody_forceActivationState_1"];var _emscripten_bind_btPoint2PointConstraint_setPivotB_1=Module["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"];var _emscripten_bind_btManifoldPoint_getDistance_0=Module["_emscripten_bind_btManifoldPoint_getDistance_0"]=asm["_emscripten_bind_btManifoldPoint_getDistance_0"];var _emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1"];var _emscripten_bind_btTransform_setFromOpenGLMatrix_1=Module["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"]=asm["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"];var _emscripten_bind_btKinematicCharacterController_getMaxSlope_0=Module["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"]=asm["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"];var _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"]=asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"];var _emscripten_bind_btRaycastVehicle_addWheel_7=Module["_emscripten_bind_btRaycastVehicle_addWheel_7"]=asm["_emscripten_bind_btRaycastVehicle_addWheel_7"];var _emscripten_bind_btQuaternion_op_add_1=Module["_emscripten_bind_btQuaternion_op_add_1"]=asm["_emscripten_bind_btQuaternion_op_add_1"];var _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"];var _emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2=Module["_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2"]=asm["_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2"];var _emscripten_bind_btStaticPlaneShape___destroy___0=Module["_emscripten_bind_btStaticPlaneShape___destroy___0"]=asm["_emscripten_bind_btStaticPlaneShape___destroy___0"];var _emscripten_bind_btHingeConstraint_enableMotor_1=Module["_emscripten_bind_btHingeConstraint_enableMotor_1"]=asm["_emscripten_bind_btHingeConstraint_enableMotor_1"];var _emscripten_bind_btCylinderShapeZ_setLocalScaling_1=Module["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"];var _emscripten_bind_btBoxShape_setLocalScaling_1=Module["_emscripten_bind_btBoxShape_setLocalScaling_1"]=asm["_emscripten_bind_btBoxShape_setLocalScaling_1"];var _emscripten_bind_btConeShapeZ___destroy___0=Module["_emscripten_bind_btConeShapeZ___destroy___0"]=asm["_emscripten_bind_btConeShapeZ___destroy___0"];var _emscripten_bind_btDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btDynamicsWorld_getPairCache_0"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0"];var _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"];var _emscripten_bind_btRigidBody_setRestitution_1=Module["_emscripten_bind_btRigidBody_setRestitution_1"]=asm["_emscripten_bind_btRigidBody_setRestitution_1"];var _emscripten_bind_btVector4_btVector4_0=Module["_emscripten_bind_btVector4_btVector4_0"]=asm["_emscripten_bind_btVector4_btVector4_0"];var _emscripten_bind_btVector4_x_0=Module["_emscripten_bind_btVector4_x_0"]=asm["_emscripten_bind_btVector4_x_0"];var _emscripten_bind_btVector4_btVector4_4=Module["_emscripten_bind_btVector4_btVector4_4"]=asm["_emscripten_bind_btVector4_btVector4_4"];var _emscripten_bind_btVector4_normalized_0=Module["_emscripten_bind_btVector4_normalized_0"]=asm["_emscripten_bind_btVector4_normalized_0"];var _emscripten_bind_btKinematicCharacterController___destroy___0=Module["_emscripten_bind_btKinematicCharacterController___destroy___0"]=asm["_emscripten_bind_btKinematicCharacterController___destroy___0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"];var _emscripten_bind_tMaterialArray_at_1=Module["_emscripten_bind_tMaterialArray_at_1"]=asm["_emscripten_bind_tMaterialArray_at_1"];var _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"];var _emscripten_bind_btVector4_op_sub_1=Module["_emscripten_bind_btVector4_op_sub_1"]=asm["_emscripten_bind_btVector4_op_sub_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"];var _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"];var _emscripten_bind_btWheelInfo_get_m_raycastInfo_0=Module["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"]=asm["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"];var _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"]=asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"];var _emscripten_bind_btConvexShape_getMargin_0=Module["_emscripten_bind_btConvexShape_getMargin_0"]=asm["_emscripten_bind_btConvexShape_getMargin_0"];var _emscripten_bind_btVector3_normalized_0=Module["_emscripten_bind_btVector3_normalized_0"]=asm["_emscripten_bind_btVector3_normalized_0"];var _emscripten_bind_btRaycastVehicle_getSteeringValue_1=Module["_emscripten_bind_btRaycastVehicle_getSteeringValue_1"]=asm["_emscripten_bind_btRaycastVehicle_getSteeringValue_1"];var _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0=Module["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0"]=asm["_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0"];var _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=Module["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"]=asm["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"];var _emscripten_bind_btPairCachingGhostObject_isActive_0=Module["_emscripten_bind_btPairCachingGhostObject_isActive_0"]=asm["_emscripten_bind_btPairCachingGhostObject_isActive_0"];var _emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1"];var _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=Module["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_vid=Module["dynCall_vid"]=asm["dynCall_vid"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_viiidii=Module["dynCall_viiidii"]=asm["dynCall_viiidii"];var dynCall_vii=Module["dynCall_vii"]=asm["dynCall_vii"];var dynCall_iiiiiiiiiii=Module["dynCall_iiiiiiiiiii"]=asm["dynCall_iiiiiiiiiii"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_viidi=Module["dynCall_viidi"]=asm["dynCall_viidi"];var dynCall_viddiii=Module["dynCall_viddiii"]=asm["dynCall_viddiii"];var dynCall_vidii=Module["dynCall_vidii"]=asm["dynCall_vidii"];var dynCall_iiiii=Module["dynCall_iiiii"]=asm["dynCall_iiiii"];var dynCall_vidi=Module["dynCall_vidi"]=asm["dynCall_vidi"];var dynCall_diiiiiiii=Module["dynCall_diiiiiiii"]=asm["dynCall_diiiiiiii"];var dynCall_viiiiddddiid=Module["dynCall_viiiiddddiid"]=asm["dynCall_viiiiddddiid"];var dynCall_diiiii=Module["dynCall_diiiii"]=asm["dynCall_diiiii"];var dynCall_vidd=Module["dynCall_vidd"]=asm["dynCall_vidd"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_viiiiid=Module["dynCall_viiiiid"]=asm["dynCall_viiiiid"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];var dynCall_iiid=Module["dynCall_iiid"]=asm["dynCall_iiid"];var dynCall_di=Module["dynCall_di"]=asm["dynCall_di"];var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=asm["dynCall_iiiiiii"];var dynCall_diiidii=Module["dynCall_diiidii"]=asm["dynCall_diiidii"];var dynCall_viidii=Module["dynCall_viidii"]=asm["dynCall_viidii"];var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=asm["dynCall_viiiiiii"];var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=asm["dynCall_viiiiiiiii"];var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=asm["dynCall_viiiiiiiiii"];var dynCall_iii=Module["dynCall_iii"]=asm["dynCall_iii"];var dynCall_diii=Module["dynCall_diii"]=asm["dynCall_diii"];var dynCall_diiiiiiiiii=Module["dynCall_diiiiiiiiii"]=asm["dynCall_diiiiiiiiii"];var dynCall_viiiid=Module["dynCall_viiiid"]=asm["dynCall_viiiid"];var dynCall_diiiiiiiii=Module["dynCall_diiiiiiiii"]=asm["dynCall_diiiiiiiii"];var dynCall_did=Module["dynCall_did"]=asm["dynCall_did"];var dynCall_viiiidddddidi=Module["dynCall_viiiidddddidi"]=asm["dynCall_viiiidddddidi"];var dynCall_diidii=Module["dynCall_diidii"]=asm["dynCall_diidii"];var dynCall_diiii=Module["dynCall_diiii"]=asm["dynCall_diiii"];var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=asm["dynCall_iiiiiiiiii"];var dynCall_viiid=Module["dynCall_viiid"]=asm["dynCall_viiid"];var dynCall_viii=Module["dynCall_viii"]=asm["dynCall_viii"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_viid=Module["dynCall_viid"]=asm["dynCall_viid"];var dynCall_iidid=Module["dynCall_iidid"]=asm["dynCall_iidid"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];Runtime.stackAlloc=Module["stackAlloc"];Runtime.stackSave=Module["stackSave"];Runtime.stackRestore=Module["stackRestore"];Runtime.establishStackSpace=Module["establishStackSpace"];Runtime.setTempRet0=Module["setTempRet0"];Runtime.getTempRet0=Module["getTempRet0"];Module["asm"]=asm;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status;}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller;};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0);}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad();}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true);}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack];}Module.printErr("exception thrown: "+toLog);Module["quit"](1,e);}}finally{calledMain=true;}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun();}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("");}),1);doRun();}),1);}else{doRun();}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status);}if(ENVIRONMENT_IS_NODE){process["exit"](status);}Module["quit"](status,new ExitStatus(status));}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what);}else{what="";}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what);}));}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()();}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false;}Module["noExitRuntime"]=true;run();function WrapperObject(){}WrapperObject.prototype=Object.create(WrapperObject.prototype);WrapperObject.prototype.constructor=WrapperObject;WrapperObject.prototype.__class__=WrapperObject;WrapperObject.__cache__={};Module["WrapperObject"]=WrapperObject;function getCache(__class__){return(__class__||WrapperObject).__cache__}Module["getCache"]=getCache;function wrapPointer(ptr,__class__){var cache=getCache(__class__);var ret=cache[ptr];if(ret)return ret;ret=Object.create((__class__||WrapperObject).prototype);ret.ptr=ptr;return cache[ptr]=ret}Module["wrapPointer"]=wrapPointer;function castObject(obj,__class__){return wrapPointer(obj.ptr,__class__)}Module["castObject"]=castObject;Module["NULL"]=wrapPointer(0);function destroy(obj){if(!obj["__destroy__"])throw"Error: Cannot destroy object. (Did you create it yourself?)";obj["__destroy__"]();delete getCache(obj.__class__)[obj.ptr];}Module["destroy"]=destroy;function compare(obj1,obj2){return obj1.ptr===obj2.ptr}Module["compare"]=compare;function getPointer(obj){return obj.ptr}Module["getPointer"]=getPointer;function getClass(obj){return obj.__class__}Module["getClass"]=getClass;var ensureCache={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:(function(){if(ensureCache.needed){for(var i=0;i<ensureCache.temps.length;i++){Module["_free"](ensureCache.temps[i]);}ensureCache.temps.length=0;Module["_free"](ensureCache.buffer);ensureCache.buffer=0;ensureCache.size+=ensureCache.needed;ensureCache.needed=0;}if(!ensureCache.buffer){ensureCache.size+=128;ensureCache.buffer=Module["_malloc"](ensureCache.size);assert(ensureCache.buffer);}ensureCache.pos=0;}),alloc:(function(array,view){assert(ensureCache.buffer);var bytes=view.BYTES_PER_ELEMENT;var len=array.length*bytes;len=len+7&-8;var ret;if(ensureCache.pos+len>=ensureCache.size){assert(len>0);ensureCache.needed+=len;ret=Module["_malloc"](len);ensureCache.temps.push(ret);}else{ret=ensureCache.buffer+ensureCache.pos;ensureCache.pos+=len;}return ret}),copy:(function(array,view,offset){var offsetShifted=offset;var bytes=view.BYTES_PER_ELEMENT;switch(bytes){case 2:offsetShifted>>=1;break;case 4:offsetShifted>>=2;break;case 8:offsetShifted>>=3;break}for(var i=0;i<array.length;i++){view[offsetShifted+i]=array[i];}})};function ensureInt32(value){if(typeof value==="object"){var offset=ensureCache.alloc(value,HEAP32);ensureCache.copy(value,HEAP32,offset);return offset}return value}function ensureFloat32(value){if(typeof value==="object"){var offset=ensureCache.alloc(value,HEAPF32);ensureCache.copy(value,HEAPF32,offset);return offset}return value}function btCollisionWorld(){throw"cannot construct a btCollisionWorld, no constructor in IDL"}btCollisionWorld.prototype=Object.create(WrapperObject.prototype);btCollisionWorld.prototype.constructor=btCollisionWorld;btCollisionWorld.prototype.__class__=btCollisionWorld;btCollisionWorld.__cache__={};Module["btCollisionWorld"]=btCollisionWorld;btCollisionWorld.prototype["getDispatcher"]=btCollisionWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatcher_0(self),btDispatcher)});btCollisionWorld.prototype["rayTest"]=btCollisionWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btCollisionWorld_rayTest_3(self,arg0,arg1,arg2);});btCollisionWorld.prototype["getPairCache"]=btCollisionWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getPairCache_0(self),btOverlappingPairCache)});btCollisionWorld.prototype["getDispatchInfo"]=btCollisionWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatchInfo_0(self),btDispatcherInfo)});btCollisionWorld.prototype["addCollisionObject"]=btCollisionWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btCollisionWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btCollisionWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btCollisionWorld_addCollisionObject_3(self,arg0,arg1,arg2);});btCollisionWorld.prototype["getBroadphase"]=btCollisionWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getBroadphase_0(self),btBroadphaseInterface)});btCollisionWorld.prototype["convexSweepTest"]=btCollisionWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btCollisionWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4);});btCollisionWorld.prototype["contactPairTest"]=btCollisionWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btCollisionWorld_contactPairTest_3(self,arg0,arg1,arg2);});btCollisionWorld.prototype["contactTest"]=btCollisionWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionWorld_contactTest_2(self,arg0,arg1);});btCollisionWorld.prototype["__destroy__"]=btCollisionWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionWorld___destroy___0(self);});function btCollisionShape(){throw"cannot construct a btCollisionShape, no constructor in IDL"}btCollisionShape.prototype=Object.create(WrapperObject.prototype);btCollisionShape.prototype.constructor=btCollisionShape;btCollisionShape.prototype.__class__=btCollisionShape;btCollisionShape.__cache__={};Module["btCollisionShape"]=btCollisionShape;btCollisionShape.prototype["setLocalScaling"]=btCollisionShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionShape_setLocalScaling_1(self,arg0);});btCollisionShape.prototype["calculateLocalInertia"]=btCollisionShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionShape_calculateLocalInertia_2(self,arg0,arg1);});btCollisionShape.prototype["setMargin"]=btCollisionShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionShape_setMargin_1(self,arg0);});btCollisionShape.prototype["getMargin"]=btCollisionShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCollisionShape_getMargin_0(self)});btCollisionShape.prototype["__destroy__"]=btCollisionShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionShape___destroy___0(self);});function btCollisionObject(){throw"cannot construct a btCollisionObject, no constructor in IDL"}btCollisionObject.prototype=Object.create(WrapperObject.prototype);btCollisionObject.prototype.constructor=btCollisionObject;btCollisionObject.prototype.__class__=btCollisionObject;btCollisionObject.__cache__={};Module["btCollisionObject"]=btCollisionObject;btCollisionObject.prototype["setAnisotropicFriction"]=btCollisionObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionObject_setAnisotropicFriction_2(self,arg0,arg1);});btCollisionObject.prototype["getCollisionShape"]=btCollisionObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getCollisionShape_0(self),btCollisionShape)});btCollisionObject.prototype["setContactProcessingThreshold"]=btCollisionObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1(self,arg0);});btCollisionObject.prototype["setActivationState"]=btCollisionObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setActivationState_1(self,arg0);});btCollisionObject.prototype["forceActivationState"]=btCollisionObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_forceActivationState_1(self,arg0);});btCollisionObject.prototype["activate"]=btCollisionObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btCollisionObject_activate_0(self);return}_emscripten_bind_btCollisionObject_activate_1(self,arg0);});btCollisionObject.prototype["isActive"]=btCollisionObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btCollisionObject_isActive_0(self)});btCollisionObject.prototype["isKinematicObject"]=btCollisionObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btCollisionObject_isKinematicObject_0(self)});btCollisionObject.prototype["setRestitution"]=btCollisionObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setRestitution_1(self,arg0);});btCollisionObject.prototype["setFriction"]=btCollisionObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setFriction_1(self,arg0);});btCollisionObject.prototype["setRollingFriction"]=btCollisionObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setRollingFriction_1(self,arg0);});btCollisionObject.prototype["getWorldTransform"]=btCollisionObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self),btTransform)});btCollisionObject.prototype["getCollisionFlags"]=btCollisionObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btCollisionObject_getCollisionFlags_0(self)});btCollisionObject.prototype["setCollisionFlags"]=btCollisionObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCollisionFlags_1(self,arg0);});btCollisionObject.prototype["setWorldTransform"]=btCollisionObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setWorldTransform_1(self,arg0);});btCollisionObject.prototype["setCollisionShape"]=btCollisionObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCollisionShape_1(self,arg0);});btCollisionObject.prototype["setCcdMotionThreshold"]=btCollisionObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1(self,arg0);});btCollisionObject.prototype["setCcdSweptSphereRadius"]=btCollisionObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1(self,arg0);});btCollisionObject.prototype["getUserIndex"]=btCollisionObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btCollisionObject_getUserIndex_0(self)});btCollisionObject.prototype["setUserIndex"]=btCollisionObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setUserIndex_1(self,arg0);});btCollisionObject.prototype["getUserPointer"]=btCollisionObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getUserPointer_0(self),VoidPtr)});btCollisionObject.prototype["setUserPointer"]=btCollisionObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setUserPointer_1(self,arg0);});btCollisionObject.prototype["__destroy__"]=btCollisionObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionObject___destroy___0(self);});function btDynamicsWorld(){throw"cannot construct a btDynamicsWorld, no constructor in IDL"}btDynamicsWorld.prototype=Object.create(btCollisionWorld.prototype);btDynamicsWorld.prototype.constructor=btDynamicsWorld;btDynamicsWorld.prototype.__class__=btDynamicsWorld;btDynamicsWorld.__cache__={};Module["btDynamicsWorld"]=btDynamicsWorld;btDynamicsWorld.prototype["addAction"]=btDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDynamicsWorld_addAction_1(self,arg0);});btDynamicsWorld.prototype["removeAction"]=btDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDynamicsWorld_removeAction_1(self,arg0);});btDynamicsWorld.prototype["getSolverInfo"]=btDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btDynamicsWorld.prototype["getDispatcher"]=btDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatcher_0(self),btDispatcher)});btDynamicsWorld.prototype["rayTest"]=btDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDynamicsWorld_rayTest_3(self,arg0,arg1,arg2);});btDynamicsWorld.prototype["getPairCache"]=btDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btDynamicsWorld.prototype["getDispatchInfo"]=btDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btDynamicsWorld.prototype["addCollisionObject"]=btDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2);});btDynamicsWorld.prototype["getBroadphase"]=btDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btDynamicsWorld.prototype["convexSweepTest"]=btDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4);});btDynamicsWorld.prototype["contactPairTest"]=btDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2);});btDynamicsWorld.prototype["contactTest"]=btDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btDynamicsWorld_contactTest_2(self,arg0,arg1);});btDynamicsWorld.prototype["__destroy__"]=btDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDynamicsWorld___destroy___0(self);});function btTypedConstraint(){throw"cannot construct a btTypedConstraint, no constructor in IDL"}btTypedConstraint.prototype=Object.create(WrapperObject.prototype);btTypedConstraint.prototype.constructor=btTypedConstraint;btTypedConstraint.prototype.__class__=btTypedConstraint;btTypedConstraint.__cache__={};Module["btTypedConstraint"]=btTypedConstraint;btTypedConstraint.prototype["enableFeedback"]=btTypedConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTypedConstraint_enableFeedback_1(self,arg0);});btTypedConstraint.prototype["getBreakingImpulseThreshold"]=btTypedConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0(self)});btTypedConstraint.prototype["setBreakingImpulseThreshold"]=btTypedConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1(self,arg0);});btTypedConstraint.prototype["__destroy__"]=btTypedConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTypedConstraint___destroy___0(self);});function btConcaveShape(){throw"cannot construct a btConcaveShape, no constructor in IDL"}btConcaveShape.prototype=Object.create(btCollisionShape.prototype);btConcaveShape.prototype.constructor=btConcaveShape;btConcaveShape.prototype.__class__=btConcaveShape;btConcaveShape.__cache__={};Module["btConcaveShape"]=btConcaveShape;btConcaveShape.prototype["setLocalScaling"]=btConcaveShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConcaveShape_setLocalScaling_1(self,arg0);});btConcaveShape.prototype["calculateLocalInertia"]=btConcaveShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConcaveShape_calculateLocalInertia_2(self,arg0,arg1);});btConcaveShape.prototype["__destroy__"]=btConcaveShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConcaveShape___destroy___0(self);});function btCapsuleShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0,arg1);getCache(btCapsuleShape)[this.ptr]=this;}btCapsuleShape.prototype=Object.create(btCollisionShape.prototype);btCapsuleShape.prototype.constructor=btCapsuleShape;btCapsuleShape.prototype.__class__=btCapsuleShape;btCapsuleShape.__cache__={};Module["btCapsuleShape"]=btCapsuleShape;btCapsuleShape.prototype["setMargin"]=btCapsuleShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShape_setMargin_1(self,arg0);});btCapsuleShape.prototype["getMargin"]=btCapsuleShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShape_getMargin_0(self)});btCapsuleShape.prototype["setLocalScaling"]=btCapsuleShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShape_setLocalScaling_1(self,arg0);});btCapsuleShape.prototype["calculateLocalInertia"]=btCapsuleShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self,arg0,arg1);});btCapsuleShape.prototype["__destroy__"]=btCapsuleShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShape___destroy___0(self);});function btDefaultCollisionConfiguration(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0();getCache(btDefaultCollisionConfiguration)[this.ptr]=this;return}this.ptr=_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);getCache(btDefaultCollisionConfiguration)[this.ptr]=this;}btDefaultCollisionConfiguration.prototype=Object.create(WrapperObject.prototype);btDefaultCollisionConfiguration.prototype.constructor=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.prototype.__class__=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.__cache__={};Module["btDefaultCollisionConfiguration"]=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.prototype["__destroy__"]=btDefaultCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self);});function btTriangleMeshShape(){throw"cannot construct a btTriangleMeshShape, no constructor in IDL"}btTriangleMeshShape.prototype=Object.create(btConcaveShape.prototype);btTriangleMeshShape.prototype.constructor=btTriangleMeshShape;btTriangleMeshShape.prototype.__class__=btTriangleMeshShape;btTriangleMeshShape.__cache__={};Module["btTriangleMeshShape"]=btTriangleMeshShape;btTriangleMeshShape.prototype["setLocalScaling"]=btTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTriangleMeshShape_setLocalScaling_1(self,arg0);});btTriangleMeshShape.prototype["calculateLocalInertia"]=btTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1);});btTriangleMeshShape.prototype["__destroy__"]=btTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTriangleMeshShape___destroy___0(self);});function RayResultCallback(){throw"cannot construct a RayResultCallback, no constructor in IDL"}RayResultCallback.prototype=Object.create(WrapperObject.prototype);RayResultCallback.prototype.constructor=RayResultCallback;RayResultCallback.prototype.__class__=RayResultCallback;RayResultCallback.__cache__={};Module["RayResultCallback"]=RayResultCallback;RayResultCallback.prototype["hasHit"]=RayResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_RayResultCallback_hasHit_0(self)});RayResultCallback.prototype["get_m_collisionFilterGroup"]=RayResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0(self)});RayResultCallback.prototype["set_m_collisionFilterGroup"]=RayResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1(self,arg0);});RayResultCallback.prototype["get_m_collisionFilterMask"]=RayResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0(self)});RayResultCallback.prototype["set_m_collisionFilterMask"]=RayResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1(self,arg0);});RayResultCallback.prototype["get_m_collisionObject"]=RayResultCallback.prototype.get_m_collisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self),btCollisionObject)});RayResultCallback.prototype["set_m_collisionObject"]=RayResultCallback.prototype.set_m_collisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionObject_1(self,arg0);});RayResultCallback.prototype["__destroy__"]=RayResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_RayResultCallback___destroy___0(self);});function btConeShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShape_btConeShape_2(arg0,arg1);getCache(btConeShape)[this.ptr]=this;}btConeShape.prototype=Object.create(btCollisionShape.prototype);btConeShape.prototype.constructor=btConeShape;btConeShape.prototype.__class__=btConeShape;btConeShape.__cache__={};Module["btConeShape"]=btConeShape;btConeShape.prototype["setLocalScaling"]=btConeShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShape_setLocalScaling_1(self,arg0);});btConeShape.prototype["calculateLocalInertia"]=btConeShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShape_calculateLocalInertia_2(self,arg0,arg1);});btConeShape.prototype["__destroy__"]=btConeShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShape___destroy___0(self);});function btActionInterface(){throw"cannot construct a btActionInterface, no constructor in IDL"}btActionInterface.prototype=Object.create(WrapperObject.prototype);btActionInterface.prototype.constructor=btActionInterface;btActionInterface.prototype.__class__=btActionInterface;btActionInterface.__cache__={};Module["btActionInterface"]=btActionInterface;btActionInterface.prototype["updateAction"]=btActionInterface.prototype.updateAction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btActionInterface_updateAction_2(self,arg0,arg1);});btActionInterface.prototype["__destroy__"]=btActionInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btActionInterface___destroy___0(self);});function btVector3(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_0();getCache(btVector3)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_1(arg0);getCache(btVector3)[this.ptr]=this;return}if(arg2===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_2(arg0,arg1);getCache(btVector3)[this.ptr]=this;return}this.ptr=_emscripten_bind_btVector3_btVector3_3(arg0,arg1,arg2);getCache(btVector3)[this.ptr]=this;}btVector3.prototype=Object.create(WrapperObject.prototype);btVector3.prototype.constructor=btVector3;btVector3.prototype.__class__=btVector3;btVector3.__cache__={};Module["btVector3"]=btVector3;btVector3.prototype["length"]=btVector3.prototype.length=(function(){var self=this.ptr;return _emscripten_bind_btVector3_length_0(self)});btVector3.prototype["x"]=btVector3.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btVector3_x_0(self)});btVector3.prototype["y"]=btVector3.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btVector3_y_0(self)});btVector3.prototype["z"]=btVector3.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btVector3_z_0(self)});btVector3.prototype["setX"]=btVector3.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setX_1(self,arg0);});btVector3.prototype["setY"]=btVector3.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setY_1(self,arg0);});btVector3.prototype["setZ"]=btVector3.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setZ_1(self,arg0);});btVector3.prototype["setValue"]=btVector3.prototype.setValue=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btVector3_setValue_3(self,arg0,arg1,arg2);});btVector3.prototype["normalize"]=btVector3.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btVector3_normalize_0(self);});btVector3.prototype["dot"]=btVector3.prototype.dot=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btVector3_dot_1(self,arg0)});btVector3.prototype["normalized"]=btVector3.prototype.normalized=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btVector3_normalized_0(self),btVector3)});btVector3.prototype["rotate"]=btVector3.prototype.rotate=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;return wrapPointer(_emscripten_bind_btVector3_rotate_2(self,arg0,arg1),btVector3)});btVector3.prototype["op_mul"]=btVector3.prototype.op_mul=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self,arg0),btVector3)});btVector3.prototype["op_add"]=btVector3.prototype.op_add=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_add_1(self,arg0),btVector3)});btVector3.prototype["op_sub"]=btVector3.prototype.op_sub=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_sub_1(self,arg0),btVector3)});btVector3.prototype["__destroy__"]=btVector3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVector3___destroy___0(self);});function btVehicleRaycaster(){throw"cannot construct a btVehicleRaycaster, no constructor in IDL"}btVehicleRaycaster.prototype=Object.create(WrapperObject.prototype);btVehicleRaycaster.prototype.constructor=btVehicleRaycaster;btVehicleRaycaster.prototype.__class__=btVehicleRaycaster;btVehicleRaycaster.__cache__={};Module["btVehicleRaycaster"]=btVehicleRaycaster;btVehicleRaycaster.prototype["castRay"]=btVehicleRaycaster.prototype.castRay=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btVehicleRaycaster_castRay_3(self,arg0,arg1,arg2);});btVehicleRaycaster.prototype["__destroy__"]=btVehicleRaycaster.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVehicleRaycaster___destroy___0(self);});function btQuadWord(){throw"cannot construct a btQuadWord, no constructor in IDL"}btQuadWord.prototype=Object.create(WrapperObject.prototype);btQuadWord.prototype.constructor=btQuadWord;btQuadWord.prototype.__class__=btQuadWord;btQuadWord.__cache__={};Module["btQuadWord"]=btQuadWord;btQuadWord.prototype["x"]=btQuadWord.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_x_0(self)});btQuadWord.prototype["y"]=btQuadWord.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_y_0(self)});btQuadWord.prototype["z"]=btQuadWord.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_z_0(self)});btQuadWord.prototype["w"]=btQuadWord.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_w_0(self)});btQuadWord.prototype["setX"]=btQuadWord.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setX_1(self,arg0);});btQuadWord.prototype["setY"]=btQuadWord.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setY_1(self,arg0);});btQuadWord.prototype["setZ"]=btQuadWord.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setZ_1(self,arg0);});btQuadWord.prototype["setW"]=btQuadWord.prototype.setW=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setW_1(self,arg0);});btQuadWord.prototype["__destroy__"]=btQuadWord.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btQuadWord___destroy___0(self);});function btCylinderShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShape_btCylinderShape_1(arg0);getCache(btCylinderShape)[this.ptr]=this;}btCylinderShape.prototype=Object.create(btCollisionShape.prototype);btCylinderShape.prototype.constructor=btCylinderShape;btCylinderShape.prototype.__class__=btCylinderShape;btCylinderShape.__cache__={};Module["btCylinderShape"]=btCylinderShape;btCylinderShape.prototype["setMargin"]=btCylinderShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShape_setMargin_1(self,arg0);});btCylinderShape.prototype["getMargin"]=btCylinderShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShape_getMargin_0(self)});btCylinderShape.prototype["setLocalScaling"]=btCylinderShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShape_setLocalScaling_1(self,arg0);});btCylinderShape.prototype["calculateLocalInertia"]=btCylinderShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShape_calculateLocalInertia_2(self,arg0,arg1);});btCylinderShape.prototype["__destroy__"]=btCylinderShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShape___destroy___0(self);});function btDiscreteDynamicsWorld(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;this.ptr=_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0,arg1,arg2,arg3);getCache(btDiscreteDynamicsWorld)[this.ptr]=this;}btDiscreteDynamicsWorld.prototype=Object.create(btDynamicsWorld.prototype);btDiscreteDynamicsWorld.prototype.constructor=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.prototype.__class__=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.__cache__={};Module["btDiscreteDynamicsWorld"]=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.prototype["setGravity"]=btDiscreteDynamicsWorld.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self,arg0);});btDiscreteDynamicsWorld.prototype["getGravity"]=btDiscreteDynamicsWorld.prototype.getGravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self),btVector3)});btDiscreteDynamicsWorld.prototype["addRigidBody"]=btDiscreteDynamicsWorld.prototype.addRigidBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self,arg0,arg1);return}_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self,arg0,arg1,arg2);});btDiscreteDynamicsWorld.prototype["removeRigidBody"]=btDiscreteDynamicsWorld.prototype.removeRigidBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1(self,arg0);});btDiscreteDynamicsWorld.prototype["addConstraint"]=btDiscreteDynamicsWorld.prototype.addConstraint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self,arg0);return}_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self,arg0,arg1);});btDiscreteDynamicsWorld.prototype["removeConstraint"]=btDiscreteDynamicsWorld.prototype.removeConstraint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self,arg0);});btDiscreteDynamicsWorld.prototype["stepSimulation"]=btDiscreteDynamicsWorld.prototype.stepSimulation=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self,arg0)}if(arg2===undefined){return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self,arg0,arg1)}return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["getDispatcher"]=btDiscreteDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0(self),btDispatcher)});btDiscreteDynamicsWorld.prototype["rayTest"]=btDiscreteDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3(self,arg0,arg1,arg2);});btDiscreteDynamicsWorld.prototype["getPairCache"]=btDiscreteDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btDiscreteDynamicsWorld.prototype["getDispatchInfo"]=btDiscreteDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btDiscreteDynamicsWorld.prototype["addCollisionObject"]=btDiscreteDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2);});btDiscreteDynamicsWorld.prototype["getBroadphase"]=btDiscreteDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btDiscreteDynamicsWorld.prototype["convexSweepTest"]=btDiscreteDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4);});btDiscreteDynamicsWorld.prototype["contactPairTest"]=btDiscreteDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2);});btDiscreteDynamicsWorld.prototype["contactTest"]=btDiscreteDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2(self,arg0,arg1);});btDiscreteDynamicsWorld.prototype["addAction"]=btDiscreteDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_addAction_1(self,arg0);});btDiscreteDynamicsWorld.prototype["removeAction"]=btDiscreteDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1(self,arg0);});btDiscreteDynamicsWorld.prototype["getSolverInfo"]=btDiscreteDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btDiscreteDynamicsWorld.prototype["__destroy__"]=btDiscreteDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self);});function btConvexShape(){throw"cannot construct a btConvexShape, no constructor in IDL"}btConvexShape.prototype=Object.create(btCollisionShape.prototype);btConvexShape.prototype.constructor=btConvexShape;btConvexShape.prototype.__class__=btConvexShape;btConvexShape.__cache__={};Module["btConvexShape"]=btConvexShape;btConvexShape.prototype["setLocalScaling"]=btConvexShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexShape_setLocalScaling_1(self,arg0);});btConvexShape.prototype["calculateLocalInertia"]=btConvexShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexShape_calculateLocalInertia_2(self,arg0,arg1);});btConvexShape.prototype["setMargin"]=btConvexShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexShape_setMargin_1(self,arg0);});btConvexShape.prototype["getMargin"]=btConvexShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexShape_getMargin_0(self)});btConvexShape.prototype["__destroy__"]=btConvexShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexShape___destroy___0(self);});function btDispatcher(){throw"cannot construct a btDispatcher, no constructor in IDL"}btDispatcher.prototype=Object.create(WrapperObject.prototype);btDispatcher.prototype.constructor=btDispatcher;btDispatcher.prototype.__class__=btDispatcher;btDispatcher.__cache__={};Module["btDispatcher"]=btDispatcher;btDispatcher.prototype["getNumManifolds"]=btDispatcher.prototype.getNumManifolds=(function(){var self=this.ptr;return _emscripten_bind_btDispatcher_getNumManifolds_0(self)});btDispatcher.prototype["getManifoldByIndexInternal"]=btDispatcher.prototype.getManifoldByIndexInternal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1(self,arg0),btPersistentManifold)});btDispatcher.prototype["__destroy__"]=btDispatcher.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDispatcher___destroy___0(self);});function btGeneric6DofConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3(arg0,arg1,arg2);getCache(btGeneric6DofConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(arg0,arg1,arg2,arg3);getCache(btGeneric6DofConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btGeneric6DofConstraint)[this.ptr]=this;}btGeneric6DofConstraint.prototype=Object.create(btTypedConstraint.prototype);btGeneric6DofConstraint.prototype.constructor=btGeneric6DofConstraint;btGeneric6DofConstraint.prototype.__class__=btGeneric6DofConstraint;btGeneric6DofConstraint.__cache__={};Module["btGeneric6DofConstraint"]=btGeneric6DofConstraint;btGeneric6DofConstraint.prototype["setLinearLowerLimit"]=btGeneric6DofConstraint.prototype.setLinearLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1(self,arg0);});btGeneric6DofConstraint.prototype["setLinearUpperLimit"]=btGeneric6DofConstraint.prototype.setLinearUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1(self,arg0);});btGeneric6DofConstraint.prototype["setAngularLowerLimit"]=btGeneric6DofConstraint.prototype.setAngularLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1(self,arg0);});btGeneric6DofConstraint.prototype["setAngularUpperLimit"]=btGeneric6DofConstraint.prototype.setAngularUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1(self,arg0);});btGeneric6DofConstraint.prototype["enableFeedback"]=btGeneric6DofConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1(self,arg0);});btGeneric6DofConstraint.prototype["getBreakingImpulseThreshold"]=btGeneric6DofConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0(self)});btGeneric6DofConstraint.prototype["setBreakingImpulseThreshold"]=btGeneric6DofConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1(self,arg0);});btGeneric6DofConstraint.prototype["__destroy__"]=btGeneric6DofConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGeneric6DofConstraint___destroy___0(self);});function btStridingMeshInterface(){throw"cannot construct a btStridingMeshInterface, no constructor in IDL"}btStridingMeshInterface.prototype=Object.create(WrapperObject.prototype);btStridingMeshInterface.prototype.constructor=btStridingMeshInterface;btStridingMeshInterface.prototype.__class__=btStridingMeshInterface;btStridingMeshInterface.__cache__={};Module["btStridingMeshInterface"]=btStridingMeshInterface;btStridingMeshInterface.prototype["__destroy__"]=btStridingMeshInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btStridingMeshInterface___destroy___0(self);});function btMotionState(){throw"cannot construct a btMotionState, no constructor in IDL"}btMotionState.prototype=Object.create(WrapperObject.prototype);btMotionState.prototype.constructor=btMotionState;btMotionState.prototype.__class__=btMotionState;btMotionState.__cache__={};Module["btMotionState"]=btMotionState;btMotionState.prototype["getWorldTransform"]=btMotionState.prototype.getWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMotionState_getWorldTransform_1(self,arg0);});btMotionState.prototype["setWorldTransform"]=btMotionState.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMotionState_setWorldTransform_1(self,arg0);});btMotionState.prototype["__destroy__"]=btMotionState.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btMotionState___destroy___0(self);});function ConvexResultCallback(){throw"cannot construct a ConvexResultCallback, no constructor in IDL"}ConvexResultCallback.prototype=Object.create(WrapperObject.prototype);ConvexResultCallback.prototype.constructor=ConvexResultCallback;ConvexResultCallback.prototype.__class__=ConvexResultCallback;ConvexResultCallback.__cache__={};Module["ConvexResultCallback"]=ConvexResultCallback;ConvexResultCallback.prototype["hasHit"]=ConvexResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ConvexResultCallback_hasHit_0(self)});ConvexResultCallback.prototype["get_m_collisionFilterGroup"]=ConvexResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0(self)});ConvexResultCallback.prototype["set_m_collisionFilterGroup"]=ConvexResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1(self,arg0);});ConvexResultCallback.prototype["get_m_collisionFilterMask"]=ConvexResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0(self)});ConvexResultCallback.prototype["set_m_collisionFilterMask"]=ConvexResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1(self,arg0);});ConvexResultCallback.prototype["get_m_closestHitFraction"]=ConvexResultCallback.prototype.get_m_closestHitFraction=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0(self)});ConvexResultCallback.prototype["set_m_closestHitFraction"]=ConvexResultCallback.prototype.set_m_closestHitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1(self,arg0);});ConvexResultCallback.prototype["__destroy__"]=ConvexResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ConvexResultCallback___destroy___0(self);});function ContactResultCallback(){throw"cannot construct a ContactResultCallback, no constructor in IDL"}ContactResultCallback.prototype=Object.create(WrapperObject.prototype);ContactResultCallback.prototype.constructor=ContactResultCallback;ContactResultCallback.prototype.__class__=ContactResultCallback;ContactResultCallback.__cache__={};Module["ContactResultCallback"]=ContactResultCallback;ContactResultCallback.prototype["addSingleResult"]=ContactResultCallback.prototype.addSingleResult=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return _emscripten_bind_ContactResultCallback_addSingleResult_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6)});ContactResultCallback.prototype["__destroy__"]=ContactResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ContactResultCallback___destroy___0(self);});function btSoftBodySolver(){throw"cannot construct a btSoftBodySolver, no constructor in IDL"}btSoftBodySolver.prototype=Object.create(WrapperObject.prototype);btSoftBodySolver.prototype.constructor=btSoftBodySolver;btSoftBodySolver.prototype.__class__=btSoftBodySolver;btSoftBodySolver.__cache__={};Module["btSoftBodySolver"]=btSoftBodySolver;btSoftBodySolver.prototype["__destroy__"]=btSoftBodySolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodySolver___destroy___0(self);});function btGhostObject(){this.ptr=_emscripten_bind_btGhostObject_btGhostObject_0();getCache(btGhostObject)[this.ptr]=this;}btGhostObject.prototype=Object.create(btCollisionObject.prototype);btGhostObject.prototype.constructor=btGhostObject;btGhostObject.prototype.__class__=btGhostObject;btGhostObject.__cache__={};Module["btGhostObject"]=btGhostObject;btGhostObject.prototype["getNumOverlappingObjects"]=btGhostObject.prototype.getNumOverlappingObjects=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getNumOverlappingObjects_0(self)});btGhostObject.prototype["getOverlappingObject"]=btGhostObject.prototype.getOverlappingObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getOverlappingObject_1(self,arg0),btCollisionObject)});btGhostObject.prototype["setAnisotropicFriction"]=btGhostObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGhostObject_setAnisotropicFriction_2(self,arg0,arg1);});btGhostObject.prototype["getCollisionShape"]=btGhostObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getCollisionShape_0(self),btCollisionShape)});btGhostObject.prototype["setContactProcessingThreshold"]=btGhostObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setContactProcessingThreshold_1(self,arg0);});btGhostObject.prototype["setActivationState"]=btGhostObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setActivationState_1(self,arg0);});btGhostObject.prototype["forceActivationState"]=btGhostObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_forceActivationState_1(self,arg0);});btGhostObject.prototype["activate"]=btGhostObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btGhostObject_activate_0(self);return}_emscripten_bind_btGhostObject_activate_1(self,arg0);});btGhostObject.prototype["isActive"]=btGhostObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btGhostObject_isActive_0(self)});btGhostObject.prototype["isKinematicObject"]=btGhostObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btGhostObject_isKinematicObject_0(self)});btGhostObject.prototype["setRestitution"]=btGhostObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setRestitution_1(self,arg0);});btGhostObject.prototype["setFriction"]=btGhostObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setFriction_1(self,arg0);});btGhostObject.prototype["setRollingFriction"]=btGhostObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setRollingFriction_1(self,arg0);});btGhostObject.prototype["getWorldTransform"]=btGhostObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getWorldTransform_0(self),btTransform)});btGhostObject.prototype["getCollisionFlags"]=btGhostObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getCollisionFlags_0(self)});btGhostObject.prototype["setCollisionFlags"]=btGhostObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCollisionFlags_1(self,arg0);});btGhostObject.prototype["setWorldTransform"]=btGhostObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setWorldTransform_1(self,arg0);});btGhostObject.prototype["setCollisionShape"]=btGhostObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCollisionShape_1(self,arg0);});btGhostObject.prototype["setCcdMotionThreshold"]=btGhostObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCcdMotionThreshold_1(self,arg0);});btGhostObject.prototype["setCcdSweptSphereRadius"]=btGhostObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1(self,arg0);});btGhostObject.prototype["getUserIndex"]=btGhostObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getUserIndex_0(self)});btGhostObject.prototype["setUserIndex"]=btGhostObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setUserIndex_1(self,arg0);});btGhostObject.prototype["getUserPointer"]=btGhostObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getUserPointer_0(self),VoidPtr)});btGhostObject.prototype["setUserPointer"]=btGhostObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setUserPointer_1(self,arg0);});btGhostObject.prototype["__destroy__"]=btGhostObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGhostObject___destroy___0(self);});function btMatrix3x3(){throw"cannot construct a btMatrix3x3, no constructor in IDL"}btMatrix3x3.prototype=Object.create(WrapperObject.prototype);btMatrix3x3.prototype.constructor=btMatrix3x3;btMatrix3x3.prototype.__class__=btMatrix3x3;btMatrix3x3.__cache__={};Module["btMatrix3x3"]=btMatrix3x3;btMatrix3x3.prototype["setEulerZYX"]=btMatrix3x3.prototype.setEulerZYX=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btMatrix3x3_setEulerZYX_3(self,arg0,arg1,arg2);});btMatrix3x3.prototype["getRotation"]=btMatrix3x3.prototype.getRotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMatrix3x3_getRotation_1(self,arg0);});btMatrix3x3.prototype["getRow"]=btMatrix3x3.prototype.getRow=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btMatrix3x3_getRow_1(self,arg0),btVector3)});btMatrix3x3.prototype["__destroy__"]=btMatrix3x3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btMatrix3x3___destroy___0(self);});function btDispatcherInfo(){throw"cannot construct a btDispatcherInfo, no constructor in IDL"}btDispatcherInfo.prototype=Object.create(WrapperObject.prototype);btDispatcherInfo.prototype.constructor=btDispatcherInfo;btDispatcherInfo.prototype.__class__=btDispatcherInfo;btDispatcherInfo.__cache__={};Module["btDispatcherInfo"]=btDispatcherInfo;btDispatcherInfo.prototype["get_m_timeStep"]=btDispatcherInfo.prototype.get_m_timeStep=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_timeStep_0(self)});btDispatcherInfo.prototype["set_m_timeStep"]=btDispatcherInfo.prototype.set_m_timeStep=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_timeStep_1(self,arg0);});btDispatcherInfo.prototype["get_m_stepCount"]=btDispatcherInfo.prototype.get_m_stepCount=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_stepCount_0(self)});btDispatcherInfo.prototype["set_m_stepCount"]=btDispatcherInfo.prototype.set_m_stepCount=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_stepCount_1(self,arg0);});btDispatcherInfo.prototype["get_m_dispatchFunc"]=btDispatcherInfo.prototype.get_m_dispatchFunc=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0(self)});btDispatcherInfo.prototype["set_m_dispatchFunc"]=btDispatcherInfo.prototype.set_m_dispatchFunc=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1(self,arg0);});btDispatcherInfo.prototype["get_m_timeOfImpact"]=btDispatcherInfo.prototype.get_m_timeOfImpact=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0(self)});btDispatcherInfo.prototype["set_m_timeOfImpact"]=btDispatcherInfo.prototype.set_m_timeOfImpact=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1(self,arg0);});btDispatcherInfo.prototype["get_m_useContinuous"]=btDispatcherInfo.prototype.get_m_useContinuous=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0(self)});btDispatcherInfo.prototype["set_m_useContinuous"]=btDispatcherInfo.prototype.set_m_useContinuous=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1(self,arg0);});btDispatcherInfo.prototype["get_m_enableSatConvex"]=btDispatcherInfo.prototype.get_m_enableSatConvex=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0(self)});btDispatcherInfo.prototype["set_m_enableSatConvex"]=btDispatcherInfo.prototype.set_m_enableSatConvex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1(self,arg0);});btDispatcherInfo.prototype["get_m_enableSPU"]=btDispatcherInfo.prototype.get_m_enableSPU=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0(self)});btDispatcherInfo.prototype["set_m_enableSPU"]=btDispatcherInfo.prototype.set_m_enableSPU=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1(self,arg0);});btDispatcherInfo.prototype["get_m_useEpa"]=btDispatcherInfo.prototype.get_m_useEpa=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useEpa_0(self)});btDispatcherInfo.prototype["set_m_useEpa"]=btDispatcherInfo.prototype.set_m_useEpa=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useEpa_1(self,arg0);});btDispatcherInfo.prototype["get_m_allowedCcdPenetration"]=btDispatcherInfo.prototype.get_m_allowedCcdPenetration=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0(self)});btDispatcherInfo.prototype["set_m_allowedCcdPenetration"]=btDispatcherInfo.prototype.set_m_allowedCcdPenetration=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1(self,arg0);});btDispatcherInfo.prototype["get_m_useConvexConservativeDistanceUtil"]=btDispatcherInfo.prototype.get_m_useConvexConservativeDistanceUtil=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0(self)});btDispatcherInfo.prototype["set_m_useConvexConservativeDistanceUtil"]=btDispatcherInfo.prototype.set_m_useConvexConservativeDistanceUtil=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1(self,arg0);});btDispatcherInfo.prototype["get_m_convexConservativeDistanceThreshold"]=btDispatcherInfo.prototype.get_m_convexConservativeDistanceThreshold=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0(self)});btDispatcherInfo.prototype["set_m_convexConservativeDistanceThreshold"]=btDispatcherInfo.prototype.set_m_convexConservativeDistanceThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1(self,arg0);});btDispatcherInfo.prototype["__destroy__"]=btDispatcherInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDispatcherInfo___destroy___0(self);});function Material(){throw"cannot construct a Material, no constructor in IDL"}Material.prototype=Object.create(WrapperObject.prototype);Material.prototype.constructor=Material;Material.prototype.__class__=Material;Material.__cache__={};Module["Material"]=Material;Material.prototype["get_m_kLST"]=Material.prototype.get_m_kLST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kLST_0(self)});Material.prototype["set_m_kLST"]=Material.prototype.set_m_kLST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kLST_1(self,arg0);});Material.prototype["get_m_kAST"]=Material.prototype.get_m_kAST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kAST_0(self)});Material.prototype["set_m_kAST"]=Material.prototype.set_m_kAST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kAST_1(self,arg0);});Material.prototype["get_m_kVST"]=Material.prototype.get_m_kVST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kVST_0(self)});Material.prototype["set_m_kVST"]=Material.prototype.set_m_kVST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kVST_1(self,arg0);});Material.prototype["get_m_flags"]=Material.prototype.get_m_flags=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_flags_0(self)});Material.prototype["set_m_flags"]=Material.prototype.set_m_flags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_flags_1(self,arg0);});Material.prototype["__destroy__"]=Material.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Material___destroy___0(self);});function btWheelInfoConstructionInfo(){throw"cannot construct a btWheelInfoConstructionInfo, no constructor in IDL"}btWheelInfoConstructionInfo.prototype=Object.create(WrapperObject.prototype);btWheelInfoConstructionInfo.prototype.constructor=btWheelInfoConstructionInfo;btWheelInfoConstructionInfo.prototype.__class__=btWheelInfoConstructionInfo;btWheelInfoConstructionInfo.__cache__={};Module["btWheelInfoConstructionInfo"]=btWheelInfoConstructionInfo;btWheelInfoConstructionInfo.prototype["get_m_chassisConnectionCS"]=btWheelInfoConstructionInfo.prototype.get_m_chassisConnectionCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0(self),btVector3)});btWheelInfoConstructionInfo.prototype["set_m_chassisConnectionCS"]=btWheelInfoConstructionInfo.prototype.set_m_chassisConnectionCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_wheelDirectionCS"]=btWheelInfoConstructionInfo.prototype.get_m_wheelDirectionCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0(self),btVector3)});btWheelInfoConstructionInfo.prototype["set_m_wheelDirectionCS"]=btWheelInfoConstructionInfo.prototype.set_m_wheelDirectionCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_wheelAxleCS"]=btWheelInfoConstructionInfo.prototype.get_m_wheelAxleCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0(self),btVector3)});btWheelInfoConstructionInfo.prototype["set_m_wheelAxleCS"]=btWheelInfoConstructionInfo.prototype.set_m_wheelAxleCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_suspensionRestLength"]=btWheelInfoConstructionInfo.prototype.get_m_suspensionRestLength=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0(self)});btWheelInfoConstructionInfo.prototype["set_m_suspensionRestLength"]=btWheelInfoConstructionInfo.prototype.set_m_suspensionRestLength=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_maxSuspensionTravelCm"]=btWheelInfoConstructionInfo.prototype.get_m_maxSuspensionTravelCm=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0(self)});btWheelInfoConstructionInfo.prototype["set_m_maxSuspensionTravelCm"]=btWheelInfoConstructionInfo.prototype.set_m_maxSuspensionTravelCm=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_wheelRadius"]=btWheelInfoConstructionInfo.prototype.get_m_wheelRadius=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0(self)});btWheelInfoConstructionInfo.prototype["set_m_wheelRadius"]=btWheelInfoConstructionInfo.prototype.set_m_wheelRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_suspensionStiffness"]=btWheelInfoConstructionInfo.prototype.get_m_suspensionStiffness=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0(self)});btWheelInfoConstructionInfo.prototype["set_m_suspensionStiffness"]=btWheelInfoConstructionInfo.prototype.set_m_suspensionStiffness=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_wheelsDampingCompression"]=btWheelInfoConstructionInfo.prototype.get_m_wheelsDampingCompression=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0(self)});btWheelInfoConstructionInfo.prototype["set_m_wheelsDampingCompression"]=btWheelInfoConstructionInfo.prototype.set_m_wheelsDampingCompression=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_wheelsDampingRelaxation"]=btWheelInfoConstructionInfo.prototype.get_m_wheelsDampingRelaxation=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0(self)});btWheelInfoConstructionInfo.prototype["set_m_wheelsDampingRelaxation"]=btWheelInfoConstructionInfo.prototype.set_m_wheelsDampingRelaxation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_frictionSlip"]=btWheelInfoConstructionInfo.prototype.get_m_frictionSlip=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0(self)});btWheelInfoConstructionInfo.prototype["set_m_frictionSlip"]=btWheelInfoConstructionInfo.prototype.set_m_frictionSlip=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_maxSuspensionForce"]=btWheelInfoConstructionInfo.prototype.get_m_maxSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0(self)});btWheelInfoConstructionInfo.prototype["set_m_maxSuspensionForce"]=btWheelInfoConstructionInfo.prototype.set_m_maxSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1(self,arg0);});btWheelInfoConstructionInfo.prototype["get_m_bIsFrontWheel"]=btWheelInfoConstructionInfo.prototype.get_m_bIsFrontWheel=(function(){var self=this.ptr;return!!_emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0(self)});btWheelInfoConstructionInfo.prototype["set_m_bIsFrontWheel"]=btWheelInfoConstructionInfo.prototype.set_m_bIsFrontWheel=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1(self,arg0);});btWheelInfoConstructionInfo.prototype["__destroy__"]=btWheelInfoConstructionInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btWheelInfoConstructionInfo___destroy___0(self);});function btConvexTriangleMeshShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){this.ptr=_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1(arg0);getCache(btConvexTriangleMeshShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2(arg0,arg1);getCache(btConvexTriangleMeshShape)[this.ptr]=this;}btConvexTriangleMeshShape.prototype=Object.create(btConvexShape.prototype);btConvexTriangleMeshShape.prototype.constructor=btConvexTriangleMeshShape;btConvexTriangleMeshShape.prototype.__class__=btConvexTriangleMeshShape;btConvexTriangleMeshShape.__cache__={};Module["btConvexTriangleMeshShape"]=btConvexTriangleMeshShape;btConvexTriangleMeshShape.prototype["setLocalScaling"]=btConvexTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1(self,arg0);});btConvexTriangleMeshShape.prototype["calculateLocalInertia"]=btConvexTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1);});btConvexTriangleMeshShape.prototype["setMargin"]=btConvexTriangleMeshShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexTriangleMeshShape_setMargin_1(self,arg0);});btConvexTriangleMeshShape.prototype["getMargin"]=btConvexTriangleMeshShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexTriangleMeshShape_getMargin_0(self)});btConvexTriangleMeshShape.prototype["__destroy__"]=btConvexTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexTriangleMeshShape___destroy___0(self);});function btBroadphaseInterface(){throw"cannot construct a btBroadphaseInterface, no constructor in IDL"}btBroadphaseInterface.prototype=Object.create(WrapperObject.prototype);btBroadphaseInterface.prototype.constructor=btBroadphaseInterface;btBroadphaseInterface.prototype.__class__=btBroadphaseInterface;btBroadphaseInterface.__cache__={};Module["btBroadphaseInterface"]=btBroadphaseInterface;btBroadphaseInterface.prototype["__destroy__"]=btBroadphaseInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBroadphaseInterface___destroy___0(self);});function btRigidBodyConstructionInfo(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0,arg1,arg2);getCache(btRigidBodyConstructionInfo)[this.ptr]=this;return}this.ptr=_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0,arg1,arg2,arg3);getCache(btRigidBodyConstructionInfo)[this.ptr]=this;}btRigidBodyConstructionInfo.prototype=Object.create(WrapperObject.prototype);btRigidBodyConstructionInfo.prototype.constructor=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.prototype.__class__=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.__cache__={};Module["btRigidBodyConstructionInfo"]=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.prototype["get_m_linearDamping"]=btRigidBodyConstructionInfo.prototype.get_m_linearDamping=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_linearDamping"]=btRigidBodyConstructionInfo.prototype.set_m_linearDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_angularDamping"]=btRigidBodyConstructionInfo.prototype.get_m_angularDamping=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_angularDamping"]=btRigidBodyConstructionInfo.prototype.set_m_angularDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_friction"]=btRigidBodyConstructionInfo.prototype.get_m_friction=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0(self)});btRigidBodyConstructionInfo.prototype["set_m_friction"]=btRigidBodyConstructionInfo.prototype.set_m_friction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_rollingFriction"]=btRigidBodyConstructionInfo.prototype.get_m_rollingFriction=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0(self)});btRigidBodyConstructionInfo.prototype["set_m_rollingFriction"]=btRigidBodyConstructionInfo.prototype.set_m_rollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_restitution"]=btRigidBodyConstructionInfo.prototype.get_m_restitution=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0(self)});btRigidBodyConstructionInfo.prototype["set_m_restitution"]=btRigidBodyConstructionInfo.prototype.set_m_restitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_linearSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.get_m_linearSleepingThreshold=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0(self)});btRigidBodyConstructionInfo.prototype["set_m_linearSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.set_m_linearSleepingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_angularSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.get_m_angularSleepingThreshold=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0(self)});btRigidBodyConstructionInfo.prototype["set_m_angularSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.set_m_angularSleepingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_additionalDamping"]=btRigidBodyConstructionInfo.prototype.get_m_additionalDamping=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalDamping"]=btRigidBodyConstructionInfo.prototype.set_m_additionalDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_additionalDampingFactor"]=btRigidBodyConstructionInfo.prototype.get_m_additionalDampingFactor=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalDampingFactor"]=btRigidBodyConstructionInfo.prototype.set_m_additionalDampingFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_additionalLinearDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.get_m_additionalLinearDampingThresholdSqr=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalLinearDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.set_m_additionalLinearDampingThresholdSqr=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingThresholdSqr=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingThresholdSqr=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1(self,arg0);});btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingFactor"]=btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingFactor=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingFactor"]=btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1(self,arg0);});btRigidBodyConstructionInfo.prototype["__destroy__"]=btRigidBodyConstructionInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self);});function btCollisionConfiguration(){throw"cannot construct a btCollisionConfiguration, no constructor in IDL"}btCollisionConfiguration.prototype=Object.create(WrapperObject.prototype);btCollisionConfiguration.prototype.constructor=btCollisionConfiguration;btCollisionConfiguration.prototype.__class__=btCollisionConfiguration;btCollisionConfiguration.__cache__={};Module["btCollisionConfiguration"]=btCollisionConfiguration;btCollisionConfiguration.prototype["__destroy__"]=btCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionConfiguration___destroy___0(self);});function btPersistentManifold(){this.ptr=_emscripten_bind_btPersistentManifold_btPersistentManifold_0();getCache(btPersistentManifold)[this.ptr]=this;}btPersistentManifold.prototype=Object.create(WrapperObject.prototype);btPersistentManifold.prototype.constructor=btPersistentManifold;btPersistentManifold.prototype.__class__=btPersistentManifold;btPersistentManifold.__cache__={};Module["btPersistentManifold"]=btPersistentManifold;btPersistentManifold.prototype["getBody0"]=btPersistentManifold.prototype.getBody0=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getBody0_0(self),btCollisionObject)});btPersistentManifold.prototype["getBody1"]=btPersistentManifold.prototype.getBody1=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getBody1_0(self),btCollisionObject)});btPersistentManifold.prototype["getNumContacts"]=btPersistentManifold.prototype.getNumContacts=(function(){var self=this.ptr;return _emscripten_bind_btPersistentManifold_getNumContacts_0(self)});btPersistentManifold.prototype["getContactPoint"]=btPersistentManifold.prototype.getContactPoint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getContactPoint_1(self,arg0),btManifoldPoint)});btPersistentManifold.prototype["__destroy__"]=btPersistentManifold.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPersistentManifold___destroy___0(self);});function btCompoundShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btCompoundShape_btCompoundShape_0();getCache(btCompoundShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btCompoundShape_btCompoundShape_1(arg0);getCache(btCompoundShape)[this.ptr]=this;}btCompoundShape.prototype=Object.create(btCollisionShape.prototype);btCompoundShape.prototype.constructor=btCompoundShape;btCompoundShape.prototype.__class__=btCompoundShape;btCompoundShape.__cache__={};Module["btCompoundShape"]=btCompoundShape;btCompoundShape.prototype["addChildShape"]=btCompoundShape.prototype.addChildShape=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCompoundShape_addChildShape_2(self,arg0,arg1);});btCompoundShape.prototype["removeChildShapeByIndex"]=btCompoundShape.prototype.removeChildShapeByIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1(self,arg0);});btCompoundShape.prototype["getNumChildShapes"]=btCompoundShape.prototype.getNumChildShapes=(function(){var self=this.ptr;return _emscripten_bind_btCompoundShape_getNumChildShapes_0(self)});btCompoundShape.prototype["getChildShape"]=btCompoundShape.prototype.getChildShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btCompoundShape_getChildShape_1(self,arg0),btCollisionShape)});btCompoundShape.prototype["setMargin"]=btCompoundShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_setMargin_1(self,arg0);});btCompoundShape.prototype["getMargin"]=btCompoundShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCompoundShape_getMargin_0(self)});btCompoundShape.prototype["setLocalScaling"]=btCompoundShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_setLocalScaling_1(self,arg0);});btCompoundShape.prototype["calculateLocalInertia"]=btCompoundShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCompoundShape_calculateLocalInertia_2(self,arg0,arg1);});btCompoundShape.prototype["__destroy__"]=btCompoundShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCompoundShape___destroy___0(self);});function ClosestConvexResultCallback(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2(arg0,arg1);getCache(ClosestConvexResultCallback)[this.ptr]=this;}ClosestConvexResultCallback.prototype=Object.create(ConvexResultCallback.prototype);ClosestConvexResultCallback.prototype.constructor=ClosestConvexResultCallback;ClosestConvexResultCallback.prototype.__class__=ClosestConvexResultCallback;ClosestConvexResultCallback.__cache__={};Module["ClosestConvexResultCallback"]=ClosestConvexResultCallback;ClosestConvexResultCallback.prototype["hasHit"]=ClosestConvexResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ClosestConvexResultCallback_hasHit_0(self)});ClosestConvexResultCallback.prototype["get_m_convexFromWorld"]=ClosestConvexResultCallback.prototype.get_m_convexFromWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_convexFromWorld"]=ClosestConvexResultCallback.prototype.set_m_convexFromWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_convexToWorld"]=ClosestConvexResultCallback.prototype.get_m_convexToWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_convexToWorld"]=ClosestConvexResultCallback.prototype.set_m_convexToWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_hitNormalWorld"]=ClosestConvexResultCallback.prototype.get_m_hitNormalWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_hitNormalWorld"]=ClosestConvexResultCallback.prototype.set_m_hitNormalWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_hitPointWorld"]=ClosestConvexResultCallback.prototype.get_m_hitPointWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_hitPointWorld"]=ClosestConvexResultCallback.prototype.set_m_hitPointWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_collisionFilterGroup"]=ClosestConvexResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0(self)});ClosestConvexResultCallback.prototype["set_m_collisionFilterGroup"]=ClosestConvexResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_collisionFilterMask"]=ClosestConvexResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0(self)});ClosestConvexResultCallback.prototype["set_m_collisionFilterMask"]=ClosestConvexResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1(self,arg0);});ClosestConvexResultCallback.prototype["get_m_closestHitFraction"]=ClosestConvexResultCallback.prototype.get_m_closestHitFraction=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0(self)});ClosestConvexResultCallback.prototype["set_m_closestHitFraction"]=ClosestConvexResultCallback.prototype.set_m_closestHitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1(self,arg0);});ClosestConvexResultCallback.prototype["__destroy__"]=ClosestConvexResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ClosestConvexResultCallback___destroy___0(self);});function tMaterialArray(){throw"cannot construct a tMaterialArray, no constructor in IDL"}tMaterialArray.prototype=Object.create(WrapperObject.prototype);tMaterialArray.prototype.constructor=tMaterialArray;tMaterialArray.prototype.__class__=tMaterialArray;tMaterialArray.__cache__={};Module["tMaterialArray"]=tMaterialArray;tMaterialArray.prototype["size"]=tMaterialArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_tMaterialArray_size_0(self)});tMaterialArray.prototype["at"]=tMaterialArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_tMaterialArray_at_1(self,arg0),Material)});tMaterialArray.prototype["__destroy__"]=tMaterialArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_tMaterialArray___destroy___0(self);});function btDefaultVehicleRaycaster(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1(arg0);getCache(btDefaultVehicleRaycaster)[this.ptr]=this;}btDefaultVehicleRaycaster.prototype=Object.create(btVehicleRaycaster.prototype);btDefaultVehicleRaycaster.prototype.constructor=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.prototype.__class__=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.__cache__={};Module["btDefaultVehicleRaycaster"]=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.prototype["castRay"]=btDefaultVehicleRaycaster.prototype.castRay=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDefaultVehicleRaycaster_castRay_3(self,arg0,arg1,arg2);});btDefaultVehicleRaycaster.prototype["__destroy__"]=btDefaultVehicleRaycaster.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultVehicleRaycaster___destroy___0(self);});function btConstraintSetting(){this.ptr=_emscripten_bind_btConstraintSetting_btConstraintSetting_0();getCache(btConstraintSetting)[this.ptr]=this;}btConstraintSetting.prototype=Object.create(WrapperObject.prototype);btConstraintSetting.prototype.constructor=btConstraintSetting;btConstraintSetting.prototype.__class__=btConstraintSetting;btConstraintSetting.__cache__={};Module["btConstraintSetting"]=btConstraintSetting;btConstraintSetting.prototype["get_m_tau"]=btConstraintSetting.prototype.get_m_tau=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_tau_0(self)});btConstraintSetting.prototype["set_m_tau"]=btConstraintSetting.prototype.set_m_tau=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_tau_1(self,arg0);});btConstraintSetting.prototype["get_m_damping"]=btConstraintSetting.prototype.get_m_damping=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_damping_0(self)});btConstraintSetting.prototype["set_m_damping"]=btConstraintSetting.prototype.set_m_damping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_damping_1(self,arg0);});btConstraintSetting.prototype["get_m_impulseClamp"]=btConstraintSetting.prototype.get_m_impulseClamp=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0(self)});btConstraintSetting.prototype["set_m_impulseClamp"]=btConstraintSetting.prototype.set_m_impulseClamp=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1(self,arg0);});btConstraintSetting.prototype["__destroy__"]=btConstraintSetting.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConstraintSetting___destroy___0(self);});function LocalShapeInfo(){throw"cannot construct a LocalShapeInfo, no constructor in IDL"}LocalShapeInfo.prototype=Object.create(WrapperObject.prototype);LocalShapeInfo.prototype.constructor=LocalShapeInfo;LocalShapeInfo.prototype.__class__=LocalShapeInfo;LocalShapeInfo.__cache__={};Module["LocalShapeInfo"]=LocalShapeInfo;LocalShapeInfo.prototype["get_m_shapePart"]=LocalShapeInfo.prototype.get_m_shapePart=(function(){var self=this.ptr;return _emscripten_bind_LocalShapeInfo_get_m_shapePart_0(self)});LocalShapeInfo.prototype["set_m_shapePart"]=LocalShapeInfo.prototype.set_m_shapePart=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalShapeInfo_set_m_shapePart_1(self,arg0);});LocalShapeInfo.prototype["get_m_triangleIndex"]=LocalShapeInfo.prototype.get_m_triangleIndex=(function(){var self=this.ptr;return _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0(self)});LocalShapeInfo.prototype["set_m_triangleIndex"]=LocalShapeInfo.prototype.set_m_triangleIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1(self,arg0);});LocalShapeInfo.prototype["__destroy__"]=LocalShapeInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_LocalShapeInfo___destroy___0(self);});function btRigidBody(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btRigidBody_btRigidBody_1(arg0);getCache(btRigidBody)[this.ptr]=this;}btRigidBody.prototype=Object.create(btCollisionObject.prototype);btRigidBody.prototype.constructor=btRigidBody;btRigidBody.prototype.__class__=btRigidBody;btRigidBody.__cache__={};Module["btRigidBody"]=btRigidBody;btRigidBody.prototype["getCenterOfMassTransform"]=btRigidBody.prototype.getCenterOfMassTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getCenterOfMassTransform_0(self),btTransform)});btRigidBody.prototype["setCenterOfMassTransform"]=btRigidBody.prototype.setCenterOfMassTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCenterOfMassTransform_1(self,arg0);});btRigidBody.prototype["setSleepingThresholds"]=btRigidBody.prototype.setSleepingThresholds=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setSleepingThresholds_2(self,arg0,arg1);});btRigidBody.prototype["setDamping"]=btRigidBody.prototype.setDamping=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setDamping_2(self,arg0,arg1);});btRigidBody.prototype["setMassProps"]=btRigidBody.prototype.setMassProps=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setMassProps_2(self,arg0,arg1);});btRigidBody.prototype["setLinearFactor"]=btRigidBody.prototype.setLinearFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setLinearFactor_1(self,arg0);});btRigidBody.prototype["applyTorque"]=btRigidBody.prototype.applyTorque=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyTorque_1(self,arg0);});btRigidBody.prototype["applyLocalTorque"]=btRigidBody.prototype.applyLocalTorque=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyLocalTorque_1(self,arg0);});btRigidBody.prototype["applyForce"]=btRigidBody.prototype.applyForce=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_applyForce_2(self,arg0,arg1);});btRigidBody.prototype["applyCentralForce"]=btRigidBody.prototype.applyCentralForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralForce_1(self,arg0);});btRigidBody.prototype["applyCentralLocalForce"]=btRigidBody.prototype.applyCentralLocalForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralLocalForce_1(self,arg0);});btRigidBody.prototype["applyTorqueImpulse"]=btRigidBody.prototype.applyTorqueImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyTorqueImpulse_1(self,arg0);});btRigidBody.prototype["applyImpulse"]=btRigidBody.prototype.applyImpulse=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_applyImpulse_2(self,arg0,arg1);});btRigidBody.prototype["applyCentralImpulse"]=btRigidBody.prototype.applyCentralImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralImpulse_1(self,arg0);});btRigidBody.prototype["updateInertiaTensor"]=btRigidBody.prototype.updateInertiaTensor=(function(){var self=this.ptr;_emscripten_bind_btRigidBody_updateInertiaTensor_0(self);});btRigidBody.prototype["getLinearVelocity"]=btRigidBody.prototype.getLinearVelocity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getLinearVelocity_0(self),btVector3)});btRigidBody.prototype["getAngularVelocity"]=btRigidBody.prototype.getAngularVelocity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getAngularVelocity_0(self),btVector3)});btRigidBody.prototype["getTotalTorque"]=btRigidBody.prototype.getTotalTorque=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getTotalTorque_0(self),btVector3)});btRigidBody.prototype["setLinearVelocity"]=btRigidBody.prototype.setLinearVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setLinearVelocity_1(self,arg0);});btRigidBody.prototype["setAngularVelocity"]=btRigidBody.prototype.setAngularVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setAngularVelocity_1(self,arg0);});btRigidBody.prototype["getMotionState"]=btRigidBody.prototype.getMotionState=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self),btMotionState)});btRigidBody.prototype["setMotionState"]=btRigidBody.prototype.setMotionState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setMotionState_1(self,arg0);});btRigidBody.prototype["setAngularFactor"]=btRigidBody.prototype.setAngularFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setAngularFactor_1(self,arg0);});btRigidBody.prototype["upcast"]=btRigidBody.prototype.upcast=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRigidBody_upcast_1(self,arg0),btRigidBody)});btRigidBody.prototype["getBroadphaseProxy"]=btRigidBody.prototype.getBroadphaseProxy=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getBroadphaseProxy_0(self),btBroadphaseProxy)});btRigidBody.prototype["setAnisotropicFriction"]=btRigidBody.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setAnisotropicFriction_2(self,arg0,arg1);});btRigidBody.prototype["getCollisionShape"]=btRigidBody.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getCollisionShape_0(self),btCollisionShape)});btRigidBody.prototype["setContactProcessingThreshold"]=btRigidBody.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setContactProcessingThreshold_1(self,arg0);});btRigidBody.prototype["setActivationState"]=btRigidBody.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setActivationState_1(self,arg0);});btRigidBody.prototype["forceActivationState"]=btRigidBody.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_forceActivationState_1(self,arg0);});btRigidBody.prototype["activate"]=btRigidBody.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btRigidBody_activate_0(self);return}_emscripten_bind_btRigidBody_activate_1(self,arg0);});btRigidBody.prototype["isActive"]=btRigidBody.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBody_isActive_0(self)});btRigidBody.prototype["isKinematicObject"]=btRigidBody.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBody_isKinematicObject_0(self)});btRigidBody.prototype["setRestitution"]=btRigidBody.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setRestitution_1(self,arg0);});btRigidBody.prototype["setFriction"]=btRigidBody.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setFriction_1(self,arg0);});btRigidBody.prototype["setRollingFriction"]=btRigidBody.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setRollingFriction_1(self,arg0);});btRigidBody.prototype["getWorldTransform"]=btRigidBody.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self),btTransform)});btRigidBody.prototype["getCollisionFlags"]=btRigidBody.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btRigidBody_getCollisionFlags_0(self)});btRigidBody.prototype["setCollisionFlags"]=btRigidBody.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCollisionFlags_1(self,arg0);});btRigidBody.prototype["setWorldTransform"]=btRigidBody.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setWorldTransform_1(self,arg0);});btRigidBody.prototype["setCollisionShape"]=btRigidBody.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCollisionShape_1(self,arg0);});btRigidBody.prototype["setCcdMotionThreshold"]=btRigidBody.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCcdMotionThreshold_1(self,arg0);});btRigidBody.prototype["setCcdSweptSphereRadius"]=btRigidBody.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1(self,arg0);});btRigidBody.prototype["getUserIndex"]=btRigidBody.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btRigidBody_getUserIndex_0(self)});btRigidBody.prototype["setUserIndex"]=btRigidBody.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setUserIndex_1(self,arg0);});btRigidBody.prototype["getUserPointer"]=btRigidBody.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getUserPointer_0(self),VoidPtr)});btRigidBody.prototype["setUserPointer"]=btRigidBody.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setUserPointer_1(self,arg0);});btRigidBody.prototype["__destroy__"]=btRigidBody.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRigidBody___destroy___0(self);});function btDbvtBroadphase(){this.ptr=_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();getCache(btDbvtBroadphase)[this.ptr]=this;}btDbvtBroadphase.prototype=Object.create(WrapperObject.prototype);btDbvtBroadphase.prototype.constructor=btDbvtBroadphase;btDbvtBroadphase.prototype.__class__=btDbvtBroadphase;btDbvtBroadphase.__cache__={};Module["btDbvtBroadphase"]=btDbvtBroadphase;btDbvtBroadphase.prototype["__destroy__"]=btDbvtBroadphase.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDbvtBroadphase___destroy___0(self);});function btDefaultSoftBodySolver(){this.ptr=_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0();getCache(btDefaultSoftBodySolver)[this.ptr]=this;}btDefaultSoftBodySolver.prototype=Object.create(btSoftBodySolver.prototype);btDefaultSoftBodySolver.prototype.constructor=btDefaultSoftBodySolver;btDefaultSoftBodySolver.prototype.__class__=btDefaultSoftBodySolver;btDefaultSoftBodySolver.__cache__={};Module["btDefaultSoftBodySolver"]=btDefaultSoftBodySolver;btDefaultSoftBodySolver.prototype["__destroy__"]=btDefaultSoftBodySolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultSoftBodySolver___destroy___0(self);});function btCollisionDispatcher(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);getCache(btCollisionDispatcher)[this.ptr]=this;}btCollisionDispatcher.prototype=Object.create(btDispatcher.prototype);btCollisionDispatcher.prototype.constructor=btCollisionDispatcher;btCollisionDispatcher.prototype.__class__=btCollisionDispatcher;btCollisionDispatcher.__cache__={};Module["btCollisionDispatcher"]=btCollisionDispatcher;btCollisionDispatcher.prototype["getNumManifolds"]=btCollisionDispatcher.prototype.getNumManifolds=(function(){var self=this.ptr;return _emscripten_bind_btCollisionDispatcher_getNumManifolds_0(self)});btCollisionDispatcher.prototype["getManifoldByIndexInternal"]=btCollisionDispatcher.prototype.getManifoldByIndexInternal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1(self,arg0),btPersistentManifold)});btCollisionDispatcher.prototype["__destroy__"]=btCollisionDispatcher.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionDispatcher___destroy___0(self);});function btAxisSweep3(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0,arg1);getCache(btAxisSweep3)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0,arg1,arg2);getCache(btAxisSweep3)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0,arg1,arg2,arg3);getCache(btAxisSweep3)[this.ptr]=this;return}this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0,arg1,arg2,arg3,arg4);getCache(btAxisSweep3)[this.ptr]=this;}btAxisSweep3.prototype=Object.create(WrapperObject.prototype);btAxisSweep3.prototype.constructor=btAxisSweep3;btAxisSweep3.prototype.__class__=btAxisSweep3;btAxisSweep3.__cache__={};Module["btAxisSweep3"]=btAxisSweep3;btAxisSweep3.prototype["__destroy__"]=btAxisSweep3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btAxisSweep3___destroy___0(self);});function VoidPtr(){throw"cannot construct a VoidPtr, no constructor in IDL"}VoidPtr.prototype=Object.create(WrapperObject.prototype);VoidPtr.prototype.constructor=VoidPtr;VoidPtr.prototype.__class__=VoidPtr;VoidPtr.__cache__={};Module["VoidPtr"]=VoidPtr;VoidPtr.prototype["__destroy__"]=VoidPtr.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_VoidPtr___destroy___0(self);});function btSoftBodyWorldInfo(){this.ptr=_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0();getCache(btSoftBodyWorldInfo)[this.ptr]=this;}btSoftBodyWorldInfo.prototype=Object.create(WrapperObject.prototype);btSoftBodyWorldInfo.prototype.constructor=btSoftBodyWorldInfo;btSoftBodyWorldInfo.prototype.__class__=btSoftBodyWorldInfo;btSoftBodyWorldInfo.__cache__={};Module["btSoftBodyWorldInfo"]=btSoftBodyWorldInfo;btSoftBodyWorldInfo.prototype["get_air_density"]=btSoftBodyWorldInfo.prototype.get_air_density=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0(self)});btSoftBodyWorldInfo.prototype["set_air_density"]=btSoftBodyWorldInfo.prototype.set_air_density=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_water_density"]=btSoftBodyWorldInfo.prototype.get_water_density=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0(self)});btSoftBodyWorldInfo.prototype["set_water_density"]=btSoftBodyWorldInfo.prototype.set_water_density=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_water_offset"]=btSoftBodyWorldInfo.prototype.get_water_offset=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0(self)});btSoftBodyWorldInfo.prototype["set_water_offset"]=btSoftBodyWorldInfo.prototype.set_water_offset=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_m_maxDisplacement"]=btSoftBodyWorldInfo.prototype.get_m_maxDisplacement=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0(self)});btSoftBodyWorldInfo.prototype["set_m_maxDisplacement"]=btSoftBodyWorldInfo.prototype.set_m_maxDisplacement=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_water_normal"]=btSoftBodyWorldInfo.prototype.get_water_normal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0(self),btVector3)});btSoftBodyWorldInfo.prototype["set_water_normal"]=btSoftBodyWorldInfo.prototype.set_water_normal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_m_broadphase"]=btSoftBodyWorldInfo.prototype.get_m_broadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0(self),btBroadphaseInterface)});btSoftBodyWorldInfo.prototype["set_m_broadphase"]=btSoftBodyWorldInfo.prototype.set_m_broadphase=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_m_dispatcher"]=btSoftBodyWorldInfo.prototype.get_m_dispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0(self),btDispatcher)});btSoftBodyWorldInfo.prototype["set_m_dispatcher"]=btSoftBodyWorldInfo.prototype.set_m_dispatcher=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1(self,arg0);});btSoftBodyWorldInfo.prototype["get_m_gravity"]=btSoftBodyWorldInfo.prototype.get_m_gravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0(self),btVector3)});btSoftBodyWorldInfo.prototype["set_m_gravity"]=btSoftBodyWorldInfo.prototype.set_m_gravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1(self,arg0);});btSoftBodyWorldInfo.prototype["__destroy__"]=btSoftBodyWorldInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyWorldInfo___destroy___0(self);});function btConeTwistConstraint(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0,arg1);getCache(btConeTwistConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0,arg1,arg2);getCache(btConeTwistConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0,arg1,arg2,arg3);getCache(btConeTwistConstraint)[this.ptr]=this;}btConeTwistConstraint.prototype=Object.create(btTypedConstraint.prototype);btConeTwistConstraint.prototype.constructor=btConeTwistConstraint;btConeTwistConstraint.prototype.__class__=btConeTwistConstraint;btConeTwistConstraint.__cache__={};Module["btConeTwistConstraint"]=btConeTwistConstraint;btConeTwistConstraint.prototype["setLimit"]=btConeTwistConstraint.prototype.setLimit=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeTwistConstraint_setLimit_2(self,arg0,arg1);});btConeTwistConstraint.prototype["setAngularOnly"]=btConeTwistConstraint.prototype.setAngularOnly=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setAngularOnly_1(self,arg0);});btConeTwistConstraint.prototype["setDamping"]=btConeTwistConstraint.prototype.setDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setDamping_1(self,arg0);});btConeTwistConstraint.prototype["enableMotor"]=btConeTwistConstraint.prototype.enableMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_enableMotor_1(self,arg0);});btConeTwistConstraint.prototype["setMaxMotorImpulse"]=btConeTwistConstraint.prototype.setMaxMotorImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1(self,arg0);});btConeTwistConstraint.prototype["setMaxMotorImpulseNormalized"]=btConeTwistConstraint.prototype.setMaxMotorImpulseNormalized=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1(self,arg0);});btConeTwistConstraint.prototype["setMotorTarget"]=btConeTwistConstraint.prototype.setMotorTarget=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMotorTarget_1(self,arg0);});btConeTwistConstraint.prototype["setMotorTargetInConstraintSpace"]=btConeTwistConstraint.prototype.setMotorTargetInConstraintSpace=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1(self,arg0);});btConeTwistConstraint.prototype["enableFeedback"]=btConeTwistConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_enableFeedback_1(self,arg0);});btConeTwistConstraint.prototype["getBreakingImpulseThreshold"]=btConeTwistConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0(self)});btConeTwistConstraint.prototype["setBreakingImpulseThreshold"]=btConeTwistConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1(self,arg0);});btConeTwistConstraint.prototype["__destroy__"]=btConeTwistConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeTwistConstraint___destroy___0(self);});function btHingeConstraint(arg0,arg1,arg2,arg3,arg4,arg5,arg6){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_2(arg0,arg1);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_3(arg0,arg1,arg2);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_4(arg0,arg1,arg2,arg3);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg5===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg6===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_6(arg0,arg1,arg2,arg3,arg4,arg5);getCache(btHingeConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_7(arg0,arg1,arg2,arg3,arg4,arg5,arg6);getCache(btHingeConstraint)[this.ptr]=this;}btHingeConstraint.prototype=Object.create(btTypedConstraint.prototype);btHingeConstraint.prototype.constructor=btHingeConstraint;btHingeConstraint.prototype.__class__=btHingeConstraint;btHingeConstraint.__cache__={};Module["btHingeConstraint"]=btHingeConstraint;btHingeConstraint.prototype["setLimit"]=btHingeConstraint.prototype.setLimit=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg4===undefined){_emscripten_bind_btHingeConstraint_setLimit_4(self,arg0,arg1,arg2,arg3);return}_emscripten_bind_btHingeConstraint_setLimit_5(self,arg0,arg1,arg2,arg3,arg4);});btHingeConstraint.prototype["enableAngularMotor"]=btHingeConstraint.prototype.enableAngularMotor=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btHingeConstraint_enableAngularMotor_3(self,arg0,arg1,arg2);});btHingeConstraint.prototype["getHingeAngle"]=btHingeConstraint.prototype.getHingeAngle=(function(){var self=this.ptr;return _emscripten_bind_btHingeConstraint_getHingeAngle_0(self)});btHingeConstraint.prototype["getFrameOffsetA"]=btHingeConstraint.prototype.getFrameOffsetA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btHingeConstraint_getFrameOffsetA_0(self),btTransform)});btHingeConstraint.prototype["getFrameOffsetB"]=btHingeConstraint.prototype.getFrameOffsetB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btHingeConstraint_getFrameOffsetB_0(self),btTransform)});btHingeConstraint.prototype["getRigidBodyA"]=btHingeConstraint.prototype.getRigidBodyA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btHingeConstraint_getRigidBodyA_0(self),btRigidBody)});btHingeConstraint.prototype["getRigidBodyB"]=btHingeConstraint.prototype.getRigidBodyB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btHingeConstraint_getRigidBodyB_0(self),btRigidBody)});btHingeConstraint.prototype["setAngularOnly"]=btHingeConstraint.prototype.setAngularOnly=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setAngularOnly_1(self,arg0);});btHingeConstraint.prototype["enableMotor"]=btHingeConstraint.prototype.enableMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_enableMotor_1(self,arg0);});btHingeConstraint.prototype["setMaxMotorImpulse"]=btHingeConstraint.prototype.setMaxMotorImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1(self,arg0);});btHingeConstraint.prototype["setMotorTarget"]=btHingeConstraint.prototype.setMotorTarget=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btHingeConstraint_setMotorTarget_2(self,arg0,arg1);});btHingeConstraint.prototype["enableFeedback"]=btHingeConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_enableFeedback_1(self,arg0);});btHingeConstraint.prototype["getBreakingImpulseThreshold"]=btHingeConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0(self)});btHingeConstraint.prototype["setBreakingImpulseThreshold"]=btHingeConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1(self,arg0);});btHingeConstraint.prototype["__destroy__"]=btHingeConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btHingeConstraint___destroy___0(self);});function btConeShapeZ(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShapeZ_btConeShapeZ_2(arg0,arg1);getCache(btConeShapeZ)[this.ptr]=this;}btConeShapeZ.prototype=Object.create(btConeShape.prototype);btConeShapeZ.prototype.constructor=btConeShapeZ;btConeShapeZ.prototype.__class__=btConeShapeZ;btConeShapeZ.__cache__={};Module["btConeShapeZ"]=btConeShapeZ;btConeShapeZ.prototype["setLocalScaling"]=btConeShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShapeZ_setLocalScaling_1(self,arg0);});btConeShapeZ.prototype["calculateLocalInertia"]=btConeShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShapeZ_calculateLocalInertia_2(self,arg0,arg1);});btConeShapeZ.prototype["__destroy__"]=btConeShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShapeZ___destroy___0(self);});function btConeShapeX(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShapeX_btConeShapeX_2(arg0,arg1);getCache(btConeShapeX)[this.ptr]=this;}btConeShapeX.prototype=Object.create(btConeShape.prototype);btConeShapeX.prototype.constructor=btConeShapeX;btConeShapeX.prototype.__class__=btConeShapeX;btConeShapeX.__cache__={};Module["btConeShapeX"]=btConeShapeX;btConeShapeX.prototype["setLocalScaling"]=btConeShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShapeX_setLocalScaling_1(self,arg0);});btConeShapeX.prototype["calculateLocalInertia"]=btConeShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShapeX_calculateLocalInertia_2(self,arg0,arg1);});btConeShapeX.prototype["__destroy__"]=btConeShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShapeX___destroy___0(self);});function btTriangleMesh(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_0();getCache(btTriangleMesh)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_1(arg0);getCache(btTriangleMesh)[this.ptr]=this;return}this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_2(arg0,arg1);getCache(btTriangleMesh)[this.ptr]=this;}btTriangleMesh.prototype=Object.create(btStridingMeshInterface.prototype);btTriangleMesh.prototype.constructor=btTriangleMesh;btTriangleMesh.prototype.__class__=btTriangleMesh;btTriangleMesh.__cache__={};Module["btTriangleMesh"]=btTriangleMesh;btTriangleMesh.prototype["addTriangle"]=btTriangleMesh.prototype.addTriangle=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){_emscripten_bind_btTriangleMesh_addTriangle_3(self,arg0,arg1,arg2);return}_emscripten_bind_btTriangleMesh_addTriangle_4(self,arg0,arg1,arg2,arg3);});btTriangleMesh.prototype["__destroy__"]=btTriangleMesh.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTriangleMesh___destroy___0(self);});function btConvexHullShape(){this.ptr=_emscripten_bind_btConvexHullShape_btConvexHullShape_0();getCache(btConvexHullShape)[this.ptr]=this;}btConvexHullShape.prototype=Object.create(btCollisionShape.prototype);btConvexHullShape.prototype.constructor=btConvexHullShape;btConvexHullShape.prototype.__class__=btConvexHullShape;btConvexHullShape.__cache__={};Module["btConvexHullShape"]=btConvexHullShape;btConvexHullShape.prototype["addPoint"]=btConvexHullShape.prototype.addPoint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btConvexHullShape_addPoint_1(self,arg0);return}_emscripten_bind_btConvexHullShape_addPoint_2(self,arg0,arg1);});btConvexHullShape.prototype["setMargin"]=btConvexHullShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexHullShape_setMargin_1(self,arg0);});btConvexHullShape.prototype["getMargin"]=btConvexHullShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexHullShape_getMargin_0(self)});btConvexHullShape.prototype["setLocalScaling"]=btConvexHullShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexHullShape_setLocalScaling_1(self,arg0);});btConvexHullShape.prototype["calculateLocalInertia"]=btConvexHullShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexHullShape_calculateLocalInertia_2(self,arg0,arg1);});btConvexHullShape.prototype["__destroy__"]=btConvexHullShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexHullShape___destroy___0(self);});function btVehicleTuning(){this.ptr=_emscripten_bind_btVehicleTuning_btVehicleTuning_0();getCache(btVehicleTuning)[this.ptr]=this;}btVehicleTuning.prototype=Object.create(WrapperObject.prototype);btVehicleTuning.prototype.constructor=btVehicleTuning;btVehicleTuning.prototype.__class__=btVehicleTuning;btVehicleTuning.__cache__={};Module["btVehicleTuning"]=btVehicleTuning;btVehicleTuning.prototype["get_m_suspensionStiffness"]=btVehicleTuning.prototype.get_m_suspensionStiffness=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0(self)});btVehicleTuning.prototype["set_m_suspensionStiffness"]=btVehicleTuning.prototype.set_m_suspensionStiffness=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1(self,arg0);});btVehicleTuning.prototype["get_m_suspensionCompression"]=btVehicleTuning.prototype.get_m_suspensionCompression=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0(self)});btVehicleTuning.prototype["set_m_suspensionCompression"]=btVehicleTuning.prototype.set_m_suspensionCompression=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1(self,arg0);});btVehicleTuning.prototype["get_m_suspensionDamping"]=btVehicleTuning.prototype.get_m_suspensionDamping=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0(self)});btVehicleTuning.prototype["set_m_suspensionDamping"]=btVehicleTuning.prototype.set_m_suspensionDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1(self,arg0);});btVehicleTuning.prototype["get_m_maxSuspensionTravelCm"]=btVehicleTuning.prototype.get_m_maxSuspensionTravelCm=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0(self)});btVehicleTuning.prototype["set_m_maxSuspensionTravelCm"]=btVehicleTuning.prototype.set_m_maxSuspensionTravelCm=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1(self,arg0);});btVehicleTuning.prototype["get_m_frictionSlip"]=btVehicleTuning.prototype.get_m_frictionSlip=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0(self)});btVehicleTuning.prototype["set_m_frictionSlip"]=btVehicleTuning.prototype.set_m_frictionSlip=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1(self,arg0);});btVehicleTuning.prototype["get_m_maxSuspensionForce"]=btVehicleTuning.prototype.get_m_maxSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0(self)});btVehicleTuning.prototype["set_m_maxSuspensionForce"]=btVehicleTuning.prototype.set_m_maxSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1(self,arg0);});function btCylinderShapeX(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1(arg0);getCache(btCylinderShapeX)[this.ptr]=this;}btCylinderShapeX.prototype=Object.create(btCylinderShape.prototype);btCylinderShapeX.prototype.constructor=btCylinderShapeX;btCylinderShapeX.prototype.__class__=btCylinderShapeX;btCylinderShapeX.__cache__={};Module["btCylinderShapeX"]=btCylinderShapeX;btCylinderShapeX.prototype["setMargin"]=btCylinderShapeX.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeX_setMargin_1(self,arg0);});btCylinderShapeX.prototype["getMargin"]=btCylinderShapeX.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShapeX_getMargin_0(self)});btCylinderShapeX.prototype["setLocalScaling"]=btCylinderShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeX_setLocalScaling_1(self,arg0);});btCylinderShapeX.prototype["calculateLocalInertia"]=btCylinderShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2(self,arg0,arg1);});btCylinderShapeX.prototype["__destroy__"]=btCylinderShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShapeX___destroy___0(self);});function btCollisionObjectWrapper(){throw"cannot construct a btCollisionObjectWrapper, no constructor in IDL"}btCollisionObjectWrapper.prototype=Object.create(WrapperObject.prototype);btCollisionObjectWrapper.prototype.constructor=btCollisionObjectWrapper;btCollisionObjectWrapper.prototype.__class__=btCollisionObjectWrapper;btCollisionObjectWrapper.__cache__={};Module["btCollisionObjectWrapper"]=btCollisionObjectWrapper;function btDefaultMotionState(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0();getCache(btDefaultMotionState)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0);getCache(btDefaultMotionState)[this.ptr]=this;return}this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0,arg1);getCache(btDefaultMotionState)[this.ptr]=this;}btDefaultMotionState.prototype=Object.create(btMotionState.prototype);btDefaultMotionState.prototype.constructor=btDefaultMotionState;btDefaultMotionState.prototype.__class__=btDefaultMotionState;btDefaultMotionState.__cache__={};Module["btDefaultMotionState"]=btDefaultMotionState;btDefaultMotionState.prototype["getWorldTransform"]=btDefaultMotionState.prototype.getWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_getWorldTransform_1(self,arg0);});btDefaultMotionState.prototype["setWorldTransform"]=btDefaultMotionState.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_setWorldTransform_1(self,arg0);});btDefaultMotionState.prototype["get_m_graphicsWorldTrans"]=btDefaultMotionState.prototype.get_m_graphicsWorldTrans=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0(self),btTransform)});btDefaultMotionState.prototype["set_m_graphicsWorldTrans"]=btDefaultMotionState.prototype.set_m_graphicsWorldTrans=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1(self,arg0);});btDefaultMotionState.prototype["__destroy__"]=btDefaultMotionState.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultMotionState___destroy___0(self);});function btWheelInfo(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btWheelInfo_btWheelInfo_1(arg0);getCache(btWheelInfo)[this.ptr]=this;}btWheelInfo.prototype=Object.create(WrapperObject.prototype);btWheelInfo.prototype.constructor=btWheelInfo;btWheelInfo.prototype.__class__=btWheelInfo;btWheelInfo.__cache__={};Module["btWheelInfo"]=btWheelInfo;btWheelInfo.prototype["getSuspensionRestLength"]=btWheelInfo.prototype.getSuspensionRestLength=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_getSuspensionRestLength_0(self)});btWheelInfo.prototype["updateWheel"]=btWheelInfo.prototype.updateWheel=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btWheelInfo_updateWheel_2(self,arg0,arg1);});btWheelInfo.prototype["get_m_suspensionStiffness"]=btWheelInfo.prototype.get_m_suspensionStiffness=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0(self)});btWheelInfo.prototype["set_m_suspensionStiffness"]=btWheelInfo.prototype.set_m_suspensionStiffness=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1(self,arg0);});btWheelInfo.prototype["get_m_frictionSlip"]=btWheelInfo.prototype.get_m_frictionSlip=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_frictionSlip_0(self)});btWheelInfo.prototype["set_m_frictionSlip"]=btWheelInfo.prototype.set_m_frictionSlip=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_frictionSlip_1(self,arg0);});btWheelInfo.prototype["get_m_engineForce"]=btWheelInfo.prototype.get_m_engineForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_engineForce_0(self)});btWheelInfo.prototype["set_m_engineForce"]=btWheelInfo.prototype.set_m_engineForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_engineForce_1(self,arg0);});btWheelInfo.prototype["get_m_rollInfluence"]=btWheelInfo.prototype.get_m_rollInfluence=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_rollInfluence_0(self)});btWheelInfo.prototype["set_m_rollInfluence"]=btWheelInfo.prototype.set_m_rollInfluence=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_rollInfluence_1(self,arg0);});btWheelInfo.prototype["get_m_suspensionRestLength1"]=btWheelInfo.prototype.get_m_suspensionRestLength1=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0(self)});btWheelInfo.prototype["set_m_suspensionRestLength1"]=btWheelInfo.prototype.set_m_suspensionRestLength1=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1(self,arg0);});btWheelInfo.prototype["get_m_wheelsRadius"]=btWheelInfo.prototype.get_m_wheelsRadius=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0(self)});btWheelInfo.prototype["set_m_wheelsRadius"]=btWheelInfo.prototype.set_m_wheelsRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1(self,arg0);});btWheelInfo.prototype["get_m_wheelsDampingCompression"]=btWheelInfo.prototype.get_m_wheelsDampingCompression=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0(self)});btWheelInfo.prototype["set_m_wheelsDampingCompression"]=btWheelInfo.prototype.set_m_wheelsDampingCompression=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1(self,arg0);});btWheelInfo.prototype["get_m_wheelsDampingRelaxation"]=btWheelInfo.prototype.get_m_wheelsDampingRelaxation=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0(self)});btWheelInfo.prototype["set_m_wheelsDampingRelaxation"]=btWheelInfo.prototype.set_m_wheelsDampingRelaxation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1(self,arg0);});btWheelInfo.prototype["get_m_steering"]=btWheelInfo.prototype.get_m_steering=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_steering_0(self)});btWheelInfo.prototype["set_m_steering"]=btWheelInfo.prototype.set_m_steering=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_steering_1(self,arg0);});btWheelInfo.prototype["get_m_maxSuspensionForce"]=btWheelInfo.prototype.get_m_maxSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0(self)});btWheelInfo.prototype["set_m_maxSuspensionForce"]=btWheelInfo.prototype.set_m_maxSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1(self,arg0);});btWheelInfo.prototype["get_m_maxSuspensionTravelCm"]=btWheelInfo.prototype.get_m_maxSuspensionTravelCm=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0(self)});btWheelInfo.prototype["set_m_maxSuspensionTravelCm"]=btWheelInfo.prototype.set_m_maxSuspensionTravelCm=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1(self,arg0);});btWheelInfo.prototype["get_m_wheelsSuspensionForce"]=btWheelInfo.prototype.get_m_wheelsSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0(self)});btWheelInfo.prototype["set_m_wheelsSuspensionForce"]=btWheelInfo.prototype.set_m_wheelsSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1(self,arg0);});btWheelInfo.prototype["get_m_bIsFrontWheel"]=btWheelInfo.prototype.get_m_bIsFrontWheel=(function(){var self=this.ptr;return!!_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0(self)});btWheelInfo.prototype["set_m_bIsFrontWheel"]=btWheelInfo.prototype.set_m_bIsFrontWheel=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1(self,arg0);});btWheelInfo.prototype["get_m_raycastInfo"]=btWheelInfo.prototype.get_m_raycastInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_raycastInfo_0(self),RaycastInfo)});btWheelInfo.prototype["set_m_raycastInfo"]=btWheelInfo.prototype.set_m_raycastInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_raycastInfo_1(self,arg0);});btWheelInfo.prototype["get_m_chassisConnectionPointCS"]=btWheelInfo.prototype.get_m_chassisConnectionPointCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0(self),btVector3)});btWheelInfo.prototype["set_m_chassisConnectionPointCS"]=btWheelInfo.prototype.set_m_chassisConnectionPointCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1(self,arg0);});btWheelInfo.prototype["get_m_worldTransform"]=btWheelInfo.prototype.get_m_worldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_worldTransform_0(self),btTransform)});btWheelInfo.prototype["set_m_worldTransform"]=btWheelInfo.prototype.set_m_worldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_worldTransform_1(self,arg0);});btWheelInfo.prototype["get_m_wheelDirectionCS"]=btWheelInfo.prototype.get_m_wheelDirectionCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0(self),btVector3)});btWheelInfo.prototype["set_m_wheelDirectionCS"]=btWheelInfo.prototype.set_m_wheelDirectionCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1(self,arg0);});btWheelInfo.prototype["get_m_wheelAxleCS"]=btWheelInfo.prototype.get_m_wheelAxleCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0(self),btVector3)});btWheelInfo.prototype["set_m_wheelAxleCS"]=btWheelInfo.prototype.set_m_wheelAxleCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1(self,arg0);});btWheelInfo.prototype["get_m_rotation"]=btWheelInfo.prototype.get_m_rotation=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_rotation_0(self)});btWheelInfo.prototype["set_m_rotation"]=btWheelInfo.prototype.set_m_rotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_rotation_1(self,arg0);});btWheelInfo.prototype["get_m_deltaRotation"]=btWheelInfo.prototype.get_m_deltaRotation=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_deltaRotation_0(self)});btWheelInfo.prototype["set_m_deltaRotation"]=btWheelInfo.prototype.set_m_deltaRotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_deltaRotation_1(self,arg0);});btWheelInfo.prototype["get_m_brake"]=btWheelInfo.prototype.get_m_brake=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_brake_0(self)});btWheelInfo.prototype["set_m_brake"]=btWheelInfo.prototype.set_m_brake=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_brake_1(self,arg0);});btWheelInfo.prototype["get_m_clippedInvContactDotSuspension"]=btWheelInfo.prototype.get_m_clippedInvContactDotSuspension=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0(self)});btWheelInfo.prototype["set_m_clippedInvContactDotSuspension"]=btWheelInfo.prototype.set_m_clippedInvContactDotSuspension=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1(self,arg0);});btWheelInfo.prototype["get_m_suspensionRelativeVelocity"]=btWheelInfo.prototype.get_m_suspensionRelativeVelocity=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0(self)});btWheelInfo.prototype["set_m_suspensionRelativeVelocity"]=btWheelInfo.prototype.set_m_suspensionRelativeVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1(self,arg0);});btWheelInfo.prototype["get_m_skidInfo"]=btWheelInfo.prototype.get_m_skidInfo=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_skidInfo_0(self)});btWheelInfo.prototype["set_m_skidInfo"]=btWheelInfo.prototype.set_m_skidInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_skidInfo_1(self,arg0);});btWheelInfo.prototype["__destroy__"]=btWheelInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btWheelInfo___destroy___0(self);});function btVector4(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_0();getCache(btVector4)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_1(arg0);getCache(btVector4)[this.ptr]=this;return}if(arg2===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_2(arg0,arg1);getCache(btVector4)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_3(arg0,arg1,arg2);getCache(btVector4)[this.ptr]=this;return}this.ptr=_emscripten_bind_btVector4_btVector4_4(arg0,arg1,arg2,arg3);getCache(btVector4)[this.ptr]=this;}btVector4.prototype=Object.create(btVector3.prototype);btVector4.prototype.constructor=btVector4;btVector4.prototype.__class__=btVector4;btVector4.__cache__={};Module["btVector4"]=btVector4;btVector4.prototype["w"]=btVector4.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btVector4_w_0(self)});btVector4.prototype["setValue"]=btVector4.prototype.setValue=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btVector4_setValue_4(self,arg0,arg1,arg2,arg3);});btVector4.prototype["length"]=btVector4.prototype.length=(function(){var self=this.ptr;return _emscripten_bind_btVector4_length_0(self)});btVector4.prototype["x"]=btVector4.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btVector4_x_0(self)});btVector4.prototype["y"]=btVector4.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btVector4_y_0(self)});btVector4.prototype["z"]=btVector4.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btVector4_z_0(self)});btVector4.prototype["setX"]=btVector4.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setX_1(self,arg0);});btVector4.prototype["setY"]=btVector4.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setY_1(self,arg0);});btVector4.prototype["setZ"]=btVector4.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setZ_1(self,arg0);});btVector4.prototype["normalize"]=btVector4.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btVector4_normalize_0(self);});btVector4.prototype["dot"]=btVector4.prototype.dot=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btVector4_dot_1(self,arg0)});btVector4.prototype["normalized"]=btVector4.prototype.normalized=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btVector4_normalized_0(self),btVector3)});btVector4.prototype["rotate"]=btVector4.prototype.rotate=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;return wrapPointer(_emscripten_bind_btVector4_rotate_2(self,arg0,arg1),btVector3)});btVector4.prototype["op_mul"]=btVector4.prototype.op_mul=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self,arg0),btVector3)});btVector4.prototype["op_add"]=btVector4.prototype.op_add=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_add_1(self,arg0),btVector3)});btVector4.prototype["op_sub"]=btVector4.prototype.op_sub=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_sub_1(self,arg0),btVector3)});btVector4.prototype["__destroy__"]=btVector4.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVector4___destroy___0(self);});function btDefaultCollisionConstructionInfo(){this.ptr=_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();getCache(btDefaultCollisionConstructionInfo)[this.ptr]=this;}btDefaultCollisionConstructionInfo.prototype=Object.create(WrapperObject.prototype);btDefaultCollisionConstructionInfo.prototype.constructor=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.prototype.__class__=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.__cache__={};Module["btDefaultCollisionConstructionInfo"]=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.prototype["__destroy__"]=btDefaultCollisionConstructionInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self);});function btVehicleRaycasterResult(){throw"cannot construct a btVehicleRaycasterResult, no constructor in IDL"}btVehicleRaycasterResult.prototype=Object.create(WrapperObject.prototype);btVehicleRaycasterResult.prototype.constructor=btVehicleRaycasterResult;btVehicleRaycasterResult.prototype.__class__=btVehicleRaycasterResult;btVehicleRaycasterResult.__cache__={};Module["btVehicleRaycasterResult"]=btVehicleRaycasterResult;btVehicleRaycasterResult.prototype["get_m_hitPointInWorld"]=btVehicleRaycasterResult.prototype.get_m_hitPointInWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0(self),btVector3)});btVehicleRaycasterResult.prototype["set_m_hitPointInWorld"]=btVehicleRaycasterResult.prototype.set_m_hitPointInWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1(self,arg0);});btVehicleRaycasterResult.prototype["get_m_hitNormalInWorld"]=btVehicleRaycasterResult.prototype.get_m_hitNormalInWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0(self),btVector3)});btVehicleRaycasterResult.prototype["set_m_hitNormalInWorld"]=btVehicleRaycasterResult.prototype.set_m_hitNormalInWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1(self,arg0);});btVehicleRaycasterResult.prototype["get_m_distFraction"]=btVehicleRaycasterResult.prototype.get_m_distFraction=(function(){var self=this.ptr;return _emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0(self)});btVehicleRaycasterResult.prototype["set_m_distFraction"]=btVehicleRaycasterResult.prototype.set_m_distFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1(self,arg0);});btVehicleRaycasterResult.prototype["__destroy__"]=btVehicleRaycasterResult.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVehicleRaycasterResult___destroy___0(self);});function btConstraintSolver(){throw"cannot construct a btConstraintSolver, no constructor in IDL"}btConstraintSolver.prototype=Object.create(WrapperObject.prototype);btConstraintSolver.prototype.constructor=btConstraintSolver;btConstraintSolver.prototype.__class__=btConstraintSolver;btConstraintSolver.__cache__={};Module["btConstraintSolver"]=btConstraintSolver;btConstraintSolver.prototype["__destroy__"]=btConstraintSolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConstraintSolver___destroy___0(self);});function btRaycastVehicle(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;this.ptr=_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3(arg0,arg1,arg2);getCache(btRaycastVehicle)[this.ptr]=this;}btRaycastVehicle.prototype=Object.create(btActionInterface.prototype);btRaycastVehicle.prototype.constructor=btRaycastVehicle;btRaycastVehicle.prototype.__class__=btRaycastVehicle;btRaycastVehicle.__cache__={};Module["btRaycastVehicle"]=btRaycastVehicle;btRaycastVehicle.prototype["applyEngineForce"]=btRaycastVehicle.prototype.applyEngineForce=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_applyEngineForce_2(self,arg0,arg1);});btRaycastVehicle.prototype["setSteeringValue"]=btRaycastVehicle.prototype.setSteeringValue=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_setSteeringValue_2(self,arg0,arg1);});btRaycastVehicle.prototype["getWheelTransformWS"]=btRaycastVehicle.prototype.getWheelTransformWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1(self,arg0),btTransform)});btRaycastVehicle.prototype["updateWheelTransform"]=btRaycastVehicle.prototype.updateWheelTransform=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_updateWheelTransform_2(self,arg0,arg1);});btRaycastVehicle.prototype["addWheel"]=btRaycastVehicle.prototype.addWheel=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_addWheel_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6),btWheelInfo)});btRaycastVehicle.prototype["getNumWheels"]=btRaycastVehicle.prototype.getNumWheels=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getNumWheels_0(self)});btRaycastVehicle.prototype["getRigidBody"]=btRaycastVehicle.prototype.getRigidBody=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getRigidBody_0(self),btRigidBody)});btRaycastVehicle.prototype["getWheelInfo"]=btRaycastVehicle.prototype.getWheelInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelInfo_1(self,arg0),btWheelInfo)});btRaycastVehicle.prototype["setBrake"]=btRaycastVehicle.prototype.setBrake=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_setBrake_2(self,arg0,arg1);});btRaycastVehicle.prototype["setCoordinateSystem"]=btRaycastVehicle.prototype.setCoordinateSystem=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3(self,arg0,arg1,arg2);});btRaycastVehicle.prototype["getCurrentSpeedKmHour"]=btRaycastVehicle.prototype.getCurrentSpeedKmHour=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0(self)});btRaycastVehicle.prototype["getChassisWorldTransform"]=btRaycastVehicle.prototype.getChassisWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0(self),btTransform)});btRaycastVehicle.prototype["rayCast"]=btRaycastVehicle.prototype.rayCast=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btRaycastVehicle_rayCast_1(self,arg0)});btRaycastVehicle.prototype["updateVehicle"]=btRaycastVehicle.prototype.updateVehicle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_updateVehicle_1(self,arg0);});btRaycastVehicle.prototype["resetSuspension"]=btRaycastVehicle.prototype.resetSuspension=(function(){var self=this.ptr;_emscripten_bind_btRaycastVehicle_resetSuspension_0(self);});btRaycastVehicle.prototype["getSteeringValue"]=btRaycastVehicle.prototype.getSteeringValue=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btRaycastVehicle_getSteeringValue_1(self,arg0)});btRaycastVehicle.prototype["updateWheelTransformsWS"]=btRaycastVehicle.prototype.updateWheelTransformsWS=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1(self,arg0);return}_emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2(self,arg0,arg1);});btRaycastVehicle.prototype["setPitchControl"]=btRaycastVehicle.prototype.setPitchControl=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_setPitchControl_1(self,arg0);});btRaycastVehicle.prototype["updateSuspension"]=btRaycastVehicle.prototype.updateSuspension=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_updateSuspension_1(self,arg0);});btRaycastVehicle.prototype["updateFriction"]=btRaycastVehicle.prototype.updateFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_updateFriction_1(self,arg0);});btRaycastVehicle.prototype["getRightAxis"]=btRaycastVehicle.prototype.getRightAxis=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getRightAxis_0(self)});btRaycastVehicle.prototype["getUpAxis"]=btRaycastVehicle.prototype.getUpAxis=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getUpAxis_0(self)});btRaycastVehicle.prototype["getForwardAxis"]=btRaycastVehicle.prototype.getForwardAxis=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getForwardAxis_0(self)});btRaycastVehicle.prototype["getForwardVector"]=btRaycastVehicle.prototype.getForwardVector=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getForwardVector_0(self),btVector3)});btRaycastVehicle.prototype["getUserConstraintType"]=btRaycastVehicle.prototype.getUserConstraintType=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getUserConstraintType_0(self)});btRaycastVehicle.prototype["setUserConstraintType"]=btRaycastVehicle.prototype.setUserConstraintType=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_setUserConstraintType_1(self,arg0);});btRaycastVehicle.prototype["setUserConstraintId"]=btRaycastVehicle.prototype.setUserConstraintId=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRaycastVehicle_setUserConstraintId_1(self,arg0);});btRaycastVehicle.prototype["getUserConstraintId"]=btRaycastVehicle.prototype.getUserConstraintId=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getUserConstraintId_0(self)});btRaycastVehicle.prototype["updateAction"]=btRaycastVehicle.prototype.updateAction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_updateAction_2(self,arg0,arg1);});btRaycastVehicle.prototype["__destroy__"]=btRaycastVehicle.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRaycastVehicle___destroy___0(self);});function btGhostPairCallback(){this.ptr=_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0();getCache(btGhostPairCallback)[this.ptr]=this;}btGhostPairCallback.prototype=Object.create(WrapperObject.prototype);btGhostPairCallback.prototype.constructor=btGhostPairCallback;btGhostPairCallback.prototype.__class__=btGhostPairCallback;btGhostPairCallback.__cache__={};Module["btGhostPairCallback"]=btGhostPairCallback;btGhostPairCallback.prototype["__destroy__"]=btGhostPairCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGhostPairCallback___destroy___0(self);});function btCylinderShapeZ(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1(arg0);getCache(btCylinderShapeZ)[this.ptr]=this;}btCylinderShapeZ.prototype=Object.create(btCylinderShape.prototype);btCylinderShapeZ.prototype.constructor=btCylinderShapeZ;btCylinderShapeZ.prototype.__class__=btCylinderShapeZ;btCylinderShapeZ.__cache__={};Module["btCylinderShapeZ"]=btCylinderShapeZ;btCylinderShapeZ.prototype["setMargin"]=btCylinderShapeZ.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeZ_setMargin_1(self,arg0);});btCylinderShapeZ.prototype["getMargin"]=btCylinderShapeZ.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShapeZ_getMargin_0(self)});btCylinderShapeZ.prototype["setLocalScaling"]=btCylinderShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeZ_setLocalScaling_1(self,arg0);});btCylinderShapeZ.prototype["calculateLocalInertia"]=btCylinderShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2(self,arg0,arg1);});btCylinderShapeZ.prototype["__destroy__"]=btCylinderShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShapeZ___destroy___0(self);});function btSequentialImpulseConstraintSolver(){this.ptr=_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();getCache(btSequentialImpulseConstraintSolver)[this.ptr]=this;}btSequentialImpulseConstraintSolver.prototype=Object.create(WrapperObject.prototype);btSequentialImpulseConstraintSolver.prototype.constructor=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.prototype.__class__=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.__cache__={};Module["btSequentialImpulseConstraintSolver"]=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.prototype["__destroy__"]=btSequentialImpulseConstraintSolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self);});function RaycastInfo(){throw"cannot construct a RaycastInfo, no constructor in IDL"}RaycastInfo.prototype=Object.create(WrapperObject.prototype);RaycastInfo.prototype.constructor=RaycastInfo;RaycastInfo.prototype.__class__=RaycastInfo;RaycastInfo.__cache__={};Module["RaycastInfo"]=RaycastInfo;RaycastInfo.prototype["get_m_contactNormalWS"]=RaycastInfo.prototype.get_m_contactNormalWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0(self),btVector3)});RaycastInfo.prototype["set_m_contactNormalWS"]=RaycastInfo.prototype.set_m_contactNormalWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1(self,arg0);});RaycastInfo.prototype["get_m_contactPointWS"]=RaycastInfo.prototype.get_m_contactPointWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactPointWS_0(self),btVector3)});RaycastInfo.prototype["set_m_contactPointWS"]=RaycastInfo.prototype.set_m_contactPointWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_contactPointWS_1(self,arg0);});RaycastInfo.prototype["get_m_suspensionLength"]=RaycastInfo.prototype.get_m_suspensionLength=(function(){var self=this.ptr;return _emscripten_bind_RaycastInfo_get_m_suspensionLength_0(self)});RaycastInfo.prototype["set_m_suspensionLength"]=RaycastInfo.prototype.set_m_suspensionLength=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_suspensionLength_1(self,arg0);});RaycastInfo.prototype["get_m_hardPointWS"]=RaycastInfo.prototype.get_m_hardPointWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_hardPointWS_0(self),btVector3)});RaycastInfo.prototype["set_m_hardPointWS"]=RaycastInfo.prototype.set_m_hardPointWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_hardPointWS_1(self,arg0);});RaycastInfo.prototype["get_m_wheelDirectionWS"]=RaycastInfo.prototype.get_m_wheelDirectionWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0(self),btVector3)});RaycastInfo.prototype["set_m_wheelDirectionWS"]=RaycastInfo.prototype.set_m_wheelDirectionWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1(self,arg0);});RaycastInfo.prototype["get_m_wheelAxleWS"]=RaycastInfo.prototype.get_m_wheelAxleWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0(self),btVector3)});RaycastInfo.prototype["set_m_wheelAxleWS"]=RaycastInfo.prototype.set_m_wheelAxleWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1(self,arg0);});RaycastInfo.prototype["get_m_isInContact"]=RaycastInfo.prototype.get_m_isInContact=(function(){var self=this.ptr;return!!_emscripten_bind_RaycastInfo_get_m_isInContact_0(self)});RaycastInfo.prototype["set_m_isInContact"]=RaycastInfo.prototype.set_m_isInContact=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_isInContact_1(self,arg0);});RaycastInfo.prototype["get_m_groundObject"]=RaycastInfo.prototype.get_m_groundObject=(function(){var self=this.ptr;return _emscripten_bind_RaycastInfo_get_m_groundObject_0(self)});RaycastInfo.prototype["set_m_groundObject"]=RaycastInfo.prototype.set_m_groundObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_groundObject_1(self,arg0);});RaycastInfo.prototype["__destroy__"]=RaycastInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_RaycastInfo___destroy___0(self);});function tNodeArray(){throw"cannot construct a tNodeArray, no constructor in IDL"}tNodeArray.prototype=Object.create(WrapperObject.prototype);tNodeArray.prototype.constructor=tNodeArray;tNodeArray.prototype.__class__=tNodeArray;tNodeArray.__cache__={};Module["tNodeArray"]=tNodeArray;tNodeArray.prototype["size"]=tNodeArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_tNodeArray_size_0(self)});tNodeArray.prototype["at"]=tNodeArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_tNodeArray_at_1(self,arg0),Node)});tNodeArray.prototype["__destroy__"]=tNodeArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_tNodeArray___destroy___0(self);});function btSoftBody(arg0,arg1,arg2,arg3){ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(typeof arg3=="object"){arg3=ensureFloat32(arg3);}this.ptr=_emscripten_bind_btSoftBody_btSoftBody_4(arg0,arg1,arg2,arg3);getCache(btSoftBody)[this.ptr]=this;}btSoftBody.prototype=Object.create(btCollisionObject.prototype);btSoftBody.prototype.constructor=btSoftBody;btSoftBody.prototype.__class__=btSoftBody;btSoftBody.__cache__={};Module["btSoftBody"]=btSoftBody;btSoftBody.prototype["checkLink"]=btSoftBody.prototype.checkLink=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;return!!_emscripten_bind_btSoftBody_checkLink_2(self,arg0,arg1)});btSoftBody.prototype["checkFace"]=btSoftBody.prototype.checkFace=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;return!!_emscripten_bind_btSoftBody_checkFace_3(self,arg0,arg1,arg2)});btSoftBody.prototype["appendMaterial"]=btSoftBody.prototype.appendMaterial=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_appendMaterial_0(self),Material)});btSoftBody.prototype["appendNode"]=btSoftBody.prototype.appendNode=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_appendNode_2(self,arg0,arg1);});btSoftBody.prototype["appendLink"]=btSoftBody.prototype.appendLink=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendLink_4(self,arg0,arg1,arg2,arg3);});btSoftBody.prototype["appendFace"]=btSoftBody.prototype.appendFace=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendFace_4(self,arg0,arg1,arg2,arg3);});btSoftBody.prototype["appendTetra"]=btSoftBody.prototype.appendTetra=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btSoftBody_appendTetra_5(self,arg0,arg1,arg2,arg3,arg4);});btSoftBody.prototype["appendAnchor"]=btSoftBody.prototype.appendAnchor=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendAnchor_4(self,arg0,arg1,arg2,arg3);});btSoftBody.prototype["getTotalMass"]=btSoftBody.prototype.getTotalMass=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getTotalMass_0(self)});btSoftBody.prototype["setTotalMass"]=btSoftBody.prototype.setTotalMass=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setTotalMass_2(self,arg0,arg1);});btSoftBody.prototype["setMass"]=btSoftBody.prototype.setMass=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setMass_2(self,arg0,arg1);});btSoftBody.prototype["transform"]=btSoftBody.prototype.transform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_transform_1(self,arg0);});btSoftBody.prototype["translate"]=btSoftBody.prototype.translate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_translate_1(self,arg0);});btSoftBody.prototype["rotate"]=btSoftBody.prototype.rotate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_rotate_1(self,arg0);});btSoftBody.prototype["scale"]=btSoftBody.prototype.scale=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_scale_1(self,arg0);});btSoftBody.prototype["generateClusters"]=btSoftBody.prototype.generateClusters=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){return _emscripten_bind_btSoftBody_generateClusters_1(self,arg0)}return _emscripten_bind_btSoftBody_generateClusters_2(self,arg0,arg1)});btSoftBody.prototype["upcast"]=btSoftBody.prototype.upcast=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btSoftBody_upcast_1(self,arg0),btSoftBody)});btSoftBody.prototype["setAnisotropicFriction"]=btSoftBody.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setAnisotropicFriction_2(self,arg0,arg1);});btSoftBody.prototype["getCollisionShape"]=btSoftBody.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getCollisionShape_0(self),btCollisionShape)});btSoftBody.prototype["setContactProcessingThreshold"]=btSoftBody.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setContactProcessingThreshold_1(self,arg0);});btSoftBody.prototype["setActivationState"]=btSoftBody.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setActivationState_1(self,arg0);});btSoftBody.prototype["forceActivationState"]=btSoftBody.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_forceActivationState_1(self,arg0);});btSoftBody.prototype["activate"]=btSoftBody.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btSoftBody_activate_0(self);return}_emscripten_bind_btSoftBody_activate_1(self,arg0);});btSoftBody.prototype["isActive"]=btSoftBody.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btSoftBody_isActive_0(self)});btSoftBody.prototype["isKinematicObject"]=btSoftBody.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btSoftBody_isKinematicObject_0(self)});btSoftBody.prototype["setRestitution"]=btSoftBody.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setRestitution_1(self,arg0);});btSoftBody.prototype["setFriction"]=btSoftBody.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setFriction_1(self,arg0);});btSoftBody.prototype["setRollingFriction"]=btSoftBody.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setRollingFriction_1(self,arg0);});btSoftBody.prototype["getWorldTransform"]=btSoftBody.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getWorldTransform_0(self),btTransform)});btSoftBody.prototype["getCollisionFlags"]=btSoftBody.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getCollisionFlags_0(self)});btSoftBody.prototype["setCollisionFlags"]=btSoftBody.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCollisionFlags_1(self,arg0);});btSoftBody.prototype["setWorldTransform"]=btSoftBody.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setWorldTransform_1(self,arg0);});btSoftBody.prototype["setCollisionShape"]=btSoftBody.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCollisionShape_1(self,arg0);});btSoftBody.prototype["setCcdMotionThreshold"]=btSoftBody.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCcdMotionThreshold_1(self,arg0);});btSoftBody.prototype["setCcdSweptSphereRadius"]=btSoftBody.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1(self,arg0);});btSoftBody.prototype["getUserIndex"]=btSoftBody.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getUserIndex_0(self)});btSoftBody.prototype["setUserIndex"]=btSoftBody.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setUserIndex_1(self,arg0);});btSoftBody.prototype["getUserPointer"]=btSoftBody.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getUserPointer_0(self),VoidPtr)});btSoftBody.prototype["setUserPointer"]=btSoftBody.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setUserPointer_1(self,arg0);});btSoftBody.prototype["get_m_cfg"]=btSoftBody.prototype.get_m_cfg=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_cfg_0(self),Config)});btSoftBody.prototype["set_m_cfg"]=btSoftBody.prototype.set_m_cfg=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_cfg_1(self,arg0);});btSoftBody.prototype["get_m_nodes"]=btSoftBody.prototype.get_m_nodes=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_nodes_0(self),tNodeArray)});btSoftBody.prototype["set_m_nodes"]=btSoftBody.prototype.set_m_nodes=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_nodes_1(self,arg0);});btSoftBody.prototype["get_m_materials"]=btSoftBody.prototype.get_m_materials=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_materials_0(self),tMaterialArray)});btSoftBody.prototype["set_m_materials"]=btSoftBody.prototype.set_m_materials=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_materials_1(self,arg0);});btSoftBody.prototype["__destroy__"]=btSoftBody.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBody___destroy___0(self);});function btHeightfieldTerrainShape(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;this.ptr=_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);getCache(btHeightfieldTerrainShape)[this.ptr]=this;}btHeightfieldTerrainShape.prototype=Object.create(btConcaveShape.prototype);btHeightfieldTerrainShape.prototype.constructor=btHeightfieldTerrainShape;btHeightfieldTerrainShape.prototype.__class__=btHeightfieldTerrainShape;btHeightfieldTerrainShape.__cache__={};Module["btHeightfieldTerrainShape"]=btHeightfieldTerrainShape;btHeightfieldTerrainShape.prototype["setMargin"]=btHeightfieldTerrainShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHeightfieldTerrainShape_setMargin_1(self,arg0);});btHeightfieldTerrainShape.prototype["getMargin"]=btHeightfieldTerrainShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btHeightfieldTerrainShape_getMargin_0(self)});btHeightfieldTerrainShape.prototype["setLocalScaling"]=btHeightfieldTerrainShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1(self,arg0);});btHeightfieldTerrainShape.prototype["calculateLocalInertia"]=btHeightfieldTerrainShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2(self,arg0,arg1);});btHeightfieldTerrainShape.prototype["__destroy__"]=btHeightfieldTerrainShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btHeightfieldTerrainShape___destroy___0(self);});function Config(){throw"cannot construct a Config, no constructor in IDL"}Config.prototype=Object.create(WrapperObject.prototype);Config.prototype.constructor=Config;Config.prototype.__class__=Config;Config.__cache__={};Module["Config"]=Config;Config.prototype["get_kVCF"]=Config.prototype.get_kVCF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kVCF_0(self)});Config.prototype["set_kVCF"]=Config.prototype.set_kVCF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kVCF_1(self,arg0);});Config.prototype["get_kDP"]=Config.prototype.get_kDP=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDP_0(self)});Config.prototype["set_kDP"]=Config.prototype.set_kDP=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDP_1(self,arg0);});Config.prototype["get_kDG"]=Config.prototype.get_kDG=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDG_0(self)});Config.prototype["set_kDG"]=Config.prototype.set_kDG=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDG_1(self,arg0);});Config.prototype["get_kLF"]=Config.prototype.get_kLF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kLF_0(self)});Config.prototype["set_kLF"]=Config.prototype.set_kLF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kLF_1(self,arg0);});Config.prototype["get_kPR"]=Config.prototype.get_kPR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kPR_0(self)});Config.prototype["set_kPR"]=Config.prototype.set_kPR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kPR_1(self,arg0);});Config.prototype["get_kVC"]=Config.prototype.get_kVC=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kVC_0(self)});Config.prototype["set_kVC"]=Config.prototype.set_kVC=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kVC_1(self,arg0);});Config.prototype["get_kDF"]=Config.prototype.get_kDF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDF_0(self)});Config.prototype["set_kDF"]=Config.prototype.set_kDF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDF_1(self,arg0);});Config.prototype["get_kMT"]=Config.prototype.get_kMT=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kMT_0(self)});Config.prototype["set_kMT"]=Config.prototype.set_kMT=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kMT_1(self,arg0);});Config.prototype["get_kCHR"]=Config.prototype.get_kCHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kCHR_0(self)});Config.prototype["set_kCHR"]=Config.prototype.set_kCHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kCHR_1(self,arg0);});Config.prototype["get_kKHR"]=Config.prototype.get_kKHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kKHR_0(self)});Config.prototype["set_kKHR"]=Config.prototype.set_kKHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kKHR_1(self,arg0);});Config.prototype["get_kSHR"]=Config.prototype.get_kSHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSHR_0(self)});Config.prototype["set_kSHR"]=Config.prototype.set_kSHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSHR_1(self,arg0);});Config.prototype["get_kAHR"]=Config.prototype.get_kAHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kAHR_0(self)});Config.prototype["set_kAHR"]=Config.prototype.set_kAHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kAHR_1(self,arg0);});Config.prototype["get_kSRHR_CL"]=Config.prototype.get_kSRHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSRHR_CL_0(self)});Config.prototype["set_kSRHR_CL"]=Config.prototype.set_kSRHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSRHR_CL_1(self,arg0);});Config.prototype["get_kSKHR_CL"]=Config.prototype.get_kSKHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSKHR_CL_0(self)});Config.prototype["set_kSKHR_CL"]=Config.prototype.set_kSKHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSKHR_CL_1(self,arg0);});Config.prototype["get_kSSHR_CL"]=Config.prototype.get_kSSHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSSHR_CL_0(self)});Config.prototype["set_kSSHR_CL"]=Config.prototype.set_kSSHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSSHR_CL_1(self,arg0);});Config.prototype["get_kSR_SPLT_CL"]=Config.prototype.get_kSR_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSR_SPLT_CL_0(self)});Config.prototype["set_kSR_SPLT_CL"]=Config.prototype.set_kSR_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSR_SPLT_CL_1(self,arg0);});Config.prototype["get_kSK_SPLT_CL"]=Config.prototype.get_kSK_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSK_SPLT_CL_0(self)});Config.prototype["set_kSK_SPLT_CL"]=Config.prototype.set_kSK_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSK_SPLT_CL_1(self,arg0);});Config.prototype["get_kSS_SPLT_CL"]=Config.prototype.get_kSS_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSS_SPLT_CL_0(self)});Config.prototype["set_kSS_SPLT_CL"]=Config.prototype.set_kSS_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSS_SPLT_CL_1(self,arg0);});Config.prototype["get_maxvolume"]=Config.prototype.get_maxvolume=(function(){var self=this.ptr;return _emscripten_bind_Config_get_maxvolume_0(self)});Config.prototype["set_maxvolume"]=Config.prototype.set_maxvolume=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_maxvolume_1(self,arg0);});Config.prototype["get_timescale"]=Config.prototype.get_timescale=(function(){var self=this.ptr;return _emscripten_bind_Config_get_timescale_0(self)});Config.prototype["set_timescale"]=Config.prototype.set_timescale=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_timescale_1(self,arg0);});Config.prototype["get_viterations"]=Config.prototype.get_viterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_viterations_0(self)});Config.prototype["set_viterations"]=Config.prototype.set_viterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_viterations_1(self,arg0);});Config.prototype["get_piterations"]=Config.prototype.get_piterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_piterations_0(self)});Config.prototype["set_piterations"]=Config.prototype.set_piterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_piterations_1(self,arg0);});Config.prototype["get_diterations"]=Config.prototype.get_diterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_diterations_0(self)});Config.prototype["set_diterations"]=Config.prototype.set_diterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_diterations_1(self,arg0);});Config.prototype["get_citerations"]=Config.prototype.get_citerations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_citerations_0(self)});Config.prototype["set_citerations"]=Config.prototype.set_citerations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_citerations_1(self,arg0);});Config.prototype["get_collisions"]=Config.prototype.get_collisions=(function(){var self=this.ptr;return _emscripten_bind_Config_get_collisions_0(self)});Config.prototype["set_collisions"]=Config.prototype.set_collisions=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_collisions_1(self,arg0);});Config.prototype["__destroy__"]=Config.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Config___destroy___0(self);});function Node(){throw"cannot construct a Node, no constructor in IDL"}Node.prototype=Object.create(WrapperObject.prototype);Node.prototype.constructor=Node;Node.prototype.__class__=Node;Node.__cache__={};Module["Node"]=Node;Node.prototype["get_m_x"]=Node.prototype.get_m_x=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_Node_get_m_x_0(self),btVector3)});Node.prototype["set_m_x"]=Node.prototype.set_m_x=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Node_set_m_x_1(self,arg0);});Node.prototype["get_m_n"]=Node.prototype.get_m_n=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_Node_get_m_n_0(self),btVector3)});Node.prototype["set_m_n"]=Node.prototype.set_m_n=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Node_set_m_n_1(self,arg0);});Node.prototype["__destroy__"]=Node.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Node___destroy___0(self);});function btOverlappingPairCallback(){throw"cannot construct a btOverlappingPairCallback, no constructor in IDL"}btOverlappingPairCallback.prototype=Object.create(WrapperObject.prototype);btOverlappingPairCallback.prototype.constructor=btOverlappingPairCallback;btOverlappingPairCallback.prototype.__class__=btOverlappingPairCallback;btOverlappingPairCallback.__cache__={};Module["btOverlappingPairCallback"]=btOverlappingPairCallback;btOverlappingPairCallback.prototype["__destroy__"]=btOverlappingPairCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btOverlappingPairCallback___destroy___0(self);});function btKinematicCharacterController(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3(arg0,arg1,arg2);getCache(btKinematicCharacterController)[this.ptr]=this;return}this.ptr=_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4(arg0,arg1,arg2,arg3);getCache(btKinematicCharacterController)[this.ptr]=this;}btKinematicCharacterController.prototype=Object.create(btActionInterface.prototype);btKinematicCharacterController.prototype.constructor=btKinematicCharacterController;btKinematicCharacterController.prototype.__class__=btKinematicCharacterController;btKinematicCharacterController.__cache__={};Module["btKinematicCharacterController"]=btKinematicCharacterController;btKinematicCharacterController.prototype["setUpAxis"]=btKinematicCharacterController.prototype.setUpAxis=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setUpAxis_1(self,arg0);});btKinematicCharacterController.prototype["setWalkDirection"]=btKinematicCharacterController.prototype.setWalkDirection=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setWalkDirection_1(self,arg0);});btKinematicCharacterController.prototype["setVelocityForTimeInterval"]=btKinematicCharacterController.prototype.setVelocityForTimeInterval=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2(self,arg0,arg1);});btKinematicCharacterController.prototype["warp"]=btKinematicCharacterController.prototype.warp=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_warp_1(self,arg0);});btKinematicCharacterController.prototype["preStep"]=btKinematicCharacterController.prototype.preStep=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_preStep_1(self,arg0);});btKinematicCharacterController.prototype["playerStep"]=btKinematicCharacterController.prototype.playerStep=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btKinematicCharacterController_playerStep_2(self,arg0,arg1);});btKinematicCharacterController.prototype["setFallSpeed"]=btKinematicCharacterController.prototype.setFallSpeed=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setFallSpeed_1(self,arg0);});btKinematicCharacterController.prototype["setJumpSpeed"]=btKinematicCharacterController.prototype.setJumpSpeed=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1(self,arg0);});btKinematicCharacterController.prototype["setMaxJumpHeight"]=btKinematicCharacterController.prototype.setMaxJumpHeight=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1(self,arg0);});btKinematicCharacterController.prototype["canJump"]=btKinematicCharacterController.prototype.canJump=(function(){var self=this.ptr;return!!_emscripten_bind_btKinematicCharacterController_canJump_0(self)});btKinematicCharacterController.prototype["jump"]=btKinematicCharacterController.prototype.jump=(function(){var self=this.ptr;_emscripten_bind_btKinematicCharacterController_jump_0(self);});btKinematicCharacterController.prototype["setGravity"]=btKinematicCharacterController.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setGravity_1(self,arg0);});btKinematicCharacterController.prototype["getGravity"]=btKinematicCharacterController.prototype.getGravity=(function(){var self=this.ptr;return _emscripten_bind_btKinematicCharacterController_getGravity_0(self)});btKinematicCharacterController.prototype["setMaxSlope"]=btKinematicCharacterController.prototype.setMaxSlope=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setMaxSlope_1(self,arg0);});btKinematicCharacterController.prototype["getMaxSlope"]=btKinematicCharacterController.prototype.getMaxSlope=(function(){var self=this.ptr;return _emscripten_bind_btKinematicCharacterController_getMaxSlope_0(self)});btKinematicCharacterController.prototype["getGhostObject"]=btKinematicCharacterController.prototype.getGhostObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btKinematicCharacterController_getGhostObject_0(self),btPairCachingGhostObject)});btKinematicCharacterController.prototype["setUseGhostSweepTest"]=btKinematicCharacterController.prototype.setUseGhostSweepTest=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1(self,arg0);});btKinematicCharacterController.prototype["onGround"]=btKinematicCharacterController.prototype.onGround=(function(){var self=this.ptr;return!!_emscripten_bind_btKinematicCharacterController_onGround_0(self)});btKinematicCharacterController.prototype["updateAction"]=btKinematicCharacterController.prototype.updateAction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btKinematicCharacterController_updateAction_2(self,arg0,arg1);});btKinematicCharacterController.prototype["__destroy__"]=btKinematicCharacterController.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btKinematicCharacterController___destroy___0(self);});function btSoftBodyArray(){throw"cannot construct a btSoftBodyArray, no constructor in IDL"}btSoftBodyArray.prototype=Object.create(WrapperObject.prototype);btSoftBodyArray.prototype.constructor=btSoftBodyArray;btSoftBodyArray.prototype.__class__=btSoftBodyArray;btSoftBodyArray.__cache__={};Module["btSoftBodyArray"]=btSoftBodyArray;btSoftBodyArray.prototype["size"]=btSoftBodyArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyArray_size_0(self)});btSoftBodyArray.prototype["at"]=btSoftBodyArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btSoftBodyArray_at_1(self,arg0),btSoftBody)});btSoftBodyArray.prototype["__destroy__"]=btSoftBodyArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyArray___destroy___0(self);});function btStaticPlaneShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2(arg0,arg1);getCache(btStaticPlaneShape)[this.ptr]=this;}btStaticPlaneShape.prototype=Object.create(btConcaveShape.prototype);btStaticPlaneShape.prototype.constructor=btStaticPlaneShape;btStaticPlaneShape.prototype.__class__=btStaticPlaneShape;btStaticPlaneShape.__cache__={};Module["btStaticPlaneShape"]=btStaticPlaneShape;btStaticPlaneShape.prototype["setLocalScaling"]=btStaticPlaneShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btStaticPlaneShape_setLocalScaling_1(self,arg0);});btStaticPlaneShape.prototype["calculateLocalInertia"]=btStaticPlaneShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2(self,arg0,arg1);});btStaticPlaneShape.prototype["__destroy__"]=btStaticPlaneShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btStaticPlaneShape___destroy___0(self);});function btOverlappingPairCache(){throw"cannot construct a btOverlappingPairCache, no constructor in IDL"}btOverlappingPairCache.prototype=Object.create(WrapperObject.prototype);btOverlappingPairCache.prototype.constructor=btOverlappingPairCache;btOverlappingPairCache.prototype.__class__=btOverlappingPairCache;btOverlappingPairCache.__cache__={};Module["btOverlappingPairCache"]=btOverlappingPairCache;btOverlappingPairCache.prototype["setInternalGhostPairCallback"]=btOverlappingPairCache.prototype.setInternalGhostPairCallback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1(self,arg0);});btOverlappingPairCache.prototype["__destroy__"]=btOverlappingPairCache.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btOverlappingPairCache___destroy___0(self);});function btSoftRigidDynamicsWorld(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;this.ptr=_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5(arg0,arg1,arg2,arg3,arg4);getCache(btSoftRigidDynamicsWorld)[this.ptr]=this;}btSoftRigidDynamicsWorld.prototype=Object.create(btDiscreteDynamicsWorld.prototype);btSoftRigidDynamicsWorld.prototype.constructor=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.prototype.__class__=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.__cache__={};Module["btSoftRigidDynamicsWorld"]=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.prototype["addSoftBody"]=btSoftRigidDynamicsWorld.prototype.addSoftBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3(self,arg0,arg1,arg2);});btSoftRigidDynamicsWorld.prototype["removeSoftBody"]=btSoftRigidDynamicsWorld.prototype.removeSoftBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["removeCollisionObject"]=btSoftRigidDynamicsWorld.prototype.removeCollisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["getWorldInfo"]=btSoftRigidDynamicsWorld.prototype.getWorldInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0(self),btSoftBodyWorldInfo)});btSoftRigidDynamicsWorld.prototype["getSoftBodyArray"]=btSoftRigidDynamicsWorld.prototype.getSoftBodyArray=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0(self),btSoftBodyArray)});btSoftRigidDynamicsWorld.prototype["getDispatcher"]=btSoftRigidDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0(self),btDispatcher)});btSoftRigidDynamicsWorld.prototype["rayTest"]=btSoftRigidDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3(self,arg0,arg1,arg2);});btSoftRigidDynamicsWorld.prototype["getPairCache"]=btSoftRigidDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btSoftRigidDynamicsWorld.prototype["getDispatchInfo"]=btSoftRigidDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btSoftRigidDynamicsWorld.prototype["addCollisionObject"]=btSoftRigidDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2);});btSoftRigidDynamicsWorld.prototype["getBroadphase"]=btSoftRigidDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btSoftRigidDynamicsWorld.prototype["convexSweepTest"]=btSoftRigidDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4);});btSoftRigidDynamicsWorld.prototype["contactPairTest"]=btSoftRigidDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2);});btSoftRigidDynamicsWorld.prototype["contactTest"]=btSoftRigidDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2(self,arg0,arg1);});btSoftRigidDynamicsWorld.prototype["setGravity"]=btSoftRigidDynamicsWorld.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["getGravity"]=btSoftRigidDynamicsWorld.prototype.getGravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0(self),btVector3)});btSoftRigidDynamicsWorld.prototype["addRigidBody"]=btSoftRigidDynamicsWorld.prototype.addRigidBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_2(self,arg0,arg1);return}_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3(self,arg0,arg1,arg2);});btSoftRigidDynamicsWorld.prototype["removeRigidBody"]=btSoftRigidDynamicsWorld.prototype.removeRigidBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["addConstraint"]=btSoftRigidDynamicsWorld.prototype.addConstraint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1(self,arg0);return}_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2(self,arg0,arg1);});btSoftRigidDynamicsWorld.prototype["removeConstraint"]=btSoftRigidDynamicsWorld.prototype.removeConstraint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["stepSimulation"]=btSoftRigidDynamicsWorld.prototype.stepSimulation=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1(self,arg0)}if(arg2===undefined){return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2(self,arg0,arg1)}return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["addAction"]=btSoftRigidDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["removeAction"]=btSoftRigidDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1(self,arg0);});btSoftRigidDynamicsWorld.prototype["getSolverInfo"]=btSoftRigidDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btSoftRigidDynamicsWorld.prototype["__destroy__"]=btSoftRigidDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0(self);});function btTransform(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btTransform_btTransform_0();getCache(btTransform)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btTransform_btTransform_1(arg0);getCache(btTransform)[this.ptr]=this;return}this.ptr=_emscripten_bind_btTransform_btTransform_2(arg0,arg1);getCache(btTransform)[this.ptr]=this;}btTransform.prototype=Object.create(WrapperObject.prototype);btTransform.prototype.constructor=btTransform;btTransform.prototype.__class__=btTransform;btTransform.__cache__={};Module["btTransform"]=btTransform;btTransform.prototype["setIdentity"]=btTransform.prototype.setIdentity=(function(){var self=this.ptr;_emscripten_bind_btTransform_setIdentity_0(self);});btTransform.prototype["setOrigin"]=btTransform.prototype.setOrigin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTransform_setOrigin_1(self,arg0);});btTransform.prototype["setRotation"]=btTransform.prototype.setRotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTransform_setRotation_1(self,arg0);});btTransform.prototype["getOrigin"]=btTransform.prototype.getOrigin=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self),btVector3)});btTransform.prototype["getRotation"]=btTransform.prototype.getRotation=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self),btQuaternion)});btTransform.prototype["getBasis"]=btTransform.prototype.getBasis=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self),btMatrix3x3)});btTransform.prototype["setFromOpenGLMatrix"]=btTransform.prototype.setFromOpenGLMatrix=(function(arg0){var self=this.ptr;ensureCache.prepare();if(typeof arg0=="object"){arg0=ensureFloat32(arg0);}_emscripten_bind_btTransform_setFromOpenGLMatrix_1(self,arg0);});btTransform.prototype["__destroy__"]=btTransform.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTransform___destroy___0(self);});function ClosestRayResultCallback(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0,arg1);getCache(ClosestRayResultCallback)[this.ptr]=this;}ClosestRayResultCallback.prototype=Object.create(RayResultCallback.prototype);ClosestRayResultCallback.prototype.constructor=ClosestRayResultCallback;ClosestRayResultCallback.prototype.__class__=ClosestRayResultCallback;ClosestRayResultCallback.__cache__={};Module["ClosestRayResultCallback"]=ClosestRayResultCallback;ClosestRayResultCallback.prototype["hasHit"]=ClosestRayResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ClosestRayResultCallback_hasHit_0(self)});ClosestRayResultCallback.prototype["get_m_rayFromWorld"]=ClosestRayResultCallback.prototype.get_m_rayFromWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_rayFromWorld"]=ClosestRayResultCallback.prototype.set_m_rayFromWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_rayToWorld"]=ClosestRayResultCallback.prototype.get_m_rayToWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_rayToWorld"]=ClosestRayResultCallback.prototype.set_m_rayToWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_hitNormalWorld"]=ClosestRayResultCallback.prototype.get_m_hitNormalWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_hitNormalWorld"]=ClosestRayResultCallback.prototype.set_m_hitNormalWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_hitPointWorld"]=ClosestRayResultCallback.prototype.get_m_hitPointWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_hitPointWorld"]=ClosestRayResultCallback.prototype.set_m_hitPointWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_collisionFilterGroup"]=ClosestRayResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0(self)});ClosestRayResultCallback.prototype["set_m_collisionFilterGroup"]=ClosestRayResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_collisionFilterMask"]=ClosestRayResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0(self)});ClosestRayResultCallback.prototype["set_m_collisionFilterMask"]=ClosestRayResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1(self,arg0);});ClosestRayResultCallback.prototype["get_m_collisionObject"]=ClosestRayResultCallback.prototype.get_m_collisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self),btCollisionObject)});ClosestRayResultCallback.prototype["set_m_collisionObject"]=ClosestRayResultCallback.prototype.set_m_collisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self,arg0);});ClosestRayResultCallback.prototype["__destroy__"]=ClosestRayResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ClosestRayResultCallback___destroy___0(self);});function btSoftBodyRigidBodyCollisionConfiguration(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0();getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr]=this;return}this.ptr=_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1(arg0);getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr]=this;}btSoftBodyRigidBodyCollisionConfiguration.prototype=Object.create(btDefaultCollisionConfiguration.prototype);btSoftBodyRigidBodyCollisionConfiguration.prototype.constructor=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.prototype.__class__=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.__cache__={};Module["btSoftBodyRigidBodyCollisionConfiguration"]=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.prototype["__destroy__"]=btSoftBodyRigidBodyCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0(self);});function ConcreteContactResultCallback(){this.ptr=_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();getCache(ConcreteContactResultCallback)[this.ptr]=this;}ConcreteContactResultCallback.prototype=Object.create(ContactResultCallback.prototype);ConcreteContactResultCallback.prototype.constructor=ConcreteContactResultCallback;ConcreteContactResultCallback.prototype.__class__=ConcreteContactResultCallback;ConcreteContactResultCallback.__cache__={};Module["ConcreteContactResultCallback"]=ConcreteContactResultCallback;ConcreteContactResultCallback.prototype["addSingleResult"]=ConcreteContactResultCallback.prototype.addSingleResult=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6)});ConcreteContactResultCallback.prototype["__destroy__"]=ConcreteContactResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ConcreteContactResultCallback___destroy___0(self);});function btBvhTriangleMeshShape(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2(arg0,arg1);getCache(btBvhTriangleMeshShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3(arg0,arg1,arg2);getCache(btBvhTriangleMeshShape)[this.ptr]=this;}btBvhTriangleMeshShape.prototype=Object.create(btTriangleMeshShape.prototype);btBvhTriangleMeshShape.prototype.constructor=btBvhTriangleMeshShape;btBvhTriangleMeshShape.prototype.__class__=btBvhTriangleMeshShape;btBvhTriangleMeshShape.__cache__={};Module["btBvhTriangleMeshShape"]=btBvhTriangleMeshShape;btBvhTriangleMeshShape.prototype["setLocalScaling"]=btBvhTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1(self,arg0);});btBvhTriangleMeshShape.prototype["calculateLocalInertia"]=btBvhTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1);});btBvhTriangleMeshShape.prototype["__destroy__"]=btBvhTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBvhTriangleMeshShape___destroy___0(self);});function btSliderConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_3(arg0,arg1,arg2);getCache(btSliderConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_4(arg0,arg1,arg2,arg3);getCache(btSliderConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btSliderConstraint)[this.ptr]=this;}btSliderConstraint.prototype=Object.create(btTypedConstraint.prototype);btSliderConstraint.prototype.constructor=btSliderConstraint;btSliderConstraint.prototype.__class__=btSliderConstraint;btSliderConstraint.__cache__={};Module["btSliderConstraint"]=btSliderConstraint;btSliderConstraint.prototype["setLowerLinLimit"]=btSliderConstraint.prototype.setLowerLinLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setLowerLinLimit_1(self,arg0);});btSliderConstraint.prototype["setUpperLinLimit"]=btSliderConstraint.prototype.setUpperLinLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setUpperLinLimit_1(self,arg0);});btSliderConstraint.prototype["setLowerAngLimit"]=btSliderConstraint.prototype.setLowerAngLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setLowerAngLimit_1(self,arg0);});btSliderConstraint.prototype["setUpperAngLimit"]=btSliderConstraint.prototype.setUpperAngLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setUpperAngLimit_1(self,arg0);});btSliderConstraint.prototype["enableFeedback"]=btSliderConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_enableFeedback_1(self,arg0);});btSliderConstraint.prototype["getBreakingImpulseThreshold"]=btSliderConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0(self)});btSliderConstraint.prototype["setBreakingImpulseThreshold"]=btSliderConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1(self,arg0);});btSliderConstraint.prototype["__destroy__"]=btSliderConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSliderConstraint___destroy___0(self);});function btPairCachingGhostObject(){this.ptr=_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0();getCache(btPairCachingGhostObject)[this.ptr]=this;}btPairCachingGhostObject.prototype=Object.create(btGhostObject.prototype);btPairCachingGhostObject.prototype.constructor=btPairCachingGhostObject;btPairCachingGhostObject.prototype.__class__=btPairCachingGhostObject;btPairCachingGhostObject.__cache__={};Module["btPairCachingGhostObject"]=btPairCachingGhostObject;btPairCachingGhostObject.prototype["setAnisotropicFriction"]=btPairCachingGhostObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2(self,arg0,arg1);});btPairCachingGhostObject.prototype["getCollisionShape"]=btPairCachingGhostObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0(self),btCollisionShape)});btPairCachingGhostObject.prototype["setContactProcessingThreshold"]=btPairCachingGhostObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1(self,arg0);});btPairCachingGhostObject.prototype["setActivationState"]=btPairCachingGhostObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setActivationState_1(self,arg0);});btPairCachingGhostObject.prototype["forceActivationState"]=btPairCachingGhostObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_forceActivationState_1(self,arg0);});btPairCachingGhostObject.prototype["activate"]=btPairCachingGhostObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btPairCachingGhostObject_activate_0(self);return}_emscripten_bind_btPairCachingGhostObject_activate_1(self,arg0);});btPairCachingGhostObject.prototype["isActive"]=btPairCachingGhostObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btPairCachingGhostObject_isActive_0(self)});btPairCachingGhostObject.prototype["isKinematicObject"]=btPairCachingGhostObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0(self)});btPairCachingGhostObject.prototype["setRestitution"]=btPairCachingGhostObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setRestitution_1(self,arg0);});btPairCachingGhostObject.prototype["setFriction"]=btPairCachingGhostObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setFriction_1(self,arg0);});btPairCachingGhostObject.prototype["setRollingFriction"]=btPairCachingGhostObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1(self,arg0);});btPairCachingGhostObject.prototype["getWorldTransform"]=btPairCachingGhostObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0(self),btTransform)});btPairCachingGhostObject.prototype["getCollisionFlags"]=btPairCachingGhostObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0(self)});btPairCachingGhostObject.prototype["setCollisionFlags"]=btPairCachingGhostObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1(self,arg0);});btPairCachingGhostObject.prototype["setWorldTransform"]=btPairCachingGhostObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1(self,arg0);});btPairCachingGhostObject.prototype["setCollisionShape"]=btPairCachingGhostObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1(self,arg0);});btPairCachingGhostObject.prototype["setCcdMotionThreshold"]=btPairCachingGhostObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1(self,arg0);});btPairCachingGhostObject.prototype["setCcdSweptSphereRadius"]=btPairCachingGhostObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1(self,arg0);});btPairCachingGhostObject.prototype["getUserIndex"]=btPairCachingGhostObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getUserIndex_0(self)});btPairCachingGhostObject.prototype["setUserIndex"]=btPairCachingGhostObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setUserIndex_1(self,arg0);});btPairCachingGhostObject.prototype["getUserPointer"]=btPairCachingGhostObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getUserPointer_0(self),VoidPtr)});btPairCachingGhostObject.prototype["setUserPointer"]=btPairCachingGhostObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setUserPointer_1(self,arg0);});btPairCachingGhostObject.prototype["getNumOverlappingObjects"]=btPairCachingGhostObject.prototype.getNumOverlappingObjects=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0(self)});btPairCachingGhostObject.prototype["getOverlappingObject"]=btPairCachingGhostObject.prototype.getOverlappingObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1(self,arg0),btCollisionObject)});btPairCachingGhostObject.prototype["__destroy__"]=btPairCachingGhostObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPairCachingGhostObject___destroy___0(self);});function btManifoldPoint(){throw"cannot construct a btManifoldPoint, no constructor in IDL"}btManifoldPoint.prototype=Object.create(WrapperObject.prototype);btManifoldPoint.prototype.constructor=btManifoldPoint;btManifoldPoint.prototype.__class__=btManifoldPoint;btManifoldPoint.__cache__={};Module["btManifoldPoint"]=btManifoldPoint;btManifoldPoint.prototype["getPositionWorldOnA"]=btManifoldPoint.prototype.getPositionWorldOnA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0(self),btVector3)});btManifoldPoint.prototype["getPositionWorldOnB"]=btManifoldPoint.prototype.getPositionWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["getAppliedImpulse"]=btManifoldPoint.prototype.getAppliedImpulse=(function(){var self=this.ptr;return _emscripten_bind_btManifoldPoint_getAppliedImpulse_0(self)});btManifoldPoint.prototype["getDistance"]=btManifoldPoint.prototype.getDistance=(function(){var self=this.ptr;return _emscripten_bind_btManifoldPoint_getDistance_0(self)});btManifoldPoint.prototype["get_m_localPointA"]=btManifoldPoint.prototype.get_m_localPointA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointA_0(self),btVector3)});btManifoldPoint.prototype["set_m_localPointA"]=btManifoldPoint.prototype.set_m_localPointA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_localPointA_1(self,arg0);});btManifoldPoint.prototype["get_m_localPointB"]=btManifoldPoint.prototype.get_m_localPointB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointB_0(self),btVector3)});btManifoldPoint.prototype["set_m_localPointB"]=btManifoldPoint.prototype.set_m_localPointB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_localPointB_1(self,arg0);});btManifoldPoint.prototype["get_m_positionWorldOnB"]=btManifoldPoint.prototype.get_m_positionWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["set_m_positionWorldOnB"]=btManifoldPoint.prototype.set_m_positionWorldOnB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1(self,arg0);});btManifoldPoint.prototype["get_m_positionWorldOnA"]=btManifoldPoint.prototype.get_m_positionWorldOnA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0(self),btVector3)});btManifoldPoint.prototype["set_m_positionWorldOnA"]=btManifoldPoint.prototype.set_m_positionWorldOnA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1(self,arg0);});btManifoldPoint.prototype["get_m_normalWorldOnB"]=btManifoldPoint.prototype.get_m_normalWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["set_m_normalWorldOnB"]=btManifoldPoint.prototype.set_m_normalWorldOnB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1(self,arg0);});btManifoldPoint.prototype["__destroy__"]=btManifoldPoint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btManifoldPoint___destroy___0(self);});function btPoint2PointConstraint(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0,arg1);getCache(btPoint2PointConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0,arg1,arg2);getCache(btPoint2PointConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0,arg1,arg2,arg3);getCache(btPoint2PointConstraint)[this.ptr]=this;}btPoint2PointConstraint.prototype=Object.create(btTypedConstraint.prototype);btPoint2PointConstraint.prototype.constructor=btPoint2PointConstraint;btPoint2PointConstraint.prototype.__class__=btPoint2PointConstraint;btPoint2PointConstraint.__cache__={};Module["btPoint2PointConstraint"]=btPoint2PointConstraint;btPoint2PointConstraint.prototype["setPivotA"]=btPoint2PointConstraint.prototype.setPivotA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setPivotA_1(self,arg0);});btPoint2PointConstraint.prototype["setPivotB"]=btPoint2PointConstraint.prototype.setPivotB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setPivotB_1(self,arg0);});btPoint2PointConstraint.prototype["getPivotInA"]=btPoint2PointConstraint.prototype.getPivotInA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInA_0(self),btVector3)});btPoint2PointConstraint.prototype["getPivotInB"]=btPoint2PointConstraint.prototype.getPivotInB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInB_0(self),btVector3)});btPoint2PointConstraint.prototype["enableFeedback"]=btPoint2PointConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_enableFeedback_1(self,arg0);});btPoint2PointConstraint.prototype["getBreakingImpulseThreshold"]=btPoint2PointConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0(self)});btPoint2PointConstraint.prototype["setBreakingImpulseThreshold"]=btPoint2PointConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1(self,arg0);});btPoint2PointConstraint.prototype["get_m_setting"]=btPoint2PointConstraint.prototype.get_m_setting=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_get_m_setting_0(self),btConstraintSetting)});btPoint2PointConstraint.prototype["set_m_setting"]=btPoint2PointConstraint.prototype.set_m_setting=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_set_m_setting_1(self,arg0);});btPoint2PointConstraint.prototype["__destroy__"]=btPoint2PointConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPoint2PointConstraint___destroy___0(self);});function btSoftBodyHelpers(){this.ptr=_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0();getCache(btSoftBodyHelpers)[this.ptr]=this;}btSoftBodyHelpers.prototype=Object.create(WrapperObject.prototype);btSoftBodyHelpers.prototype.constructor=btSoftBodyHelpers;btSoftBodyHelpers.prototype.__class__=btSoftBodyHelpers;btSoftBodyHelpers.__cache__={};Module["btSoftBodyHelpers"]=btSoftBodyHelpers;btSoftBodyHelpers.prototype["CreateRope"]=btSoftBodyHelpers.prototype.CreateRope=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateRope_5(self,arg0,arg1,arg2,arg3,arg4),btSoftBody)});btSoftBodyHelpers.prototype["CreatePatch"]=btSoftBodyHelpers.prototype.CreatePatch=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatch_9(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8),btSoftBody)});btSoftBodyHelpers.prototype["CreatePatchUV"]=btSoftBodyHelpers.prototype.CreatePatchUV=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;if(typeof arg9=="object"){arg9=ensureFloat32(arg9);}return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9),btSoftBody)});btSoftBodyHelpers.prototype["CreateEllipsoid"]=btSoftBodyHelpers.prototype.CreateEllipsoid=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4(self,arg0,arg1,arg2,arg3),btSoftBody)});btSoftBodyHelpers.prototype["CreateFromTriMesh"]=btSoftBodyHelpers.prototype.CreateFromTriMesh=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(typeof arg1=="object"){arg1=ensureFloat32(arg1);}if(typeof arg2=="object"){arg2=ensureInt32(arg2);}if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5(self,arg0,arg1,arg2,arg3,arg4),btSoftBody)});btSoftBodyHelpers.prototype["CreateFromConvexHull"]=btSoftBodyHelpers.prototype.CreateFromConvexHull=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4(self,arg0,arg1,arg2,arg3),btSoftBody)});btSoftBodyHelpers.prototype["__destroy__"]=btSoftBodyHelpers.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyHelpers___destroy___0(self);});function btBroadphaseProxy(){throw"cannot construct a btBroadphaseProxy, no constructor in IDL"}btBroadphaseProxy.prototype=Object.create(WrapperObject.prototype);btBroadphaseProxy.prototype.constructor=btBroadphaseProxy;btBroadphaseProxy.prototype.__class__=btBroadphaseProxy;btBroadphaseProxy.__cache__={};Module["btBroadphaseProxy"]=btBroadphaseProxy;btBroadphaseProxy.prototype["get_m_collisionFilterGroup"]=btBroadphaseProxy.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0(self)});btBroadphaseProxy.prototype["set_m_collisionFilterGroup"]=btBroadphaseProxy.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1(self,arg0);});btBroadphaseProxy.prototype["get_m_collisionFilterMask"]=btBroadphaseProxy.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0(self)});btBroadphaseProxy.prototype["set_m_collisionFilterMask"]=btBroadphaseProxy.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1(self,arg0);});btBroadphaseProxy.prototype["__destroy__"]=btBroadphaseProxy.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBroadphaseProxy___destroy___0(self);});function btBoxShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btBoxShape_btBoxShape_1(arg0);getCache(btBoxShape)[this.ptr]=this;}btBoxShape.prototype=Object.create(btCollisionShape.prototype);btBoxShape.prototype.constructor=btBoxShape;btBoxShape.prototype.__class__=btBoxShape;btBoxShape.__cache__={};Module["btBoxShape"]=btBoxShape;btBoxShape.prototype["setMargin"]=btBoxShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBoxShape_setMargin_1(self,arg0);});btBoxShape.prototype["getMargin"]=btBoxShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btBoxShape_getMargin_0(self)});btBoxShape.prototype["setLocalScaling"]=btBoxShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBoxShape_setLocalScaling_1(self,arg0);});btBoxShape.prototype["calculateLocalInertia"]=btBoxShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btBoxShape_calculateLocalInertia_2(self,arg0,arg1);});btBoxShape.prototype["__destroy__"]=btBoxShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBoxShape___destroy___0(self);});function btCapsuleShapeX(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2(arg0,arg1);getCache(btCapsuleShapeX)[this.ptr]=this;}btCapsuleShapeX.prototype=Object.create(btCapsuleShape.prototype);btCapsuleShapeX.prototype.constructor=btCapsuleShapeX;btCapsuleShapeX.prototype.__class__=btCapsuleShapeX;btCapsuleShapeX.__cache__={};Module["btCapsuleShapeX"]=btCapsuleShapeX;btCapsuleShapeX.prototype["setMargin"]=btCapsuleShapeX.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeX_setMargin_1(self,arg0);});btCapsuleShapeX.prototype["getMargin"]=btCapsuleShapeX.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShapeX_getMargin_0(self)});btCapsuleShapeX.prototype["setLocalScaling"]=btCapsuleShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeX_setLocalScaling_1(self,arg0);});btCapsuleShapeX.prototype["calculateLocalInertia"]=btCapsuleShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2(self,arg0,arg1);});btCapsuleShapeX.prototype["__destroy__"]=btCapsuleShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShapeX___destroy___0(self);});function btQuaternion(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;this.ptr=_emscripten_bind_btQuaternion_btQuaternion_4(arg0,arg1,arg2,arg3);getCache(btQuaternion)[this.ptr]=this;}btQuaternion.prototype=Object.create(btQuadWord.prototype);btQuaternion.prototype.constructor=btQuaternion;btQuaternion.prototype.__class__=btQuaternion;btQuaternion.__cache__={};Module["btQuaternion"]=btQuaternion;btQuaternion.prototype["setValue"]=btQuaternion.prototype.setValue=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btQuaternion_setValue_4(self,arg0,arg1,arg2,arg3);});btQuaternion.prototype["getW"]=btQuaternion.prototype.getW=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_getW_0(self)});btQuaternion.prototype["setEulerZYX"]=btQuaternion.prototype.setEulerZYX=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btQuaternion_setEulerZYX_3(self,arg0,arg1,arg2);});btQuaternion.prototype["setRotation"]=btQuaternion.prototype.setRotation=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btQuaternion_setRotation_2(self,arg0,arg1);});btQuaternion.prototype["normalize"]=btQuaternion.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btQuaternion_normalize_0(self);});btQuaternion.prototype["length2"]=btQuaternion.prototype.length2=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_length2_0(self)});btQuaternion.prototype["length"]=btQuaternion.prototype.length=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_length_0(self)});btQuaternion.prototype["dot"]=btQuaternion.prototype.dot=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btQuaternion_dot_1(self,arg0)});btQuaternion.prototype["normalized"]=btQuaternion.prototype.normalized=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btQuaternion_normalized_0(self),btQuaternion)});btQuaternion.prototype["getAxis"]=btQuaternion.prototype.getAxis=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btQuaternion_getAxis_0(self),btVector3)});btQuaternion.prototype["inverse"]=btQuaternion.prototype.inverse=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btQuaternion_inverse_0(self),btQuaternion)});btQuaternion.prototype["getAngle"]=btQuaternion.prototype.getAngle=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_getAngle_0(self)});btQuaternion.prototype["getAngleShortestPath"]=btQuaternion.prototype.getAngleShortestPath=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_getAngleShortestPath_0(self)});btQuaternion.prototype["angle"]=btQuaternion.prototype.angle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btQuaternion_angle_1(self,arg0)});btQuaternion.prototype["angleShortestPath"]=btQuaternion.prototype.angleShortestPath=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btQuaternion_angleShortestPath_1(self,arg0)});btQuaternion.prototype["op_add"]=btQuaternion.prototype.op_add=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btQuaternion_op_add_1(self,arg0),btQuaternion)});btQuaternion.prototype["op_sub"]=btQuaternion.prototype.op_sub=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btQuaternion_op_sub_1(self,arg0),btQuaternion)});btQuaternion.prototype["op_mul"]=btQuaternion.prototype.op_mul=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btQuaternion_op_mul_1(self,arg0),btQuaternion)});btQuaternion.prototype["op_mulq"]=btQuaternion.prototype.op_mulq=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btQuaternion_op_mulq_1(self,arg0),btQuaternion)});btQuaternion.prototype["op_div"]=btQuaternion.prototype.op_div=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btQuaternion_op_div_1(self,arg0),btQuaternion)});btQuaternion.prototype["x"]=btQuaternion.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_x_0(self)});btQuaternion.prototype["y"]=btQuaternion.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_y_0(self)});btQuaternion.prototype["z"]=btQuaternion.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_z_0(self)});btQuaternion.prototype["w"]=btQuaternion.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_w_0(self)});btQuaternion.prototype["setX"]=btQuaternion.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setX_1(self,arg0);});btQuaternion.prototype["setY"]=btQuaternion.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setY_1(self,arg0);});btQuaternion.prototype["setZ"]=btQuaternion.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setZ_1(self,arg0);});btQuaternion.prototype["setW"]=btQuaternion.prototype.setW=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setW_1(self,arg0);});btQuaternion.prototype["__destroy__"]=btQuaternion.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btQuaternion___destroy___0(self);});function btCapsuleShapeZ(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2(arg0,arg1);getCache(btCapsuleShapeZ)[this.ptr]=this;}btCapsuleShapeZ.prototype=Object.create(btCapsuleShape.prototype);btCapsuleShapeZ.prototype.constructor=btCapsuleShapeZ;btCapsuleShapeZ.prototype.__class__=btCapsuleShapeZ;btCapsuleShapeZ.__cache__={};Module["btCapsuleShapeZ"]=btCapsuleShapeZ;btCapsuleShapeZ.prototype["setMargin"]=btCapsuleShapeZ.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeZ_setMargin_1(self,arg0);});btCapsuleShapeZ.prototype["getMargin"]=btCapsuleShapeZ.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShapeZ_getMargin_0(self)});btCapsuleShapeZ.prototype["setLocalScaling"]=btCapsuleShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1(self,arg0);});btCapsuleShapeZ.prototype["calculateLocalInertia"]=btCapsuleShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2(self,arg0,arg1);});btCapsuleShapeZ.prototype["__destroy__"]=btCapsuleShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShapeZ___destroy___0(self);});function btContactSolverInfo(){throw"cannot construct a btContactSolverInfo, no constructor in IDL"}btContactSolverInfo.prototype=Object.create(WrapperObject.prototype);btContactSolverInfo.prototype.constructor=btContactSolverInfo;btContactSolverInfo.prototype.__class__=btContactSolverInfo;btContactSolverInfo.__cache__={};Module["btContactSolverInfo"]=btContactSolverInfo;btContactSolverInfo.prototype["get_m_splitImpulse"]=btContactSolverInfo.prototype.get_m_splitImpulse=(function(){var self=this.ptr;return!!_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0(self)});btContactSolverInfo.prototype["set_m_splitImpulse"]=btContactSolverInfo.prototype.set_m_splitImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1(self,arg0);});btContactSolverInfo.prototype["get_m_splitImpulsePenetrationThreshold"]=btContactSolverInfo.prototype.get_m_splitImpulsePenetrationThreshold=(function(){var self=this.ptr;return _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0(self)});btContactSolverInfo.prototype["set_m_splitImpulsePenetrationThreshold"]=btContactSolverInfo.prototype.set_m_splitImpulsePenetrationThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1(self,arg0);});btContactSolverInfo.prototype["get_m_numIterations"]=btContactSolverInfo.prototype.get_m_numIterations=(function(){var self=this.ptr;return _emscripten_bind_btContactSolverInfo_get_m_numIterations_0(self)});btContactSolverInfo.prototype["set_m_numIterations"]=btContactSolverInfo.prototype.set_m_numIterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btContactSolverInfo_set_m_numIterations_1(self,arg0);});btContactSolverInfo.prototype["__destroy__"]=btContactSolverInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btContactSolverInfo___destroy___0(self);});function btGeneric6DofSpringConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3(arg0,arg1,arg2);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(arg0,arg1,arg2,arg3);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this;}btGeneric6DofSpringConstraint.prototype=Object.create(btGeneric6DofConstraint.prototype);btGeneric6DofSpringConstraint.prototype.constructor=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.prototype.__class__=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.__cache__={};Module["btGeneric6DofSpringConstraint"]=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.prototype["enableSpring"]=btGeneric6DofSpringConstraint.prototype.enableSpring=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2(self,arg0,arg1);});btGeneric6DofSpringConstraint.prototype["setStiffness"]=btGeneric6DofSpringConstraint.prototype.setStiffness=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2(self,arg0,arg1);});btGeneric6DofSpringConstraint.prototype["setDamping"]=btGeneric6DofSpringConstraint.prototype.setDamping=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2(self,arg0,arg1);});btGeneric6DofSpringConstraint.prototype["setLinearLowerLimit"]=btGeneric6DofSpringConstraint.prototype.setLinearLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["setLinearUpperLimit"]=btGeneric6DofSpringConstraint.prototype.setLinearUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["setAngularLowerLimit"]=btGeneric6DofSpringConstraint.prototype.setAngularLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["setAngularUpperLimit"]=btGeneric6DofSpringConstraint.prototype.setAngularUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["enableFeedback"]=btGeneric6DofSpringConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["getBreakingImpulseThreshold"]=btGeneric6DofSpringConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0(self)});btGeneric6DofSpringConstraint.prototype["setBreakingImpulseThreshold"]=btGeneric6DofSpringConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1(self,arg0);});btGeneric6DofSpringConstraint.prototype["__destroy__"]=btGeneric6DofSpringConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0(self);});function btSphereShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btSphereShape_btSphereShape_1(arg0);getCache(btSphereShape)[this.ptr]=this;}btSphereShape.prototype=Object.create(btCollisionShape.prototype);btSphereShape.prototype.constructor=btSphereShape;btSphereShape.prototype.__class__=btSphereShape;btSphereShape.__cache__={};Module["btSphereShape"]=btSphereShape;btSphereShape.prototype["setMargin"]=btSphereShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSphereShape_setMargin_1(self,arg0);});btSphereShape.prototype["getMargin"]=btSphereShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btSphereShape_getMargin_0(self)});btSphereShape.prototype["setLocalScaling"]=btSphereShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSphereShape_setLocalScaling_1(self,arg0);});btSphereShape.prototype["calculateLocalInertia"]=btSphereShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSphereShape_calculateLocalInertia_2(self,arg0,arg1);});btSphereShape.prototype["__destroy__"]=btSphereShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSphereShape___destroy___0(self);});function LocalConvexResult(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;this.ptr=_emscripten_bind_LocalConvexResult_LocalConvexResult_5(arg0,arg1,arg2,arg3,arg4);getCache(LocalConvexResult)[this.ptr]=this;}LocalConvexResult.prototype=Object.create(WrapperObject.prototype);LocalConvexResult.prototype.constructor=LocalConvexResult;LocalConvexResult.prototype.__class__=LocalConvexResult;LocalConvexResult.__cache__={};Module["LocalConvexResult"]=LocalConvexResult;LocalConvexResult.prototype["get_m_hitCollisionObject"]=LocalConvexResult.prototype.get_m_hitCollisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0(self),btCollisionObject)});LocalConvexResult.prototype["set_m_hitCollisionObject"]=LocalConvexResult.prototype.set_m_hitCollisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1(self,arg0);});LocalConvexResult.prototype["get_m_localShapeInfo"]=LocalConvexResult.prototype.get_m_localShapeInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0(self),LocalShapeInfo)});LocalConvexResult.prototype["set_m_localShapeInfo"]=LocalConvexResult.prototype.set_m_localShapeInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1(self,arg0);});LocalConvexResult.prototype["get_m_hitNormalLocal"]=LocalConvexResult.prototype.get_m_hitNormalLocal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0(self),btVector3)});LocalConvexResult.prototype["set_m_hitNormalLocal"]=LocalConvexResult.prototype.set_m_hitNormalLocal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1(self,arg0);});LocalConvexResult.prototype["get_m_hitPointLocal"]=LocalConvexResult.prototype.get_m_hitPointLocal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0(self),btVector3)});LocalConvexResult.prototype["set_m_hitPointLocal"]=LocalConvexResult.prototype.set_m_hitPointLocal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1(self,arg0);});LocalConvexResult.prototype["get_m_hitFraction"]=LocalConvexResult.prototype.get_m_hitFraction=(function(){var self=this.ptr;return _emscripten_bind_LocalConvexResult_get_m_hitFraction_0(self)});LocalConvexResult.prototype["set_m_hitFraction"]=LocalConvexResult.prototype.set_m_hitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitFraction_1(self,arg0);});LocalConvexResult.prototype["__destroy__"]=LocalConvexResult.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_LocalConvexResult___destroy___0(self);});((function(){function setupEnums(){Module["PHY_FLOAT"]=_emscripten_enum_PHY_ScalarType_PHY_FLOAT();Module["PHY_DOUBLE"]=_emscripten_enum_PHY_ScalarType_PHY_DOUBLE();Module["PHY_INTEGER"]=_emscripten_enum_PHY_ScalarType_PHY_INTEGER();Module["PHY_SHORT"]=_emscripten_enum_PHY_ScalarType_PHY_SHORT();Module["PHY_FIXEDPOINT88"]=_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88();Module["PHY_UCHAR"]=_emscripten_enum_PHY_ScalarType_PHY_UCHAR();}if(Module["calledRun"])setupEnums();else addOnPreMain(setupEnums);}))();





  return Ammo;
};

module.exports = Ammo();
});

var graham_scan_min = createCommonjsModule(function (module) {
/**
 * Graham's Scan Convex Hull Algorithm
 * @desc An implementation of the Graham's Scan Convex Hull algorithm in Javascript.
 * @author Brian Barnett, brian@3kb.co.uk, http://brianbar.net/ || http://3kb.co.uk/
 * @version 1.0.2
 */
function ConvexHullGrahamScan(){this.anchorPoint=void 0,this.reverse=!1,this.points=[];}ConvexHullGrahamScan.prototype={constructor:ConvexHullGrahamScan,Point:function(a,b){this.x=a,this.y=b;},_findPolarAngle:function(a,b){var c=57.295779513082,d=b.x-a.x,e=b.y-a.y;if(0==d&&0==e)return 0;var f=Math.atan2(e,d)*c;return this.reverse?0>=f&&(f+=360):f>=0&&(f+=360),f},addPoint:function(a,b){if(void 0===this.anchorPoint)this.anchorPoint=new this.Point(a,b);else if(this.anchorPoint.y>b||this.anchorPoint.y==b&&this.anchorPoint.x>a)return this.anchorPoint.y=b,this.anchorPoint.x=a,void this.points.unshift(new this.Point(a,b));this.points.push(new this.Point(a,b));},_sortPoints:function(){var a=this;return this.points.sort(function(b,c){var d=a._findPolarAngle(a.anchorPoint,b),e=a._findPolarAngle(a.anchorPoint,c);return e>d?-1:d>e?1:0})},_checkPoints:function(a,b,c){var d,e=this._findPolarAngle(a,b),f=this._findPolarAngle(a,c);return e>f?(d=e-f,!(d>180)):f>e?(d=f-e,d>180):!1},getHull:function(){var a,b,c=[];if(this.reverse=this.points.every(function(a){return a.x<0&&a.y<0}),a=this._sortPoints(),b=a.length,4>b)return a;for(c.push(a.shift(),a.shift());;){var d,e,f;if(c.push(a.shift()),d=c[c.length-3],e=c[c.length-2],f=c[c.length-1],this._checkPoints(d,e,f)&&c.splice(c.length-2,1),0==a.length){if(b==c.length)return c;a=c,b=a.length,c=[],c.push(a.shift(),a.shift());}}}},"function"==typeof undefined&&undefined.amd&&undefined(function(){return ConvexHullGrahamScan}),"undefined"!='object'&&(module.exports=ConvexHullGrahamScan);

module.exports = ConvexHullGrahamScan;
});

var jquery2_1_4_min = createCommonjsModule(function (module) {
/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)};}("undefined"!=typeof window?window:commonjsGlobal,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a));},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase();});function s(a){var b="length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m();};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType;}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b));}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1;}};}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",");}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id");}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null;}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b;}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]));})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]");}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:");})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P);}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1);}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a);}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling";}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g]);}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f));}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l));}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i);}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l));}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r);})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c);}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v);}c&&((l=!o&&l)&&p--,f&&r.push(l));}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s);}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i);}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a;}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length);}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a);}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a);}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)};});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0;}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable());},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c);});}(arguments),d?f=h.length:b&&(e=c,j(b));}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--);}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments);});}),a=null;}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h;},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith;}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c);}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0);},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))));}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready();}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g);}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++;}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b);}catch(d){b[this.expando]=c,n.extend(a,b);}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]];}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]];}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c;}catch(e){}M.set(a,b,c);}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){
return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b);},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b);}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0);}return e}return"object"==typeof a?this.each(function(){M.set(this,a);}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b);});},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a);})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b);};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire();},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c]);})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a);})},dequeue:function(a){return this.each(function(){n.dequeue(this,a);})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f]);};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue;}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0);}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o]);}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"));}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a);}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()));}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d});}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result);}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault();}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1);},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault();},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation();},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation();}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}};}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0);};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1);},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b));}};}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b);})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b);})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this);})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ba=/<([\w:]+)/,ca=/<|&#?\w+;/,da=/<(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ia={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"));}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c]);}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i));}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue);}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length>0&&ma(g,!i&&oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent="";}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&&c.push(e);}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e];}delete M.cache[c[M.expando]];}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a);})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a);}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild);}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this);})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling);})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0;}catch(e){}}b&&this.empty().append(a);},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this);}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b);});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")));}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)};});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&&c||(qa=(qa||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e);}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}});}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0;}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),"normal"===e&&b in Da&&(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}};}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga);}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide();})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px");},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now;}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now);}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0;}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i();}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire();});})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2];}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0;}m[d]=q&&q[d]||n.style(a,d);}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide();}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b]);});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0));}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e);}else b[d]=e;}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem;}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b);},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a);}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue);},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0);};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c);};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a);})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish;})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)};}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)};}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0;},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop();},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval));},n.fx.stop=function(){clearInterval(Ma),Ma=null;},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d);};})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value;}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a);})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),
void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c);},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e};});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a];})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this;});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className));});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g);}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className));});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g);}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b);}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b);}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"");})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ab," ").indexOf(b)>=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e));});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b);}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value});}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)};}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml");}catch(d){b=void 0;}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c);}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e);}f=f||g;}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b);}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2];}b=f[a.toLowerCase()];}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&":"?")+"_="+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout");},k.timeout));try{t=1,c.send(r,x);}catch(w){if(!(2>t))throw w;x(-1,w);}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")));}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})};}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b));}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b));}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a);})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a);})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes);}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d);});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d);}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b);};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value);});else for(c in a)Ab(c,a[c],b,e);return d.join("&").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]();}),k.cors=!!Eb&&"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()));}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&&a.data||null);}catch(h){if(b)throw h}},abort:function(){b&&b();}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET");}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type);}),l.head.appendChild(b[0]);},abort:function(){c&&c();}}}});var Fb=[],Gb=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments;},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0;}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a);}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a]);}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)};}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m);}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b);});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)};}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0});}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)};});}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof undefined&&undefined.amd&&undefined("jquery",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});
});

/**
 * @author dmarcos / https://github.com/dmarcos
 * @author mrdoob / http://mrdoob.com
 */

var VRControls = function VRControls(object, onError) {

	var scope = this;

	var vrInput;

	var standingMatrix = new Matrix4();

	function gotVRDevices(devices) {

		for (var i = 0; i < devices.length; i++) {

			if ('VRDisplay' in window && devices[i] instanceof VRDisplay || 'PositionSensorVRDevice' in window && devices[i] instanceof PositionSensorVRDevice) {

				vrInput = devices[i];
				break; // We keep the first we encounter
			}
		}

		if (!vrInput) {

			if (onError) onError('VR input not available.');
		}
	}

	if (navigator.getVRDisplays) {

		navigator.getVRDisplays().then(gotVRDevices);
	} else if (navigator.getVRDevices) {

		// Deprecated API.
		navigator.getVRDevices().then(gotVRDevices);
	}

	// the Rift SDK returns the position in meters
	// this scale factor allows the user to define how meters
	// are converted to scene units.

	this.scale = 1;

	// If true will use "standing space" coordinate system where y=0 is the
	// floor and x=0, z=0 is the center of the room.
	this.standing = false;

	// Distance from the users eyes to the floor in meters. Used when
	// standing=true but the VRDisplay doesn't provide stageParameters.
	this.userHeight = 1.6;

	this.update = function () {

		if (vrInput) {

			if (vrInput.getPose) {

				var pose = vrInput.getPose();

				if (pose.orientation !== null) {

					object.quaternion.fromArray(pose.orientation);
				}

				if (pose.position !== null) {

					object.position.fromArray(pose.position);
				} else {

					object.position.set(0, 0, 0);
				}
			} else {

				// Deprecated API.
				var state = vrInput.getState();

				if (state.orientation !== null) {

					object.quaternion.copy(state.orientation);
				}

				if (state.position !== null) {

					object.position.copy(state.position);
				} else {

					object.position.set(0, 0, 0);
				}
			}

			if (this.standing) {

				if (vrInput.stageParameters) {

					object.updateMatrix();

					standingMatrix.fromArray(vrInput.stageParameters.sittingToStandingTransform);
					object.applyMatrix(standingMatrix);
				} else {

					object.position.setY(object.position.y + this.userHeight);
				}
			}

			object.position.multiplyScalar(scope.scale);
		}
	};

	this.resetPose = function () {

		if (vrInput) {

			if (vrInput.resetPose !== undefined) {

				vrInput.resetPose();
			} else if (vrInput.resetSensor !== undefined) {

				// Deprecated API.
				vrInput.resetSensor();
			} else if (vrInput.zeroSensor !== undefined) {

				// Really deprecated API.
				vrInput.zeroSensor();
			}
		}
	};

	this.resetSensor = function () {

		console.warn('THREE.VRControls: .resetSensor() is now .resetPose().');
		this.resetPose();
	};

	this.zeroSensor = function () {

		console.warn('THREE.VRControls: .zeroSensor() is now .resetPose().');
		this.resetPose();
	};

	this.dispose = function () {

		vrInput = null;
	};
};

// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
_export(_export.S + _export.F * !_descriptors, 'Object', {defineProperties: _objectDps});

var $Object$3 = _core.Object;
var defineProperties$1 = function defineProperties(T, D){
  return $Object$3.defineProperties(T, D);
};

var defineProperties = createCommonjsModule(function (module) {
module.exports = { "default": defineProperties$1, __esModule: true };
});

var _Object$defineProperties = unwrapExports(defineProperties);

/**
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 */

// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
//
//    Orbit - left mouse / touch: one finger move
//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish
//    Pan - right mouse, or arrow keys / touch: three finger swipe

var OrbitControls = function OrbitControls(object, domElement) {

	this.object = object;

	this.domElement = domElement !== undefined ? domElement : document;

	// Set to false to disable this control
	this.enabled = true;

	// "target" sets the location of focus, where the object orbits around
	this.target = new Vector3();

	// How far you can dolly in and out ( PerspectiveCamera only )
	this.minDistance = 0;
	this.maxDistance = Infinity;

	// How far you can zoom in and out ( OrthographicCamera only )
	this.minZoom = 0;
	this.maxZoom = Infinity;

	// How far you can orbit vertically, upper and lower limits.
	// Range is 0 to Math.PI radians.
	this.minPolarAngle = 0; // radians
	this.maxPolarAngle = Math.PI; // radians

	// How far you can orbit horizontally, upper and lower limits.
	// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].
	this.minAzimuthAngle = -Infinity; // radians
	this.maxAzimuthAngle = Infinity; // radians

	// Set to true to enable damping (inertia)
	// If damping is enabled, you must call controls.update() in your animation loop
	this.enableDamping = false;
	this.dampingFactor = 0.25;

	// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
	// Set to false to disable zooming
	this.enableZoom = true;
	this.zoomSpeed = 1.0;

	// Set to false to disable rotating
	this.enableRotate = true;
	this.rotateSpeed = 1.0;

	// Set to false to disable panning
	this.enablePan = true;
	this.keyPanSpeed = 7.0; // pixels moved per arrow key push

	// Set to true to automatically rotate around the target
	// If auto-rotate is enabled, you must call controls.update() in your animation loop
	this.autoRotate = false;
	this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60

	// Set to false to disable use of the keys
	this.enableKeys = true;

	// The four arrow keys
	this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };

	// Mouse buttons
	this.mouseButtons = { ORBIT: MOUSE.LEFT, ZOOM: MOUSE.MIDDLE, PAN: MOUSE.RIGHT };

	// for reset
	this.target0 = this.target.clone();
	this.position0 = this.object.position.clone();
	this.zoom0 = this.object.zoom;

	//
	// public methods
	//

	this.getPolarAngle = function () {

		return spherical.phi;
	};

	this.getAzimuthalAngle = function () {

		return spherical.theta;
	};

	this.saveState = function () {

		scope.target0.copy(scope.target);
		scope.position0.copy(scope.object.position);
		scope.zoom0 = scope.object.zoom;
	};

	this.reset = function () {

		scope.target.copy(scope.target0);
		scope.object.position.copy(scope.position0);
		scope.object.zoom = scope.zoom0;

		scope.object.updateProjectionMatrix();
		scope.dispatchEvent(changeEvent);

		scope.update();

		state = STATE.NONE;
	};

	// this method is exposed, but perhaps it would be better if we can make it private...
	this.update = function () {

		var offset = new Vector3();

		// so camera.up is the orbit axis
		var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));
		var quatInverse = quat.clone().inverse();

		var lastPosition = new Vector3();
		var lastQuaternion = new Quaternion();

		return function update() {

			var position = scope.object.position;

			offset.copy(position).sub(scope.target);

			// rotate offset to "y-axis-is-up" space
			offset.applyQuaternion(quat);

			// angle from z-axis around y-axis
			spherical.setFromVector3(offset);

			if (scope.autoRotate && state === STATE.NONE) {

				rotateLeft(getAutoRotationAngle());
			}

			spherical.theta += sphericalDelta.theta;
			spherical.phi += sphericalDelta.phi;

			// restrict theta to be between desired limits
			spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));

			// restrict phi to be between desired limits
			spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));

			spherical.makeSafe();

			spherical.radius *= scale;

			// restrict radius to be between desired limits
			spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));

			// move target to panned location
			scope.target.add(panOffset);

			offset.setFromSpherical(spherical);

			// rotate offset back to "camera-up-vector-is-up" space
			offset.applyQuaternion(quatInverse);

			position.copy(scope.target).add(offset);

			scope.object.lookAt(scope.target);

			if (scope.enableDamping === true) {

				sphericalDelta.theta *= 1 - scope.dampingFactor;
				sphericalDelta.phi *= 1 - scope.dampingFactor;
			} else {

				sphericalDelta.set(0, 0, 0);
			}

			scale = 1;
			panOffset.set(0, 0, 0);

			// update condition is:
			// min(camera displacement, camera rotation in radians)^2 > EPS
			// using small-angle approximation cos(x/2) = 1 - x^2 / 8

			if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {

				scope.dispatchEvent(changeEvent);

				lastPosition.copy(scope.object.position);
				lastQuaternion.copy(scope.object.quaternion);
				zoomChanged = false;

				return true;
			}

			return false;
		};
	}();

	this.dispose = function () {

		scope.domElement.removeEventListener('contextmenu', onContextMenu, false);
		scope.domElement.removeEventListener('mousedown', onMouseDown, false);
		scope.domElement.removeEventListener('wheel', onMouseWheel, false);

		scope.domElement.removeEventListener('touchstart', onTouchStart, false);
		scope.domElement.removeEventListener('touchend', onTouchEnd, false);
		scope.domElement.removeEventListener('touchmove', onTouchMove, false);

		document.removeEventListener('mousemove', onMouseMove, false);
		document.removeEventListener('mouseup', onMouseUp, false);

		window.removeEventListener('keydown', onKeyDown, false);

		//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?
	};

	//
	// internals
	//

	var scope = this;

	var changeEvent = { type: 'change' };
	var startEvent = { type: 'start' };
	var endEvent = { type: 'end' };

	var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };

	var state = STATE.NONE;

	var EPS = 0.000001;

	// current position in spherical coordinates
	var spherical = new Spherical();
	var sphericalDelta = new Spherical();

	var scale = 1;
	var panOffset = new Vector3();
	var zoomChanged = false;

	var rotateStart = new Vector2();
	var rotateEnd = new Vector2();
	var rotateDelta = new Vector2();

	var panStart = new Vector2();
	var panEnd = new Vector2();
	var panDelta = new Vector2();

	var dollyStart = new Vector2();
	var dollyEnd = new Vector2();
	var dollyDelta = new Vector2();

	function getAutoRotationAngle() {

		return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;
	}

	function getZoomScale() {

		return Math.pow(0.95, scope.zoomSpeed);
	}

	function rotateLeft(angle) {

		sphericalDelta.theta -= angle;
	}

	function rotateUp(angle) {

		sphericalDelta.phi -= angle;
	}

	var panLeft = function () {

		var v = new Vector3();

		return function panLeft(distance, objectMatrix) {

			v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix
			v.multiplyScalar(-distance);

			panOffset.add(v);
		};
	}();

	var panUp = function () {

		var v = new Vector3();

		return function panUp(distance, objectMatrix) {

			v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix
			v.multiplyScalar(distance);

			panOffset.add(v);
		};
	}();

	// deltaX and deltaY are in pixels; right and down are positive
	var pan = function () {

		var offset = new Vector3();

		return function pan(deltaX, deltaY) {

			var element = scope.domElement === document ? scope.domElement.body : scope.domElement;

			if (scope.object instanceof PerspectiveCamera) {

				// perspective
				var position = scope.object.position;
				offset.copy(position).sub(scope.target);
				var targetDistance = offset.length();

				// half of the fov is center to top of screen
				targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);

				// we actually don't use screenWidth, since perspective camera is fixed to screen height
				panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);
				panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);
			} else if (scope.object instanceof OrthographicCamera) {

				// orthographic
				panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);
				panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);
			} else {

				// camera neither orthographic nor perspective
				console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');
				scope.enablePan = false;
			}
		};
	}();

	function dollyIn(dollyScale) {

		if (scope.object instanceof PerspectiveCamera) {

			scale /= dollyScale;
		} else if (scope.object instanceof OrthographicCamera) {

			scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));
			scope.object.updateProjectionMatrix();
			zoomChanged = true;
		} else {

			console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');
			scope.enableZoom = false;
		}
	}

	function dollyOut(dollyScale) {

		if (scope.object instanceof PerspectiveCamera) {

			scale *= dollyScale;
		} else if (scope.object instanceof OrthographicCamera) {

			scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));
			scope.object.updateProjectionMatrix();
			zoomChanged = true;
		} else {

			console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');
			scope.enableZoom = false;
		}
	}

	//
	// event callbacks - update the object state
	//

	function handleMouseDownRotate(event) {

		//console.log( 'handleMouseDownRotate' );

		rotateStart.set(event.clientX, event.clientY);
	}

	function handleMouseDownDolly(event) {

		//console.log( 'handleMouseDownDolly' );

		dollyStart.set(event.clientX, event.clientY);
	}

	function handleMouseDownPan(event) {

		//console.log( 'handleMouseDownPan' );

		panStart.set(event.clientX, event.clientY);
	}

	function handleMouseMoveRotate(event) {

		//console.log( 'handleMouseMoveRotate' );

		rotateEnd.set(event.clientX, event.clientY);
		rotateDelta.subVectors(rotateEnd, rotateStart);

		var element = scope.domElement === document ? scope.domElement.body : scope.domElement;

		// rotating across whole screen goes 360 degrees around
		rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);

		// rotating up and down along whole screen attempts to go 360, but limited to 180
		rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);

		rotateStart.copy(rotateEnd);

		scope.update();
	}

	function handleMouseMoveDolly(event) {

		//console.log( 'handleMouseMoveDolly' );

		dollyEnd.set(event.clientX, event.clientY);

		dollyDelta.subVectors(dollyEnd, dollyStart);

		if (dollyDelta.y > 0) {

			dollyIn(getZoomScale());
		} else if (dollyDelta.y < 0) {

			dollyOut(getZoomScale());
		}

		dollyStart.copy(dollyEnd);

		scope.update();
	}

	function handleMouseMovePan(event) {

		//console.log( 'handleMouseMovePan' );

		panEnd.set(event.clientX, event.clientY);

		panDelta.subVectors(panEnd, panStart);

		pan(panDelta.x, panDelta.y);

		panStart.copy(panEnd);

		scope.update();
	}

	function handleMouseUp(event) {

		// console.log( 'handleMouseUp' );

	}

	function handleMouseWheel(event) {

		// console.log( 'handleMouseWheel' );

		if (event.deltaY < 0) {

			dollyOut(getZoomScale());
		} else if (event.deltaY > 0) {

			dollyIn(getZoomScale());
		}

		scope.update();
	}

	function handleKeyDown(event) {

		//console.log( 'handleKeyDown' );

		switch (event.keyCode) {

			case scope.keys.UP:
				pan(0, scope.keyPanSpeed);
				scope.update();
				break;

			case scope.keys.BOTTOM:
				pan(0, -scope.keyPanSpeed);
				scope.update();
				break;

			case scope.keys.LEFT:
				pan(scope.keyPanSpeed, 0);
				scope.update();
				break;

			case scope.keys.RIGHT:
				pan(-scope.keyPanSpeed, 0);
				scope.update();
				break;

		}
	}

	function handleTouchStartRotate(event) {

		//console.log( 'handleTouchStartRotate' );

		rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);
	}

	function handleTouchStartDolly(event) {

		//console.log( 'handleTouchStartDolly' );

		var dx = event.touches[0].pageX - event.touches[1].pageX;
		var dy = event.touches[0].pageY - event.touches[1].pageY;

		var distance = Math.sqrt(dx * dx + dy * dy);

		dollyStart.set(0, distance);
	}

	function handleTouchStartPan(event) {

		//console.log( 'handleTouchStartPan' );

		panStart.set(event.touches[0].pageX, event.touches[0].pageY);
	}

	function handleTouchMoveRotate(event) {

		//console.log( 'handleTouchMoveRotate' );

		rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);
		rotateDelta.subVectors(rotateEnd, rotateStart);

		var element = scope.domElement === document ? scope.domElement.body : scope.domElement;

		// rotating across whole screen goes 360 degrees around
		rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);

		// rotating up and down along whole screen attempts to go 360, but limited to 180
		rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);

		rotateStart.copy(rotateEnd);

		scope.update();
	}

	function handleTouchMoveDolly(event) {

		//console.log( 'handleTouchMoveDolly' );

		var dx = event.touches[0].pageX - event.touches[1].pageX;
		var dy = event.touches[0].pageY - event.touches[1].pageY;

		var distance = Math.sqrt(dx * dx + dy * dy);

		dollyEnd.set(0, distance);

		dollyDelta.subVectors(dollyEnd, dollyStart);

		if (dollyDelta.y > 0) {

			dollyOut(getZoomScale());
		} else if (dollyDelta.y < 0) {

			dollyIn(getZoomScale());
		}

		dollyStart.copy(dollyEnd);

		scope.update();
	}

	function handleTouchMovePan(event) {

		//console.log( 'handleTouchMovePan' );

		panEnd.set(event.touches[0].pageX, event.touches[0].pageY);

		panDelta.subVectors(panEnd, panStart);

		pan(panDelta.x, panDelta.y);

		panStart.copy(panEnd);

		scope.update();
	}

	function handleTouchEnd(event) {}

	//console.log( 'handleTouchEnd' );

	//
	// event handlers - FSM: listen for events and reset state
	//

	function onMouseDown(event) {

		if (scope.enabled === false) return;

		event.preventDefault();

		switch (event.button) {

			case scope.mouseButtons.ORBIT:

				if (scope.enableRotate === false) return;

				handleMouseDownRotate(event);

				state = STATE.ROTATE;

				break;

			case scope.mouseButtons.ZOOM:

				if (scope.enableZoom === false) return;

				handleMouseDownDolly(event);

				state = STATE.DOLLY;

				break;

			case scope.mouseButtons.PAN:

				if (scope.enablePan === false) return;

				handleMouseDownPan(event);

				state = STATE.PAN;

				break;

		}

		if (state !== STATE.NONE) {

			document.addEventListener('mousemove', onMouseMove, false);
			document.addEventListener('mouseup', onMouseUp, false);

			scope.dispatchEvent(startEvent);
		}
	}

	function onMouseMove(event) {

		if (scope.enabled === false) return;

		event.preventDefault();

		switch (state) {

			case STATE.ROTATE:

				if (scope.enableRotate === false) return;

				handleMouseMoveRotate(event);

				break;

			case STATE.DOLLY:

				if (scope.enableZoom === false) return;

				handleMouseMoveDolly(event);

				break;

			case STATE.PAN:

				if (scope.enablePan === false) return;

				handleMouseMovePan(event);

				break;

		}
	}

	function onMouseUp(event) {

		if (scope.enabled === false) return;

		handleMouseUp(event);

		document.removeEventListener('mousemove', onMouseMove, false);
		document.removeEventListener('mouseup', onMouseUp, false);

		scope.dispatchEvent(endEvent);

		state = STATE.NONE;
	}

	function onMouseWheel(event) {

		if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;

		event.preventDefault();
		event.stopPropagation();

		handleMouseWheel(event);

		scope.dispatchEvent(startEvent); // not sure why these are here...
		scope.dispatchEvent(endEvent);
	}

	function onKeyDown(event) {

		if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;

		handleKeyDown(event);
	}

	function onTouchStart(event) {

		if (scope.enabled === false) return;

		switch (event.touches.length) {

			case 1:
				// one-fingered touch: rotate

				if (scope.enableRotate === false) return;

				handleTouchStartRotate(event);

				state = STATE.TOUCH_ROTATE;

				break;

			case 2:
				// two-fingered touch: dolly

				if (scope.enableZoom === false) return;

				handleTouchStartDolly(event);

				state = STATE.TOUCH_DOLLY;

				break;

			case 3:
				// three-fingered touch: pan

				if (scope.enablePan === false) return;

				handleTouchStartPan(event);

				state = STATE.TOUCH_PAN;

				break;

			default:

				state = STATE.NONE;

		}

		if (state !== STATE.NONE) {

			scope.dispatchEvent(startEvent);
		}
	}

	function onTouchMove(event) {

		if (scope.enabled === false) return;

		event.preventDefault();
		event.stopPropagation();

		switch (event.touches.length) {

			case 1:
				// one-fingered touch: rotate

				if (scope.enableRotate === false) return;
				if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...

				handleTouchMoveRotate(event);

				break;

			case 2:
				// two-fingered touch: dolly

				if (scope.enableZoom === false) return;
				if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...

				handleTouchMoveDolly(event);

				break;

			case 3:
				// three-fingered touch: pan

				if (scope.enablePan === false) return;
				if (state !== STATE.TOUCH_PAN) return; // is this needed?...

				handleTouchMovePan(event);

				break;

			default:

				state = STATE.NONE;

		}
	}

	function onTouchEnd(event) {

		if (scope.enabled === false) return;

		handleTouchEnd(event);

		scope.dispatchEvent(endEvent);

		state = STATE.NONE;
	}

	function onContextMenu(event) {

		event.preventDefault();
	}

	//

	scope.domElement.addEventListener('contextmenu', onContextMenu, false);

	scope.domElement.addEventListener('mousedown', onMouseDown, false);
	scope.domElement.addEventListener('wheel', onMouseWheel, false);

	scope.domElement.addEventListener('touchstart', onTouchStart, false);
	scope.domElement.addEventListener('touchend', onTouchEnd, false);
	scope.domElement.addEventListener('touchmove', onTouchMove, false);

	window.addEventListener('keydown', onKeyDown, false);

	// force an update at start

	this.update();
};

OrbitControls.prototype = _Object$create(EventDispatcher.prototype);
OrbitControls.prototype.constructor = OrbitControls;

_Object$defineProperties(OrbitControls.prototype, {

	center: {

		get: function get() {

			console.warn('OrbitControls: .center has been renamed to .target');
			return this.target;
		}

	},

	// backward compatibility

	noZoom: {

		get: function get() {

			console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');
			return !this.enableZoom;
		},

		set: function set(value) {

			console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');
			this.enableZoom = !value;
		}

	},

	noRotate: {

		get: function get() {

			console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');
			return !this.enableRotate;
		},

		set: function set(value) {

			console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');
			this.enableRotate = !value;
		}

	},

	noPan: {

		get: function get() {

			console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');
			return !this.enablePan;
		},

		set: function set(value) {

			console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');
			this.enablePan = !value;
		}

	},

	noKeys: {

		get: function get() {

			console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');
			return !this.enableKeys;
		},

		set: function set(value) {

			console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');
			this.enableKeys = !value;
		}

	},

	staticMoving: {

		get: function get() {

			console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');
			return !this.enableDamping;
		},

		set: function set(value) {

			console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');
			this.enableDamping = !value;
		}

	},

	dynamicDampingFactor: {

		get: function get() {

			console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');
			return this.dampingFactor;
		},

		set: function set(value) {

			console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');
			this.dampingFactor = value;
		}

	}

});

var _anInstance = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

// call something on iterator step with safe closing on error

var _iterCall = function(iterator, fn, value, entries){
  try {
    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)_anObject(ret.call(iterator));
    throw e;
  }
};

// check on default Array iterator
var ITERATOR$2   = _wks('iterator');
var ArrayProto = Array.prototype;

var _isArrayIter = function(it){
  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$2] === it);
};

var _forOf = createCommonjsModule(function (module) {
var BREAK       = {}
  , RETURN      = {};
var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : core_getIteratorMethod(iterable)
    , f      = _ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator, result;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(_isArrayIter(iterFn))for(length = _toLength(iterable.length); length > index; index++){
    result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if(result === BREAK || result === RETURN)return result;
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    result = _iterCall(iterator, f, step.value, entries);
    if(result === BREAK || result === RETURN)return result;
  }
};
exports.BREAK  = BREAK;
exports.RETURN = RETURN;
});

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var SPECIES   = _wks('species');
var _speciesConstructor = function(O, D){
  var C = _anObject(O).constructor, S;
  return C === undefined || (S = _anObject(C)[SPECIES]) == undefined ? D : _aFunction(S);
};

// fast apply, http://jsperf.lnkit.com/fast-apply/5
var _invoke = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};

var process$2            = _global.process;
var setTask            = _global.setImmediate;
var clearTask          = _global.clearImmediate;
var MessageChannel     = _global.MessageChannel;
var counter            = 0;
var queue              = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer;
var channel;
var port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      _invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(_cof(process$2) == 'process'){
    defer = function(id){
      process$2.nextTick(_ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = _ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(_global.addEventListener && typeof postMessage == 'function' && !_global.importScripts){
    defer = function(id){
      _global.postMessage(id + '', '*');
    };
    _global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in _domCreate('script')){
    defer = function(id){
      _html.appendChild(_domCreate('script'))[ONREADYSTATECHANGE] = function(){
        _html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(_ctx(run, id, 1), 0);
    };
  }
}
var _task = {
  set:   setTask,
  clear: clearTask
};

var macrotask = _task.set;
var Observer  = _global.MutationObserver || _global.WebKitMutationObserver;
var process$3   = _global.process;
var Promise   = _global.Promise;
var isNode$1    = _cof(process$3) == 'process';

var _microtask = function(){
  var head, last, notify;

  var flush = function(){
    var parent, fn;
    if(isNode$1 && (parent = process$3.domain))parent.exit();
    while(head){
      fn   = head.fn;
      head = head.next;
      try {
        fn();
      } catch(e){
        if(head)notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if(parent)parent.enter();
  };

  // Node.js
  if(isNode$1){
    notify = function(){
      process$3.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if(Observer){
    var toggle = true
      , node   = document.createTextNode('');
    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
    notify = function(){
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if(Promise && Promise.resolve){
    var promise = Promise.resolve();
    notify = function(){
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function(){
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(_global, flush);
    };
  }

  return function(fn){
    var task = {fn: fn, next: undefined};
    if(last)last.next = task;
    if(!head){
      head = task;
      notify();
    } last = task;
  };
};

var _redefineAll = function(target, src, safe){
  for(var key in src){
    if(safe && target[key])target[key] = src[key];
    else _hide(target, key, src[key]);
  } return target;
};

var SPECIES$1     = _wks('species');

var _setSpecies = function(KEY){
  var C = typeof _core[KEY] == 'function' ? _core[KEY] : _global[KEY];
  if(_descriptors && C && !C[SPECIES$1])_objectDp.f(C, SPECIES$1, {
    configurable: true,
    get: function(){ return this; }
  });
};

var ITERATOR$3     = _wks('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR$3]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

var _iterDetect = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR$3]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR$3] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};

var task               = _task.set;
var microtask          = _microtask();
var PROMISE            = 'Promise';
var TypeError$1          = _global.TypeError;
var process$1            = _global.process;
var $Promise           = _global[PROMISE];
var process$1            = _global.process;
var isNode             = _classof(process$1) == 'process';
var empty$2              = function(){ /* empty */ };
var Internal;
var GenericPromiseCapability;
var Wrapper;

var USE_NATIVE$1 = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[_wks('species')] = function(exec){ exec(empty$2, empty$2); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty$2) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return _isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError$1('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = _aFunction(resolve);
  this.reject  = _aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError$1('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(_global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process$1.emit('unhandledRejection', value, promise);
        } else if(handler = _global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = _global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(_global, function(){
    var handler;
    if(isNode){
      process$1.emit('rejectionHandled', promise);
    } else if(handler = _global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError$1("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, _ctx($resolve, wrapper, 1), _ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE$1){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    _anInstance(this, $Promise, PROMISE, '_h');
    _aFunction(executor);
    Internal.call(this);
    try {
      executor(_ctx($resolve, this, 1), _ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = _redefineAll($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(_speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process$1.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = _ctx($resolve, promise, 1);
    this.reject  = _ctx($reject, promise, 1);
  };
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE$1, {Promise: $Promise});
_setToStringTag($Promise, PROMISE);
_setSpecies(PROMISE);
Wrapper = _core[PROMISE];

// statics
_export(_export.S + _export.F * !USE_NATIVE$1, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
_export(_export.S + _export.F * (_library || !USE_NATIVE$1), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
_export(_export.S + _export.F * !(USE_NATIVE$1 && _iterDetect(function(iter){
  $Promise.all(iter)['catch'](empty$2);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      _forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      _forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});

var promise$1 = _core.Promise;

var promise = createCommonjsModule(function (module) {
module.exports = { "default": promise$1, __esModule: true };
});

var _Promise = unwrapExports(promise);

/**
 * @author dmarcos / https://github.com/dmarcos
 * @author mrdoob / http://mrdoob.com
 *
 * WebVR Spec: http://mozvr.github.io/webvr-spec/webvr.html
 *
 * Firefox: http://mozvr.com/downloads/
 * Chromium: https://drive.google.com/folderview?id=0BzudLt22BqGRbW9WTHMtOWMzNjQ&usp=sharing#list
 *
 */

var VREffect = function VREffect(renderer, onError) {

			var vrHMD;
			var isDeprecatedAPI = false;
			var eyeTranslationL = new Vector3();
			var eyeTranslationR = new Vector3();
			var renderRectL, renderRectR;
			var eyeFOVL, eyeFOVR;

			function gotVRDevices(devices) {

						for (var i = 0; i < devices.length; i++) {

									if ('VRDisplay' in window && devices[i] instanceof VRDisplay) {

												vrHMD = devices[i];
												isDeprecatedAPI = false;
												break; // We keep the first we encounter
									} else if ('HMDVRDevice' in window && devices[i] instanceof HMDVRDevice) {

												vrHMD = devices[i];
												isDeprecatedAPI = true;
												break; // We keep the first we encounter
									}
						}

						if (vrHMD === undefined) {

									if (onError) onError('HMD not available');
						}
			}

			if (navigator.getVRDisplays) {

						navigator.getVRDisplays().then(gotVRDevices);
			} else if (navigator.getVRDevices) {

						// Deprecated API.
						navigator.getVRDevices().then(gotVRDevices);
			}

			//

			this.scale = 1;

			var isPresenting = false;

			var rendererSize = renderer.getSize();
			var rendererPixelRatio = renderer.getPixelRatio();

			this.setSize = function (width, height) {

						rendererSize = { width: width, height: height };

						if (isPresenting) {

									var eyeParamsL = vrHMD.getEyeParameters('left');
									renderer.setPixelRatio(1);

									if (isDeprecatedAPI) {

												renderer.setSize(eyeParamsL.renderRect.width * 2, eyeParamsL.renderRect.height, false);
									} else {

												renderer.setSize(eyeParamsL.renderWidth * 2, eyeParamsL.renderHeight, false);
									}
						} else {

									renderer.setPixelRatio(rendererPixelRatio);
									renderer.setSize(width, height);
						}
			};

			// fullscreen

			var canvas = renderer.domElement;
			var requestFullscreen;
			var exitFullscreen;
			var fullscreenElement;

			function onFullscreenChange() {

						var wasPresenting = isPresenting;
						isPresenting = vrHMD !== undefined && (vrHMD.isPresenting || isDeprecatedAPI && document[fullscreenElement] instanceof window.HTMLElement);

						if (wasPresenting === isPresenting) {

									return;
						}

						if (isPresenting) {

									rendererPixelRatio = renderer.getPixelRatio();
									rendererSize = renderer.getSize();

									var eyeParamsL = vrHMD.getEyeParameters('left');
									var eyeWidth, eyeHeight;

									if (isDeprecatedAPI) {

												eyeWidth = eyeParamsL.renderRect.width;
												eyeHeight = eyeParamsL.renderRect.height;
									} else {

												eyeWidth = eyeParamsL.renderWidth;
												eyeHeight = eyeParamsL.renderHeight;
									}

									renderer.setPixelRatio(1);
									renderer.setSize(eyeWidth * 2, eyeHeight, false);
						} else {

									renderer.setPixelRatio(rendererPixelRatio);
									renderer.setSize(rendererSize.width, rendererSize.height);
						}
			}

			if (canvas.requestFullscreen) {

						requestFullscreen = 'requestFullscreen';
						fullscreenElement = 'fullscreenElement';
						exitFullscreen = 'exitFullscreen';
						document.addEventListener('fullscreenchange', onFullscreenChange, false);
			} else if (canvas.mozRequestFullScreen) {

						requestFullscreen = 'mozRequestFullScreen';
						fullscreenElement = 'mozFullScreenElement';
						exitFullscreen = 'mozCancelFullScreen';
						document.addEventListener('mozfullscreenchange', onFullscreenChange, false);
			} else {

						requestFullscreen = 'webkitRequestFullscreen';
						fullscreenElement = 'webkitFullscreenElement';
						exitFullscreen = 'webkitExitFullscreen';
						document.addEventListener('webkitfullscreenchange', onFullscreenChange, false);
			}

			window.addEventListener('vrdisplaypresentchange', onFullscreenChange, false);

			this.setFullScreen = function (boolean) {

						return new _Promise(function (resolve, reject) {

									if (vrHMD === undefined) {

												reject(new Error('No VR hardware found.'));
												return;
									}
									if (isPresenting === boolean) {

												resolve();
												return;
									}

									if (!isDeprecatedAPI) {

												if (boolean) {

															resolve(vrHMD.requestPresent([{ source: canvas }]));
												} else {

															resolve(vrHMD.exitPresent());
												}
									} else {

												if (canvas[requestFullscreen]) {

															canvas[boolean ? requestFullscreen : exitFullscreen]({ vrDisplay: vrHMD });
															resolve();
												} else {

															console.error('No compatible requestFullscreen method found.');
															reject(new Error('No compatible requestFullscreen method found.'));
												}
									}
						});
			};

			this.requestPresent = function () {

						return this.setFullScreen(true);
			};

			this.exitPresent = function () {

						return this.setFullScreen(false);
			};

			// render

			var cameraL = new PerspectiveCamera();
			cameraL.layers.enable(1);

			var cameraR = new PerspectiveCamera();
			cameraR.layers.enable(2);

			this.render = function (scene, camera) {

						if (vrHMD && isPresenting) {

									var autoUpdate = scene.autoUpdate;

									if (autoUpdate) {

												scene.updateMatrixWorld();
												scene.autoUpdate = false;
									}

									var eyeParamsL = vrHMD.getEyeParameters('left');
									var eyeParamsR = vrHMD.getEyeParameters('right');

									if (!isDeprecatedAPI) {

												eyeTranslationL.fromArray(eyeParamsL.offset);
												eyeTranslationR.fromArray(eyeParamsR.offset);
												eyeFOVL = eyeParamsL.fieldOfView;
												eyeFOVR = eyeParamsR.fieldOfView;
									} else {

												eyeTranslationL.copy(eyeParamsL.eyeTranslation);
												eyeTranslationR.copy(eyeParamsR.eyeTranslation);
												eyeFOVL = eyeParamsL.recommendedFieldOfView;
												eyeFOVR = eyeParamsR.recommendedFieldOfView;
									}

									if (Array.isArray(scene)) {

												console.warn('THREE.VREffect.render() no longer supports arrays. Use object.layers instead.');
												scene = scene[0];
									}

									// When rendering we don't care what the recommended size is, only what the actual size
									// of the backbuffer is.
									var size = renderer.getSize();
									renderRectL = { x: 0, y: 0, width: size.width / 2, height: size.height };
									renderRectR = { x: size.width / 2, y: 0, width: size.width / 2, height: size.height };

									renderer.setScissorTest(true);
									renderer.clear();

									if (camera.parent === null) camera.updateMatrixWorld();

									cameraL.projectionMatrix = fovToProjection(eyeFOVL, true, camera.near, camera.far);
									cameraR.projectionMatrix = fovToProjection(eyeFOVR, true, camera.near, camera.far);

									camera.matrixWorld.decompose(cameraL.position, cameraL.quaternion, cameraL.scale);
									camera.matrixWorld.decompose(cameraR.position, cameraR.quaternion, cameraR.scale);

									var scale = this.scale;
									cameraL.translateOnAxis(eyeTranslationL, scale);
									cameraR.translateOnAxis(eyeTranslationR, scale);

									// render left eye
									renderer.setViewport(renderRectL.x, renderRectL.y, renderRectL.width, renderRectL.height);
									renderer.setScissor(renderRectL.x, renderRectL.y, renderRectL.width, renderRectL.height);
									renderer.render(scene, cameraL);

									// render right eye
									renderer.setViewport(renderRectR.x, renderRectR.y, renderRectR.width, renderRectR.height);
									renderer.setScissor(renderRectR.x, renderRectR.y, renderRectR.width, renderRectR.height);
									renderer.render(scene, cameraR);

									renderer.setScissorTest(false);

									if (autoUpdate) {

												scene.autoUpdate = true;
									}

									if (!isDeprecatedAPI) {

												vrHMD.submitFrame();
									}

									return;
						}

						// Regular render mode if not HMD

						renderer.render(scene, camera);
			};

			//

			function fovToNDCScaleOffset(fov) {

						var pxscale = 2.0 / (fov.leftTan + fov.rightTan);
						var pxoffset = (fov.leftTan - fov.rightTan) * pxscale * 0.5;
						var pyscale = 2.0 / (fov.upTan + fov.downTan);
						var pyoffset = (fov.upTan - fov.downTan) * pyscale * 0.5;
						return { scale: [pxscale, pyscale], offset: [pxoffset, pyoffset] };
			}

			function fovPortToProjection(fov, rightHanded, zNear, zFar) {

						rightHanded = rightHanded === undefined ? true : rightHanded;
						zNear = zNear === undefined ? 0.01 : zNear;
						zFar = zFar === undefined ? 10000.0 : zFar;

						var handednessScale = rightHanded ? -1.0 : 1.0;

						// start with an identity matrix
						var mobj = new Matrix4();
						var m = mobj.elements;

						// and with scale/offset info for normalized device coords
						var scaleAndOffset = fovToNDCScaleOffset(fov);

						// X result, map clip edges to [-w,+w]
						m[0 * 4 + 0] = scaleAndOffset.scale[0];
						m[0 * 4 + 1] = 0.0;
						m[0 * 4 + 2] = scaleAndOffset.offset[0] * handednessScale;
						m[0 * 4 + 3] = 0.0;

						// Y result, map clip edges to [-w,+w]
						// Y offset is negated because this proj matrix transforms from world coords with Y=up,
						// but the NDC scaling has Y=down (thanks D3D?)
						m[1 * 4 + 0] = 0.0;
						m[1 * 4 + 1] = scaleAndOffset.scale[1];
						m[1 * 4 + 2] = -scaleAndOffset.offset[1] * handednessScale;
						m[1 * 4 + 3] = 0.0;

						// Z result (up to the app)
						m[2 * 4 + 0] = 0.0;
						m[2 * 4 + 1] = 0.0;
						m[2 * 4 + 2] = zFar / (zNear - zFar) * -handednessScale;
						m[2 * 4 + 3] = zFar * zNear / (zNear - zFar);

						// W result (= Z in)
						m[3 * 4 + 0] = 0.0;
						m[3 * 4 + 1] = 0.0;
						m[3 * 4 + 2] = handednessScale;
						m[3 * 4 + 3] = 0.0;

						mobj.transpose();

						return mobj;
			}

			function fovToProjection(fov, rightHanded, zNear, zFar) {

						var DEG2RAD = Math.PI / 180.0;

						var fovPort = {
									upTan: Math.tan(fov.upDegrees * DEG2RAD),
									downTan: Math.tan(fov.downDegrees * DEG2RAD),
									leftTan: Math.tan(fov.leftDegrees * DEG2RAD),
									rightTan: Math.tan(fov.rightDegrees * DEG2RAD)
						};

						return fovPortToProjection(fovPort, rightHanded, zNear, zFar);
			}
};



var lib = Object.freeze({
	ammo: ammo,
	grahamScan: graham_scan_min,
	three: three_module,
	VRControls: VRControls,
	OrbitControls: OrbitControls,
	VREffect: VREffect,
	$: jquery2_1_4_min
});

/* global window */
var Camera$1 = function () {
    function Camera() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Camera);

        this._type = opts.type === undefined ? 'perspective' : opts.type;
        this._target = opts.target === undefined ? [0, 0, 0] : opts.target;
        this._aspectRatio = opts.aspect === undefined ? 1 : opts.apect;

        this.initialize(opts);
    }

    _createClass(Camera, [{
        key: 'initialize',
        value: function initialize() {
            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            if (this._type === 'perspective') {
                this.setPerspective(opts);
            } else {
                this.setOrthographic(opts);
            }

            var pos = opts.position === undefined ? [0, 0, 5] : opts.position;
            this.position = pos;

            var target = opts.target === undefined ? [0, 0, 0] : opts.target;
            this.target = target;

            this.initControls();
        }
    }, {
        key: 'setPerspective',
        value: function setPerspective(opts) {
            this._type = 'perspective';

            this.threeCamera = new PerspectiveCamera(opts.fov === undefined ? 75 : opts.fov, opts.aspect === undefined ? window.innerWidth / window.innerHeight : opts.aspect, opts.near === undefined ? 0.1 : opts.near, opts.far === undefined ? 10000 : opts.far);

            return this.threeCamera;
        }
    }, {
        key: 'setOrthographic',
        value: function setOrthographic(opts) {
            this._type = 'orthographic';

            this.threeCamera = new OrthographicCamera(opts.left === undefined ? -2 : opts.left, opts.right === undefined ? 2 : opts.right, opts.top === undefined ? 2 : opts.top, opts.bottom === undefined ? -2 : opts.bottom, opts.near === undefined ? 1 : opts.near, opts.far === undefined ? 2000 : opts.far);

            return this.threeCamera;
        }
    }, {
        key: 'initControls',
        value: function initControls() {
            var controls = new OrbitControls(this.threeCamera, jquery2_1_4_min('body')[0]);

            controls.rotateSpeed = 5.0;
            controls.zoomSpeed = 1.2;

            this.controls = controls;
        }
    }, {
        key: 'aspectRatio',
        set: function set(aspect) {
            this._aspect = aspect;
            if (this.type === 'perspective') {
                this.threeCamera.aspect = aspect;
            }
            this.threeCamera.updateProjectionMatrix();
        }
    }, {
        key: 'position',
        get: function get() {
            return [this.threeCamera.position.x, this.threeCamera.position.y, this.threeCamera.position.z];
        },
        set: function set(pos) {
            this.threeCamera.position.x = pos[0];
            this.threeCamera.position.y = pos[1];
            this.threeCamera.position.z = pos[2];
        }
    }, {
        key: 'positionX',
        set: function set(x) {
            this.threeCamera.position.x = x;
        }
    }, {
        key: 'positionY',
        set: function set(y) {
            this.threeCamera.position.y = y;
        }
    }, {
        key: 'positionZ',
        set: function set(z) {
            this.threeCamera.position.z = z;
        }
    }, {
        key: 'target',
        get: function get() {
            return this._target;
        },
        set: function set(target) {
            this._target[0] = target[0];
            this._target[1] = target[1];
            this._target[2] = target[2];

            this.threeCamera.lookAt(new Vector3(target[0], target[1], target[2]));
        }
    }, {
        key: 'type',
        get: function get() {
            return this._type;
        },
        set: function set(t) {
            this._type = t;
        }
    }]);

    return Camera;
}();

var VRCamera = function (_Camera) {
    _inherits(VRCamera, _Camera);

    function VRCamera() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, VRCamera);

        var _this = _possibleConstructorReturn(this, (VRCamera.__proto__ || _Object$getPrototypeOf(VRCamera)).call(this, opts));

        _this.vrControls = new VRControls(_this.threeCamera);
        _this.vrControls.standing = true;
        _this.positionY = _this.vrControls.userHeight;
        return _this;
    }

    _createClass(VRCamera, [{
        key: 'initialize',
        value: function initialize() {
            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _get(VRCamera.prototype.__proto__ || _Object$getPrototypeOf(VRCamera.prototype), 'initialize', this).call(this, opts);
        }
    }]);

    return VRCamera;
}(Camera$1);

/* global document, window */
var Renderer = function () {
    function Renderer() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var element = arguments[1];

        _classCallCheck(this, Renderer);

        this.cameraOptions = opts.cameraOptions;
        this.vrEnabled = opts.VR === undefined ? false : opts.VR;
        this.lightStyle = opts.lightStyle === undefined ? 'spotlight' : opts.lightStyle;

        this.initializeGL();
        this.initializeWorld();
        this.initializeDiv();

        this.entities = {};
        this.joints = {};

        this.callback = opts.callback;

        this.element = element === undefined ? 'body' : element;
    }

    _createClass(Renderer, [{
        key: 'initializeGL',
        value: function initializeGL() {
            this.renderer = new WebGLRenderer({
                antialias: true
            });

            this.renderer.setPixelRatio(window.devicePixelRatio);
            //        this.renderer.setClearColor(0xffffff, 1);

            if (this.vrEnabled) {
                this.enableVR();
            }
        }
    }, {
        key: 'initializeWorld',
        value: function initializeWorld() {
            this.scene = new Scene();

            if (this.vrEnabled) {
                this.camera = new VRCamera(this.cameraOptions);
            } else {
                this.camera = new Camera$1(this.cameraOptions);
            }

            this.scene.add(this.camera.threeCamera);

            this.light = new PointLight(0xfffffa, 1, 0);

            var pos = this.camera.position;

            this.light.position.set(pos[0], pos[1], pos[2]);
            this.scene.add(this.light);
        }
    }, {
        key: 'initializeDiv',
        value: function initializeDiv() {
            var _this = this;

            jquery2_1_4_min(document).ready(function () {
                document.body.appendChild(_this.renderer.domElement);
                _this.setSize();
            });

            //        window.addEventListener('resize', () => this.setSize(), true);
        }
    }, {
        key: 'enableVR',
        value: function enableVR() {
            this.effect = new VREffect(this.renderer);
            this.effect.setSize(window.innerWidth, window.innerHeight);
        }
    }, {
        key: 'setSize',
        value: function setSize() {
            var w = window.innerWidth;
            var h = window.innerHeight;

            this.renderer.setSize(w, h);

            if (this.vrEnabled && this.effect !== undefined) {
                this.effect.setSize(w, h);
            }

            this.camera.aspectRatio = w / h;
        }
    }, {
        key: 'setCallback',
        value: function setCallback(fn) {
            this.callback = fn;
        }
    }, {
        key: 'render',
        value: function render(time) {
            this.updateEntities();
            if (this.lightStyle === 'spotlight') {
                var pos = this.camera.position;
                this.light.position.set(pos[0], pos[1], pos[2]);
            }
            if (this.callback !== undefined) {
                this.callback(this.camera, time);
            }
            if (this.vrEnabled) {
                this.effect.render(this.scene, this.camera.threeCamera);
            } else {
                this.renderer.render(this.scene, this.camera.threeCamera);
            }
        }
    }, {
        key: 'updateEntities',
        value: function updateEntities() {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _getIterator(_Object$values(this.entities)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var e = _step.value;

                    var entity = e.entity;
                    var obj = e.object;

                    obj.position.x = entity.position[0];
                    obj.position.y = entity.position[1];
                    obj.position.z = entity.position[2];

                    obj.rotation.setFromQuaternion(new Quaternion(entity.orientation[1], entity.orientation[2], entity.orientation[3], entity.orientation[0]));
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = _getIterator(_Object$values(this.joints)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var j = _step2.value;

                    var joint = j.joint;
                    var _obj = j.object;

                    _obj.position.x = joint.position[0];
                    _obj.position.y = joint.position[1];
                    _obj.position.z = joint.position[2];
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }
    }, {
        key: 'addJoint',
        value: function addJoint(j) {
            var entity = { color: [255, 170, 0], getRadius: function getRadius() {
                    return 0.06;
                }
            };
            var obj = this.constructor.addSphere(entity);

            this.scene.add(obj);
            this.joints[j.id] = { object: obj, joint: j };
        }
    }, {
        key: 'addEntity',
        value: function addEntity(e, options) {
            var id = e.id;
            if (id in this.entities) {
                throw new Error('Cannot add entity. Entity with id ' + id + ' already exists.');
            }

            var obj = void 0;

            switch (e.type) {
                case 'SPHERE':
                    obj = this.constructor.createSphere(e, options);
                    break;
                case 'BOX':
                    obj = this.constructor.createBox(e, options);
                    break;
                case 'CAPSULE':
                    obj = this.constructor.createCapsule(e, options);
                    break;
                case 'CYLINDER':
                    obj = this.constructor.createCylinder(e, options);
                    break;
                default:
                    break;
            }

            this.scene.add(obj);

            this.entities[e.id] = { entity: e, object: obj };
        }
    }], [{
        key: 'createMeshAndOutline',
        value: function createMeshAndOutline(options) {
            var chuller = new graham_scan_min();
            var geom = new BufferGeometry();

            var vs = options.mesh.vertices;
            var fs = options.mesh.faces;
            var positions = new Float32Array(vs.length * 3);
            var indices = new Float32Array(fs.length * 3);

            for (var i = 0; i < vs.length; i++) {
                positions[i * 3 + 0] = vs[i][0];
                positions[i * 3 + 1] = vs[i][1];
                positions[i * 3 + 2] = vs[i][2];
            }

            for (var _i = 0; _i < fs.length; _i++) {
                indices[_i * 3 + 0] = fs[_i][0];
                indices[_i * 3 + 1] = fs[_i][1];
                indices[_i * 3 + 2] = fs[_i][2];

                chuller.addPoint(vs[fs[_i][0]][0], vs[fs[_i][0]][1]);
                chuller.addPoint(vs[fs[_i][1]][0], vs[fs[_i][1]][1]);
                chuller.addPoint(vs[fs[_i][2]][0], vs[fs[_i][2]][1]);
            }

            geom.setIndex(new BufferAttribute(indices, 1));
            geom.addAttribute('position', new BufferAttribute(positions, 3));

            geom.computeFaceNormals();
            geom.computeVertexNormals();

            var hullPoints = chuller.getHull();
            var lineGeo = new BufferGeometry();
            var lgPositions = new Float32Array(hullPoints.length * 3);
            for (var _i2 = 0; _i2 < hullPoints.length; _i2++) {
                lgPositions[_i2 * 3 + 0] = hullPoints[_i2].x;
                lgPositions[_i2 * 3 + 1] = hullPoints[_i2].y;
                lgPositions[_i2 * 3 + 2] = 0.003 + vs[0][2];
            }

            lineGeo.addAttribute('position', new BufferAttribute(lgPositions, 3));

            var lineMat = new LineBasicMaterial({ color: new Color(0, 0, 0) });
            var outline = new Line(lineGeo, lineMat);

            return [geom, outline];
        }
    }, {
        key: 'createBox',
        value: function createBox(e) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var c = options.mesh !== undefined && options.mesh.color !== undefined ? options.mesh.color : e.color;
            var cstring = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';
            //    const cstring = 'rgb(255,0,0)';
            var color = new Color(cstring);

            var obj3 = new Object3D();

            var geo = void 0;
            if (options.mesh === undefined) {
                var sides = e.sides;
                geo = new BoxBufferGeometry(sides[0], sides[1], sides[2]);
            } else {
                var ret = this.createMeshAndOutline(options);
                geo = ret[0];
                obj3.add(ret[1]);
            }

            var mat = void 0;
            if (options.shader === undefined) {
                mat = new MeshPhongMaterial({
                    color: color,
                    specular: 0x030303,
                    shininess: 10,
                    shading: SmoothShading
                });
            } else {
                mat = new ShaderMaterial({
                    vertexShader: document.getElementById(options.shader.vertexShader).textContent,
                    fragmentShader: document.getElementById(options.shader.fragmentShader).textContent
                });
            }

            var mesh = new Mesh(geo, mat);

            obj3.add(mesh);

            return obj3;
        }
    }, {
        key: 'createCapsule',
        value: function createCapsule(e) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var c = options.mesh !== undefined && options.mesh.color !== undefined ? options.mesh.color : e.color;

            var cstring = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';
            //    const cstring = 'rgb(255,0,0)';
            var color = new Color(cstring);

            var capsule = new Object3D();
            var mat = new MeshPhongMaterial({
                color: color,
                specular: 0x030303,
                shininess: 10,
                shading: SmoothShading
            });
            if (options.mesh === undefined) {
                var cylGeom = new CylinderBufferGeometry(e.radius, // top radius
                e.radius, // bottom radius
                e.height, 32, 4, true);
                var sphGeo = new SphereBufferGeometry(e.radius, 32, 32);
                var cylMesh = new Mesh(cylGeom, mat);
                var topMesh = new Mesh(sphGeo, mat);
                var btmMesh = new Mesh(sphGeo, mat);
                topMesh.position.y = e.getHeight() / 2.0;
                btmMesh.position.y = -e.getHeight() / 2.0;

                capsule.add(cylMesh);
                capsule.add(topMesh);
                capsule.add(btmMesh);
            } else {
                var ret = this.createMeshAndOutline(options);
                capsule.add(ret[0]);
                capsule.add(ret[1]);
            }

            return capsule;
        }
    }, {
        key: 'createCylinder',
        value: function createCylinder(e) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var c = options.mesh !== undefined && options.mesh.color !== undefined ? options.mesh.color : e.color;

            var cstring = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';
            var color = new Color(cstring);

            var cylinder = new Object3D();

            var mat = new MeshPhongMaterial({
                color: color,
                specular: 0x030303,
                shininess: 10,
                shading: SmoothShading
            });

            if (options.mesh === undefined) {
                var cylGeom = new CylinderBufferGeometry(e.radius, e.radius, e.height, 32, 4, false);
                var cylMesh = new Mesh(cylGeom, mat);
                cylinder.add(cylMesh);
            } else {
                var ret = this.createMeshAndOutline(options);
                cylinder.add(ret[0]);
                cylinder.add(ret[1]);
            }
            return cylinder;
        }
    }, {
        key: 'createSphere',
        value: function createSphere(e) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var c = options.mesh !== undefined && options.mesh.color !== undefined ? options.mesh.color : e.color;
            var cstring = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';
            //    const cstring = 'rgb(255,0,0)';
            var color = new Color(cstring);

            var sphere = new Object3D();

            if (options.mesh === undefined) {
                var geo = new SphereBufferGeometry(e.radius, 32, 32);
                var mat = new MeshPhongMaterial({
                    color: color,
                    specular: 0x030303,
                    shininess: 10,
                    shading: SmoothShading
                });
                var mesh = new Mesh(geo, mat);
                sphere.add(mesh);
            } else {
                var ret = this.createMeshAndOutline(options);
                sphere.add(ret[0]);
                sphere.add(ret[1]);
            }

            return sphere;
        }
    }]);

    return Renderer;
}();

// 19.1.2.14 Object.keys(O)


_objectSap('keys', function(){
  return function keys(it){
    return _objectKeys(_toObject(it));
  };
});

var keys$1 = _core.Object.keys;

var keys = createCommonjsModule(function (module) {
module.exports = { "default": keys$1, __esModule: true };
});

var _Object$keys = unwrapExports(keys);

/* eslint-disable new-cap */
// const toDeg = 180.0 / Math.PI;
var toRad = Math.PI / 180.0;
var trans = new ammo.btTransform(); // taking this out of the loop below us reduces the leaking
var Tpos = new ammo.btVector3(0, 0, 0);
var Tneg = new ammo.btVector3(0, 0, 0);

var Simulator = function () {
    function Simulator(dt, opts) {
        _classCallCheck(this, Simulator);

        this.dt = dt;

        this.opts = opts === undefined ? {} : opts;

        this.is2D = opts['2D'] === undefined ? false : opts['2D'];

        this.callback = this.opts.callback;

        this.entities = {};
        this.joints = {};

        this.initialize();
    }

    _createClass(Simulator, [{
        key: 'initialize',
        value: function initialize() {
            // every single |new| currently leaks...
            this.collisionConfiguration = new ammo.btDefaultCollisionConfiguration();
            this.dispatcher = new ammo.btCollisionDispatcher(this.collisionConfiguration);
            this.overlappingPairCache = new ammo.btDbvtBroadphase();
            this.solver = new ammo.btSequentialImpulseConstraintSolver();

            this.dynamicsWorld = new ammo.btDiscreteDynamicsWorld(this.dispatcher, this.overlappingPairCache, this.solver, this.collisionConfiguration);

            var gravity = this.opts.gravity === undefined ? [0, -9.81, 0] : this.opts.gravity;

            this.dynamicsWorld.setGravity(new ammo.btVector3(gravity[0], gravity[1], gravity[2]));
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            ammo.destroy(this.collisionConfiguration);
            ammo.destroy(this.dispatcher);
            ammo.destroy(this.overlappingPairCache);
            ammo.destroy(this.solver);
            // XXX gives an error for some reason,
            // |getBroadphase()->getOverlappingPairCache()->cleanProxyFromPairs(bp, m_dispatcher1);
            // | in btCollisionWorld.cpp throws a 'pure virtual' failure
            // Ammo.destroy(dynamicsWorld);
        }
    }, {
        key: 'setCallback',
        value: function setCallback(fn) {
            this.callback = fn;
        }
    }, {
        key: 'addJoint',
        value: function addJoint(j) {
            var joint = void 0;
            var type = j.type;
            if (type === 'BALL') {
                var pos = j.position;

                var posA = this.entities[j.parent.id].entity.position;
                var oriA = this.entities[j.parent.id].entity.orientation;

                var qA = new ammo.btQuaternion(oriA[1], oriA[2], oriA[3], oriA[0]);

                var jointPosInA = new ammo.btVector3(pos[0] - posA[0], pos[1] - posA[1], pos[2] - posA[2]);

                jointPosInA = jointPosInA.rotate(qA.getAxis().normalized(), -qA.getAngle());

                // Note: the vector.rotate function (and other functions labelled [Value] in the idl)
                // returns a singleton Vector3 instance. Therefore we need to clone it, otherwise
                // jointPosInB will refer to the same (singleton) instance as jointPosInA
                jointPosInA = new ammo.btVector3(jointPosInA.x(), jointPosInA.y(), jointPosInA.z());

                var posB = this.entities[j.child.id].entity.position;
                var oriB = this.entities[j.child.id].entity.orientation;

                var qB = new ammo.btQuaternion(oriB[1], oriB[2], oriB[3], oriB[0]);

                var jointPosInB = new ammo.btVector3(pos[0] - posB[0], pos[1] - posB[1], pos[2] - posB[2]);

                jointPosInB = jointPosInB.rotate(qB.getAxis().normalized(), -qB.getAngle());

                jointPosInB = new ammo.btVector3(jointPosInB.x(), jointPosInB.y(), jointPosInB.z());

                joint = new ammo.btPoint2PointConstraint(this.entities[j.parent.id].body, this.entities[j.child.id].body, jointPosInA, jointPosInB);

                /*
                if (j.limits['X'] !== undefined) {
                    joint.setLimit(3, j.limits['X'][0]*Math.PI/180, j.limits['X'][1]*Math.PI/180);
                }
                if (j.limits['Y'] !== undefined) {
                    joint.setLimit(4, j.limits['Y'][0]*Math.PI/180, j.limits['Y'][1]*Math.PI/180);
                }
                if (j.limits['Z'] !== undefined) {
                    joint.setLimit(5, j.limits['Z'][0]*Math.PI/180, j.limits['Z'][1]*Math.PI/180);
                }
                */
                /*
                if (j.B === undefined) {
                    joint = new Ammo.btPoint2PointConstraint(
                        this.entities[j.A].body,
                        new Ammo.btVector3(jointPosInA[0], jointPosInA[1], jointPosInA[2])
                    );
                }
                */
            } else if (type === 'HINGE') {
                // const axis = j.axis;
                var _pos = j.position;
                var _posA = this.entities[j.parent.id].entity.position;
                var _jointPosInA = [_pos[0] - _posA[0], _pos[1] - _posA[1], _pos[2] - _posA[2]];

                if (j.child !== undefined) {
                    var _posB = this.entities[j.child.id].entity.position;
                    var _jointPosInB = [_pos[0] - _posB[0], _pos[1] - _posB[1], _pos[2] - _posB[2]];
                    joint = new ammo.btHingeConstraint(this.entities[j.parent.id].body, this.entities[j.child.id].body, new ammo.btVector3(_jointPosInA[0], _jointPosInA[1], _jointPosInA[2]), new ammo.btVector3(_jointPosInB[0], _jointPosInB[1], _jointPosInB[2]), new ammo.btVector3(j.axis[0], j.axis[1], j.axis[2]), new ammo.btVector3(j.axis[0], j.axis[1], j.axis[2]), false);
                } else {
                    // TODO: FIX ME?
                    // THIS DOESNT WORK

                    joint = new ammo.btHingeConstraint(this.entities[j.parent.id].body, new ammo.btVector3(_jointPosInA[0], _jointPosInA[1], _jointPosInA[2]), new ammo.btVector3(j.axis[0], j.axis[1], j.axis[2]), false);
                }

                if (j.lo !== undefined) {
                    joint.setLimit(j.lo * toRad, j.hi * toRad, 0.1, 1.0, 0.3);
                    //            joint.setLimit(-0.1, 0.1, 0.8, .3, .9);
                }
            }

            this.dynamicsWorld.addConstraint(joint);

            this.joints[j.id] = { joint: j, jointBullet: joint };
        }
    }, {
        key: 'addEntity',
        value: function addEntity(e) {
            var shape = void 0;
            switch (e.type) {
                case 'SPHERE':
                    shape = new ammo.btSphereShape(e.radius);
                    break;
                case 'BOX':
                    shape = new ammo.btBoxShape(new ammo.btVector3(e.sides[0] / 2.0, e.sides[1] / 2.0, e.sides[2] / 2.0));
                    break;
                case 'CAPSULE':
                    shape = new ammo.btCapsuleShape(e.radius, e.height);
                    break;
                case 'CYLINDER':
                    shape = new ammo.btCylinderShape(new ammo.btVector3(e.radius, e.height / 2.0, e.radius));
                    break;
                default:
                    throw new Error('Simulator.addEntity: Unknown type');

            }

            var startTransform = new ammo.btTransform();
            startTransform.setIdentity();

            var mass = e.mass;
            var isDynamic = mass !== 0;

            var localInertia = new ammo.btVector3(0, 0, 0);

            if (isDynamic) {
                shape.calculateLocalInertia(mass, localInertia);
            }

            var pos = e.position;
            startTransform.setOrigin(new ammo.btVector3(pos[0], pos[1], pos[2]));

            var ori = e.orientation;
            if (ori) {
                startTransform.setRotation(new ammo.btQuaternion(ori[1], ori[2], ori[3], ori[0]));
            }

            var myMotionState = new ammo.btDefaultMotionState(startTransform);
            var rbInfo = new ammo.btRigidBodyConstructionInfo(mass, myMotionState, shape, localInertia);
            var body = new ammo.btRigidBody(rbInfo);

            // SET 2D
            if (this.is2D) {
                body.setLinearFactor(new ammo.btVector3(1, 1, 0));
                body.setAngularFactor(new ammo.btVector3(0, 0, 1));
            }
            //    body.setAngularFactor(new Ammo.btVector3(1, 0, 1));

            if (e.character !== null) {
                var thisGroup = e.character.collisionGroup;
                var thisMask = thisGroup ^ 65535; // collide with everything but itself
                this.dynamicsWorld.addRigidBody(body, thisGroup, thisMask);
            } else {
                this.dynamicsWorld.addRigidBody(body);
            }

            this.entities[e.id] = { entity: e, body: body };
        }
    }, {
        key: 'updateEntity',
        value: function updateEntity(id) {
            if (this.entities[id] === undefined) {
                throw new Error('Unknown Entity with id ' + id);
            }
            var e = this.entities[id];
            var entity = e.entity;
            var body = e.body;

            // NOTE: Directly setting the collision filter group/mask doesn't seem to
            // work if a constraint between masked entities is "active".
            // Instead, just remove and re-add the rigid body
            this.dynamicsWorld.removeRigidBody(body);
            var thisGroup = 0;
            var thisMask = 0;
            if (entity.character !== null) {
                thisGroup = entity.character.collisionGroup;
                thisMask = thisGroup ^ 65535; // collide with everything but itself
                this.dynamicsWorld.addRigidBody(body, thisGroup, thisMask);
            } else {
                this.dynamicsWorld.addRigidBody(body);
            }
        }
    }, {
        key: 'step',
        value: function step(callback) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _getIterator(_Object$keys(this.joints)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var id = _step.value;

                    var j = this.joints[id].joint;
                    var A = this.entities[j.parent.id].body;
                    var B = this.entities[j.child.id].body;

                    if (A.isActive() === 0) {
                        A.setActivationState(1);
                    }

                    if (B.isActive() === 0) {
                        B.setActivationState(1);
                    }

                    var T = j.getLimitedTorque();

                    Tpos.setX(T[0]);Tneg.setX(-T[0]);
                    Tpos.setY(T[1]);Tneg.setY(-T[1]);
                    Tpos.setZ(T[2]);Tneg.setZ(-T[2]);

                    A.applyTorque(Tpos);
                    B.applyTorque(Tneg);

                    j.resetTorque();
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            this.dynamicsWorld.stepSimulation(this.dt, 1, this.dt);

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = _getIterator(_Object$keys(this.entities)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var _id = _step2.value;

                    var e = this.entities[_id];
                    var body = e.body;
                    body.activate();
                    var entity = e.entity;
                    if (body.getMotionState()) {
                        body.getMotionState().getWorldTransform(trans);
                        var pos = [trans.getOrigin().x(), trans.getOrigin().y(), trans.getOrigin().z()];

                        var rot = trans.getRotation().normalized();
                        entity.position = pos;
                        entity.orientation = [rot.w(), rot.x(), rot.y(), rot.z()];

                        var angVel = body.getAngularVelocity();
                        entity.angularVelocity = [angVel.x(), angVel.y(), angVel.z()];
                    }
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;

            try {
                for (var _iterator3 = _getIterator(_Object$keys(this.joints)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                    var _id2 = _step3.value;

                    var _j = this.joints[_id2];
                    var jointEntity = _j.joint;
                    var jointBullet = _j.jointBullet;
                    if (jointEntity.type === 'HINGE') {
                        jointEntity.updateAngle(jointBullet.getHingeAngle(), this.dt);
                        var tform = jointBullet.getFrameOffsetA();

                        var _body = jointBullet.getRigidBodyA();
                        _body.getMotionState().getWorldTransform(trans);

                        var _pos2 = [trans.getOrigin().x(), trans.getOrigin().y(), trans.getOrigin().z()];

                        var jointVec = [tform.getOrigin().x(), tform.getOrigin().y(), tform.getOrigin().z()];

                        var axis = trans.getRotation().normalized();
                        var vec = utils.rotateVector(jointVec, utils.RFromQuaternion([axis.w(), axis.x(), axis.y(), axis.z()]));

                        jointEntity.position = [_pos2[0] + vec[0], _pos2[1] + vec[1], _pos2[2] + vec[2]];
                    } else if (jointEntity.type === 'BALL') {
                        jointEntity.calculateOrientation();
                        jointEntity.calculateAngularVelocity();
                    }
                }
            } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                        _iterator3.return();
                    }
                } finally {
                    if (_didIteratorError3) {
                        throw _iteratorError3;
                    }
                }
            }

            if (this.callback !== undefined) {
                this.callback(this.dt);
            }
        }
    }]);

    return Simulator;
}();


/* eslint-enable */

var ITERATOR$4  = _wks('iterator');
var core_isIterable = _core.isIterable = function(it){
  var O = Object(it);
  return O[ITERATOR$4] !== undefined
    || '@@iterator' in O
    || _iterators.hasOwnProperty(_classof(O));
};

var isIterable$2 = core_isIterable;

var isIterable = createCommonjsModule(function (module) {
module.exports = { "default": isIterable$2, __esModule: true };
});

var slicedToArray = createCommonjsModule(function (module, exports) {
"use strict";

exports.__esModule = true;



var _isIterable3 = _interopRequireDefault(isIterable);



var _getIterator3 = _interopRequireDefault(getIterator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
});

var _slicedToArray = unwrapExports(slicedToArray);

// https://github.com/tc39/proposal-object-values-entries
var $entries = _objectToArray(true);

_export(_export.S, 'Object', {
  entries: function entries(it){
    return $entries(it);
  }
});

var entries$1 = _core.Object.entries;

var entries = createCommonjsModule(function (module) {
module.exports = { "default": entries$1, __esModule: true };
});

var _Object$entries = unwrapExports(entries);

/* global requestAnimationFrame, navigator, performance */
var World = function () {
    function World() {
        var _this = this;

        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var element = arguments[1];

        _classCallCheck(this, World);

        this.dt = opts.dt === undefined ? 0.0001 : opts.dt;
        this.is2D = opts['2D'] === undefined ? false : opts['2D'];

        this.vrEnabled = opts.VR === undefined ? false : opts.VR;

        if (this.vrEnabled) {
            this.vrReady = false;
            // eslint-disable-next-line no-param-reassign
            navigator.getVRDisplays().then(function (displays) {
                if (displays.length > 0) {
                    _this.vrDisplay = displays[0];
                    if (_this.vrDisplay.stageParameters) {
                        //                        this.setupVR(this.vrDisplay.stageParameters);
                        _this.vrReady = true;
                    }
                    if (opts.vrReadyCallback) {
                        opts.vrReadyCallback(_this.vrDisplay);
                    }
                }
            });
        }

        this.renderer = new Renderer({
            cameraOptions: opts.cameraOptions,
            VR: this.vrEnabled
        }, element);

        this.simulator = new Simulator(this.dt, { '2D': this.is2D });

        this.entities = {};
        this.joints = {};
        this.characters = {};
    }

    _createClass(World, [{
        key: 'addJoint',
        value: function addJoint(j) {
            var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var render = opts.render === undefined ? false : opts.render;

            var id = j.id;
            if (id in this.joints) {
                throw new Error('Cannot add joint. Joint with id ' + id + ' already exists.');
            }

            if (render) {
                this.renderer.addJoint(j);
            }

            this.simulator.addJoint(j);

            this.joints[id] = j;
        }
    }, {
        key: 'addEntity',
        value: function addEntity(e) {
            var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var render = opts.render === undefined ? true : opts.render;

            var simulate = opts.simulate === undefined ? true : opts.simulate;

            var id = e.id;
            if (id in this.entities) {
                throw new Error('Cannot add entity. Entity with id ' + id + ' already exists.');
            }

            if (render) {
                this.renderer.addEntity(e, opts);
            }

            if (simulate) {
                this.simulator.addEntity(e);
            }

            this.entities[id] = e;

            e.world = this;
        }
    }, {
        key: 'hasEntity',
        value: function hasEntity(e) {
            return e.id in this.entities && this.entities[e.id] === e;
        }
    }, {
        key: 'hasJoint',
        value: function hasJoint(j) {
            return j.id in this.joints && this.joints[j.id] === j;
        }
    }, {
        key: 'addCharacter',
        value: function addCharacter(character) {
            var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _getIterator(_Object$entries(character.entities)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var _step$value = _slicedToArray(_step.value, 2),
                        fullname = _step$value[0],
                        entity = _step$value[1];

                    var name = fullname.slice(fullname.indexOf('.') + 1);
                    var eOpts = {};
                    if (opts !== undefined && opts.meshOverlay !== undefined) {
                        var mesh = {
                            faces: opts.meshOverlay[name].faces,
                            vertices: opts.meshOverlay[name].vertices,
                            color: opts.meshOverlay[name].color
                        };
                        eOpts.mesh = mesh;
                    }
                    if (!this.hasEntity(entity)) {
                        this.addEntity(entity, eOpts);
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = _getIterator(_Object$values(character.joints)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var joint = _step2.value;

                    if (!this.hasJoint(joint)) {
                        this.addJoint(joint);
                    }
                }

                // eslint-disable-next-line no-param-reassign
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            character.world = this;
        }
    }, {
        key: 'updateEntity',
        value: function updateEntity(id) {
            this.simulator.updateEntity(id);
        }
    }, {
        key: 'go',
        value: function go(_ref) {
            var _ref$autoSimulate = _ref.autoSimulate,
                autoSimulate = _ref$autoSimulate === undefined ? true : _ref$autoSimulate,
                simulationCallback = _ref.simulationCallback,
                renderCallback = _ref.renderCallback;

            var scope = this;

            this.simulator.setCallback(simulationCallback);
            this.renderer.setCallback(renderCallback);

            var elapsed = 0;

            var last = void 0;

            var dtMS = scope.dt * 1000;

            // maximum time to simulate per frame. This limits elapsed time.
            // requestAnimationFrame will pause if the page is not shown (switched tabs etc),
            // so when we resume, elapsed time will be a massive number.
            // The choice of 16.66 corresponds to 60fps
            var MAX_SIMULATION_TIME_PER_FRAME = 16.66;

            var renderTime = 8;

            function animate(now) {
                elapsed = now - last;
                elapsed = Math.min(MAX_SIMULATION_TIME_PER_FRAME, elapsed);
                var simulationTime = 0;
                if (autoSimulate) {
                    var realTime = performance.now() - now;
                    while (simulationTime < elapsed && realTime < elapsed - 2 * renderTime) {
                        scope.step();
                        simulationTime += dtMS;
                        realTime = performance.now() - now;
                    }
                }

                if (scope.vrEnabled) {
                    scope.renderer.camera.vrControls.update();
                }

                var renderStart = performance.now();
                scope.render(simulationTime / elapsed);
                renderTime = performance.now() - renderStart;

                last = now;

                if (scope.vrEnabled && scope.vrReady) {
                    scope.vrDisplay.requestAnimationFrame(animate);
                } else {
                    requestAnimationFrame(animate);
                }
            }
            last = performance.now();
            requestAnimationFrame(animate);
        }
    }, {
        key: 'render',
        value: function render(time) {
            this.renderer.render(time);
        }
    }, {
        key: 'step',
        value: function step() {
            this.simulator.step();
        }
    }]);

    return World;
}();

var Coach = {
    version: '0.0.1',

    controllers: controllers,
    entities: entities,
    joints: joints,
    utils: utils,

    Character: Character,
    Renderer: Renderer,
    Simulator: Simulator,
    World: World,

    lib: lib
};

return Coach;

})));
